Class {
	#name : #SRTff3216f86a723f2c23b03b5cd1f622eb1a204159,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTff3216f86a723f2c23b03b5cd1f622eb1a204159 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMjsKCmNvbnRyYWN0IFZhbGVudGluZVJlZ2lzdHJ5IHsKCiAgICBldmVudCBMb2dWYWxlbnRpbmVSZXF1ZXN0Q3JlYXRlZChzdHJpbmcgcmVxdWVzdGVyTmFtZSwgc3RyaW5nIHZhbGVudGluZU5hbWUsIHN0cmluZyBjdXN0b21NZXNzYWdlLCBhZGRyZXNzIHZhbGVudGluZUFkZHJlc3MsIGFkZHJlc3MgcmVxdWVzdGVyQWRkcmVzcyk7CiAgICBldmVudCBMb2dSZXF1ZXN0QWNjZXB0ZWQoYWRkcmVzcyByZXF1ZXN0ZXJBZGRyZXNzKTsKCiAgICBzdHJ1Y3QgUmVxdWVzdCB7CiAgICAgICAgc3RyaW5nIHJlcXVlc3Rlck5hbWU7CiAgICAgICAgc3RyaW5nIHZhbGVudGluZU5hbWU7CiAgICAgICAgc3RyaW5nIGN1c3RvbU1lc3NhZ2U7CiAgICAgICAgYm9vbCBkb2VzRXhpc3Q7CiAgICAgICAgYm9vbCB3YXNBY2NlcHRlZDsKICAgICAgICBhZGRyZXNzIHZhbGVudGluZUFkZHJlc3M7CiAgICB9CiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKICAgIC8vIFJlcXVlc3RzIG1hcHMgcmVxdWVzdGVyIGFkZHJlc3NlcyB0byB0aGUgcmVxdWVzdHMgZGV0YWlscwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBSZXF1ZXN0KSBwcml2YXRlIHJlcXVlc3RzOwogICAgdWludCBwdWJsaWMgbnVtUmVxdWVzdGVyczsKICAgIGFkZHJlc3NbXSBwdWJsaWMgcmVxdWVzdGVyczsKICAgIGFkZHJlc3MgY29uc3RhbnQgQUREUkVTU19OVUxMID0gMDsKICAgIHVpbnQgY29uc3RhbnQgTUFYX0NVU1RPTV9NRVNTQUdFX0xFTkdUSCA9IDE0MDsKICAgIHVpbnQgY29uc3RhbnQgTUFYX05BTUVfTEVOR1RIID0gMjU7CiAgICB1aW50IGNvbnN0YW50IENPU1QgPSAwLjEgZXRoZXI7CgogICAgbW9kaWZpZXIgcmVzdHJpY3RlZCgpIHsKICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lcikKICAgICAgICAgICAgdGhyb3c7CiAgICAgICAgXzsKICAgIH0KICAgIG1vZGlmaWVyIGNvc3RzKHVpbnQgX2Ftb3VudCkgewogICAgICAgIGlmIChtc2cudmFsdWUgPCBfYW1vdW50KQogICAgICAgICAgICB0aHJvdzsKICAgICAgICBfOwogICAgfQogICAgbW9kaWZpZXIgcHJvaGliaXRSZXF1ZXN0VXBkYXRlcygpIHsKICAgICAgICBpZiAocmVxdWVzdHNbbXNnLnNlbmRlcl0uZG9lc0V4aXN0KQogICAgICAgICAgICB0aHJvdzsKICAgICAgICBfOwogICAgfQoKICAgIGZ1bmN0aW9uIFZhbGVudGluZVJlZ2lzdHJ5KCkgewogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgIH0KCiAgICAvLyBDcmVhdGVzIGEgdmFsZW50aW5lIHJlcXVlc3QgdGhhdCBjYW4gb25seSBiZSBhY2NlcHRlZCBieSB0aGUgc3BlY2lmaWVkIHZhbGVudGluZUFkZHJlc3MKICAgIGZ1bmN0aW9uIGNyZWF0ZVRhcmdldGVkVmFsZW50aW5lUmVxdWVzdChzdHJpbmcgcmVxdWVzdGVyTmFtZSwgc3RyaW5nIHZhbGVudGluZU5hbWUsCiAgICAgICAgc3RyaW5nIGN1c3RvbU1lc3NhZ2UsIGFkZHJlc3MgdmFsZW50aW5lQWRkcmVzcykKICAgICAgICBjb3N0cyhDT1NUKQogICAgICAgIHByb2hpYml0UmVxdWVzdFVwZGF0ZXMKICAgICAgICBwYXlhYmxlCiAgICAgICAgcHVibGljIHsKICAgICAgICBjcmVhdGVOZXdWYWxlbnRpbmVSZXF1ZXN0KHJlcXVlc3Rlck5hbWUsIHZhbGVudGluZU5hbWUsIGN1c3RvbU1lc3NhZ2UsIHZhbGVudGluZUFkZHJlc3MpOwogICAgfQoKICAgIC8vIENyZWF0ZXMgYSB2YWxlbnRpbmUgcmVxdWVzdCB0aGF0IGNhbiBiZSBmdWxsZmlsbGVkIGJ5IGFueSBhZGRyZXNzCiAgICBmdW5jdGlvbiBjcmVhdGVPcGVuVmFsZW50aW5lUmVxdWVzdChzdHJpbmcgcmVxdWVzdGVyTmFtZSwgc3RyaW5nIHZhbGVudGluZU5hbWUsIHN0cmluZyBjdXN0b21NZXNzYWdlKQogICAgICAgIGNvc3RzKENPU1QpCiAgICAgICAgcHJvaGliaXRSZXF1ZXN0VXBkYXRlcwogICAgICAgIHBheWFibGUKICAgICAgICBwdWJsaWMgewogICAgICAgIGNyZWF0ZU5ld1ZhbGVudGluZVJlcXVlc3QocmVxdWVzdGVyTmFtZSwgdmFsZW50aW5lTmFtZSwgY3VzdG9tTWVzc2FnZSwgQUREUkVTU19OVUxMKTsKICAgIH0KCiAgICBmdW5jdGlvbiBjcmVhdGVOZXdWYWxlbnRpbmVSZXF1ZXN0KHN0cmluZyByZXF1ZXN0ZXJOYW1lLCBzdHJpbmcgdmFsZW50aW5lTmFtZSwgc3RyaW5nIGN1c3RvbU1lc3NhZ2UsCiAgICAgICAgYWRkcmVzcyB2YWxlbnRpbmVBZGRyZXNzKQogICAgICAgIGludGVybmFsIHsKICAgICAgICBpZiAoYnl0ZXMocmVxdWVzdGVyTmFtZSkubGVuZ3RoID4gTUFYX05BTUVfTEVOR1RIIHx8IGJ5dGVzKHZhbGVudGluZU5hbWUpLmxlbmd0aCA+IE1BWF9OQU1FX0xFTkdUSAogICAgICAgICAgICB8fCBieXRlcyhjdXN0b21NZXNzYWdlKS5sZW5ndGggPiBNQVhfQ1VTVE9NX01FU1NBR0VfTEVOR1RIKSB7CiAgICAgICAgICAgIHRocm93OyAvLyBpbnZhbGlkIHJlcXVlc3QKICAgICAgICB9CiAgICAgICAgYm9vbCBkb2VzRXhpc3QgPSB0cnVlOwogICAgICAgIGJvb2wgd2FzQWNjZXB0ZWQgPSBmYWxzZTsKICAgICAgICBSZXF1ZXN0IG1lbW9yeSByID0gUmVxdWVzdChyZXF1ZXN0ZXJOYW1lLCB2YWxlbnRpbmVOYW1lLCBjdXN0b21NZXNzYWdlLCBkb2VzRXhpc3QsCiAgICAgICAgd2FzQWNjZXB0ZWQsIHZhbGVudGluZUFkZHJlc3MpOwogICAgICAgIHJlcXVlc3RlcnMucHVzaChtc2cuc2VuZGVyKTsKICAgICAgICBudW1SZXF1ZXN0ZXJzKys7CiAgICAgICAgcmVxdWVzdHNbbXNnLnNlbmRlcl0gPSByOwogICAgICAgIExvZ1ZhbGVudGluZVJlcXVlc3RDcmVhdGVkKHJlcXVlc3Rlck5hbWUsIHZhbGVudGluZU5hbWUsIGN1c3RvbU1lc3NhZ2UsIHZhbGVudGluZUFkZHJlc3MsIG1zZy5zZW5kZXIpOwogICAgfQoKICAgIGZ1bmN0aW9uIGFjY2VwdFZhbGVudGluZVJlcXVlc3QoYWRkcmVzcyByZXF1ZXN0ZXJBZGRyZXNzKSBwdWJsaWMgewogICAgICAgIFJlcXVlc3QgcmVxdWVzdCA9IHJlcXVlc3RzW3JlcXVlc3RlckFkZHJlc3NdOwogICAgICAgIGlmICghcmVxdWVzdC5kb2VzRXhpc3QpIHsKICAgICAgICAgICAgdGhyb3c7IC8vIHRoZSByZXF1ZXN0IGRvZXNuJ3QgZXhpc3QKICAgICAgICB9CiAgICAgICAgcmVxdWVzdC53YXNBY2NlcHRlZCA9IHRydWU7CiAgICAgICAgTG9nUmVxdWVzdEFjY2VwdGVkKHJlcXVlc3RlckFkZHJlc3MpOwogICAgfQoKICAgIGZ1bmN0aW9uIGdldFJlcXVlc3RCeVJlcXVlc3RlckFkZHJlc3MoYWRkcmVzcyByZXF1ZXN0ZXJBZGRyZXNzKSBwdWJsaWMgcmV0dXJucyAoc3RyaW5nLCBzdHJpbmcsIHN0cmluZywgYm9vbCwgYWRkcmVzcywgYWRkcmVzcykgewogICAgICAgIFJlcXVlc3QgciA9IHJlcXVlc3RzW3JlcXVlc3RlckFkZHJlc3NdOwogICAgICAgIGlmICghci5kb2VzRXhpc3QpIHsKICAgICAgICAgICAgcmV0dXJuICgiIiwgIiIsICIiLCBmYWxzZSwgQUREUkVTU19OVUxMLCBBRERSRVNTX05VTEwpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gKHIucmVxdWVzdGVyTmFtZSwgci52YWxlbnRpbmVOYW1lLCByLmN1c3RvbU1lc3NhZ2UsIHIud2FzQWNjZXB0ZWQsIHIudmFsZW50aW5lQWRkcmVzcywgcmVxdWVzdGVyQWRkcmVzcyk7CiAgICB9CgogICAgZnVuY3Rpb24gZ2V0UmVxdWVzdEJ5SW5kZXgodWludCBpbmRleCkgcHVibGljIHJldHVybnMgKHN0cmluZywgc3RyaW5nLCBzdHJpbmcsIGJvb2wsIGFkZHJlc3MsIGFkZHJlc3MpIHsKICAgICAgICBpZiAoaW5kZXggPj0gcmVxdWVzdGVycy5sZW5ndGgpIHsKICAgICAgICAgICAgdGhyb3c7CiAgICAgICAgfQogICAgICAgIGFkZHJlc3MgcmVxdWVzdGVyQWRkcmVzcyA9IHJlcXVlc3RlcnNbaW5kZXhdOwogICAgICAgIFJlcXVlc3QgciA9IHJlcXVlc3RzW3JlcXVlc3RlckFkZHJlc3NdOwogICAgICAgIHJldHVybiAoci5yZXF1ZXN0ZXJOYW1lLCByLnZhbGVudGluZU5hbWUsIHIuY3VzdG9tTWVzc2FnZSwgci53YXNBY2NlcHRlZCwgci52YWxlbnRpbmVBZGRyZXNzLCByZXF1ZXN0ZXJBZGRyZXNzKTsKICAgIH0KCiAgICBmdW5jdGlvbiB1cGRhdGVPd25lcihhZGRyZXNzIG5ld093bmVyKQogICAgICAgIHJlc3RyaWN0ZWQKICAgICAgICBwdWJsaWMgewogICAgICAgIG93bmVyID0gbmV3T3duZXI7CiAgICB9CgogICAgZnVuY3Rpb24gY2FzaG91dChhZGRyZXNzIHJlY2lwaWVudCkKICAgICAgICByZXN0cmljdGVkCiAgICAgICAgcHVibGljIHsKICAgICAgICBhZGRyZXNzIGNvbnRyYWN0QWRkcmVzcyA9IHRoaXM7CiAgICAgICAgaWYgKCFyZWNpcGllbnQuc2VuZChjb250cmFjdEFkZHJlc3MuYmFsYW5jZSkpIHsKICAgICAgICAgICAgdGhyb3c7CiAgICAgICAgfQogICAgfQp9'.
	

]
