Class {
	#name : #SRTc659ce6f672cee023c6420afbd2699f37417d38f,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTc659ce6f672cee023c6420afbd2699f37417d38f >> base64 [
	^ 'LyoqCiAqIGh0dHBzOi8vY2hhbmdlcmV4LmNvbQogKi8KCi8qKgogKiBAdGl0bGUgU2FmZU1hdGgKICogQGRldiBNYXRoIG9wZXJhdGlvbnMgd2l0aCBzYWZldHkgY2hlY2tzIHRoYXQgdGhyb3cgb24gZXJyb3IKICovCmxpYnJhcnkgU2FmZU1hdGggewogIGZ1bmN0aW9uIG11bCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSAqIGI7CiAgICBhc3NlcnQoYSA9PSAwIHx8IGMgLyBhID09IGIpOwogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBkaXYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIC8vIGFzc2VydChiID4gMCk7IC8vIFNvbGlkaXR5IGF1dG9tYXRpY2FsbHkgdGhyb3dzIHdoZW4gZGl2aWRpbmcgYnkgMAogICAgdWludDI1NiBjID0gYSAvIGI7CiAgICAvLyBhc3NlcnQoYSA9PSBiICogYyArIGEgJSBiKTsgLy8gVGhlcmUgaXMgbm8gY2FzZSBpbiB3aGljaCB0aGlzIGRvZXNuJ3QgaG9sZAogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBzdWIodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIGFzc2VydChiIDw9IGEpOwogICAgcmV0dXJuIGEgLSBiOwogIH0KCiAgZnVuY3Rpb24gYWRkKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhICsgYjsKICAgIGFzc2VydChjID49IGEpOwogICAgcmV0dXJuIGM7CiAgfQp9CgovKioKICogQHRpdGxlIEVSQzIwQmFzaWMKICogQGRldiBTaW1wbGVyIHZlcnNpb24gb2YgRVJDMjAgaW50ZXJmYWNlCiAqIEBkZXYgc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8xNzkKICovCmNvbnRyYWN0IEVSQzIwQmFzaWMgewogIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5OwogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIHdobykgcHVibGljICBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KTsKICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIHRvLCB1aW50MjU2IHZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CiAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiB2YWx1ZSk7Cn0KLyoqCiAqIEB0aXRsZSBFUkMyMCBpbnRlcmZhY2UKICogQGRldiBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL0VJUHMvaXNzdWVzLzIwCiAqLwpjb250cmFjdCBFUkMyMCBpcyBFUkMyMEJhc2ljIHsKICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBvd25lciwgYWRkcmVzcyBzcGVuZGVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nik7CiAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgZnJvbSwgYWRkcmVzcyB0bywgdWludDI1NiB2YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpOwogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBzcGVuZGVyLCB1aW50MjU2IHZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CiAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIG93bmVyLCBhZGRyZXNzIGluZGV4ZWQgc3BlbmRlciwgdWludDI1NiB2YWx1ZSk7Cn0KCi8qKgogKiBAdGl0bGUgQmFzaWMgdG9rZW4KICogQGRldiBCYXNpYyB2ZXJzaW9uIG9mIFN0YW5kYXJkVG9rZW4sIHdpdGggbm8gYWxsb3dhbmNlcy4gCiAqLwpjb250cmFjdCBCYXNpY1Rva2VuIGlzIEVSQzIwQmFzaWMgewogIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwoKICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikgYmFsYW5jZXM7CgogIC8qKgogICogQGRldiB0cmFuc2ZlciB0b2tlbiBmb3IgYSBzcGVjaWZpZWQgYWRkcmVzcwogICogQHBhcmFtIF90byBUaGUgYWRkcmVzcyB0byB0cmFuc2ZlciB0by4KICAqIEBwYXJhbSBfdmFsdWUgVGhlIGFtb3VudCB0byBiZSB0cmFuc2ZlcnJlZC4KICAqLwogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gYmFsYW5jZXNbbXNnLnNlbmRlcl0uc3ViKF92YWx1ZSk7CiAgICBiYWxhbmNlc1tfdG9dID0gYmFsYW5jZXNbX3RvXS5hZGQoX3ZhbHVlKTsKICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgLyoqCiAgKiBAZGV2IEdldHMgdGhlIGJhbGFuY2Ugb2YgdGhlIHNwZWNpZmllZCBhZGRyZXNzLgogICogQHBhcmFtIF9vd25lciBUaGUgYWRkcmVzcyB0byBxdWVyeSB0aGUgdGhlIGJhbGFuY2Ugb2YuIAogICogQHJldHVybiBBbiB1aW50MjU2IHJlcHJlc2VudGluZyB0aGUgYW1vdW50IG93bmVkIGJ5IHRoZSBwYXNzZWQgYWRkcmVzcy4KICAqLwogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcilwdWJsaWMgIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgewogICAgcmV0dXJuIGJhbGFuY2VzW19vd25lcl07CiAgfQoKfQoKLyoqCiAqIEB0aXRsZSBTdGFuZGFyZCBFUkMyMCB0b2tlbgogKgogKiBAZGV2IEltcGxlbWVudGF0aW9uIG9mIHRoZSBiYXNpYyBzdGFuZGFyZCB0b2tlbi4KICogQGRldiBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9pc3N1ZXMvMjAKICogQGRldiBCYXNlZCBvbiBjb2RlIGJ5IEZpcnN0Qmxvb2Q6IGh0dHBzOi8vZ2l0aHViLmNvbS9GaXJzdGJsb29kaW8vdG9rZW4vYmxvYi9tYXN0ZXIvc21hcnRfY29udHJhY3QvRmlyc3RCbG9vZFRva2VuLnNvbAogKi8KY29udHJhY3QgU3RhbmRhcmRUb2tlbiBpcyBFUkMyMCwgQmFzaWNUb2tlbiB7CgogIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsKCgogIC8qKgogICAqIEBkZXYgVHJhbnNmZXIgdG9rZW5zIGZyb20gb25lIGFkZHJlc3MgdG8gYW5vdGhlcgogICAqIEBwYXJhbSBfZnJvbSBhZGRyZXNzIFRoZSBhZGRyZXNzIHdoaWNoIHlvdSB3YW50IHRvIHNlbmQgdG9rZW5zIGZyb20KICAgKiBAcGFyYW0gX3RvIGFkZHJlc3MgVGhlIGFkZHJlc3Mgd2hpY2ggeW91IHdhbnQgdG8gdHJhbnNmZXIgdG8KICAgKiBAcGFyYW0gX3ZhbHVlIHVpbnQyNTYgdGhlIGFtb3V0IG9mIHRva2VucyB0byBiZSB0cmFuc2ZlcmVkCiAgICovCiAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgIHZhciBfYWxsb3dhbmNlID0gYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl07CgogICAgLy8gQ2hlY2sgaXMgbm90IG5lZWRlZCBiZWNhdXNlIHN1YihfYWxsb3dhbmNlLCBfdmFsdWUpIHdpbGwgYWxyZWFkeSB0aHJvdyBpZiB0aGlzIGNvbmRpdGlvbiBpcyBub3QgbWV0CiAgICAvLyByZXF1aXJlIChfdmFsdWUgPD0gX2FsbG93YW5jZSk7CgogICAgYmFsYW5jZXNbX3RvXSA9IGJhbGFuY2VzW190b10uYWRkKF92YWx1ZSk7CiAgICBiYWxhbmNlc1tfZnJvbV0gPSBiYWxhbmNlc1tfZnJvbV0uc3ViKF92YWx1ZSk7CiAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA9IF9hbGxvd2FuY2Uuc3ViKF92YWx1ZSk7CiAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwogICAgcmV0dXJuIHRydWU7CiAgfQoKICAvKioKICAgKiBAZGV2IEFwcm92ZSB0aGUgcGFzc2VkIGFkZHJlc3MgdG8gc3BlbmQgdGhlIHNwZWNpZmllZCBhbW91bnQgb2YgdG9rZW5zIG9uIGJlaGFsZiBvZiBtc2cuc2VuZGVyLgogICAqIEBwYXJhbSBfc3BlbmRlciBUaGUgYWRkcmVzcyB3aGljaCB3aWxsIHNwZW5kIHRoZSBmdW5kcy4KICAgKiBAcGFyYW0gX3ZhbHVlIFRoZSBhbW91bnQgb2YgdG9rZW5zIHRvIGJlIHNwZW50LgogICAqLwogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CgogICAgLy8gVG8gY2hhbmdlIHRoZSBhcHByb3ZlIGFtb3VudCB5b3UgZmlyc3QgaGF2ZSB0byByZWR1Y2UgdGhlIGFkZHJlc3Nlc2AKICAgIC8vICBhbGxvd2FuY2UgdG8gemVybyBieSBjYWxsaW5nIGBhcHByb3ZlKF9zcGVuZGVyLCAwKWAgaWYgaXQgaXMgbm90CiAgICAvLyAgYWxyZWFkeSAwIHRvIG1pdGlnYXRlIHRoZSByYWNlIGNvbmRpdGlvbiBkZXNjcmliZWQgaGVyZToKICAgIC8vICBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9pc3N1ZXMvMjAjaXNzdWVjb21tZW50LTI2MzUyNDcyOQogICAgcmVxdWlyZSgoX3ZhbHVlID09IDApIHx8IChhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9PSAwKSk7CgogICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CiAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgLyoqCiAgICogQGRldiBGdW5jdGlvbiB0byBjaGVjayB0aGUgYW1vdW50IG9mIHRva2VucyB0aGF0IGFuIG93bmVyIGFsbG93ZWQgdG8gYSBzcGVuZGVyLgogICAqIEBwYXJhbSBfb3duZXIgYWRkcmVzcyBUaGUgYWRkcmVzcyB3aGljaCBvd25zIHRoZSBmdW5kcy4KICAgKiBAcGFyYW0gX3NwZW5kZXIgYWRkcmVzcyBUaGUgYWRkcmVzcyB3aGljaCB3aWxsIHNwZW5kIHRoZSBmdW5kcy4KICAgKiBAcmV0dXJuIEEgdWludDI1NiBzcGVjaWZpbmcgdGhlIGFtb3VudCBvZiB0b2tlbnMgc3RpbGwgYXZhaWJsZSBmb3IgdGhlIHNwZW5kZXIuCiAgICovCiAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpIHsKICAgIHJldHVybiBhbGxvd2VkW19vd25lcl1bX3NwZW5kZXJdOwogIH0KCn0KCmNvbnRyYWN0IENoYW5nZXJleCBpcyBTdGFuZGFyZFRva2VuIHsKICAgIAoJc3RyaW5nIHB1YmxpYyBuYW1lOwoJc3RyaW5nIHB1YmxpYyBzeW1ib2w7Cgl1aW50IHB1YmxpYyBkZWNpbWFsczsKCQoJZnVuY3Rpb24gQ2hhbmdlcmV4KCkgewoJICAgIAoJICAgIG5hbWUgPSAnQ2hhbmdlcmV4JzsKCSAgICBzeW1ib2wgPSAnQ0dYJzsKCSAgICBkZWNpbWFscyA9IDg7CgkJdG90YWxTdXBwbHkgPSA1MDAwMDAwMDAwMDAwMDAwOwoJCWJhbGFuY2VzW21zZy5zZW5kZXJdID0gdG90YWxTdXBwbHk7CgkJCgkJVHJhbnNmZXIobXNnLnNlbmRlciwgbXNnLnNlbmRlciwgdG90YWxTdXBwbHkpOwoJCQoJfQoJCn0='.
	

]
