Class {
	#name : #SRTa671f2914ba0e73979ffc47cd350801d1714b18f,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTa671f2914ba0e73979ffc47cd350801d1714b18f >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTU7CgoJY29udHJhY3QgU2FmZU1hdGggewoKCSAgZnVuY3Rpb24gc2FmZU11bCh1aW50IGEsIHVpbnQgYikgcmV0dXJucyAodWludCkgewoJCWlmIChhID09IDApIHsKCQkgIHJldHVybiAwOwoJCX0gZWxzZSB7CgkJICB1aW50IGMgPSBhICogYjsKCQkgIHJlcXVpcmUoYyAvIGEgPT0gYik7CgkJICByZXR1cm4gYzsKCQl9CgkgIH0KCgkgIGZ1bmN0aW9uIHNhZmVEaXYodWludCBhLCB1aW50IGIpIHJldHVybnMgKHVpbnQpIHsKCQlyZXF1aXJlKGIgPiAwKTsKCQl1aW50IGMgPSBhIC8gYjsKCQlyZXF1aXJlKGEgPT0gYiAqIGMgKyBhICUgYik7CgkJcmV0dXJuIGM7CgkgIH0KCgl9CgoJY29udHJhY3QgdG9rZW4gewoJCWZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF9yZWNlaXZlciwgdWludCBfYW1vdW50KTsKCX0KCgljb250cmFjdCBDcm93ZFNhbGUgaXMgU2FmZU1hdGggewoJCWFkZHJlc3MgcHVibGljIGJlbmVmaWNpYXJ5OwoJCXVpbnQgcHVibGljIGZ1bmRpbmdNaW5pbXVtVGFyZ2V0SW5Vc2Q7CgkJdWludCBwdWJsaWMgZnVuZGluZ01heGltdW1UYXJnZXRJblVzZDsKCQl1aW50IHB1YmxpYyBhbW91bnRSYWlzZWQ7CgkJdWludCBwdWJsaWMgcHJpY2VJblVzZDsKCQl0b2tlbiBwdWJsaWMgdG9rZW5SZXdhcmQ7CgkJbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBiYWxhbmNlT2Y7CgkJYm9vbCBwdWJsaWMgZnVuZGluZ0dvYWxSZWFjaGVkID0gZmFsc2U7CgkJYWRkcmVzcyB0b2tlbkhvbGRlcjsKCQlhZGRyZXNzIHB1YmxpYyBjcmVhdG9yOwoJCXVpbnQgcHVibGljIHRva2VuQWxsb2NhdGlvbjsKCQl1aW50IHB1YmxpYyB0b2tlblJhaXNlZDsKCQl1aW50IHB1YmxpYyBldGhlclByaWNlSW5Vc2Q7CgkJdWludCBwdWJsaWMgdG90YWxVc2RSYWlzZWQ7CgkJYm9vbCBwdWJsaWMgaWNvU3RhdGUgPSBmYWxzZTsKCQlib29sIHB1YmxpYyB1c2VyUmVmdW5kID0gZmFsc2U7CgkJbWFwcGluZyhhZGRyZXNzID0+IGJvb2wpIHB1YmxpYyBzeW5jTGlzdDsKCgkJZXZlbnQgR29hbE1pbmltdW1SZWFjaGVkKGFkZHJlc3MgX2JlbmVmaWNpYXJ5LCB1aW50IF9hbW91bnRSYWlzZWQsIHVpbnQgX3RvdGFsVXNkUmFpc2VkKTsKCQlldmVudCBHb2FsTWF4aW11bVJlYWNoZWQoYWRkcmVzcyBfYmVuZWZpY2lhcnksIHVpbnQgX2Ftb3VudFJhaXNlZCwgdWludCBfdG90YWxVc2RSYWlzZWQpOwoJCWV2ZW50IEZ1bmRUcmFuc2ZlcihhZGRyZXNzIF9iYWNrZXIsIHVpbnQgX2Ftb3VudCwgYm9vbCBfaXNDb250cmlidXRpb24pOwoKCQkvKioKCQkgKiBDb25zdHJjdG9yIGZ1bmN0aW9uCgkJICoKCQkgKiBTZXR1cCB0aGUgb3duZXIKCQkgKi8KCQlmdW5jdGlvbiBDcm93ZFNhbGUoCgkJCWFkZHJlc3MgaWZTdWNjZXNzZnVsU2VuZFRvLAoJCQl1aW50IF9mdW5kaW5nTWluaW11bVRhcmdldEluVXNkLAoJCQl1aW50IF9mdW5kaW5nTWF4aW11bVRhcmdldEluVXNkLAoJCQl1aW50IHRva2VuUHJpY2VJblVTRCwKCQkJYWRkcmVzcyBhZGRyZXNzT2ZUb2tlblVzZWRBc1Jld2FyZCwKCQkJYWRkcmVzcyBfdG9rZW5Ib2xkZXIsCgkJCXVpbnQgX3Rva2VuQWxsb2NhdGlvbiwKCQkJdWludCBfZXRoZXJQcmljZUluVXNkCgkJKSB7CgkJCWNyZWF0b3IgPSBtc2cuc2VuZGVyOwoJCQlzeW5jTGlzdFtjcmVhdG9yXSA9IHRydWU7CgkJCWJlbmVmaWNpYXJ5ID0gaWZTdWNjZXNzZnVsU2VuZFRvOwoJCQlmdW5kaW5nTWluaW11bVRhcmdldEluVXNkID0gX2Z1bmRpbmdNaW5pbXVtVGFyZ2V0SW5Vc2Q7CgkJCWZ1bmRpbmdNYXhpbXVtVGFyZ2V0SW5Vc2QgPSBfZnVuZGluZ01heGltdW1UYXJnZXRJblVzZDsKCQkJcHJpY2VJblVzZCA9IHRva2VuUHJpY2VJblVTRDsKCQkJdG9rZW5SZXdhcmQgPSB0b2tlbihhZGRyZXNzT2ZUb2tlblVzZWRBc1Jld2FyZCk7CgkJCXRva2VuSG9sZGVyID0gX3Rva2VuSG9sZGVyOwoJCQl0b2tlbkFsbG9jYXRpb24gPSBfdG9rZW5BbGxvY2F0aW9uOwoJCQlldGhlclByaWNlSW5Vc2QgPSBfZXRoZXJQcmljZUluVXNkOwoJCX0KCgkJbW9kaWZpZXIgaXNNYXhpbXVtKCkgewoJCSAgcmVxdWlyZShzYWZlTXVsKG1zZy52YWx1ZSwgZXRoZXJQcmljZUluVXNkKSA8PSAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDApOwoJCSAgIF87CgkJfQoKCQltb2RpZmllciBpc0NyZWF0b3IoKSB7CgkJCXJlcXVpcmUobXNnLnNlbmRlciA9PSBjcmVhdG9yKTsKCQkJXzsKCQl9CgoJCW1vZGlmaWVyIGlzU3luY0xpc3QoYWRkcmVzcyBfc291cmNlKXsKCQkgIHJlcXVpcmUoc3luY0xpc3RbX3NvdXJjZV0pOwoJCSAgXzsKCQl9CgoJCWZ1bmN0aW9uIGFkZFRvU3luY0xpc3QoYWRkcmVzcyBfc291cmNlKSBpc0NyZWF0b3IoKSByZXR1cm5zIChib29sKSB7CgkJICBzeW5jTGlzdFtfc291cmNlXSA9IHRydWU7CgkJfQoKCQlmdW5jdGlvbiBzZXRFdGhlclByaWNlKHVpbnQgX3ByaWNlKSBpc1N5bmNMaXN0KG1zZy5zZW5kZXIpIHJldHVybnMgKGJvb2wgcmVzdWx0KXsKCQkgIGV0aGVyUHJpY2VJblVzZCA9IF9wcmljZTsKCQkgIHJldHVybiB0cnVlOwoJCX0KCgkJZnVuY3Rpb24gc3RvcEljbygpIGlzQ3JlYXRvcigpIHJldHVybnMgKGJvb2wgcmVzdWx0KXsKCQkgIGljb1N0YXRlID0gZmFsc2U7CgkJICByZXR1cm4gdHJ1ZTsKCQl9CgoJCWZ1bmN0aW9uIHN0YXJ0SWNvKCkgaXNDcmVhdG9yKCkgcmV0dXJucyAoYm9vbCByZXN1bHQpewoJCSAgaWNvU3RhdGUgPSB0cnVlOwoJCSAgcmV0dXJuIHRydWU7CgkJfQoKCQlmdW5jdGlvbiBzZXR0aW5nc0ljbyh1aW50IF9wcmljZUluVXNkLCBhZGRyZXNzIF90b2tlbkhvbGRlciwgdWludCBfdG9rZW5BbGxvY2F0aW9uLCB1aW50IF9mdW5kaW5nTWluaW11bVRhcmdldEluVXNkLCB1aW50IF9mdW5kaW5nTWF4aW11bVRhcmdldEluVXNkKSBpc0NyZWF0b3IoKSByZXR1cm5zIChib29sIHJlc3VsdCl7CgkJICByZXF1aXJlKCFpY29TdGF0ZSk7CgkJICBwcmljZUluVXNkID0gX3ByaWNlSW5Vc2Q7CgkJICB0b2tlbkhvbGRlciA9IF90b2tlbkhvbGRlcjsKCQkgIHRva2VuQWxsb2NhdGlvbiA9IF90b2tlbkFsbG9jYXRpb247CgkJICBmdW5kaW5nTWluaW11bVRhcmdldEluVXNkID0gX2Z1bmRpbmdNaW5pbXVtVGFyZ2V0SW5Vc2Q7CgkJICBmdW5kaW5nTWF4aW11bVRhcmdldEluVXNkID0gX2Z1bmRpbmdNYXhpbXVtVGFyZ2V0SW5Vc2Q7CgkJICByZXR1cm4gdHJ1ZTsKCQl9CgoJCS8qKgoJCSAqIEZhbGxiYWNrIGZ1bmN0aW9uCgkJICoKCQkgKiBUaGUgZnVuY3Rpb24gd2l0aG91dCBuYW1lIGlzIHRoZSBkZWZhdWx0IGZ1bmN0aW9uIHRoYXQgaXMgY2FsbGVkIHdoZW5ldmVyIGFueW9uZSBzZW5kcyBmdW5kcyB0byBhIGNvbnRyYWN0CgkJICovCgkJZnVuY3Rpb24gKCkgaXNNYXhpbXVtKCkgcGF5YWJsZSB7CgkJCXJlcXVpcmUoaWNvU3RhdGUpOwoKCQkJdWludCBldGhlckFtb3VudEluV2VpID0gbXNnLnZhbHVlOwoJCQl1aW50IGFtb3VudCA9IHNhZmVNdWwobXNnLnZhbHVlLCBldGhlclByaWNlSW5Vc2QpOwoJCQl1aW50MjU2IHRva2VuQW1vdW50ID0gc2FmZURpdihzYWZlRGl2KGFtb3VudCwgcHJpY2VJblVzZCksIDEwMDAwMDAwMDAwKTsKCQkJcmVxdWlyZSh0b2tlblJhaXNlZCArIHRva2VuQW1vdW50IDw9IHRva2VuQWxsb2NhdGlvbik7CgkJCXRva2VuUmFpc2VkICs9IHRva2VuQW1vdW50OwoKCgkJCXVpbnQgYW1vdW50SW5Vc2QgPSBzYWZlRGl2KGFtb3VudCwgMTAwMDAwMDAwMDAwMDAwMDAwMCk7CgkJCXJlcXVpcmUodG90YWxVc2RSYWlzZWQgKyBhbW91bnRJblVzZCA8PSBmdW5kaW5nTWF4aW11bVRhcmdldEluVXNkKTsKCQkJdG90YWxVc2RSYWlzZWQgKz0gYW1vdW50SW5Vc2Q7CgoJCQliYWxhbmNlT2ZbbXNnLnNlbmRlcl0gKz0gZXRoZXJBbW91bnRJbldlaTsKCQkJYW1vdW50UmFpc2VkICs9IGV0aGVyQW1vdW50SW5XZWk7CgkJCXRva2VuUmV3YXJkLnRyYW5zZmVyRnJvbSh0b2tlbkhvbGRlciwgbXNnLnNlbmRlciwgdG9rZW5BbW91bnQpOwoJCQlGdW5kVHJhbnNmZXIobXNnLnNlbmRlciwgZXRoZXJBbW91bnRJbldlaSwgdHJ1ZSk7CgkJfQoKCQkvKioKCQkgKiBDaGVjayBpZiBnb2FsIHdhcyByZWFjaGVkCgkJICoKCQkgKiBDaGVja3MgaWYgdGhlIGdvYWwgb3IgdGltZSBsaW1pdCBoYXMgYmVlbiByZWFjaGVkIGFuZCBlbmRzIHRoZSBjYW1wYWlnbgoJCSAqLwoJCWZ1bmN0aW9uIGNoZWNrR29hbFJlYWNoZWQoKSBpc0NyZWF0b3IoKSB7CgkJCWlmICh0b3RhbFVzZFJhaXNlZCA+PSBmdW5kaW5nTWF4aW11bVRhcmdldEluVXNkKXsKCQkJCWZ1bmRpbmdHb2FsUmVhY2hlZCA9IHRydWU7CgkJCQlHb2FsTWF4aW11bVJlYWNoZWQoYmVuZWZpY2lhcnksIGFtb3VudFJhaXNlZCwgdG90YWxVc2RSYWlzZWQpOwoJCQl9IGVsc2UgaWYgKHRvdGFsVXNkUmFpc2VkID49IGZ1bmRpbmdNaW5pbXVtVGFyZ2V0SW5Vc2QpIHsKCQkJCWZ1bmRpbmdHb2FsUmVhY2hlZCA9IHRydWU7CgkJCQlHb2FsTWluaW11bVJlYWNoZWQoYmVuZWZpY2lhcnksIGFtb3VudFJhaXNlZCwgdG90YWxVc2RSYWlzZWQpOwoJCQl9CgkJfQoKCgkJLyoqCgkJICogV2l0aGRyYXcgdGhlIGZ1bmRzCgkJICoKCQkgKi8KCQlmdW5jdGlvbiBzYWZlV2l0aGRyYXdhbCgpIHsKCQkJaWYgKHVzZXJSZWZ1bmQpIHsKCQkJCXVpbnQgYW1vdW50ID0gYmFsYW5jZU9mW21zZy5zZW5kZXJdOwoJCQkJYmFsYW5jZU9mW21zZy5zZW5kZXJdID0gMDsKCQkJCWlmIChhbW91bnQgPiAwKSB7CgkJCQkJaWYgKG1zZy5zZW5kZXIuc2VuZChhbW91bnQpKSB7CgkJCQkJCUZ1bmRUcmFuc2Zlcihtc2cuc2VuZGVyLCBhbW91bnQsIGZhbHNlKTsKCQkJCQl9IGVsc2UgewoJCQkJCQliYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPSBhbW91bnQ7CgkJCQkJfQoJCQkJfQoJCQl9CgkJfQoKCQkvL1RyYW5zZmVyIEZ1bmRzCgkJZnVuY3Rpb24gZHJhaW4oKSB7CgkJCXJlcXVpcmUoYmVuZWZpY2lhcnkgPT0gbXNnLnNlbmRlcik7CgkJCWlmIChiZW5lZmljaWFyeS5zZW5kKGFtb3VudFJhaXNlZCkpIHsKCQkJCUZ1bmRUcmFuc2ZlcihiZW5lZmljaWFyeSwgYW1vdW50UmFpc2VkLCBmYWxzZSk7CgkJCX0KCQl9CgoJCS8vQXV0b3JpemUgdXNlcnMgcmVmdW5kcwoJCWZ1bmN0aW9uIEF1dG9yaXplUmVmdW5kKCkgaXNDcmVhdG9yKCkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKXsKCQkJcmVxdWlyZSghaWNvU3RhdGUpOwoJCQl1c2VyUmVmdW5kID0gdHJ1ZTsKCQkJcmV0dXJuIHRydWU7CgkJfQoKCQkvLyBSZW1vdmUgY29udHJhY3QKCQlmdW5jdGlvbiByZW1vdmVDb250cmFjdCgpIHB1YmxpYyBpc0NyZWF0b3IoKSB7CgkJCXJlcXVpcmUoIWljb1N0YXRlKTsKCQkJc2VsZmRlc3RydWN0KG1zZy5zZW5kZXIpOwoJCX0KCgl9'.
	

]
