Class {
	#name : #SRT99925CC9a57f5E473Ff22314CFE0627A0bfcceb4,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT99925CC9a57f5E473Ff22314CFE0627A0bfcceb4 >> base64 [
	^ ''.
	

]
