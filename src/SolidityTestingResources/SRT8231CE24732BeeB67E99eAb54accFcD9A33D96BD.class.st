Class {
	#name : #SRT8231CE24732BeeB67E99eAb54accFcD9A33D96BD,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT8231CE24732BeeB67E99eAb54accFcD9A33D96BD >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgovKioKICogTWlzdG9rZW4gQ2FtcGFpZ24tMSBDcm93ZHNhbGUgQ29udHJhY3QKICogQmFzZWQgb24gdGhlIFdpbGQgQ3J5cHRvIENyb3dkc2FsZSBDb250cmFjdAogKiBhbmQgdGhlIE9wZW5aZXBwZWxpbiBvcGVuLXNvdXJjZSBmcmFtZXdvcmsKICovCgovKioKICogQHRpdGxlIFNhZmVNYXRoCiAqIEBkZXYgTWF0aCBvcGVyYXRpb25zIHdpdGggc2FmZXR5IGNoZWNrcyB0aGF0IHRocm93IG9uIGVycm9yCiAqLwpsaWJyYXJ5IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gYWRkKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhICsgYjsKICAgIGFzc2VydChjID49IGEpOwogICAgcmV0dXJuIGM7CiAgfQp9CgovKioKICogQHRpdGxlIE93bmFibGUKICogQGRldiBUaGUgT3duYWJsZSBjb250cmFjdCBoYXMgYW4gb3duZXIgYWRkcmVzcywgYW5kIHByb3ZpZGVzIGJhc2ljIGF1dGhvcml6YXRpb24gY29udHJvbAogKiBmdW5jdGlvbnMsIHRoaXMgc2ltcGxpZmllcyB0aGUgaW1wbGVtZW50YXRpb24gb2YgInVzZXIgcGVybWlzc2lvbnMiLgogKi8KY29udHJhY3QgT3duYWJsZSB7CgogIGFkZHJlc3MgcHVibGljIG93bmVyOwoKICAvKioKICAgKiBAZGV2IFRoZSBPd25hYmxlIGNvbnN0cnVjdG9yIHNldHMgdGhlIG9yaWdpbmFsIGBvd25lcmAgb2YgdGhlIGNvbnRyYWN0IHRvIHRoZSBzZW5kZXIKICAgKiBhY2NvdW50LgogICAqLwogIGZ1bmN0aW9uIE93bmFibGUoKSB7CiAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgfQoKICAvKioKICAgKiBAZGV2IFRocm93cyBpZiBjYWxsZWQgYnkgYW55IGFjY291bnQgb3RoZXIgdGhhbiB0aGUgb3duZXIuCiAgICovCiAgbW9kaWZpZXIgb25seU93bmVyKCkgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyKTsKICAgIF87CiAgfQoKICAvKioKICAgKiBAZGV2IEFsbG93cyB0aGUgY3VycmVudCBvd25lciB0byB0cmFuc2ZlciBjb250cm9sIG9mIHRoZSBjb250cmFjdCB0byBhIG5ld093bmVyLgogICAqIEBwYXJhbSBuZXdPd25lciBUaGUgYWRkcmVzcyB0byB0cmFuc2ZlciBvd25lcnNoaXAgdG8uCiAgICovCiAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBuZXdPd25lcikgb25seU93bmVyIHsKICAgIHJlcXVpcmUobmV3T3duZXIgIT0gYWRkcmVzcygwKSk7CiAgICBvd25lciA9IG5ld093bmVyOwogIH0KfQoKLyoqCiAqIEB0aXRsZSBUb2tlbgogKiBAZGV2IEFQSSBpbnRlcmZhY2UgZm9yIGludGVyYWN0aW5nIHdpdGggdGhlIE1pc1Rva2VuIGNvbnRyYWN0IAogKi8KaW50ZXJmYWNlIFRva2VuIHsKICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wpOwogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKTsKfQoKY29udHJhY3QgQ3Jvd2RzYWxlIGlzIE93bmFibGUgewoKICB1c2luZyBTYWZlTWF0aCBmb3IgdWludDI1NjsKCiAgVG9rZW4gcHVibGljIHRva2VuOwoKICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCBSQVRFID0gOTk7IC8vIE51bWJlciBvZiB0b2tlbnMgcGVyIEV0aGVyCiAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgQ0FQID0gMTAxOyAvLyBDYXAgaW4gRXRoZXIKICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCBTVEFSVCA9IDE1MTAzOTg2NzE7IC8vIFNhdHVyZGF5LCBOb3ZlbWJlciAxMSwgMjAxNyAxMToxMToxMSBBTSAoR01UKQogIHVpbnQyNTYgcHVibGljIGNvbnN0YW50IERBWVMgPSAxMTsgLy8gMTEgRGF5cwoKICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCBpbml0aWFsVG9rZW5zID0gOTk5OSAqIDEwKioxODsgLy8gSW5pdGlhbCBudW1iZXIgb2YgdG9rZW5zIGF2YWlsYWJsZQogIGJvb2wgcHVibGljIGluaXRpYWxpemVkID0gZmFsc2U7CiAgdWludDI1NiBwdWJsaWMgcmFpc2VkQW1vdW50ID0gMDsKCiAgZXZlbnQgQm91Z2h0VG9rZW5zKGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiB2YWx1ZSk7CgogIG1vZGlmaWVyIHdoZW5TYWxlSXNBY3RpdmUoKSB7CiAgICAvLyBDaGVjayBpZiBzYWxlIGlzIGFjdGl2ZQogICAgYXNzZXJ0KGlzQWN0aXZlKCkpOwoKICAgIF87CiAgfQoKICBmdW5jdGlvbiBDcm93ZHNhbGUoYWRkcmVzcyBfdG9rZW5BZGRyKSB7CiAgICAgIHJlcXVpcmUoX3Rva2VuQWRkciAhPSAwKTsKICAgICAgdG9rZW4gPSBUb2tlbihfdG9rZW5BZGRyKTsKICB9CiAgCiAgZnVuY3Rpb24gaW5pdGlhbGl6ZSgpIG9ubHlPd25lciB7CiAgICAgIHJlcXVpcmUoaW5pdGlhbGl6ZWQgPT0gZmFsc2UpOyAvLyBDYW4gb25seSBiZSBpbml0aWFsaXplZCBvbmNlCiAgICAgIHJlcXVpcmUodG9rZW5zQXZhaWxhYmxlKCkgPT0gaW5pdGlhbFRva2Vucyk7IC8vIE11c3QgaGF2ZSBzb21lIHRva2VucyBhbGxvY2F0ZWQKICAgICAgaW5pdGlhbGl6ZWQgPSB0cnVlOwogIH0KCiAgZnVuY3Rpb24gaXNBY3RpdmUoKSBjb25zdGFudCByZXR1cm5zIChib29sKSB7CiAgICByZXR1cm4gKAogICAgICAgIGluaXRpYWxpemVkID09IHRydWUgJiYKICAgICAgICBub3cgPj0gU1RBUlQgJiYgLy8gTXVzdCBiZSBhZnRlciB0aGUgU1RBUlQgZGF0ZQogICAgICAgIG5vdyA8PSBTVEFSVC5hZGQoREFZUyAqIDEgZGF5cykgJiYgLy8gTXVzdCBiZSBiZWZvcmUgdGhlIGVuZCBkYXRlCiAgICAgICAgZ29hbFJlYWNoZWQoKSA9PSBmYWxzZSAvLyBHb2FsIG11c3Qgbm90IGFscmVhZHkgYmUgcmVhY2hlZAogICAgKTsKICB9CgogIGZ1bmN0aW9uIGdvYWxSZWFjaGVkKCkgY29uc3RhbnQgcmV0dXJucyAoYm9vbCkgewogICAgcmV0dXJuIChyYWlzZWRBbW91bnQgPj0gQ0FQICogMSBldGhlcik7CiAgfQoKICBmdW5jdGlvbiAoKSBwYXlhYmxlIHsKICAgIGJ1eVRva2VucygpOwogIH0KCiAgLyoqCiAgKiBAZGV2IGZ1bmN0aW9uIHRoYXQgc2VsbHMgYXZhaWxhYmxlIHRva2VucwogICovCiAgZnVuY3Rpb24gYnV5VG9rZW5zKCkgcGF5YWJsZSB3aGVuU2FsZUlzQWN0aXZlIHsKCiAgICAvLyBDYWxjdWxhdGUgdG9rZW5zIHRvIHNlbGwKICAgIHVpbnQyNTYgd2VpQW1vdW50ID0gbXNnLnZhbHVlOwogICAgdWludDI1NiB0b2tlbnMgPSB3ZWlBbW91bnQubXVsKFJBVEUpOwoKICAgIEJvdWdodFRva2Vucyhtc2cuc2VuZGVyLCB0b2tlbnMpOwoKICAgIC8vIEluY3JlbWVudCByYWlzZWQgYW1vdW50CiAgICByYWlzZWRBbW91bnQgPSByYWlzZWRBbW91bnQuYWRkKG1zZy52YWx1ZSk7CiAgICAKICAgIC8vIFNlbmQgdG9rZW5zIHRvIGJ1eWVyCiAgICB0b2tlbi50cmFuc2Zlcihtc2cuc2VuZGVyLCB0b2tlbnMpOwogICAgCiAgICAvLyBTZW5kIG1vbmV5IHRvIG93bmVyCiAgICBvd25lci50cmFuc2Zlcihtc2cudmFsdWUpOwogIH0KCiAgLyoqCiAgICogQGRldiByZXR1cm5zIHRoZSBudW1iZXIgb2YgdG9rZW5zIGFsbG9jYXRlZCB0byB0aGlzIGNvbnRyYWN0CiAgICovCiAgZnVuY3Rpb24gdG9rZW5zQXZhaWxhYmxlKCkgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgcmV0dXJuIHRva2VuLmJhbGFuY2VPZih0aGlzKTsKICB9CgogIC8qKgogICAqIEBub3RpY2UgVGVybWluYXRlIGNvbnRyYWN0IGFuZCByZWZ1bmQgdG8gb3duZXIKICAgKi8KICBmdW5jdGlvbiBkZXN0cm95KCkgb25seU93bmVyIHsKICAgIC8vIFRyYW5zZmVyIHRva2VucyBiYWNrIHRvIG93bmVyCiAgICB1aW50MjU2IGJhbGFuY2UgPSB0b2tlbi5iYWxhbmNlT2YodGhpcyk7CiAgICBhc3NlcnQoYmFsYW5jZSA+IDApOwogICAgdG9rZW4udHJhbnNmZXIob3duZXIsIGJhbGFuY2UpOwoKICAgIC8vIFRoZXJlIHNob3VsZCBiZSBubyBldGhlciBpbiB0aGUgY29udHJhY3QgYnV0IGp1c3QgaW4gY2FzZQogICAgc2VsZmRlc3RydWN0KG93bmVyKTsKICB9Cgp9'.
	

]
