Class {
	#name : #SRT7f7b57131f7a70edcb34c409e942e5adb811d9cf,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT7f7b57131f7a70edcb34c409e942e5adb811d9cf >> base64 [
	^ ''.
	

]
