Class {
	#name : #SRTf15f61643eea73be40ad9b72c09ed381fac7a256,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTf15f61643eea73be40ad9b72c09ed381fac7a256 >> base64 [
	^ ''.
	

]
