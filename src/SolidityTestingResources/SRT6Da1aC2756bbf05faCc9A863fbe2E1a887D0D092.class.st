Class {
	#name : #SRT6Da1aC2756bbf05faCc9A863fbe2E1a887D0D092,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT6Da1aC2756bbf05faCc9A863fbe2E1a887D0D092 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTA7Cgpjb250cmFjdCBGb3JlaWduVG9rZW4gewogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KTsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCk7Cn0KCmNvbnRyYWN0IENvc21vc1Rva2VuIHsKICAgIGFkZHJlc3Mgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgYm9vbCBwdWJsaWMgcHVyY2hhc2luZ0FsbG93ZWQgPSBmYWxzZTsKCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIGJhbGFuY2VzOwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBhbGxvd2VkOwoKICAgIHVpbnQyNTYgcHVibGljIHRvdGFsQ29udHJpYnV0aW9uID0gMDsKICAgIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5ID0gMDsKCiAgICBmdW5jdGlvbiBuYW1lKCkgY29uc3RhbnQgcmV0dXJucyAoc3RyaW5nKSB7IHJldHVybiAiQ29zbW9zVG9rZW4iOyB9CiAgICBmdW5jdGlvbiBzeW1ib2woKSBjb25zdGFudCByZXR1cm5zIChzdHJpbmcpIHsgcmV0dXJuICJDU1QiOyB9CiAgICBmdW5jdGlvbiBkZWNpbWFscygpIGNvbnN0YW50IHJldHVybnMgKHVpbnQ4KSB7IHJldHVybiAxODsgfQoKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgeyByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgaWYobXNnLmRhdGEubGVuZ3RoIDwgKDIgKiAzMikgKyA0KSB7IHRocm93OyB9CiAgICAgICAgaWYgKF92YWx1ZSA9PSAwKSB7IHJldHVybiBmYWxzZTsgfQoKICAgICAgICB1aW50MjU2IGZyb21CYWxhbmNlID0gYmFsYW5jZXNbbXNnLnNlbmRlcl07CgogICAgICAgIGJvb2wgc3VmZmljaWVudEZ1bmRzID0gZnJvbUJhbGFuY2UgPj0gX3ZhbHVlOwogICAgICAgIGJvb2wgb3ZlcmZsb3dlZCA9IGJhbGFuY2VzW190b10gKyBfdmFsdWUgPCBiYWxhbmNlc1tfdG9dOwoKICAgICAgICBpZiAoc3VmZmljaWVudEZ1bmRzICYmICFvdmVyZmxvd2VkKSB7CiAgICAgICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdIC09IF92YWx1ZTsKICAgICAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfdmFsdWU7CgogICAgICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0gZWxzZSB7IHJldHVybiBmYWxzZTsgfQogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGlmKG1zZy5kYXRhLmxlbmd0aCA8ICgzICogMzIpICsgNCkgeyB0aHJvdzsgfQogICAgICAgIGlmIChfdmFsdWUgPT0gMCkgeyByZXR1cm4gZmFsc2U7IH0KCiAgICAgICAgdWludDI1NiBmcm9tQmFsYW5jZSA9IGJhbGFuY2VzW19mcm9tXTsKICAgICAgICB1aW50MjU2IGFsbG93YW5jZSA9IGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdOwoKICAgICAgICBib29sIHN1ZmZpY2llbnRGdW5kcyA9IGZyb21CYWxhbmNlIDw9IF92YWx1ZTsKICAgICAgICBib29sIHN1ZmZpY2llbnRBbGxvd2FuY2UgPSBhbGxvd2FuY2UgPD0gX3ZhbHVlOwogICAgICAgIGJvb2wgb3ZlcmZsb3dlZCA9IGJhbGFuY2VzW190b10gKyBfdmFsdWUgPiBiYWxhbmNlc1tfdG9dOwoKICAgICAgICBpZiAoc3VmZmljaWVudEZ1bmRzICYmIHN1ZmZpY2llbnRBbGxvd2FuY2UgJiYgIW92ZXJmbG93ZWQpIHsKICAgICAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfdmFsdWU7CiAgICAgICAgICAgIGJhbGFuY2VzW19mcm9tXSAtPSBfdmFsdWU7CgogICAgICAgICAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CgogICAgICAgICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9IGVsc2UgeyByZXR1cm4gZmFsc2U7IH0KICAgIH0KCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBpZiAoX3ZhbHVlICE9IDAgJiYgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gIT0gMCkgeyByZXR1cm4gZmFsc2U7IH0KCiAgICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CgogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHJldHVybiBhbGxvd2VkW19vd25lcl1bX3NwZW5kZXJdOwogICAgfQoKICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7CgogICAgZnVuY3Rpb24gZW5hYmxlUHVyY2hhc2luZygpIHsKICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lcikgeyB0aHJvdzsgfQogICAgICAgIHB1cmNoYXNpbmdBbGxvd2VkID0gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBkaXNhYmxlUHVyY2hhc2luZygpIHsKICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lcikgeyB0aHJvdzsgfQogICAgICAgIHB1cmNoYXNpbmdBbGxvd2VkID0gZmFsc2U7CiAgICB9CgogICAgZnVuY3Rpb24gd2l0aGRyYXdGb3JlaWduVG9rZW5zKGFkZHJlc3MgX3Rva2VuQ29udHJhY3QpIHJldHVybnMgKGJvb2wpIHsKICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lcikgeyB0aHJvdzsgfQoKICAgICAgICBGb3JlaWduVG9rZW4gdG9rZW4gPSBGb3JlaWduVG9rZW4oX3Rva2VuQ29udHJhY3QpOwoKICAgICAgICB1aW50MjU2IGFtb3VudCA9IHRva2VuLmJhbGFuY2VPZihhZGRyZXNzKHRoaXMpKTsKICAgICAgICByZXR1cm4gdG9rZW4udHJhbnNmZXIob3duZXIsIGFtb3VudCk7CiAgICB9CgogICAgZnVuY3Rpb24gZ2V0U3RhdHMoKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2LCB1aW50MjU2LCBib29sKSB7CiAgICAgICAgcmV0dXJuICh0b3RhbENvbnRyaWJ1dGlvbiwgdG90YWxTdXBwbHksIHB1cmNoYXNpbmdBbGxvd2VkKTsKICAgIH0KCiAgICBmdW5jdGlvbigpIHBheWFibGUgewogICAgICAgIGlmICghcHVyY2hhc2luZ0FsbG93ZWQpIHsgdGhyb3c7IH0KCiAgICAgICAgaWYgKG1zZy52YWx1ZSA9PSAwKSB7IHJldHVybjsgfQoKICAgICAgICBvd25lci50cmFuc2Zlcihtc2cudmFsdWUpOwogICAgICAgIHRvdGFsQ29udHJpYnV0aW9uICs9IG1zZy52YWx1ZTsKCiAgICAgICAgdWludDI1NiB0b2tlbnNJc3N1ZWQgPSAobXNnLnZhbHVlICogMTAwMCk7CgogICAgICAgIGlmIChtc2cudmFsdWUgPj0gMTAgZmlubmV5KSB7IHRva2Vuc0lzc3VlZCArPSB0b3RhbENvbnRyaWJ1dGlvbjsgfQoKICAgICAgICB0b3RhbFN1cHBseSArPSB0b2tlbnNJc3N1ZWQ7CiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gKz0gdG9rZW5zSXNzdWVkOwoKICAgICAgICBUcmFuc2ZlcihhZGRyZXNzKHRoaXMpLCBtc2cuc2VuZGVyLCB0b2tlbnNJc3N1ZWQpOwogICAgfQp9'.
	

]
