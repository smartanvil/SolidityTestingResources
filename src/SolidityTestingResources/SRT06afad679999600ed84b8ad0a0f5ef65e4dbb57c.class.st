Class {
	#name : #SRT06afad679999600ed84b8ad0a0f5ef65e4dbb57c,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT06afad679999600ed84b8ad0a0f5ef65e4dbb57c >> base64 [
	^ ''.
	

]
