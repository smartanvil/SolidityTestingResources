Class {
	#name : #SRTca30a6938d8a2c70c547a694755bf6d81e04b2ea,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTca30a6938d8a2c70c547a694755bf6d81e04b2ea >> base64 [
	^ ''.
	

]
