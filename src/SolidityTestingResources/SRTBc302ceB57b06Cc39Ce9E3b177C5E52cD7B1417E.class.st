Class {
	#name : #SRTBc302ceB57b06Cc39Ce9E3b177C5E52cD7B1417E,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTBc302ceB57b06Cc39Ce9E3b177C5E52cD7B1417E >> base64 [
	^ ''.
	

]
