Class {
	#name : #SRTbe1b06a4268f7b523b0e7b986d91f2d4a2572b52,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTbe1b06a4268f7b523b0e7b986d91f2d4a2572b52 >> base64 [
	^ ''.
	

]
