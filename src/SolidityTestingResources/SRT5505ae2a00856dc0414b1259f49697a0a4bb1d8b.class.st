Class {
	#name : #SRT5505ae2a00856dc0414b1259f49697a0a4bb1d8b,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT5505ae2a00856dc0414b1259f49697a0a4bb1d8b >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTY7CgovKioKICogQHRpdGxlIENvbnRyb2xsYWJsZQogKiBAZGV2IFRoZSBDb250cm9sbGFibGUgY29udHJhY3QgaGFzIGFuIG93bmVyIGFkZHJlc3MsIGFuZCBwcm92aWRlcyBiYXNpYyBhdXRob3JpemF0aW9uIGNvbnRyb2wKICogZnVuY3Rpb25zLCB0aGlzIHNpbXBsaWZpZXMgdGhlIGltcGxlbWVudGF0aW9uIG9mICJ1c2VyIHBlcm1pc3Npb25zIi4KICovCmNvbnRyYWN0IENvbnRyb2xsYWJsZSB7CiAgICAKICAgIGFkZHJlc3MgcHVibGljIG93bmVyOwoKICAgIC8qKgogICAgKiBAZGV2IFRoZSBDb250cm9sbGFibGUgY29uc3RydWN0b3Igc2V0cyB0aGUgb3JpZ2luYWwgYG93bmVyYCBvZiB0aGUgY29udHJhY3QgdG8gdGhlIHNlbmRlcgogICAgKiBhY2NvdW50LgogICAgKi8KICAgIGZ1bmN0aW9uIENvbnRyb2xsYWJsZSgpIHB1YmxpYyB7CiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgfQogICAgCiAgICAvKioKICAgICogQGRldiBUaHJvd3MgaWYgY2FsbGVkIGJ5IGFueSBhY2NvdW50IG90aGVyIHRoYW4gdGhlIG93bmVyLgogICAgKi8KICAgIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgICAgIF87CiAgICB9CiAgICAKICAgIC8qKgogICAgKiBAZGV2IEFsbG93cyB0aGUgY3VycmVudCBvd25lciB0byB0cmFuc2ZlciBjb250cm9sIG9mIHRoZSBjb250cmFjdCB0byBhIG5ld093bmVyLgogICAgKiBAcGFyYW0gbmV3T3duZXIgVGhlIGFkZHJlc3MgdG8gdHJhbnNmZXIgb3duZXJzaGlwIHRvLgogICAgKi8KICAgIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpIG9ubHlPd25lciBwdWJsaWMgewogICAgICAgIHJlcXVpcmUobmV3T3duZXIgIT0gYWRkcmVzcygwKSk7ICAgICAgCiAgICAgICAgb3duZXIgPSBuZXdPd25lcjsKICAgIH0KCn0KCmNvbnRyYWN0IFF1ZG9zVGVzdFRva2VuIGlzIENvbnRyb2xsYWJsZSB7CiAgICAKICAgIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5OwogICAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpIGJhbGFuY2VzOwogICAgbWFwcGluZyhhZGRyZXNzID0+IG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsKICAgIAogICAgc3RyaW5nIHB1YmxpYyBjb25zdGFudCBuYW1lID0gIlF1ZG9zVGVzdFRva2VuIjsKICAgIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgc3ltYm9sID0gIlFUVEsiOwogICAgdWludDMyIHB1YmxpYyBjb25zdGFudCBkZWNpbWFscyA9IDEyOwoKICAgIHVpbnQgY29uc3RhbnQgcmVzdHJpY3RlZFBlcmNlbnQgPSAyNTsgLy9zaG91bGQgbmV2ZXIgYmUgc2V0IGFib3ZlIDEwMAogICAgYWRkcmVzcyBjb25zdGFudCByZXN0cmljdGVkID0gMHhkZWQ3MzA1NjVmNDIwZTlkNzBiOEJjNjZjRWY4NkU2YTQxN0JFODJEOwogICAgdWludCBjb25zdGFudCBzdGFydCA9IDE1MDk0NTg0MDA7CiAgICB1aW50IGNvbnN0YW50IHBlcmlvZCA9IDg3OwogICAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgaGFyZGNhcCA9IDMwMDAwMDAwMDAwICogMSBldGhlcjsKICAgIAogICAgYm9vbCBwdWJsaWMgdHJhbnNmZXJBbGxvd2VkID0gZmFsc2U7CiAgICBib29sIHB1YmxpYyBtaW50aW5nRmluaXNoZWQgPSBmYWxzZTsKICAgIAogICAgbW9kaWZpZXIgd2hlblRyYW5zZmVyQWxsb3dlZCgpIHsKICAgICAgICBpZihtc2cuc2VuZGVyICE9IG93bmVyKXsKICAgICAgICAgICAgcmVxdWlyZSh0cmFuc2ZlckFsbG93ZWQpOwogICAgICAgIH0KICAgICAgICBfOwogICAgfQoKICAgIG1vZGlmaWVyIHNhbGVJc09uKCkgewogICAgICAgIHJlcXVpcmUobm93ID4gc3RhcnQgJiYgbm93IDwgc3RhcnQgKyBwZXJpb2QgKiAxIGRheXMpOwogICAgICAgIF87CiAgICB9CiAgICAKICAgIG1vZGlmaWVyIGNhbk1pbnQoKSB7CiAgICAgICAgcmVxdWlyZSghbWludGluZ0ZpbmlzaGVkKTsKICAgICAgICBfOwogICAgfQogIAogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSB3aGVuVHJhbnNmZXJBbGxvd2VkIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICAgICAgcmVxdWlyZShfdG8gIT0gYWRkcmVzcygwKSk7CiAgICAgICAgcmVxdWlyZShfdmFsdWUgPD0gYmFsYW5jZXNbbXNnLnNlbmRlcl0pOwogICAgICAgIAogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gYmFsYW5jZXNbbXNnLnNlbmRlcl0gLSBfdmFsdWU7CiAgICAgICAgYmFsYW5jZXNbX3RvXSA9IGJhbGFuY2VzW190b10gKyBfdmFsdWU7CiAgICAgICAgLy9hc3NlcnQoYmFsYW5jZXNbX3RvXSA+PSBfdmFsdWUpOyBubyBuZWVkIHRvIGNoZWNrLCBzaW5jZSBtaW50IGhhcyBsaW1pdGVkIGhhcmRjYXAKICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCBwdWJsaWMgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7CiAgICAgICAgcmV0dXJuIGJhbGFuY2VzW19vd25lcl07CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHdoZW5UcmFuc2ZlckFsbG93ZWQgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgICAgICByZXF1aXJlKF90byAhPSBhZGRyZXNzKDApKTsKICAgICAgICByZXF1aXJlKF92YWx1ZSA8PSBiYWxhbmNlc1tfZnJvbV0pOwogICAgICAgIHJlcXVpcmUoX3ZhbHVlIDw9IGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdKTsKICAgICAgICAKICAgICAgICBiYWxhbmNlc1tfZnJvbV0gPSBiYWxhbmNlc1tfZnJvbV0gLSBfdmFsdWU7CiAgICAgICAgYmFsYW5jZXNbX3RvXSA9IGJhbGFuY2VzW190b10gKyBfdmFsdWU7CiAgICAgICAgLy9hc3NlcnQoYmFsYW5jZXNbX3RvXSA+PSBfdmFsdWUpOyBubyBuZWVkIHRvIGNoZWNrLCBzaW5jZSBtaW50IGhhcyBsaW1pdGVkIGhhcmRjYXAKICAgICAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA9IGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdIC0gX3ZhbHVlOwogICAgICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgICAgICAvL05PVEU6IFRvIHByZXZlbnQgYXR0YWNrIHZlY3RvcnMgbGlrZSB0aGUgb25lIGRpc2N1c3NlZCBoZXJlOiAKICAgICAgICAvL2h0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8yMCNpc3N1ZWNvbW1lbnQtMjYzNTI0NzI5LAogICAgICAgIC8vY2xpZW50cyBTSE9VTEQgbWFrZSBzdXJlIHRvIGNyZWF0ZSB1c2VyIGludGVyZmFjZXMgaW4gc3VjaCBhIHdheSAKICAgICAgICAvL3RoYXQgdGhleSBzZXQgdGhlIGFsbG93YW5jZSBmaXJzdCB0byAwIGJlZm9yZSBzZXR0aW5nIGl0IHRvIGFub3RoZXIgdmFsdWUgZm9yIHRoZSBzYW1lIHNwZW5kZXIuIAogICAgCiAgICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpIHsKICAgICAgICByZXR1cm4gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsKICAgIH0KICAgCiAgICBmdW5jdGlvbiBhbGxvd1RyYW5zZmVyKCkgb25seU93bmVyIHB1YmxpYyB7CiAgICAgICAgdHJhbnNmZXJBbGxvd2VkID0gdHJ1ZTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gbWludChhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIG9ubHlPd25lciBzYWxlSXNPbiBjYW5NaW50IHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICAgICAgcmVxdWlyZShfdG8gIT0gYWRkcmVzcygwKSk7CiAgICAgICAgCiAgICAgICAgdWludCByZXN0cmljdGVkVG9rZW5zID0gX3ZhbHVlICogcmVzdHJpY3RlZFBlcmNlbnQgLyAoMTAwIC0gcmVzdHJpY3RlZFBlcmNlbnQpOwogICAgICAgIHVpbnQgX2Ftb3VudCA9IF92YWx1ZSArIHJlc3RyaWN0ZWRUb2tlbnM7CiAgICAgICAgYXNzZXJ0KF9hbW91bnQgPj0gX3ZhbHVlKTsKICAgICAgICAKICAgICAgICBpZihfYW1vdW50ICsgdG90YWxTdXBwbHkgPD0gaGFyZGNhcCl7CiAgICAgICAgCiAgICAgICAgICAgIHRvdGFsU3VwcGx5ID0gdG90YWxTdXBwbHkgKyBfYW1vdW50OwogICAgICAgICAgICAKICAgICAgICAgICAgYXNzZXJ0KHRvdGFsU3VwcGx5ID49IF9hbW91bnQpOwogICAgICAgICAgICAKICAgICAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBiYWxhbmNlc1ttc2cuc2VuZGVyXSArIF9hbW91bnQ7CiAgICAgICAgICAgIGFzc2VydChiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfYW1vdW50KTsKICAgICAgICAgICAgTWludChtc2cuc2VuZGVyLCBfYW1vdW50KTsKICAgICAgICAKICAgICAgICAgICAgdHJhbnNmZXIoX3RvLCBfdmFsdWUpOwogICAgICAgICAgICB0cmFuc2ZlcihyZXN0cmljdGVkLCByZXN0cmljdGVkVG9rZW5zKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gZmluaXNoTWludGluZygpIG9ubHlPd25lciBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgICAgIG1pbnRpbmdGaW5pc2hlZCA9IHRydWU7CiAgICAgICAgTWludEZpbmlzaGVkKCk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgICAKICAgIC8qKgogICAgICogQGRldiBCdXJucyBhIHNwZWNpZmljIGFtb3VudCBvZiB0b2tlbnMuCiAgICAgKiBAcGFyYW0gX3ZhbHVlIFRoZSBhbW91bnQgb2YgdG9rZW4gdG8gYmUgYnVybmVkLgogICAgICovCiAgICBmdW5jdGlvbiBidXJuKHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgICAgIHJlcXVpcmUoX3ZhbHVlIDw9IGJhbGFuY2VzW21zZy5zZW5kZXJdKTsKICAgICAgICAvLyBubyBuZWVkIHRvIHJlcXVpcmUgdmFsdWUgPD0gdG90YWxTdXBwbHksIHNpbmNlIHRoYXQgd291bGQgaW1wbHkgdGhlCiAgICAgICAgLy8gc2VuZGVyJ3MgYmFsYW5jZSBpcyBncmVhdGVyIHRoYW4gdGhlIHRvdGFsU3VwcGx5LCB3aGljaCAqc2hvdWxkKiBiZSBhbiBhc3NlcnRpb24gZmFpbHVyZQogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gYmFsYW5jZXNbbXNnLnNlbmRlcl0gLSBfdmFsdWU7CiAgICAgICAgdG90YWxTdXBwbHkgPSB0b3RhbFN1cHBseSAtIF92YWx1ZTsKICAgICAgICBCdXJuKG1zZy5zZW5kZXIsIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGJ1cm5Gcm9tKGFkZHJlc3MgX2Zyb20sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgcmVxdWlyZShfdmFsdWUgPD0gYmFsYW5jZXNbX2Zyb21dKTsKICAgICAgICByZXF1aXJlKF92YWx1ZSA8PSBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSk7CiAgICAgICAgYmFsYW5jZXNbX2Zyb21dID0gYmFsYW5jZXNbX2Zyb21dIC0gX3ZhbHVlOwogICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID0gYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gLSBfdmFsdWU7CiAgICAgICAgdG90YWxTdXBwbHkgPSB0b3RhbFN1cHBseSAtIF92YWx1ZTsKICAgICAgICBCdXJuKF9mcm9tLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBmcm9tLCBhZGRyZXNzIGluZGV4ZWQgdG8sIHVpbnQyNTYgdmFsdWUpOwoKICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBvd25lciwgYWRkcmVzcyBpbmRleGVkIHNwZW5kZXIsIHVpbnQyNTYgdmFsdWUpOwoKICAgIGV2ZW50IE1pbnQoYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IGFtb3VudCk7CgogICAgZXZlbnQgTWludEZpbmlzaGVkKCk7CgogICAgZXZlbnQgQnVybihhZGRyZXNzIGluZGV4ZWQgYnVybmVyLCB1aW50MjU2IHZhbHVlKTsKCn0='.
	

]
