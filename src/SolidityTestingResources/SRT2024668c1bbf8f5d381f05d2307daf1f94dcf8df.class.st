Class {
	#name : #SRT2024668c1bbf8f5d381f05d2307daf1f94dcf8df,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT2024668c1bbf8f5d381f05d2307daf1f94dcf8df >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgovLyBGaWxlOiBjb250cmFjdHMvb3duZXJzaGlwL093bmFibGUuc29sCgovKioKICogQHRpdGxlIE93bmFibGUKICogQGRldiBUaGUgT3duYWJsZSBjb250cmFjdCBoYXMgYW4gb3duZXIgYWRkcmVzcywgYW5kIHByb3ZpZGVzIGJhc2ljIGF1dGhvcml6YXRpb24gY29udHJvbAogKiBmdW5jdGlvbnMsIHRoaXMgc2ltcGxpZmllcyB0aGUgaW1wbGVtZW50YXRpb24gb2YgInVzZXIgcGVybWlzc2lvbnMiLgogKi8KY29udHJhY3QgT3duYWJsZSB7CiAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CgoKICBldmVudCBPd25lcnNoaXBUcmFuc2ZlcnJlZChhZGRyZXNzIGluZGV4ZWQgcHJldmlvdXNPd25lciwgYWRkcmVzcyBpbmRleGVkIG5ld093bmVyKTsKCgogIC8qKgogICAqIEBkZXYgVGhlIE93bmFibGUgY29uc3RydWN0b3Igc2V0cyB0aGUgb3JpZ2luYWwgYG93bmVyYCBvZiB0aGUgY29udHJhY3QgdG8gdGhlIHNlbmRlcgogICAqIGFjY291bnQuCiAgICovCiAgZnVuY3Rpb24gT3duYWJsZSgpIHB1YmxpYyB7CiAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgfQoKCiAgLyoqCiAgICogQGRldiBUaHJvd3MgaWYgY2FsbGVkIGJ5IGFueSBhY2NvdW50IG90aGVyIHRoYW4gdGhlIG93bmVyLgogICAqLwogIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICBfOwogIH0KCgogIC8qKgogICAqIEBkZXYgQWxsb3dzIHRoZSBjdXJyZW50IG93bmVyIHRvIHRyYW5zZmVyIGNvbnRyb2wgb2YgdGhlIGNvbnRyYWN0IHRvIGEgbmV3T3duZXIuCiAgICogQHBhcmFtIG5ld093bmVyIFRoZSBhZGRyZXNzIHRvIHRyYW5zZmVyIG93bmVyc2hpcCB0by4KICAgKi8KICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld093bmVyKSBwdWJsaWMgb25seU93bmVyIHsKICAgIHJlcXVpcmUobmV3T3duZXIgIT0gYWRkcmVzcygwKSk7CiAgICBPd25lcnNoaXBUcmFuc2ZlcnJlZChvd25lciwgbmV3T3duZXIpOwogICAgb3duZXIgPSBuZXdPd25lcjsKICB9Cgp9CgovLyBGaWxlOiBjb250cmFjdHMvbWF0aC9TYWZlTWF0aC5zb2wKCi8qKgogKiBAdGl0bGUgU2FmZU1hdGgKICogQGRldiBNYXRoIG9wZXJhdGlvbnMgd2l0aCBzYWZldHkgY2hlY2tzIHRoYXQgdGhyb3cgb24gZXJyb3IKICovCmxpYnJhcnkgU2FmZU1hdGggewogIGZ1bmN0aW9uIG11bCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICBpZiAoYSA9PSAwKSB7CiAgICAgIHJldHVybiAwOwogICAgfQogICAgdWludDI1NiBjID0gYSAqIGI7CiAgICBhc3NlcnQoYyAvIGEgPT0gYik7CiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIGRpdih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAKICAgIHVpbnQyNTYgYyA9IGEgLyBiOwogICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIGFzc2VydChiIDw9IGEpOwogICAgcmV0dXJuIGEgLSBiOwogIH0KCiAgZnVuY3Rpb24gYWRkKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgYXNzZXJ0KGMgPj0gYSk7CiAgICByZXR1cm4gYzsKICB9Cn0KCi8vIEZpbGU6IGNvbnRyYWN0cy90b2tlbi9FUkMyMEJhc2ljLnNvbAoKLyoqCiAqIEB0aXRsZSBFUkMyMEJhc2ljCiAqIEBkZXYgU2ltcGxlciB2ZXJzaW9uIG9mIEVSQzIwIGludGVyZmFjZQogKiBAZGV2IHNlZSBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9pc3N1ZXMvMTc5CiAqLwpjb250cmFjdCBFUkMyMEJhc2ljIHsKICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsKICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyB3aG8pIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYpOwogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sIHVpbnQyNTYgdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKTsKICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHZhbHVlKTsKfQoKLy8gRmlsZTogY29udHJhY3RzL3Rva2VuL0Jhc2ljVG9rZW4uc29sCgovKioKICogQHRpdGxlIEJhc2ljIHRva2VuCiAqIEBkZXYgQmFzaWMgdmVyc2lvbiBvZiBTdGFuZGFyZFRva2VuLCB3aXRoIG5vIGFsbG93YW5jZXMuCiAqLwpjb250cmFjdCBCYXNpY1Rva2VuIGlzIEVSQzIwQmFzaWMgewogIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwoKICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikgYmFsYW5jZXM7CgogIC8qKgogICogQGRldiB0cmFuc2ZlciB0b2tlbiBmb3IgYSBzcGVjaWZpZWQgYWRkcmVzcwogICogQHBhcmFtIF90byBUaGUgYWRkcmVzcyB0byB0cmFuc2ZlciB0by4KICAqIEBwYXJhbSBfdmFsdWUgVGhlIGFtb3VudCB0byBiZSB0cmFuc2ZlcnJlZC4KICAqLwogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgIHJlcXVpcmUoX3RvICE9IGFkZHJlc3MoMCkpOwogICAgcmVxdWlyZShfdmFsdWUgPD0gYmFsYW5jZXNbbXNnLnNlbmRlcl0pOwoKICAgIC8vIFNhZmVNYXRoLnN1YiB3aWxsIHRocm93IGlmIHRoZXJlIGlzIG5vdCBlbm91Z2ggYmFsYW5jZS4KICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gYmFsYW5jZXNbbXNnLnNlbmRlcl0uc3ViKF92YWx1ZSk7CiAgICBiYWxhbmNlc1tfdG9dID0gYmFsYW5jZXNbX3RvXS5hZGQoX3ZhbHVlKTsKICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgLyoqCiAgKiBAZGV2IEdldHMgdGhlIGJhbGFuY2Ugb2YgdGhlIHNwZWNpZmllZCBhZGRyZXNzLgogICogQHBhcmFtIF9vd25lciBUaGUgYWRkcmVzcyB0byBxdWVyeSB0aGUgdGhlIGJhbGFuY2Ugb2YuCiAgKiBAcmV0dXJuIEFuIHVpbnQyNTYgcmVwcmVzZW50aW5nIHRoZSBhbW91bnQgb3duZWQgYnkgdGhlIHBhc3NlZCBhZGRyZXNzLgogICovCiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpIHsKICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogIH0KCn0KCi8vIEZpbGU6IGNvbnRyYWN0cy90b2tlbi9FUkMyMC5zb2wKCi8qKgogKiBAdGl0bGUgRVJDMjAgaW50ZXJmYWNlCiAqIEBkZXYgc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8yMAogKi8KY29udHJhY3QgRVJDMjAgaXMgRVJDMjBCYXNpYyB7CiAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3Mgb3duZXIsIGFkZHJlc3Mgc3BlbmRlcikgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1Nik7CiAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgZnJvbSwgYWRkcmVzcyB0bywgdWludDI1NiB2YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpOwogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBzcGVuZGVyLCB1aW50MjU2IHZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CiAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIG93bmVyLCBhZGRyZXNzIGluZGV4ZWQgc3BlbmRlciwgdWludDI1NiB2YWx1ZSk7Cn0KCi8vIEZpbGU6IGNvbnRyYWN0cy90b2tlbi9TdGFuZGFyZFRva2VuLnNvbAoKLyoqCiAqIEB0aXRsZSBTdGFuZGFyZCBFUkMyMCB0b2tlbgogKgogKiBAZGV2IEltcGxlbWVudGF0aW9uIG9mIHRoZSBiYXNpYyBzdGFuZGFyZCB0b2tlbi4KICogQGRldiBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9pc3N1ZXMvMjAKICogQGRldiBCYXNlZCBvbiBjb2RlIGJ5IEZpcnN0Qmxvb2Q6IGh0dHBzOi8vZ2l0aHViLmNvbS9GaXJzdGJsb29kaW8vdG9rZW4vYmxvYi9tYXN0ZXIvc21hcnRfY29udHJhY3QvRmlyc3RCbG9vZFRva2VuLnNvbAogKi8KY29udHJhY3QgU3RhbmRhcmRUb2tlbiBpcyBFUkMyMCwgQmFzaWNUb2tlbiB7CgogIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgaW50ZXJuYWwgYWxsb3dlZDsKCgogIC8qKgogICAqIEBkZXYgVHJhbnNmZXIgdG9rZW5zIGZyb20gb25lIGFkZHJlc3MgdG8gYW5vdGhlcgogICAqIEBwYXJhbSBfZnJvbSBhZGRyZXNzIFRoZSBhZGRyZXNzIHdoaWNoIHlvdSB3YW50IHRvIHNlbmQgdG9rZW5zIGZyb20KICAgKiBAcGFyYW0gX3RvIGFkZHJlc3MgVGhlIGFkZHJlc3Mgd2hpY2ggeW91IHdhbnQgdG8gdHJhbnNmZXIgdG8KICAgKiBAcGFyYW0gX3ZhbHVlIHVpbnQyNTYgdGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gYmUgdHJhbnNmZXJyZWQKICAgKi8KICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgcmVxdWlyZShfdG8gIT0gYWRkcmVzcygwKSk7CiAgICByZXF1aXJlKF92YWx1ZSA8PSBiYWxhbmNlc1tfZnJvbV0pOwogICAgcmVxdWlyZShfdmFsdWUgPD0gYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0pOwoKICAgIGJhbGFuY2VzW19mcm9tXSA9IGJhbGFuY2VzW19mcm9tXS5zdWIoX3ZhbHVlKTsKICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfdmFsdWUpOwogICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gPSBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXS5zdWIoX3ZhbHVlKTsKICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIC8qKgogICAqIEBkZXYgQXBwcm92ZSB0aGUgcGFzc2VkIGFkZHJlc3MgdG8gc3BlbmQgdGhlIHNwZWNpZmllZCBhbW91bnQgb2YgdG9rZW5zIG9uIGJlaGFsZiBvZiBtc2cuc2VuZGVyLgogICAqCiAgICogQmV3YXJlIHRoYXQgY2hhbmdpbmcgYW4gYWxsb3dhbmNlIHdpdGggdGhpcyBtZXRob2QgYnJpbmdzIHRoZSByaXNrIHRoYXQgc29tZW9uZSBtYXkgdXNlIGJvdGggdGhlIG9sZAogICAqIGFuZCB0aGUgbmV3IGFsbG93YW5jZSBieSB1bmZvcnR1bmF0ZSB0cmFuc2FjdGlvbiBvcmRlcmluZy4gT25lIHBvc3NpYmxlIHNvbHV0aW9uIHRvIG1pdGlnYXRlIHRoaXMKICAgKiByYWNlIGNvbmRpdGlvbiBpcyB0byBmaXJzdCByZWR1Y2UgdGhlIHNwZW5kZXIncyBhbGxvd2FuY2UgdG8gMCBhbmQgc2V0IHRoZSBkZXNpcmVkIHZhbHVlIGFmdGVyd2FyZHM6CiAgICogaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL0VJUHMvaXNzdWVzLzIwI2lzc3VlY29tbWVudC0yNjM1MjQ3MjkKICAgKiBAcGFyYW0gX3NwZW5kZXIgVGhlIGFkZHJlc3Mgd2hpY2ggd2lsbCBzcGVuZCB0aGUgZnVuZHMuCiAgICogQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IG9mIHRva2VucyB0byBiZSBzcGVudC4KICAgKi8KICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CiAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgLyoqCiAgICogQGRldiBGdW5jdGlvbiB0byBjaGVjayB0aGUgYW1vdW50IG9mIHRva2VucyB0aGF0IGFuIG93bmVyIGFsbG93ZWQgdG8gYSBzcGVuZGVyLgogICAqIEBwYXJhbSBfb3duZXIgYWRkcmVzcyBUaGUgYWRkcmVzcyB3aGljaCBvd25zIHRoZSBmdW5kcy4KICAgKiBAcGFyYW0gX3NwZW5kZXIgYWRkcmVzcyBUaGUgYWRkcmVzcyB3aGljaCB3aWxsIHNwZW5kIHRoZSBmdW5kcy4KICAgKiBAcmV0dXJuIEEgdWludDI1NiBzcGVjaWZ5aW5nIHRoZSBhbW91bnQgb2YgdG9rZW5zIHN0aWxsIGF2YWlsYWJsZSBmb3IgdGhlIHNwZW5kZXIuCiAgICovCiAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2KSB7CiAgICByZXR1cm4gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsKICB9CgogIC8qKgogICAqIEBkZXYgSW5jcmVhc2UgdGhlIGFtb3VudCBvZiB0b2tlbnMgdGhhdCBhbiBvd25lciBhbGxvd2VkIHRvIGEgc3BlbmRlci4KICAgKgogICAqIGFwcHJvdmUgc2hvdWxkIGJlIGNhbGxlZCB3aGVuIGFsbG93ZWRbX3NwZW5kZXJdID09IDAuIFRvIGluY3JlbWVudAogICAqIGFsbG93ZWQgdmFsdWUgaXMgYmV0dGVyIHRvIHVzZSB0aGlzIGZ1bmN0aW9uIHRvIGF2b2lkIDIgY2FsbHMgKGFuZCB3YWl0IHVudGlsCiAgICogdGhlIGZpcnN0IHRyYW5zYWN0aW9uIGlzIG1pbmVkKQogICAqIEZyb20gTW9ub2xpdGhEQU8gVG9rZW4uc29sCiAgICogQHBhcmFtIF9zcGVuZGVyIFRoZSBhZGRyZXNzIHdoaWNoIHdpbGwgc3BlbmQgdGhlIGZ1bmRzLgogICAqIEBwYXJhbSBfYWRkZWRWYWx1ZSBUaGUgYW1vdW50IG9mIHRva2VucyB0byBpbmNyZWFzZSB0aGUgYWxsb3dhbmNlIGJ5LgogICAqLwogIGZ1bmN0aW9uIGluY3JlYXNlQXBwcm92YWwoYWRkcmVzcyBfc3BlbmRlciwgdWludCBfYWRkZWRWYWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0uYWRkKF9hZGRlZFZhbHVlKTsKICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIC8qKgogICAqIEBkZXYgRGVjcmVhc2UgdGhlIGFtb3VudCBvZiB0b2tlbnMgdGhhdCBhbiBvd25lciBhbGxvd2VkIHRvIGEgc3BlbmRlci4KICAgKgogICAqIGFwcHJvdmUgc2hvdWxkIGJlIGNhbGxlZCB3aGVuIGFsbG93ZWRbX3NwZW5kZXJdID09IDAuIFRvIGRlY3JlbWVudAogICAqIGFsbG93ZWQgdmFsdWUgaXMgYmV0dGVyIHRvIHVzZSB0aGlzIGZ1bmN0aW9uIHRvIGF2b2lkIDIgY2FsbHMgKGFuZCB3YWl0IHVudGlsCiAgICogdGhlIGZpcnN0IHRyYW5zYWN0aW9uIGlzIG1pbmVkKQogICAqIEZyb20gTW9ub2xpdGhEQU8gVG9rZW4uc29sCiAgICogQHBhcmFtIF9zcGVuZGVyIFRoZSBhZGRyZXNzIHdoaWNoIHdpbGwgc3BlbmQgdGhlIGZ1bmRzLgogICAqIEBwYXJhbSBfc3VidHJhY3RlZFZhbHVlIFRoZSBhbW91bnQgb2YgdG9rZW5zIHRvIGRlY3JlYXNlIHRoZSBhbGxvd2FuY2UgYnkuCiAgICovCiAgZnVuY3Rpb24gZGVjcmVhc2VBcHByb3ZhbChhZGRyZXNzIF9zcGVuZGVyLCB1aW50IF9zdWJ0cmFjdGVkVmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICB1aW50IG9sZFZhbHVlID0gYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl07CiAgICBpZiAoX3N1YnRyYWN0ZWRWYWx1ZSA+IG9sZFZhbHVlKSB7CiAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gMDsKICAgIH0gZWxzZSB7CiAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gb2xkVmFsdWUuc3ViKF9zdWJ0cmFjdGVkVmFsdWUpOwogICAgfQogICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdKTsKICAgIHJldHVybiB0cnVlOwogIH0KCn0KCi8vIEZpbGU6IGNvbnRyYWN0cy9NaW50YWJsZVRva2VuLnNvbAoKY29udHJhY3QgTWludGFibGVUb2tlbiBpcyBTdGFuZGFyZFRva2VuLCBPd25hYmxlIHsKCiAgZXZlbnQgTWludChhZGRyZXNzIGluZGV4ZWQgdG8sIHVpbnQyNTYgYW1vdW50KTsKCiAgZXZlbnQgTWludEZpbmlzaGVkKCk7CgogIGJvb2wgcHVibGljIG1pbnRpbmdGaW5pc2hlZCA9IGZhbHNlOwoKICBhZGRyZXNzIHB1YmxpYyBzYWxlQWdlbnQ7CgogIG1vZGlmaWVyIG5vdExvY2tlZCgpIHsKICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lciB8fCBtc2cuc2VuZGVyID09IHNhbGVBZ2VudCB8fCBtaW50aW5nRmluaXNoZWQpOwogICAgXzsKICB9CgogIGZ1bmN0aW9uIHNldFNhbGVBZ2VudChhZGRyZXNzIG5ld1NhbGVBZ25ldCkgcHVibGljIHsKICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBzYWxlQWdlbnQgfHwgbXNnLnNlbmRlciA9PSBvd25lcik7CiAgICBzYWxlQWdlbnQgPSBuZXdTYWxlQWduZXQ7CiAgfQoKICBmdW5jdGlvbiBtaW50KGFkZHJlc3MgX3RvLCB1aW50MjU2IF9hbW91bnQpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICByZXF1aXJlKChtc2cuc2VuZGVyID09IHNhbGVBZ2VudCB8fCBtc2cuc2VuZGVyID09IG93bmVyKSAmJiAhbWludGluZ0ZpbmlzaGVkKTsKCiAgICB0b3RhbFN1cHBseSA9IHRvdGFsU3VwcGx5LmFkZChfYW1vdW50KTsKICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfYW1vdW50KTsKICAgIE1pbnQoX3RvLCBfYW1vdW50KTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgLyoqCiAgICogQGRldiBGdW5jdGlvbiB0byBzdG9wIG1pbnRpbmcgbmV3IHRva2Vucy4KICAgKiBAcmV0dXJuIFRydWUgaWYgdGhlIG9wZXJhdGlvbiB3YXMgc3VjY2Vzc2Z1bC4KICAgKi8KICBmdW5jdGlvbiBmaW5pc2hNaW50aW5nKCkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgIHJlcXVpcmUoKG1zZy5zZW5kZXIgPT0gc2FsZUFnZW50IHx8IG1zZy5zZW5kZXIgPT0gb3duZXIpICYmICFtaW50aW5nRmluaXNoZWQpOwogICAgbWludGluZ0ZpbmlzaGVkID0gdHJ1ZTsKICAgIE1pbnRGaW5pc2hlZCgpOwogICAgcmV0dXJuIHRydWU7CiAgfQoKICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyBub3RMb2NrZWQgcmV0dXJucyAoYm9vbCkgewogICAgcmV0dXJuIHN1cGVyLnRyYW5zZmVyKF90bywgX3ZhbHVlKTsKICB9CgogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIGZyb20sIGFkZHJlc3MgdG8sIHVpbnQyNTYgdmFsdWUpIHB1YmxpYyBub3RMb2NrZWQgcmV0dXJucyAoYm9vbCkgewogICAgcmV0dXJuIHN1cGVyLnRyYW5zZmVyRnJvbShmcm9tLCB0bywgdmFsdWUpOwogIH0KCn0KCi8vIEZpbGU6IGNvbnRyYWN0cy9JbnNwZW1Ub2tlbi5zb2wKCmNvbnRyYWN0IEluc3BlbVRva2VuIGlzIE1pbnRhYmxlVG9rZW4gewoKICBzdHJpbmcgcHVibGljIGNvbnN0YW50IG5hbWUgPSAiSW5zcGVtIjsKCiAgc3RyaW5nIHB1YmxpYyBjb25zdGFudCBzeW1ib2wgPSAiSU5QIjsKCiAgdWludDMyIHB1YmxpYyBjb25zdGFudCBkZWNpbWFscyA9IDE4OwoKfQoKLy8gRmlsZTogY29udHJhY3RzL1BlcmNlbnRSYXRlUHJvdmlkZXIuc29sCgpjb250cmFjdCBQZXJjZW50UmF0ZVByb3ZpZGVyIGlzIE93bmFibGUgewoKICB1aW50IHB1YmxpYyBwZXJjZW50UmF0ZSA9IDEwMDsKCiAgZnVuY3Rpb24gc2V0UGVyY2VudFJhdGUodWludCBuZXdQZXJjZW50UmF0ZSkgcHVibGljIG9ubHlPd25lciB7CiAgICBwZXJjZW50UmF0ZSA9IG5ld1BlcmNlbnRSYXRlOwogIH0KCn0KCi8vIEZpbGU6IGNvbnRyYWN0cy9Db21tb25TYWxlLnNvbAoKY29udHJhY3QgQ29tbW9uU2FsZSBpcyBQZXJjZW50UmF0ZVByb3ZpZGVyIHsKCiAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQ7CgogIGFkZHJlc3MgcHVibGljIHdhbGxldDsKCiAgYWRkcmVzcyBwdWJsaWMgZGlyZWN0TWludEFnZW50OwoKICB1aW50IHB1YmxpYyBwcmljZTsKCiAgdWludCBwdWJsaWMgc3RhcnQ7CgogIHVpbnQgcHVibGljIG1pbkludmVzdGVkTGltaXQ7CgogIE1pbnRhYmxlVG9rZW4gcHVibGljIHRva2VuOwoKICB1aW50IHB1YmxpYyBoYXJkY2FwOwoKICB1aW50IHB1YmxpYyBpbnZlc3RlZDsKCiAgbW9kaWZpZXIgaXNVbmRlckhhcmRjYXAoKSB7CiAgICByZXF1aXJlKGludmVzdGVkIDwgaGFyZGNhcCk7CiAgICBfOwogIH0KCiAgZnVuY3Rpb24gc2V0SGFyZGNhcCh1aW50IG5ld0hhcmRjYXApIHB1YmxpYyBvbmx5T3duZXIgewogICAgaGFyZGNhcCA9IG5ld0hhcmRjYXA7CiAgfQoKICBtb2RpZmllciBvbmx5RGlyZWN0TWludEFnZW50T3JPd25lcigpIHsKICAgIHJlcXVpcmUoZGlyZWN0TWludEFnZW50ID09IG1zZy5zZW5kZXIgfHwgb3duZXIgPT0gbXNnLnNlbmRlcik7CiAgICBfOwogIH0KCiAgbW9kaWZpZXIgbWluSW52ZXN0TGltaXRlZCh1aW50IHZhbHVlKSB7CiAgICByZXF1aXJlKHZhbHVlID49IG1pbkludmVzdGVkTGltaXQpOwogICAgXzsKICB9CgogIGZ1bmN0aW9uIHNldFN0YXJ0KHVpbnQgbmV3U3RhcnQpIHB1YmxpYyBvbmx5T3duZXIgewogICAgc3RhcnQgPSBuZXdTdGFydDsKICB9CgogIGZ1bmN0aW9uIHNldE1pbkludmVzdGVkTGltaXQodWludCBuZXdNaW5JbnZlc3RlZExpbWl0KSBwdWJsaWMgb25seU93bmVyIHsKICAgIG1pbkludmVzdGVkTGltaXQgPSBuZXdNaW5JbnZlc3RlZExpbWl0OwogIH0KCiAgZnVuY3Rpb24gc2V0RGlyZWN0TWludEFnZW50KGFkZHJlc3MgbmV3RGlyZWN0TWludEFnZW50KSBwdWJsaWMgb25seU93bmVyIHsKICAgIGRpcmVjdE1pbnRBZ2VudCA9IG5ld0RpcmVjdE1pbnRBZ2VudDsKICB9CgogIGZ1bmN0aW9uIHNldFdhbGxldChhZGRyZXNzIG5ld1dhbGxldCkgcHVibGljIG9ubHlPd25lciB7CiAgICB3YWxsZXQgPSBuZXdXYWxsZXQ7CiAgfQoKICBmdW5jdGlvbiBzZXRQcmljZSh1aW50IG5ld1ByaWNlKSBwdWJsaWMgb25seU93bmVyIHsKICAgIHByaWNlID0gbmV3UHJpY2U7CiAgfQoKICBmdW5jdGlvbiBzZXRUb2tlbihhZGRyZXNzIG5ld1Rva2VuKSBwdWJsaWMgb25seU93bmVyIHsKICAgIHRva2VuID0gTWludGFibGVUb2tlbihuZXdUb2tlbik7CiAgfQoKICBmdW5jdGlvbiBjYWxjdWxhdGVUb2tlbnModWludCBfaW52ZXN0ZWQpIGludGVybmFsIHJldHVybnModWludCk7CgogIGZ1bmN0aW9uIG1pbnRUb2tlbnNFeHRlcm5hbChhZGRyZXNzIHRvLCB1aW50IHRva2VucykgcHVibGljIG9ubHlEaXJlY3RNaW50QWdlbnRPck93bmVyIHsKICAgIG1pbnRUb2tlbnModG8sIHRva2Vucyk7CiAgfQoKICBmdW5jdGlvbiBtaW50VG9rZW5zKGFkZHJlc3MgdG8sIHVpbnQgdG9rZW5zKSBpbnRlcm5hbCB7CiAgICB0b2tlbi5taW50KHRoaXMsIHRva2Vucyk7CiAgICB0b2tlbi50cmFuc2Zlcih0bywgdG9rZW5zKTsKICB9CgogIGZ1bmN0aW9uIGVuZFNhbGVEYXRlKCkgcHVibGljIHZpZXcgcmV0dXJucyh1aW50KTsKCiAgZnVuY3Rpb24gbWludFRva2Vuc0J5RVRIRXh0ZXJuYWwoYWRkcmVzcyB0bywgdWludCBfaW52ZXN0ZWQpIHB1YmxpYyBvbmx5RGlyZWN0TWludEFnZW50T3JPd25lciByZXR1cm5zKHVpbnQpIHsKICAgIHJldHVybiBtaW50VG9rZW5zQnlFVEgodG8sIF9pbnZlc3RlZCk7CiAgfQoKICBmdW5jdGlvbiBtaW50VG9rZW5zQnlFVEgoYWRkcmVzcyB0bywgdWludCBfaW52ZXN0ZWQpIGludGVybmFsIGlzVW5kZXJIYXJkY2FwIHJldHVybnModWludCkgewogICAgaW52ZXN0ZWQgPSBpbnZlc3RlZC5hZGQoX2ludmVzdGVkKTsKICAgIHVpbnQgdG9rZW5zID0gY2FsY3VsYXRlVG9rZW5zKF9pbnZlc3RlZCk7CiAgICBtaW50VG9rZW5zKHRvLCB0b2tlbnMpOwogICAgcmV0dXJuIHRva2VuczsKICB9CgogIGZ1bmN0aW9uIGZhbGxiYWNrKCkgaW50ZXJuYWwgbWluSW52ZXN0TGltaXRlZChtc2cudmFsdWUpIHJldHVybnModWludCkgewogICAgcmVxdWlyZShub3cgPj0gc3RhcnQgJiYgbm93IDwgZW5kU2FsZURhdGUoKSk7CiAgICB3YWxsZXQudHJhbnNmZXIobXNnLnZhbHVlKTsKICAgIHJldHVybiBtaW50VG9rZW5zQnlFVEgobXNnLnNlbmRlciwgbXNnLnZhbHVlKTsKICB9CgogIGZ1bmN0aW9uICgpIHB1YmxpYyBwYXlhYmxlIHsKICAgIGZhbGxiYWNrKCk7CiAgfQoKfQoKLy8gRmlsZTogY29udHJhY3RzL0lucHV0QWRkcmVzc0ZlYXR1cmUuc29sCgpjb250cmFjdCBJbnB1dEFkZHJlc3NGZWF0dXJlIHsKCiAgZnVuY3Rpb24gYnl0ZXNUb0FkZHJlc3MoYnl0ZXMgc291cmNlKSBpbnRlcm5hbCBwdXJlIHJldHVybnMoYWRkcmVzcykgewogICAgdWludCByZXN1bHQ7CiAgICB1aW50IG11bCA9IDE7CiAgICBmb3IodWludCBpID0gMjA7IGkgPiAwOyBpLS0pIHsKICAgICAgcmVzdWx0ICs9IHVpbnQ4KHNvdXJjZVtpLTFdKSptdWw7CiAgICAgIG11bCA9IG11bCoyNTY7CiAgICB9CiAgICByZXR1cm4gYWRkcmVzcyhyZXN1bHQpOwogIH0KCiAgZnVuY3Rpb24gZ2V0SW5wdXRBZGRyZXNzKCkgaW50ZXJuYWwgcHVyZSByZXR1cm5zKGFkZHJlc3MpIHsKICAgIGlmKG1zZy5kYXRhLmxlbmd0aCA9PSAyMCkgewogICAgICByZXR1cm4gYnl0ZXNUb0FkZHJlc3MoYnl0ZXMobXNnLmRhdGEpKTsKICAgIH0KICAgIHJldHVybiBhZGRyZXNzKDApOwogIH0KCn0KCi8vIEZpbGU6IGNvbnRyYWN0cy9SZWZlcmVyc1Jld2FyZEZlYXR1cmUuc29sCgpjb250cmFjdCBSZWZlcmVyc1Jld2FyZEZlYXR1cmUgaXMgSW5wdXRBZGRyZXNzRmVhdHVyZSwgQ29tbW9uU2FsZSB7CgogIHVpbnQgcHVibGljIHJlZmVyZXJQZXJjZW50OwoKICBmdW5jdGlvbiBzZXRSZWZlcmVyUGVyY2VudCh1aW50IG5ld1JlZmVyZXJQZXJjZW50KSBwdWJsaWMgb25seU93bmVyIHsKICAgIHJlZmVyZXJQZXJjZW50ID0gbmV3UmVmZXJlclBlcmNlbnQ7CiAgfQoKICBmdW5jdGlvbiBmYWxsYmFjaygpIGludGVybmFsIHJldHVybnModWludCkgewogICAgdWludCB0b2tlbnMgPSBzdXBlci5mYWxsYmFjaygpOwogICAgYWRkcmVzcyByZWZlcmVyID0gZ2V0SW5wdXRBZGRyZXNzKCk7CiAgICBpZihyZWZlcmVyICE9IGFkZHJlc3MoMCkpIHsKICAgICAgcmVxdWlyZShyZWZlcmVyICE9IGFkZHJlc3ModG9rZW4pICYmIHJlZmVyZXIgIT0gbXNnLnNlbmRlciAmJiByZWZlcmVyICE9IGFkZHJlc3ModGhpcykpOwogICAgICBtaW50VG9rZW5zKHJlZmVyZXIsIHRva2Vucy5tdWwocmVmZXJlclBlcmNlbnQpLmRpdihwZXJjZW50UmF0ZSkpOwogICAgfQogICAgcmV0dXJuIHRva2VuczsKICB9Cgp9CgovLyBGaWxlOiBjb250cmFjdHMvUmV0cmlldmVUb2tlbnNGZWF0dXJlLnNvbAoKY29udHJhY3QgUmV0cmlldmVUb2tlbnNGZWF0dXJlIGlzIE93bmFibGUgewoKICBmdW5jdGlvbiByZXRyaWV2ZVRva2VucyhhZGRyZXNzIHRvLCBhZGRyZXNzIGFub3RoZXJUb2tlbikgcHVibGljIG9ubHlPd25lciB7CiAgICBFUkMyMCBhbGllblRva2VuID0gRVJDMjAoYW5vdGhlclRva2VuKTsKICAgIGFsaWVuVG9rZW4udHJhbnNmZXIodG8sIGFsaWVuVG9rZW4uYmFsYW5jZU9mKHRoaXMpKTsKICB9Cgp9CgovLyBGaWxlOiBjb250cmFjdHMvU3RhZ2VkQ3Jvd2RzYWxlLnNvbAoKY29udHJhY3QgU3RhZ2VkQ3Jvd2RzYWxlIGlzIE93bmFibGUgewoKICB1c2luZyBTYWZlTWF0aCBmb3IgdWludDsKCiAgc3RydWN0IE1pbGVzdG9uZSB7CiAgICB1aW50IHBlcmlvZDsKICAgIHVpbnQgYm9udXM7CiAgfQoKICB1aW50IHB1YmxpYyB0b3RhbFBlcmlvZDsKCiAgTWlsZXN0b25lW10gcHVibGljIG1pbGVzdG9uZXM7CgogIGZ1bmN0aW9uIG1pbGVzdG9uZXNDb3VudCgpIHB1YmxpYyB2aWV3IHJldHVybnModWludCkgewogICAgcmV0dXJuIG1pbGVzdG9uZXMubGVuZ3RoOwogIH0KCiAgZnVuY3Rpb24gYWRkTWlsZXN0b25lKHVpbnQgcGVyaW9kLCB1aW50IGJvbnVzKSBwdWJsaWMgb25seU93bmVyIHsKICAgIHJlcXVpcmUocGVyaW9kID4gMCk7CiAgICBtaWxlc3RvbmVzLnB1c2goTWlsZXN0b25lKHBlcmlvZCwgYm9udXMpKTsKICAgIHRvdGFsUGVyaW9kID0gdG90YWxQZXJpb2QuYWRkKHBlcmlvZCk7CiAgfQoKICBmdW5jdGlvbiByZW1vdmVNaWxlc3RvbmUodWludDggbnVtYmVyKSBwdWJsaWMgb25seU93bmVyIHsKICAgIHJlcXVpcmUobnVtYmVyIDwgbWlsZXN0b25lcy5sZW5ndGgpOwogICAgTWlsZXN0b25lIHN0b3JhZ2UgbWlsZXN0b25lID0gbWlsZXN0b25lc1tudW1iZXJdOwogICAgdG90YWxQZXJpb2QgPSB0b3RhbFBlcmlvZC5zdWIobWlsZXN0b25lLnBlcmlvZCk7CgogICAgZGVsZXRlIG1pbGVzdG9uZXNbbnVtYmVyXTsKCiAgICBmb3IgKHVpbnQgaSA9IG51bWJlcjsgaSA8IG1pbGVzdG9uZXMubGVuZ3RoIC0gMTsgaSsrKSB7CiAgICAgIG1pbGVzdG9uZXNbaV0gPSBtaWxlc3RvbmVzW2krMV07CiAgICB9CgogICAgbWlsZXN0b25lcy5sZW5ndGgtLTsKICB9CgogIGZ1bmN0aW9uIGNoYW5nZU1pbGVzdG9uZSh1aW50OCBudW1iZXIsIHVpbnQgcGVyaW9kLCB1aW50IGJvbnVzKSBwdWJsaWMgb25seU93bmVyIHsKICAgIHJlcXVpcmUobnVtYmVyIDwgbWlsZXN0b25lcy5sZW5ndGgpOwogICAgTWlsZXN0b25lIHN0b3JhZ2UgbWlsZXN0b25lID0gbWlsZXN0b25lc1tudW1iZXJdOwoKICAgIHRvdGFsUGVyaW9kID0gdG90YWxQZXJpb2Quc3ViKG1pbGVzdG9uZS5wZXJpb2QpOwoKICAgIG1pbGVzdG9uZS5wZXJpb2QgPSBwZXJpb2Q7CiAgICBtaWxlc3RvbmUuYm9udXMgPSBib251czsKCiAgICB0b3RhbFBlcmlvZCA9IHRvdGFsUGVyaW9kLmFkZChwZXJpb2QpOwogIH0KCiAgZnVuY3Rpb24gaW5zZXJ0TWlsZXN0b25lKHVpbnQ4IG51bWJlckFmdGVyLCB1aW50IHBlcmlvZCwgdWludCBib251cykgcHVibGljIG9ubHlPd25lciB7CiAgICByZXF1aXJlKG51bWJlckFmdGVyIDwgbWlsZXN0b25lcy5sZW5ndGgpOwoKICAgIHRvdGFsUGVyaW9kID0gdG90YWxQZXJpb2QuYWRkKHBlcmlvZCk7CgogICAgbWlsZXN0b25lcy5sZW5ndGgrKzsKCiAgICBmb3IgKHVpbnQgaSA9IG1pbGVzdG9uZXMubGVuZ3RoIC0gMjsgaSA+IG51bWJlckFmdGVyOyBpLS0pIHsKICAgICAgbWlsZXN0b25lc1tpICsgMV0gPSBtaWxlc3RvbmVzW2ldOwogICAgfQoKICAgIG1pbGVzdG9uZXNbbnVtYmVyQWZ0ZXIgKyAxXSA9IE1pbGVzdG9uZShwZXJpb2QsIGJvbnVzKTsKICB9CgogIGZ1bmN0aW9uIGNsZWFyTWlsZXN0b25lcygpIHB1YmxpYyBvbmx5T3duZXIgewogICAgcmVxdWlyZShtaWxlc3RvbmVzLmxlbmd0aCA+IDApOwogICAgZm9yICh1aW50IGkgPSAwOyBpIDwgbWlsZXN0b25lcy5sZW5ndGg7IGkrKykgewogICAgICBkZWxldGUgbWlsZXN0b25lc1tpXTsKICAgIH0KICAgIG1pbGVzdG9uZXMubGVuZ3RoIC09IG1pbGVzdG9uZXMubGVuZ3RoOwogICAgdG90YWxQZXJpb2QgPSAwOwogIH0KCiAgZnVuY3Rpb24gbGFzdFNhbGVEYXRlKHVpbnQgc3RhcnQpIHB1YmxpYyB2aWV3IHJldHVybnModWludCkgewogICAgcmV0dXJuIHN0YXJ0ICsgdG90YWxQZXJpb2QgKiAxIGRheXM7CiAgfQoKICBmdW5jdGlvbiBjdXJyZW50TWlsZXN0b25lKHVpbnQgc3RhcnQpIHB1YmxpYyB2aWV3IHJldHVybnModWludCkgewogICAgdWludCBwcmV2aW91c0RhdGUgPSBzdGFydDsKICAgIGZvcih1aW50IGk9MDsgaSA8IG1pbGVzdG9uZXMubGVuZ3RoOyBpKyspIHsKICAgICAgaWYobm93ID49IHByZXZpb3VzRGF0ZSAmJiBub3cgPCBwcmV2aW91c0RhdGUgKyBtaWxlc3RvbmVzW2ldLnBlcmlvZCAqIDEgZGF5cykgewogICAgICAgIHJldHVybiBpOwogICAgICB9CiAgICAgIHByZXZpb3VzRGF0ZSA9IHByZXZpb3VzRGF0ZS5hZGQobWlsZXN0b25lc1tpXS5wZXJpb2QgKiAxIGRheXMpOwogICAgfQogICAgcmV2ZXJ0KCk7CiAgfQoKfQoKLy8gRmlsZTogY29udHJhY3RzL0luc3BlbUNvbW1vblNhbGUuc29sCgpjb250cmFjdCBJbnNwZW1Db21tb25TYWxlIGlzIFN0YWdlZENyb3dkc2FsZSwgUmV0cmlldmVUb2tlbnNGZWF0dXJlLCBSZWZlcmVyc1Jld2FyZEZlYXR1cmUgewoKICBmdW5jdGlvbiBjYWxjdWxhdGVUb2tlbnModWludCBfaW52ZXN0ZWQpIGludGVybmFsIHJldHVybnModWludCkgewogICAgdWludCBtaWxlc3RvbmVJbmRleCA9IGN1cnJlbnRNaWxlc3RvbmUoc3RhcnQpOwogICAgTWlsZXN0b25lIHN0b3JhZ2UgbWlsZXN0b25lID0gbWlsZXN0b25lc1ttaWxlc3RvbmVJbmRleF07CiAgICB1aW50IHRva2VucyA9IF9pbnZlc3RlZC5tdWwocHJpY2UpLmRpdigxIGV0aGVyKTsKICAgIGlmKG1pbGVzdG9uZS5ib251cyA+IDApIHsKICAgICAgdG9rZW5zID0gdG9rZW5zLmFkZCh0b2tlbnMubXVsKG1pbGVzdG9uZS5ib251cykuZGl2KHBlcmNlbnRSYXRlKSk7CiAgICB9CiAgICByZXR1cm4gdG9rZW5zOwogIH0KCiAgZnVuY3Rpb24gZW5kU2FsZURhdGUoKSBwdWJsaWMgdmlldyByZXR1cm5zKHVpbnQpIHsKICAgIHJldHVybiBsYXN0U2FsZURhdGUoc3RhcnQpOwogIH0KCn0KCi8vIEZpbGU6IGNvbnRyYWN0cy9NYWluc2FsZS5zb2wKCmNvbnRyYWN0IE1haW5zYWxlIGlzIEluc3BlbUNvbW1vblNhbGUgewoKICBhZGRyZXNzIHB1YmxpYyBmb3VuZGVyc1Rva2Vuc1dhbGxldDsKCiAgYWRkcmVzcyBwdWJsaWMgYm91bnR5VG9rZW5zV2FsbGV0OwoKICB1aW50IHB1YmxpYyBmb3VuZGVyc1Rva2Vuc1BlcmNlbnQ7CgogIHVpbnQgcHVibGljIGJvdW50eVRva2Vuc1BlcmNlbnQ7CgogIGZ1bmN0aW9uIHNldEZvdW5kZXJzVG9rZW5zUGVyY2VudCh1aW50IG5ld0ZvdW5kZXJzVG9rZW5zUGVyY2VudCkgcHVibGljIG9ubHlPd25lciB7CiAgICBmb3VuZGVyc1Rva2Vuc1BlcmNlbnQgPSBuZXdGb3VuZGVyc1Rva2Vuc1BlcmNlbnQ7CiAgfQoKICBmdW5jdGlvbiBzZXRCb3VudHlUb2tlbnNQZXJjZW50KHVpbnQgbmV3Qm91bnR5VG9rZW5zUGVyY2VudCkgcHVibGljIG9ubHlPd25lciB7CiAgICBib3VudHlUb2tlbnNQZXJjZW50ID0gbmV3Qm91bnR5VG9rZW5zUGVyY2VudDsKICB9CgogIGZ1bmN0aW9uIHNldEZvdW5kZXJzVG9rZW5zV2FsbGV0KGFkZHJlc3MgbmV3Rm91bmRlcnNUb2tlbnNXYWxsZXQpIHB1YmxpYyBvbmx5T3duZXIgewogICAgZm91bmRlcnNUb2tlbnNXYWxsZXQgPSBuZXdGb3VuZGVyc1Rva2Vuc1dhbGxldDsKICB9CgogIGZ1bmN0aW9uIHNldEJvdW50eVRva2Vuc1dhbGxldChhZGRyZXNzIG5ld0JvdW50eVRva2Vuc1dhbGxldCkgcHVibGljIG9ubHlPd25lciB7CiAgICBib3VudHlUb2tlbnNXYWxsZXQgPSBuZXdCb3VudHlUb2tlbnNXYWxsZXQ7CiAgfQoKICBmdW5jdGlvbiBmaW5pc2goKSBwdWJsaWMgb25seU93bmVyIHsKICAgIHVpbnQgc3VtbWFyeVRva2Vuc1BlcmNlbnQgPSBib3VudHlUb2tlbnNQZXJjZW50LmFkZChmb3VuZGVyc1Rva2Vuc1BlcmNlbnQpOwogICAgdWludCBtaW50ZWRUb2tlbnMgPSB0b2tlbi50b3RhbFN1cHBseSgpOwogICAgdWludCBhbGxUb2tlbnMgPSBtaW50ZWRUb2tlbnMubXVsKHBlcmNlbnRSYXRlKS5kaXYocGVyY2VudFJhdGUuc3ViKHN1bW1hcnlUb2tlbnNQZXJjZW50KSk7CiAgICB1aW50IGZvdW5kZXJzVG9rZW5zID0gYWxsVG9rZW5zLm11bChmb3VuZGVyc1Rva2Vuc1BlcmNlbnQpLmRpdihwZXJjZW50UmF0ZSk7CiAgICB1aW50IGJvdW50eVRva2VucyA9IGFsbFRva2Vucy5tdWwoYm91bnR5VG9rZW5zUGVyY2VudCkuZGl2KHBlcmNlbnRSYXRlKTsKICAgIG1pbnRUb2tlbnMoZm91bmRlcnNUb2tlbnNXYWxsZXQsIGZvdW5kZXJzVG9rZW5zKTsKICAgIG1pbnRUb2tlbnMoYm91bnR5VG9rZW5zV2FsbGV0LCBib3VudHlUb2tlbnMpOwogICAgdG9rZW4uZmluaXNoTWludGluZygpOwogIH0KCn0KCi8vIEZpbGU6IGNvbnRyYWN0cy9OZXh0U2FsZUFnZW50RmVhdHVyZS5zb2wKCmNvbnRyYWN0IE5leHRTYWxlQWdlbnRGZWF0dXJlIGlzIE93bmFibGUgewoKICBhZGRyZXNzIHB1YmxpYyBuZXh0U2FsZUFnZW50OwoKICBmdW5jdGlvbiBzZXROZXh0U2FsZUFnZW50KGFkZHJlc3MgbmV3TmV4dFNhbGVBZ2VudCkgcHVibGljIG9ubHlPd25lciB7CiAgICBuZXh0U2FsZUFnZW50ID0gbmV3TmV4dFNhbGVBZ2VudDsKICB9Cgp9CgovLyBGaWxlOiBjb250cmFjdHMvUHJlc2FsZS5zb2wKCmNvbnRyYWN0IFByZXNhbGUgaXMgTmV4dFNhbGVBZ2VudEZlYXR1cmUsIEluc3BlbUNvbW1vblNhbGUgewoKICBmdW5jdGlvbiBmaW5pc2goKSBwdWJsaWMgb25seU93bmVyIHsKICAgIHRva2VuLnNldFNhbGVBZ2VudChuZXh0U2FsZUFnZW50KTsKICB9Cgp9CgovLyBGaWxlOiBjb250cmFjdHMvQ29uZmlndXJhdG9yLnNvbAoKY29udHJhY3QgQ29uZmlndXJhdG9yIGlzIE93bmFibGUgewoKICBNaW50YWJsZVRva2VuIHB1YmxpYyB0b2tlbjsKCiAgUHJlc2FsZSBwdWJsaWMgcHJlc2FsZTsKCiAgTWFpbnNhbGUgcHVibGljIG1haW5zYWxlOwoKICBmdW5jdGlvbiBkZXBsb3koKSBwdWJsaWMgb25seU93bmVyIHsKCiAgICB0b2tlbiA9IG5ldyBJbnNwZW1Ub2tlbigpOwogICAgcHJlc2FsZSA9IG5ldyBQcmVzYWxlKCk7CiAgICBtYWluc2FsZSA9IG5ldyBNYWluc2FsZSgpOwoKICAgIHRva2VuLnNldFNhbGVBZ2VudChwcmVzYWxlKTsKCiAgICBwcmVzYWxlLmFkZE1pbGVzdG9uZSgxNCwgMTAwKTsKICAgIHByZXNhbGUuYWRkTWlsZXN0b25lKDE0LCA1MCk7CiAgICBwcmVzYWxlLnNldFdhbGxldCgweDE2QWY2MDZFMmYzOTZERGRkZTYxODA5QTJDNzNiOEU2NEE4MWMxRWEpOwogICAgcHJlc2FsZS5zZXRTdGFydCgxNTIxNTUwODAwKTsKICAgIHByZXNhbGUuc2V0UHJpY2UoNTAwMDAwMDAwMDAwMDAwMDAwMDAwMCk7CiAgICBwcmVzYWxlLnNldEhhcmRjYXAoMjAwMDAwMDAwMDAwMDAwMDAwMDAwMCk7CiAgICBwcmVzYWxlLnNldE1pbkludmVzdGVkTGltaXQoMTAwMDAwMDAwMDAwMDAwMDAwKTsKICAgIHByZXNhbGUuc2V0UmVmZXJlclBlcmNlbnQoNSk7CiAgICBwcmVzYWxlLnNldFRva2VuKHRva2VuKTsKICAgIHByZXNhbGUuc2V0TmV4dFNhbGVBZ2VudChtYWluc2FsZSk7CgogICAgbWFpbnNhbGUuYWRkTWlsZXN0b25lKDcsIDMwKTsKICAgIG1haW5zYWxlLmFkZE1pbGVzdG9uZSg3LCAyMCk7CiAgICBtYWluc2FsZS5hZGRNaWxlc3RvbmUoNywgMTApOwogICAgbWFpbnNhbGUuYWRkTWlsZXN0b25lKDcsIDApOwogICAgbWFpbnNhbGUuc2V0UHJpY2UoNTAwMDAwMDAwMDAwMDAwMDAwMDAwMCk7CiAgICBtYWluc2FsZS5zZXRXYWxsZXQoMHhiMjRFRGJjNmQ3RURhMzNhZjRBOTFkNTdjNjIxZTVlQjg2YzAyQmNGKTsKICAgIG1haW5zYWxlLnNldEZvdW5kZXJzVG9rZW5zV2FsbGV0KDB4QUZBMWJGREYzMTEyZDRkM2U5Q2FDNEExMDBhMGVCZjIyMjMxODc4Yyk7CiAgICBtYWluc2FsZS5zZXRCb3VudHlUb2tlbnNXYWxsZXQoMHgzYzAyNjBDZTE5MzYzMzUwMjY0RDIzRmQxQTQ4RjUwMDAxZEJiNWVlKTsKICAgIG1haW5zYWxlLnNldFN0YXJ0KDE1MjUxNzk2MDApOwogICAgbWFpbnNhbGUuc2V0SGFyZGNhcCgzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCk7CiAgICBtYWluc2FsZS5zZXRNaW5JbnZlc3RlZExpbWl0KDEwMDAwMDAwMDAwMDAwMDAwMCk7CiAgICBtYWluc2FsZS5zZXRSZWZlcmVyUGVyY2VudCg1KTsKICAgIG1haW5zYWxlLnNldEZvdW5kZXJzVG9rZW5zUGVyY2VudCgxNSk7CiAgICBtYWluc2FsZS5zZXRCb3VudHlUb2tlbnNQZXJjZW50KDUpOwogICAgbWFpbnNhbGUuc2V0VG9rZW4odG9rZW4pOwoKICAgIGFkZHJlc3MgbWFuYWdlciA9IDB4M2U4ODY5MzREOWQyNDE0MTg2Q0U1NDQ3N0Y3Q0MzYkJFMTY0MDIyYTsKICAgIHRva2VuLnRyYW5zZmVyT3duZXJzaGlwKG1hbmFnZXIpOwogICAgcHJlc2FsZS50cmFuc2Zlck93bmVyc2hpcChtYW5hZ2VyKTsKICAgIG1haW5zYWxlLnRyYW5zZmVyT3duZXJzaGlwKG1hbmFnZXIpOwogIH0KCn0='.
	

]
