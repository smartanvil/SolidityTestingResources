Class {
	#name : #SRTf2ad62fb35bad00b30e3af1d920de48d29613993,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTf2ad62fb35bad00b30e3af1d920de48d29613993 >> base64 [
	^ ''.
	

]
