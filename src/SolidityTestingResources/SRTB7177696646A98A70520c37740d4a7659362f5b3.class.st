Class {
	#name : #SRTB7177696646A98A70520c37740d4a7659362f5b3,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTB7177696646A98A70520c37740d4a7659362f5b3 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMDsKCmNvbnRyYWN0IEV0aHJhZmZsZSB7CiAgICBzdHJ1Y3QgQ29udGVzdGFudCB7CiAgICAgICAgYWRkcmVzcyBhZGRyOwogICAgICAgIHVpbnQgcmFmZmxlSWQ7CiAgICB9CgogICAgZXZlbnQgUmFmZmxlUmVzdWx0KAogICAgICAgIHVpbnQgaW5kZXhlZCByYWZmbGVJZCwKICAgICAgICB1aW50IHdpbm5pbmdOdW1iZXIsCiAgICAgICAgYWRkcmVzcyB3aW5uaW5nQWRkcmVzcywKICAgICAgICB1aW50IGJsb2NrVGltZXN0YW1wLAogICAgICAgIHVpbnQgYmxvY2tOdW1iZXIsCiAgICAgICAgdWludCBnYXNMaW1pdCwKICAgICAgICB1aW50IGRpZmZpY3VsdHksCiAgICAgICAgdWludCBnYXMsCiAgICAgICAgdWludCB2YWx1ZSwKICAgICAgICBhZGRyZXNzIG1zZ1NlbmRlciwKICAgICAgICBhZGRyZXNzIGJsb2NrQ29pbmJhc2UsCiAgICAgICAgYnl0ZXMzMiBzaGEKICAgICk7CgogICAgZXZlbnQgVGlja2V0UHVyY2hhc2UoCiAgICAgICAgdWludCBpbmRleGVkIHJhZmZsZUlkLAogICAgICAgIGFkZHJlc3MgY29udGVzdGFudCwKICAgICAgICB1aW50IG51bWJlcgogICAgKTsKCiAgICBldmVudCBUaWNrZXRSZWZ1bmQoCiAgICAgICAgdWludCBpbmRleGVkIHJhZmZsZUlkLAogICAgICAgIGFkZHJlc3MgY29udGVzdGFudCwKICAgICAgICB1aW50IG51bWJlcgogICAgKTsKCiAgICAvLyBDb25zdGFudHMKICAgIGFkZHJlc3MgcHVibGljIHJha2VBZGRyZXNzOwogICAgdWludCBjb25zdGFudCBwdWJsaWMgcHJpemUgPSAwLjEgZXRoZXI7CiAgICB1aW50IGNvbnN0YW50IHB1YmxpYyByYWtlID0gMC4wMiBldGhlcjsKICAgIHVpbnQgY29uc3RhbnQgcHVibGljIHRvdGFsVGlja2V0cyA9IDY7CiAgICB1aW50IGNvbnN0YW50IHB1YmxpYyBwcmljZVBlclRpY2tldCA9IChwcml6ZSArIHJha2UpIC8gdG90YWxUaWNrZXRzOwoKICAgIC8vIE90aGVyIGludGVybmFsIHZhcmlhYmxlcwogICAgdWludCBwdWJsaWMgcmFmZmxlSWQgPSAxOwogICAgdWludCBwdWJsaWMgbmV4dFRpY2tldCA9IDE7CiAgICBtYXBwaW5nICh1aW50ID0+IENvbnRlc3RhbnQpIHB1YmxpYyBjb250ZXN0YW50czsKICAgIHVpbnRbXSBwdWJsaWMgZ2FwczsKCiAgICAvLyBJbml0aWFsaXphdGlvbgogICAgZnVuY3Rpb24gRXRocmFmZmxlKCkgcHVibGljIHsKICAgICAgICByYWtlQWRkcmVzcyA9IG1zZy5zZW5kZXI7CiAgICB9CgogICAgLy8gQ2FsbCBidXlUaWNrZXRzKCkgd2hlbiByZWNlaXZpbmcgRXRoZXIgb3V0c2lkZSBhIGZ1bmN0aW9uCiAgICBmdW5jdGlvbiAoKSBwYXlhYmxlIHB1YmxpYyB7CiAgICAgICAgYnV5VGlja2V0cygpOwogICAgfQoKICAgIGZ1bmN0aW9uIGJ1eVRpY2tldHMoKSBwYXlhYmxlIHB1YmxpYyB7CiAgICAgICAgdWludCBtb25leVNlbnQgPSBtc2cudmFsdWU7CgogICAgICAgIHdoaWxlIChtb25leVNlbnQgPj0gcHJpY2VQZXJUaWNrZXQgJiYgbmV4dFRpY2tldCA8PSB0b3RhbFRpY2tldHMpIHsKICAgICAgICAgICAgdWludCBjdXJyVGlja2V0ID0gMDsKICAgICAgICAgICAgaWYgKGdhcHMubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgY3VyclRpY2tldCA9IGdhcHNbZ2Fwcy5sZW5ndGgtMV07CiAgICAgICAgICAgICAgICBnYXBzLmxlbmd0aC0tOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgY3VyclRpY2tldCA9IG5leHRUaWNrZXQrKzsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgY29udGVzdGFudHNbY3VyclRpY2tldF0gPSBDb250ZXN0YW50KG1zZy5zZW5kZXIsIHJhZmZsZUlkKTsKICAgICAgICAgICAgVGlja2V0UHVyY2hhc2UocmFmZmxlSWQsIG1zZy5zZW5kZXIsIGN1cnJUaWNrZXQpOwogICAgICAgICAgICBtb25leVNlbnQgLT0gcHJpY2VQZXJUaWNrZXQ7CiAgICAgICAgfQoKICAgICAgICAvLyBDaG9vc2Ugd2lubmVyIGlmIHdlIHNvbGQgYWxsIHRoZSB0aWNrZXRzCiAgICAgICAgaWYgKG5leHRUaWNrZXQgPiB0b3RhbFRpY2tldHMpIHsKICAgICAgICAgICAgY2hvb3NlV2lubmVyKCk7CiAgICAgICAgfQoKICAgICAgICAvLyBTZW5kIGJhY2sgbGVmdG92ZXIgbW9uZXkKICAgICAgICBpZiAobW9uZXlTZW50ID4gMCkgewogICAgICAgICAgICBtc2cuc2VuZGVyLnRyYW5zZmVyKG1vbmV5U2VudCk7CiAgICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIGNob29zZVdpbm5lcigpIHByaXZhdGUgewogICAgICAgIC8vIFBzZXVkb3JhbmRvbSBudW1iZXIgZ2VuZXJhdG9yCiAgICAgICAgYnl0ZXMzMiBzaGEgPSBzaGEzKAogICAgICAgICAgICBibG9jay50aW1lc3RhbXAsCiAgICAgICAgICAgIGJsb2NrLm51bWJlciwKICAgICAgICAgICAgYmxvY2suZ2FzbGltaXQsCiAgICAgICAgICAgIGJsb2NrLmRpZmZpY3VsdHksCiAgICAgICAgICAgIG1zZy5nYXMsCiAgICAgICAgICAgIG1zZy52YWx1ZSwKICAgICAgICAgICAgbXNnLnNlbmRlciwKICAgICAgICAgICAgYmxvY2suY29pbmJhc2UKICAgICAgICApOwoKICAgICAgICB1aW50IHdpbm5pbmdOdW1iZXIgPSAodWludChzaGEpICUgdG90YWxUaWNrZXRzKSArIDE7CiAgICAgICAgYWRkcmVzcyB3aW5uaW5nQWRkcmVzcyA9IGNvbnRlc3RhbnRzW3dpbm5pbmdOdW1iZXJdLmFkZHI7CiAgICAgICAgUmFmZmxlUmVzdWx0KAogICAgICAgICAgICByYWZmbGVJZCwgd2lubmluZ051bWJlciwgd2lubmluZ0FkZHJlc3MsIGJsb2NrLnRpbWVzdGFtcCwKICAgICAgICAgICAgYmxvY2subnVtYmVyLCBibG9jay5nYXNsaW1pdCwgYmxvY2suZGlmZmljdWx0eSwgbXNnLmdhcywKICAgICAgICAgICAgbXNnLnZhbHVlLCBtc2cuc2VuZGVyLCBibG9jay5jb2luYmFzZSwgc2hhCiAgICAgICAgKTsKCiAgICAgICAgLy8gU3RhcnQgbmV4dCByYWZmbGUgYW5kIGRpc3RyaWJ1dGUgcHJpemUKICAgICAgICByYWZmbGVJZCsrOwogICAgICAgIG5leHRUaWNrZXQgPSAxOwogICAgICAgIHdpbm5pbmdBZGRyZXNzLnRyYW5zZmVyKHByaXplKTsKICAgICAgICByYWtlQWRkcmVzcy50cmFuc2ZlcihyYWtlKTsKICAgIH0KCiAgICBmdW5jdGlvbiBnZXRSZWZ1bmQoKSBwdWJsaWMgewogICAgICAgIHVpbnQgcmVmdW5kcyA9IDA7CiAgICAgICAgZm9yICh1aW50IGkgPSAxOyBpIDw9IHRvdGFsVGlja2V0czsgaSsrKSB7CiAgICAgICAgICAgIGlmIChtc2cuc2VuZGVyID09IGNvbnRlc3RhbnRzW2ldLmFkZHIgJiYgcmFmZmxlSWQgPT0gY29udGVzdGFudHNbaV0ucmFmZmxlSWQpIHsKICAgICAgICAgICAgICAgIHJlZnVuZHMrKzsKICAgICAgICAgICAgICAgIGNvbnRlc3RhbnRzW2ldID0gQ29udGVzdGFudChhZGRyZXNzKDApLCAwKTsKICAgICAgICAgICAgICAgIGdhcHMucHVzaChpKTsKICAgICAgICAgICAgICAgIFRpY2tldFJlZnVuZChyYWZmbGVJZCwgbXNnLnNlbmRlciwgaSk7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmIChyZWZ1bmRzID4gMCkgewogICAgICAgICAgICBtc2cuc2VuZGVyLnRyYW5zZmVyKHJlZnVuZHMgKiBwcmljZVBlclRpY2tldCk7CiAgICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIGtpbGwoKSBwdWJsaWMgewogICAgICAgIGlmIChtc2cuc2VuZGVyID09IHJha2VBZGRyZXNzKSB7CiAgICAgICAgICAgIHNlbGZkZXN0cnVjdChyYWtlQWRkcmVzcyk7CiAgICAgICAgfQogICAgfQp9'.
	

]
