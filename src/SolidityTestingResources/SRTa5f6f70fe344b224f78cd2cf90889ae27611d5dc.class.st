Class {
	#name : #SRTa5f6f70fe344b224f78cd2cf90889ae27611d5dc,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTa5f6f70fe344b224f78cd2cf90889ae27611d5dc >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMjA7CgpsaWJyYXJ5IFNhZmVNYXRoIHsKICAgIGZ1bmN0aW9uIG11bCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgaWYgKGEgPT0gMCkgewogICAgICAgICAgcmV0dXJuIDA7CiAgICAgICAgfQogICAgICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgICAgIGFzc2VydChjIC8gYSA9PSBiKTsKICAgICAgICByZXR1cm4gYzsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgICAgICByZXR1cm4gYzsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICBhc3NlcnQoYiA8PSBhKTsKICAgICAgICByZXR1cm4gYSAtIGI7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgdWludDI1NiBjID0gYSArIGI7CiAgICAgICAgYXNzZXJ0KGMgPj0gYSk7CiAgICAgICAgcmV0dXJuIGM7CiAgICB9Cn0KCgovLyBFUkMyMCBJbnRlcmZhY2UKY29udHJhY3QgRVJDMjAgewogICAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50IF90b3RhbFN1cHBseSk7CiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQgYmFsYW5jZSk7CiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludCBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgcHVibGljIHZpZXcgcmV0dXJucyAodWludCByZW1haW5pbmcpOwogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50IF92YWx1ZSk7CiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQgX3ZhbHVlKTsKfQoKCgpjb250cmFjdCBPd25lZCB7CiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKICAgIG1vZGlmaWVyIG9ubHlPd25lciB7IHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7IF87IH0KICAgIGZ1bmN0aW9uIE93bmVkKCkgcHVibGljIHsKICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgICB9Cn0KCi8vIEVSQzIwVG9rZW4KY29udHJhY3QgRVJDMjBUb2tlbiBpcyBFUkMyMCB7CiAgICB1c2luZyBTYWZlTWF0aCBmb3IgdWludDI1NjsKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsKICAgIHVpbnQyNTYgcHVibGljIHRvdGFsVG9rZW47IAoKCiAgICAgLyogU2VuZCBjb2lucyAqLwogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgaWYgKGJhbGFuY2VzW21zZy5zZW5kZXJdID49IF92YWx1ZSAmJiBfdmFsdWUgPiAwKSAKICAgICAgICB7CiAgICAgICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gYmFsYW5jZXNbbXNnLnNlbmRlcl0uc3ViKF92YWx1ZSk7CiAgICAgICAgICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfdmFsdWUpOwogICAgICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0gCiAgICAgICAgZWxzZSAKICAgICAgICB7CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICB9CgogICAgLyogQSBjb250cmFjdCBhdHRlbXB0cyB0byBnZXQgdGhlIGNvaW5zICovCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgaWYgKGJhbGFuY2VzW19mcm9tXSA+PSBfdmFsdWUgJiYgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gPj0gX3ZhbHVlICYmIF92YWx1ZSA+IDApIHsKICAgICAgICAgICAgYmFsYW5jZXNbX2Zyb21dID0gYmFsYW5jZXNbX2Zyb21dLnN1YihfdmFsdWUpOwogICAgICAgICAgICBiYWxhbmNlc1tfdG9dID0gYmFsYW5jZXNbX3RvXS5hZGQoX3ZhbHVlKTsKICAgICAgICAgICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gPSBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXS5zdWIoX3ZhbHVlKTsKICAgICAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfSAKICAgICAgICBlbHNlIAogICAgICAgIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICByZXR1cm4gdG90YWxUb2tlbjsKICAgIH0KCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgewogICAgICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogICAgfQoKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICByZXF1aXJlKChfdmFsdWUgPT0gMCkgfHwgKGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID09IDApKTsKICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsKICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKSB7CiAgICAgICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07CiAgICB9Cgp9Cgpjb250cmFjdCBEb3VEb3UgaXMgRVJDMjBUb2tlbiwgT3duZWQgewoKICAgIHN0cmluZyAgcHVibGljIGNvbnN0YW50IG5hbWUgPSAiRG91RG91IFRva2VuIjsKICAgIHN0cmluZyAgcHVibGljIGNvbnN0YW50IHN5bWJvbCA9ICJEb3VEb3UiOwogICAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgZGVjaW1hbHMgPSAxODsKICAgIHVpbnQyNTYgcHVibGljIHRva2VuRGVzdHJveWVkOwogICAgYWRkcmVzcyBwdWJsaWMgeWVhcnRlYW07CiAgICBhZGRyZXNzIHB1YmxpYyBoYWxmeWVhcnRlYW07CiAgICB1aW50IHB1YmxpYyBub3JtYWxfdHJhZGVfZGF0ZSA9IDE1MTk4MzcxNjc7IC8vbmV3IERhdGUoInl5eXktbW0tZGRUMDA6MDA6MDAiKS5nZXRUaW1lKCkvMTAwMAogICAgdWludCBwdWJsaWMgaGFsZnllYXJ0ZWFtX3RyYWRlX2RhdGUgPSBub3JtYWxfdHJhZGVfZGF0ZSArICgyNCo2MCo2MCkvMjsvLygzNjUqMjQqNjAqNjApLzI7CiAgICB1aW50IHB1YmxpYyB5ZWFydGVhbV90cmFkZV9kYXRlICAgICA9IG5vcm1hbF90cmFkZV9kYXRlICsgKDI0KjYwKjYwKTsvLygzNjUqMjQqNjAqNjApOyAgCgogICAgZXZlbnQgQnVybihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIHVpbnQyNTYgX3Rva2VuRGVzdHJveWVkKTsKCiAgICBmdW5jdGlvbiBEb3VEb3UoKSBwdWJsaWMgCiAgICB7CiAgICAgICAgdG90YWxUb2tlbiAgID0gMjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwOwogICAgICAgIHllYXJ0ZWFtICAgICA9IDB4MmNGRDUyNjM4OTZhQTUxMDg1RkZhQkYwMTgzZEE2N0YyNmU1Nzg5YzsKICAgICAgICBoYWxmeWVhcnRlYW0gPSAweDg2QkVhMGIyOTNkRTc5NzVhQTlEZDQ5YjhhNTJjMGUxMEJEMjQzZEM7CiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gICAgPSAgKHRvdGFsVG9rZW4qNjApIC8gMTAwOyAvL293bmVyIDYwJQogICAgICAgIGJhbGFuY2VzW2hhbGZ5ZWFydGVhbV0gID0gICh0b3RhbFRva2VuKjIwKSAvIDEwMDsgLy90ZWFtMSAyMCUKICAgICAgICBiYWxhbmNlc1t5ZWFydGVhbV0gICAgICA9ICAodG90YWxUb2tlbioyMCkgLyAxMDA7IC8vdGVhbTIgMjAlCiAgICB9CiAgICAKICAgIC8qIFNlbmQgY29pbnMgKi8KICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgCiAgICB7CiAgICAgICAgLy90aW1lIGNoZWNrCiAgICAgICAgaWYgKG1zZy5zZW5kZXIgPT0geWVhcnRlYW0gJiYgbm93IDwgeWVhcnRlYW1fdHJhZGVfZGF0ZSkgCiAgICAgICAgICAgIHJldmVydCgpOwogICAgICAgIGlmIChtc2cuc2VuZGVyID09IGhhbGZ5ZWFydGVhbSAmJiBub3cgPCBoYWxmeWVhcnRlYW1fdHJhZGVfZGF0ZSkKICAgICAgICAgICAgcmV2ZXJ0KCk7CiAgICAgICAgaWYgKGJhbGFuY2VzW21zZy5zZW5kZXJdID49IF92YWx1ZSAmJiBfdmFsdWUgPiAwKSAKICAgICAgICB7CiAgICAgICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gYmFsYW5jZXNbbXNnLnNlbmRlcl0uc3ViKF92YWx1ZSk7CiAgICAgICAgICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfdmFsdWUpOwogICAgICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0gCiAgICAgICAgZWxzZSAKICAgICAgICB7CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXJBbnlFUkMyMFRva2VuKGFkZHJlc3MgX3Rva2VuQWRkcmVzcywgYWRkcmVzcyBfcmVjaXBpZW50LCB1aW50MjU2IF9hbW91bnQpIHB1YmxpYyBvbmx5T3duZXIgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgcmV0dXJuIEVSQzIwKF90b2tlbkFkZHJlc3MpLnRyYW5zZmVyKF9yZWNpcGllbnQsIF9hbW91bnQpOwogICAgfQoKICAgIGZ1bmN0aW9uIGJ1cm4gKHVpbnQyNTYgX2J1cm50VmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIAogICAgewogICAgICAgIHJlcXVpcmUoYmFsYW5jZXNbbXNnLnNlbmRlcl0gPj0gX2J1cm50VmFsdWUgJiYgX2J1cm50VmFsdWUgPiAwKTsKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IGJhbGFuY2VzW21zZy5zZW5kZXJdLnN1YihfYnVybnRWYWx1ZSk7CiAgICAgICAgdG90YWxUb2tlbiA9IHRvdGFsVG9rZW4uc3ViKF9idXJudFZhbHVlKTsKICAgICAgICB0b2tlbkRlc3Ryb3llZCA9IHRva2VuRGVzdHJveWVkLmFkZChfYnVybnRWYWx1ZSk7CiAgICAgICAgcmVxdWlyZSAodG9rZW5EZXN0cm95ZWQgPD0gMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwKTsKICAgICAgICBUcmFuc2ZlcihhZGRyZXNzKHRoaXMpLCAweDAsIF9idXJudFZhbHVlKTsKICAgICAgICBCdXJuKG1zZy5zZW5kZXIsIF9idXJudFZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCn0='.
	

]
