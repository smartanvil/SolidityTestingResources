Class {
	#name : #SRT2a0c0dbecc7e4d658f48e01e3fa353f44050c208,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT2a0c0dbecc7e4d658f48e01e3fa353f44050c208 >> base64 [
	^ ''.
	

]
