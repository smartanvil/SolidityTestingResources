Class {
	#name : #SRT290a5ffdcd13b7d371ecfd8d2d54f2afe2cb21fc,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT290a5ffdcd13b7d371ecfd8d2d54f2afe2cb21fc >> base64 [
	^ ''.
	

]
