Class {
	#name : #SRTb0d15abb7ef3167cfad71b6e8302a5f9d7b51e77,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTb0d15abb7ef3167cfad71b6e8302a5f9d7b51e77 >> base64 [
	^ ''.
	

]
