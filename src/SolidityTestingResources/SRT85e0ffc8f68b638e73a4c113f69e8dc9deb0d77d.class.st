Class {
	#name : #SRT85e0ffc8f68b638e73a4c113f69e8dc9deb0d77d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT85e0ffc8f68b638e73a4c113f69e8dc9deb0d77d >> base64 [
	^ ''.
	

]
