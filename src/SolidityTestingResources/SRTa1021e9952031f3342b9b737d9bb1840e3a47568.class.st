Class {
	#name : #SRTa1021e9952031f3342b9b737d9bb1840e3a47568,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTa1021e9952031f3342b9b737d9bb1840e3a47568 >> base64 [
	^ 'Ly8KLy8gY29tcGlsZXI6IHNvbGNqcyAtbyAuL2J1aWxkIC0tb3B0aW1pemUgLS1hYmkgLS1iaW4gPHRoaXMgZmlsZT4KLy8gIHZlcnNpb246IDAuNC4xOCtjb21taXQuOWNmNmU5MTAuRW1zY3JpcHRlbi5jbGFuZwovLwpwcmFnbWEgc29saWRpdHkgXjAuNC4xODsKCi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQovLyBUcmVhc3VyeSBzbWFydCBjb250cmFjdC4gT3duZXIgKFRyZWFzdXJlcikgaXMgb25seSBhY2NvdW50IHRoYXQgY2FuIHN1Ym1pdAovLyBwcm9wb3NhbHMsIHlldCBjYW5ub3QgYWN0dWFsbHkgc3BlbmQuIFRoZSBUcmVhc3VyZXIgYXBwb2ludHMgVHJ1c3RlZXMgdG8KLy8gYXBwcm92ZSBzcGVuZGluZyBwcm9wb3NhbHMuIEZ1bmRzIGFyZSByZWxlYXNlZCBhdXRvbWF0aWNhbGx5IG9uY2UgYQovLyBwcm9wb3NhbCBpcyBhcHByb3ZlZCBieSBhIHNpbXBsZSBtYWpvcml0eSBvZiB0cnVzdGVlcy4KLy8KLy8gVHJ1c3RlZXMgY2FuIGJlIGZsYWdnZWQgYXMgaW5hY3RpdmUgYnkgdGhlIFRyZWFzdXJlci4gQW4gaW5hY3RpdmUgVHJ1c3RlZQovLyBjYW5ub3Qgdm90ZS4gVGhlIFRyZWFzdXJlciBtYXkgc2V0L3Jlc2V0IGZsYWdzLiBUaGUgVHJlYXN1cmVyIGNhbiByZXBsYWNlCi8vIGFueSBUcnVzdGVlLCB0aG91Z2ggYW55IGFwcHJvdmFscyBhbHJlYWR5IG1hZGUgd2lsbCBzdGFuZC4KLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgpjb250cmFjdCBvd25lZAp7CiAgYWRkcmVzcyBwdWJsaWMgdHJlYXN1cmVyOwogIGZ1bmN0aW9uIG93bmVkKCkgcHVibGljIHsgdHJlYXN1cmVyID0gbXNnLnNlbmRlcjsgfQoKICBtb2RpZmllciBvbmx5VHJlYXN1cmVyIHsKICAgIHJlcXVpcmUoIG1zZy5zZW5kZXIgPT0gdHJlYXN1cmVyICk7CiAgICBfOwogIH0KCiAgZnVuY3Rpb24gc2V0VHJlYXN1cmVyKCBhZGRyZXNzIG5ld1RyZWFzdXJlciApIHB1YmxpYyBvbmx5VHJlYXN1cmVyCiAgeyB0cmVhc3VyZXIgPSBuZXdUcmVhc3VyZXI7IH0KCiAgZnVuY3Rpb24gY2xvc2Vkb3duKCkgcHVibGljIG9ubHlUcmVhc3VyZXIgeyBzZWxmZGVzdHJ1Y3QoIHRyZWFzdXJlciApOyB9Cn0KCmNvbnRyYWN0IFRyZWFzdXJ5IGlzIG93bmVkIHsKCiAgZXZlbnQgQWRkZWQoIGFkZHJlc3MgaW5kZXhlZCB0cnVzdGVlICk7CiAgZXZlbnQgRmxhZ2dlZCggYWRkcmVzcyBpbmRleGVkIHRydXN0ZWUsIGJvb2wgaXNSYWlzZWQgKTsKICBldmVudCBSZXBsYWNlZCggYWRkcmVzcyBpbmRleGVkIG9sZGVyLCBhZGRyZXNzIGluZGV4ZWQgbmV3ZXIgKTsKCiAgZXZlbnQgUHJvcG9zYWwoIGFkZHJlc3MgaW5kZXhlZCBwYXllZSwgdWludCBhbXQsIHN0cmluZyBlcmVmICk7CiAgZXZlbnQgQXBwcm92ZWQoIGFkZHJlc3MgaW5kZXhlZCBhcHByb3ZlciwKICAgICAgICAgICAgICAgICAgYWRkcmVzcyBpbmRleGVkIHRvLAogICAgICAgICAgICAgICAgICB1aW50IGFtb3VudCwKICAgICAgICAgICAgICAgICAgc3RyaW5nIGVyZWYgKTsKICBldmVudCBTcGVudCggYWRkcmVzcyBpbmRleGVkIHBheWVlLCB1aW50IGFtdCwgc3RyaW5nIGVyZWYgKTsKCiAgc3RydWN0IFNwZW5kUHJvcG9zYWwgewogICAgYWRkcmVzcyAgIHBheWVlOwogICAgdWludCAgICAgIGFtb3VudDsKICAgIHN0cmluZyAgICBlcmVmOwogICAgYWRkcmVzc1tdIGFwcHJvdmFsczsKICB9CgogIFNwZW5kUHJvcG9zYWxbXSBwcm9wb3NhbHM7CiAgYWRkcmVzc1tdICAgICAgIHRydXN0ZWVzOwogIGJvb2xbXSAgICAgICAgICBmbGFnZ2VkOyAvLyBmbGFnZ2luZyB0cnVzdGVlIGRpc2FibGVzIGZyb20gdm90aW5nCgogIGZ1bmN0aW9uIFRyZWFzdXJ5KCkgcHVibGljIHt9CgogIGZ1bmN0aW9uKCkgcHVibGljIHBheWFibGUge30KCiAgZnVuY3Rpb24gYWRkKCBhZGRyZXNzIHRydXN0ZWUgKSBwdWJsaWMgb25seVRyZWFzdXJlcgogIHsKICAgIHJlcXVpcmUoIHRydXN0ZWUgIT0gdHJlYXN1cmVyICk7IC8vIHNlcGFyYXRlIFRyZWFzdXJlciBhbmQgVHJ1c3RlZXMKCiAgICBmb3IgKHVpbnQgaXggPSAwOyBpeCA8IHRydXN0ZWVzLmxlbmd0aDsgaXgrKykKICAgICAgaWYgKHRydXN0ZWVzW2l4XSA9PSB0cnVzdGVlKSByZXR1cm47CgogICAgdHJ1c3RlZXMucHVzaCh0cnVzdGVlKTsKICAgIGZsYWdnZWQucHVzaChmYWxzZSk7CgogICAgQWRkZWQoIHRydXN0ZWUgKTsKICB9CgogIGZ1bmN0aW9uIGZsYWcoIGFkZHJlc3MgdHJ1c3RlZSwgYm9vbCBpc1JhaXNlZCApIHB1YmxpYyBvbmx5VHJlYXN1cmVyCiAgewogICAgZm9yKCB1aW50IGl4ID0gMDsgaXggPCB0cnVzdGVlcy5sZW5ndGg7IGl4KysgKQogICAgICBpZiAodHJ1c3RlZXNbaXhdID09IHRydXN0ZWUpCiAgICAgIHsKICAgICAgICBmbGFnZ2VkW2l4XSA9IGlzUmFpc2VkOwogICAgICAgIEZsYWdnZWQoIHRydXN0ZWVzW2l4XSwgZmxhZ2dlZFtpeF0gKTsKICAgICAgfQogIH0KCiAgZnVuY3Rpb24gcmVwbGFjZSggYWRkcmVzcyBvbGRlciwgYWRkcmVzcyBuZXdlciApIHB1YmxpYyBvbmx5VHJlYXN1cmVyCiAgewogICAgZm9yKCB1aW50IGl4ID0gMDsgaXggPCB0cnVzdGVlcy5sZW5ndGg7IGl4KysgKQogICAgICBpZiAodHJ1c3RlZXNbaXhdID09IG9sZGVyKQogICAgICB7CiAgICAgICAgUmVwbGFjZWQoIHRydXN0ZWVzW2l4XSwgbmV3ZXIgKTsKICAgICAgICB0cnVzdGVlc1tpeF0gPSBuZXdlcjsKICAgICAgICBmbGFnZ2VkW2l4XSA9IGZhbHNlOwogICAgICB9CiAgfQoKICBmdW5jdGlvbiBwcm9wb3NhbCggYWRkcmVzcyBfcGF5ZWUsIHVpbnQgX3dlaSwgc3RyaW5nIF9lcmVmICkKICBwdWJsaWMgb25seVRyZWFzdXJlcgogIHsKICAgIGJ5dGVzIG1lbW9yeSBlcmVmYiA9IGJ5dGVzKF9lcmVmKTsKICAgIHJlcXVpcmUoICAgIF9wYXllZSAhPSBhZGRyZXNzKDApCiAgICAgICAgICAgICAmJiBfd2VpID4gMAogICAgICAgICAgICAgJiYgZXJlZmIubGVuZ3RoID4gMAogICAgICAgICAgICAgJiYgZXJlZmIubGVuZ3RoIDw9IDMyICk7CgogICAgdWludCBpeCA9IHByb3Bvc2Fscy5sZW5ndGgrKzsKICAgIHByb3Bvc2Fsc1tpeF0ucGF5ZWUgPSBfcGF5ZWU7CiAgICBwcm9wb3NhbHNbaXhdLmFtb3VudCA9IF93ZWk7CiAgICBwcm9wb3NhbHNbaXhdLmVyZWYgPSBfZXJlZjsKCiAgICBQcm9wb3NhbCggX3BheWVlLCBfd2VpLCBfZXJlZiApOwogIH0KCiAgZnVuY3Rpb24gYXBwcm92ZSggYWRkcmVzcyBfcGF5ZWUsIHVpbnQgX3dlaSwgc3RyaW5nIF9lcmVmICkgcHVibGljCiAgewogICAgLy8gZW5zdXJlIGNhbGxlciBpcyBhIHRydXN0ZWUgaW4gZ29vZCBzdGFuZGluZwogICAgYm9vbCBzZW5kZXJWYWxpZCA9IGZhbHNlOwogICAgZm9yICh1aW50IHRpeCA9IDA7IHRpeCA8IHRydXN0ZWVzLmxlbmd0aDsgdGl4KyspIHsKICAgICAgaWYgKG1zZy5zZW5kZXIgPT0gdHJ1c3RlZXNbdGl4XSkgewogICAgICAgIGlmIChmbGFnZ2VkW3RpeF0pCiAgICAgICAgICByZXZlcnQoKTsKCiAgICAgICAgc2VuZGVyVmFsaWQgPSB0cnVlOwogICAgICB9CiAgICB9CiAgICBpZiAoIXNlbmRlclZhbGlkKSByZXZlcnQoKTsKCiAgICAvLyBmaW5kIHRoZSBtYXRjaGluZyBwcm9wb3NhbCBub3QgYWxyZWFkeSBhY3Rpb25lZCAoYW1vdW50IHdvdWxkIGJlIDApCiAgICBmb3IgKHVpbnQgcGl4ID0gMDsgcGl4IDwgcHJvcG9zYWxzLmxlbmd0aDsgcGl4KyspCiAgICB7CiAgICAgIGlmICggICAgcHJvcG9zYWxzW3BpeF0ucGF5ZWUgPT0gX3BheWVlCiAgICAgICAgICAgJiYgcHJvcG9zYWxzW3BpeF0uYW1vdW50ID09IF93ZWkKICAgICAgICAgICAmJiBzdHJjbXAocHJvcG9zYWxzW3BpeF0uZXJlZiwgX2VyZWYpICkKICAgICAgewogICAgICAgIC8vIHByZXZlbnQgdm90aW5nIHR3aWNlCiAgICAgICAgZm9yICh1aW50IGFwID0gMDsgYXAgPCBwcm9wb3NhbHNbcGl4XS5hcHByb3ZhbHMubGVuZ3RoOyBhcCsrKQogICAgICAgIHsKICAgICAgICAgIGlmIChtc2cuc2VuZGVyID09IHByb3Bvc2Fsc1twaXhdLmFwcHJvdmFsc1thcF0pCiAgICAgICAgICAgIHJldmVydCgpOwogICAgICAgIH0KCiAgICAgICAgcHJvcG9zYWxzW3BpeF0uYXBwcm92YWxzLnB1c2goIG1zZy5zZW5kZXIgKTsKCiAgICAgICAgQXBwcm92ZWQoIG1zZy5zZW5kZXIsCiAgICAgICAgICAgICAgICAgIHByb3Bvc2Fsc1twaXhdLnBheWVlLAogICAgICAgICAgICAgICAgICBwcm9wb3NhbHNbcGl4XS5hbW91bnQsCiAgICAgICAgICAgICAgICAgIHByb3Bvc2Fsc1twaXhdLmVyZWYgKTsKCiAgICAgICAgaWYgKCBwcm9wb3NhbHNbcGl4XS5hcHByb3ZhbHMubGVuZ3RoID4gKHRydXN0ZWVzLmxlbmd0aCAvIDIpICkKICAgICAgICB7CiAgICAgICAgICByZXF1aXJlKCB0aGlzLmJhbGFuY2UgPj0gcHJvcG9zYWxzW3BpeF0uYW1vdW50ICk7CgogICAgICAgICAgaWYgKCBwcm9wb3NhbHNbcGl4XS5wYXllZS5zZW5kKHByb3Bvc2Fsc1twaXhdLmFtb3VudCkgKQogICAgICAgICAgewogICAgICAgICAgICBTcGVudCggcHJvcG9zYWxzW3BpeF0ucGF5ZWUsCiAgICAgICAgICAgICAgICAgICBwcm9wb3NhbHNbcGl4XS5hbW91bnQsCiAgICAgICAgICAgICAgICAgICBwcm9wb3NhbHNbcGl4XS5lcmVmICk7CgogICAgICAgICAgICBwcm9wb3NhbHNbcGl4XS5hbW91bnQgPSAwOyAvLyBwcmV2ZW50IGRvdWJsZSBzcGVuZAogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KCiAgZnVuY3Rpb24gc3RyY21wKCBzdHJpbmcgX2EsIHN0cmluZyBfYiApIHB1cmUgaW50ZXJuYWwgcmV0dXJucyAoYm9vbCkKICB7CiAgICByZXR1cm4ga2VjY2FrMjU2KF9hKSA9PSBrZWNjYWsyNTYoX2IpOwogIH0KfQ=='.
	

]
