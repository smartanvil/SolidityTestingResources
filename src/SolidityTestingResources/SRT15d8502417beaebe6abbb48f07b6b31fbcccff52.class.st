Class {
	#name : #SRT15d8502417beaebe6abbb48f07b6b31fbcccff52,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT15d8502417beaebe6abbb48f07b6b31fbcccff52 >> base64 [
	^ ''.
	

]
