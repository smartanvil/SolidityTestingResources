Class {
	#name : #SRTfbc23099a8bd0ce4227920dc559fcfe9c7fa3ce3,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTfbc23099a8bd0ce4227920dc559fcfe9c7fa3ce3 >> base64 [
	^ ''.
	

]
