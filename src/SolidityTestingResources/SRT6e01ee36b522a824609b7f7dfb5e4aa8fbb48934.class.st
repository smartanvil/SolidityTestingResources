Class {
	#name : #SRT6e01ee36b522a824609b7f7dfb5e4aa8fbb48934,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT6e01ee36b522a824609b7f7dfb5e4aa8fbb48934 >> base64 [
	^ 'Ly9odHRwczovL2dpdGh1Yi5jb20vY29kZXRyYWN0L2V0aFRva2VuCgpwcmFnbWEgc29saWRpdHkgXjAuNC42OwoKLyoqCkB0aXRsZSBTdGFuZGFyZFRva2VuCkBhdXRob3IgaHR0cHM6Ly9naXRodWIuY29tL0NvbnNlblN5cy9Ub2tlbnMvdHJlZS9tYXN0ZXIvVG9rZW5fQ29udHJhY3RzL2NvbnRyYWN0cwoqLwpjb250cmFjdCBTdGFuZGFyZFRva2VuIHsKICAgIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5OwogICAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpIGJhbGFuY2VzOwogICAgbWFwcGluZyhhZGRyZXNzID0+IG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsKICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7CgogICAgLyoqCiAgICBAbm90aWNlIEZ1bmN0aW9uIHRyYW5zZmVycyAnX3ZhbHVlJyB0b2tlbnMgZnJvbSAnbXNnLnNlbmRlcicgdG8gJ190bycKICAgIEBwYXJhbSBfdG8gVGhlIGFkZHJlc3Mgb2YgdGhlIGRlc3RpbmF0aW9uIGFjY291bnQKICAgIEBwYXJhbSBfdmFsdWUgVGhlIG51bWJlciBvZiB0b2tlbnMgdG8gYmUgdHJhbnNmZXJyZWQKICAgIEByZXR1cm4gc3VjY2VzcyBXaGV0aGVyIHRoZSB0cmFuc2ZlciBpcyBzdWNjZXNzZnVsCiAgICAqLwogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zKGJvb2wgc3VjY2VzcykgewogICAgICAgIGlmKGJhbGFuY2VzW21zZy5zZW5kZXJdID49IF92YWx1ZSAmJiBiYWxhbmNlc1tfdG9dICsgX3ZhbHVlID4gYmFsYW5jZXNbX3RvXSkgewogICAgICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgICAgIGJhbGFuY2VzW190b10gKz0gX3ZhbHVlOwogICAgICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICB9CgogICAgLyoqCiAgICBAbm90aWNlIEZ1bmN0aW9uIHRyYW5zZmVycyAnX3ZhbHVlJyB0b2tlbnMgZnJvbSAnX2Zyb20nIHRvICdfdG8nIGlmIHRoZXJlIGlzIGFsbG93YW5jZQogICAgQHBhcmFtIF9mcm9tIFRoZSBhZGRyZXNzIG9mIHRoZSBzb3VyY2UgYWNjb3VudAogICAgQHBhcmFtIF90byBUaGUgYWRkcmVzcyBvZiB0aGUgZGVzdGluYXRpb24gYWNjb3VudAogICAgQHBhcmFtIF92YWx1ZSBUaGUgbnVtYmVyIG9mIHRva2VucyB0byBiZSB0cmFuc2ZlcnJlZAogICAgQHJldHVybiBzdWNjZXNzIFdoZXRoZXIgdGhlIHRyYW5zZmVyIGlzIHN1Y2Nlc3NmdWwKICAgICovCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zKGJvb2wgc3VjY2VzcykgewogICAgICAgIGlmKGJhbGFuY2VzW19mcm9tXSA+PSBfdmFsdWUgJiYgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gPj0gX3ZhbHVlICYmIGJhbGFuY2VzW190b10gKyBfdmFsdWUgPiBiYWxhbmNlc1tfdG9dKSB7CiAgICAgICAgICAgIGJhbGFuY2VzW190b10gKz0gX3ZhbHVlOwogICAgICAgICAgICBiYWxhbmNlc1tfZnJvbV0gLT0gX3ZhbHVlOwogICAgICAgICAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICB9CgogICAgLyoqCiAgIAlAbm90aWNlIFJldHVybnMgdGhlIGJhbGFuY2UgYXNzb2NpYXRlZCB3aXRoIHRoZSByZWxldmFudCBhZGRyZXNzCiAgIAlAcGFyYW0gX293bmVyIGFkZHJlc3Mgb2YgYWNjb3VudCBvd25lcgogICAJQHJldHVybiB7ICJiYWxhbmNlIiA6ICJ0b2tlbiBiYWxhbmNlIG9mIF9vd25lciIgfQogICAJKi8KICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyh1aW50MjU2IGJhbGFuY2UpIHsKICAgICAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsKICAgIH0KCiAgICAvKioKICAgIEBub3RpY2UgRnVuY3Rpb24gYXBwcm92ZXMgYF9hZGRyYCB0byBzcGVuZCBgX3ZhbHVlYCB0b2tlbnMgb2YgbXNnLnNlbmRlcgogICAgQHBhcmFtIF9zcGVuZGVyIFRoZSBhZGRyZXNzIG9mIHRoZSBhY2NvdW50IGFibGUgdG8gdHJhbnNmZXIgdGhlIHRva2VucwogICAgQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IG9mIHdlaSB0byBiZSBhcHByb3ZlZCBmb3IgdHJhbnNmZXIKICAgIEByZXR1cm4gc3VjY2VzcyBXaGV0aGVyIHRoZSBhcHByb3ZhbCB3YXMgc3VjY2Vzc2Z1bCBvciBub3QKICAgICovCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zKGJvb2wgc3VjY2VzcykgewogICAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIC8qKgogICAgQG5vdGljZSBSZXR1cm5zIHRoZSBhbW91bnQgZm9yIF9zcGVuZGVyIGxlZnQgYXBwcm92ZWQgYnkgX293bmVyCiAgICBAcGFyYW0gX293bmVyIFRoZSBhZGRyZXNzIG9mIHRoZSBhY2NvdW50IG93bmluZyB0b2tlbnMKICAgIEBwYXJhbSBfc3BlbmRlciBUaGUgYWRkcmVzcyBvZiB0aGUgYWNjb3VudCBhYmxlIHRvIHRyYW5zZmVyIHRoZSB0b2tlbnMKICAgIEByZXR1cm4gcmVtYWluaW5nIEFtb3VudCBvZiByZW1haW5pbmcgdG9rZW5zIGFsbG93ZWQgdG8gc3BlbnQKICAgICovCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnModWludDI1NiByZW1haW5pbmcpIHsKICAgICAgICByZXR1cm4gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsKICAgIH0KCn0KCi8qKgpAdGl0bGUgSHVtYW5TdGFuZGFyZFRva2VuCkBhdXRob3IgaHR0cHM6Ly9naXRodWIuY29tL0NvbnNlblN5cy9Ub2tlbnMvdHJlZS9tYXN0ZXIvVG9rZW5fQ29udHJhY3RzL2NvbnRyYWN0cwoqLwpjb250cmFjdCBIdW1hblN0YW5kYXJkVG9rZW4gaXMgU3RhbmRhcmRUb2tlbiB7CiAgICBzdHJpbmcgcHVibGljIG5hbWU7IC8vZmFuY3kgbmFtZTogZWcgU2ltb24gQnVja3MKICAgIHVpbnQ4IHB1YmxpYyBkZWNpbWFsczsgLy9Ib3cgbWFueSBkZWNpbWFscyB0byBzaG93LiBpZS4gVGhlcmUgY291bGQgMTAwMCBiYXNlIHVuaXRzIHdpdGggMyBkZWNpbWFscy4gTWVhbmluZyAwLjk4MCBTQlggPSA5ODAgYmFzZSB1bml0cy4gSXQncyBsaWtlIGNvbXBhcmluZyAxIHdlaSB0byAxIGV0aGVyLgogICAgc3RyaW5nIHB1YmxpYyBzeW1ib2w7IC8vQW4gaWRlbnRpZmllcjogZWcgU0JYCiAgICBzdHJpbmcgcHVibGljIHZlcnNpb247IC8vaHVtYW4gMC4xIHN0YW5kYXJkLiBKdXN0IGFuIGFyYml0cmFyeSB2ZXJzaW9uaW5nIHNjaGVtZS4KfQoKLyoqCkB0aXRsZSBFdGhUb2tlbgpAYXV0aG9yIGh0dHBzOi8vY29kZXRyYWN0LmlvCiovCmNvbnRyYWN0IEV0aFRva2VuIGlzIEh1bWFuU3RhbmRhcmRUb2tlbiB7CiAgICAvKioKICAgIEBub3RpY2UgQ29uc3RydWN0b3IgZnVuY3Rpb24gZm9yIHRoZSBFdGhUb2tlbiBjb250cmFjdAogICAgQGRldiBDb250cmFjdCB0byB0cmFkZSBldGhlciB0byB0b2tlbnMgYXQgMSB0byAxCiAgICAqLwogICAgZnVuY3Rpb24gRXRoVG9rZW4oKSB7CiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSAwOwogICAgICAgIHRvdGFsU3VwcGx5ID0gMDsKICAgICAgICBuYW1lID0gJ0VUSCBUb2tlbic7CiAgICAgICAgZGVjaW1hbHMgPSAxODsKICAgICAgICBzeW1ib2wgPSAnzp4nOwogICAgICAgIHZlcnNpb24gPSAnMC4yJzsKICAgIH0KCiAgICBldmVudCBMb2dDcmVhdGVUb2tlbihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIHVpbnQyNTYgX3ZhbHVlKTsKICAgIGV2ZW50IExvZ1JlZGVlbVRva2VuKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgdWludDI1NiBfdmFsdWUpOwoKICAgIC8qKgogICAgQG5vdGljZSBDcmVhdGVzIGV0aGVyIHRva2VucyBjb3JyZXNwb25kaW5nIHRvIHRoZSBhbW91bnQgb2YgZXRoZXIgcmVjZWl2ZWQgJ21zZy52YWx1ZScuIFVwZGF0ZXMgYWNjb3VudCB0b2tlbiBiYWxhbmNlCiAgICBAcmV0dXJuIHN1Y2Nlc3MgV2hldGhlciB0aGUgdHJhbnNmZXIgaXMgc3VjY2Vzc2Z1bAogICAgKi8KICAgIGZ1bmN0aW9uIGNyZWF0ZVRva2VuKCkgcGF5YWJsZSByZXR1cm5zKGJvb2wgc3VjY2VzcykgewogICAgICAgIGlmKG1zZy52YWx1ZSA9PSAwKSB7CiAgICAgICAgICAgIHRocm93OwogICAgICAgIH0KICAgICAgICBpZigoYmFsYW5jZXNbbXNnLnNlbmRlcl0gKyBtc2cudmFsdWUpID4gYmFsYW5jZXNbbXNnLnNlbmRlcl0gJiYgKHRvdGFsU3VwcGx5ICsgbXNnLnZhbHVlKSA+IHRvdGFsU3VwcGx5KSB7CiAgICAgICAgICAgIHRvdGFsU3VwcGx5ICs9IG1zZy52YWx1ZTsKICAgICAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gKz0gbXNnLnZhbHVlOwogICAgICAgICAgICBMb2dDcmVhdGVUb2tlbihtc2cuc2VuZGVyLCBtc2cudmFsdWUpOwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aHJvdzsKICAgICAgICB9CiAgICB9CgogICAgLyoqCiAgICBAbm90aWNlIENvbnZlcnRzIHRva2VuIHF1YW50aXR5IGRlZmluZWQgYnkgJ190b2tlbicgaW50byBldGhlciBhbmQgc2VuZHMgYmFjayB0byBtc2cuc2VuZGVyCiAgICBAcGFyYW0gX3Rva2VucyBUaGUgbnVtYmVyIG9mIHRva2VucyB0byBiZSBjb252ZXJ0ZWQgdG8gZXRoZXIKICAgIEByZXR1cm4gc3VjY2VzcyBXaGV0aGVyIHRoZSB0cmFuc2ZlciBpcyBzdWNjZXNzZnVsCiAgICAqLwogICAgZnVuY3Rpb24gcmVkZWVtVG9rZW4odWludDI1NiBfdG9rZW5zKSByZXR1cm5zKGJvb2wgc3VjY2VzcykgewogICAgICAgIGlmKHRoaXMuYmFsYW5jZSA8IHRvdGFsU3VwcGx5KSB7CiAgICAgICAgICAgIHRocm93OwogICAgICAgIH0KICAgICAgICBpZihfdG9rZW5zID09IDApIHsKICAgICAgICAgICAgdGhyb3c7CiAgICAgICAgfQogICAgICAgIGlmKGJhbGFuY2VzW21zZy5zZW5kZXJdID49IF90b2tlbnMgJiYgdG90YWxTdXBwbHkgPj0gX3Rva2VucykgewogICAgICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtPSBfdG9rZW5zOwogICAgICAgICAgICB0b3RhbFN1cHBseSAtPSBfdG9rZW5zOwogICAgICAgICAgICBpZihtc2cuc2VuZGVyLnNlbmQoX3Rva2VucykpIHsKICAgICAgICAgICAgICAgIExvZ1JlZGVlbVRva2VuKG1zZy5zZW5kZXIsIF90b2tlbnMpOwogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0aHJvdzsKICAgICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRocm93OwogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbigpIHBheWFibGUgewogICAgICAgIGNyZWF0ZVRva2VuKCk7CiAgICB9Cn0='.
	

]
