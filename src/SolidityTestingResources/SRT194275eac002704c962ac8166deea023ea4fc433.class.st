Class {
	#name : #SRT194275eac002704c962ac8166deea023ea4fc433,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT194275eac002704c962ac8166deea023ea4fc433 >> base64 [
	^ ''.
	

]
