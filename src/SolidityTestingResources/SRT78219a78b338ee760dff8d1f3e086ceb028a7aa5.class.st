Class {
	#name : #SRT78219a78b338ee760dff8d1f3e086ceb028a7aa5,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT78219a78b338ee760dff8d1f3e086ceb028a7aa5 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7Cgpjb250cmFjdCBTYWZlTWF0aCB7CiAgICBmdW5jdGlvbiBzYWZlTXVsKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7CiAgICAgICAgdWludCBjID0gYSAqIGI7CiAgICAgICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgICAgICByZXR1cm4gYzsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gc2FmZVN1Yih1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgewogICAgICAgIGFzc2VydChiIDw9IGEpOwogICAgICAgIHJldHVybiBhIC0gYjsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gc2FmZUFkZCh1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgewogICAgICAgIHVpbnQgYyA9IGEgKyBiOwogICAgICAgIGFzc2VydChjPj1hICYmIGM+PWIpOwogICAgICAgIHJldHVybiBjOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBhc3NlcnQoYm9vbCBhc3NlcnRpb24pIGludGVybmFsIHsKICAgICAgICBpZiAoIWFzc2VydGlvbikgdGhyb3c7CiAgICB9Cn0KCmNvbnRyYWN0IEV4cGxvcmVDb2luIGlzIFNhZmVNYXRoIHsKICAgIHN0cmluZyBwdWJsaWMgc3ltYm9sOwogICAgc3RyaW5nIHB1YmxpYyBuYW1lOwogICAgdWludCBwdWJsaWMgZGVjaW1hbHM7CiAgICAKICAgIHVpbnQyNTYgX3JhdGU7CiAgICB1aW50MjU2IHB1YmxpYyB0b2tlblNvbGQ7CiAgICB1aW50IG9uZU1pbGxpb24gPSAxMDAwMDAwOwogICAgCiAgICB1aW50MjU2IF90b3RhbFN1cHBseTsKICAgIGFkZHJlc3Mgb3duZXI7CiAgICBib29sIHByZUljbyA9IHRydWU7CiAgICAKICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7CiAgICAKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBhbGxvd2VkOwogICAgCiAgICAvKioKICAgICogQGRldiBGaXggZm9yIHRoZSBFUkMyMCBzaG9ydCBhZGRyZXNzIGF0dGFjay4KICAgICovCiAgICBtb2RpZmllciBvbmx5UGF5bG9hZFNpemUodWludCBzaXplKSB7CiAgICAgICAgcmVxdWlyZShtc2cuZGF0YS5sZW5ndGggPj0gc2l6ZSArIDQpIDsKICAgICAgICBfOwogICAgfQogICAgCiAgICBtb2RpZmllciBvbmx5T3duZXIgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICAgICAgXzsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld093bmVyKSBvbmx5T3duZXIgewogICAgICAgIHJlcXVpcmUobmV3T3duZXIgIT0gMHgwKTsKICAgICAgICBvd25lciA9IG5ld093bmVyOwogICAgfQoKICAgIGZ1bmN0aW9uIGN1cnJlbnRPd25lcigpIG9ubHlPd25lciByZXR1cm5zIChhZGRyZXNzKXsKICAgICAgICByZXR1cm4gb3duZXI7CiAgICB9CgogICAgZnVuY3Rpb24gZW5kcHJlSWNvKGJvb2wgc3RhdHVzKSBvbmx5T3duZXIgewogICAgICAgIGlmKHN0YXR1cyl7CiAgICAgICAgICAgIHByZUljbyA9IGZhbHNlOwogICAgICAgIH0KICAgIH0KIAogICAgZnVuY3Rpb24gdG9rZW5BdmFpbGFibGUoKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHRva2VuQXZhaWxhYmxlKSB7ICAgICAgICAKICAgICAgICByZXR1cm4gc2FmZVN1YihfdG90YWxTdXBwbHksIHRva2VuU29sZCk7CiAgICB9CiAKICAgIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiB0b3RhbFN1cHBseSkgeyAgICAgICAgCiAgICAgICAgcmV0dXJuIF90b3RhbFN1cHBseTsKICAgIH0KIAogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpIHsKICAgICAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gRXhwbG9yZUNvaW4oCiAgICAgICAgc3RyaW5nIHRva2VuTmFtZSwKICAgICAgICBzdHJpbmcgdG9rZW5TeW1ib2wsCiAgICAgICAgdWludCBkZWNpbWFsVW5pdHMsCiAgICAgICAgdWludDI1NiB0b3RhbFN1cHBseSwKICAgICAgICB1aW50MjU2IHJhdGUKICAgICkgewogICAgICAgIF90b3RhbFN1cHBseSA9IHNhZmVNdWwodG90YWxTdXBwbHksIHNhZmVNdWwob25lTWlsbGlvbiwgKDEwICoqIGRlY2ltYWxVbml0cykgKSk7CiAgICAgICAgX3JhdGUgPSByYXRlOwogICAgICAgIG5hbWUgPSB0b2tlbk5hbWU7CiAgICAgICAgc3ltYm9sID0gdG9rZW5TeW1ib2w7CiAgICAgICAgZGVjaW1hbHMgPSBkZWNpbWFsVW5pdHM7CiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgICAgIHRva2VuU29sZCA9IDA7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uICgpIHBheWFibGUgewogICAgICAgIGlmICghcHJlSWNvKSB0aHJvdzsKICAgICAgICB1aW50MjU2IHRva2VuX2Ftb3VudCA9IHNhZmVNdWwobXNnLnZhbHVlLCBfcmF0ZSk7CiAgICAgICAgaWYoc2FmZUFkZCh0b2tlblNvbGQsIHRva2VuX2Ftb3VudCkgPiBfdG90YWxTdXBwbHkpIHRocm93OwogICAgICAgIAogICAgICAgIHRva2VuU29sZCA9IHNhZmVBZGQodG9rZW5Tb2xkLCB0b2tlbl9hbW91bnQpOwogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gc2FmZUFkZChiYWxhbmNlc1ttc2cuc2VuZGVyXSwgdG9rZW5fYW1vdW50KTsKICAgICAgICBvd25lci50cmFuc2Zlcihtc2cudmFsdWUpOwogICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIG1zZy5zZW5kZXIsIHRva2VuX2Ftb3VudCk7CiAgICB9CiAKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF9hbW91bnQpIG9ubHlQYXlsb2FkU2l6ZSgyICogMzIpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGlmIChiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfYW1vdW50CiAgICAgICAgICAgICYmIF9hbW91bnQgPiAwCiAgICAgICAgICAgICYmIHNhZmVBZGQoYmFsYW5jZXNbX3RvXSwgX2Ftb3VudCkgPiBiYWxhbmNlc1tfdG9dKSB7CiAgICAgICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gc2FmZVN1YihiYWxhbmNlc1ttc2cuc2VuZGVyXSwgX2Ftb3VudCk7CiAgICAgICAgICAgIGJhbGFuY2VzW190b10gPSBzYWZlQWRkKGJhbGFuY2VzW190b10sIF9hbW91bnQpOwogICAgICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF9hbW91bnQpOwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgfQogCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oCiAgICAgICAgYWRkcmVzcyBfZnJvbSwKICAgICAgICBhZGRyZXNzIF90bywKICAgICAgICB1aW50MjU2IF9hbW91bnQKICAgICkgb25seVBheWxvYWRTaXplKDIgKiAzMikgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgaWYgKGJhbGFuY2VzW19mcm9tXSA+PSBfYW1vdW50CiAgICAgICAgJiYgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gPj0gX2Ftb3VudAogICAgICAgICYmIF9hbW91bnQgPiAwCiAgICAgICAgJiYgc2FmZUFkZChiYWxhbmNlc1tfdG9dLCBfYW1vdW50KSA+IGJhbGFuY2VzW190b10pIHsKICAgICAgICAgICAgYmFsYW5jZXNbX2Zyb21dID0gc2FmZVN1YihiYWxhbmNlc1tfZnJvbV0sIF9hbW91bnQpOwogICAgICAgICAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA9IHNhZmVTdWIoYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0sIF9hbW91bnQpOwogICAgICAgICAgICBiYWxhbmNlc1tfdG9dID0gc2FmZUFkZChiYWxhbmNlc1tfdG9dLCBfYW1vdW50KTsKICAgICAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX2Ftb3VudCk7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICB9CiAKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfYW1vdW50KSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF9hbW91bnQ7CiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF9hbW91bnQpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQogCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKSB7CiAgICAgICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07CiAgICB9Cn0='.
	

]
