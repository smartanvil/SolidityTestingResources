Class {
	#name : #SRT293a7b4e8ad029ee50e52081b10df266fb1cb99d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT293a7b4e8ad029ee50e52081b10df266fb1cb99d >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7Ci8qaHR0cHM6Ly9oYXNobm9kZS5jb20vcG9zdC9ob3ctdG8tYnVpbGQteW91ci1vd24tZXRoZXJldW0tYmFzZWQtZXJjMjAtdG9rZW4tYW5kLWxhdW5jaC1hbi1pY28taW4tbmV4dC0yMC1taW51dGVzLWNqYmNwd3plYzAxYzkzYXd0YmlqOTB1em4qLwpjb250cmFjdCBUb2tlbiB7CiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsKICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpOwogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgaWYgKGJhbGFuY2VzW21zZy5zZW5kZXJdID49IF92YWx1ZSAmJiBfdmFsdWUgPiAwKSB7CiAgICAgICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdIC09IF92YWx1ZTsKICAgICAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfdmFsdWU7CiAgICAgICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOyAKICAgICAgICB9CiAgICB9CiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgaWYgKGJhbGFuY2VzW19mcm9tXSA+PSBfdmFsdWUgJiYgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gPj0gX3ZhbHVlICYmIF92YWx1ZSA+IDApIHsKICAgICAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfdmFsdWU7CiAgICAgICAgICAgIGJhbGFuY2VzW19mcm9tXSAtPSBfdmFsdWU7CiAgICAgICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdIC09IF92YWx1ZTsKICAgICAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgIH0KICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcHVibGljIHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgewogICAgICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogICAgfQogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBjb25zdGFudCBwdWJsaWMgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpIHsKICAgICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07CiAgICB9CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIGJhbGFuY2VzOwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBhbGxvd2VkOwogICAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7Cn0KCmNvbnRyYWN0IFRVU3Rva2VuIGlzIFRva2VuIHsKICAgIHN0cmluZyBwdWJsaWMgdmVyc2lvbiA9ICIweDAyIjsgCgogICAgc3RyaW5nIHB1YmxpYyBuYW1lOwogICAgdWludDggcHVibGljIGRlY2ltYWxzOwogICAgc3RyaW5nIHB1YmxpYyBzeW1ib2w7CgogICAgdWludDI1NiBwdWJsaWMgdG90YWxFdGhJbldlaTsKICAgIGFkZHJlc3MgcHVibGljIGhvbW1pZTsgCiAgICB1aW50IHB1YmxpYyBzdG9wc2FsZTsKCiAgICB1aW50MjU2IHB1YmxpYyBKUF9zdW07CiAgICBhZGRyZXNzIHB1YmxpYyBKUF93aW5uZXI7CiAgICBieXRlczMyIHB1YmxpYyBKUF93aW5uaW5nSGFzaDsKCiAgICBmdW5jdGlvbiBUVVN0b2tlbigpIHB1YmxpYyB7CiAgICAgICAgdG90YWxTdXBwbHkgPSAwOyAKICAgICAgICBob21taWUgPSBtc2cuc2VuZGVyOwoKICAgICAgICBuYW1lID0gInRydWUgdW5kZXJncm91bmQgc3lzdGVtIHRva2VuIjsKICAgICAgICBkZWNpbWFscyA9IDA7CiAgICAgICAgc3ltYm9sID0gIlRVJCI7CgogICAgICAgIHRvdGFsRXRoSW5XZWkgPSAwOwogICAgICAgIHN0b3BzYWxlID0gMTUyMjgwNDgwMDsgICAvLyAwNC4wNC4yMDE4IHxfXzQ6MjBfX3wgTVNLIChHTVQrMykKCiAgICAgICAgSlBfc3VtID0gMDsKICAgICAgICBKUF93aW5uZXIgPSBob21taWU7CiAgICAgICAgSlBfd2lubmluZ0hhc2ggPSAiIjsKICAgICAgICAKICAgIH0KCiAgICBmdW5jdGlvbiBmaW5pc2hJQ08oKSBwdWJsaWMgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBob21taWUpOwogICAgICAgIHJlcXVpcmUobm93ID4gc3RvcHNhbGUpOwogICAgICAgIHVpbnQyNTYgdGVtcG8gPSBKUF9zdW07CiAgICAgICAgSlBfc3VtID0gMDsKICAgICAgICBKUF93aW5uZXIudHJhbnNmZXIodGVtcG8pOwogICAgfQoKICAgIGZ1bmN0aW9uIG1ha2VNb3ZlQnJvKCkgcHVibGljIHBheWFibGUgewogICAgICAgIHJlcXVpcmUobm93IDwgc3RvcHNhbGUpOwogICAgICAgIHVpbnQyNTYgYW1vdW50ID0gbXNnLnZhbHVlIC8gKDEgZXRoZXIpOwogICAgICAgIHVpbnQgdG9Eb25hdHMgPSBtc2cudmFsdWUgLSAoYW1vdW50ICogKDEgZXRoZXIpKTsgIC8v0YHQtNCw0YfQsAogICAgICAgIHVpbnQgYm9udXMgPSAxOwogICAgICAgIGlmIChhbW91bnQgPiAxKSB7CiAgICAgICAgICAgIGJvbnVzID0gMjsKICAgICAgICB9IGVsc2UgaWYgKGFtb3VudCA+PSA4KSB7CiAgICAgICAgICAgIGJvbnVzID0gMzsKICAgICAgICB9IGVsc2UgaWYgKGFtb3VudCA+PSA5NikgewogICAgICAgICAgICBib251cyA9IDQ7CiAgICAgICAgfSBlbHNlIGlmIChhbW91bnQgPj0gMTYxOCkgewogICAgICAgICAgICBib251cyA9IDU7CiAgICAgICAgfQogICAgICAgIGJ5dGVzMzIgcHNldWRvUm5kID0ga2VjY2FrMjU2KGJsb2NrLmJsb2NraGFzaChibG9jay5udW1iZXIpLCBub3csIG1zZy5zZW5kZXIsIG1zZy5kYXRhKTsKICAgICAgICBpZiAocHNldWRvUm5kID4gSlBfd2lubmluZ0hhc2gpIHsKICAgICAgICAgICAgSlBfd2lubmVyID0gbXNnLnNlbmRlcjsKICAgICAgICAgICAgSlBfd2lubmluZ0hhc2ggPSBwc2V1ZG9SbmQ7CiAgICAgICAgfQogICAgICAgIHVpbnQgdG9KUCA9IChhbW91bnQgKiAoMSBldGhlcikgLyAyMCkgKyAodG9Eb25hdHMgLyAyKTsKICAgICAgICBKUF9zdW0gKz0gdG9KUDsKICAgICAgICBpZiAoYW1vdW50ID4gMCkgewogICAgICAgICAgICB1aW50MjU2IHRva2VucyA9IGFtb3VudCAqIGJvbnVzOwogICAgICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSArPSB0b2tlbnM7CiAgICAgICAgICAgIHRvdGFsU3VwcGx5ICs9IHRva2VuczsKICAgICAgICAgICAgVHJhbnNmZXIoaG9tbWllLCBtc2cuc2VuZGVyLCB0b2tlbnMpOyAKICAgICAgICB9CgogICAgICAgIHRvdGFsRXRoSW5XZWkgPSB0b3RhbEV0aEluV2VpICsgbXNnLnZhbHVlOwogICAgICAgIGhvbW1pZS50cmFuc2Zlcihtc2cudmFsdWUgLSB0b0pQKTsKICAgIH0KCiAgICBmdW5jdGlvbiBhcHByb3ZlQW5kQ2FsbChhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSwgYnl0ZXMgX2V4dHJhRGF0YSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIHJlcXVpcmUoX3NwZW5kZXIuY2FsbChieXRlczQoYnl0ZXMzMihrZWNjYWsyNTYoInJlY2VpdmVBcHByb3ZhbChhZGRyZXNzLHVpbnQyNTYsYWRkcmVzcyxieXRlcykiKSkpLCBtc2cuc2VuZGVyLCBfdmFsdWUsIHRoaXMsIF9leHRyYURhdGEpKTsKICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsKICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbigpIHB1YmxpYyBwYXlhYmxlIHsKICAgICAgICBtYWtlTW92ZUJybygpOwogICAgfQp9'.
	

]
