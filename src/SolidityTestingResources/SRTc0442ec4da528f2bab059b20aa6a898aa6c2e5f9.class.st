Class {
	#name : #SRTc0442ec4da528f2bab059b20aa6a898aa6c2e5f9,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTc0442ec4da528f2bab059b20aa6a898aa6c2e5f9 >> base64 [
	^ ''.
	

]
