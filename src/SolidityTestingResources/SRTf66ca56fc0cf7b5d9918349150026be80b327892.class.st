Class {
	#name : #SRTf66ca56fc0cf7b5d9918349150026be80b327892,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTf66ca56fc0cf7b5d9918349150026be80b327892 >> base64 [
	^ 'LyoqCioJQ3Jvd2RzYWxlIGZvciBFZGdlbGVzcyBUb2tlbnMuCioJUmFpc2VkIEV0aGVyIHdpbGwgYmUgc3RvcmVkIHNhZmVseSBhdCBhIG11bHRpc2lnbmF0dXJlIHdhbGxldCBhbmQgcmV0dXJuZWQgdG8gdGhlIElDTyBpbiBjYXNlIHRoZSBmdW5kaW5nIGdvYWwgaXMgbm90IHJlYWNoZWQsCiogICBhbGxvd2luZyB0aGUgaW52ZXN0b3JzIHRvIHdpdGhkcmF3IHRoZWlyIGZ1bmRzLgoqCUF1dGhvcjogSnVsaWEgQWx0ZW5yaWVkCioqLwoKcHJhZ21hIHNvbGlkaXR5IF4wLjQuNjsKCmNvbnRyYWN0IHRva2VuIHsKCWZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIHNlbmRlciwgYWRkcmVzcyByZWNlaXZlciwgdWludCBhbW91bnQpIHJldHVybnMoYm9vbCBzdWNjZXNzKXt9CglmdW5jdGlvbiBidXJuKCkge30KfQoKY29udHJhY3QgU2FmZU1hdGggewogIC8vaW50ZXJuYWxzCgogIGZ1bmN0aW9uIHNhZmVNdWwodWludCBhLCB1aW50IGIpIGludGVybmFsIHJldHVybnMgKHVpbnQpIHsKICAgIHVpbnQgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gc2FmZVN1Yih1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICBmdW5jdGlvbiBzYWZlQWRkKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7CiAgICB1aW50IGMgPSBhICsgYjsKICAgIGFzc2VydChjPj1hICYmIGM+PWIpOwogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBhc3NlcnQoYm9vbCBhc3NlcnRpb24pIGludGVybmFsIHsKICAgIGlmICghYXNzZXJ0aW9uKSB0aHJvdzsKICB9Cn0KCgpjb250cmFjdCBDcm93ZHNhbGUgaXMgU2FmZU1hdGggewogICAgLyogdG9rZW5zIHdpbGwgYmUgdHJhbnNmZXJlZCBmcm9tIHRoaXMgYWRkcmVzcyAqLwoJYWRkcmVzcyBwdWJsaWMgYmVuZWZpY2lhcnkgPSAweDAwMzIzMGJiZTY0ZWNjZDY2ZjYyOTEzNjc5Yzg5NjZjZjlmNDExNjY7CgkvKiBpZiB0aGUgZnVuZGluZyBnb2FsIGlzIG5vdCByZWFjaGVkLCBpbnZlc3RvcnMgbWF5IHdpdGhkcmF3IHRoZWlyIGZ1bmRzICovCgl1aW50IHB1YmxpYyBmdW5kaW5nR29hbCA9IDUwMDAwMDAwOwoJLyogdGhlIG1heGltdW0gYW1vdW50IG9mIHRva2VucyB0byBiZSBzb2xkICovCgl1aW50IHB1YmxpYyBtYXhHb2FsID0gNDQwMDAwMDAwOwoJLyogaG93IG11Y2ggaGFzIGJlZW4gcmFpc2VkIGJ5IGNyb3dkYWxlIChpbiBFVEgpICovCgl1aW50IHB1YmxpYyBhbW91bnRSYWlzZWQ7CgkvKiB0aGUgc3RhcnQgZGF0ZSBvZiB0aGUgY3Jvd2RzYWxlICovCgl1aW50IHB1YmxpYyBzdGFydCA9IDE0ODgyOTQwMDA7CgkvKiB0aGUgbnVtYmVyIG9mIHRva2VucyBhbHJlYWR5IHNvbGQgKi8KCXVpbnQgcHVibGljIHRva2Vuc1NvbGQ7CgkvKiB0aGVyZSBhcmUgZGlmZmVyZW50IHByaWNlcyBpbiBkaWZmZXJlbnQgdGltZSBpbnRlcnZhbHMgKi8KCXVpbnRbNF0gcHVibGljIGRlYWRsaW5lcyA9IFsxNDg4Mjk3NjAwLCAxNDg4OTAyNDAwLCAxNDg5NTA3MjAwLDE0OTAxMTIwMDBdOwoJdWludFs0XSBwdWJsaWMgcHJpY2VzID0gWzgzMzMzMzMzMzMzMzMzMywgOTA5MDkwOTA5MDkwOTA5LDk1MjM4MDk1MjM4MDk1MiwgMTAwMDAwMDAwMDAwMDAwMF07CgkvKiB0aGUgYWRkcmVzcyBvZiB0aGUgdG9rZW4gY29udHJhY3QgKi8KCXRva2VuIHB1YmxpYyB0b2tlblJld2FyZDsKCS8qIHRoZSBiYWxhbmNlcyAoaW4gRVRIKSBvZiBhbGwgaW52ZXN0b3JzICovCgltYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIGJhbGFuY2VPZjsKCS8qIGluZGljYXRlZCBpZiB0aGUgZnVuZGluZyBnb2FsIGhhcyBiZWVuIHJlYWNoZWQuICovCglib29sIGZ1bmRpbmdHb2FsUmVhY2hlZCA9IGZhbHNlOwoJLyogaW5kaWNhdGVzIGlmIHRoZSBjcm93ZHNhbGUgaGFzIGJlZW4gY2xvc2VkIGFscmVhZHkgKi8KCWJvb2wgY3Jvd2RzYWxlQ2xvc2VkID0gZmFsc2U7CgkvKiB0aGUgbXVsdGlzaWduYXR1cmUgd2FsbGV0IG9uIHdoaWNoIHRoZSBmdW5kcyB3aWxsIGJlIHN0b3JlZCAqLwoJYWRkcmVzcyBtc1dhbGxldCA9IDB4OTFlZmZmYjljNmNkM2E2NjQ3NDY4OGQwYTQ4YWE2ZWNmZTUxNWFhNTsKCS8qIG5vdGlmeWluZyB0cmFuc2ZlcnMgYW5kIHRoZSBzdWNjZXNzIG9mIHRoZSBjcm93ZHNhbGUqLwoJZXZlbnQgR29hbFJlYWNoZWQoYWRkcmVzcyBiZW5lZmljaWFyeSwgdWludCBhbW91bnRSYWlzZWQpOwoJZXZlbnQgRnVuZFRyYW5zZmVyKGFkZHJlc3MgYmFja2VyLCB1aW50IGFtb3VudCwgYm9vbCBpc0NvbnRyaWJ1dGlvbiwgdWludCBhbW91bnRSYWlzZWQpOwoKCgogICAgLyogIGluaXRpYWxpemF0aW9uLCBzZXQgdGhlIHRva2VuIGFkZHJlc3MgKi8KICAgIGZ1bmN0aW9uIENyb3dkc2FsZSggKSB7CiAgICAgICAgdG9rZW5SZXdhcmQgPSB0b2tlbigweDViZGY3OWYxZTc0MzFlZGI3NTUzN2QyM2QzYjQwNGVmODZmNDQzMTYpOwogICAgfQoKICAgIC8qIGludmVzdCBieSBzZW5kaW5nIGV0aGVyIHRvIHRoZSBjb250cmFjdC4gKi8KICAgIGZ1bmN0aW9uICgpIHBheWFibGV7CgkJaWYobXNnLnNlbmRlciAhPSBtc1dhbGxldCkgLy9kbyBub3QgdHJpZ2dlciBpbnZlc3RtZW50IGlmIHRoZSBtdWx0aXNpZyB3YWxsZXQgaXMgcmV0dXJuaW5nIHRoZSBmdW5kcwogICAgICAgIAlpbnZlc3QobXNnLnNlbmRlcik7CiAgICB9CgogICAgLyogbWFrZSBhbiBpbnZlc3RtZW50CiAgICAqICBvbmx5IGNhbGxhYmxlIGlmIHRoZSBjcm93ZHNhbGUgc3RhcnRlZCBhbmQgaGFzbid0IGJlZW4gY2xvc2VkIGFscmVhZHkgYW5kIHRoZSBtYXhHb2FsIHdhc24ndCByZWFjaGVkIHlldC4KICAgICogIHRoZSBjdXJyZW50IHRva2VuIHByaWNlIGlzIGxvb2tlZCB1cCBhbmQgdGhlIGNvcnJlc3BvbmRpbmcgbnVtYmVyIG9mIHRva2VucyBpcyB0cmFuc2ZlcmVkIHRvIHRoZSByZWNlaXZlci4KICAgICogIHRoZSBzZW50IHZhbHVlIGlzIGRpcmVjdGx5IGZvcndhcmRlZCB0byBhIHNhZmUgbXVsdGlzaWcgd2FsbGV0LgogICAgKiAgdGhpcyBtZXRob2QgYWxsb3dzIHRvIHB1cmNoYXNlIHRva2VucyBpbiBiZWhhbGYgb2YgYW5vdGhlciBhZGRyZXNzLiovCiAgICBmdW5jdGlvbiBpbnZlc3QoYWRkcmVzcyByZWNlaXZlcikgcGF5YWJsZXsKICAgIAl1aW50IGFtb3VudCA9IG1zZy52YWx1ZTsKICAgIAl1aW50IHByaWNlID0gZ2V0UHJpY2UoKTsKICAgIAlpZihwcmljZSA+IGFtb3VudCkgdGhyb3c7CgkJdWludCBudW1Ub2tlbnMgPSBhbW91bnQgLyBwcmljZTsKCQlpZiAoY3Jvd2RzYWxlQ2xvc2VkfHxub3c8c3RhcnR8fHNhZmVBZGQodG9rZW5zU29sZCxudW1Ub2tlbnMpPm1heEdvYWwpIHRocm93OwoJCWlmKCFtc1dhbGxldC5zZW5kKGFtb3VudCkpIHRocm93OwoJCWJhbGFuY2VPZltyZWNlaXZlcl0gPSBzYWZlQWRkKGJhbGFuY2VPZltyZWNlaXZlcl0sYW1vdW50KTsKCQlhbW91bnRSYWlzZWQgPSBzYWZlQWRkKGFtb3VudFJhaXNlZCwgYW1vdW50KTsKCQl0b2tlbnNTb2xkKz1udW1Ub2tlbnM7CgkJaWYoIXRva2VuUmV3YXJkLnRyYW5zZmVyRnJvbShiZW5lZmljaWFyeSwgcmVjZWl2ZXIsIG51bVRva2VucykpIHRocm93OwogICAgICAgIEZ1bmRUcmFuc2ZlcihyZWNlaXZlciwgYW1vdW50LCB0cnVlLCBhbW91bnRSYWlzZWQpOwogICAgfQoKICAgIC8qIGxvb2tzIHVwIHRoZSBjdXJyZW50IHRva2VuIHByaWNlICovCiAgICBmdW5jdGlvbiBnZXRQcmljZSgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcHJpY2UpewogICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCBkZWFkbGluZXMubGVuZ3RoOyBpKyspCiAgICAgICAgICAgIGlmKG5vdzxkZWFkbGluZXNbaV0pCiAgICAgICAgICAgICAgICByZXR1cm4gcHJpY2VzW2ldOwogICAgICAgIHJldHVybiBwcmljZXNbcHJpY2VzLmxlbmd0aC0xXTsvL3Nob3VsZCBuZXZlciBiZSByZXR1cm5lZCwgYnV0IHRvIGJlIHN1cmUgdG8gbm90IGRpdmlkZSBieSAwCiAgICB9CgogICAgbW9kaWZpZXIgYWZ0ZXJEZWFkbGluZSgpIHsgaWYgKG5vdyA+PSBkZWFkbGluZXNbZGVhZGxpbmVzLmxlbmd0aC0xXSkgXzsgfQoKICAgIC8qIGNoZWNrcyBpZiB0aGUgZ29hbCBvciB0aW1lIGxpbWl0IGhhcyBiZWVuIHJlYWNoZWQgYW5kIGVuZHMgdGhlIGNhbXBhaWduICovCiAgICBmdW5jdGlvbiBjaGVja0dvYWxSZWFjaGVkKCkgYWZ0ZXJEZWFkbGluZSB7CiAgICAgICAgaWYgKHRva2Vuc1NvbGQgPj0gZnVuZGluZ0dvYWwpewogICAgICAgICAgICBmdW5kaW5nR29hbFJlYWNoZWQgPSB0cnVlOwogICAgICAgICAgICB0b2tlblJld2FyZC5idXJuKCk7IC8vYnVybiByZW1haW5pbmcgdG9rZW5zIGJ1dCA2MCAwMDAgMDAwCiAgICAgICAgICAgIEdvYWxSZWFjaGVkKGJlbmVmaWNpYXJ5LCBhbW91bnRSYWlzZWQpOwogICAgICAgIH0KICAgICAgICBjcm93ZHNhbGVDbG9zZWQgPSB0cnVlOwogICAgfQoKICAgIC8qIGFsbG93cyB0aGUgZnVuZGVycyB0byB3aXRoZHJhdyB0aGVpciBmdW5kcyBpZiB0aGUgZ29hbCBoYXMgbm90IGJlZW4gcmVhY2hlZC4KCSogIG9ubHkgd29ya3MgYWZ0ZXIgZnVuZHMgaGF2ZSBiZWVuIHJldHVybmVkIGZyb20gdGhlIG11bHRpc2lnIHdhbGxldC4gKi8KCWZ1bmN0aW9uIHNhZmVXaXRoZHJhd2FsKCkgYWZ0ZXJEZWFkbGluZSB7CgkJdWludCBhbW91bnQgPSBiYWxhbmNlT2ZbbXNnLnNlbmRlcl07CgkJaWYoYWRkcmVzcyh0aGlzKS5iYWxhbmNlID49IGFtb3VudCl7CgkJCWJhbGFuY2VPZlttc2cuc2VuZGVyXSA9IDA7CgkJCWlmIChhbW91bnQgPiAwKSB7CgkJCQlpZiAobXNnLnNlbmRlci5zZW5kKGFtb3VudCkpIHsKCQkJCQlGdW5kVHJhbnNmZXIobXNnLnNlbmRlciwgYW1vdW50LCBmYWxzZSwgYW1vdW50UmFpc2VkKTsKCQkJCX0gZWxzZSB7CgkJCQkJYmFsYW5jZU9mW21zZy5zZW5kZXJdID0gYW1vdW50OwoJCQkJfQoJCQl9CgkJfQogICAgfQoKfQ=='.
	

]
