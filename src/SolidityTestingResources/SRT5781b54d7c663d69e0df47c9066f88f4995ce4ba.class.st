Class {
	#name : #SRT5781b54d7c663d69e0df47c9066f88f4995ce4ba,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT5781b54d7c663d69e0df47c9066f88f4995ce4ba >> base64 [
	^ ''.
	

]
