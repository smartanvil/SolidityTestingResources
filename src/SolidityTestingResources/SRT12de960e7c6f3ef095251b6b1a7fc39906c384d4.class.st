Class {
	#name : #SRT12de960e7c6f3ef095251b6b1a7fc39906c384d4,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT12de960e7c6f3ef095251b6b1a7fc39906c384d4 >> base64 [
	^ ''.
	

]
