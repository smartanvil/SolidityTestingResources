Class {
	#name : #SRTda7c129fcc37506f671bfe1b820c41cf9c0fb8f7,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTda7c129fcc37506f671bfe1b820c41cf9c0fb8f7 >> base64 [
	^ 'LyoKCiAgQ29weXJpZ2h0IDIwMTcgTG9vcHJpbmcgUHJvamVjdCBMdGQgKExvb3ByaW5nIEZvdW5kYXRpb24pLgoKICBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKICB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CgogIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAoKICBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiAgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywKICBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kCiAgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuCgoqLwpwcmFnbWEgc29saWRpdHkgXjAuNC4xNTsKCi8vLyBAdGl0bGUgVG9rZW4gUmVnaXN0ZXIgQ29udHJhY3QKLy8vIEBhdXRob3IgS29uZ2xpYW5nIFpob25nIC0gPDxhIGhyZWY9Ii9jZG4tY2dpL2wvZW1haWwtcHJvdGVjdGlvbiIgY2xhc3M9Il9fY2ZfZW1haWxfXyIgZGF0YS1jZmVtYWlsPSI2ODAzMDcwNjBmMDQwMTA5MDYwZjI4MDQwNzA3MTgxYTAxMDYwZjQ2MDcxYTBmIj5bZW1haWwmIzE2MDtwcm90ZWN0ZWRdPC9hPj4sCi8vLyBAYXV0aG9yIERhbmllbCBXYW5nIC0gPDxhIGhyZWY9Ii9jZG4tY2dpL2wvZW1haWwtcHJvdGVjdGlvbiIgY2xhc3M9Il9fY2ZfZW1haWxfXyIgZGF0YS1jZmVtYWlsPSJiOGRjZDlkNmQxZGRkNGY4ZDRkN2Q3YzhjYWQxZDZkZjk2ZDdjYWRmIj5bZW1haWwmIzE2MDtwcm90ZWN0ZWRdPC9hPj4uCmxpYnJhcnkgVWludDhMaWIgewogICAgZnVuY3Rpb24geG9yUmVkdWNlKAogICAgICAgIHVpbnQ4W10gYXJyLAogICAgICAgIHVpbnQgICAgbGVuCiAgICAgICAgKQogICAgICAgIHB1YmxpYwogICAgICAgIGNvbnN0YW50CiAgICAgICAgcmV0dXJucyAodWludDggcmVzKSB7CgogICAgICAgIHJlcyA9IGFyclswXTsKICAgICAgICBmb3IgKHVpbnQgaSA9IDE7IGkgPCBsZW47IGkrKykgewogICAgICAgICAgIHJlcyBePSBhcnJbaV07CiAgICAgICAgfQogICAgfQp9CgovLy8gQHRpdGxlIFRva2VuIFJlZ2lzdGVyIENvbnRyYWN0Ci8vLyBAYXV0aG9yIERhbmllbCBXYW5nIC0gPDxhIGhyZWY9Ii9jZG4tY2dpL2wvZW1haWwtcHJvdGVjdGlvbiIgY2xhc3M9Il9fY2ZfZW1haWxfXyIgZGF0YS1jZmVtYWlsPSIxYjdmN2E3NTcyN2U3NzViNzc3NDc0NmI2OTcyNzU3YzM1NzQ2OTdjIj5bZW1haWwmIzE2MDtwcm90ZWN0ZWRdPC9hPj4uCmxpYnJhcnkgRXJyb3JMaWIgewoKICAgIGV2ZW50IEVycm9yKHN0cmluZyBtZXNzYWdlKTsKCiAgICAvLy8gQGRldiBDaGVjayBpZiBjb25kaXRpb24gaG9sZCwgaWYgbm90LCBsb2cgYW4gZXhjZXB0aW9uIGFuZCByZXZlcnQuCiAgICBmdW5jdGlvbiBvclRocm93KGJvb2wgY29uZGl0aW9uLCBzdHJpbmcgbWVzc2FnZSkgcHVibGljIGNvbnN0YW50IHsKICAgICAgICBpZiAoIWNvbmRpdGlvbikgewogICAgICAgICAgICBlcnJvcihtZXNzYWdlKTsKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gZXJyb3Ioc3RyaW5nIG1lc3NhZ2UpIHB1YmxpYyBjb25zdGFudCB7CiAgICAgICAgRXJyb3IobWVzc2FnZSk7CiAgICAgICAgcmV2ZXJ0KCk7CiAgICB9Cn0KCi8vLyBAdGl0bGUgVG9rZW4gUmVnaXN0ZXIgQ29udHJhY3QKLy8vIEBhdXRob3IgS29uZ2xpYW5nIFpob25nIC0gPDxhIGhyZWY9Ii9jZG4tY2dpL2wvZW1haWwtcHJvdGVjdGlvbiIgY2xhc3M9Il9fY2ZfZW1haWxfXyIgZGF0YS1jZmVtYWlsPSIyYjQwNDQ0NTRjNDc0MjRhNDU0YzZiNDc0NDQ0NWI1OTQyNDU0YzA1NDQ1OTRjIj5bZW1haWwmIzE2MDtwcm90ZWN0ZWRdPC9hPj4sCi8vLyBAYXV0aG9yIERhbmllbCBXYW5nIC0gPDxhIGhyZWY9Ii9jZG4tY2dpL2wvZW1haWwtcHJvdGVjdGlvbiIgY2xhc3M9Il9fY2ZfZW1haWxfXyIgZGF0YS1jZmVtYWlsPSJjZWFhYWZhMGE3YWJhMjhlYTJhMWExYmViY2E3YTBhOWUwYTFiY2E5Ij5bZW1haWwmIzE2MDtwcm90ZWN0ZWRdPC9hPj4uCmxpYnJhcnkgQnl0ZXMzMkxpYiB7CgogICAgZnVuY3Rpb24geG9yUmVkdWNlKAogICAgICAgIGJ5dGVzMzJbXSAgIGFyciwKICAgICAgICB1aW50ICAgICAgICBsZW4KICAgICAgICApCiAgICAgICAgcHVibGljCiAgICAgICAgY29uc3RhbnQKICAgICAgICByZXR1cm5zIChieXRlczMyIHJlcykgewoKICAgICAgICByZXMgPSBhcnJbMF07CiAgICAgICAgZm9yICh1aW50IGkgPSAxOyBpIDwgbGVuOyBpKyspIHsKICAgICAgICAgICAgcmVzID0gX3hvcihyZXMsIGFycltpXSk7CiAgICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIF94b3IoCiAgICAgICAgYnl0ZXMzMiBiczEsCiAgICAgICAgYnl0ZXMzMiBiczIKICAgICAgICApCiAgICAgICAgcHVibGljCiAgICAgICAgY29uc3RhbnQKICAgICAgICByZXR1cm5zIChieXRlczMyIHJlcykgewoKICAgICAgICBieXRlcyBtZW1vcnkgdGVtcCA9IG5ldyBieXRlcygzMik7CiAgICAgICAgZm9yICh1aW50IGkgPSAwOyBpIDwgMzI7IGkrKykgewogICAgICAgICAgICB0ZW1wW2ldID0gYnMxW2ldIF4gYnMyW2ldOwogICAgICAgIH0KICAgICAgICBzdHJpbmcgbWVtb3J5IHN0ciA9IHN0cmluZyh0ZW1wKTsKICAgICAgICBhc3NlbWJseSB7CiAgICAgICAgICAgIHJlcyA6PSBtbG9hZChhZGQoc3RyLCAzMikpCiAgICAgICAgfQogICAgfQp9Cgpjb250cmFjdCBSaW5naGFzaFJlZ2lzdHJ5IHsKICAgIHVzaW5nIEJ5dGVzMzJMaWIgICAgZm9yIGJ5dGVzMzJbXTsKICAgIHVzaW5nIEVycm9yTGliICAgICAgZm9yIGJvb2w7CiAgICB1c2luZyBVaW50OExpYiAgICAgIGZvciB1aW50OFtdOwoKICAgIHVpbnQgcHVibGljIGJsb2Nrc1RvTGl2ZTsKCiAgICBzdHJ1Y3QgU3VibWlzc2lvbiB7CiAgICAgICAgYWRkcmVzcyBmZWVSZWNlcGllbnQ7CiAgICAgICAgdWludCBibG9jazsKICAgIH0KCiAgICBtYXBwaW5nIChieXRlczMyID0+IFN1Ym1pc3Npb24pIHN1Ym1pc3Npb25zOwoKICAgIGZ1bmN0aW9uIFJpbmdoYXNoUmVnaXN0cnkodWludCBfYmxvY2tzVG9MaXZlKSBwdWJsaWMgewogICAgICAgIHJlcXVpcmUoX2Jsb2Nrc1RvTGl2ZSA+IDApOwogICAgICAgIGJsb2Nrc1RvTGl2ZSA9IF9ibG9ja3NUb0xpdmU7CiAgICB9CgogICAgZnVuY3Rpb24gc3VibWl0UmluZ2hhc2goCiAgICAgICAgdWludCAgICAgICAgcmluZ1NpemUsCiAgICAgICAgYWRkcmVzcyAgICAgZmVlUmVjZXBpZW50LAogICAgICAgIC8vIGJvb2wgICAgICAgIHRocm93SWZMUkNJc0luc3VmZmNpZW50LAogICAgICAgIHVpbnQ4W10gICAgIHZMaXN0LAogICAgICAgIGJ5dGVzMzJbXSAgIHJMaXN0LAogICAgICAgIGJ5dGVzMzJbXSAgIHNMaXN0KQogICAgICAgIHB1YmxpYyB7CiAgICAgICAgYnl0ZXMzMiByaW5naGFzaCA9IGNhbGN1bGF0ZVJpbmdoYXNoKAogICAgICAgICAgICByaW5nU2l6ZSwKICAgICAgICAgICAgLy8gZmVlUmVjZXBpZW50LAogICAgICAgICAgICAvLyB0aHJvd0lmTFJDSXNJbnN1ZmZjaWVudCwKICAgICAgICAgICAgdkxpc3QsCiAgICAgICAgICAgIHJMaXN0LAogICAgICAgICAgICBzTGlzdCk7CgogICAgICAgIGNhblN1Ym1pdChyaW5naGFzaCwgZmVlUmVjZXBpZW50KQogICAgICAgICAgICAub3JUaHJvdygiUmluZ2hhc2ggc3VibWl0dGVkIik7CgogICAgICAgIHN1Ym1pc3Npb25zW3JpbmdoYXNoXSA9IFN1Ym1pc3Npb24oZmVlUmVjZXBpZW50LCBibG9jay5udW1iZXIpOwogICAgfQoKICAgIGZ1bmN0aW9uIGNhblN1Ym1pdCgKICAgICAgICBieXRlczMyIHJpbmdoYXNoLAogICAgICAgIGFkZHJlc3MgZmVlUmVjZXBpZW50CiAgICAgICAgKQogICAgICAgIHB1YmxpYwogICAgICAgIGNvbnN0YW50CiAgICAgICAgcmV0dXJucyAoYm9vbCkgewoKICAgICAgICB2YXIgc3VibWlzc2lvbiA9IHN1Ym1pc3Npb25zW3JpbmdoYXNoXTsKICAgICAgICByZXR1cm4gKHN1Ym1pc3Npb24uZmVlUmVjZXBpZW50ID09IGFkZHJlc3MoMCkKICAgICAgICAgICAgfHwgc3VibWlzc2lvbi5ibG9jayArIGJsb2Nrc1RvTGl2ZSA8IGJsb2NrLm51bWJlcgogICAgICAgICAgICB8fCBzdWJtaXNzaW9uLmZlZVJlY2VwaWVudCA9PSBmZWVSZWNlcGllbnQpOwogICAgfQoKICAgIC8vLyBAcmV0dXJuIFRydWUgaWYgYSByaW5nJ3MgaGFzaCBoYXMgZXZlciBiZWVuIHN1Ym1pdHRlZDsgZmFsc2Ugb3RoZXJ3aXNlLgogICAgZnVuY3Rpb24gcmluZ2hhc2hGb3VuZChieXRlczMyIHJpbmdoYXNoKQogICAgICAgIHB1YmxpYwogICAgICAgIGNvbnN0YW50CiAgICAgICAgcmV0dXJucyAoYm9vbCkgewoKICAgICAgICByZXR1cm4gc3VibWlzc2lvbnNbcmluZ2hhc2hdLmZlZVJlY2VwaWVudCAhPSBhZGRyZXNzKDApOwogICAgfQoKICAgIC8vLyBAZGV2IENhbGN1bGF0ZSB0aGUgaGFzaCBvZiBhIHJpbmcuCiAgICBmdW5jdGlvbiBjYWxjdWxhdGVSaW5naGFzaCgKICAgICAgICB1aW50ICAgICAgICByaW5nU2l6ZSwKICAgICAgICAvLyBhZGRyZXNzICAgICBmZWVSZWNlcGllbnQsCiAgICAgICAgLy8gYm9vbCAgICAgICAgdGhyb3dJZkxSQ0lzSW5zdWZmY2llbnQsCiAgICAgICAgdWludDhbXSAgICAgdkxpc3QsCiAgICAgICAgYnl0ZXMzMltdICAgckxpc3QsCiAgICAgICAgYnl0ZXMzMltdICAgc0xpc3QKICAgICAgICApCiAgICAgICAgcHVibGljCiAgICAgICAgY29uc3RhbnQKICAgICAgICByZXR1cm5zIChieXRlczMyKSB7CgogICAgICAgIChyaW5nU2l6ZSA9PSB2TGlzdC5sZW5ndGggLSAxCiAgICAgICAgICAgICYmIHJpbmdTaXplID09IHJMaXN0Lmxlbmd0aCAtIDEKICAgICAgICAgICAgJiYgcmluZ1NpemUgPT0gc0xpc3QubGVuZ3RoIC0gMSkKICAgICAgICAgICAgLm9yVGhyb3coImludmFsaWQgcmluZyBkYXRhIik7CgogICAgICAgIHJldHVybiBrZWNjYWsyNTYoCiAgICAgICAgICAgIC8vIGZlZVJlY2VwaWVudCwKICAgICAgICAgICAgLy8gdGhyb3dJZkxSQ0lzSW5zdWZmY2llbnQsCiAgICAgICAgICAgIHZMaXN0LnhvclJlZHVjZShyaW5nU2l6ZSksCiAgICAgICAgICAgIHJMaXN0LnhvclJlZHVjZShyaW5nU2l6ZSksCiAgICAgICAgICAgIHNMaXN0LnhvclJlZHVjZShyaW5nU2l6ZSkpOwogICAgfQp9'.
	

]
