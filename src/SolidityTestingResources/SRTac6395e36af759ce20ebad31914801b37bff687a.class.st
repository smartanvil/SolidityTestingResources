Class {
	#name : #SRTac6395e36af759ce20ebad31914801b37bff687a,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTac6395e36af759ce20ebad31914801b37bff687a >> base64 [
	^ ''.
	

]
