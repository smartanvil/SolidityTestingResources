Class {
	#name : #SRTe17ed6dd14bbcb5a3660a025453bb81c720a2dab,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTe17ed6dd14bbcb5a3660a025453bb81c720a2dab >> base64 [
	^ ''.
	

]
