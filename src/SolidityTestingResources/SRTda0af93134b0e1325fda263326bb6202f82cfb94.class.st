Class {
	#name : #SRTda0af93134b0e1325fda263326bb6202f82cfb94,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTda0af93134b0e1325fda263326bb6202f82cfb94 >> base64 [
	^ ''.
	

]
