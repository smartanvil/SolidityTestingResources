Class {
	#name : #SRT032747313C4E914b5fCE356ab8Dc4Df551972DcD,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT032747313C4E914b5fCE356ab8Dc4Df551972DcD >> base64 [
	^ ''.
	

]
