Class {
	#name : #SRTfc3c1c0550188c649f70e78787c8cd9ff9d3b8d4,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTfc3c1c0550188c649f70e78787c8cd9ff9d3b8d4 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7CgovKioKICAgICAgICAgICAgICAgICstLS0tKwogICAgICAgICAgICAgICAvICAgIC98CiAgIGJ5IGN1YmljICAgKy0tLS0rIHwKICAgMjAxNyAgICAgICB8ICAgIHwgKwogICAgICAgICAgICAgIHwgICAgfC8KICAgICAgICAgICAgICArLS0tLSsKKi8KCmNvbnRyYWN0IEN1YmljIHsKCiAgICB1aW50IHB1YmxpYyBjcmVhdGlvblRpbWUgPSBub3c7CiAgICBhZGRyZXNzIHB1YmxpYyBvd25lciA9IG1zZy5zZW5kZXI7CiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbEV0aEhhbmRsZWQgPSAwOyAKICAgIHVpbnQgcHVibGljIHJhdGUgPSAwOyAKICAgIEN1YmVbXSBwdWJsaWMgQ3ViZXM7CgogICAgLyoKICAgIEV2ZW50cwogICAgKi8KCiAgICBldmVudCBGcmVlemUoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCBjdWJlQWRkcmVzcywgdWludCBhbW91bnQsIHVpbnQgdW5sb2NrZWRBZnRlciwgc3RyaW5nIGFwaSk7CiAgICBldmVudCBEZWxpdmVyKGFkZHJlc3MgaW5kZXhlZCBjdWJlLCBhZGRyZXNzIGluZGV4ZWQgZGVzdGluYXRpb24sIHVpbnQgYW1vdW50KTsKCiAgICAvKgogICAgUHVibGljL0V4dGVybmFsIGZ1bmN0aW9ucwogICAgKi8KCiAgICBmdW5jdGlvbigpIHBheWFibGUgeyB9CgogICAgZnVuY3Rpb24gZ2V0Q3ViZUNvdW50KCkgZXh0ZXJuYWwgY29uc3RhbnQgcmV0dXJucyh1aW50KSB7CiAgICAgICAgcmV0dXJuIEN1YmVzLmxlbmd0aDsKICAgIH0KCiAgICBmdW5jdGlvbiBmcmVlemUodWludCBibG9ja3MpIGV4dGVybmFsIHBheWFibGUgewogICAgICAgIHNlY3VyZShibG9ja3MsICdjdWJpYycpOwogICAgfQoKICAgIGZ1bmN0aW9uIGZyZWV6ZUFQSSh1aW50IGJsb2Nrcywgc3RyaW5nIGFwaSkgZXh0ZXJuYWwgcGF5YWJsZSB7CiAgICAgICAgc2VjdXJlKGJsb2NrcywgYXBpKTsKICAgIH0KCiAgICBmdW5jdGlvbiBmb3JnZXRDdWJlKEN1YmUgaWNlQ3ViZSkgZXh0ZXJuYWwgewoKICAgICAgICB1aW50IGlkID0gaWNlQ3ViZS5pZCgpOwogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBhZGRyZXNzKEN1YmVzW2lkXSkpOwoKICAgICAgICBpZiAoaWQgIT0gQ3ViZXMubGVuZ3RoIC0gMSkgewogICAgICAgICAgICBDdWJlc1tpZF0gPSBDdWJlc1tDdWJlcy5sZW5ndGggLSAxXTsKICAgICAgICAgICAgQ3ViZXNbaWRdLnNldElkKGlkKTsKICAgICAgICB9CiAgICAgICAgQ3ViZXMubGVuZ3RoLS07ICAgICAgICAKCiAgICAgICAgRGVsaXZlcihhZGRyZXNzKGljZUN1YmUpLCBpY2VDdWJlLmRlc3RpbmF0aW9uKCksIGljZUN1YmUuYmFsYW5jZSk7CiAgICB9CgogICAgLyoKICAgIE9ubHkgT3duZXIKICAgICovCgogICAgZnVuY3Rpb24gd2l0aGRyYXcoKSBleHRlcm5hbCB7CiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyKTsgICAgICAgIAogICAgICAgIG93bmVyLnRyYW5zZmVyKHRoaXMuYmFsYW5jZSk7CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBuZXdPd25lcikgZXh0ZXJuYWwgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7ICAgICAgICAKICAgICAgICBvd25lciA9IG5ld093bmVyOwogICAgfQoKICAgIC8qCiAgICBQcml2YXRlCiAgICAqLwoKCWZ1bmN0aW9uIHNlY3VyZSh1aW50IGJsb2Nrcywgc3RyaW5nIGFwaSkgcHJpdmF0ZSB7CgogICAgICAgIHJlcXVpcmUobXNnLnZhbHVlID4gMCk7CiAgICAgICAgdWludCBhbW91bnRUb0ZyZWV6ZSA9IG1zZy52YWx1ZTsgCiAgICAgICAgdG90YWxFdGhIYW5kbGVkID0gYWRkKHRvdGFsRXRoSGFuZGxlZCwgYW1vdW50VG9GcmVlemUpOwogICAgICAgICAgCiAgICAgICAgLyogCiAgICAgICAgIFRoZSByYXRlIHN0YXJ0cyBhdCB6ZXJvLCBvdmVyIHRpbWUgYXMgdGhpcyAKICAgICAgICAgY29udHJhY3QgaXMgdHJ1c3RlZCB0aGUgaGlnaGVyIHRoZSBmZWUgCiAgICAgICAgIGJlY29tZXMgd2l0aCBhbiB1cHdhcmQgbGltaXQgb2YgaGFsZiBvZiBvbmUKICAgICAgICAgcGVyY2VudCAoLjUwJSkuIFRoZSBvd25lciBvZiB0aGUgY29udHJhY3QgQ0FOIE5PVCAKICAgICAgICAgYWRqdXN0IHRoaXMuIAogICAgICAgICovCiAgICAgICAgaWYgKHJhdGUgIT0gMjAwICkgewoKICAgICAgICAgICAgaWYgKHRvdGFsRXRoSGFuZGxlZCA+IDUwMDAgZXRoZXIpIHsKICAgICAgICAgICAgICAgIHNldFJhdGUoMjAwKTsgIC8vLjUwIG9mIG9uZSBwZXJjZW50CiAgICAgICAgICAgIH0gZWxzZSBpZiAodG90YWxFdGhIYW5kbGVkID4gMTAwMCBldGhlcikgeyAKICAgICAgICAgICAgICAgIHNldFJhdGUoNTAwKTsgIC8vLjIwIG9mIG9uZSBwZXJjZW50CiAgICAgICAgICAgIH0gZWxzZSBpZiAodG90YWxFdGhIYW5kbGVkID4gMTAwIGV0aGVyKSB7IAogICAgICAgICAgICAgICAgc2V0UmF0ZSgxMDAwKTsgLy8uMTAgb2Ygb25lIHBlcmNlbnQKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKHJhdGUgPiAwKSB7CiAgICAgICAgICAgIHVpbnQgZmVlID0gZGl2KGFtb3VudFRvRnJlZXplLCByYXRlKTsKICAgICAgICAgICAgYW1vdW50VG9GcmVlemUgPSBzdWIoYW1vdW50VG9GcmVlemUsIGZlZSk7CiAgICAgICAgfQoKICAgICAgICBDdWJlIG5ld0N1YmUgPSAobmV3IEN1YmUpLnZhbHVlKGFtb3VudFRvRnJlZXplKShtc2cuc2VuZGVyLCBhZGQoYmxvY2subnVtYmVyLCBibG9ja3MpLCB0aGlzKTsKICAgICAgICBuZXdDdWJlLnNldElkKEN1YmVzLnB1c2gobmV3Q3ViZSkgLSAxKTsKICAgICAgICBGcmVlemUobXNnLnNlbmRlciwgYWRkcmVzcyhuZXdDdWJlKSwgYW1vdW50VG9GcmVlemUsIGFkZChibG9jay5udW1iZXIsIGJsb2NrcyksIGFwaSk7Cgl9CgogICAgZnVuY3Rpb24gc2V0UmF0ZSh1aW50IF9uZXdSYXRlKSBwcml2YXRlIHsKICAgICAgICByYXRlID0gX25ld1JhdGU7IAogICAgfQoKICAgIGZ1bmN0aW9uIGFkZCh1aW50IGEsIHVpbnQgYikgcHJpdmF0ZSByZXR1cm5zICh1aW50KSB7CiAgICAgICAgdWludCBjID0gYSArIGI7CiAgICAgICAgYXNzZXJ0KGMgPj0gYSk7CiAgICAgICAgcmV0dXJuIGM7CiAgICB9CgogICAgZnVuY3Rpb24gZGl2KHVpbnQgYSwgdWludCBiKSBwcml2YXRlIHJldHVybnMgKHVpbnQpIHsKICAgICAgICBhc3NlcnQoYiA+IDApOwogICAgICAgIHVpbnQgYyA9IGEgLyBiOwogICAgICAgIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOwogICAgICAgIHJldHVybiBjOwogICAgfQoKICAgIGZ1bmN0aW9uIHN1Yih1aW50IGEsIHVpbnQgYikgcHJpdmF0ZSByZXR1cm5zICh1aW50KSB7CiAgICAgICAgYXNzZXJ0KGIgPD0gYSk7CiAgICAgICAgcmV0dXJuIGEgLSBiOwogICAgfQoKfQoKY29udHJhY3QgQ3ViZSB7CgogICAgYWRkcmVzcyBwdWJsaWMgZGVzdGluYXRpb247CiAgICBDdWJpYyBwdWJsaWMgY3ViaWNDb250cmFjdDsgICAgCiAgICB1aW50IHB1YmxpYyB1bmxvY2tlZEFmdGVyOwogICAgdWludCBwdWJsaWMgaWQ7CiAgICAKCWZ1bmN0aW9uIEN1YmUoYWRkcmVzcyBfZGVzdGluYXRpb24sIHVpbnQgX3VubG9ja2VkQWZ0ZXIsIEN1YmljIF9jdWJpY0NvbnRyYWN0KSBwYXlhYmxlIHsKCQlkZXN0aW5hdGlvbiA9IF9kZXN0aW5hdGlvbjsKCQl1bmxvY2tlZEFmdGVyID0gX3VubG9ja2VkQWZ0ZXI7CiAgICAgICAgY3ViaWNDb250cmFjdCA9IF9jdWJpY0NvbnRyYWN0OyAgICAgICAKCX0KCiAgICBmdW5jdGlvbigpIHBheWFibGUgewogICAgICAgIHJlcXVpcmUobXNnLnZhbHVlID09IDApOwogICAgfQoKICAgIGZ1bmN0aW9uIHNldElkKHVpbnQgX2lkKSBleHRlcm5hbCB7CiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyID09IGFkZHJlc3MoY3ViaWNDb250cmFjdCkpOwogICAgICAgIGlkID0gX2lkOyAKICAgIH0KCiAgICBmdW5jdGlvbiBkZWxpdmVyKCkgZXh0ZXJuYWwgewogICAgICAgIGFzc2VydChibG9jay5udW1iZXIgPiB1bmxvY2tlZEFmdGVyKTsgCiAgICAgICAgY3ViaWNDb250cmFjdC5mb3JnZXRDdWJlKHRoaXMpOwoJCXNlbGZkZXN0cnVjdChkZXN0aW5hdGlvbik7CQkKCX0KfQ=='.
	

]
