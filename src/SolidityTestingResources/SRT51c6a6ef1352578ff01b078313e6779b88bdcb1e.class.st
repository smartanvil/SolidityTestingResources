Class {
	#name : #SRT51c6a6ef1352578ff01b078313e6779b88bdcb1e,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT51c6a6ef1352578ff01b078313e6779b88bdcb1e >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7Cgpjb250cmFjdCBETUlOVCB7CiAgICBzdHJpbmcgcHVibGljIG5hbWUgPSAnRE1JTlQnOwogICAgc3RyaW5nIHB1YmxpYyBzeW1ib2wgPSAnRE1JTlQnOwogICAgdWludDggcHVibGljIGRlY2ltYWxzID0gMTg7CiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseSA9IDEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA7CiAgICB1aW50IHB1YmxpYyBtaW5pbmdSZXdhcmQgPSAxMDAwMDAwMDAwMDAwMDAwMDAwOwogICAgdWludCBwcml2YXRlIGRpdmlkZXI7CiAgICB1aW50IHByaXZhdGUgcmFuZG9tTnVtYmVyOwogICAgCiAgICAvKiBUaGlzIGNyZWF0ZXMgYW4gYXJyYXkgd2l0aCBhbGwgYmFsYW5jZXMgKi8KICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIGJhbGFuY2VPZjsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIHN1Y2Nlc3Nlc09mOwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBwdWJsaWMgZmFpbHNPZjsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgcHVibGljIGFsbG93YW5jZTsKICAgIAogICAgLyogVGhpcyBnZW5lcmF0ZXMgYSBwdWJsaWMgZXZlbnQgb24gdGhlIGJsb2NrY2hhaW4gdGhhdCB3aWxsIG5vdGlmeSBjbGllbnRzICovCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHZhbHVlKTsKICAgIAogICAgLyogSW5pdGlhbGl6ZXMgY29udHJhY3Qgd2l0aCBpbml0aWFsIHN1cHBseSB0b2tlbnMgdG8gdGhlIGNyZWF0b3Igb2YgdGhlIGNvbnRyYWN0ICovCiAgICBmdW5jdGlvbiBETUlOVCgpIHB1YmxpYyB7CiAgICAgICAgYmFsYW5jZU9mW21zZy5zZW5kZXJdID0gdG90YWxTdXBwbHk7CiAgICAgICAgZGl2aWRlciAtPSAxOwogICAgICAgIGRpdmlkZXIgLz0gMTAwMDAwMDAwMDsKICAgIH0KICAgIAogICAgLyogSW50ZXJuYWwgdHJhbnNmZXIsIG9ubHkgY2FuIGJlIGNhbGxlZCBieSB0aGlzIGNvbnRyYWN0ICovCiAgICBmdW5jdGlvbiBfdHJhbnNmZXIoYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQgX3ZhbHVlKSBpbnRlcm5hbCB7CiAgICAgICAgcmVxdWlyZShfdG8gIT0gMHgwKTsKICAgICAgICByZXF1aXJlKGJhbGFuY2VPZltfZnJvbV0gPj0gX3ZhbHVlKTsKICAgICAgICByZXF1aXJlKGJhbGFuY2VPZltfdG9dICsgX3ZhbHVlID4gYmFsYW5jZU9mW190b10pOwogICAgICAgIHVpbnQgcHJldmlvdXNCYWxhbmNlcyA9IGJhbGFuY2VPZltfZnJvbV0gKyBiYWxhbmNlT2ZbX3RvXTsKICAgICAgICBiYWxhbmNlT2ZbX2Zyb21dIC09IF92YWx1ZTsKICAgICAgICBiYWxhbmNlT2ZbX3RvXSArPSBfdmFsdWU7CiAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICBhc3NlcnQoYmFsYW5jZU9mW19mcm9tXSArIGJhbGFuY2VPZltfdG9dID09IHByZXZpb3VzQmFsYW5jZXMpOwogICAgfQogICAgCiAgICAvKiBTZW5kIGNvaW5zICovCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIGV4dGVybmFsIHsKICAgICAgICBfdHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgfQogICAgCiAgICAvKiBUcmFuc2ZlciB0b2tlbnMgZnJvbSBvdGhlciBhZGRyZXNzICovCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBleHRlcm5hbCByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICByZXF1aXJlKF92YWx1ZSA8PSBhbGxvd2FuY2VbX2Zyb21dW21zZy5zZW5kZXJdKTsgICAgIC8vIENoZWNrIGFsbG93YW5jZQogICAgICAgIGFsbG93YW5jZVtfZnJvbV1bbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOwogICAgICAgIF90cmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQogICAgCiAgICAvKiBTZXQgYWxsb3dhbmNlIGZvciBvdGhlciBhZGRyZXNzICovCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSBleHRlcm5hbCByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBhbGxvd2FuY2VbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQogICAgCiAgICBmdW5jdGlvbiAoKSBleHRlcm5hbCBwYXlhYmxlIHsKICAgICAgICBpZiAobXNnLnZhbHVlID09IDApIHsKICAgICAgICAgICAgcmFuZG9tTnVtYmVyICs9IGJsb2NrLnRpbWVzdGFtcCArIHVpbnQobXNnLnNlbmRlcik7CiAgICAgICAgICAgIHVpbnQgbWluZWRBdEJsb2NrID0gdWludChibG9jay5ibG9ja2hhc2goYmxvY2subnVtYmVyIC0gMSkpOwogICAgICAgICAgICB1aW50IG1pbmVkSGFzaFJlbCA9IHVpbnQoc2hhMjU2KG1pbmVkQXRCbG9jayArIHJhbmRvbU51bWJlciArIHVpbnQobXNnLnNlbmRlcikpKSAvIGRpdmlkZXI7CiAgICAgICAgICAgIHVpbnQgYmFsYW5jZVJlbCA9IGJhbGFuY2VPZlttc2cuc2VuZGVyXSAqIDEwMDAwMDAwMDAgLyB0b3RhbFN1cHBseTsKICAgICAgICAgICAgaWYgKGJhbGFuY2VSZWwgPj0gMTAwMDAwKSB7CiAgICAgICAgICAgICAgICB1aW50IGsgPSBiYWxhbmNlUmVsIC8gMTAwMDAwOwogICAgICAgICAgICAgICAgaWYgKGsgPiAyNTUpIHsKICAgICAgICAgICAgICAgICAgICBrID0gMjU1OwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgayA9IDIgKiogazsKICAgICAgICAgICAgICAgIGJhbGFuY2VSZWwgPSA1MDAwMDAwMDAgLyBrOwogICAgICAgICAgICAgICAgYmFsYW5jZVJlbCA9IDUwMDAwMDAwMCAtIGJhbGFuY2VSZWw7CiAgICAgICAgICAgICAgICBpZiAobWluZWRIYXNoUmVsIDwgYmFsYW5jZVJlbCkgewogICAgICAgICAgICAgICAgICAgIHVpbnQgcmV3YXJkID0gbWluaW5nUmV3YXJkICsgbWluZWRIYXNoUmVsICogMTAwMDAwMDAwMDAwMDAwOwogICAgICAgICAgICAgICAgICAgIGJhbGFuY2VPZlttc2cuc2VuZGVyXSArPSByZXdhcmQ7CiAgICAgICAgICAgICAgICAgICAgdG90YWxTdXBwbHkgKz0gcmV3YXJkOwogICAgICAgICAgICAgICAgICAgIFRyYW5zZmVyKDAsIHRoaXMsIHJld2FyZCk7CiAgICAgICAgICAgICAgICAgICAgVHJhbnNmZXIodGhpcywgbXNnLnNlbmRlciwgcmV3YXJkKTsKICAgICAgICAgICAgICAgICAgICBzdWNjZXNzZXNPZlttc2cuc2VuZGVyXSsrOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBmYWlsc09mW21zZy5zZW5kZXJdKys7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXZlcnQoKTsKICAgICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldmVydCgpOwogICAgICAgIH0KICAgIH0KfQ=='.
	

]
