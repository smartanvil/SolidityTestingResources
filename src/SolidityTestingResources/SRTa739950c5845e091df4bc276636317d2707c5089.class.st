Class {
	#name : #SRTa739950c5845e091df4bc276636317d2707c5089,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTa739950c5845e091df4bc276636317d2707c5089 >> base64 [
	^ ''.
	

]
