Class {
	#name : #SRT93519cc1a51ac56cf2daa8aaafcd4073f49a19d8,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT93519cc1a51ac56cf2daa8aaafcd4073f49a19d8 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7CgoKLyoqCiAqIEB0aXRsZSBPd25hYmxlCiAqIEBkZXYgVGhlIE93bmFibGUgY29udHJhY3QgaGFzIGFuIG93bmVyIGFkZHJlc3MsIGFuZCBwcm92aWRlcyBiYXNpYyBhdXRob3JpemF0aW9uIGNvbnRyb2wKICogZnVuY3Rpb25zLCB0aGlzIHNpbXBsaWZpZXMgdGhlIGltcGxlbWVudGF0aW9uIG9mICJ1c2VyIHBlcm1pc3Npb25zIi4KICovCmNvbnRyYWN0IE93bmFibGUgewogICAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CgogICAgZXZlbnQgT3duZXJzaGlwVHJhbnNmZXJyZWQoYWRkcmVzcyBpbmRleGVkIHByZXZpb3VzT3duZXIsIGFkZHJlc3MgaW5kZXhlZCBuZXdPd25lcik7CiAgICAvKioKICAgICAqIEBkZXYgVGhlIE93bmFibGUgY29uc3RydWN0b3Igc2V0cyB0aGUgb3JpZ2luYWwgYG93bmVyYCBvZiB0aGUgY29udHJhY3QgdG8gdGhlIHNlbmRlcgogICAgICogYWNjb3VudC4KICAgICAqLwogICAgZnVuY3Rpb24gT3duYWJsZSgpIHsKICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgICB9CgogICAgLyoqCiAgICAgKiBAZGV2IFRocm93cyBpZiBjYWxsZWQgYnkgYW55IGFjY291bnQgb3RoZXIgdGhhbiB0aGUgb3duZXIuCiAgICAgKi8KICAgIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgICAgIF87CiAgICB9CgogICAgLyoqCiAgICAgKiBAZGV2IEFsbG93cyB0aGUgY3VycmVudCBvd25lciB0byB0cmFuc2ZlciBjb250cm9sIG9mIHRoZSBjb250cmFjdCB0byBhIG5ld093bmVyLgogICAgICogQHBhcmFtIG5ld093bmVyIFRoZSBhZGRyZXNzIHRvIHRyYW5zZmVyIG93bmVyc2hpcCB0by4KICAgICAqLwogICAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBuZXdPd25lcikgb25seU93bmVyIHB1YmxpYyB7CiAgICAgICAgcmVxdWlyZShuZXdPd25lciAhPSBhZGRyZXNzKDApKTsKICAgICAgICBPd25lcnNoaXBUcmFuc2ZlcnJlZChvd25lciwgbmV3T3duZXIpOwogICAgICAgIG93bmVyID0gbmV3T3duZXI7CiAgICB9Cgp9CgoKCgoKCi8qKgogKiBAdGl0bGUgU2FmZU1hdGgKICogQGRldiBNYXRoIG9wZXJhdGlvbnMgd2l0aCBzYWZldHkgY2hlY2tzIHRoYXQgdGhyb3cgb24gZXJyb3IKICovCmxpYnJhcnkgU2FmZU1hdGggewogICAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgdWludDI1NiBjID0gYSAqIGI7CiAgICAgICAgaWYgKGEgIT0gMCAmJiBjIC8gYSAhPSBiKSByZXZlcnQoKTsKICAgICAgICByZXR1cm4gYzsKICAgIH0KCiAgICBmdW5jdGlvbiBkaXYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAKICAgICAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgICAgICAvLyBhc3NlcnQoYSA9PSBiICogYyArIGEgJSBiKTsgLy8gVGhlcmUgaXMgbm8gY2FzZSBpbiB3aGljaCB0aGlzIGRvZXNuJ3QgaG9sZAogICAgICAgIHJldHVybiBjOwogICAgfQoKICAgIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgICAgIGlmIChiID4gYSkgcmV2ZXJ0KCk7CiAgICAgICAgcmV0dXJuIGEgLSBiOwogICAgfQoKICAgIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgICAgIGlmIChjIDwgYSkgcmV2ZXJ0KCk7CiAgICAgICAgcmV0dXJuIGM7CiAgICB9Cn0KCgoKLyoKICogISEhSU1QT1JUQU5UISEhCiAqIEJhc2VkIG9uIE9wZW4gWmVwcGVsaW4gUmVmdW5kIFZhdWx0IGNvbnRyYWN0CiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9PcGVuWmVwcGVsaW4vemVwcGVsaW4tc29saWRpdHkvYmxvYi9tYXN0ZXIvY29udHJhY3RzL2Nyb3dkc2FsZS9SZWZ1bmRWYXVsdC5zb2wKICogdGhlIG9ubHkgdGhpbmcgdGhhdCBkaWZmZXJzIGlzIGEgaGFyZGNvZGVkIHdhbGxldCBhZGRyZXNzCiAqLwoKLyoqCiAqIEB0aXRsZSBSZWZ1bmRWYXVsdC4KICogQGRldiBUaGlzIGNvbnRyYWN0IGlzIHVzZWQgZm9yIHN0b3JpbmcgZnVuZHMgd2hpbGUgYSBjcm93ZHNhbGUKICogaXMgaW4gcHJvZ3Jlc3MuIFN1cHBvcnRzIHJlZnVuZGluZyB0aGUgbW9uZXkgaWYgY3Jvd2RzYWxlIGZhaWxzLAogKiBhbmQgZm9yd2FyZGluZyBpdCBpZiBjcm93ZHNhbGUgaXMgc3VjY2Vzc2Z1bC4KICovCmNvbnRyYWN0IFZMQlJlZnVuZFZhdWx0IGlzIE93bmFibGUgewogICAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQyNTY7CgogICAgZW51bSBTdGF0ZSB7QWN0aXZlLCBSZWZ1bmRpbmcsIENsb3NlZH0KICAgIFN0YXRlIHB1YmxpYyBzdGF0ZTsKCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBkZXBvc2l0ZWQ7CgogICAgYWRkcmVzcyBwdWJsaWMgY29uc3RhbnQgd2FsbGV0ID0gMHgwMkQ0MDhiYzIwMzkyMTY0NkVDQTY5YjU1NTUyNERGM2M3ZjNhOGQ3OwoKICAgIGFkZHJlc3MgY3Jvd2RzYWxlQ29udHJhY3RBZGRyZXNzOwoKICAgIGV2ZW50IENsb3NlZCgpOwogICAgZXZlbnQgUmVmdW5kc0VuYWJsZWQoKTsKICAgIGV2ZW50IFJlZnVuZGVkKGFkZHJlc3MgaW5kZXhlZCBiZW5lZmljaWFyeSwgdWludDI1NiB3ZWlBbW91bnQpOwoKICAgIGZ1bmN0aW9uIFZMQlJlZnVuZFZhdWx0KCkgewogICAgICAgIHN0YXRlID0gU3RhdGUuQWN0aXZlOwogICAgfQoKICAgIG1vZGlmaWVyIG9ubHlDcm93ZHNhbGVDb250cmFjdCgpIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gY3Jvd2RzYWxlQ29udHJhY3RBZGRyZXNzKTsKICAgICAgICBfOwogICAgfQoKICAgIGZ1bmN0aW9uIHNldENyb3dkc2FsZUFkZHJlc3MoYWRkcmVzcyBfY3Jvd2RzYWxlQWRkcmVzcykgZXh0ZXJuYWwgb25seU93bmVyIHsKICAgICAgICByZXF1aXJlKF9jcm93ZHNhbGVBZGRyZXNzICE9IGFkZHJlc3MoMCkpOwogICAgICAgIGNyb3dkc2FsZUNvbnRyYWN0QWRkcmVzcyA9IF9jcm93ZHNhbGVBZGRyZXNzOwogICAgfQoKICAgIGZ1bmN0aW9uIGRlcG9zaXQoYWRkcmVzcyBpbnZlc3Rvcikgb25seUNyb3dkc2FsZUNvbnRyYWN0IGV4dGVybmFsIHBheWFibGUgewogICAgICAgIHJlcXVpcmUoc3RhdGUgPT0gU3RhdGUuQWN0aXZlKTsKICAgICAgICBkZXBvc2l0ZWRbaW52ZXN0b3JdID0gZGVwb3NpdGVkW2ludmVzdG9yXS5hZGQobXNnLnZhbHVlKTsKICAgIH0KCiAgICBmdW5jdGlvbiBjbG9zZShhZGRyZXNzIF93aW5nc1dhbGxldCkgb25seUNyb3dkc2FsZUNvbnRyYWN0IGV4dGVybmFsIHsKICAgICAgICByZXF1aXJlKF93aW5nc1dhbGxldCAhPSBhZGRyZXNzKDApKTsKICAgICAgICByZXF1aXJlKHN0YXRlID09IFN0YXRlLkFjdGl2ZSk7CiAgICAgICAgc3RhdGUgPSBTdGF0ZS5DbG9zZWQ7CiAgICAgICAgQ2xvc2VkKCk7CiAgICAgICAgdWludDI1NiB3aW5nc1Jld2FyZCA9IHRoaXMuYmFsYW5jZS5kaXYoMTAwKTsKICAgICAgICBfd2luZ3NXYWxsZXQudHJhbnNmZXIod2luZ3NSZXdhcmQpOwogICAgICAgIHdhbGxldC50cmFuc2Zlcih0aGlzLmJhbGFuY2UpOwogICAgfQoKICAgIGZ1bmN0aW9uIGVuYWJsZVJlZnVuZHMoKSBvbmx5Q3Jvd2RzYWxlQ29udHJhY3QgZXh0ZXJuYWwgewogICAgICAgIHJlcXVpcmUoc3RhdGUgPT0gU3RhdGUuQWN0aXZlKTsKICAgICAgICBzdGF0ZSA9IFN0YXRlLlJlZnVuZGluZzsKICAgICAgICBSZWZ1bmRzRW5hYmxlZCgpOwogICAgfQoKICAgIGZ1bmN0aW9uIHJlZnVuZChhZGRyZXNzIGludmVzdG9yKSBwdWJsaWMgewogICAgICAgIHJlcXVpcmUoc3RhdGUgPT0gU3RhdGUuUmVmdW5kaW5nKTsKICAgICAgICB1aW50MjU2IGRlcG9zaXRlZFZhbHVlID0gZGVwb3NpdGVkW2ludmVzdG9yXTsKICAgICAgICBkZXBvc2l0ZWRbaW52ZXN0b3JdID0gMDsKICAgICAgICBpbnZlc3Rvci50cmFuc2ZlcihkZXBvc2l0ZWRWYWx1ZSk7CiAgICAgICAgUmVmdW5kZWQoaW52ZXN0b3IsIGRlcG9zaXRlZFZhbHVlKTsKICAgIH0KCiAgICAvKioKICAgICAqIEBkZXYga2lsbGVyIG1ldGhvZCB0aGF0IGNhbiBidSB1c2VkIGJ5IG93bmVyIHRvCiAgICAgKiAgICAgIGtpbGwgdGhlIGNvbnRyYWN0IGFuZCBzZW5kIGZ1bmRzIHRvIG93bmVyCiAgICAgKi8KICAgIGZ1bmN0aW9uIGtpbGwoKSBvbmx5T3duZXIgewogICAgICAgIHJlcXVpcmUoc3RhdGUgPT0gU3RhdGUuQ2xvc2VkKTsKICAgICAgICBzZWxmZGVzdHJ1Y3Qob3duZXIpOwogICAgfQp9'.
	

]
