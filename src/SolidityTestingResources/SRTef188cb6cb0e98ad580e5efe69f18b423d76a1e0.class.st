Class {
	#name : #SRTef188cb6cb0e98ad580e5efe69f18b423d76a1e0,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTef188cb6cb0e98ad580e5efe69f18b423d76a1e0 >> base64 [
	^ ''.
	

]
