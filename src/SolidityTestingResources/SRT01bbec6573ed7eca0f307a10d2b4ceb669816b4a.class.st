Class {
	#name : #SRT01bbec6573ed7eca0f307a10d2b4ceb669816b4a,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT01bbec6573ed7eca0f307a10d2b4ceb669816b4a >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7CgpsaWJyYXJ5IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgaWYgKGEgPT0gMCkgewogICAgICByZXR1cm4gMDsKICAgIH0KICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGMgLyBhID09IGIpOwogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBkaXYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSAvIGI7CiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhICsgYjsKICAgIGFzc2VydChjID49IGEpOwogICAgcmV0dXJuIGM7CiAgfQp9Cgpjb250cmFjdCBPd25hYmxlIHsKICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKICBldmVudCBPd25lcnNoaXBUcmFuc2ZlcnJlZChhZGRyZXNzIGluZGV4ZWQgcHJldmlvdXNPd25lciwgYWRkcmVzcyBpbmRleGVkIG5ld093bmVyKTsKCiAgZnVuY3Rpb24gT3duYWJsZSgpIHB1YmxpYyB7CiAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgfQoKICBtb2RpZmllciBvbmx5T3duZXIoKSB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgXzsKICB9CgogIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpIHB1YmxpYyBvbmx5T3duZXIgewogICAgcmVxdWlyZShuZXdPd25lciAhPSBhZGRyZXNzKDApKTsKICAgIE93bmVyc2hpcFRyYW5zZmVycmVkKG93bmVyLCBuZXdPd25lcik7CiAgICBvd25lciA9IG5ld093bmVyOwogIH0KfQoKY29udHJhY3QgRVJDMjBJbnRlcmZhY2UgewogIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQpOwogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIHRva2VuT3duZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50IGJhbGFuY2UpOwogIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIHRva2VuT3duZXIsIGFkZHJlc3Mgc3BlbmRlcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQgcmVtYWluaW5nKTsKICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIHRvLCB1aW50IHRva2VucykgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIHNwZW5kZXIsIHVpbnQgdG9rZW5zKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvLCB1aW50IHRva2VucykgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludCB0b2tlbnMpOwogIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCB0b2tlbk93bmVyLCBhZGRyZXNzIGluZGV4ZWQgc3BlbmRlciwgdWludCB0b2tlbnMpOwp9CgoKY29udHJhY3QgRVJDODI3IHsKCiAgZnVuY3Rpb24gYXBwcm92ZSggYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUsIGJ5dGVzIF9kYXRhICkgcHVibGljIHJldHVybnMgKGJvb2wpOwogIGZ1bmN0aW9uIHRyYW5zZmVyKCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUsIGJ5dGVzIF9kYXRhICkgcHVibGljIHJldHVybnMgKGJvb2wpOwogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbSggYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlLCBieXRlcyBfZGF0YSApIHB1YmxpYyByZXR1cm5zIChib29sKTsKCn0KCgpjb250cmFjdCBURUZvb2RzVG9rZW4gaXMgT3duYWJsZSwgRVJDMjBJbnRlcmZhY2UgewoKICB1c2luZyBTYWZlTWF0aCBmb3IgdWludDsKCiAgc3RyaW5nIHB1YmxpYyBjb25zdGFudCBuYW1lID0gIlRFRk9PRCBGQVJNIFRPIEZPUksgRk9PRCBUUkFDRUFCSUxJVFkgU1lTVEVNIExJQ0VOU0UgVE9LRU4iOwogIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgc3ltYm9sID0gIlRGT09EIjsKICB1aW50OCBwdWJsaWMgY29uc3RhbnQgZGVjaW1hbHMgPSAxODsKICB1aW50IGNvbnN0YW50IF90b3RhbFN1cHBseSA9IDEwMDAwMDAwMDAgKiAxIGV0aGVyOwogIHVpbnQgcHVibGljIHRyYW5zZmVycmFibGVUaW1lID0gMTUyMTcxMjgwMDsKICB1aW50IF92ZXN0ZWRTdXBwbHk7CiAgdWludCBfY2lyY3VsYXRpbmdTdXBwbHk7CiAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50KSBiYWxhbmNlczsKICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50KSkgYWxsb3dlZDsKCiAgc3RydWN0IHZlc3RlZEJhbGFuY2UgewogICAgYWRkcmVzcyBhZGRyOwogICAgdWludCBiYWxhbmNlOwogIH0KICBtYXBwaW5nICh1aW50ID0+IHZlc3RlZEJhbGFuY2VbXSkgdmVzdGluZ01hcDsKCgoKICBmdW5jdGlvbiBURUZvb2RzVG9rZW4gKCkgcHVibGljIHsKICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgIGJhbGFuY2VzWzB4MDBdID0gX3RvdGFsU3VwcGx5OwogIH0KCiAgZXZlbnQgVmVzdGVkVG9rZW5zUmVsZWFzZWQoYWRkcmVzcyB0bywgdWludCBhbW91bnQpOwoKICBmdW5jdGlvbiBhbGxvY2F0ZVRva2VucyAoYWRkcmVzcyBhZGRyLCB1aW50IGFtb3VudCkgcHVibGljIG9ubHlPd25lciByZXR1cm5zIChib29sKSB7CiAgICByZXF1aXJlIChhZGRyICE9IDB4MDApOwogICAgcmVxdWlyZSAoYW1vdW50ID4gMCk7CiAgICBiYWxhbmNlc1sweDAwXSA9IGJhbGFuY2VzWzB4MDBdLnN1YihhbW91bnQpOwogICAgYmFsYW5jZXNbYWRkcl0gPSBiYWxhbmNlc1thZGRyXS5hZGQoYW1vdW50KTsKICAgIF9jaXJjdWxhdGluZ1N1cHBseSA9IF9jaXJjdWxhdGluZ1N1cHBseS5hZGQoYW1vdW50KTsKICAgIGFzc2VydCAoX3Zlc3RlZFN1cHBseS5hZGQoX2NpcmN1bGF0aW5nU3VwcGx5KS5hZGQoYmFsYW5jZXNbMHgwMF0pID09IF90b3RhbFN1cHBseSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIGFsbG9jYXRlVmVzdGVkVG9rZW5zIChhZGRyZXNzIGFkZHIsIHVpbnQgYW1vdW50LCB1aW50IHZlc3RpbmdQZXJpb2QpIHB1YmxpYyBvbmx5T3duZXIgcmV0dXJucyAoYm9vbCkgewogICAgcmVxdWlyZSAoYWRkciAhPSAweDAwKTsKICAgIHJlcXVpcmUgKGFtb3VudCA+IDApOwogICAgcmVxdWlyZSAodmVzdGluZ1BlcmlvZCA+IDApOwogICAgYmFsYW5jZXNbMHgwMF0gPSBiYWxhbmNlc1sweDAwXS5zdWIoYW1vdW50KTsKICAgIHZlc3RpbmdNYXBbdmVzdGluZ1BlcmlvZF0ucHVzaCggdmVzdGVkQmFsYW5jZSAoYWRkcixhbW91bnQpICk7CiAgICBfdmVzdGVkU3VwcGx5ID0gX3Zlc3RlZFN1cHBseS5hZGQoYW1vdW50KTsKICAgIGFzc2VydCAoX3Zlc3RlZFN1cHBseS5hZGQoX2NpcmN1bGF0aW5nU3VwcGx5KS5hZGQoYmFsYW5jZXNbMHgwMF0pID09IF90b3RhbFN1cHBseSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIHJlbGVhc2VWZXN0ZWRUb2tlbnMgKHVpbnQgdmVzdGluZ1BlcmlvZCkgcHVibGljIHsKICAgIHJlcXVpcmUgKG5vdyA+PSB0cmFuc2ZlcnJhYmxlVGltZS5hZGQodmVzdGluZ1BlcmlvZCkpOwogICAgcmVxdWlyZSAodmVzdGluZ01hcFt2ZXN0aW5nUGVyaW9kXS5sZW5ndGggPiAwKTsKICAgIHJlcXVpcmUgKHZlc3RpbmdNYXBbdmVzdGluZ1BlcmlvZF1bMF0uYmFsYW5jZSA+IDApOwogICAgdmFyIHYgPSB2ZXN0aW5nTWFwW3Zlc3RpbmdQZXJpb2RdOwogICAgZm9yICh1aW50OCBpID0gMDsgaSA8IHYubGVuZ3RoOyBpKyspIHsKICAgICAgYmFsYW5jZXNbdltpXS5hZGRyXSA9IGJhbGFuY2VzW3ZbaV0uYWRkcl0uYWRkKHZbaV0uYmFsYW5jZSk7CiAgICAgIF9jaXJjdWxhdGluZ1N1cHBseSA9IF9jaXJjdWxhdGluZ1N1cHBseS5hZGQodltpXS5iYWxhbmNlKTsKICAgICAgX3Zlc3RlZFN1cHBseSA9IF92ZXN0ZWRTdXBwbHkuc3ViKHZbaV0uYmFsYW5jZSk7CiAgICAgIHZbaV0uYmFsYW5jZSA9IDA7CiAgICAgIFZlc3RlZFRva2Vuc1JlbGVhc2VkKHZbaV0uYWRkciwgdltpXS5iYWxhbmNlKTsKICAgIH0KICB9CgogIGZ1bmN0aW9uIGVuYWJsZVRyYW5zZmVycyAoKSBwdWJsaWMgb25seU93bmVyIHJldHVybnMgKGJvb2wpIHsKICAgIGlmIChub3cuYWRkKDg2NDAwKSA8IHRyYW5zZmVycmFibGVUaW1lKSB7CiAgICAgIHRyYW5zZmVycmFibGVUaW1lID0gbm93LmFkZCg4NjQwMCk7CiAgICB9CiAgICBvd25lciA9IDB4MDA7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uICgpIHB1YmxpYyBwYXlhYmxlIHsKICAgIHJldmVydCgpOwogIH0KCiAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludCkgewogICAgcmV0dXJuIF9jaXJjdWxhdGluZ1N1cHBseTsKICB9CgogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIHRva2VuT3duZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50IGJhbGFuY2UpIHsKICAgIHJldHVybiBiYWxhbmNlc1t0b2tlbk93bmVyXTsKICB9CgogIGZ1bmN0aW9uIHZlc3RlZEJhbGFuY2VPZihhZGRyZXNzIHRva2VuT3duZXIsIHVpbnQgdmVzdGluZ1BlcmlvZCkgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQgYmFsYW5jZSkgewogICAgdmFyIHYgPSB2ZXN0aW5nTWFwW3Zlc3RpbmdQZXJpb2RdOwogICAgZm9yICh1aW50OCBpID0gMDsgaSA8IHYubGVuZ3RoOyBpKyspIHsKICAgICAgaWYgKHZbaV0uYWRkciA9PSB0b2tlbk93bmVyKSByZXR1cm4gdltpXS5iYWxhbmNlOwogICAgfQogICAgcmV0dXJuIDA7CiAgfQoKICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyB0b2tlbk93bmVyLCBhZGRyZXNzIHNwZW5kZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50IHJlbWFpbmluZykgewogICAgcmV0dXJuIGFsbG93ZWRbdG9rZW5Pd25lcl1bc3BlbmRlcl07CiAgfQoKICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIHRvLCB1aW50IHRva2VucykgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgcmVxdWlyZSAobm93ID49IHRyYW5zZmVycmFibGVUaW1lKTsKICAgIHJlcXVpcmUgKHRvICE9IGFkZHJlc3ModGhpcykpOwogICAgcmVxdWlyZSAoYmFsYW5jZXNbbXNnLnNlbmRlcl0gPj0gdG9rZW5zKTsKICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gYmFsYW5jZXNbbXNnLnNlbmRlcl0uc3ViKHRva2Vucyk7CiAgICBiYWxhbmNlc1t0b10gPSBiYWxhbmNlc1t0b10uYWRkKHRva2Vucyk7CiAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCB0bywgdG9rZW5zKTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIHNwZW5kZXIsIHVpbnQgdG9rZW5zKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICByZXF1aXJlIChzcGVuZGVyICE9IGFkZHJlc3ModGhpcykpOwogICAgYWxsb3dlZFttc2cuc2VuZGVyXVtzcGVuZGVyXSA9IHRva2VuczsKICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIHNwZW5kZXIsIHRva2Vucyk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIGZyb20sIGFkZHJlc3MgdG8sIHVpbnQgdG9rZW5zKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICByZXF1aXJlIChub3cgPj0gdHJhbnNmZXJyYWJsZVRpbWUpOwogICAgcmVxdWlyZSAodG8gIT0gYWRkcmVzcyh0aGlzKSk7CiAgICByZXF1aXJlIChhbGxvd2VkW2Zyb21dW21zZy5zZW5kZXJdID49IHRva2Vucyk7CiAgICBiYWxhbmNlc1tmcm9tXSA9IGJhbGFuY2VzW2Zyb21dLnN1Yih0b2tlbnMpOwogICAgYWxsb3dlZFtmcm9tXVttc2cuc2VuZGVyXSA9IGFsbG93ZWRbZnJvbV1bbXNnLnNlbmRlcl0uc3ViKHRva2Vucyk7CiAgICBiYWxhbmNlc1t0b10gPSBiYWxhbmNlc1t0b10uYWRkKHRva2Vucyk7CiAgICBUcmFuc2Zlcihmcm9tLCB0bywgdG9rZW5zKTsKICAgIHJldHVybiB0cnVlOwogIH0KCn0KCmNvbnRyYWN0IFRFRm9vZHM4MjdUb2tlbiBpcyBURUZvb2RzVG9rZW4sIEVSQzgyNyB7CgogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUsIGJ5dGVzIF9kYXRhKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgc3VwZXIuYXBwcm92ZShfc3BlbmRlciwgX3ZhbHVlKTsKICAgIHJlcXVpcmUoX3NwZW5kZXIuY2FsbChfZGF0YSkpOwogICAgcmV0dXJuIHRydWU7CiAgfQoKICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUsIGJ5dGVzIF9kYXRhKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgc3VwZXIudHJhbnNmZXIoX3RvLCBfdmFsdWUpOwogICAgcmVxdWlyZShfdG8uY2FsbChfZGF0YSkpOwogICAgcmV0dXJuIHRydWU7CiAgfQoKICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlLCBieXRlcyBfZGF0YSkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgIHN1cGVyLnRyYW5zZmVyRnJvbShfZnJvbSwgX3RvLCBfdmFsdWUpOwogICAgcmVxdWlyZShfdG8uY2FsbChfZGF0YSkpOwogICAgcmV0dXJuIHRydWU7CiAgfQoKfQoKCmNvbnRyYWN0IFRFRm9vZHNDcm93ZHNhbGUgaXMgT3duYWJsZSB7CgogIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50OwoKICBURUZvb2RzODI3VG9rZW4gcHVibGljIHRva2VuQ29udHJhY3Q7CgogIHVpbnQgcHVibGljIGNvbnN0YW50IGNyb3dkc2FsZVN0YXJ0VGltZSA9IDE1MTkyOTM2MDA7CiAgdWludCBwdWJsaWMgY29uc3RhbnQgY3Jvd2RzYWxlVW5jYXBwZWRUaW1lID0gMTUxOTMzNjgwMDsKICB1aW50IHB1YmxpYyBjb25zdGFudCBjcm93ZHNhbGVDbG9zZWRUaW1lID0gMTUyMTcxMjgwMDsKICB1aW50IHB1YmxpYyBtYXhHYXNQcmljZUluV2VpID0gNTAwMDAwMDAwMDA7CiAgdWludCBwdWJsaWMgY29uc3RhbnQgY29udHJpYnV0aW9uQ2FwSW5XZWkgPSAxMDAwMDAwMDAwMDAwMDAwMDAwOwogIGFkZHJlc3MgcHVibGljIGNvbnN0YW50IHRlRm9vZHNBZGRyZXNzID0gMHgyN0NhNjgzRWRlQUI4RDAzYzZCNWQ3ODE4Zjc4QmEyN2EyMDI1MTU5OwoKICB1aW50IHB1YmxpYyBjb25zdGFudCB0b2tlblJhdGVJblVzZENlbnRzID0gNTsKICB1aW50IHB1YmxpYyBjb25zdGFudCBldGhSYXRlSW5Vc2RDZW50cyA9IDkyNTAwOwogIHVpbnQgcHVibGljIGNvbnN0YW50IGFtb3VudFRvUmFpc2VJblVzZENlbnRzID0gMTkxMDAwMDAwMDsKICB1aW50IHB1YmxpYyBjb25zdGFudCBtaW5Db250cmlidXRpb25JblVzZENlbnRzID0gMTAwMDA7CgogIHVpbnRbNF0gcHVibGljIHRva2VuQm9udXNUaW1lcyA9IFsxNTE5ODk4NDAwLDE1MjA1MDMyMDAsMTUyMTEwODAwMCwxNTIxNzEyODAwXTsKICB1aW50WzRdIHB1YmxpYyB0b2tlbkJvbnVzUGN0ID0gWzE1LDEyLDEwLDVdOwoKICB1aW50IHB1YmxpYyB3aGl0ZWxpc3RlZEFkZHJlc3NDb3VudDsKICB1aW50IHB1YmxpYyBjb250cmlidXRvckNvdW50OwogIGJvb2wgcHVibGljIGNyb3dkc2FsZUZpbmlzaGVkOwogIHVpbnQgcHVibGljIGFtb3VudFJhaXNlZEluVXNkQ2VudHM7CgogIHVpbnQgcHVibGljIGNvbnN0YW50IHRvdGFsVG9rZW5TdXBwbHkgPSAxMDAwMDAwMDAwICogMSBldGhlcjsKICB1aW50IHB1YmxpYyB0b2tlbnNBbGxvY2F0ZWQ7CgogIHVpbnQgcHVibGljIGNvbnN0YW50IG1hcmtldGluZ1Rva2VuQWxsb2NhdGlvbiA9IDYwMDAwMDAwICogMSBldGhlcjsKICB1aW50IHB1YmxpYyBtYXJrZXRpbmdUb2tlbnNEaXN0cmlidXRlZDsKCiAgbWFwcGluZyAoYWRkcmVzcyA9PiBib29sKSBwcmVzYWxlQWxsb2NhdGVkOwogIG1hcHBpbmcgKGFkZHJlc3MgPT4gYm9vbCkgbWFya2V0aW5nQWxsb2NhdGVkOwoKICBzdHJ1Y3QgQ29udHJpYnV0b3IgewogICAgYm9vbCBhdXRob3Jpc2VkOwogICAgYm9vbCBjb250cmlidXRlZDsKICB9CiAgbWFwcGluZyAoYWRkcmVzcyA9PiBDb250cmlidXRvcikgd2hpdGVsaXN0OwoKCiAgZXZlbnQgUHJlc2FsZUFsbG9jYXRpb24oYWRkcmVzcyB0bywgdWludCB1c2RBbW91bnQsIHVpbnQgdG9rZW5BbW91bnQpOwogIGV2ZW50IE1hcmtldGluZ0FsbG9jYXRpb24oYWRkcmVzcyB0bywgdWludCB0b2tlbkFtb3VudCk7CiAgZXZlbnQgQ3Jvd2RzYWxlQ2xvc2VkKHVpbnQgdXNkUmFpc2VkSW5DZW50cyk7CiAgZXZlbnQgVG9rZW5zVHJhbnNmZXJyYWJsZSgpOwoKICBmdW5jdGlvbiBURUZvb2RzQ3Jvd2RzYWxlICgpIHB1YmxpYyB7CiAgICByZXF1aXJlICh0ZUZvb2RzQWRkcmVzcyAhPSAweDAwKTsKICAgIHRva2VuQ29udHJhY3QgPSBuZXcgVEVGb29kczgyN1Rva2VuKCk7CiAgfQoKICBmdW5jdGlvbiBhbGxvY2F0ZVByZXNhbGVUb2tlbnMgKGFkZHJlc3MgcmVjaXBpZW50LCB1aW50IGFtb3VudEluVXNkQ2VudHMsIHVpbnQgYm9udXNQY3QsIHVpbnQgdmVzdGluZ1BlcmlvZEluU2Vjb25kcykgcHVibGljIG9ubHlPd25lciAgewogICAgcmVxdWlyZSAobm93IDwgY3Jvd2RzYWxlU3RhcnRUaW1lKTsKICAgIHJlcXVpcmUgKCFwcmVzYWxlQWxsb2NhdGVkW3JlY2lwaWVudF0pOwogICAgdWludCB0b2tlbkFtb3VudCA9IGFtb3VudEluVXNkQ2VudHMubXVsKDEgZXRoZXIpLmRpdih0b2tlblJhdGVJblVzZENlbnRzKTsKICAgIHVpbnQgYm9udXNBbW91bnQgPSB0b2tlbkFtb3VudC5tdWwoYm9udXNQY3QpLmRpdigxMDApOwoKICAgIGlmICh2ZXN0aW5nUGVyaW9kSW5TZWNvbmRzID4gMCkgewogICAgICByZXF1aXJlICh0b2tlbkNvbnRyYWN0LmFsbG9jYXRlVG9rZW5zKHJlY2lwaWVudCwgdG9rZW5BbW91bnQpKTsKICAgICAgcmVxdWlyZSAodG9rZW5Db250cmFjdC5hbGxvY2F0ZVZlc3RlZFRva2VucyhyZWNpcGllbnQsIGJvbnVzQW1vdW50LCB2ZXN0aW5nUGVyaW9kSW5TZWNvbmRzKSk7CiAgICB9IGVsc2UgewogICAgICByZXF1aXJlICh0b2tlbkNvbnRyYWN0LmFsbG9jYXRlVG9rZW5zKHJlY2lwaWVudCwgdG9rZW5BbW91bnQuYWRkKGJvbnVzQW1vdW50KSkpOwogICAgfQogICAgYW1vdW50UmFpc2VkSW5Vc2RDZW50cyA9IGFtb3VudFJhaXNlZEluVXNkQ2VudHMuYWRkKGFtb3VudEluVXNkQ2VudHMpOwogICAgdG9rZW5zQWxsb2NhdGVkID0gdG9rZW5zQWxsb2NhdGVkLmFkZCh0b2tlbkFtb3VudCkuYWRkKGJvbnVzQW1vdW50KTsKICAgIHByZXNhbGVBbGxvY2F0ZWRbcmVjaXBpZW50XSA9IHRydWU7CiAgICBQcmVzYWxlQWxsb2NhdGlvbihyZWNpcGllbnQsIGFtb3VudEluVXNkQ2VudHMsIHRva2VuQW1vdW50LmFkZChib251c0Ftb3VudCkpOwogIH0KCiAgZnVuY3Rpb24gYWxsb2NhdGVNYXJrZXRpbmdUb2tlbnMgKGFkZHJlc3MgcmVjaXBpZW50LCB1aW50IHRva2VuQW1vdW50KSBwdWJsaWMgb25seU93bmVyIHsKICAgIHJlcXVpcmUgKCFtYXJrZXRpbmdBbGxvY2F0ZWRbcmVjaXBpZW50XSk7CiAgICByZXF1aXJlIChtYXJrZXRpbmdUb2tlbnNEaXN0cmlidXRlZC5hZGQodG9rZW5BbW91bnQpIDw9IG1hcmtldGluZ1Rva2VuQWxsb2NhdGlvbik7CiAgICBtYXJrZXRpbmdUb2tlbnNEaXN0cmlidXRlZCA9IG1hcmtldGluZ1Rva2Vuc0Rpc3RyaWJ1dGVkLmFkZCh0b2tlbkFtb3VudCk7CiAgICB0b2tlbnNBbGxvY2F0ZWQgPSB0b2tlbnNBbGxvY2F0ZWQuYWRkKHRva2VuQW1vdW50KTsKICAgIHJlcXVpcmUgKHRva2VuQ29udHJhY3QuYWxsb2NhdGVUb2tlbnMocmVjaXBpZW50LCB0b2tlbkFtb3VudCkpOwogICAgbWFya2V0aW5nQWxsb2NhdGVkW3JlY2lwaWVudF0gPSB0cnVlOwogICAgTWFya2V0aW5nQWxsb2NhdGlvbihyZWNpcGllbnQsIHRva2VuQW1vdW50KTsKICB9CgogIGZ1bmN0aW9uIHdoaXRlbGlzdFVzZXJzIChhZGRyZXNzW10gYWRkcmVzc0xpc3QpIHB1YmxpYyBvbmx5T3duZXIgewogICAgcmVxdWlyZSAobm93IDwgY3Jvd2RzYWxlU3RhcnRUaW1lKTsKICAgIGZvciAodWludDggaSA9IDA7IGkgPCBhZGRyZXNzTGlzdC5sZW5ndGg7IGkrKykgewogICAgICByZXF1aXJlICghd2hpdGVsaXN0W2ldLmF1dGhvcmlzZWQpOwogICAgICB3aGl0ZWxpc3RbYWRkcmVzc0xpc3RbaV1dLmF1dGhvcmlzZWQgPSB0cnVlOwogICAgfQogICAgd2hpdGVsaXN0ZWRBZGRyZXNzQ291bnQgPSB3aGl0ZWxpc3RlZEFkZHJlc3NDb3VudC5hZGQoYWRkcmVzc0xpc3QubGVuZ3RoKTsKICB9CgogIGZ1bmN0aW9uIHJldm9rZVVzZXJzIChhZGRyZXNzW10gYWRkcmVzc0xpc3QpIHB1YmxpYyBvbmx5T3duZXIgewogICAgcmVxdWlyZSAobm93IDwgY3Jvd2RzYWxlU3RhcnRUaW1lKTsKICAgIGZvciAodWludDggaSA9IDA7IGkgPCBhZGRyZXNzTGlzdC5sZW5ndGg7IGkrKykgewogICAgICByZXF1aXJlICh3aGl0ZWxpc3RbaV0uYXV0aG9yaXNlZCk7CiAgICAgIHdoaXRlbGlzdFthZGRyZXNzTGlzdFtpXV0uYXV0aG9yaXNlZCA9IGZhbHNlOwogICAgfQogICAgd2hpdGVsaXN0ZWRBZGRyZXNzQ291bnQgPSB3aGl0ZWxpc3RlZEFkZHJlc3NDb3VudC5zdWIoYWRkcmVzc0xpc3QubGVuZ3RoKTsKICB9CgogIGZ1bmN0aW9uIHNldE1heEdhc1ByaWNlICh1aW50IG5ld01heEluV2VpKSBwdWJsaWMgb25seU93bmVyIHsKICAgIHJlcXVpcmUobmV3TWF4SW5XZWkgPj0gMTAwMDAwMDAwMCk7CiAgICBtYXhHYXNQcmljZUluV2VpID0gbmV3TWF4SW5XZWk7CiAgfQoKICBmdW5jdGlvbiBjaGVja1doaXRlbGlzdGVkIChhZGRyZXNzIGFkZHIpIHB1YmxpYyB2aWV3IHJldHVybnMgKGJvb2wpIHsKICAgIHJldHVybiB3aGl0ZWxpc3RbYWRkcl0uYXV0aG9yaXNlZDsKICB9CgogIGZ1bmN0aW9uIGlzT3BlbiAoKSBwdWJsaWMgdmlldyByZXR1cm5zIChib29sKSB7CiAgICByZXR1cm4gKG5vdyA+PSBjcm93ZHNhbGVTdGFydFRpbWUgJiYgIWNyb3dkc2FsZUZpbmlzaGVkICYmIG5vdyA8IGNyb3dkc2FsZUNsb3NlZFRpbWUpOwogIH0KCgogIGZ1bmN0aW9uIGdldFJlbWFpbmluZ0V0aEF2YWlsYWJsZSAoKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50KSB7CiAgICBpZiAoY3Jvd2RzYWxlRmluaXNoZWQgfHwgbm93ID4gY3Jvd2RzYWxlQ2xvc2VkVGltZSkgcmV0dXJuIDA7CiAgICByZXR1cm4gYW1vdW50VG9SYWlzZUluVXNkQ2VudHMuc3ViKGFtb3VudFJhaXNlZEluVXNkQ2VudHMpLm11bCgxIGV0aGVyKS5kaXYoZXRoUmF0ZUluVXNkQ2VudHMpOwogIH0KCiAgZnVuY3Rpb24gX2FwcGx5Qm9udXMgKHVpbnQgYW1vdW50KSBpbnRlcm5hbCB2aWV3IHJldHVybnMgKHVpbnQpIHsKICAgIGZvciAodWludDggaSA9IDA7IGkgPCAzOyBpKyspIHsKICAgICAgaWYgKHRva2VuQm9udXNUaW1lc1tpXSA+IG5vdykgewogICAgICAgIHJldHVybiBhbW91bnQuYWRkKGFtb3VudC5tdWwodG9rZW5Cb251c1BjdFtpXSkuZGl2KDEwMCkpOwogICAgICB9CiAgICB9CiAgICByZXR1cm4gYW1vdW50LmFkZChhbW91bnQubXVsKHRva2VuQm9udXNQY3RbM10pLmRpdigxMDApKTsKICB9CgogIGZ1bmN0aW9uIF9hbGxvY2F0ZVRva2VucyhhZGRyZXNzIGFkZHIsIHVpbnQgYW1vdW50KSBpbnRlcm5hbCB7CiAgICByZXF1aXJlICh0b2tlbnNBbGxvY2F0ZWQuYWRkKGFtb3VudCkgPD0gdG90YWxUb2tlblN1cHBseSk7CiAgICB0b2tlbnNBbGxvY2F0ZWQgPSB0b2tlbnNBbGxvY2F0ZWQuYWRkKGFtb3VudCk7CiAgICB0ZUZvb2RzQWRkcmVzcy50cmFuc2Zlcih0aGlzLmJhbGFuY2UpOwogICAgaWYgKCF3aGl0ZWxpc3RbYWRkcl0uY29udHJpYnV0ZWQpIHsKICAgICAgd2hpdGVsaXN0W2FkZHJdLmNvbnRyaWJ1dGVkID0gdHJ1ZTsKICAgICAgY29udHJpYnV0b3JDb3VudCA9IGNvbnRyaWJ1dG9yQ291bnQuYWRkKDEpOwogICAgfQogICAgcmVxdWlyZSh0b2tlbkNvbnRyYWN0LmFsbG9jYXRlVG9rZW5zKGFkZHIsIGFtb3VudCkpOwogIH0KCiAgZnVuY3Rpb24gKCkgcHVibGljIHBheWFibGUgewogICAgcmVxdWlyZSAodHguZ2FzcHJpY2UgPD0gbWF4R2FzUHJpY2VJbldlaSk7CiAgICByZXF1aXJlIChtc2cudmFsdWUgPiAwKTsKICAgIHJlcXVpcmUgKG5vdyA+PSBjcm93ZHNhbGVTdGFydFRpbWUgJiYgbm93IDw9IGNyb3dkc2FsZUNsb3NlZFRpbWUpOwogICAgcmVxdWlyZSAod2hpdGVsaXN0W21zZy5zZW5kZXJdLmF1dGhvcmlzZWQpOwogICAgcmVxdWlyZSAoIWNyb3dkc2FsZUZpbmlzaGVkKTsKICAgIGlmIChub3cgPCBjcm93ZHNhbGVVbmNhcHBlZFRpbWUpIHsKICAgICAgcmVxdWlyZSAoIXdoaXRlbGlzdFttc2cuc2VuZGVyXS5jb250cmlidXRlZCk7CiAgICAgIHJlcXVpcmUgKG1zZy52YWx1ZSA8PSBjb250cmlidXRpb25DYXBJbldlaSk7CiAgICB9CiAgICB1aW50IHVzZEFtb3VudCA9IG1zZy52YWx1ZS5tdWwoZXRoUmF0ZUluVXNkQ2VudHMpLmRpdigxIGV0aGVyKTsKICAgIHJlcXVpcmUgKHVzZEFtb3VudCA+PSBtaW5Db250cmlidXRpb25JblVzZENlbnRzKTsKICAgIHVpbnQgdG9rZW5BbW91bnQgPSBfYXBwbHlCb251cyhtc2cudmFsdWUubXVsKGV0aFJhdGVJblVzZENlbnRzKS5kaXYodG9rZW5SYXRlSW5Vc2RDZW50cykpOwogICAgYW1vdW50UmFpc2VkSW5Vc2RDZW50cyA9IGFtb3VudFJhaXNlZEluVXNkQ2VudHMuYWRkKHVzZEFtb3VudCk7CiAgICBpZiAoYW1vdW50UmFpc2VkSW5Vc2RDZW50cyA+PSBhbW91bnRUb1JhaXNlSW5Vc2RDZW50cykgewogICAgICBjbG9zZUNyb3dkc2FsZSgpOwogICAgfSBlbHNlIHsKICAgICAgX2FsbG9jYXRlVG9rZW5zKG1zZy5zZW5kZXIsIHRva2VuQW1vdW50KTsKICAgIH0KICB9CgogIGZ1bmN0aW9uIGNsb3NlQ3Jvd2RzYWxlICgpIHB1YmxpYyB7CiAgICByZXF1aXJlICghY3Jvd2RzYWxlRmluaXNoZWQpOwogICAgcmVxdWlyZSAobm93ID49IGNyb3dkc2FsZVN0YXJ0VGltZSk7CiAgICByZXF1aXJlIChtc2cuc2VuZGVyID09IG93bmVyIHx8IGFtb3VudFJhaXNlZEluVXNkQ2VudHMgPj0gYW1vdW50VG9SYWlzZUluVXNkQ2VudHMpOwogICAgY3Jvd2RzYWxlRmluaXNoZWQgPSB0cnVlOwoKICAgIGlmIChtc2cudmFsdWUgPiAwICYmIGFtb3VudFJhaXNlZEluVXNkQ2VudHMgPj0gYW1vdW50VG9SYWlzZUluVXNkQ2VudHMpIHsKCiAgICAgIHVpbnQgZXhjZXNzRXRoID0gYW1vdW50UmFpc2VkSW5Vc2RDZW50cy5zdWIoYW1vdW50VG9SYWlzZUluVXNkQ2VudHMpLm11bCgxIGV0aGVyKS5kaXYoZXRoUmF0ZUluVXNkQ2VudHMpOwogICAgICB1aW50IHRva2VuQW1vdW50ID0gX2FwcGx5Qm9udXMobXNnLnZhbHVlLnN1YihleGNlc3NFdGgpLm11bChldGhSYXRlSW5Vc2RDZW50cykuZGl2KHRva2VuUmF0ZUluVXNkQ2VudHMpKTsKICAgICAgYW1vdW50UmFpc2VkSW5Vc2RDZW50cyA9IGFtb3VudFRvUmFpc2VJblVzZENlbnRzOwogICAgICBtc2cuc2VuZGVyLnRyYW5zZmVyKGV4Y2Vzc0V0aCk7CiAgICAgIF9hbGxvY2F0ZVRva2Vucyhtc2cuc2VuZGVyLCB0b2tlbkFtb3VudCk7CiAgICB9IGVsc2UgaWYgKCBhbW91bnRSYWlzZWRJblVzZENlbnRzIDwgYW1vdW50VG9SYWlzZUluVXNkQ2VudHMpIHsKICAgICAgdG9rZW5BbW91bnQgPSBhbW91bnRUb1JhaXNlSW5Vc2RDZW50cy5zdWIoYW1vdW50UmFpc2VkSW5Vc2RDZW50cykubXVsKDEgZXRoZXIpLmRpdih0b2tlblJhdGVJblVzZENlbnRzKTsKICAgICAgdG9rZW5zQWxsb2NhdGVkID0gdG9rZW5zQWxsb2NhdGVkLmFkZCh0b2tlbkFtb3VudCk7IC8vIGJ1cm4KICAgIH0KICAgIENyb3dkc2FsZUNsb3NlZChhbW91bnRSYWlzZWRJblVzZENlbnRzKTsKICB9CgogIGZ1bmN0aW9uIGVuYWJsZVRva2VuVHJhbnNmZXJzICgpIHB1YmxpYyBvbmx5T3duZXIgewogICAgcmVxdWlyZSAoY3Jvd2RzYWxlRmluaXNoZWQpOwogICAgcmVxdWlyZSAobWFya2V0aW5nVG9rZW5zRGlzdHJpYnV0ZWQgPT0gbWFya2V0aW5nVG9rZW5BbGxvY2F0aW9uKTsKICAgIHVpbnQgcmVtYWluaW5nVG9rZW5zID0gdG90YWxUb2tlblN1cHBseS5zdWIodG9rZW5zQWxsb2NhdGVkKTsKICAgIHVpbnQgb25lWWVhciA9IHJlbWFpbmluZ1Rva2Vucy5tdWwoMjUpLmRpdigxMDApOwogICAgdWludCB0d29ZZWFycyA9IHJlbWFpbmluZ1Rva2Vucy5zdWIob25lWWVhcik7CiAgICB0b2tlbnNBbGxvY2F0ZWQgPSB0b2tlbnNBbGxvY2F0ZWQuYWRkKHJlbWFpbmluZ1Rva2Vucyk7CiAgICByZXF1aXJlICh0b2tlbkNvbnRyYWN0LmFsbG9jYXRlVmVzdGVkVG9rZW5zKHRlRm9vZHNBZGRyZXNzLCBvbmVZZWFyLCAzMTUzNjAwMCkpOwogICAgcmVxdWlyZSAodG9rZW5Db250cmFjdC5hbGxvY2F0ZVZlc3RlZFRva2Vucyh0ZUZvb2RzQWRkcmVzcywgdHdvWWVhcnMsIDYzMDcyMDAwKSk7CiAgICByZXF1aXJlICh0b2tlbkNvbnRyYWN0LmVuYWJsZVRyYW5zZmVycygpKTsKICAgIFRva2Vuc1RyYW5zZmVycmFibGUoKTsKICB9Cgp9'.
	

]
