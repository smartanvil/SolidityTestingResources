Class {
	#name : #SRT37F39fC0371C1243ddc05C587964B35Ab1206da5,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT37F39fC0371C1243ddc05C587964B35Ab1206da5 >> base64 [
	^ ''.
	

]
