Class {
	#name : #SRT3793ea257ad168ef1b4d0ed56464f9b0ab388c12,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT3793ea257ad168ef1b4d0ed56464f9b0ab388c12 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMjE7CgovKioKICogQHRpdGxlIENyeXB0b0Vtb2ppcwogKiBAYXV0aG9yIENyeXB0b0Vtb2ppcwogKi8KY29udHJhY3QgQ3J5cHRvRW1vamlzIHsKICAgIC8vIFVzaW5nIFNhZmVNYXRoCiAgICB1c2luZyBTYWZlTWF0aCBmb3IgdWludDI1NjsgICAgCgogICAgLy8gVGhlIGRldmVsb3BlcidzIGFkZHJlc3MKICAgIGFkZHJlc3MgZGV2OwoKICAgIC8vIENvbnRyYWN0IGluZm9ybWF0aW9uCiAgICBzdHJpbmcgY29uc3RhbnQgcHJpdmF0ZSB0b2tlbk5hbWUgPSAiQ3J5cHRvRW1vamlzIjsKICAgIHN0cmluZyBjb25zdGFudCBwcml2YXRlIHRva2VuU3ltYm9sID0gIkVNTyI7CgogICAgLy8gT3VyIGJlbG92ZWQgZW1vamlzCiAgICBzdHJ1Y3QgRW1vamkgewogICAgICAgIHN0cmluZyBjb2RlcG9pbnRzOwogICAgICAgIHN0cmluZyBuYW1lOwogICAgICAgIHVpbnQyNTYgcHJpY2U7CiAgICAgICAgYWRkcmVzcyBvd25lcjsKICAgICAgICBib29sIGV4aXN0czsKICAgIH0KCiAgICBFbW9qaVtdIGVtb2ppczsKICAgIAogICAgLy8gRm9yIHN0b3JpbmcgdGhlIHVzZXJuYW1lIGFuZCBiYWxhbmNlIG9mIGV2ZXJ5IHVzZXIKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSBwcml2YXRlIGJhbGFuY2VzOwogICAgbWFwcGluZyhhZGRyZXNzID0+IGJ5dGVzMTYpIHByaXZhdGUgdXNlcm5hbWVzOwoKICAgIC8vIE5lZWRlZCBldmVudHMgZm9yIHJlcHJlc2VudGVudGluZyBvZiBldmVyeSBwb3NzaWJsZSBhY3Rpb24KICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBpbmRleGVkIF9pZCwgdWludDI1NiBfcHJpY2UpOwogICAgZXZlbnQgUHJpY2VDaGFuZ2UodWludDI1NiBpbmRleGVkIF9pZCwgdWludDI1NiBfcHJpY2UpOwogICAgZXZlbnQgVXNlcm5hbWVDaGFuZ2UoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYnl0ZXMxNiBfdXNlcm5hbWUpOwoKCiAgICBmdW5jdGlvbiBDcnlwdG9FbW9qaXMoKSBwdWJsaWMgewogICAgICAgIGRldiA9IG1zZy5zZW5kZXI7CiAgICB9CiAgICAKICAgIAogICAgbW9kaWZpZXIgb25seURldigpIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gZGV2KTsKICAgICAgICBfOwogICAgfQoKICAgZnVuY3Rpb24gbmFtZSgpIHB1YmxpYyBwdXJlIHJldHVybnMoc3RyaW5nKSB7CiAgICAgICByZXR1cm4gdG9rZW5OYW1lOwogICB9CgogICBmdW5jdGlvbiBzeW1ib2woKSBwdWJsaWMgcHVyZSByZXR1cm5zKHN0cmluZykgewogICAgICAgcmV0dXJuIHRva2VuU3ltYm9sOwogICB9CgogICAgLyoqIEBkZXYgR2V0IHRoZSB0b3RhbCBzdXBwbHkgKi8KICAgIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgcHVibGljIHZpZXcgcmV0dXJucyh1aW50MjU2KSB7CiAgICAgICAgcmV0dXJuIGVtb2ppcy5sZW5ndGg7CiAgICB9CgogICAgLyoqIEBkZXYgR2V0IHRoZSBiYWxhbmNlIG9mIGEgdXNlciAqLwogICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyB2aWV3IHJldHVybnModWludDI1NiBiYWxhbmNlKSB7CiAgICAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsKICAgfQoKICAgIC8qKiBAZGV2IEdldCB0aGUgdXNlcm5hbWUgb2YgYSB1c2VyICovCiAgICBmdW5jdGlvbiB1c2VybmFtZU9mKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgdmlldyByZXR1cm5zIChieXRlczE2KSB7CiAgICAgICByZXR1cm4gdXNlcm5hbWVzW19vd25lcl07CiAgICB9CiAgICAKICAgIC8qKiBAZGV2IFNldCB0aGUgdXNlcm5hbWUgb2Ygc2VuZGVyIHVzZXIgICovCiAgICBmdW5jdGlvbiBzZXRVc2VybmFtZShieXRlczE2IF91c2VybmFtZSkgcHVibGljIHsKICAgICAgICB1c2VybmFtZXNbbXNnLnNlbmRlcl0gPSBfdXNlcm5hbWU7CiAgICAgICAgZW1pdCBVc2VybmFtZUNoYW5nZShtc2cuc2VuZGVyLCBfdXNlcm5hbWUpOwogICAgfQoKICAgIC8qKiBAZGV2IEdldCB0aGUgb3duZXIgb2YgYW4gZW1vamkgKi8KICAgIGZ1bmN0aW9uIG93bmVyT2YodWludDI1NiBfaWQpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zIChhZGRyZXNzKSB7CiAgICAgICByZXR1cm4gZW1vamlzW19pZF0ub3duZXI7CiAgICB9CiAgICAKICAgIC8qKiBAZGV2IEdldCB0aGUgY29kZXBvaW50cyBvZiBhbiBlbW9qaSAqLwogICAgZnVuY3Rpb24gY29kZXBvaW50c09mKHVpbnQyNTYgX2lkKSBwdWJsaWMgdmlldyByZXR1cm5zIChzdHJpbmcpIHsKICAgICAgIHJldHVybiBlbW9qaXNbX2lkXS5jb2RlcG9pbnRzOwogICAgfQoKICAgIC8qKiBAZGV2IEdldCB0aGUgbmFtZSBvZiBhbiBlbW9qaSAqLwogICAgZnVuY3Rpb24gbmFtZU9mKHVpbnQyNTYgX2lkKSBwdWJsaWMgdmlldyByZXR1cm5zIChzdHJpbmcpIHsKICAgICAgIHJldHVybiBlbW9qaXNbX2lkXS5uYW1lOwogICAgfQoKICAgIC8qKiBAZGV2IEdldCB0aGUgcHJpY2Ugb2YgYW4gZW1vamkgKi8KICAgIGZ1bmN0aW9uIHByaWNlT2YodWludDI1NiBfaWQpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYgcHJpY2UpIHsKICAgICAgIHJldHVybiBlbW9qaXNbX2lkXS5wcmljZTsKICAgIH0KCiAgICAvKiogQGRldiBDZWF0ZSBhIG5ldyBlbW9qaSBmb3IgdGhlIGZpcnN0IHRpbWUgKi8KICAgIGZ1bmN0aW9uIGNyZWF0ZShzdHJpbmcgX2NvZGVwb2ludHMsIHN0cmluZyBfbmFtZSwgdWludDI1NiBfcHJpY2UpIHB1YmxpYyBvbmx5RGV2KCkgewogICAgICAgIEVtb2ppIG1lbW9yeSBfZW1vamkgPSBFbW9qaSh7CiAgICAgICAgICAgIGNvZGVwb2ludHM6IF9jb2RlcG9pbnRzLAogICAgICAgICAgICBuYW1lOiBfbmFtZSwKICAgICAgICAgICAgcHJpY2U6IF9wcmljZSwKICAgICAgICAgICAgb3duZXI6IGRldiwKICAgICAgICAgICAgZXhpc3RzOiB0cnVlCiAgICAgICAgfSk7CiAgICAgICAgZW1vamlzLnB1c2goX2Vtb2ppKTsKICAgICAgICBiYWxhbmNlc1tkZXZdKys7CiAgICB9CgogICAgLyoqIEBkZXYgRWRpdCBlbW9qaSBpbmZvcm1hdGlvbiB0byBtYWludGFpbiBjb25maXJtaW5nIGZvciBVbmljb2RlIHN0YW5kYXJkLCB3ZSBjYW4ndCBjaGFuZ2UgdGhlIHByaWNlIG9yIHRoZSBvd25lciAqLwogICAgZnVuY3Rpb24gZWRpdCh1aW50MjU2IF9pZCwgc3RyaW5nIF9jb2RlcG9pbnRzLCBzdHJpbmcgX25hbWUpIHB1YmxpYyBvbmx5RGV2KCkgewogICAgICAgIHJlcXVpcmUoZW1vamlzW19pZF0uZXhpc3RzKTsKICAgICAgICBlbW9qaXNbX2lkXS5jb2RlcG9pbnRzID0gX2NvZGVwb2ludHM7CiAgICAgICAgZW1vamlzW19pZF0ubmFtZSA9IF9uYW1lOwogICAgfQoKICAgIC8qKiBAZGV2IEJ1eSBhbiBlbW9qaSAqLwogICAgZnVuY3Rpb24gYnV5KHVpbnQyNTYgX2lkKSBwYXlhYmxlIHB1YmxpYyB7CiAgICAgICAgcmVxdWlyZShlbW9qaXNbX2lkXS5leGlzdHMgJiYgZW1vamlzW19pZF0ub3duZXIgIT0gbXNnLnNlbmRlciAmJiBtc2cudmFsdWUgPj0gZW1vamlzW19pZF0ucHJpY2UpOwogICAgICAgIGFkZHJlc3Mgb2xkT3duZXIgPSBlbW9qaXNbX2lkXS5vd25lcjsKICAgICAgICB1aW50MjU2IG9sZFByaWNlID0gZW1vamlzW19pZF0ucHJpY2U7CiAgICAgICAgZW1vamlzW19pZF0ub3duZXIgPSBtc2cuc2VuZGVyOwogICAgICAgIGVtb2ppc1tfaWRdLnByaWNlID0gb2xkUHJpY2UuZGl2KDEwMCkubXVsKDExNSk7CiAgICAgICAgYmFsYW5jZXNbb2xkT3duZXJdLS07CiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0rKzsKICAgICAgICBvbGRPd25lci50cmFuc2ZlcihvbGRQcmljZS5kaXYoMTAwKS5tdWwoOTYpKTsKICAgICAgICBpZiAobXNnLnZhbHVlID4gb2xkUHJpY2UpIG1zZy5zZW5kZXIudHJhbnNmZXIobXNnLnZhbHVlLnN1YihvbGRQcmljZSkpOwogICAgICAgIGVtaXQgVHJhbnNmZXIob2xkT3duZXIsIG1zZy5zZW5kZXIsIF9pZCwgb2xkUHJpY2UpOwogICAgICAgIGVtaXQgUHJpY2VDaGFuZ2UoX2lkLCBlbW9qaXNbX2lkXS5wcmljZSk7CiAgICB9CgogICAgLyoqIEBkZXYgQ2hhbmdpbmcgdGhlIHByaWNlIGJ5IHRoZSBvd25lciBvZiB0aGUgZW1vamkgKi8KICAgIGZ1bmN0aW9uIHNldFByaWNlKHVpbnQyNTYgX2lkLCB1aW50MjU2IF9wcmljZSkgcHVibGljIHsKICAgICAgICByZXF1aXJlKGVtb2ppc1tfaWRdLmV4aXN0cyAmJiBlbW9qaXNbX2lkXS5vd25lciA9PSBtc2cuc2VuZGVyKTsKICAgICAgICBlbW9qaXNbX2lkXS5wcmljZSA9X3ByaWNlOwogICAgICAgIGVtaXQgUHJpY2VDaGFuZ2UoX2lkLCBfcHJpY2UpOwogICAgfQoKICAgIC8qKiBAZGV2IFdpdGhkcmF3IGFsbCBiYWxhbmNlLiBUaGlzIGRvZXNuJ3QgdHJhbnNmZXIgdXNlcnMnIG1vbmV5IHNpbmNlIHRoZSBjb250cmFjdCBwYXkgdGhlbSBpbnN0YW50bHkgYW5kIGRvZXNuJ3QgaG9sZCBhbnlvbmUncyBtb25leSAqLwogICAgZnVuY3Rpb24gd2l0aGRyYXcoKSBwdWJsaWMgb25seURldigpIHsKICAgICAgICBkZXYudHJhbnNmZXIoYWRkcmVzcyh0aGlzKS5iYWxhbmNlKTsKICAgIH0KfQoKLyoqCiAqIEB0aXRsZSBTYWZlTWF0aAogKiBAZGV2IE1hdGggb3BlcmF0aW9ucyB3aXRoIHNhZmV0eSBjaGVja3MgdGhhdCB0aHJvdyBvbiBlcnJvcgogKi8KbGlicmFyeSBTYWZlTWF0aCB7CiAgLyoqCiAgKiBAZGV2IE11bHRpcGxpZXMgdHdvIG51bWJlcnMsIHRocm93cyBvbiBvdmVyZmxvdy4KICAqLwogIGZ1bmN0aW9uIG11bCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICBpZiAoYSA9PSAwKSB7CiAgICAgIHJldHVybiAwOwogICAgfQogICAgdWludDI1NiBjID0gYSAqIGI7CiAgICBhc3NlcnQoYyAvIGEgPT0gYik7CiAgICByZXR1cm4gYzsKICB9CgogIC8qKgogICogQGRldiBJbnRlZ2VyIGRpdmlzaW9uIG9mIHR3byBudW1iZXJzLCB0cnVuY2F0aW5nIHRoZSBxdW90aWVudC4KICAqLwogIGZ1bmN0aW9uIGRpdih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAKICAgIHVpbnQyNTYgYyA9IGEgLyBiOwogICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICAgIHJldHVybiBjOwogIH0KCiAgLyoqCiAgKiBAZGV2IFN1YnN0cmFjdHMgdHdvIG51bWJlcnMsIHRocm93cyBvbiBvdmVyZmxvdyAoaS5lLiBpZiBzdWJ0cmFoZW5kIGlzIGdyZWF0ZXIgdGhhbiBtaW51ZW5kKS4KICAqLwogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9Cn0='.
	

]
