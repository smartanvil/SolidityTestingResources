Class {
	#name : #SRT8a13334edc6af201558325f815ce8801465ba279,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT8a13334edc6af201558325f815ce8801465ba279 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTA7Cgpjb250cmFjdCBUb2tlbiB7CiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKTsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHJlbWFpbmluZyk7CiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsKICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpOwp9CgovKiAgRVJDIDIwIHRva2VuICovCmNvbnRyYWN0IFN0YW5kYXJkVG9rZW4gaXMgVG9rZW4gewoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgIGlmIChiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfdmFsdWUgJiYgX3ZhbHVlID4gMCkgewogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdIC09IF92YWx1ZTsKICAgICAgICBiYWxhbmNlc1tfdG9dICs9IF92YWx1ZTsKICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgIGlmIChiYWxhbmNlc1tfZnJvbV0gPj0gX3ZhbHVlICYmIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID49IF92YWx1ZSAmJiBfdmFsdWUgPiAwKSB7CiAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfdmFsdWU7CiAgICAgICAgYmFsYW5jZXNbX2Zyb21dIC09IF92YWx1ZTsKICAgICAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgewogICAgICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogICAgfQoKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpIHsKICAgICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07CiAgICB9CgogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsKfQoKCmNvbnRyYWN0IEJhc2VUb2tlbiBpcyBTdGFuZGFyZFRva2VuIHsKICAgIHVpbnQyNTYgdmFsMSA9IDEgd2VpOyAgICAvLyAxCiAgICB1aW50MjU2IHZhbDIgPSAxIHN6YWJvOyAgLy8gMSAqIDEwICoqIDEyCiAgICB1aW50MjU2IHZhbDMgPSAxIGZpbm5leTsgLy8gMSAqIDEwICoqIDE1CiAgICB1aW50MjU2IHZhbDQgPSAxIGV0aGVyOyAgLy8gMSAqIDEwICoqIDE4CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBsb2NrQWNjb3VudDsvLyBsb2NrIGFjY291bnQgYW5kIGxvY2sgZW5kIGRhdGUKICAgIGV2ZW50IExvY2tGdW5kcyhhZGRyZXNzIHRhcmdldCwgdWludDI1NiBsb2NrZW5kZGF0ZSk7CgogICAgYWRkcmVzcyBwdWJsaWMgY3JlYXRvcjsKICAgIGFkZHJlc3MgcHVibGljIGNyZWF0b3JfbmV3OwoKICAgZnVuY3Rpb24gZ2V0RXRoKHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpewogICAgICAgIGlmIChtc2cuc2VuZGVyICE9IGNyZWF0b3IpIHRocm93OwogICAgICAgIHJldHVybiAoIWNyZWF0b3Iuc2VuZChfdmFsdWUgKiB2YWwzKSk7CiAgICB9CgogICAgICAvKiBUaGUgZnVuY3Rpb24gb2YgdGhlIGZyb3plbiBhY2NvdW50ICovCiAgICAgZnVuY3Rpb24gc2V0TG9ja0FjY291bnQoYWRkcmVzcyB0YXJnZXQsIHVpbnQyNTYgbG9ja2VuZGRhdGUpICB7CiAgICAgICAgaWYgKG1zZy5zZW5kZXIgIT0gY3JlYXRvcikgdGhyb3c7CiAgICAgICAgbG9ja0FjY291bnRbdGFyZ2V0XSA9IGxvY2tlbmRkYXRlOwogICAgICAgIExvY2tGdW5kcyh0YXJnZXQsIGxvY2tlbmRkYXRlKTsKICAgICB9CgogICAgLyogVGhlIGVuZCB0aW1lIG9mIHRoZSBsb2NrIGFjY291bnQgaXMgb2J0YWluZWQgKi8KICAgIGZ1bmN0aW9uIGxvY2tBY2NvdW50T2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgZW5kZGF0YSkgewogICAgICAgIHJldHVybiBsb2NrQWNjb3VudFtfb3duZXJdOwogICAgfQoKCiAgICAvKiBUaGUgYXV0aG9yaXR5IG9mIHRoZSBtYW5hZ2VyIGNhbiBiZSB0cmFuc2ZlcnJlZCAqLwogICAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXBTZW5kKGFkZHJlc3MgbmV3T3duZXIpIHsKICAgICAgICAgaWYgKG1zZy5zZW5kZXIgIT0gY3JlYXRvcikgdGhyb3c7CiAgICAgICAgICAgICBjcmVhdG9yX25ldyA9IG5ld093bmVyOwogICAgfQogICAgCiAgICAvKiBSZWNlaXZlIGFkbWluaXN0cmF0b3IgcHJpdmlsZWdlcyAqLwogICAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXBSZWNlaXZlKCkgewogICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBjcmVhdG9yX25ldykgdGhyb3c7CiAgICAgICAgICAgICBjcmVhdG9yID0gY3JlYXRvcl9uZXc7CiAgICB9CgogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgaWYobm93PGxvY2tBY2NvdW50W21zZy5zZW5kZXJdICl7CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgIGlmIChiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfdmFsdWUgJiYgX3ZhbHVlID4gMCkgewogICAgICAgIGlmKG5vdzxsb2NrQWNjb3VudFttc2cuc2VuZGVyXSApewogICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfdmFsdWU7CiAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQogICAgfQp9CgoKY29udHJhY3QgVEJUVG9rZW4gaXMgQmFzZVRva2VuIHsKICAgIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgbmFtZSA9ICJUb3AgQmxvY2tjaGFpbiBlY29sb2dpY2FsIGUtY29tbWVyY2UgVHJhZGluZyBDb2luIjsKICAgIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgc3ltYm9sID0gIlRCVCI7CiAgICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCBkZWNpbWFscyA9IDE4OwogICAgc3RyaW5nIHB1YmxpYyB2ZXJzaW9uID0gIjEuMCI7CgogICAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgRk9VTkRJTkdfVEVBTSA9IDEwMDAwMDAwMCAqIDEwKipkZWNpbWFsczsgICAgICAgICAgICAgICAgICAgICAgLy9GT1VORElORyBURUFNCiAgICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCBSRVNFQVJDSF9ERVZFTE9QTUVOVCA9IDEwMDAwMDAwMCAqIDEwKipkZWNpbWFsczsgICAgICAgICAgICAgICAvL1JFU0VBUkNIIEFORCBERVZFTE9QTUVOVAogICAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgVEJUX01JTkVSID0gNzAwMDAwMDAwICogMTAqKmRlY2ltYWxzOyAgICAgICAgICAgICAgICAgICAgICAgICAgLy9UQlQgTUlORVIKICAgIHVpbnQyNTYgcHVibGljIGNvbnN0YW50IElOVkVTVE1FTlRfVVNFUjEgPSA1MDAwMDAwMCAqIDEwKipkZWNpbWFsczsgICAgICAgICAgICAgICAgICAgIC8vSU5WRVNUTUVOVCBJTiBUSEUgVVNFUgogICAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgSU5WRVNUTUVOVF9VU0VSMiA9IDUwMDAwMDAwICogMTAqKmRlY2ltYWxzOyAgICAgICAgICAgICAgICAgICAgLy9JTlZFU1RNRU5UIElOIFRIRSBVU0VSCglhZGRyZXNzIGFjY291bnRfZm91bmRpbmdfdGVhbSA9IDB4NkE4NDg4YkIwRDg1ZUY1MzMwMTJhMTI1YThkNDcyYzFGYWY0NGMwZTsgICAgICAgICAgICAvL0ZPVU5ESU5HIFRFQU0KCWFkZHJlc3MgYWNjb3VudF9yZXNlYXJjaF9kZXZlbG9wbWVudCA9IDB4ODkzNmYyZDlhODBlNDZkMDA0YmM3ZmY4NzY5YjlhYTMxNDA5Zjk4ZTsgICAgIC8vUkVTRUFSQ0ggQU5EIERFVkVMT1BNRU5UCglhZGRyZXNzIGFjY291bnRfdGJ0X21pbmVyID0gMHhiOTUyMWE5NDIzMWZjYjE3NGFkY2Y1NmE0ZGYxODI0OWU2NjI1MWVjOyAgICAgICAgICAgICAgICAvL1RCVCBNSU5FUgoJYWRkcmVzcyBhY2NvdW50X2ludmVzdG1lbnRfdXNlcjEgPSAweGE0NDE1N2ZkMmNkZGQ5ZjhjODkxNWYzZjBiODFjYmYyMmZkM2IwOWY7ICAgICAgICAgIC8vSU5WRVNUTUVOVCBJTiBUSEUgVVNFUgoJYWRkcmVzcyBhY2NvdW50X2ludmVzdG1lbnRfdXNlcjIgPSAweGMxNDRBNUQ4MTlEMDVDYTNkYjYyNDJFNzc2NTE1MmJhNUM4NENkZEM7ICAgICAgICAgIC8vSU5WRVNUTUVOVCBJTiBUSEUgVVNFUgoJdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk9MTAwMDAwMDAwMCAqIDEwKipkZWNpbWFsczsKCiAgICAvLyBjb25zdHJ1Y3RvcgogICAgZnVuY3Rpb24gVEJUVG9rZW4oKSB7CiAgICAgICAgY3JlYXRvciA9IG1zZy5zZW5kZXI7CiAgICAgICAgYmFsYW5jZXNbYWNjb3VudF9mb3VuZGluZ190ZWFtXSA9IEZPVU5ESU5HX1RFQU07CiAgICAgICAgYmFsYW5jZXNbYWNjb3VudF9yZXNlYXJjaF9kZXZlbG9wbWVudF0gPSBSRVNFQVJDSF9ERVZFTE9QTUVOVDsKICAgICAgICBiYWxhbmNlc1thY2NvdW50X3RidF9taW5lcl0gPSBUQlRfTUlORVI7CiAgICAgICAgYmFsYW5jZXNbYWNjb3VudF9pbnZlc3RtZW50X3VzZXIxXSA9IElOVkVTVE1FTlRfVVNFUjE7CiAgICAgICAgYmFsYW5jZXNbYWNjb3VudF9pbnZlc3RtZW50X3VzZXIyXSA9IElOVkVTVE1FTlRfVVNFUjI7CiAgICB9Cn0='.
	

]
