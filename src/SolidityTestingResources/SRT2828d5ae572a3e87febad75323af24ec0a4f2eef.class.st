Class {
	#name : #SRT2828d5ae572a3e87febad75323af24ec0a4f2eef,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT2828d5ae572a3e87febad75323af24ec0a4f2eef >> base64 [
	^ ''.
	

]
