Class {
	#name : #SRT60c3dec97ceec639a83a5729835b577684287369,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT60c3dec97ceec639a83a5729835b577684287369 >> base64 [
	^ ''.
	

]
