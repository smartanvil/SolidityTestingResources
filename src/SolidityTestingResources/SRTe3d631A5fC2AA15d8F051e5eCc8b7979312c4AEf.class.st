Class {
	#name : #SRTe3d631A5fC2AA15d8F051e5eCc8b7979312c4AEf,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTe3d631A5fC2AA15d8F051e5eCc8b7979312c4AEf >> base64 [
	^ ''.
	

]
