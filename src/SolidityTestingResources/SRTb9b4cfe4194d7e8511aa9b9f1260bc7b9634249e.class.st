Class {
	#name : #SRTb9b4cfe4194d7e8511aa9b9f1260bc7b9634249e,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTb9b4cfe4194d7e8511aa9b9f1260bc7b9634249e >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTA7Cgpjb250cmFjdCBJRVJDMjBUb2tlbiB7CiAgICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICggdWludDI1NiBzdXBwbHkgKSB7IHN1cHBseTsgfQogICAgZnVuY3Rpb24gYmFsYW5jZU9mKCBhZGRyZXNzIF9vd25lciApIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICggdWludDI1NiBiYWxhbmNlICkgeyBfb3duZXI7IGJhbGFuY2U7IH0KICAgIGZ1bmN0aW9uIGFsbG93YW5jZSggYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIgKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAoIHVpbnQyNTYgcmVtYWluaW5nICkgeyBfb3duZXI7IF9zcGVuZGVyOyByZW1haW5pbmc7IH0KCiAgZnVuY3Rpb24gdHJhbnNmZXIoIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSApIHB1YmxpYyByZXR1cm5zICggYm9vbCBzdWNjZXNzICk7CiAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKCBhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUgKSBwdWJsaWMgcmV0dXJucyAoIGJvb2wgc3VjY2VzcyApOwogIGZ1bmN0aW9uIGFwcHJvdmUoIGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlICkgcHVibGljIHJldHVybnMgKCBib29sIHN1Y2Nlc3MgKTsKfQoKY29udHJhY3QgUmVnYVV0aWxzIHsKICBtb2RpZmllciB2YWxpZEFkZHJlc3MoIGFkZHJlc3MgX2FkZHJlc3MgKSB7CiAgICByZXF1aXJlKCBfYWRkcmVzcyAhPSAweDAgKTsKICAgIF87CiAgfQoKICAvLyBPdmVyZmxvdyBjaGVja2VkIG1hdGgKICBmdW5jdGlvbiBzYWZlQWRkKCB1aW50MjU2IHgsIHVpbnQyNTYgeSApIGludGVybmFsIHJldHVybnMoIHVpbnQyNTYgKSB7CiAgICB1aW50MjU2IHogPSB4ICsgeTsKICAgIGFzc2VydCggeiA+PSB4ICk7CiAgICByZXR1cm4gejsKICB9CgogIGZ1bmN0aW9uIHNhZmVTdWIoIHVpbnQyNTYgeCwgdWludDI1NiB5ICkgaW50ZXJuYWwgcmV0dXJucyggdWludDI1NiApIHsKICAgIGFzc2VydCggeCA+PSB5KTsKICAgIHJldHVybiB4IC0geTsKICB9Cn0KCmNvbnRyYWN0IEVSQzIwVG9rZW4gaXMgSUVSQzIwVG9rZW4sIFJlZ2FVdGlscyB7CiAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHkgPSAwOwogIG1hcHBpbmcoIGFkZHJlc3MgPT4gdWludDI1NiApIHB1YmxpYyBiYWxhbmNlT2Y7CiAgbWFwcGluZyggYWRkcmVzcyA9PiBtYXBwaW5nKCBhZGRyZXNzID0+IHVpbnQyNTYgKSApIHB1YmxpYyBhbGxvd2FuY2U7CgogIGV2ZW50IFRyYW5zZmVyKCBhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlICk7CiAgZXZlbnQgQXBwcm92YWwoIGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUgKTsKCiAgZnVuY3Rpb24gdHJhbnNmZXIoIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSApIHZhbGlkQWRkcmVzcyggX3RvICkKICAgIHJldHVybnMoIGJvb2wgc3VjY2VzcyApCiAgewogICAgYmFsYW5jZU9mWyBtc2cuc2VuZGVyIF0gPSBzYWZlU3ViKCBiYWxhbmNlT2ZbIG1zZy5zZW5kZXIgXSwgX3ZhbHVlICk7CiAgICBiYWxhbmNlT2ZbIF90byBdID0gc2FmZUFkZCggYmFsYW5jZU9mWyBfdG8gXSwgX3ZhbHVlICk7CiAgICBUcmFuc2ZlciggbXNnLnNlbmRlciwgX3RvLCBfdmFsdWUgKTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKCBhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUgKSB2YWxpZEFkZHJlc3MoIF9mcm9tICkgdmFsaWRBZGRyZXNzKCBfdG8gKQogICAgcmV0dXJucyggYm9vbCBzdWNjZXNzICkKICB7CiAgICBhbGxvd2FuY2VbIF9mcm9tIF1bIG1zZy5zZW5kZXIgXSA9IHNhZmVTdWIoIGFsbG93YW5jZVsgX2Zyb20gXVsgbXNnLnNlbmRlciBdLCBfdmFsdWUgKTsKICAgIGJhbGFuY2VPZlsgX2Zyb21dID0gc2FmZVN1YiggYmFsYW5jZU9mW19mcm9tXSwgX3ZhbHVlICk7CiAgICBiYWxhbmNlT2ZbIF90b10gPSBzYWZlQWRkKCBiYWxhbmNlT2ZbX3RvXSwgX3ZhbHVlICk7CiAgICBUcmFuc2ZlciggX2Zyb20sIF90bywgX3ZhbHVlICk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIGFwcHJvdmUoIGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlICkgdmFsaWRBZGRyZXNzKCBfc3BlbmRlciApCiAgICByZXR1cm5zKCBib29sIHN1Y2Nlc3MpCiAgewogICAgcmVxdWlyZSggX3ZhbHVlID09IDAgfHwgYWxsb3dhbmNlWyBtc2cuc2VuZGVyIF1bIF9zcGVuZGVyIF0gPT0gMCApOwoKICAgIGFsbG93YW5jZVsgbXNnLnNlbmRlciBdWyBfc3BlbmRlciBdID0gX3ZhbHVlOwogICAgQXBwcm92YWwoIG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUgKTsKICAgIHJldHVybiB0cnVlOwogIH0KCn0KCmNvbnRyYWN0IElBcHBseVByZUlDTyB7CiAgZnVuY3Rpb24gYXBwbHlUb2tlbnMoIGFkZHJlc3Mgb3duZXIsIHVpbnQgdG9rZW5zICk7Cn0KCmNvbnRyYWN0IFByZUlDT1Rva2VuIGlzIEVSQzIwVG9rZW4gewoKICBzdHJpbmcgcHVibGljIGNvbnN0YW50IG5hbWUgPSAiUkVHQSBSaXNrIFNoYXJpbmcgcHJlSUNPIFRva2VuIjsKICBzdHJpbmcgcHVibGljIGNvbnN0YW50IHN5bWJvbCA9ICJSU1QtUCI7CiAgdWludDggcHVibGljIGNvbnN0YW50IGRlY2ltYWxzID0gMTA7CgogIGFkZHJlc3MgcHVibGljIGJvYXJkOwogIGFkZHJlc3MgcHVibGljIG93bmVyOwogIHVpbnQgcHVibGljIHdlaUZvclRva2VuOwogIHVpbnQgcHVibGljIG5vdE1vcmVUaGFuOwogIHVpbnQgcHVibGljIG5vdExlc3NUaGFuOwogIHVpbnQgcHVibGljIHRva2Vuc0xpbWl0OwogIHVpbnQgcHVibGljIHRvdGFsRXRoZXIgPSAwOwogIGFkZHJlc3NbXSBwdWJsaWMgaG9sZGVyczsKICBib29sIHB1YmxpYyBjbG9zZWQ7CiAgSUFwcGx5UHJlSUNPIHB1YmxpYyByc3Q7CgogIGV2ZW50IElzc3VhbmNlKCBhZGRyZXNzIF90bywgdWludCBfdG9rZW5zLCB1aW50IF9hbW91bnQsIHVpbnQgX3NlbnRCYWNrICk7CgogIG1vZGlmaWVyIG93bmVyT25seSgpIHsKICAgIHJlcXVpcmUoIG1zZy5zZW5kZXIgPT0gb3duZXIgKTsKICAgIF87CiAgfQoKICBtb2RpZmllciBib2FyZE9ubHkoKSB7CiAgICByZXF1aXJlKCBtc2cuc2VuZGVyID09IGJvYXJkICk7CiAgICBfOwogIH0KCiAgbW9kaWZpZXIgb3BlbmVkKCkgewogICAgcmVxdWlyZSghY2xvc2VkICYmIHdlaUZvclRva2VuID4gMCAmJiB0b3RhbFN1cHBseSA8IHRva2Vuc0xpbWl0KTsKICAgIF87CiAgfQoKICBmdW5jdGlvbiBQcmVJQ09Ub2tlbiggYWRkcmVzcyBfYm9hcmQgKSB7CiAgICBib2FyZCA9IF9ib2FyZDsKICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgIHdlaUZvclRva2VuID0gNSAqIHVpbnQoMTApKiooMTgtMi1kZWNpbWFscyk7IC8vIDAuMDUgRXRoZXIKICAgIG5vdE1vcmVUaGFuID0gNzAwICogdWludCgxMCkqKmRlY2ltYWxzOwogICAgbm90TGVzc1RoYW4gPSAxMDAgKiB1aW50KDEwKSoqZGVjaW1hbHM7CiAgICB0b2tlbnNMaW1pdCA9IDMwMDAwICogdWludCgxMCkqKmRlY2ltYWxzOwogICAgY2xvc2VkID0gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uKCkgcGF5YWJsZSBvcGVuZWQgewogICAgICBpc3N1ZUludGVybmFsKCBtc2cuc2VuZGVyLCBtc2cudmFsdWUsIHRydWUgKTsKICB9CgogIGZ1bmN0aW9uIHNldE5vdE1vcmVUaGFuKCB1aW50IF9ub3RNb3JlVGhhbiApIHB1YmxpYyBib2FyZE9ubHkgewogICAgbm90TW9yZVRoYW4gPSBfbm90TW9yZVRoYW4gKiB1aW50KDEwKSoqZGVjaW1hbHM7CiAgfQoKICBmdW5jdGlvbiBzZXROb3RMZXNzVGhhbiggdWludCBfbm90TGVzc1RoYW4gKSBwdWJsaWMgYm9hcmRPbmx5IHsKICAgIG5vdExlc3NUaGFuID0gX25vdExlc3NUaGFuICogdWludCgxMCkqKmRlY2ltYWxzOwogIH0KCiAgZnVuY3Rpb24gc2V0VG9rZW5zTGltaXQoIHVpbnQgX2xpbWl0ICkgcHVibGljIGJvYXJkT25seSB7CiAgICB0b2tlbnNMaW1pdCA9IF9saW1pdCAqIHVpbnQoMTApKipkZWNpbWFsczsKICB9CgogIGZ1bmN0aW9uIHNldE9wZW4oIGJvb2wgX29wZW4gKSBwdWJsaWMgYm9hcmRPbmx5IHsKICAgIGNsb3NlZCA9ICFfb3BlbjsKICB9CgogIGZ1bmN0aW9uIHNldFJTVCggSUFwcGx5UHJlSUNPIF9yc3QgKSBwdWJsaWMgYm9hcmRPbmx5IHsKICAgIGNsb3NlZCA9IHRydWU7CiAgICByc3QgPSBfcnN0OwogIH0KCiAgZnVuY3Rpb24gZ2V0SG9sZGVyc0NvdW50KCkgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQgY291bnQpIHsKICAgIGNvdW50ID0gaG9sZGVycy5sZW5ndGg7CiAgfQoKICBmdW5jdGlvbiBpc3N1ZShhZGRyZXNzIHRvLCB1aW50MjU2IGFtb3VudCkgcHVibGljIGJvYXJkT25seSB2YWxpZEFkZHJlc3ModG8pIHsKICAgIGlzc3VlSW50ZXJuYWwoIHRvLCBhbW91bnQsIGZhbHNlICk7CiAgfQoKICBmdW5jdGlvbiBidXkoKSBwdWJsaWMgcGF5YWJsZSBvcGVuZWQgewogICAgaXNzdWVJbnRlcm5hbCggbXNnLnNlbmRlciwgbXNnLnZhbHVlLCB0cnVlICk7CiAgfQoKICBmdW5jdGlvbiB3aXRoZHJhdyggdWludCBhbW91bnQgKSBwdWJsaWMgYm9hcmRPbmx5IHsKICAgIGJvYXJkLnRyYW5zZmVyKCBhbW91bnQgKTsKICB9CgogIGZ1bmN0aW9uIGlzc3VlSW50ZXJuYWwoYWRkcmVzcyB0bywgdWludDI1NiBhbW91bnQsIGJvb2wgcmV0dXJuRXhjZXNzKSBpbnRlcm5hbCB7CiAgICB1aW50IHRva2VucyA9IGFtb3VudCAvIHdlaUZvclRva2VuOwogICAgcmVxdWlyZSggd2VpRm9yVG9rZW4gPiAwICYmIHNhZmVBZGQodG90YWxTdXBwbHksIHRva2VucykgPCB0b2tlbnNMaW1pdCAmJiAoYmFsYW5jZU9mW3RvXSA8IG5vdE1vcmVUaGFuIHx8IG5vdE1vcmVUaGFuID09IDApICYmIHNhZmVBZGQoYmFsYW5jZU9mW3RvXSwgdG9rZW5zKSA+PSBub3RMZXNzVGhhbiApOwogICAgdWludCBzZW5kQmFjayA9IDA7CiAgICBpZiggbm90TW9yZVRoYW4gPiAwICYmIHNhZmVBZGQoYmFsYW5jZU9mW3RvXSwgdG9rZW5zKSA+IG5vdE1vcmVUaGFuICkgewogICAgICB0b2tlbnMgPSBub3RNb3JlVGhhbiAtIGJhbGFuY2VPZlt0b107CiAgICAgIHNlbmRCYWNrID0gYW1vdW50IC0gdG9rZW5zICogd2VpRm9yVG9rZW47CiAgICB9CgogICAgdG90YWxFdGhlciA9IHNhZmVBZGQodG90YWxFdGhlciwgYW1vdW50IC0gc2VuZEJhY2spOwogICAgYmFsYW5jZU9mW3RvXSA9IHNhZmVBZGQoYmFsYW5jZU9mW3RvXSwgdG9rZW5zKTsKICAgIHRvdGFsU3VwcGx5ID0gc2FmZUFkZCh0b3RhbFN1cHBseSwgdG9rZW5zKTsKICAgIGhvbGRlcnMucHVzaCh0byk7CiAgICBpZiggcmV0dXJuRXhjZXNzICYmIHNlbmRCYWNrID4gMCAmJiBzZW5kQmFjayA8IGFtb3VudCApCiAgICAgIHRvLnRyYW5zZmVyKCBzZW5kQmFjayApOwogICAgSXNzdWFuY2UodG8sIHRva2VucywgYW1vdW50LCByZXR1cm5FeGNlc3MgPyBzZW5kQmFjayA6IDApOwogICAgVHJhbnNmZXIoIHRoaXMsIHRvLCB0b2tlbnMgKTsKICB9CgogIGZ1bmN0aW9uIG1vdmVUb1JTVCgpIHZhbGlkQWRkcmVzcyhyc3QpIHsKICAgIHNlbmRUb1JzdEZvckFkZHJlc3MoIG1zZy5zZW5kZXIgKTsKICB9CgogIGZ1bmN0aW9uIHNlbmRUb1JTVCggYWRkcmVzcyBmcm9tICkgdmFsaWRBZGRyZXNzKHJzdCkgewogICAgc2VuZFRvUnN0Rm9yQWRkcmVzcyggZnJvbSApOwogIH0KCiAgZnVuY3Rpb24gc2VuZFRvUnN0Rm9yQWRkcmVzcyggYWRkcmVzcyBmcm9tICkgaW50ZXJuYWwgewogICAgcmVxdWlyZSggY2xvc2VkICk7CiAgICB1aW50IGFtb3VudCA9IGJhbGFuY2VPZltmcm9tXTsKICAgIGlmKCBhbW91bnQgPiAwICkgewogICAgICBiYWxhbmNlT2ZbZnJvbV0gPSAwOwogICAgICByc3QuYXBwbHlUb2tlbnMoIGZyb20sIGFtb3VudCApOwogICAgICBUcmFuc2ZlciggZnJvbSwgcnN0LCBhbW91bnQgKTsKICAgIH0KICB9Cn0='.
	

]
