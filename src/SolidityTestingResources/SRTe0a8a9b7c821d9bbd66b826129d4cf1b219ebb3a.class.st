Class {
	#name : #SRTe0a8a9b7c821d9bbd66b826129d4cf1b219ebb3a,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTe0a8a9b7c821d9bbd66b826129d4cf1b219ebb3a >> base64 [
	^ ''.
	

]
