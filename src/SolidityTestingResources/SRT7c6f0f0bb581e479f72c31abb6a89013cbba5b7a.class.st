Class {
	#name : #SRT7c6f0f0bb581e479f72c31abb6a89013cbba5b7a,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT7c6f0f0bb581e479f72c31abb6a89013cbba5b7a >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IDAuNC4yMTsKCi8qKgogKiBAdGl0bGUgU2FmZU1hdGgKICogQGRldiBNYXRoIG9wZXJhdGlvbnMgd2l0aCBzYWZldHkgY2hlY2tzIHRoYXQgdGhyb3cgb24gZXJyb3IKICovCmxpYnJhcnkgU2FmZU1hdGggewoKICAvKioKICAqIEBkZXYgU3Vic3RyYWN0cyB0d28gbnVtYmVycywgdGhyb3dzIG9uIG92ZXJmbG93IChpLmUuIGlmIHN1YnRyYWhlbmQgaXMgZ3JlYXRlciB0aGFuIG1pbnVlbmQpLgogICovCiAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIGFzc2VydChiIDw9IGEpOwogICAgcmV0dXJuIGEgLSBiOwogIH0KCiAgLyoqCiAgKiBAZGV2IEFkZHMgdHdvIG51bWJlcnMsIHRocm93cyBvbiBvdmVyZmxvdy4KICAqLwogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhICsgYjsKICAgIGFzc2VydChjID49IGEpOwogICAgcmV0dXJuIGM7CiAgfQp9Cgpjb250cmFjdCBNb25lZGEgewogICAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQyNTY7CiAgICAKICAgIHN0cmluZyBjb25zdGFudCBwdWJsaWMgc3RhbmRhcmQgPSAiRVJDMjAiOwogICAgc3RyaW5nIGNvbnN0YW50IHB1YmxpYyBuYW1lID0gIk1vbmVkYSBUb2tlbiI7CiAgICBzdHJpbmcgY29uc3RhbnQgcHVibGljIHN5bWJvbCA9ICJNTkQiOwogICAgdWludDggY29uc3RhbnQgcHVibGljIGRlY2ltYWxzID0gMTg7CiAgICAKICAgIHVpbnQyNTYgcHJpdmF0ZSBfdG90YWxTdXBwbHkgPSA0MDAwMDAwMDBlMTg7IC8vIFRvdGFsIHN1cHBseSB0b2tlbnMgNDAwbWlsCiAgICB1aW50MjU2IGNvbnN0YW50IHB1YmxpYyBwcmVJQ09MaW1pdCA9IDIwMDAwMDAwZTE4OyAvLyBQcmUtSUNPIGxpbWl0IDUlLCAyMG1pbAogICAgdWludDI1NiBjb25zdGFudCBwdWJsaWMgaWNvTGltaXQgPSAyNTAwMDAwMDBlMTg7IC8vIElDTyBsaW1pdCA2Mi41JSwgMjUwbWlsCiAgICB1aW50MjU2IGNvbnN0YW50IHB1YmxpYyBjb21wYW55UmVzZXJ2ZSA9IDgwMDAwMDAwZTE4OyAvLyBDb21wYW55IFJlc2VydmUgMjAlLCA4MG1pbAogICAgdWludDI1NiBjb25zdGFudCBwdWJsaWMgdGVhbVJlc2VydmUgPSA0MDAwMDAwMGUxODsgLy8gVGVhbSBSZXNlcnZlIDEwJSwgNDBtaWwKICAgIHVpbnQyNTYgY29uc3RhbnQgcHVibGljIGdpdmVhd2F5UmVzZXJ2ZSA9IDEwMDAwMDAwZTE4OyAvLyByZWZlcnJhbCBhbmQgZ2l2aW5nIGF3YXkgMi41JSwgMTBtaWwKCiAgICB1aW50MjU2IHB1YmxpYyBwcmVJQ09FbmRzID0gMTUyNTEzMjc5OTsgLy8gTW9uZGF5LCBBcHJpbCAzMCwgMjAxOCAxMTo1OTo1OSBQTQogICAgdWludDI1NiBwdWJsaWMgaWNvU3RhcnRzID0gMTUyNjM0MjQwMDsgLy8gVHVlc2RheSwgTWF5IDE1LCAyMDE4IDEyOjAwOjAwIEFNCiAgICB1aW50MjU2IHB1YmxpYyBpY29FbmRzID0gMTUzMTY5OTE5OTsgLy8gU3VuZGF5LCBKdWx5IDE1LCAyMDE4IDExOjU5OjU5IFBNCiAgICAKICAgIHVpbnQyNTYgY29uc3RhbnQgcHVibGljIHN0YXJ0VGltZSA9IDE1MzI4MjI0MDA7IC8vIFR3byB3ZWVrcyBhZnRlciBJQ08gZW5kcywgU3VuZGF5LCBKdWx5IDI5LCAyMDE4IDEyOjAwOjAwIEFNCiAgICB1aW50MjU2IGNvbnN0YW50IHB1YmxpYyB0ZWFtQ29tcGFueUxvY2sgPSAxNTYzMTQ4ODAwOyAvLyBPbmUgWWVhciBhZnRlciBJQ08gRW5kcywgUmVzZXJ2ZSBUb2tlbnMgb2YgY29tcGFueSBhbmQgdGVhbSBiZWNvbWVzIHRyYW5zZmVyYWJsZS4gIE1vbmRheSwgSnVseSAxNSwgMjAxOSAxMjowMDowMCBBTQoKICAgIGFkZHJlc3MgcHVibGljIG93bmVyQWRkcjsKICAgIGFkZHJlc3MgcHVibGljIGNvbXBhbnlBZGRyOwogICAgYWRkcmVzcyBwdWJsaWMgZ2l2ZWF3YXlBZGRyOwogICAgYm9vbCBwdWJsaWMgYnVybmVkOwoKICAgIC8vIEFycmF5IHdpdGggYWxsIGJhbGFuY2VzCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBiYWxhbmNlczsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgaW50ZXJuYWwgYWxsb3dlZDsKCiAgICAvLyBQdWJsaWMgZXZlbnQgb24gdGhlIGJsb2NrY2hhaW4gdGhhdCB3aWxsIG5vdGlmeSBjbGllbnRzCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHZhbHVlKTsKICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBvd25lciwgYWRkcmVzcyBpbmRleGVkIHNwZW5kZXIsIHVpbnQyNTYgdmFsdWUpOwogICAgZXZlbnQgQnVybmVkKHVpbnQyNTYgYW1vdW50KTsKICAgIAogICAgLy8gSW5pdGlhbGl6ZXMgY29udHJhY3Qgd2l0aCBpbml0aWFsIHN1cHBseSB0b2tlbnMgdG8gdGhlIGNyZWF0b3Igb2YgdGhlIGNvbnRyYWN0CiAgICBmdW5jdGlvbiBNb25lZGEoYWRkcmVzcyBfb3duZXJBZGRyLCBhZGRyZXNzIF9jb21wYW55QWRkciwgYWRkcmVzcyBfZ2l2ZWF3YXlBZGRyKSBwdWJsaWMgewogICAgICAgIG93bmVyQWRkciA9IF9vd25lckFkZHI7CiAgICAgICAgY29tcGFueUFkZHIgPSBfY29tcGFueUFkZHI7CiAgICAgICAgZ2l2ZWF3YXlBZGRyID0gX2dpdmVhd2F5QWRkcjsKICAgICAgICBiYWxhbmNlc1tvd25lckFkZHJdID0gX3RvdGFsU3VwcGx5OyAvLyBHaXZlIHRoZSBvd25lciBhbGwgaW5pdGlhbCB0b2tlbnMKICAgIH0KICAgIAogICAgLy8gR2V0cyB0aGUgdG90YWwgdG9rZW4gc3VwcGx5CiAgICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICByZXR1cm4gX3RvdGFsU3VwcGx5OwogICAgfQoKICAgIC8vIEdldHMgdGhlIGJhbGFuY2Ugb2YgdGhlIHNwZWNpZmllZCBhZGRyZXNzLgogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3Mgd2hvKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgcmV0dXJuIGJhbGFuY2VzW3dob107CiAgICB9CiAgICAKICAgIC8vIEZ1bmN0aW9uIHRvIGNoZWNrIHRoZSBhbW91bnQgb2YgdG9rZW5zIHRoYXQgYW4gb3duZXIgYWxsb3dlZCB0byBhIHNwZW5kZXIuCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBvd25lciwgYWRkcmVzcyBzcGVuZGVyKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgcmV0dXJuIGFsbG93ZWRbb3duZXJdW3NwZW5kZXJdOwogICAgfQogICAgCiAgICAvLyBUcmFuc2ZlciBzb21lIG9mIHlvdXIgdG9rZW5zIHRvIGFub3RoZXIgYWRkcmVzcwogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyB0bywgdWludDI1NiB2YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgICAgICByZXF1aXJlKG5vdyA+PSBzdGFydFRpbWUpOyAvLyBDaGVjayBpZiBvbmUgbW9udGggbG9jayBpcyBwYXNzZWQKICAgICAgICByZXF1aXJlKHZhbHVlID4gMCk7CgogICAgICAgIGlmIChtc2cuc2VuZGVyID09IG93bmVyQWRkciB8fCBtc2cuc2VuZGVyID09IGNvbXBhbnlBZGRyKQogICAgICAgICAgICAgICAgcmVxdWlyZShub3cgPj0gdGVhbUNvbXBhbnlMb2NrKTsKICAgICAgICAgICAgICAgIAogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gYmFsYW5jZXNbbXNnLnNlbmRlcl0uc3ViKHZhbHVlKTsKICAgICAgICBiYWxhbmNlc1t0b10gPSBiYWxhbmNlc1t0b10uYWRkKHZhbHVlKTsKICAgICAgICBlbWl0IFRyYW5zZmVyKG1zZy5zZW5kZXIsIHRvLCB2YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgICAKICAgIC8vIFRyYW5zZmVyIHRva2VucyBmcm9tIG9uZSBhZGRyZXNzIHRvIGFub3RoZXIKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIGZyb20sIGFkZHJlc3MgdG8sIHVpbnQyNTYgdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICAgICAgcmVxdWlyZSh2YWx1ZSA+IDApOwogICAgICAgIHJlcXVpcmUodG8gIT0gYWRkcmVzcygwKSk7CiAgICAgICAgcmVxdWlyZSh2YWx1ZSA8PSBiYWxhbmNlc1tmcm9tXSk7CiAgICAgICAgcmVxdWlyZSh2YWx1ZSA8PSBhbGxvd2VkW2Zyb21dW21zZy5zZW5kZXJdKTsKICAgICAgICAKICAgICAgICBpZiAobm93IDwgaWNvRW5kcykgIC8vIENoZWNrIGlmIHRoZSBjcm93ZHNhbGUgaXMgYWxyZWFkeSBvdmVyCiAgICAgICAgICAgIHJlcXVpcmUoZnJvbSA9PSBvd25lckFkZHIpOwoKICAgICAgICBpZiAobXNnLnNlbmRlciA9PSBvd25lckFkZHIgfHwgbXNnLnNlbmRlciA9PSBjb21wYW55QWRkcikKICAgICAgICAgICAgcmVxdWlyZShub3cgPj0gdGVhbUNvbXBhbnlMb2NrKTsKICAgICAgICAgICAgCiAgICAgICAgYmFsYW5jZXNbZnJvbV0gPSBiYWxhbmNlc1tmcm9tXS5zdWIodmFsdWUpOwogICAgICAgIGJhbGFuY2VzW3RvXSA9IGJhbGFuY2VzW3RvXS5hZGQodmFsdWUpOwogICAgICAgIGFsbG93ZWRbZnJvbV1bbXNnLnNlbmRlcl0gPSBhbGxvd2VkW2Zyb21dW21zZy5zZW5kZXJdLnN1Yih2YWx1ZSk7CiAgICAgICAgZW1pdCBUcmFuc2Zlcihmcm9tLCB0bywgdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQogICAgCiAgICAvL0FwcHJvdmUgdGhlIHBhc3NlZCBhZGRyZXNzIHRvIHNwZW5kIHRoZSBzcGVjaWZpZWQgYW1vdW50IG9mIHRva2VucyBvbiBiZWhhbGYgb2YgbXNnLnNlbmRlci4KICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBzcGVuZGVyLCB1aW50MjU2IHZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgICAgIHJlcXVpcmUoKHZhbHVlID09IDApIHx8IChhbGxvd2VkW21zZy5zZW5kZXJdW3NwZW5kZXJdID09IDApKTsKICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW3NwZW5kZXJdID0gdmFsdWU7CiAgICAgICAgZW1pdCBBcHByb3ZhbChtc2cuc2VuZGVyLCBzcGVuZGVyLCB2YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAvLyBDYWxsZWQgd2hlbiBJQ08gaXMgY2xvc2VkLiBCdXJucyB0aGUgcmVtYWluaW5nIHRva2VucyBleGNlcHQgdGhlIHRva2VucyByZXNlcnZlZDoKICAgIC8vIEFueWJvZHkgbWF5IGJ1cm4gdGhlIHRva2VucyBhZnRlciBJQ08gZW5kZWQsIGJ1dCBvbmx5IG9uY2UgKGluIGNhc2UgdGhlIG93bmVyIGhvbGRzIG1vcmUgdG9rZW5zIGluIHRoZSBmdXR1cmUpLgogICAgLy8gdGhpcyBlbnN1cmVzIHRoYXQgdGhlIG93bmVyIHdpbGwgbm90IHBvc3NlcyBhIG1ham9yaXR5IG9mIHRoZSB0b2tlbnMuCiAgICBmdW5jdGlvbiBidXJuKCkgcHVibGljIHsKICAgICAgICAvLyBNYWtlIHN1cmUgaXQncyBhZnRlciBJQ08gYW5kIGhhc24ndCBiZWVuIGNhbGxlZCBiZWZvcmUuCiAgICAgICAgcmVxdWlyZSghYnVybmVkICYmIG5vdyA+IGljb0VuZHMpOwogICAgICAgIHVpbnQyNTYgdG90YWxSZXNlcnZlID0gdGVhbVJlc2VydmUuYWRkKGNvbXBhbnlSZXNlcnZlKTsKICAgICAgICB1aW50MjU2IGRpZmZlcmVuY2UgPSBiYWxhbmNlc1tvd25lckFkZHJdLnN1Yih0b3RhbFJlc2VydmUpOwogICAgICAgIGJhbGFuY2VzW293bmVyQWRkcl0gPSB0ZWFtUmVzZXJ2ZTsKICAgICAgICBiYWxhbmNlc1tjb21wYW55QWRkcl0gPSBjb21wYW55UmVzZXJ2ZTsKICAgICAgICBiYWxhbmNlc1tnaXZlYXdheUFkZHJdID0gZ2l2ZWF3YXlSZXNlcnZlOwogICAgICAgIF90b3RhbFN1cHBseSA9IF90b3RhbFN1cHBseS5zdWIoZGlmZmVyZW5jZSk7CiAgICAgICAgYnVybmVkID0gdHJ1ZTsKICAgICAgICBlbWl0IEJ1cm5lZChkaWZmZXJlbmNlKTsKICAgIH0KfQ=='.
	

]
