Class {
	#name : #SRTce51f6cac9fb2695d944f2d5e2699d68aa7b656e,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTce51f6cac9fb2695d944f2d5e2699d68aa7b656e >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTU7Cgpjb250cmFjdCBoZWxwZXIgewogICAgCiAgICBmdW5jdGlvbiBlY2NWZXJpZnkoYnl0ZXMzMiBoYXNoLCB1aW50OCBjdXJ2ZSwgYnl0ZXMzMiByLCBieXRlczMyIHMpIAogICAgICAgIGNvbnN0YW50IAogICAgICAgIHJldHVybnMoYWRkcmVzcyBwdWJsaWNLZXkpIHsKICAgICAgICBwdWJsaWNLZXkgPSBlY3JlY292ZXIoaGFzaCwgY3VydmUsIHIsIHMpOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBjYWxjQmluZGVkQmxpbmRIYXNoMyhzdHJpbmcga2V5LCBhZGRyZXNzIHJlY2VpdmVyKSAKICAgICAgICBjb25zdGFudCByZXR1cm5zKGJ5dGVzMzIgbG9jaykgewogICAgICAgIGxvY2sgPSBzaGEzKHNoYTMoa2V5KSxyZWNlaXZlcik7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGNhbGNCaW5kZWRCbGluZEhhc2gyNTYoc3RyaW5nIGtleSwgYWRkcmVzcyByZWNlaXZlcikgCiAgICAgICAgY29uc3RhbnQgcmV0dXJucyhieXRlczMyIGxvY2spIHsKICAgICAgICBsb2NrID0gc2hhMjU2KHNoYTI1NihrZXkpLHJlY2VpdmVyKTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gY2FsY0RvdWJsZUJpbmRlZEJsaW5kSGFzaDMoc3RyaW5nIGtleSwgYWRkcmVzcyBjYWxsZXIsIGFkZHJlc3MgcmVjZWl2ZXIpIAogICAgICAgIGNvbnN0YW50IHJldHVybnMoYnl0ZXMzMiBsb2NrKSB7CiAgICAgICAgbG9jayA9IHNoYTMoc2hhMyhzaGEzKGtleSksY2FsbGVyKSxyZWNlaXZlcik7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGNhbGNEb3VibGVCaW5kZWRCbGluZEhhc2gyNTYoc3RyaW5nIGtleSwgYWRkcmVzcyBjYWxsZXIsIGFkZHJlc3MgcmVjZWl2ZXIpIAogICAgICAgIGNvbnN0YW50IHJldHVybnMoYnl0ZXMzMiBsb2NrKSB7CiAgICAgICAgbG9jayA9IHNoYTI1NihzaGEyNTYoc2hhMjU2KGtleSksY2FsbGVyKSxyZWNlaXZlcik7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGhhc2hfc2hhMjU2KHN0cmluZyBrZXksIHVpbnQgcm91bmRzKSAKICAgICAgICBjb25zdGFudCByZXR1cm5zKGJ5dGVzMzIgc2hhMjU2X2hhc2gpIHsKICAgICAgICBpZiAocm91bmRzID09IDApIHJvdW5kcyA9IDE7CiAgICAgICAgc2hhMjU2X2hhc2ggPSBzaGEyNTYoa2V5KTsgIAogICAgICAgIGZvciAodWludCBpID0gMDsgaSA8IHJvdW5kcy0xOyBpKyspIHsKICAgICAgICAgICAgc2hhMjU2X2hhc2ggPSBzaGEyNTYoc2hhMjU2X2hhc2gpOyAgCiAgICAgICAgfQogICAgfQogICAgCiAgICBmdW5jdGlvbiBoYXNoX3NoYTMoc3RyaW5nIGtleSwgdWludCByb3VuZHMpCiAgICAgICAgY29uc3RhbnQgcmV0dXJucyhieXRlczMyIHNoYTNfaGFzaCkgewogICAgICAgIGlmIChyb3VuZHMgPT0gMCkgcm91bmRzID0gMTsKICAgICAgICBzaGEzX2hhc2ggPSBzaGEzKGtleSk7ICAKICAgICAgICBmb3IgKHVpbnQgaSA9IDA7IGkgPCByb3VuZHMtMTsgaSsrKSB7CiAgICAgICAgICAgIHNoYTNfaGFzaCA9IHNoYTMoc2hhM19oYXNoKTsgIAogICAgICAgIH0KICAgIH0KICAgIAogICAgZnVuY3Rpb24gaGFzaF9yaXBlbWQxNjAoc3RyaW5nIGtleSwgdWludCByb3VuZHMpCiAgICAgICAgY29uc3RhbnQgcmV0dXJucyhieXRlczMyIHIxNjBfaGFzaCkgewogICAgICAgIGlmIChyb3VuZHMgPT0gMCkgcm91bmRzID0gMTsKICAgICAgICByMTYwX2hhc2ggPSBzaGEzKGtleSk7ICAKICAgICAgICBmb3IgKHVpbnQgaSA9IDA7IGkgPCByb3VuZHMtMTsgaSsrKSB7CiAgICAgICAgICAgIHIxNjBfaGFzaCA9IHJpcGVtZDE2MChyMTYwX2hhc2gpOyAgCiAgICAgICAgfQogICAgfQp9CmNvbnRyYWN0IG93bmVkIHsKICAgIGFkZHJlc3MgcHVibGljIG93bmVyOwogICAgCiAgICBtb2RpZmllciBvbmx5T3duZXIgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICAgICAgXzsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gb3duZWQoKSB7IG93bmVyID0gbXNnLnNlbmRlcjsgfQp9Cgpjb250cmFjdCBsb2dnZXIgewogICAgCiAgICBldmVudCBVbmxvY2soYWRkcmVzcyBjYWxsZXIsIHN0cmluZyBrZXksIGJ5dGVzMzIgcHJvb2YpOwogICAgZXZlbnQgRGVwb3NpdChhZGRyZXNzIGZyb20sIHVpbnQgdmFsdWUpOwogICAgZXZlbnQgTG9nRXZlbnQoCiAgICAgICAgdWludCBudW1fZXZlbnQsCiAgICAgICAgYWRkcmVzcyBmcm9tLCAKICAgICAgICBieXRlczQgc2lnLCAKICAgICAgICBieXRlcyBtc2dkYXRhLCAKICAgICAgICB1aW50IHRpbWUsCiAgICAgICAgdWludCBnYXNwcmljZQogICAgICAgICk7Cn0KCmNvbnRyYWN0IExvY2tzbWl0aCBpcyBvd25lZCwgbG9nZ2VyLCBoZWxwZXIgewogICAgdWludCBwdWJsaWMgbm9uY2U7CiAgICB1aW50IHB1YmxpYyBtX3Byb29mczsKICAgIGJvb2wgcHVibGljIGRpZFByb3ZlOwogICAgYnl0ZXMzMiBwdWJsaWMgbG9jazsKICAgIHN0cmluZyBwdWJsaWMgcHJvdG9jb2wgPSAic2V0IGJ5IHN0cm9uZzEwLCB2ZXJpZnkgYnkgc3Ryb25nNyI7CiAgICAKICAgIHN0cnVjdCBwcm9vZiB7CiAgICAgICAgYWRkcmVzcyBwcm92ZXI7CiAgICAgICAgYWRkcmVzcyByZWNlaXZlcjsKICAgICAgICBzdHJpbmcga2V5OwogICAgICAgIGJ5dGVzMzIgbG9jazsKICAgIH0KICAgIAogICAgbWFwcGluZyh1aW50ID0+IHByb29mKSBwdWJsaWMgcHJvb2ZzOwogICAgCiAgICAvKiBDb25zdHJ1Y3RvciAqLwogICAgZnVuY3Rpb24gTG9ja3NtaXRoKCkgewogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gc2V0TG9jayhieXRlczMyIF9sb2NrLCBzdHJpbmcgX3Byb3RvY29sKSBvbmx5T3duZXIgewogICAgICAgIHJlcXVpcmUoX2xvY2sgIT0gMHgwICYmIGxvY2sgIT0gX2xvY2spOwogICAgICAgIGxvY2sgPSBfbG9jazsKICAgICAgICBkaWRQcm92ZSA9IGZhbHNlOwogICAgICAgIGlmIChieXRlcyhfcHJvdG9jb2wpLmxlbmd0aCA+IDApIHByb3RvY29sID0gX3Byb3RvY29sOwogICAgICAgIGxvZ0V2ZW50KCk7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIHVubG9jayhzdHJpbmcga2V5LCBhZGRyZXNzIHJlY2VpdmVyLCBieXRlczMyIG5ld0xvY2ssIHN0cmluZyBfcHJvdG9jb2wpIHsKICAgICAgICBieXRlczMyIGsgPSBzaGEzKHNoYTMoa2V5KSxtc2cuc2VuZGVyKTsKICAgICAgICBpZiAodWludChyZWNlaXZlcikgPiAwKSBrID0gc2hhMyhrLHJlY2VpdmVyKTsKICAgICAgICBpZiAoayA9PSBsb2NrKSB7CiAgICAgICAgICAgIGlmICh1aW50KHJlY2VpdmVyKSA+IDApIG93bmVyID0gcmVjZWl2ZXI7CiAgICAgICAgICAgIGVsc2Ugb3duZXIgPSBtc2cuc2VuZGVyOwogICAgICAgICAgICAKICAgICAgICAgICAgVW5sb2NrKG1zZy5zZW5kZXIsIGtleSwgbG9jayk7CiAgICAgICAgICAgIAogICAgICAgICAgICBwcm9vZnNbbV9wcm9vZnNdLnByb3ZlciA9IG1zZy5zZW5kZXI7CiAgICAgICAgICAgIHByb29mc1ttX3Byb29mc10ucmVjZWl2ZXIgPSAodWludChyZWNlaXZlcikgPT0gMCA/IG1zZy5zZW5kZXI6cmVjZWl2ZXIpOwogICAgICAgICAgICBwcm9vZnNbbV9wcm9vZnNdLmtleSA9IGtleTsKICAgICAgICAgICAgcHJvb2ZzW21fcHJvb2ZzXS5sb2NrID0gbG9jazsKICAgICAgICAgICAgbV9wcm9vZnMrKzsKICAgICAgICAgICAgbG9jayA9IG5ld0xvY2s7CiAgICAgICAgICAgIGRpZFByb3ZlID0gKHVpbnQobmV3TG9jaykgPT0gMCk7CiAgICAgICAgICAgIGlmIChieXRlcyhfcHJvdG9jb2wpLmxlbmd0aCA+IDApIAogICAgICAgICAgICAgICAgcHJvdG9jb2wgPSBfcHJvdG9jb2w7CiAgICAgICAgICAgIGlmICh0aGlzLmJhbGFuY2UgPiAwKQogICAgICAgICAgICAgICAgcmVxdWlyZShvd25lci5zZW5kKHRoaXMuYmFsYW5jZSkpOwogICAgICAgIH0KICAgICAgICBsb2dFdmVudCgpOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBzZW5kVG8oYWRkcmVzcyBfdG8sIHVpbnQgdmFsdWUpIG9ubHlPd25lciB7CiAgICAgICAgcmVxdWlyZShkaWRQcm92ZSk7CiAgICAgICAgcmVxdWlyZSh0aGlzLmJhbGFuY2UgPj0gdmFsdWUgJiYgdmFsdWUgPiAwKTsKICAgICAgICByZXF1aXJlKF90by5zZW5kKHZhbHVlKSk7CiAgICAgICAgbG9nRXZlbnQoKTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gbG9nRXZlbnQoKSBpbnRlcm5hbCB7CiAgICAgICAgTG9nRXZlbnQobm9uY2UrKywgbXNnLnNlbmRlciwgbXNnLnNpZywgbXNnLmRhdGEsIG5vdywgdHguZ2FzcHJpY2UpOwogICAgfQogCiAgICBmdW5jdGlvbiBraWxsKCkgb25seU93bmVyIHsgCiAgICAgICAgcmVxdWlyZShkaWRQcm92ZSk7CiAgICAgICAgc2VsZmRlc3RydWN0KG93bmVyKTsgCiAgICB9CiAgICAKICAgIGZ1bmN0aW9uKCkgcGF5YWJsZSB7CiAgICAgICAgcmVxdWlyZShtc2cudmFsdWUgPiAwKTsKICAgICAgICBEZXBvc2l0KG1zZy5zZW5kZXIsIG1zZy52YWx1ZSk7CiAgICB9CiAgICAKfQ=='.
	

]
