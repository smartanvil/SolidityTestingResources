Class {
	#name : #SRTeaaf270436a0ed397ed23bbf64df7b1dcaff142f,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTeaaf270436a0ed397ed23bbf64df7b1dcaff142f >> base64 [
	^ ''.
	

]
