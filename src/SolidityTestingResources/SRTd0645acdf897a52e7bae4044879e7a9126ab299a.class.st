Class {
	#name : #SRTd0645acdf897a52e7bae4044879e7a9126ab299a,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTd0645acdf897a52e7bae4044879e7a9126ab299a >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7CgovKioKICogQHRpdGxlIFNhZmVNYXRoCiAqIEBkZXYgTWF0aCBvcGVyYXRpb25zIHdpdGggc2FmZXR5IGNoZWNrcyB0aGF0IHRocm93IG9uIGVycm9yCiAqLwpsaWJyYXJ5IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAKICAgIHVpbnQyNTYgYyA9IGEgLyBiOwogICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KfQoKLyoqCiAqIEB0aXRsZSBDcm93ZHNhbGUKICogQGRldiBDcm93ZHNhbGUgaXMgYSBiYXNlIGNvbnRyYWN0IGZvciBtYW5hZ2luZyBhIHRva2VuIGNyb3dkc2FsZS4KICogQ3Jvd2RzYWxlcyBoYXZlIGEgc3RhcnQgYW5kIGVuZCB0aW1lc3RhbXBzLCB3aGVyZSBpbnZlc3RvcnMgY2FuIG1ha2UKICogdG9rZW4gcHVyY2hhc2VzIGFuZCB0aGUgY3Jvd2RzYWxlIHdpbGwgYXNzaWduIHRoZW0gdG9rZW5zIGJhc2VkCiAqIG9uIGEgdG9rZW4gcGVyIEVUSCByYXRlLiBGdW5kcyBjb2xsZWN0ZWQgYXJlIGZvcndhcmRlZCB0byBhIHdhbGxldAogKiBhcyB0aGV5IGFycml2ZS4KICovCmNvbnRyYWN0IHRva2VuIHsgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyByZWNlaXZlciwgdWludCBhbW91bnQpeyAgfSB9CmNvbnRyYWN0IENyb3dkc2FsZSB7CiAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQyNTY7CgogIC8vIHVpbnQyNTYgZHVyYXRpb25Jbk1pbnV0ZXM7CiAgLy8gYWRkcmVzcyB3aGVyZSBmdW5kcyBhcmUgY29sbGVjdGVkCiAgYWRkcmVzcyBwdWJsaWMgd2FsbGV0OwogIC8vIHRva2VuIGFkZHJlc3MKICBhZGRyZXNzIGFkZHJlc3NPZlRva2VuVXNlZEFzUmV3YXJkOwoKICB0b2tlbiB0b2tlblJld2FyZDsKCgoKICAvLyBzdGFydCBhbmQgZW5kIHRpbWVzdGFtcHMgd2hlcmUgaW52ZXN0bWVudHMgYXJlIGFsbG93ZWQgKGJvdGggaW5jbHVzaXZlKQogIHVpbnQyNTYgcHVibGljIHN0YXJ0VGltZTsKICB1aW50MjU2IHB1YmxpYyBlbmRUaW1lOwogIC8vIGFtb3VudCBvZiByYWlzZWQgbW9uZXkgaW4gd2VpCiAgdWludDI1NiBwdWJsaWMgd2VpUmFpc2VkOwoKICAvKioKICAgKiBldmVudCBmb3IgdG9rZW4gcHVyY2hhc2UgbG9nZ2luZwogICAqIEBwYXJhbSBwdXJjaGFzZXIgd2hvIHBhaWQgZm9yIHRoZSB0b2tlbnMKICAgKiBAcGFyYW0gYmVuZWZpY2lhcnkgd2hvIGdvdCB0aGUgdG9rZW5zCiAgICogQHBhcmFtIHZhbHVlIHdlaXMgcGFpZCBmb3IgcHVyY2hhc2UKICAgKiBAcGFyYW0gYW1vdW50IGFtb3VudCBvZiB0b2tlbnMgcHVyY2hhc2VkCiAgICovCiAgZXZlbnQgVG9rZW5QdXJjaGFzZShhZGRyZXNzIGluZGV4ZWQgcHVyY2hhc2VyLCBhZGRyZXNzIGluZGV4ZWQgYmVuZWZpY2lhcnksIHVpbnQyNTYgdmFsdWUsIHVpbnQyNTYgYW1vdW50KTsKCgogIGZ1bmN0aW9uIENyb3dkc2FsZSgpIHsKICAgIHdhbGxldCA9IDB4QTEwZjZmOEE3MjMwMzhjYTI2N0ZEOEQ1MzU0ZDE1NjMyMzhkYzFEZTsKICAgIC8vIGR1cmF0aW9uSW5NaW51dGVzID0gX2R1cmF0aW9uSW5NaW51dGVzOwogICAgYWRkcmVzc09mVG9rZW5Vc2VkQXNSZXdhcmQgPSAweGRGRjhlN2Y1NDk2RDFlMUE0QWYzNDk3Q2I0NzEyMDE3YTlDNjU0NDI7CgoKICAgIHRva2VuUmV3YXJkID0gdG9rZW4oYWRkcmVzc09mVG9rZW5Vc2VkQXNSZXdhcmQpOwogIH0KCiAgYm9vbCBzdGFydGVkID0gZmFsc2U7CgogIGZ1bmN0aW9uIHN0YXJ0U2FsZSh1aW50MjU2IGRlbGF5KXsKICAgIGlmIChtc2cuc2VuZGVyICE9IHdhbGxldCB8fCBzdGFydGVkKSB0aHJvdzsKICAgIHN0YXJ0VGltZSA9IG5vdyArIGRlbGF5ICogMSBtaW51dGVzOwogICAgZW5kVGltZSA9IHN0YXJ0VGltZSArIDQyICogMjQgKiA2MCAqIDEgbWludXRlczsKICAgIHN0YXJ0ZWQgPSB0cnVlOwogIH0KCiAgLy8gZmFsbGJhY2sgZnVuY3Rpb24gY2FuIGJlIHVzZWQgdG8gYnV5IHRva2VucwogIGZ1bmN0aW9uICgpIHBheWFibGUgewogICAgYnV5VG9rZW5zKG1zZy5zZW5kZXIpOwogIH0KCiAgLy8gbG93IGxldmVsIHRva2VuIHB1cmNoYXNlIGZ1bmN0aW9uCiAgZnVuY3Rpb24gYnV5VG9rZW5zKGFkZHJlc3MgYmVuZWZpY2lhcnkpIHBheWFibGUgewogICAgcmVxdWlyZShiZW5lZmljaWFyeSAhPSAweDApOwogICAgcmVxdWlyZSh2YWxpZFB1cmNoYXNlKCkpOwoKICAgIHVpbnQyNTYgd2VpQW1vdW50ID0gbXNnLnZhbHVlOwoKICAgIC8vIGNhbGN1bGF0ZSB0b2tlbiBhbW91bnQgdG8gYmUgc2VudAogICAgdWludDI1NiB0b2tlbnMgPSAod2VpQW1vdW50KSAqIDMwMDA7CgogICAgaWYobm93IDwgc3RhcnRUaW1lICsgMSo3KjI0KjYwKiAxIG1pbnV0ZXMpewogICAgICB0b2tlbnMgKz0gKHRva2VucyAqIDYwKSAvIDEwMDsKICAgIH1lbHNlIGlmKG5vdyA8IHN0YXJ0VGltZSArIDIqNyoyNCo2MCogMSBtaW51dGVzKXsKICAgICAgdG9rZW5zICs9ICh0b2tlbnMgKiA0MCkgLyAxMDA7CiAgICB9ZWxzZSBpZihub3cgPCBzdGFydFRpbWUgKyAzKjcqMjQqNjAqIDEgbWludXRlcyl7CiAgICAgIHRva2VucyArPSAodG9rZW5zICogMzApIC8gMTAwOwogICAgfWVsc2UgaWYobm93IDwgc3RhcnRUaW1lICsgNCo3KjI0KjYwKiAxIG1pbnV0ZXMpewogICAgICB0b2tlbnMgKz0gKHRva2VucyAqIDIwKSAvIDEwMDsKICAgIH1lbHNlIGlmKG5vdyA8IHN0YXJ0VGltZSArIDUqNyoyNCo2MCogMSBtaW51dGVzKXsKICAgICAgdG9rZW5zICs9ICh0b2tlbnMgKiAxMCkgLyAxMDA7CiAgICB9CgogICAgLy8gdXBkYXRlIHN0YXRlCiAgICB3ZWlSYWlzZWQgPSB3ZWlSYWlzZWQuYWRkKHdlaUFtb3VudCk7CgogICAgdG9rZW5SZXdhcmQudHJhbnNmZXIoYmVuZWZpY2lhcnksIHRva2Vucyk7CiAgICBUb2tlblB1cmNoYXNlKG1zZy5zZW5kZXIsIGJlbmVmaWNpYXJ5LCB3ZWlBbW91bnQsIHRva2Vucyk7CiAgICBmb3J3YXJkRnVuZHMoKTsKICB9CgogIC8vIHNlbmQgZXRoZXIgdG8gdGhlIGZ1bmQgY29sbGVjdGlvbiB3YWxsZXQKICAvLyBvdmVycmlkZSB0byBjcmVhdGUgY3VzdG9tIGZ1bmQgZm9yd2FyZGluZyBtZWNoYW5pc21zCiAgZnVuY3Rpb24gZm9yd2FyZEZ1bmRzKCkgaW50ZXJuYWwgewogICAgLy8gd2FsbGV0LnRyYW5zZmVyKG1zZy52YWx1ZSk7CiAgICBpZiAoIXdhbGxldC5zZW5kKG1zZy52YWx1ZSkpIHsKICAgICAgdGhyb3c7CiAgICB9CiAgfQoKICAvLyBAcmV0dXJuIHRydWUgaWYgdGhlIHRyYW5zYWN0aW9uIGNhbiBidXkgdG9rZW5zCiAgZnVuY3Rpb24gdmFsaWRQdXJjaGFzZSgpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKGJvb2wpIHsKICAgIGJvb2wgd2l0aGluUGVyaW9kID0gbm93ID49IHN0YXJ0VGltZSAmJiBub3cgPD0gZW5kVGltZTsKICAgIGJvb2wgbm9uWmVyb1B1cmNoYXNlID0gbXNnLnZhbHVlICE9IDA7CiAgICByZXR1cm4gd2l0aGluUGVyaW9kICYmIG5vblplcm9QdXJjaGFzZTsKICB9CgogIC8vIEByZXR1cm4gdHJ1ZSBpZiBjcm93ZHNhbGUgZXZlbnQgaGFzIGVuZGVkCiAgZnVuY3Rpb24gaGFzRW5kZWQoKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAoYm9vbCkgewogICAgcmV0dXJuIG5vdyA+IGVuZFRpbWU7CiAgfQoKICBmdW5jdGlvbiB3aXRoZHJhd1Rva2Vucyh1aW50MjU2IF9hbW91bnQpIHsKICAgIGlmKG1zZy5zZW5kZXIhPXdhbGxldCkgdGhyb3c7CiAgICB0b2tlblJld2FyZC50cmFuc2Zlcih3YWxsZXQsX2Ftb3VudCk7CiAgfQp9'.
	

]
