Class {
	#name : #SRT4434af2262d1868261cbda45352f611c8116b9f4,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT4434af2262d1868261cbda45352f611c8116b9f4 >> base64 [
	^ ''.
	

]
