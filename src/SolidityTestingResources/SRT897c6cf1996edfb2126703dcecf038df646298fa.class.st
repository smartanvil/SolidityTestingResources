Class {
	#name : #SRT897c6cf1996edfb2126703dcecf038df646298fa,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT897c6cf1996edfb2126703dcecf038df646298fa >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTU7Cgpjb250cmFjdCBldGhlckRlbHRhIHsKICAgIGZ1bmN0aW9uIGRlcG9zaXQoKSBwYXlhYmxlOwogICAgZnVuY3Rpb24gd2l0aGRyYXcodWludCBhbW91bnQpOwogICAgZnVuY3Rpb24gZGVwb3NpdFRva2VuKGFkZHJlc3MgdG9rZW4sIHVpbnQgYW1vdW50KTsKICAgIGZ1bmN0aW9uIHdpdGhkcmF3VG9rZW4oYWRkcmVzcyB0b2tlbiwgdWludCBhbW91bnQpOwogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgdG9rZW4sIGFkZHJlc3MgdXNlcikgY29uc3RhbnQgcmV0dXJucyAodWludCk7CiAgICBmdW5jdGlvbiBvcmRlcihhZGRyZXNzIHRva2VuR2V0LCB1aW50IGFtb3VudEdldCwgYWRkcmVzcyB0b2tlbkdpdmUsIHVpbnQgYW1vdW50R2l2ZSwgdWludCBleHBpcmVzLCB1aW50IG5vbmNlKTsKICAgIGZ1bmN0aW9uIHRyYWRlKGFkZHJlc3MgdG9rZW5HZXQsIHVpbnQgYW1vdW50R2V0LCBhZGRyZXNzIHRva2VuR2l2ZSwgdWludCBhbW91bnRHaXZlLCB1aW50IGV4cGlyZXMsIHVpbnQgbm9uY2UsIGFkZHJlc3MgdXNlciwgdWludDggdiwgYnl0ZXMzMiByLCBieXRlczMyIHMsIHVpbnQgYW1vdW50KTsKICAgIGZ1bmN0aW9uIHRyYWRlQmFsYW5jZXMoYWRkcmVzcyB0b2tlbkdldCwgdWludCBhbW91bnRHZXQsIGFkZHJlc3MgdG9rZW5HaXZlLCB1aW50IGFtb3VudEdpdmUsIGFkZHJlc3MgdXNlciwgdWludCBhbW91bnQpIHByaXZhdGU7CiAgICBmdW5jdGlvbiBhdmFpbGFibGVWb2x1bWUoYWRkcmVzcyB0b2tlbkdldCwgdWludCBhbW91bnRHZXQsIGFkZHJlc3MgdG9rZW5HaXZlLCB1aW50IGFtb3VudEdpdmUsIHVpbnQgZXhwaXJlcywgdWludCBub25jZSwgYWRkcmVzcyB1c2VyLCB1aW50OCB2LCBieXRlczMyIHIsIGJ5dGVzMzIgcykgY29uc3RhbnQgcmV0dXJucyh1aW50KTsKICAgIGZ1bmN0aW9uIGFtb3VudEZpbGxlZChhZGRyZXNzIHRva2VuR2V0LCB1aW50IGFtb3VudEdldCwgYWRkcmVzcyB0b2tlbkdpdmUsIHVpbnQgYW1vdW50R2l2ZSwgdWludCBleHBpcmVzLCB1aW50IG5vbmNlLCBhZGRyZXNzIHVzZXIsIHVpbnQ4IHYsIGJ5dGVzMzIgciwgYnl0ZXMzMiBzKSBjb25zdGFudCByZXR1cm5zKHVpbnQpOwogICAgZnVuY3Rpb24gY2FuY2VsT3JkZXIoYWRkcmVzcyB0b2tlbkdldCwgdWludCBhbW91bnRHZXQsIGFkZHJlc3MgdG9rZW5HaXZlLCB1aW50IGFtb3VudEdpdmUsIHVpbnQgZXhwaXJlcywgdWludCBub25jZSwgdWludDggdiwgYnl0ZXMzMiByLCBieXRlczMyIHMpOwp9Cgpjb250cmFjdCBUb2tlbiB7CiAgICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgc3VwcGx5KTsKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKTsKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKTsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7Cn0KCgpjb250cmFjdCBUcmFkZXJzV2FsbGV0IHsKICAgIAogICAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CiAgICBzdHJpbmcgcHVibGljIHZlcnNpb247CiAgICBldGhlckRlbHRhIHByaXZhdGUgZXRoRGVsdGE7CiAgICBhZGRyZXNzIHB1YmxpYyBldGhEZWx0YURlcG9zaXRBZGRyZXNzOwogICAgCiAgICAvLyBpbml0IHRoZSBUcmFkZXJzV2FsbGV0KCkKICAgIGZ1bmN0aW9uIFRyYWRlcnNXYWxsZXQoKSB7CiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgICAgIHZlcnNpb24gPSAiQUxQSEEgMC4xIjsKICAgICAgICBldGhEZWx0YURlcG9zaXRBZGRyZXNzID0gMHg4ZDEyQTE5N2NCMDBENDc0N2ExZmUwMzM5NTA5NWNlMkE1Q0M2ODE5OwogICAgICAgIGV0aERlbHRhID0gZXRoZXJEZWx0YShldGhEZWx0YURlcG9zaXRBZGRyZXNzKTsKICAgIH0KICAgIAogICAgLy8gZGVmYXVsdCBmdW5jdGlvbgogICAgZnVuY3Rpb24oKSBwYXlhYmxlIHsKICAgICAgICAKICAgIH0KICAgIAogICAgLy8gc3RhbmRhcmQgZXJjMjAgdG9rZW4gYmFsYW5jZSBpbiB3YWxsZXQgZnJvbSBzcGVjaWZpYyB0b2tlbiBhZGRyZXNzCiAgICBmdW5jdGlvbiB0b2tlbkJhbGFuY2UoYWRkcmVzcyB0b2tlbkFkZHJlc3MpIGNvbnN0YW50IHJldHVybnMgKHVpbnQpIHsKICAgICAgICBUb2tlbiB0b2tlbiA9IFRva2VuKHRva2VuQWRkcmVzcyk7CiAgICAgICAgcmV0dXJuIHRva2VuLmJhbGFuY2VPZih0aGlzKTsKICAgIH0KICAgIAogICAgLy8gc3RhbmRhcmQgZXJjMjAgdHJhbnNmZXJGcm9tIGZ1bmN0aW9uCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb21Ub2tlbihhZGRyZXNzIHRva2VuQWRkcmVzcywgYWRkcmVzcyBzZW5kVG8sIGFkZHJlc3Mgc2VuZEZyb20sIHVpbnQyNTYgYW1vdW50KSBleHRlcm5hbCB7CiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyPT1vd25lcik7CiAgICAgICAgVG9rZW4gdG9rZW4gPSBUb2tlbih0b2tlbkFkZHJlc3MpOwogICAgICAgIHRva2VuLnRyYW5zZmVyRnJvbShzZW5kVG8sIHNlbmRGcm9tLCBhbW91bnQpOwogICAgfQogICAgCiAgICAvLyBjaGFuZ2Ugb3duZXIgdGhpcyB0aGlzIHRyYWRlciB3YWxsZXQKICAgIGZ1bmN0aW9uIGNoYW5nZU93bmVyKGFkZHJlc3MgbmV3T3duZXIpIGV4dGVybmFsIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXI9PW93bmVyKTsKICAgICAgICBvd25lciA9IG5ld093bmVyOwogICAgfQogICAgCiAgICAvLyBzZW5kIGV0aGVyIHRvIGFub3RoZXIgd2FsbGV0CiAgICBmdW5jdGlvbiBzZW5kRXRoZXIoYWRkcmVzcyB0b0FkZHJlc3MsIHVpbnQgYW1vdW50KSBleHRlcm5hbCB7CiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyPT1vd25lcik7CiAgICAgICAgdG9BZGRyZXNzLnRyYW5zZmVyKGFtb3VudCk7CiAgICB9CiAgICAKICAgIC8vIHN0YW5kYXJkIGVyYzIwIHRyYW5zZmVyL3NlbmQgZnVuY3Rpb24KICAgIGZ1bmN0aW9uIHNlbmRUb2tlbihhZGRyZXNzIHRva2VuQWRkcmVzcywgYWRkcmVzcyBzZW5kVG8sIHVpbnQyNTYgYW1vdW50KSBleHRlcm5hbCB7CiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyPT1vd25lcik7CiAgICAgICAgVG9rZW4gdG9rZW4gPSBUb2tlbih0b2tlbkFkZHJlc3MpOwogICAgICAgIHRva2VuLnRyYW5zZmVyKHNlbmRUbywgYW1vdW50KTsKICAgIH0KICAgIAogICAgLy8gbGV0IHRoZSBvd25lciBleGVjdXRlIHdpdGggZGF0YQogICAgZnVuY3Rpb24gZXhlY3V0ZShhZGRyZXNzIF90bywgdWludCBfdmFsdWUsIGJ5dGVzIF9kYXRhKSBleHRlcm5hbCByZXR1cm5zIChieXRlczMyIF9yKSB7CiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyPT1vd25lcik7CiAgICAgICAgcmVxdWlyZShfdG8uY2FsbC52YWx1ZShfdmFsdWUpKF9kYXRhKSk7CiAgICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICAKICAgIC8vIGdldCBldGhlciBkZWx0YSB0b2tlbiBiYWxhbmNlIGZyb20gdG9rZW4gYWRkcmVzcwogICAgZnVuY3Rpb24gRXRoZXJEZWx0YVRva2VuQmFsYW5jZShhZGRyZXNzIHRva2VuQWRkcmVzcykgY29uc3RhbnQgcmV0dXJucyAodWludCkgewogICAgICAgIHJldHVybiBldGhEZWx0YS5iYWxhbmNlT2YodG9rZW5BZGRyZXNzLCB0aGlzKTsKICAgIH0KICAgIAogICAgLy8gd2l0aGRyYXcgYSB0b2tlbiBmcm9tIGV0aGVyZGVsdGEKICAgIGZ1bmN0aW9uIEV0aGVyRGVsdGFXaXRoZHJhd1Rva2VuKGFkZHJlc3MgdG9rZW5BZGRyZXNzLCB1aW50IGFtb3VudCkgcGF5YWJsZSBleHRlcm5hbCB7CiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyPT1vd25lcik7CiAgICAgICAgZXRoRGVsdGEud2l0aGRyYXdUb2tlbih0b2tlbkFkZHJlc3MsIGFtb3VudCk7CiAgICB9CiAgICAKICAgIC8vIGNoYW5nZSBldGhlcmRlbHRhIGV4Y2hhbmdlIGFkZHJlc3MKICAgIGZ1bmN0aW9uIGNoYW5nZUV0aGVyRGVsdGFEZXBvc2l0KGFkZHJlc3MgbmV3RXRoRGVsdGEpIGV4dGVybmFsIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXI9PW93bmVyKTsKICAgICAgICBldGhEZWx0YURlcG9zaXRBZGRyZXNzID0gbmV3RXRoRGVsdGE7CiAgICAgICAgZXRoRGVsdGEgPSBldGhlckRlbHRhKG5ld0V0aERlbHRhKTsKICAgIH0KICAgIAogICAgLy8gZGVwb3NpdCB0b2tlbnMgdG8gZXRoZXJkZWx0YQogICAgZnVuY3Rpb24gRXRoZXJEZWx0YURlcG9zaXRUb2tlbihhZGRyZXNzIHRva2VuQWRkcmVzcywgdWludCBhbW91bnQpIHBheWFibGUgZXh0ZXJuYWwgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlcj09b3duZXIpOwogICAgICAgIGV0aERlbHRhLmRlcG9zaXRUb2tlbih0b2tlbkFkZHJlc3MsIGFtb3VudCk7CiAgICB9CiAgICAKICAgIC8vIGFwcHJvdmUgZXRoZXJkZWx0YSB0byB0YWtlIHRha2UgYSBzcGVjaWZpYyBhbW91bnQKICAgIGZ1bmN0aW9uIEV0aGVyRGVsdGFBcHByb3ZlVG9rZW4oYWRkcmVzcyB0b2tlbkFkZHJlc3MsIHVpbnQgYW1vdW50KSBwYXlhYmxlIGV4dGVybmFsIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXI9PW93bmVyKTsKICAgICAgICBUb2tlbiB0b2tlbiA9IFRva2VuKHRva2VuQWRkcmVzcyk7CiAgICAgICAgdG9rZW4uYXBwcm92ZShldGhEZWx0YURlcG9zaXRBZGRyZXNzLCBhbW91bnQpOwogICAgfQogICAgCiAgICAvLyBkZXBvc2l0IGV0aGVyIHRvIGV0aGVyZGVsdGEKICAgIGZ1bmN0aW9uIEV0aGVyRGVsdGFEZXBvc2l0KHVpbnQgYW1vdW50KSBwYXlhYmxlIGV4dGVybmFsIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXI9PW93bmVyKTsKICAgICAgICBldGhEZWx0YS5kZXBvc2l0LnZhbHVlKGFtb3VudCkoKTsKICAgIH0KICAgIAogICAgLy8gd2l0aGRyYXcgZXRoZXIgZnJvbSBldGhlcmRlbHRhCiAgICBmdW5jdGlvbiBFdGhlckRlbHRhV2l0aGRyYXcodWludCBhbW91bnQpIGV4dGVybmFsIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXI9PW93bmVyKTsKICAgICAgICBldGhEZWx0YS53aXRoZHJhdyhhbW91bnQpOwogICAgfQogICAgCiAgICAvLyBkZXN0cm95IHRoaXMgd2FsbGV0IGFuZCBzZW5kIGFsbCBldGhlciB0byBzZW5kZXIKICAgIC8vIFRISVMgRE9FUyBOT1QgSU5DTFVERSBFUkMyMCBUT0tFTlMKICAgIGZ1bmN0aW9uIGtpbGwoKSB7CiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyPT1vd25lcik7CiAgICAgICAgc3VpY2lkZShtc2cuc2VuZGVyKTsKICAgIH0KICAgIAp9'.
	

]
