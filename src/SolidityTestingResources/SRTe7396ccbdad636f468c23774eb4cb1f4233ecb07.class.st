Class {
	#name : #SRTe7396ccbdad636f468c23774eb4cb1f4233ecb07,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTe7396ccbdad636f468c23774eb4cb1f4233ecb07 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgovKioKICogQHRpdGxlIFNhZmVNYXRoCiAqIEBkZXYgTWF0aCBvcGVyYXRpb25zIHdpdGggc2FmZXR5IGNoZWNrcyB0aGF0IHRocm93IG9uIGVycm9yCiAqLwpsaWJyYXJ5IFNhZmVNYXRoIHsKCgogIGZ1bmN0aW9uIG11bCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICBpZiAoYSA9PSAwKSB7CiAgICAgIHJldHVybiAwOwogICAgfQogICAgdWludDI1NiBjID0gYSAqIGI7CiAgICBhc3NlcnQoYyAvIGEgPT0gYik7CiAgICByZXR1cm4gYzsKICB9CgoKICBmdW5jdGlvbiBkaXYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgLy8gYXNzZXJ0KGIgPiAwKTsgLy8gU29saWRpdHkgYXV0b21hdGljYWxseSB0aHJvd3Mgd2hlbiBkaXZpZGluZyBieSAwCiAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgIC8vIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOyAvLyBUaGVyZSBpcyBubyBjYXNlIGluIHdoaWNoIHRoaXMgZG9lc24ndCBob2xkCiAgICByZXR1cm4gYzsKICB9CgoKICBmdW5jdGlvbiBzdWIodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKCiAgZnVuY3Rpb24gYWRkKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgYXNzZXJ0KGMgPj0gYSk7CiAgICByZXR1cm4gYzsKICB9Cn0KCmNvbnRyYWN0IFJUQ29pbiB7CiAgICB1c2luZyBTYWZlTWF0aCBmb3IgdWludDI1NjsKICAgIAoJYWRkcmVzcyBwdWJsaWMgb3duZXI7CiAgICBhZGRyZXNzIHB1YmxpYyBzYWxlQWdlbnQ7CiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsKCXN0cmluZyBwdWJsaWMgbmFtZTsKCXVpbnQ4IHB1YmxpYyBkZWNpbWFsczsKCXN0cmluZyBwdWJsaWMgc3ltYm9sOwoJYm9vbCBwcml2YXRlIGFsbG93RW1pc3Npb24gPSB0cnVlOwoJbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsKICAgIAogICAgCiAgICBmdW5jdGlvbiBSVENvaW4oc3RyaW5nIF9uYW1lLCBzdHJpbmcgX3N5bWJvbCwgdWludDggX2RlY2ltYWxzKSBwdWJsaWMgewoJCWRlY2ltYWxzID0gX2RlY2ltYWxzOwoJCW5hbWUgPSBfbmFtZTsKCQlzeW1ib2wgPSBfc3ltYm9sOwoJCW93bmVyID0gbXNnLnNlbmRlcjsKCX0KCQoKICAgIGZ1bmN0aW9uIGNoYW5nZVNhbGVBZ2VudChhZGRyZXNzIG5ld1NhbGVBZ2VudCkgcHVibGljIG9ubHlPd25lciB7CiAgICAgICAgcmVxdWlyZSAobmV3U2FsZUFnZW50IT1hZGRyZXNzKDApKTsKICAgICAgICB1aW50MjU2IHRva2VuQW1vdW50ID0gYmFsYW5jZXNbc2FsZUFnZW50XTsKICAgICAgICBpZiAodG9rZW5BbW91bnQ+MCkgewogICAgICAgICAgICBiYWxhbmNlc1tuZXdTYWxlQWdlbnRdID0gYmFsYW5jZXNbbmV3U2FsZUFnZW50XS5hZGQodG9rZW5BbW91bnQpOwogICAgICAgICAgICBiYWxhbmNlc1tzYWxlQWdlbnRdID0gYmFsYW5jZXNbc2FsZUFnZW50XS5zdWIodG9rZW5BbW91bnQpOwogICAgICAgICAgICBUcmFuc2ZlcihzYWxlQWdlbnQsIG5ld1NhbGVBZ2VudCwgdG9rZW5BbW91bnQpOwogICAgICAgIH0KICAgICAgICBzYWxlQWdlbnQgPSBuZXdTYWxlQWdlbnQ7CiAgICB9CgkKCQoJZnVuY3Rpb24gZW1pc3Npb24odWludDI1NiBhbW91bnQpIHB1YmxpYyBvbmx5T3duZXIgewoJICAgIHJlcXVpcmUoYWxsb3dFbWlzc2lvbik7CgkgICAgcmVxdWlyZShzYWxlQWdlbnQhPWFkZHJlc3MoMCkpOwoJICAgIHRvdGFsU3VwcGx5ID0gYW1vdW50ICogKHVpbnQyNTYoMTApICoqIGRlY2ltYWxzKTsKCQliYWxhbmNlc1tzYWxlQWdlbnRdID0gdG90YWxTdXBwbHk7CgkJVHJhbnNmZXIoMHgwLCBzYWxlQWdlbnQsIHRvdGFsU3VwcGx5KTsKCQlhbGxvd0VtaXNzaW9uID0gZmFsc2U7Cgl9CiAgICAKICAgCiAgICBmdW5jdGlvbiBidXJuKHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgewogICAgICAgIHJlcXVpcmUoX3ZhbHVlID4gMCk7CiAgICAgICAgYWRkcmVzcyBidXJuZXI7CiAgICAgICAgaWYgKG1zZy5zZW5kZXI9PW93bmVyKQogICAgICAgICAgICBidXJuZXIgPSBzYWxlQWdlbnQ7CiAgICAgICAgZWxzZQogICAgICAgICAgICBidXJuZXIgPSBtc2cuc2VuZGVyOwogICAgICAgIGJhbGFuY2VzW2J1cm5lcl0gPSBiYWxhbmNlc1tidXJuZXJdLnN1YihfdmFsdWUpOwogICAgICAgIHRvdGFsU3VwcGx5ID0gdG90YWxTdXBwbHkuc3ViKF92YWx1ZSk7CiAgICAgICAgQnVybihidXJuZXIsIF92YWx1ZSk7CiAgICB9CiAgICAKICAgIGV2ZW50IEJ1cm4oYWRkcmVzcyBpbmRleGVkIGJ1cm5lciwgdWludCBpbmRleGVkIHZhbHVlKTsKCQoJCglmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBiYWxhbmNlc1ttc2cuc2VuZGVyXS5zdWIoX3ZhbHVlKTsKICAgICAgICBiYWxhbmNlc1tfdG9dID0gYmFsYW5jZXNbX3RvXS5hZGQoX3ZhbHVlKTsKICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgICAKICAgIAogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7CiAgICAgICAgcmV0dXJuIGJhbGFuY2VzW19vd25lcl07CiAgICB9CgkKCQoJZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBuZXdPd25lcikgb25seU93bmVyIHB1YmxpYyB7CiAgICAgICAgcmVxdWlyZShuZXdPd25lciAhPSBhZGRyZXNzKDApKTsKICAgICAgICBvd25lciA9IG5ld093bmVyOyAKICAgIH0KCQoJCglmdW5jdGlvbiBjbG9zZSgpIHB1YmxpYyBvbmx5T3duZXIgewogICAgICAgIHNlbGZkZXN0cnVjdChvd25lcik7CiAgICB9CiAgICAKICAgIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgICAgIF87CiAgICB9CgoKCQoJZXZlbnQgVHJhbnNmZXIoCgkJYWRkcmVzcyBpbmRleGVkIF9mcm9tLAoJCWFkZHJlc3MgaW5kZXhlZCBfdG8sCgkJdWludCBfdmFsdWUKCSk7Cn0KCmNvbnRyYWN0IENyb3dkc2FsZSB7CiAgICAKICAgIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwogICAgYWRkcmVzcyBmdW5kc1dhbGxldDsKICAgIFJUQ29pbiBwdWJsaWMgdG9rZW47CiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKCWJvb2wgcHVibGljIG9wZW4gPSBmYWxzZTsKICAgIHVpbnQyNTYgcHVibGljIHRva2VuTGltaXQ7CiAgICAKICAgIHVpbnQyNTYgcHVibGljIHJhdGUgPSAyMDAwMDsgLy8KICAgIAogICAKICAgIGZ1bmN0aW9uIENyb3dkc2FsZShhZGRyZXNzIF9mdW5kc1dhbGxldCwgYWRkcmVzcyB0b2tlbkFkZHJlc3MsIAogICAgICAgICAgICAgICAgICAgICAgIHVpbnQyNTYgX3JhdGUsIHVpbnQyNTYgX3Rva2VuTGltaXQpIHB1YmxpYyB7CiAgICAgICAgZnVuZHNXYWxsZXQgPSBfZnVuZHNXYWxsZXQ7CiAgICAgICAgdG9rZW4gPSBSVENvaW4odG9rZW5BZGRyZXNzKTsKICAgICAgICByYXRlID0gX3JhdGU7CiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgICAgIHRva2VuTGltaXQgPSBfdG9rZW5MaW1pdCAqICh1aW50MjU2KDEwKSAqKiB0b2tlbi5kZWNpbWFscygpKTsKICAgIH0KICAgIAogICAgCiAgICBmdW5jdGlvbigpIGV4dGVybmFsIGlzT3BlbiBwYXlhYmxlIHsKICAgICAgICByZXF1aXJlKHRva2VuTGltaXQ+MCk7CiAgICAgICAgZnVuZHNXYWxsZXQudHJhbnNmZXIobXNnLnZhbHVlKTsKICAgICAgICB1aW50MjU2IHRva2VucyA9IGNhbGN1bGF0ZVRva2VuQW1vdW50KG1zZy52YWx1ZSk7CiAgICAgICAgdG9rZW4udHJhbnNmZXIobXNnLnNlbmRlciwgdG9rZW5zKTsKICAgICAgICB0b2tlbkxpbWl0ID0gdG9rZW5MaW1pdC5zdWIodG9rZW5zKTsKICAgIH0KICAKICAgIAogICAgZnVuY3Rpb24gY2hhbmdlRnVuZEFkZHJlc3MoYWRkcmVzcyBuZXdBZGRyZXNzKSBwdWJsaWMgb25seU93bmVyIHsKICAgICAgICByZXF1aXJlKG5ld0FkZHJlc3MgIT0gYWRkcmVzcygwKSk7CiAgICAgICAgZnVuZHNXYWxsZXQgPSBuZXdBZGRyZXNzOwoJfQoJCgkKICAgIGZ1bmN0aW9uIGNoYW5nZVJhdGUodWludDI1NiBuZXdSYXRlKSBwdWJsaWMgb25seU93bmVyIHsKICAgICAgICByZXF1aXJlKG5ld1JhdGU+MCk7CiAgICAgICAgcmF0ZSA9IG5ld1JhdGU7CiAgICB9CiAgICAKICAgCiAgICBmdW5jdGlvbiBjYWxjdWxhdGVUb2tlbkFtb3VudCh1aW50MjU2IHdlaUFtb3VudCkgcHVibGljIGNvbnN0YW50IHJldHVybnModWludDI1NikgewogICAgICAgIGlmICh0b2tlbi5kZWNpbWFscygpIT0xOCl7CiAgICAgICAgICAgIHVpbnQyNTYgdG9rZW5BbW91bnQgPSB3ZWlBbW91bnQubXVsKHJhdGUpLmRpdih1aW50MjU2KDEwKSAqKiAoMTgtdG9rZW4uZGVjaW1hbHMoKSkpOyAKICAgICAgICAgICAgcmV0dXJuIHRva2VuQW1vdW50OwogICAgICAgIH0KICAgICAgICBlbHNlIHJldHVybiB3ZWlBbW91bnQubXVsKHJhdGUpOwogICAgfQogICAgCiAgICBtb2RpZmllciBvbmx5T3duZXIoKSB7CiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyKTsKICAgICAgICBfOwogICAgfQogICAgCiAgICAKICAgIGZ1bmN0aW9uIGFsbG93U2FsZSgpIHB1YmxpYyBvbmx5T3duZXIgewogICAgICAgIG9wZW4gPSB0cnVlOwogICAgfQogICAgCiAgICAKICAgIGZ1bmN0aW9uIGRpc2FsbG93U2FsZSgpIHB1YmxpYyBvbmx5T3duZXIgewogICAgICAgIG9wZW4gPSBmYWxzZTsKICAgIH0KICAgIAogICAgbW9kaWZpZXIgaXNPcGVuKCkgewogICAgICAgIHJlcXVpcmUob3BlbiA9PSB0cnVlKTsKICAgICAgICBfOwogICAgfQp9'.
	

]
