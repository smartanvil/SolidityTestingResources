Class {
	#name : #SRT2066a2E0cd7f19589f582E2FC9Af9669Cc9e02F1,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT2066a2E0cd7f19589f582E2FC9Af9669Cc9e02F1 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7CgoKLy8vIEB0aXRsZSAgU2V0aGVyIHRva2VuIHByZXNhbGUgLSBzZXRoZXIuaW8gKFNFVEgpIC0gY3Jvd2RmdW5kaW5nIGNvZGUKLy8vIFdoaXRlcGFwZXI6ICAKLy8vICBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vbXdhcmUtc29sdXRpb25zL2ljb3NpdGUvbWFzdGVyL1NFVEhFUiUyMFdoaXRlcGFwZXIucGRmCi8vLyAKCmNvbnRyYWN0IFNldGhlclRva2VuIHsKICAgIHN0cmluZyBwdWJsaWMgbmFtZSA9ICJTZXRoZXIiOwogICAgc3RyaW5nIHB1YmxpYyBzeW1ib2wgPSAiU0VUSCI7CiAgICB1aW50OCBwdWJsaWMgY29uc3RhbnQgZGVjaW1hbHMgPSAxODsgIAogICAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CgogICAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgdG9rZW5zUGVyRXRoID0gMTsKICAgIHVpbnQyNTYgcHVibGljIGNvbnN0YW50IGhvd01hbnlFdGhlckluV2VpVG9CZWNvbWVPd25lciA9IDEwMDAgZXRoZXI7CiAgICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCBob3dNYW55RXRoZXJJbldlaVRvS2lsbENvbnRyYWN0ID0gNTAwIGV0aGVyOwogICAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgaG93TWFueUV0aGVySW5XZWlUb0NoYW5nZVN5bWJvbE5hbWUgPSA0MDAgZXRoZXI7CiAgICAKICAgIGJvb2wgcHVibGljIGZ1bmRpbmcgPSB0cnVlOwoKICAgIC8vIFRoZSBjdXJyZW50IHRvdGFsIHRva2VuIHN1cHBseS4KICAgIHVpbnQyNTYgdG90YWxUb2tlbnMgPSAxMDAwOwoKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgYmFsYW5jZXM7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikpIGFsbG93ZWQ7CgogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50MjU2IF92YWx1ZSk7CiAgICBldmVudCBNaWdyYXRlKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwogICAgZXZlbnQgUmVmdW5kKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgdWludDI1NiBfdmFsdWUpOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7CgogICAgZnVuY3Rpb24gU2V0aGVyVG9rZW4oKSBwdWJsaWMgewogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgICAgICBiYWxhbmNlc1tvd25lcl09MTAwMDsKICAgIH0KCiAgICBmdW5jdGlvbiBjaGFuZ2VOYW1lU3ltYm9sKHN0cmluZyBfbmFtZSwgc3RyaW5nIF9zeW1ib2wpIHBheWFibGUgZXh0ZXJuYWwKICAgIHsKICAgICAgICBpZiAobXNnLnNlbmRlcj09b3duZXIgfHwgbXNnLnZhbHVlID49aG93TWFueUV0aGVySW5XZWlUb0NoYW5nZVN5bWJvbE5hbWUpCiAgICAgICAgewogICAgICAgICAgICBuYW1lID0gX25hbWU7CiAgICAgICAgICAgIHN5bWJvbCA9IF9zeW1ib2w7CiAgICAgICAgfQogICAgfQogICAgCiAgICAKICAgIGZ1bmN0aW9uIGNoYW5nZU93bmVyIChhZGRyZXNzIF9uZXdvd25lcikgcGF5YWJsZSBleHRlcm5hbAogICAgewogICAgICAgIGlmIChtc2cudmFsdWU+PWhvd01hbnlFdGhlckluV2VpVG9CZWNvbWVPd25lcikKICAgICAgICB7CiAgICAgICAgICAgIG93bmVyLnRyYW5zZmVyKG1zZy52YWx1ZSk7CiAgICAgICAgICAgIG93bmVyLnRyYW5zZmVyKHRoaXMuYmFsYW5jZSk7CiAgICAgICAgICAgIG93bmVyPV9uZXdvd25lcjsKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24ga2lsbENvbnRyYWN0ICgpIHBheWFibGUgZXh0ZXJuYWwKICAgIHsKICAgICAgICBpZiAobXNnLnNlbmRlcj09b3duZXIgfHwgbXNnLnZhbHVlID49aG93TWFueUV0aGVySW5XZWlUb0tpbGxDb250cmFjdCkKICAgICAgICB7CiAgICAgICAgICAgIHNlbGZkZXN0cnVjdChvd25lcik7CiAgICAgICAgfQogICAgfQogICAgLy8vIEBub3RpY2UgVHJhbnNmZXIgYF92YWx1ZWAgU0VUSCB0b2tlbnMgZnJvbSBzZW5kZXIncyBhY2NvdW50CiAgICAvLy8gYG1zZy5zZW5kZXJgIHRvIHByb3ZpZGVkIGFjY291bnQgYWRkcmVzcyBgX3RvYC4KICAgIC8vLyBAbm90aWNlIFRoaXMgZnVuY3Rpb24gaXMgZGlzYWJsZWQgZHVyaW5nIHRoZSBmdW5kaW5nLgogICAgLy8vIEBkZXYgUmVxdWlyZWQgc3RhdGU6IE9wZXJhdGlvbmFsCiAgICAvLy8gQHBhcmFtIF90byBUaGUgYWRkcmVzcyBvZiB0aGUgdG9rZW5zIHJlY2lwaWVudAogICAgLy8vIEBwYXJhbSBfdmFsdWUgVGhlIGFtb3VudCBvZiB0b2tlbiB0byBiZSB0cmFuc2ZlcnJlZAogICAgLy8vIEByZXR1cm4gV2hldGhlciB0aGUgdHJhbnNmZXIgd2FzIHN1Y2Nlc3NmdWwgb3Igbm90CiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICAgICAgLy8gQWJvcnQgaWYgbm90IGluIE9wZXJhdGlvbmFsIHN0YXRlLgogICAgICAgIAogICAgICAgIHZhciBzZW5kZXJCYWxhbmNlID0gYmFsYW5jZXNbbXNnLnNlbmRlcl07CiAgICAgICAgaWYgKHNlbmRlckJhbGFuY2UgPj0gX3ZhbHVlICYmIF92YWx1ZSA+IDApIHsKICAgICAgICAgICAgc2VuZGVyQmFsYW5jZSAtPSBfdmFsdWU7CiAgICAgICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gc2VuZGVyQmFsYW5jZTsKICAgICAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfdmFsdWU7CiAgICAgICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfQogICAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gbWludFRvKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgICAgICAvLyBBYm9ydCBpZiBub3QgaW4gT3BlcmF0aW9uYWwgc3RhdGUuCiAgICAgICAgCiAgICAgICAgICAgIGJhbGFuY2VzW190b10gKz0gX3ZhbHVlOwogICAgICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgfQogICAgCgogICAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBleHRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgcmV0dXJuIHRvdGFsVG9rZW5zOwogICAgfQoKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgZXh0ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogICAgfQoKCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oCiAgICAgICAgIGFkZHJlc3MgX2Zyb20sCiAgICAgICAgIGFkZHJlc3MgX3RvLAogICAgICAgICB1aW50MjU2IF9hbW91bnQKICAgICApIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICAgaWYgKGJhbGFuY2VzW19mcm9tXSA+PSBfYW1vdW50CiAgICAgICAgICAgICAmJiBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA+PSBfYW1vdW50CiAgICAgICAgICAgICAmJiBfYW1vdW50ID4gMAogICAgICAgICAgICAgJiYgYmFsYW5jZXNbX3RvXSArIF9hbW91bnQgPiBiYWxhbmNlc1tfdG9dKSB7CiAgICAgICAgICAgICBiYWxhbmNlc1tfZnJvbV0gLT0gX2Ftb3VudDsKICAgICAgICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdIC09IF9hbW91bnQ7CiAgICAgICAgICAgICBiYWxhbmNlc1tfdG9dICs9IF9hbW91bnQ7CiAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgfQogIH0KCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX2Ftb3VudCkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF9hbW91bnQ7CiAgICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfYW1vdW50KTsKICAgICAgICAgCiAgICAgICAgIHJldHVybiB0cnVlOwogICAgIH0KLy8gQ3Jvd2RmdW5kaW5nOgoKICAgIC8vLyBAbm90aWNlIENyZWF0ZSB0b2tlbnMgd2hlbiBmdW5kaW5nIGlzIGFjdGl2ZS4KICAgIC8vLyBAZGV2IFJlcXVpcmVkIHN0YXRlOiBGdW5kaW5nIEFjdGl2ZQogICAgLy8vIEBkZXYgU3RhdGUgdHJhbnNpdGlvbjogLT4gRnVuZGluZyBTdWNjZXNzIChvbmx5IGlmIGNhcCByZWFjaGVkKQogICAgZnVuY3Rpb24gKCkgcGF5YWJsZSBleHRlcm5hbCB7CiAgICAgICAgLy8gQWJvcnQgaWYgbm90IGluIEZ1bmRpbmcgQWN0aXZlIHN0YXRlLgogICAgICAgIC8vIFRoZSBjaGVja3MgYXJlIHNwbGl0IChpbnN0ZWFkIG9mIHVzaW5nIG9yIG9wZXJhdG9yKSBiZWNhdXNlIGl0IGlzCiAgICAgICAgLy8gY2hlYXBlciB0aGlzIHdheS4KICAgICAgICBpZiAoIWZ1bmRpbmcpIHJldmVydCgpOwogICAgICAgIAogICAgICAgIC8vIERvIG5vdCBhbGxvdyBjcmVhdGluZyAwIG9yIG1vcmUgdGhhbiB0aGUgY2FwIHRva2Vucy4KICAgICAgICBpZiAobXNnLnZhbHVlID09IDApIHJldmVydCgpOwogICAgICAgIAogICAgICAgIHZhciBudW1Ub2tlbnMgPSBtc2cudmFsdWUgKiAoMTAwMC4wL3RvdGFsVG9rZW5zKTsKICAgICAgICB0b3RhbFRva2VucyArPSBudW1Ub2tlbnM7CgogICAgICAgIC8vIEFzc2lnbiBuZXcgdG9rZW5zIHRvIHRoZSBzZW5kZXIKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSArPSBudW1Ub2tlbnM7CgogICAgICAgIC8vIExvZyB0b2tlbiBjcmVhdGlvbiBldmVudAogICAgICAgIFRyYW5zZmVyKDAsIG1zZy5zZW5kZXIsIG51bVRva2Vucyk7CiAgICB9Cn0='.
	

]
