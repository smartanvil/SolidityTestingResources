Class {
	#name : #SRT51fdc3827865af9bde006a2ad6d593d4aca5e591,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT51fdc3827865af9bde006a2ad6d593d4aca5e591 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4gMC40LjE3OwoKbGlicmFyeSBTYWZlTWF0aCB7CiAgICBmdW5jdGlvbiBtdWwodWludCBhLCB1aW50IGIpIHB1cmUgaW50ZXJuYWwgcmV0dXJucyh1aW50KSB7CiAgICAgICAgdWludCBjID0gYSAqIGI7CiAgICAgICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgICAgICByZXR1cm4gYzsKICAgIH0KCgogICAgZnVuY3Rpb24gc3ViKHVpbnQgYSwgdWludCBiKSBwdXJlIGludGVybmFsIHJldHVybnModWludCkgewogICAgICAgIGFzc2VydChiIDw9IGEpOwogICAgICAgIHJldHVybiBhIC0gYjsKICAgIH0KCiAgICBmdW5jdGlvbiBhZGQodWludCBhLCB1aW50IGIpIHB1cmUgaW50ZXJuYWwgcmV0dXJucyh1aW50KSB7CiAgICAgICAgdWludCBjID0gYSArIGI7CiAgICAgICAgYXNzZXJ0KGMgPj0gYSAmJiBjID49IGIpOwogICAgICAgIHJldHVybiBjOwogICAgfQp9Cgpjb250cmFjdCBFUkMyMCB7CiAgICB1aW50IHB1YmxpYyB0b3RhbFN1cHBseTsKCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyB3aG8pIHB1YmxpYyB2aWV3IHJldHVybnModWludCk7CgogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3Mgb3duZXIsIGFkZHJlc3Mgc3BlbmRlcikgcHVibGljIHZpZXcgcmV0dXJucyh1aW50KTsKCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIHRvLCB1aW50IHZhbHVlKSBwdWJsaWMgcmV0dXJucyhib29sIG9rKTsKCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvLCB1aW50IHZhbHVlKSBwdWJsaWMgcmV0dXJucyhib29sIG9rKTsKCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3Mgc3BlbmRlciwgdWludCB2YWx1ZSkgcHVibGljIHJldHVybnMoYm9vbCBvayk7CgogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludCB2YWx1ZSk7CiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBzcGVuZGVyLCB1aW50IHZhbHVlKTsKfQoKCmNvbnRyYWN0IE93bmFibGUgewogICAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CgogICAgZnVuY3Rpb24gT3duYWJsZSgpIHB1YmxpYyB7CiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpIHB1YmxpYyBvbmx5T3duZXIgewogICAgICAgIGlmIChuZXdPd25lciAhPSBhZGRyZXNzKDApKSAKICAgICAgICAgICAgb3duZXIgPSBuZXdPd25lcjsKICAgIH0KCiAgICBmdW5jdGlvbiBraWxsKCkgcHVibGljIHsKICAgICAgICBpZiAobXNnLnNlbmRlciA9PSBvd25lcikgCiAgICAgICAgICAgIHNlbGZkZXN0cnVjdChvd25lcik7CiAgICB9CgogICAgbW9kaWZpZXIgb25seU93bmVyKCkgewogICAgICAgIGlmIChtc2cuc2VuZGVyID09IG93bmVyKQogICAgICAgICAgICBfOwogICAgfQp9CgoKCgovLyBUaGUgRVRIRCBUb2tlbiAKY29udHJhY3QgVG9rZW4gaXMgRVJDMjAsICBPd25hYmxlIHsKCiAgICB1c2luZyBTYWZlTWF0aCBmb3IgdWludDsKICAgIC8vIFB1YmxpYyB2YXJpYWJsZXMgb2YgdGhlIHRva2VuCiAgICBzdHJpbmcgcHVibGljIG5hbWU7CiAgICBzdHJpbmcgcHVibGljIHN5bWJvbDsKICAgIHVpbnQ4IHB1YmxpYyBkZWNpbWFsczsgLy8gSG93IG1hbnkgZGVjaW1hbHMgdG8gc2hvdy4KICAgIHN0cmluZyBwdWJsaWMgdmVyc2lvbiA9ICJ2MC4xIjsgICAgICAgCiAgICB1aW50IHB1YmxpYyB0b3RhbFN1cHBseTsKICAgIGJvb2wgcHVibGljIGxvY2tlZDsKICAgIGFkZHJlc3MgcHVibGljIGNyb3dkU2FsZUFkZHJlc3M7CiAgICAKCgogICAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQpIGJhbGFuY2VzOwogICAgbWFwcGluZyhhZGRyZXNzID0+IG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50KSkgYWxsb3dlZDsKCiAgICAvLyB0b2tlbnMgYXJlIGxvY2tlZCBkdXJpbmcgdGhlIElDTy4gQWxsb3cgdHJhbnNmZXIgb2YgdG9rZW5zIGFmdGVyIElDTy4gCiAgICBtb2RpZmllciBvbmx5VW5sb2NrZWQoKSB7CiAgICAgICAgaWYgKG1zZy5zZW5kZXIgIT0gY3Jvd2RTYWxlQWRkcmVzcyAmJiBsb2NrZWQpIAogICAgICAgICAgICByZXZlcnQoKTsKICAgICAgICBfOwogICAgfQoKCiAgICAvLyBhbGxvdyBidXJuaW5nIG9mIHRva2VucyBvbmx5IGJ5IGF1dGhvcml6ZWQgdXNlcnMgCiAgICBtb2RpZmllciBvbmx5QXV0aG9yaXplZCgpIHsKICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lciAmJiBtc2cuc2VuZGVyICE9IGNyb3dkU2FsZUFkZHJlc3MgKSAKICAgICAgICAgICAgcmV2ZXJ0KCk7CiAgICAgICAgXzsKICAgIH0KCgogICAgLy8gVGhlIFRva2VuIAogICAgZnVuY3Rpb24gVG9rZW4oYWRkcmVzcyBfY3Jvd2RTYWxlQWRkcmVzcykgcHVibGljIHsKICAgICAgICAKICAgICAgICBsb2NrZWQgPSB0cnVlOyAgLy8gTG9jayB0aGUgdHJhbnNmQ3Jvd2RzYWxlZXIgZnVuY3Rpb24gZHVyaW5nIHRoZSBjcm93ZHNhbGUKICAgICAgICB0b3RhbFN1cHBseSA9IDIxMDAwMDAwZTE4OyAKICAgICAgICBuYW1lID0gIkxvdHRlcnkgVG9rZW4iOyAvLyBTZXQgdGhlIG5hbWUgZm9yIGRpc3BsYXkgcHVycG9zZXMKICAgICAgICBzeW1ib2wgPSAiRVRIRCI7IC8vIFNldCB0aGUgc3ltYm9sIGZvciBkaXNwbGF5IHB1cnBvc2VzCiAgICAgICAgZGVjaW1hbHMgPSAxODsgLy8gQW1vdW50IG9mIGRlY2ltYWxzIGZvciBkaXNwbGF5IHB1cnBvc2VzCiAgICAgICAgY3Jvd2RTYWxlQWRkcmVzcyA9IF9jcm93ZFNhbGVBZGRyZXNzOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICBiYWxhbmNlc1tjcm93ZFNhbGVBZGRyZXNzXSA9IHRvdGFsU3VwcGx5OwogICAgfQoKICAgIGZ1bmN0aW9uIHVubG9jaygpIHB1YmxpYyBvbmx5QXV0aG9yaXplZCB7CiAgICAgICAgbG9ja2VkID0gZmFsc2U7CiAgICB9CgogICAgZnVuY3Rpb24gbG9jaygpIHB1YmxpYyBvbmx5QXV0aG9yaXplZCB7CiAgICAgICAgbG9ja2VkID0gdHJ1ZTsKICAgIH0KICAgIAoKICAgIGZ1bmN0aW9uIGJ1cm4oIGFkZHJlc3MgX21lbWJlciwgdWludDI1NiBfdmFsdWUpIHB1YmxpYyBvbmx5QXV0aG9yaXplZCByZXR1cm5zKGJvb2wpIHsKICAgICAgICBiYWxhbmNlc1tfbWVtYmVyXSA9IGJhbGFuY2VzW19tZW1iZXJdLnN1YihfdmFsdWUpOwogICAgICAgIHRvdGFsU3VwcGx5ID0gdG90YWxTdXBwbHkuc3ViKF92YWx1ZSk7CiAgICAgICAgVHJhbnNmZXIoX21lbWJlciwgMHgwLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSkgcHVibGljIG9ubHlVbmxvY2tlZCByZXR1cm5zKGJvb2wpIHsKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IGJhbGFuY2VzW21zZy5zZW5kZXJdLnN1YihfdmFsdWUpOwogICAgICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfdmFsdWUpOwogICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICAKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyBvbmx5VW5sb2NrZWQgcmV0dXJucyhib29sIHN1Y2Nlc3MpIHsKICAgICAgICByZXF1aXJlIChiYWxhbmNlc1tfZnJvbV0gPj0gX3ZhbHVlKTsgLy8gQ2hlY2sgaWYgdGhlIHNlbmRlciBoYXMgZW5vdWdoICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIHJlcXVpcmUgKF92YWx1ZSA8PSBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSk7IC8vIENoZWNrIGlmIGFsbG93ZWQgaXMgZ3JlYXRlciBvciBlcXVhbCAgICAgICAgCiAgICAgICAgYmFsYW5jZXNbX2Zyb21dID0gYmFsYW5jZXNbX2Zyb21dLnN1YihfdmFsdWUpOyAvLyBTdWJ0cmFjdCBmcm9tIHRoZSBzZW5kZXIKICAgICAgICBiYWxhbmNlc1tfdG9dID0gYmFsYW5jZXNbX3RvXS5hZGQoX3ZhbHVlKTsgLy8gQWRkIHRoZSBzYW1lIHRvIHRoZSByZWNpcGllbnQKICAgICAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA9IGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdLnN1YihfdmFsdWUpOwogICAgICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgdmlldyByZXR1cm5zKHVpbnQgYmFsYW5jZSkgewogICAgICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogICAgfQoKCiAgICAvKioKICAgICogQGRldiBBcHByb3ZlIHRoZSBwYXNzZWQgYWRkcmVzcyB0byBzcGVuZCB0aGUgc3BlY2lmaWVkIGFtb3VudCBvZiB0b2tlbnMgb24gYmVoYWxmIG9mIG1zZy5zZW5kZXIuCiAgICAqCiAgICAqIEJld2FyZSB0aGF0IGNoYW5naW5nIGFuIGFsbG93YW5jZSB3aXRoIHRoaXMgbWV0aG9kIGJyaW5ncyB0aGUgcmlzayB0aGF0IHNvbWVvbmUgbWF5IHVzZSBib3RoIHRoZSBvbGQKICAgICogYW5kIHRoZSBuZXcgYWxsb3dhbmNlIGJ5IHVuZm9ydHVuYXRlIHRyYW5zYWN0aW9uIG9yZGVyaW5nLiBPbmUgcG9zc2libGUgc29sdXRpb24gdG8gbWl0aWdhdGUgdGhpcwogICAgKiByYWNlIGNvbmRpdGlvbiBpcyB0byBmaXJzdCByZWR1Y2UgdGhlIHNwZW5kZXIncyBhbGxvd2FuY2UgdG8gMCBhbmQgc2V0IHRoZSBkZXNpcmVkIHZhbHVlIGFmdGVyd2FyZHM6CiAgICAqIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8yMCNpc3N1ZWNvbW1lbnQtMjYzNTI0NzI5CiAgICAqIEBwYXJhbSBfc3BlbmRlciBUaGUgYWRkcmVzcyB3aGljaCB3aWxsIHNwZW5kIHRoZSBmdW5kcy4KICAgICogQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IG9mIHRva2VucyB0byBiZSBzcGVudC4KICAgICovCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyhib29sKSB7CiAgICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgoKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgcHVibGljIGNvbnN0YW50IHJldHVybnModWludCByZW1haW5pbmcpIHsKICAgICAgICByZXR1cm4gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsKICAgIH0KCiAgICAvKioKICAgICogYXBwcm92ZSBzaG91bGQgYmUgY2FsbGVkIHdoZW4gYWxsb3dlZFtfc3BlbmRlcl0gPT0gMC4gVG8gaW5jcmVtZW50CiAgICAqIGFsbG93ZWQgdmFsdWUgaXMgYmV0dGVyIHRvIHVzZSB0aGlzIGZ1bmN0aW9uIHRvIGF2b2lkIDIgY2FsbHMgKGFuZCB3YWl0IHVudGlsCiAgICAqIHRoZSBmaXJzdCB0cmFuc2FjdGlvbiBpcyBtaW5lZCkKICAgICogRnJvbSBNb25vbGl0aERBTyBUb2tlbi5zb2wKICAgICovCiAgICBmdW5jdGlvbiBpbmNyZWFzZUFwcHJvdmFsIChhZGRyZXNzIF9zcGVuZGVyLCB1aW50IF9hZGRlZFZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXS5hZGQoX2FkZGVkVmFsdWUpOwogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gZGVjcmVhc2VBcHByb3ZhbCAoYWRkcmVzcyBfc3BlbmRlciwgdWludCBfc3VidHJhY3RlZFZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgdWludCBvbGRWYWx1ZSA9IGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdOwogICAgICAgIGlmIChfc3VidHJhY3RlZFZhbHVlID4gb2xkVmFsdWUpIHsKICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IDA7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IG9sZFZhbHVlLnN1Yihfc3VidHJhY3RlZFZhbHVlKTsKICAgICAgICB9CiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCn0='.
	

]
