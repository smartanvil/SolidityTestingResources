Class {
	#name : #SRT097bdd12c9544d6205f36e9b01640567afed2259,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT097bdd12c9544d6205f36e9b01640567afed2259 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7CgoKCgpjb250cmFjdCBIb3VzZUlDTyB7CiAgICAKICAgIGZ1bmN0aW9uIG5hbWUoKSBjb25zdGFudCByZXR1cm5zIChzdHJpbmcpIHsgcmV0dXJuICJIb3VzZSI7IH0KICAgIGZ1bmN0aW9uIHN5bWJvbCgpIGNvbnN0YW50IHJldHVybnMgKHN0cmluZykgeyByZXR1cm4gIkhTRSI7IH0KICAgIGZ1bmN0aW9uIGRlY2ltYWxzKCkgY29uc3RhbnQgcmV0dXJucyAodWludDgpIHsgcmV0dXJuIDA7IH0KCQoKICAgIHVpbnQyNTYgcHVibGljIElOSVRJQUxfU1VQUExZOwoJdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7CgkKCXVpbnQyNTYgcHVibGljIHRvdGFsQ29udHJpYjsKICAgIAogICAgdWludDI1NiBwdWJsaWMgcmF0ZTsKICAKICAgIGFkZHJlc3MgcHVibGljIG93bmVyOwkJCQkJCSAgICAvL2luaXQgb3duZXIgYWRkcmVzcwoJCgl1aW50MjU2IHB1YmxpYyBhbW91bnQ7CgkKCQoJZnVuY3Rpb24gSG91c2VJQ08oKSB7CiAgICAgICAgSU5JVElBTF9TVVBQTFkgPSAzMDAwMDAwMDsgICAgICAgICAgICAgICAgICAvL1N0YXJ0aW5nIGNvaW4gc3VwcGx5CgkJdG90YWxTdXBwbHkgPSAwOwoJCQoJCXRvdGFsQ29udHJpYiA9IDA7CiAgICAgICAgCiAgICAgICAgcmF0ZSA9IDUwMDA7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL0hvdyBtYW55IHRva2VucyBwZXIgRVRIIGdpdmVuCgkJCgkJb3duZXIgPSBtc2cuc2VuZGVyOwkJCSAgICAgICAgICAgICAgICAvL01ha2Ugb3duZXIgb2YgY29udHJhY3QgdGhlIGNyZWF0b3IKCQkKCQliYWxhbmNlc1ttc2cuc2VuZGVyXSA9IElOSVRJQUxfU1VQUExZOwkJLy9TZW5kIG93bmVyIG9mIGNvbnRyYWN0IGFsbCBzdGFydGluZyB0b2tlbnMKCX0KCQoJCgkvL1RoaXMgZnVuY3Rpb24gaXMgY2FsbGVkIHdoZW4gRXRoZXIgaXMgc2VudCB0byB0aGUgY29udHJhY3QgYWRkcmVzcwoJLy9FdmVuIGlmIDAgZXRoZXIgaXMgc2VudC4KCWZ1bmN0aW9uICgpIHBheWFibGUgewoJICAgIAoJICAgIHVpbnQyNTYgdHJ5QW1vdW50ID0gZGl2KChtdWwobXNnLnZhbHVlLCByYXRlKSksIDEgZXRoZXIpOyAgICAgICAgICAgICAgICAgICAvL0Rvbid0IGxldCBwZW9wbGUgYnV5IG1vcmUgdG9rZW5zIHRoYW4gdGhlcmUgYXJlLgoJICAgIAoJCWlmIChtc2cudmFsdWUgPT0gMCB8fCBtc2cudmFsdWUgPCAwIHx8IGJhbGFuY2VPZihvd25lcikgPCB0cnlBbW91bnQpIHsJCS8vSWYgemVybyBldGhlciBpcyBzZW50LCBraWxsLiBEbyBub3RoaW5nLiAKCQkJcmV2ZXJ0KCk7CgkJfQoJCQoJICAgIGFtb3VudCA9IDA7CQkJCQkJCQkJICAgICAgICAgICAgICAgIC8vc2V0IHRoZSAnYW1vdW50JyB2YXIgYmFjayB0byB6ZXJvCgkJYW1vdW50ID0gZGl2KChtdWwobXNnLnZhbHVlLCByYXRlKSksIDEgZXRoZXIpOwkJCQkvL3Rha2Ugc2VudCBldGhlciwgbXVsdGlwbHkgaXQgYnkgdGhlIHJhdGUgdGhlbiBkaXZpZGUgYnkgMSBldGhlci4KCQl0cmFuc2ZlckZyb20ob3duZXIsIG1zZy5zZW5kZXIsIGFtb3VudCk7ICAgICAgICAgICAgICAgICAgICAvL1NlbmQgdG9rZW5zIHRvIGJ1eWVyCgkJdG90YWxTdXBwbHkgKz0gYW1vdW50OwkJCQkJCQkJCQkvL0tlZXAgdHJhY2sgb2YgaG93IG1hbnkgaGF2ZSBiZWVuIHNvbGQuCgkJdG90YWxDb250cmliID0gKHRvdGFsQ29udHJpYiArIG1zZy52YWx1ZSk7CgkJYW1vdW50ID0gMDsJCQkJCQkJCQkgICAgICAgICAgICAgICAgLy9zZXQgdGhlICdhbW91bnQnIHZhciBiYWNrIHRvIHplcm8KCQkKCQkKCQlvd25lci50cmFuc2Zlcihtc2cudmFsdWUpOwkJCQkJICAgICAgICAgICAgICAgIC8vU2VuZCB0aGUgRVRIIHRvIGNvbnRyYWN0IG93bmVyLgoKCX0JCgkKCQoJCiAgCiAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50MjU2IF92YWx1ZSk7CiAgCiAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpIGJhbGFuY2VzOwoKCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewoKICAgICAgICBpZiAoX3ZhbHVlID09IDApIHsgcmV0dXJuIGZhbHNlOyB9CgogICAgICAgIHVpbnQyNTYgZnJvbUJhbGFuY2UgPSBiYWxhbmNlc1ttc2cuc2VuZGVyXTsKCiAgICAgICAgYm9vbCBzdWZmaWNpZW50RnVuZHMgPSBmcm9tQmFsYW5jZSA+PSBfdmFsdWU7CiAgICAgICAgYm9vbCBvdmVyZmxvd2VkID0gYmFsYW5jZXNbX3RvXSArIF92YWx1ZSA8IGJhbGFuY2VzW190b107CiAgICAgICAgCiAgICAgICAgaWYgKHN1ZmZpY2llbnRGdW5kcyAmJiAhb3ZlcmZsb3dlZCkgewogICAgICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgICAgIGJhbGFuY2VzW190b10gKz0gX3ZhbHVlOwogICAgICAgICAgICAKICAgICAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9IGVsc2UgeyByZXR1cm4gZmFsc2U7IH0KICAgIH0KCgoKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgeyByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsgfQoKCgogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CgogICAgICAgIGlmIChfdmFsdWUgPT0gMCkgeyByZXR1cm4gZmFsc2U7IH0KICAgICAgICAKICAgICAgICB1aW50MjU2IGZyb21CYWxhbmNlID0gYmFsYW5jZXNbb3duZXJdOwoKICAgICAgICBib29sIHN1ZmZpY2llbnRGdW5kcyA9IGZyb21CYWxhbmNlID49IF92YWx1ZTsKCiAgICAgICAgaWYgKHN1ZmZpY2llbnRGdW5kcykgewogICAgICAgICAgICBiYWxhbmNlc1tfdG9dICs9IF92YWx1ZTsKICAgICAgICAgICAgYmFsYW5jZXNbX2Zyb21dIC09IF92YWx1ZTsKICAgICAgICAgICAgCiAgICAgICAgICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0gZWxzZSB7IHJldHVybiBmYWxzZTsgfQogICAgfQoKCQogICAgZnVuY3Rpb24gZ2V0U3RhdHMoKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2LCB1aW50MjU2KSB7CiAgICAgICAgcmV0dXJuICh0b3RhbFN1cHBseSwgdG90YWxDb250cmliKTsKICAgIH0KCgkKCQogIGZ1bmN0aW9uIG11bCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSAqIGI7CiAgICBhc3NlcnQoYSA9PSAwIHx8IGMgLyBhID09IGIpOwogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBkaXYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIC8vIGFzc2VydChiID4gMCk7IC8vIFNvbGlkaXR5IGF1dG9tYXRpY2FsbHkgdGhyb3dzIHdoZW4gZGl2aWRpbmcgYnkgMAogICAgdWludDI1NiBjID0gYSAvIGI7CiAgICAvLyBhc3NlcnQoYSA9PSBiICogYyArIGEgJSBiKTsgLy8gVGhlcmUgaXMgbm8gY2FzZSBpbiB3aGljaCB0aGlzIGRvZXNuJ3QgaG9sZAogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBzdWIodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIGFzc2VydChiIDw9IGEpOwogICAgcmV0dXJuIGEgLSBiOwogIH0KCiAgZnVuY3Rpb24gYWRkKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhICsgYjsKICAgIGFzc2VydChjID49IGEpOwogICAgcmV0dXJuIGM7CiAgfQoJCgkKCQp9'.
	

]
