Class {
	#name : #SRT4c478ac32725872e30bca49957abc7dbb325cb21,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT4c478ac32725872e30bca49957abc7dbb325cb21 >> base64 [
	^ ''.
	

]
