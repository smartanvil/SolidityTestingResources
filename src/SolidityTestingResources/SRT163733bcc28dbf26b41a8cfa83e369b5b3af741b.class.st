Class {
	#name : #SRT163733bcc28dbf26b41a8cfa83e369b5b3af741b,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT163733bcc28dbf26b41a8cfa83e369b5b3af741b >> base64 [
	^ ''.
	

]
