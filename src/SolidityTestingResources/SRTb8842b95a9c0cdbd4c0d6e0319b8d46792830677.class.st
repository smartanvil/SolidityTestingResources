Class {
	#name : #SRTb8842b95a9c0cdbd4c0d6e0319b8d46792830677,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTb8842b95a9c0cdbd4c0d6e0319b8d46792830677 >> base64 [
	^ ''.
	

]
