Class {
	#name : #SRT3eb6025d2eb27f038508192bffb71ef823e9b3f8,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT3eb6025d2eb27f038508192bffb71ef823e9b3f8 >> base64 [
	^ ''.
	

]
