Class {
	#name : #SRT8a5907bc817745cc55d14721ea733fe0566c6618,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT8a5907bc817745cc55d14721ea733fe0566c6618 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTY7Ci8qCkVUSEIgQ3Jvd2RzYWxlIENvbnRyYWN0CgpDb250cmFjdCBkZXZlbG9wZXI6IEZhcmVzIEEuIEFrZWwgQy4KPGEgaHJlZj0iL2Nkbi1jZ2kvbC9lbWFpbC1wcm90ZWN0aW9uIiBjbGFzcz0iX19jZl9lbWFpbF9fIiBkYXRhLWNmZW1haWw9IjQ1MjM2YjI0MmIzMTJhMmIyYzJhNmIyNDJlMjAyOTA1MjIyODI0MmMyOTZiMjYyYTI4Ij5bZW1haWwmIzE2MDtwcm90ZWN0ZWRdPC9hPgpNSVQgUEdQIEtFWSBJRDogMDc4RTQxQ0IKKi8KCi8qKgogKiBAdGl0bGUgU2FmZU1hdGggYnkgT3BlblplcHBlbGluCiAqIEBkZXYgTWF0aCBvcGVyYXRpb25zIHdpdGggc2FmZXR5IGNoZWNrcyB0aGF0IHRocm93IG9uIGVycm9yCiAqLwpsaWJyYXJ5IFNhZmVNYXRoIHsKCiAgICBmdW5jdGlvbiBkaXYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSAvIGI7CiAgICByZXR1cm4gYzsKICAgIH0KCiAgICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgICAgIGFzc2VydChjID49IGEpOwogICAgICAgIHJldHVybiBjOwogICAgfQoKICAgIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgYXNzZXJ0KGIgPD0gYSk7CiAgICAgICAgcmV0dXJuIGEgLSBiOwogIH0KfQoKY29udHJhY3QgRVJDMjBUb2tlbiB7CgoJZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3Mgd2hvKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludCk7CglmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIHRvLCB1aW50IHZhbHVlKSBwdWJsaWM7CQp9CgovKioKICogVGhpcyBjb250cmFjdCBpcyBhZG1pbmlzdGVyZWQKICovCgpjb250cmFjdCBhZG1pbmVkIHsKICAgIGFkZHJlc3MgcHVibGljIGFkbWluOyAvL0FkbWluIGFkZHJlc3MgaXMgcHVibGljCiAgICAvKioKICAgICogQGRldiBUaGlzIGNvbnN0cnVjdG9yIHNldCB0aGUgaW5pdGlhbCBhZG1pbiBvZiB0aGUgY29udHJhY3QKICAgICovCiAgICBmdW5jdGlvbiBhZG1pbmVkKCkgaW50ZXJuYWwgewogICAgICAgIGFkbWluID0gbXNnLnNlbmRlcjsgLy9TZXQgaW5pdGlhbCBhZG1pbiB0byBjb250cmFjdCBjcmVhdG9yCiAgICAgICAgQWRtaW5lZChhZG1pbik7CiAgICB9CgogICAgbW9kaWZpZXIgb25seUFkbWluKCkgeyAvL0EgbW9kaWZpZXIgdG8gZGVmaW5lIGFkbWluLWFsbG93ZWQgZnVuY3Rpb25zCiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyID09IGFkbWluKTsKICAgICAgICBfOwogICAgfQogICAgLyoqCiAgICAqIEBkZXYgVHJhbnNmZXIgdGhlIGFkbWluc2hpcCBvZiB0aGUgY29udHJhY3QKICAgICogQHBhcmFtIF9uZXdBZG1pbiBUaGUgYWRkcmVzcyBvZiB0aGUgbmV3IGFkbWluLgogICAgKi8KICAgIGZ1bmN0aW9uIHRyYW5zZmVyQWRtaW5zaGlwKGFkZHJlc3MgX25ld0FkbWluKSBvbmx5QWRtaW4gcHVibGljIHsgLy9BZG1pbiBjYW4gYmUgdHJhbnNmZXJlZAogICAgICAgIHJlcXVpcmUoX25ld0FkbWluICE9IGFkZHJlc3MoMCkpOwogICAgICAgIGFkbWluID0gX25ld0FkbWluOwogICAgICAgIFRyYW5zZmVyQWRtaW5zaGlwKGFkbWluKTsKICAgIH0KICAgIC8vQWxsIGFkbWluIGFjdGlvbnMgaGF2ZSBhIGxvZyBmb3IgcHVibGljIHJldmlldwogICAgZXZlbnQgVHJhbnNmZXJBZG1pbnNoaXAoYWRkcmVzcyBuZXdBZG1pbik7CiAgICBldmVudCBBZG1pbmVkKGFkZHJlc3MgYWRtaW5pc3RyYWRvcik7Cn0KCgpjb250cmFjdCBFVEhCQ3Jvd2RzYWxlIGlzIGFkbWluZWR7CgkvKioKICAgICogVmFyaWFibGVzIGRlZmluaXRpb24gLSBQdWJsaWMKICAgICovCiAgICB1aW50MjU2IHB1YmxpYyBzdGFydFRpbWUgPSBub3c7IC8vYmxvY2stdGltZSB3aGVuIGl0IHdhcyBkZXBsb3llZAogICAgdWludDI1NiBwdWJsaWMgdG90YWxEaXN0cmlidXRlZCA9IDA7CiAgICB1aW50MjU2IHB1YmxpYyBjdXJyZW50QmFsYW5jZSA9IDA7CiAgICBFUkMyMFRva2VuIHB1YmxpYyB0b2tlblJld2FyZDsKICAgIGFkZHJlc3MgcHVibGljIGNyZWF0b3I7CiAgICBhZGRyZXNzIHB1YmxpYyBldGhXYWxsZXQ7CiAgICBzdHJpbmcgcHVibGljIGNhbXBhaWduVXJsOwogICAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgdmVyc2lvbiA9IDE7CiAgICB1aW50MjU2IHB1YmxpYyBleGNoYW5nZVJhdGUgPSAxMCoqNzsgLy8xIEVUSCAoMThkZWNpbWFscykgPSAxMDAwIEVUSEIgKDhkZWNpbWFscykKICAgIAkJCQkJCQkJCSAvLygxKjEwXjE4KS8oMTAwMCoxMF44KSA9IDEqMTBeNyBFVEgvRVRIQgoKICAgIGV2ZW50IFRva2VuV2l0aGRyYXdhbChhZGRyZXNzIF90byx1aW50MjU2IF93aXRoZHJhdyk7CglldmVudCBQYXlPdXQoYWRkcmVzcyBfdG8sdWludDI1NiBfd2l0aGRyYXcpOwoJZXZlbnQgVG9rZW5Cb3VnaHQoYWRkcmVzcyBfYnV5ZXIsIHVpbnQyNTYgX2Ftb3VudCk7CgogICAgLyoqCiAgICAqIEBkZXYgVHJhbnNmZXIgdGhlIGFkbWluc2hpcCBvZiB0aGUgY29udHJhY3QKICAgICogQHBhcmFtIF9ldGhXYWxsZXQgVGhlIGFkZHJlc3Mgb2YgdGhlIHdhbGxldCB1c2VkIHRvIHBheW91dCBldGhlci4KICAgICogQHBhcmFtIF9jYW1wYWlnblVybCBVUkwgb2YgdGhpcyBjcm93ZHNhbGUuCiAgICAqLwogICAgZnVuY3Rpb24gRVRIQkNyb3dkc2FsZSgKICAgIAlhZGRyZXNzIF9ldGhXYWxsZXQsCiAgICAJc3RyaW5nIF9jYW1wYWlnblVybCkgcHVibGljIHsKCiAgICAJdG9rZW5SZXdhcmQgPSBFUkMyMFRva2VuKDB4M2EyNjc0NkRkYjc5QjFCOGU0NDUwZTNGNEZGRTMyODVBMzA3Mzg3RSk7CiAgICAJY3JlYXRvciA9IG1zZy5zZW5kZXI7CiAgICAJZXRoV2FsbGV0ID0gX2V0aFdhbGxldDsKICAgIAljYW1wYWlnblVybCA9IF9jYW1wYWlnblVybDsKICAgIH0KICAgIC8qKgogICAgKiBAZGV2IEV4Y2hhbmdlIGZ1bmN0aW9uCiAgICAqLwogICAgZnVuY3Rpb24gZXhjaGFuZ2UoKSBwdWJsaWMgcGF5YWJsZSB7CiAgICAJcmVxdWlyZSAodG9rZW5SZXdhcmQuYmFsYW5jZU9mKHRoaXMpID4gMCk7CiAgICAJcmVxdWlyZSAobXNnLnZhbHVlID4gMSBmaW5uZXkpOwoKICAgIAl1aW50MjU2IHRva2VuQm91Z2h0ID0gU2FmZU1hdGguZGl2KG1zZy52YWx1ZSxleGNoYW5nZVJhdGUpOwoKICAgIAlyZXF1aXJlKHRva2VuUmV3YXJkLmJhbGFuY2VPZih0aGlzKSA+PSB0b2tlbkJvdWdodCApOwogICAgCWN1cnJlbnRCYWxhbmNlID0gU2FmZU1hdGguYWRkKGN1cnJlbnRCYWxhbmNlLG1zZy52YWx1ZSk7CiAgICAJdG90YWxEaXN0cmlidXRlZCA9IFNhZmVNYXRoLmFkZCh0b3RhbERpc3RyaWJ1dGVkLHRva2VuQm91Z2h0KTsKICAgIAl0b2tlblJld2FyZC50cmFuc2Zlcihtc2cuc2VuZGVyLHRva2VuQm91Z2h0KTsKCQlUb2tlbkJvdWdodChtc2cuc2VuZGVyLCB0b2tlbkJvdWdodCk7CgogICAgfQogICAgLyoqCiAgICAqIEBkZXYgV2l0aGRyYXcgcmVtYWluaW5nIHRva2VucyB0byBhbiBzcGVjaWZpZWQgYWRkcmVzcwogICAgKiBAcGFyYW0gX3RvIGFkZHJlc3MgdG8gdHJhbnNmZXIgdG9rZW5zLgogICAgKi8KICAgIGZ1bmN0aW9uIHRva2VuV2l0aGRyYXcgKGFkZHJlc3MgX3RvKSBvbmx5QWRtaW4gcHVibGljIHsKICAgIAlyZXF1aXJlKCBfdG8gIT0gMHgwICk7CiAgICAJcmVxdWlyZSh0b2tlblJld2FyZC5iYWxhbmNlT2YodGhpcyk+MCk7CiAgICAJdWludDI1NiB3aXRoZHJhdyA9IHRva2VuUmV3YXJkLmJhbGFuY2VPZih0aGlzKTsKICAgIAl0b2tlblJld2FyZC50cmFuc2ZlcihfdG8sd2l0aGRyYXcpOwogICAgCVRva2VuV2l0aGRyYXdhbChfdG8sd2l0aGRyYXcpOwogICAgfQogICAgLyoqCiAgICAqIEBkZXYgV2l0aGRyYXcgY29sbGVjdGVkIGV0aGVyIHRvIGV0aFdhbGxldAogICAgKi8KICAgIGZ1bmN0aW9uIGV0aFdpdGhkcmF3ICgpIG9ubHlBZG1pbiBwdWJsaWMgewogICAgCXJlcXVpcmUodGhpcy5iYWxhbmNlID4gMCk7CiAgICAJdWludDI1NiB3aXRoZHJhdyA9IHRoaXMuYmFsYW5jZTsKICAgIAljdXJyZW50QmFsYW5jZSA9IDA7CiAgICAJcmVxdWlyZShldGhXYWxsZXQuc2VuZCh3aXRoZHJhdykpOwogICAgCVBheU91dChldGhXYWxsZXQsd2l0aGRyYXcpOwogICAgfQogICAgLyoqCiAgICAqIEBkZXYgY2FsbGJhY2sgZnVuY3Rpb24gdG8gZGVhbCB3aXRoIGRpcmVjdCB0cmFuc2ZlcnMKICAgICovCiAgICBmdW5jdGlvbiAoKSBwdWJsaWMgcGF5YWJsZXsKICAgICAgICBleGNoYW5nZSgpOwogICAgfQp9'.
	

]
