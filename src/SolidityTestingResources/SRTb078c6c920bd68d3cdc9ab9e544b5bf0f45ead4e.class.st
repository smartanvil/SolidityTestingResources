Class {
	#name : #SRTb078c6c920bd68d3cdc9ab9e544b5bf0f45ead4e,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTb078c6c920bd68d3cdc9ab9e544b5bf0f45ead4e >> base64 [
	^ ''.
	

]
