Class {
	#name : #SRTf51397513C3516effeEF0e0f7332E05816135d01,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTf51397513C3516effeEF0e0f7332E05816135d01 >> base64 [
	^ ''.
	

]
