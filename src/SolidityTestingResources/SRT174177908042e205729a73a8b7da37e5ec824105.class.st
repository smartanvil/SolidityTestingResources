Class {
	#name : #SRT174177908042e205729a73a8b7da37e5ec824105,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT174177908042e205729a73a8b7da37e5ec824105 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7Ci8qClRva2VuIENvbnRyYWN0IHdpdGggYmF0Y2ggYXNzaWdubWVudHMKCkVSQy0yMCBUb2tlbiBTdGFuZGFyIENvbXBsaWFudCAtIENvbnNlblN5cwoKQ29udHJhY3QgZGV2ZWxvcGVyOiBGYXJlcyBBLiBBa2VsIEMuCjxzcGFuIGNsYXNzPSJfX2NmX2VtYWlsX18iIGRhdGEtY2ZlbWFpbD0iZjk5ZmQ3OTg5NzhkOTY5NzkwOTZkNzk4OTI5Yzk1Yjk5ZTk0OTg5MDk1ZDc5YTk2OTQiPltlbWFpbCYjMTYwO3Byb3RlY3RlZF08L3NwYW4+Ck1JVCBQR1AgS0VZIElEOiAwNzhFNDFDQgoqLwoKLyoqCiAqIEB0aXRsZSBTYWZlTWF0aCBieSBPcGVuWmVwcGVsaW4KICogQGRldiBNYXRoIG9wZXJhdGlvbnMgd2l0aCBzYWZldHkgY2hlY2tzIHRoYXQgdGhyb3cgb24gZXJyb3IKICovCmxpYnJhcnkgU2FmZU1hdGggewoKICAgIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgYXNzZXJ0KGIgPD0gYSk7CiAgICAgICAgcmV0dXJuIGEgLSBiOwogICAgfQoKICAgIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgdWludDI1NiBjID0gYSArIGI7CiAgICAgICAgYXNzZXJ0KGMgPj0gYSk7CiAgICAgICAgcmV0dXJuIGM7CiAgICB9Cn0KCmNvbnRyYWN0IGFkbWluZWQgeyAvL1RoaXMgdG9rZW4gY29udHJhY3QgaXMgYWRtaW5pc3RlcmVkCiAgICBhZGRyZXNzIHB1YmxpYyBhZG1pbjsgLy9BZG1pbiBhZGRyZXNzIGlzIHB1YmxpYwoKICAgIGZ1bmN0aW9uIGFkbWluZWQoKSBpbnRlcm5hbCB7CiAgICAgICAgYWRtaW4gPSBtc2cuc2VuZGVyOyAvL1NldCBpbml0aWFsIGFkbWluIHRvIGNvbnRyYWN0IGNyZWF0b3IKICAgICAgICBBZG1pbmVkKGFkbWluKTsKICAgIH0KCiAgICBtb2RpZmllciBvbmx5QWRtaW4oKSB7IC8vQSBtb2RpZmllciB0byBkZWZpbmUgYWRtaW4tb25seSBmdW5jdGlvbnMKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gYWRtaW4pOwogICAgICAgIF87CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXJBZG1pbnNoaXAoYWRkcmVzcyBfbmV3QWRtaW4pIG9ubHlBZG1pbiBwdWJsaWMgeyAvL0FkbWluIGNhbiBiZSB0cmFuc2ZlcmVkCiAgICAgICAgYWRtaW4gPSBfbmV3QWRtaW47CiAgICAgICAgVHJhbnNmZXJBZG1pbnNoaXAoYWRtaW4pOwogICAgfQoKCiAgICAvL0FsbCBhZG1pbiBhY3Rpb25zIGhhdmUgYSBsb2cgZm9yIHB1YmxpYyByZXZpZXcKICAgIGV2ZW50IFNldExvY2sodWludCB0aW1lSW5NaW5zKTsKICAgIGV2ZW50IFRyYW5zZmVyQWRtaW5zaGlwKGFkZHJlc3MgbmV3QWRtaW5pc3Rlcik7CiAgICBldmVudCBBZG1pbmVkKGFkZHJlc3MgYWRtaW5pc3Rlcik7Cgp9Cgpjb250cmFjdCBUb2tlbiBpcyBhZG1pbmVkIHsKCiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgYmFsYW5jZXM7IC8vQmFsYW5jZXMgbWFwcGluZwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBhbGxvd2VkOyAvL0FsbG93YW5jZSBtYXBwaW5nCgogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWwpIHsKICAgICAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICByZXF1aXJlKGJhbGFuY2VzW21zZy5zZW5kZXJdID49IF92YWx1ZSk7CiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBTYWZlTWF0aC5zdWIoYmFsYW5jZXNbbXNnLnNlbmRlcl0sIF92YWx1ZSk7CiAgICAgICAgYmFsYW5jZXNbX3RvXSA9IFNhZmVNYXRoLmFkZChiYWxhbmNlc1tfdG9dLCBfdmFsdWUpOwogICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgcmVxdWlyZShiYWxhbmNlc1tfZnJvbV0gPj0gX3ZhbHVlICYmIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID49IF92YWx1ZSk7CiAgICAgICAgYmFsYW5jZXNbX3RvXSA9IFNhZmVNYXRoLmFkZChiYWxhbmNlc1tfdG9dLCBfdmFsdWUpOwogICAgICAgIGJhbGFuY2VzW19mcm9tXSA9IFNhZmVNYXRoLnN1YihiYWxhbmNlc1tfZnJvbV0sIF92YWx1ZSk7CiAgICAgICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gPSBTYWZlTWF0aC5zdWIoYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0sIF92YWx1ZSk7CiAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpIHsKICAgICAgICByZXR1cm4gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsKICAgIH0KCiAgICAvL1RoaXMgaXMgYW4gZXNwZWNpYWwgQWRtaW4tb25seSBmdW5jdGlvbiB0byBtYWtlIG1hc3NpdmUgdG9rZW5zIGFzc2lnbm1lbnRzCiAgICAvL0l0IGlzIG9wdGltaXplZCB0byB3YXN0ZSB0aGUgbGVzcyBnYXNzIHBvc3NpYmxlCiAgICAvL0l0IG1pbnQgdGhlIHRva2VucyB0byBkaXN0cmlidXRlCiAgICBmdW5jdGlvbiBiYXRjaChhZGRyZXNzW10gZGF0YSx1aW50MjU2IGFtb3VudCkgb25seUFkbWluIHB1YmxpYyB7IC8vSXQgdGFrZXMgYW4gYXJyYXkgb2YgYWRkcmVzc2VzIGFuZCBhbiBhbW91bnQKICAgICAgICB1aW50MjU2IGxlbmd0aCA9IGRhdGEubGVuZ3RoOwogICAgICAgIGZvciAodWludCBpPTA7IGk8bGVuZ3RoOyBpKyspIHsgLy9JdCBtb3ZlcyBvdmVyIHRoZSBhcnJheQogICAgICAgICAgICB0cmFuc2ZlcihkYXRhW2ldLGFtb3VudCk7IC8vQWRkIGFuIGFtb3VudCB0byB0aGUgdGFyZ2V0IGFkZHJlc3MKICAgICAgICB9CiAgICB9CgogICAgLy9FdmVudHMgdG8gbG9nIHRyYW5zYWN0aW9ucwogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50MjU2IF92YWx1ZSk7CiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKTsKfQoKY29udHJhY3QgQXNzZXQgaXMgYWRtaW5lZCwgVG9rZW4gewoKICAgIHN0cmluZyBwdWJsaWMgbmFtZTsKICAgIHVpbnQ4IHB1YmxpYyBkZWNpbWFscyA9IDE4OwogICAgc3RyaW5nIHB1YmxpYyBzeW1ib2w7CiAgICBzdHJpbmcgcHVibGljIHZlcnNpb24gPSAnMC4xJzsKCiAgICBmdW5jdGlvbiBBc3NldCgKICAgICAgICBzdHJpbmcgX3Rva2VuTmFtZSwKICAgICAgICBzdHJpbmcgX3Rva2VuU3ltYm9sLAogICAgICAgIHVpbnQyNTYgX2luaXRpYWxBbW91bnQKICAgICAgICApIHB1YmxpYyB7CiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBfaW5pdGlhbEFtb3VudDsKICAgICAgICB0b3RhbFN1cHBseSA9IF9pbml0aWFsQW1vdW50OyAvL1RvdGFsIHN1cHBseSBpcyB0aGUgaW5pdGlhbCBhbW91bnQgYXQgQXNzZXQKICAgICAgICBuYW1lID0gX3Rva2VuTmFtZTsgLy9OYW1lIHNldCBvbiBkZXBsb3ltZW50CiAgICAgICAgc3ltYm9sID0gX3Rva2VuU3ltYm9sOyAvL1NpbWJvbCBzZXQgb24gZGVwbG95bWVudAogICAgICAgIFRyYW5zZmVyKDAsIHRoaXMsIF9pbml0aWFsQW1vdW50KTsKICAgICAgICBUcmFuc2Zlcih0aGlzLCBtc2cuc2VuZGVyLCBfaW5pdGlhbEFtb3VudCk7CiAgICB9CgogICAgZnVuY3Rpb24oKSBwdWJsaWMgewogICAgICAgIHJldmVydCgpOwogICAgfQoKfQ=='.
	

]
