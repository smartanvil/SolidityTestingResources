Class {
	#name : #SRT599a4b8188676224d4c9b393b947e332b60b15e3,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT599a4b8188676224d4c9b393b947e332b60b15e3 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuODsKCmNvbnRyYWN0IE93bmFibGUgewogIGFkZHJlc3MgcHVibGljIG93bmVyOwoKICBmdW5jdGlvbiBPd25hYmxlKCkgewogICAgb3duZXIgPSBtc2cuc2VuZGVyOwogIH0KCiAgbW9kaWZpZXIgb25seU93bmVyKCkgewogICAgaWYgKG1zZy5zZW5kZXIgIT0gb3duZXIpIHsKICAgICAgdGhyb3c7CiAgICB9CiAgICBfOwogIH0KCiAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBuZXdPd25lcikgb25seU93bmVyIHsKICAgIGlmIChuZXdPd25lciAhPSBhZGRyZXNzKDApKSB7CiAgICAgIG93bmVyID0gbmV3T3duZXI7CiAgICB9CiAgfQoKfQoKY29udHJhY3QgS2lsbGFibGUgaXMgT3duYWJsZSB7CiAgZnVuY3Rpb24ga2lsbCgpIG9ubHlPd25lciB7CiAgICBzZWxmZGVzdHJ1Y3Qob3duZXIpOwogIH0KfQoKY29udHJhY3QgRVJDMjAgewogIHVpbnQgcHVibGljIHRvdGFsU3VwcGx5OwogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIHdobykgY29uc3RhbnQgcmV0dXJucyAodWludCk7CiAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3Mgb3duZXIsIGFkZHJlc3Mgc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludCk7CgogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sIHVpbnQgdmFsdWUpIHJldHVybnMgKGJvb2wgb2spOwogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIGZyb20sIGFkZHJlc3MgdG8sIHVpbnQgdmFsdWUpIHJldHVybnMgKGJvb2wgb2spOwogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBzcGVuZGVyLCB1aW50IHZhbHVlKSByZXR1cm5zIChib29sIG9rKTsKICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50IHZhbHVlKTsKICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBzcGVuZGVyLCB1aW50IHZhbHVlKTsKfQoKY29udHJhY3QgU2FmZU1hdGggewogIGZ1bmN0aW9uIHNhZmVNdWwodWludCBhLCB1aW50IGIpIGludGVybmFsIHJldHVybnMgKHVpbnQpIHsKICAgIHVpbnQgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gc2FmZURpdih1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgewogICAgYXNzZXJ0KGIgPiAwKTsKICAgIHVpbnQgYyA9IGEgLyBiOwogICAgYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7CiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIHNhZmVTdWIodWludCBhLCB1aW50IGIpIGludGVybmFsIHJldHVybnMgKHVpbnQpIHsKICAgIGFzc2VydChiIDw9IGEpOwogICAgcmV0dXJuIGEgLSBiOwogIH0KCiAgZnVuY3Rpb24gc2FmZUFkZCh1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgewogICAgdWludCBjID0gYSArIGI7CiAgICBhc3NlcnQoYz49YSAmJiBjPj1iKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gbWF4NjQodWludDY0IGEsIHVpbnQ2NCBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50NjQpIHsKICAgIHJldHVybiBhID49IGIgPyBhIDogYjsKICB9CgogIGZ1bmN0aW9uIG1pbjY0KHVpbnQ2NCBhLCB1aW50NjQgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDY0KSB7CiAgICByZXR1cm4gYSA8IGIgPyBhIDogYjsKICB9CgogIGZ1bmN0aW9uIG1heDI1Nih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgcmV0dXJuIGEgPj0gYiA/IGEgOiBiOwogIH0KCiAgZnVuY3Rpb24gbWluMjU2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICByZXR1cm4gYSA8IGIgPyBhIDogYjsKICB9CgogIGZ1bmN0aW9uIGFzc2VydChib29sIGFzc2VydGlvbikgaW50ZXJuYWwgewogICAgaWYgKCFhc3NlcnRpb24pIHsKICAgICAgdGhyb3c7CiAgICB9CiAgfQp9CgoKLy8vIEB0aXRsZSBWZXJpdGFzZXVtIFB1cmNoYXNlCi8vLyBAYXV0aG9yIFJpYWFuIEYgVmVudGVyfiBSRlZlbnRlcn4gPDxzcGFuIGNsYXNzPSJfX2NmX2VtYWlsX18iIGRhdGEtY2ZlbWFpbD0iMmI0NjU4NGM2YjU5NGQ1ZDA1NDI0NCI+W2VtYWlsJiMxNjA7cHJvdGVjdGVkXTwvc3Bhbj4+CmNvbnRyYWN0IFRva2VuUHVyY2hhc2UgaXMgT3duYWJsZSwgS2lsbGFibGUsIFNhZmVNYXRoIHsKCiAgICB1aW50IHB1YmxpYyBjb25zdGFudCBzdGFydFRpbWUgPSAxNDkzMTMwNjAwOyAgICAgICAgICAgIC8vIDIwMTcgQXByaWwgMjV0aCA5OjMwIEVTVCAoMTQ6MzAgVVRDKQogICAgdWludCBwdWJsaWMgY29uc3RhbnQgY2xvc2VUaW1lID0gc3RhcnRUaW1lICsgMzEgZGF5czsgICAvLyBJQ08gd2lsbCBydW4gZm9yIDMxIGRheXMKICAgIHVpbnQgcHVibGljIGNvbnN0YW50IHByaWNlID0gMzMzMzMzMzMzMzMzMzMzMzM7ICAgICAgICAgLy8gRWFjaCB0b2tlbiBoYXMgMTggZGVjaW1hbCBwbGFjZXMsIGp1c3QgbGlrZSBldGhlci4KICAgIHVpbnQgcHJpdmF0ZSBjb25zdGFudCBwcmljZURheU9uZSA9IHByaWNlICogOCAvIDEwOyAgICAgLy8gRGF5IG9uZSBwcmljZSBbMjAgJSBkaXNjb3VudCAoeCAqIDggLyAxMCldCiAgICB1aW50IHByaXZhdGUgY29uc3RhbnQgcHJpY2VEYXlUd28gPSBwcmljZSAqIDkgLyAxMDsgICAgIC8vIERheSB0d28gcHJpY2UgWzEwICUgZGlzY291bnQgKHggKiA5IC8gMTApXQoKICAgIEVSQzIwIHB1YmxpYyB0b2tlbjsgICAgICAgICAgICAgICAgICAgICAgICAgLy8gdGhlIGFkZHJlc3Mgb2YgdGhlIHRva2VuIAoKICAgIC8vIC8vLy8gdGltZSB0ZXN0IGZ1bmN0aW9uYWxpdHkgLy8vLy8KICAgIC8vIHVpbnQgcHVibGljIG5vdzsgICAgICAgICAgICAgICAgLy8KICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8KICAgIC8vIGZ1bmN0aW9uIHNldE5vdyh1aW50IF90aW1lKSB7ICAgLy8KICAgIC8vICAgICBub3cgPSBfdGltZTsgICAgICAgICAgICAgICAgLy8KICAgIC8vIH0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8KICAgIC8vIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8KCiAgICAvLy8gQG5vdGljZSBVc2VkIHRvIGJ1eSB0b2tlbnMgd2l0aCBFdGhlcgogICAgLy8vIEByZXR1cm4gVGhlIGFtb3VudCBvZiBhY3R1YWwgdG9rZW5zIHB1cmNoYXNlZAogICAgZnVuY3Rpb24gcHVyY2hhc2VUb2tlbnMoKSBwYXlhYmxlIHJldHVybnMgKHVpbnQpIHsKICAgICAgICAvLyBjaGVjayBpZiBub3cgaXMgd2l0aGluIElDTyBwZXJpb2QsIG9yIGlmIHRoZSBhbW91bnQgc2VudCBpcyBub3RoaW5nCiAgICAgICAgaWYgKChub3cgPCBzdGFydFRpbWUpIHx8IChub3cgPiBjbG9zZVRpbWUpIHx8IChtc2cudmFsdWUgPT0gMCkpIHRocm93OwogICAgICAgIAogICAgICAgIHVpbnQgY3VycmVudFByaWNlOwogICAgICAgIC8vIG9ubHkgdXNpbmcgc2FmZU1hdGggZm9yIGNhbGN1bGF0aW9ucyBpbnZvbHZpbmcgZXh0ZXJuYWwgaW5jb21pbmcgZGF0YSAodG8gc2FmZSBnYXMpCiAgICAgICAgaWYgKG5vdyA8IChzdGFydFRpbWUgKyAxIGRheXMpKSB7ICAgICAgIC8vIGRheSBvbmUgZGlzY291bnQKICAgICAgICAgICAgY3VycmVudFByaWNlID0gcHJpY2VEYXlPbmU7CiAgICAgICAgfSAKICAgICAgICBlbHNlIGlmIChub3cgPCAoc3RhcnRUaW1lICsgMiBkYXlzKSkgeyAgLy8gZGF5IHR3byBkaXNjb3VudAogICAgICAgICAgICBjdXJyZW50UHJpY2UgPSBwcmljZURheVR3bzsKICAgICAgICB9CiAgICAgICAgZWxzZSBpZiAobm93IDwgKHN0YXJ0VGltZSArIDEyIGRheXMpKSB7CiAgICAgICAgICAgIC8vIDEgJSByZWR1Y3Rpb24gaW4gdGhlIGRpc2NvdW50ZWQgcmF0ZSBmcm9tIGRheSAyIHVudGlsIGRheSAxMiAoc2xpZGluZyBzY2FsZSBwZXIgc2Vjb25kKQogICAgICAgICAgICBjdXJyZW50UHJpY2UgPSBwcmljZSAtICgoc3RhcnRUaW1lICsgMTIgZGF5cyAtIG5vdykgKiBwcmljZSAvIDEwMCBkYXlzKTsKICAgICAgICB9CiAgICAgICAgZWxzZSB7CiAgICAgICAgICAgIGN1cnJlbnRQcmljZSA9IHByaWNlOwogICAgICAgIH0KICAgICAgICB1aW50IHRva2VucyA9IHNhZmVNdWwobXNnLnZhbHVlLCAxIGV0aGVyKSAvIGN1cnJlbnRQcmljZTsgICAgICAgLy8gb25seSBvbmUgc2FmZU1hdGggY2hlY2sgaXMgcmVxdWlyZWQgZm9yIHRoZSBpbmNvbWluZyBldGhlciB2YWx1ZQoKICAgICAgICBpZiAoIXRva2VuLnRyYW5zZmVyRnJvbShvd25lciwgbXNnLnNlbmRlciwgdG9rZW5zKSkgdGhyb3c7ICAgICAgLy8gaWYgdGhlcmUgaXMgc29tZSBlcnJvciB3aXRoIHRoZSB0b2tlbiB0cmFuc2ZlciwgdGhyb3cgYW5kIHJldHVybiB0aGUgRXRoZXIKCiAgICAgICAgcmV0dXJuIHRva2VuczsgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGFmdGVyIHN1Y2Nlc3NmdWwgcHVyY2hhc2UsIHJldHVybiB0aGUgYW1vdW50IG9mIHRva2VucyBwdXJjaGFzZWQgdmFsdWUKICAgIH0KCiAgICAvLy8vLy8vLy8vLy8vLy8vIG93bmVyIG9ubHkgZnVuY3Rpb25zIGJlbG93CgogICAgLy8vIEBub3RpY2UgV2l0aGRyYXcgYWxsIEV0aGVyIGluIHRoaXMgY29udHJhY3QKICAgIC8vLyBAcmV0dXJuIFRydWUgaWYgc3VjY2Vzc2Z1bAogICAgZnVuY3Rpb24gd2l0aGRyYXdFdGhlcigpIHBheWFibGUgb25seU93bmVyIHJldHVybnMgKGJvb2wpIHsKICAgICAgICByZXR1cm4gb3duZXIuc2VuZCh0aGlzLmJhbGFuY2UpOwogICAgfQoKICAgIC8vLyBAbm90aWNlIHNldHMgdGhlIHRva2VuIHRoYXQgaXMgdG8gYmUgdXNlZCBmb3IgdGhpcyBMb3R0ZXJ5CiAgICAvLy8gQHBhcmFtIF90b2tlbiBUaGUgYWRkcmVzcyBvZiB0aGUgRVJDMjAgdG9rZW4KICAgIGZ1bmN0aW9uIHNldFRva2VuKGFkZHJlc3MgX3Rva2VuKSBleHRlcm5hbCBvbmx5T3duZXIgeyAgICAgCiAgICAgICAgdG9rZW4gPSBFUkMyMChfdG9rZW4pOwogICAgfQp9'.
	

]
