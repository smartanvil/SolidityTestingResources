Class {
	#name : #SRT7275f61c3abfba3596ae71f7128bdc3b0fc01fa9,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT7275f61c3abfba3596ae71f7128bdc3b0fc01fa9 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTc7CgovKgotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQpTaWduYWxzIFNvY2lldHkgTWVtYmVyc2hpcCBDb250cmFjdAotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoqLwoKLyoqCiAqIEB0aXRsZSBPd25hYmxlCiAqIEBkZXYgT3duZXJzaGlwIGZ1bmN0aW9uYWxpdHkKICovCmNvbnRyYWN0IE93bmFibGUgewogIGFkZHJlc3MgcHVibGljIG93bmVyOwogIGFkZHJlc3MgcHVibGljIGJvdDsKICAvLyBjb25zdHJ1Y3Rvciwgc2V0cyBvcmlnaW5hbCBvd25lciBhZGRyZXNzCiAgZnVuY3Rpb24gT3duYWJsZSgpIHB1YmxpYyB7CiAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgfQogIC8vIG1vZGlmaWVyIHRvIHJlc3RydWN0IGZ1bmN0aW9uIHVzZSB0byB0aGUgb3duZXIKICBtb2RpZmllciBvbmx5T3duZXIoKSB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgXzsKICB9ICAgIAogIC8vIG1vZGlmaWVyIHRvIHJlc3RydWN0IGZ1bmN0aW9uIHVzZSB0byB0aGUgYm90CiAgbW9kaWZpZXIgb25seUJvdCgpIHsKICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBib3QpOwogICAgXzsKICB9CiAgLy8gbGV0cyBvd25lciBjaGFuZ2UgaGlzIGFkZHJlc3MKICBmdW5jdGlvbiBjaGFuZ2VPd25lcihhZGRyZXNzIGFkZHIpIHB1YmxpYyBvbmx5T3duZXIgewogICAgICBvd25lciA9IGFkZHI7CiAgfQogIC8vIGxldHMgb3duZXIgY2hhbmdlIHRoZSBib3QncyBhZGRyZXNzICAgIAogIGZ1bmN0aW9uIGNoYW5nZUJvdChhZGRyZXNzIGFkZHIpIHB1YmxpYyBvbmx5T3duZXIgewogICAgICBib3QgPSBhZGRyOwogIH0KICAvLyBhbGxvd3MgZGVzdHJ1Y3Rpb24gb2YgY29udHJhY3Qgb25seSBpZiBiYWxhbmNlIGlzIGVtcHR5CiAgZnVuY3Rpb24ga2lsbCgpIHB1YmxpYyBvbmx5T3duZXIgewoJCXJlcXVpcmUodGhpcy5iYWxhbmNlID09IDApOwoJCXNlbGZkZXN0cnVjdChvd25lcik7Cgl9Cn0KCiAvKioKICogQHRpdGxlIE1lbWJlcnNoaXBzCiAqIEBkZXYgYW5hZ2VzIG1lbWJlcnNoaXAgcHJpY2VzCiAqLwpjb250cmFjdCBNZW1iZXJzaGlwcyBpcyBPd25hYmxlIHsKICAvLyBlbnVtZXJhdGVzIG1lbWJlcnNoaXBzICgwLCAxLCAyKQogIGVudW0gTWVtYmVyc2hpcCB7IERheSwgTW9udGgsIExpZmV0aW1lIH0KICAvLyBob2xkcyB0aGUgcHJpY2VzIGZvciB0aGUgbWVtYmVyc2hpcHMKICBtYXBwaW5nICh1aW50ID0+IHVpbnQpIGludGVybmFsIHByaWNlczsKICAvLyByZXR1cm5zIHRoZSBwcmljZSBmb3IgYSBzaW5nbGUgbWVtYmVyc2hpcAogIGZ1bmN0aW9uIGdldE1lbWJlcnNoaXBQcmljZShNZW1iZXJzaGlwIG1lbWJlcnNoaXApIHB1YmxpYyB2aWV3IHJldHVybnModWludCkgewogICAgcmV0dXJuIHByaWNlc1t1aW50KG1lbWJlcnNoaXApXTsKICB9CiAgLy8gbGV0cyB0aGUgb3duZXIgc2V0IHRoZSBwcmljZSBmb3IgYSBzaW5nbGUgbWVtYmVyc2hpcAogIGZ1bmN0aW9uIHNldE1lbWJlcnNoaXBQcmljZShNZW1iZXJzaGlwIG1lbWJlcnNoaXAsIHVpbnQgYW1vdW50KSBwdWJsaWMgb25seU93bmVyIHsgICAgCgkJcmVxdWlyZShhbW91bnQgPiAwKTsKICAgIHByaWNlc1t1aW50KG1lbWJlcnNoaXApXSA9IGFtb3VudDsKICB9Cn0KCiAvKioKICogQHRpdGxlIE1lbWJTaWduYWxzU29jaWV0eSBDb250cmFjdAogKi8KY29udHJhY3QgU2lnbmFsc1NvY2lldHkgaXMgT3duYWJsZSwgTWVtYmVyc2hpcHMgewoKICAvLyBsZXRzIHRoZSBib3Qga25vdyBhIGRlcG9zaXQgd2FzIG1hZGUKICBldmVudCBEZXBvc2l0ZWQoYWRkcmVzcyBhY2NvdW50LCB1aW50IGFtb3VudCwgdWludCBiYWxhbmNlLCB1aW50IHRpbWVzdGFtcCk7CiAgLy8gbGV0cyB0aGUgYm90IGtub3cgYSBtZW1iZXJzaGlwIHdhcyBwYWlkCiAgZXZlbnQgTWVtYmVyc2hpcFBhaWQoYWRkcmVzcyBhY2NvdW50LCBNZW1iZXJzaGlwIG1lbWJlcnNoaXAsIHVpbnQgdGltZXN0YW1wKTsKCiAgLy8gc3RvcmUgdGhlIGFtb3VudCBvZiBFVEggZGVwb3NpdGVkIGJ5IGVhY2ggYWNjb3VudC4KICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQpIHB1YmxpYyBiYWxhbmNlczsKCiAgLy8gYWxsb3dzIHVzZXIgdG8gd2l0aGRyYXcgaGlzIGJhbGFuY2UKICBmdW5jdGlvbiB3aXRoZHJhdyhhZGRyZXNzIHVzZXIpIHB1YmxpYyB7CiAgICByZXF1aXJlKHVzZXIgPT0gbXNnLnNlbmRlcik7ICAgIAogICAgdWludCBhbW91bnQgPSBiYWxhbmNlc1t1c2VyXTsKICAgIC8vIHplcm8gdGhlIHBlbmRpbmcgcmVmdW5kIGJlZm9yZSBzZW5kaW5nIHRvIHByZXZlbnQgcmUtZW50cmFuY3kgYXR0YWNrcwogICAgYmFsYW5jZXNbdXNlcl0gPSAwOwogICAgdXNlci50cmFuc2ZlcihhbW91bnQpOwogIH0KICAvLyBkZXBvc2l0cyBFVEggdG8gYSB1c2VyJ3MgYWNjb3VudAogIGZ1bmN0aW9uIGRlcG9zaXQoYWRkcmVzcyBhY2NvdW50LCB1aW50IGFtb3VudCkgcHVibGljIHsKICAgIC8vIGRlcG9zaXQgdGhlIGFtb3VudCB0byB0aGUgdXNlcidzIGFjY291bnQKICAgIGJhbGFuY2VzW2FjY291bnRdICs9IGFtb3VudDsKICAgIC8vIGxldCB0aGUgYm90IGtub3cgc29tZXRoaW5nIHdhcyBkZXBvc2l0ZWQKICAgIERlcG9zaXRlZChhY2NvdW50LCBhbW91bnQsIGJhbGFuY2VzW2FjY291bnRdLCBub3cpOwogIH0KICAvLyBhY2NlcHRzIHRoZSBtZW1iZXJzaGlwIHBheW1lbnQgYnkgbW92aW5nIGV0aCBmcm9tIHRoZSB1c2VyJ3MgYWNjb3VudAogIC8vIHRvIHRoZSBvd25lcidzIGFjY291bnQKICBmdW5jdGlvbiBhY2NlcHRNZW1iZXJzaGlwKGFkZHJlc3MgYWNjb3VudCwgTWVtYmVyc2hpcCBtZW1iZXJzaGlwLCB1aW50IGRpc2NvdW50LCBhZGRyZXNzIHJlc2VsbGVyLCB1aW50IGNvbWlzc2lvbikgcHVibGljIG9ubHlCb3QgewogICAgLy8gZ2V0IHRoZSBwcmljZSBmb3IgdGhlIG1lbWJlcnNoaXAgdGhleSBzZWxlY3RlZCBtaW51cyBhbnkgZGlzY291bnRzIGZvciBzcGVjaWFsIHByb21vdGlvbnMKICAgIHVpbnQgcHJpY2UgPSBnZXRNZW1iZXJzaGlwUHJpY2UobWVtYmVyc2hpcCkgLSBkaXNjb3VudDsKICAgIC8vIG1ha2Ugc3VyZSB0aGV5IGhhdmUgZW5vdWdoIGJhbGFuY2UgdG8gcGF5IGZvciBpdAogICAgcmVxdWlyZShiYWxhbmNlc1thY2NvdW50XSA+PSBwcmljZSk7CiAgICAvLyByZW1vdmUgdGhlIHBheW1lbnQgZnJvbSB0aGUgdXNlcidzIGFjY291bnQKICAgIGJhbGFuY2VzW2FjY291bnRdIC09IHByaWNlOwogICAgLy8gaWYgdGhpcyBjb21lcyBmcm9tIGEgcmVzZWxsZXIKICAgIGlmIChyZXNlbGxlciAhPSAweDApIHsKICAgICAgLy8gZ2l2ZSB0aGUgcmVzZWxsZXIgaGlzIGNvbWlzc2lvbgogICAgICBiYWxhbmNlc1tyZXNlbGxlcl0gKz0gY29taXNzaW9uOwogICAgICAvLyBhbmQgcHV0IHRoZSByZXN0IGluIHRoZSBzaWduYWxzb2NpZXR5IGFjY291bnQKICAgICAgYmFsYW5jZXNbb3duZXJdICs9IHByaWNlIC0gY29taXNzaW9uOwogICAgfSBlbHNlIHsKICAgICAgLy8gb3RoZXJ3aXNlIHB1dCBpdCBhbGwgaW4gdGhlIHNpZ25hbHNvY2lldHkgYWNjb3VudAogICAgICBiYWxhbmNlc1tvd25lcl0gKz0gcHJpY2U7CiAgICB9ICAgIAogICAgLy8gbGV0IHRoZSBib3Qga25vdyB0aGUgbWVtYmVyc2hpcCB3YXMgcGFpZAogICAgTWVtYmVyc2hpcFBhaWQoYWNjb3VudCwgbWVtYmVyc2hpcCwgbm93KTsKICB9CiAgLy8gZGVmYXVsdCBmdW5jdGlvbi4gIENhbGxlZCB3aGVuIGEgdXNlciBzZW5kcyBFVEggdG8gdGhlIGNvbnRyYWN0LgogIC8vIGRlcG9zaXRzIHRoZSBldGggdG8gdGhlaXIgYmFuayBhY2NvdW50CiAgZnVuY3Rpb24gKCkgcHVibGljIHBheWFibGUgewogICAgZGVwb3NpdChtc2cuc2VuZGVyLCBtc2cudmFsdWUpOwogIH0KfQ=='.
	

]
