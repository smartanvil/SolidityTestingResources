Class {
	#name : #SRTc99b3615724B7c4d3E4B348Cfc8a25b9E2133828,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTc99b3615724B7c4d3E4B348Cfc8a25b9E2133828 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuNTsKCmNvbnRyYWN0IEJlc3RfQmFua193aXRoX0ludGVyZXN0IHsKICAgIC8vCiAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCiAgICAvLwogICAgLy8gIEEgdGVybSBkZXBvc2l0IGJhbmsgdGhhdCBwYXlzIGludGVyZXN0ICAgCiAgICAvLwogICAgLy8gIHYwLjAyIGJldGEsIHVzZSBBVCBPV04gUklTSyAtIEkgYW0gbm90IHJlZnVuZGluZyBhbnkgbG9zdCBldGhlciEKICAgIC8vICBBbmQgY2hlY2sgdGhlIGNvZGUgYmVmb3JlIGRlcG9zaXRpbmcgYW55dGhpbmcuCiAgICAvLwogICAgLy8gIEhvdyB0byB1c2U6IDEpIHRyYW5zZmVyIG1pbi4gMjUwIGV0aGVyIHVzaW5nIHRoZSBkZXBvc2l0KCkgZnVuY3Rpb24gKDUgZXRoZXIgZGVwb3NpdCBmZWUgcGVyIGRlcG9zaXQpCiAgICAvLyAgICAgICAgICAgICAgICAgbm90ZTogbWluaW11bSBldGhlciBhbW91bnQgYW5kIGRlcG9zaXQgZmVlIGNhbiBjaGFuZ2UsIHNvIGNoZWNrIHB1YmxpYyB2YXJpYWJsZXMKICAgIC8vICAgICAgICAgICAgICAgICAgIC0gbWluaW11bV9kZXBvc2l0X2Ftb3VudAogICAgLy8gICAgICAgICAgICAgICAgICAgLSBkZXBvc2l0X2ZlZQogICAgLy8gICAgICAgICAgICAgICAgIGJlZm9yZSBkZXBvc2l0aW5nIQogICAgLy8KICAgIC8vICAgICAgICAgICAgICAyKSB3aXRoZHJhdyBhZnRlciA1IGRheXMsIHJlY2VpdmUgdXAgdG8gMTAlIGludGVyZXN0ICgxIGFkZGl0aW9uYWwgZXRoZXIgZm9yIGV2ZXJ5IDEwIGV0aGVyIHdpdGhkcmF3YWwpCiAgICAvLyAgICAgICAgICAgICAgICAgbm90ZTogdG8gZ2V0IG1vc3Qgb2YgdGhlIGludGVyZXN0IHBhaWQgb3V0LCB3aXRoZHJhdyBpbiBsb3RzIG9mIDEwIGV0aGVyLi4uCiAgICAvLwogICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLwogICAgLy8KICAgIC8vICBOb3cgeW91IG1heSBhc2sgLSB3aGVyZSBkbyB0aGUgZXh0cmEgZXRoZXIgY29tZSBmcm9tPyA6KQogICAgLy8gIFRoZSBhbnN3ZXIgaXMgc2ltcGxlOiBGcm9tIHBlb3BsZSB3aG8gZG9udCBmb2xsb3cgdGhlIGluc3RydWN0aW9ucyBwcm9wZXJseSEgCiAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgIEFuZCB0aGVyZSBhcmUgdXN1YWxseSBwbGVudHkgb2YgdGhvc2UuLi4KICAgIC8vCiAgICAvLyAgQ29tbW9uIHBpdGZhbGxzOgogICAgLy8gICBlLmcuIC0gZGVwb3NpdCB0byB0aGUgZmFsbGJhY2sgZnVuY3Rpb24gaW5zdGVhZCBvZiB0aGUgcHJvcGVyIGRlcG9zaXQoKSBmdW5jdGlvbgogICAgLy8gICAgICAgIC0gd2l0aGRyYXcgTU9SRSB0aGFuIDEwIGV0aGVyIEFUIEEgVElNRSAuLi4gKHRoYXQganVzdCBtZWFucyB5b3UgZ2V0IGxlc3MgaW50ZXJlc3QgcGFpZCBvdXQpCiAgICAvLyAgICAgICAgLSAgb3IgeW91IHdhaXQgdG9vIGxvbmcgYWZ0ZXIgeW91ciB0ZXJtIGRlcG9zaXQgZW5kZWQsIGFuZCBvdGhlciBwZW9wbGUgaGF2ZSBkcmFpbmVkIHRoZSBpbnRlcmVzdCBwb29sLgogICAgLy8KICAgIC8vICBZb3UgY2FuIGFsd2F5cyBjaGVjayB0aGUgYXZhaWxiYWxlIGludGVyZXN0IGFtb3VudCB1c2luZyBnZXRfYXZhaWxhYmxlX2ludGVyZXN0X2Ftb3VudCAoKSBiZWZvcmUgeW91IHdpdGhkcmF3CiAgICAvLyAgQW5kIGJlIHF1aWNrIC0gZXZlcnlvbmUgZ2V0cyB0aGUgc2FtZSAzMDg1MCBibG9jayB0ZXJtIGRlcG9zaXQgdGltZSAofjUgZGF5cykgdW50aWwgdGhleSBjYW4gd2l0aGRyYXcuCiAgICAvLwogICAgLy8gIEFsc28gRllJOiBUaGUgYmFuayBjYW5ub3QgcmVtb3ZlIG1vbmV5IGZyb20gdGhlIGludGVyZXN0IHBvb2wgdW50aWwgdGhlIGVuZCBvZiB0aGUgY29udHJhY3QgbGlmZS4KICAgIC8vICAgICAgICBBbmQgbWFrZSBzdXJlIHlvdSB3aXRoZHJhdyB5b3VyIGJhbGFuY2VzIGJlZm9yZSB0aGUgZW5kIG9mIHRoZSBjb250cmFjdCBsaWZlIGFsc28uCiAgICAvLyAgICAgICAgQ2hlY2sgcHVibGljIGNvbnRyYWN0X2FsaXZlX3VudGlsX3RoaXNfYmxvY2sgdmFyaWFibGUgdG8gZmluZCBvdXQgd2hlbiB0aGUgY29udHJhY3QgbGlmZSBlbmRzLgogICAgLy8gICAgICAgICAgIEluaXRpYWwgZW5kIGRhdGUgaXMgYmxvY2sgIzMwMDAwMDAgKH5NaWQgSmFuIDIwMTcpLCBidXQgdGhlIGJhbmsgY2FuIGV4dGVuZCB0aGF0IGxpZmUuCiAgICAvLyAgICAgICAgICAgTm90ZTogdGhlIGJhbmsgY2FuIG9ubHkgRVhURU5EIHRoYXQgZW5kIGRhdGUsIG5vdCBzaG9ydGVuIGl0LgogICAgLy8KICAgIC8vIEFuZCBoZXJlIHdlIGdvIC0gaGFwcHkgcmVhZGluZzoKICAgIC8vCiAgICAvLyBzdG9yZSBvZiBhbGwgYWNjb3VudCBiYWxhbmNlcwogICAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpIGJhbGFuY2VzOwogICAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpIHRlcm1fZGVwb3NpdF9lbmRfYmxvY2s7IC8vIHN0b3JlIHBlciBhZGRyZXNzIHRoZSBtaW5pbXVtIHRpbWUgZm9yIHRoZSB0ZXJtIGRlcG9zaXQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8KICAgIGFkZHJlc3MgdGhlYmFuazsgLy8gdGhlIGJhbmsKICAgIAogICAgdWludDI1NiBwdWJsaWMgbWluaW11bV9kZXBvc2l0X2Ftb3VudDsgLy8gbWluaW11bSBkZXBvc2l0cwogICAgdWludDI1NiBwdWJsaWMgZGVwb3NpdF9mZWU7ICAgICAvLyBmZWUgZm9yIGRlcG9zaXRzCiAgICB1aW50MjU2IHB1YmxpYyBjb250cmFjdF9hbGl2ZV91bnRpbF90aGlzX2Jsb2NrOwogICAgCiAgICB1aW50MjU2IHB1YmxpYyBjb3VudF9jdXN0b21lcl9kZXBvc2l0czsgCiAgICAKICAgIGZ1bmN0aW9uIEJlc3RfQmFua193aXRoX0ludGVyZXN0KCkgeyAvLyBjcmVhdGUgdGhlIGNvbnRyYWN0CiAgICAgICAgdGhlYmFuayA9IG1zZy5zZW5kZXI7ICAKICAgICAgICBtaW5pbXVtX2RlcG9zaXRfYW1vdW50ID0gMjUwIGV0aGVyOwogICAgICAgIGRlcG9zaXRfZmVlID0gNSBldGhlcjsKICAgICAgICBjb250cmFjdF9hbGl2ZV91bnRpbF90aGlzX2Jsb2NrID0gMzAwMDAwMDsgLy8gYXJvdW5kIDIgbW9udGhzIGZyb20gbm93IChtaWQgSmFuIDIwMTcpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIC0tPiBjYW4gYmUgZXh0ZW5kZWQgYnV0IG5vdCBicm91Z2h0IGZvcndhcmQKICAgICAgICAvLwogICAgICAgIGNvdW50X2N1c3RvbWVyX2RlcG9zaXRzID0gMDsKICAgICAgICAvLyBiYW5rIGNhbm5vdCB0b3VjaCByZW1haW5pbmcgaW50ZXJlc3QgYmFsYW5jZSB1bnRpbCB0aGUgY29udHJhY3QgaGFzIHJlYWNoZWQgZW5kIG9mIGxpZmUuCiAgICAgICAgdGVybV9kZXBvc2l0X2VuZF9ibG9ja1t0aGViYW5rXSA9IGNvbnRyYWN0X2FsaXZlX3VudGlsX3RoaXNfYmxvY2s7CiAgICAgICAgLy8KICAgIH0KICAgIAogICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8KICAgIC8vIGRlcG9zaXQgZXRoZXIgaW50byB0ZXJtLWRlcG9zaXQgYWNjb3VudAogICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCiAgICBmdW5jdGlvbiBkZXBvc2l0KCkgcGF5YWJsZSB7CiAgICAgICAgLy8KICAgICAgICBpZiAobXNnLnZhbHVlIDwgbWluaW11bV9kZXBvc2l0X2Ftb3VudCkgdGhyb3c7IC8vIG1pbmltdW0gZGVwb3NpdCBpcyBhdCBsZWFzdCBtaW5pbXVtX3BheW1lbnQuCiAgICAgICAgLy8KICAgICAgICAvLyBubyBmZWUgZm9yIGZpcnN0IHBheW1lbnQgKGlmIHRoZSBjdXN0b21lcnMncyBiYWxhbmNlIGlzIDApCiAgICAgICAgaWYgKGJhbGFuY2VzW21zZy5zZW5kZXJdID09IDApIGRlcG9zaXRfZmVlID0gMCBldGhlcjsgIAogICAgICAgIC8vCiAgICAgICAgaWYgKCBtc2cuc2VuZGVyID09IHRoZWJhbmsgKXsgLy8gdGhlYmFuayBpcyBkZXBvc2l0aW5nIGludG8gYmFuay9pbnRlcmVzdCBhY2NvdW50LCB3aXRob3V0IGZlZQogICAgICAgICAgICBiYWxhbmNlc1t0aGViYW5rXSArPSBtc2cudmFsdWU7CiAgICAgICAgfQogICAgICAgIGVsc2UgeyAvLyBjdXN0b21lciBkZXBvc2l0CiAgICAgICAgICAgIGNvdW50X2N1c3RvbWVyX2RlcG9zaXRzICs9IDE7IC8vIGNvdW50IGRlcG9zaXRzLCBjYW5ub3QgcmVtb3ZlIGNvbnRyYWN0IGFueSBtb3JlIHVudGlsIGVuZCBvZiBsaWZlCiAgICAgICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdICs9IG1zZy52YWx1ZSAtIGRlcG9zaXRfZmVlOyAgLy8gY3JlZGl0IHRoZSBzZW5kZXIncyBhY2NvdW50CiAgICAgICAgICAgIGJhbGFuY2VzW3RoZWJhbmtdICs9IGRlcG9zaXRfZmVlOyAvLyBkaWZmZXJlbmNlIChmZWUpIHRvIGJlIGNyZWRpdGVkIHRvIHRoZWJhbmsKICAgICAgICAgICAgdGVybV9kZXBvc2l0X2VuZF9ibG9ja1ttc2cuc2VuZGVyXSA9IGJsb2NrLm51bWJlciArIDMwODUwOyAvLyAgYXBwcm94IDUgZGF5cyAoIDUgKiA4NjQwMC8xNCApOyAKICAgICAgICB9CiAgICAgICAgLy8KICAgIH0KICAgIAogICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCiAgICAvLyB3aXRoZHJhdyBmcm9tIGFjY291bnQsIHdpdGggMTAgZXRoZXIgaW50ZXJlc3QgIChhZnRlciB0ZXJtIGRlcG9zaXQgZW5kKQogICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCiAgICAvLwogICAgZnVuY3Rpb24gd2l0aGRyYXcodWludDI1NiB3aXRoZHJhd19hbW91bnQpIHsKICAgICAgICAvLwogICAgICAgIGlmICh3aXRoZHJhd19hbW91bnQgPCAxMCBldGhlcikgdGhyb3c7IC8vIG1pbmltdW0gd2l0aGRyYXcgYW1vdW50IGlzIDEwIGV0aGVyCiAgICAgICAgaWYgKCB3aXRoZHJhd19hbW91bnQgPiBiYWxhbmNlc1ttc2cuc2VuZGVyXSAgKSB0aHJvdzsgLy8gY2Fubm90IHdpdGhkcmF3IG1vcmUgdGhhbiBpbiBjdXN0b21lciBiYWxhbmNlCiAgICAgICAgaWYgKGJsb2NrLm51bWJlciA8IHRlcm1fZGVwb3NpdF9lbmRfYmxvY2tbbXNnLnNlbmRlcl0gKSB0aHJvdzsgLy8gY2Fubm90IHdpdGhkcmF3IHVudGlsIHRoZSB0ZXJtIGRlcG9zaXQgaGFzIGVuZGVkCiAgICAgICAgLy8gTm90ZTogdGhlYmFuay9pbnRlcmVzdCBhY2NvdW50IGNhbm5vdCBiZSB3aXRoZHJhd2VkIGZyb20gdW50aWwgY29udHJhY3QgZW5kLW9mIGxpZmUuCiAgICAgICAgLy8gICAgICAgdGhlYmFuaydzIHRlcm0tZGVwb3NpdCBlbmQgYmxvY2sgaXMgdGhlIHNhbWUgYXMgY29udHJhY3RfYWxpdmVfdW50aWxfdGhpc19ibG9jawogICAgICAgIC8vCiAgICAgICAgdWludDI1NiBpbnRlcmVzdCA9IDEgZXRoZXI7ICAvLyAxIGV0aGVyIGludGVyZXN0IHBhaWQgYXQgdGltZSBvZiB3aXRoZHJhd2FsCiAgICAgICAgLy8KICAgICAgICBpZiAobXNnLnNlbmRlciA9PSB0aGViYW5rKXsgLy8gYnV0IG5vIGludGVyZXN0IGZvciB0aGViYW5rICh3aG8gY2FuJ3Qgd2l0aGRyYXcgdW50aWwgYmxvY2sgY29udHJhY3RfYWxpdmVfdW50aWxfdGhpc19ibG9jayBhbnl3YXlzKQogICAgICAgICAgICBpbnRlcmVzdCA9IDAgZXRoZXI7CiAgICAgICAgfQogICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICBpZiAoaW50ZXJlc3QgPiBiYWxhbmNlc1t0aGViYW5rXSkgICAvLyBjYW50IHBheSBtb3JlIGludGVyZXN0IHRoYW4gYXZhaWxhYmxlIGluIHRoZSB0aGViYW5rL2JhbmsKICAgICAgICAgICAgaW50ZXJlc3QgPSBiYWxhbmNlc1t0aGViYW5rXTsgIC8vIHNvIHNlbmQgd2hhdGV2ZXIgaXMgbGVmdCBhbnl3YXlzCiAgICAgICAgLy8KICAgICAgICAvLwogICAgICAgIGJhbGFuY2VzW3RoZWJhbmtdIC09IGludGVyZXN0OyAgLy8gcmVkdWNlIHRoZWJhbmsgYmFsYW5jZSwgYW5kIHNlbmQgYm9udXMgdG8gY3VzdG9tZXIKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtPSB3aXRoZHJhd19hbW91bnQ7CiAgICAgICAgLy8KICAgICAgICBpZiAoIW1zZy5zZW5kZXIuc2VuZCh3aXRoZHJhd19hbW91bnQpKSB0aHJvdzsgIC8vIHNlbmQgd2l0aGRyYXcgYW1vdW50LCBidXQgY2hlY2sgZm9yIGVycm9yIHRvIHJvbGwgYmFjayBpZiBuZWVkZWQKICAgICAgICBpZiAoIW1zZy5zZW5kZXIuc2VuZChpbnRlcmVzdCkpIHRocm93OyAgICAgICAgIC8vIHNlbmQgaW50ZXJlc3QgYW1vdW50LCBidXQgY2hlY2sgZm9yIGVycm9yIHRvIHJvbGwgYmFjayBpZiBuZWVkZWQKICAgICAgICAvLwogICAgfQogICAgCiAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCiAgICAvLyBIRUxQRVIgRlVOQ1RJT05TCiAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCiAgICAKICAgIC8vIHNldCBtaW5pbXVtIGRlcG9zaXQgbGltaXRzCiAgICBmdW5jdGlvbiBzZXRfbWluaW11bV9wYXltZW50KHVpbnQyNTYgbmV3X2xpbWl0KSB7CiAgICAgICAgaWYgKCBtc2cuc2VuZGVyID09IHRoZWJhbmsgKXsKICAgICAgICAgICAgbWluaW11bV9kZXBvc2l0X2Ftb3VudCA9IG5ld19saW1pdDsKICAgICAgICB9CiAgICB9CiAgICAvLwogICAgLy8gY2hhbmdlIGRlcG9zaXQgZmVlCiAgICBmdW5jdGlvbiBzZXRfZGVwb3NpdF9mZWUgKHVpbnQyNTYgbmV3X2ZlZSkgewogICAgICAgIGlmICggbXNnLnNlbmRlciA9PSB0aGViYW5rICl7CiAgICAgICAgICAgIGRlcG9zaXRfZmVlID0gbmV3X2ZlZTsKICAgICAgICB9CiAgICB9CiAgICAKICAgIC8vIGZpbmQgb3V0IGhvdyBtdWNoIG1vbmV5IGlzIGF2YWlsYWJsZSBmb3IgaW50ZXJlc3QgcGF5bWVudHMKICAgIGZ1bmN0aW9uIGdldF9hdmFpbGFibGVfaW50ZXJlc3RfYW1vdW50ICgpIGNvbnN0YW50ICByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgcmV0dXJuIGJhbGFuY2VzW3RoZWJhbmtdOwogICAgfQogICAgLy8gZmluZCBvdXQgd2hhdCB0aGUgZW5kIGRhdGUgb2YgdGhlIGN1c3RvbWVycyB0ZXJtIGRlcG9zaXQgaXMKICAgIGZ1bmN0aW9uIGdldF90ZXJtX2RlcG9zaXRfZW5kX2RhdGUgKGFkZHJlc3MgcXVlcnlfYWRkcmVzcykgY29uc3RhbnQgIHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICByZXR1cm4gdGVybV9kZXBvc2l0X2VuZF9ibG9ja1txdWVyeV9hZGRyZXNzXTsKICAgIH0gICAgCiAgICAvLyBmaW5kIG91dCBob3cgbXVjaCBtb25leSBpcyBhdmFpbGFibGUgZm9yIGludGVyZXN0IHBheW1lbnRzCiAgICBmdW5jdGlvbiBnZXRfYmFsYW5jZSAoYWRkcmVzcyBxdWVyeV9hZGRyZXNzKSBjb25zdGFudCAgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHJldHVybiBiYWxhbmNlc1txdWVyeV9hZGRyZXNzXTsKICAgIH0KICAgIC8vCiAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCiAgICAvLyB0aGlzIGJhbmsgd29uJ3QgbGl2ZSBmb3JldmVyLCBzbyB0aGlzIHdpbGwgaGFuZGxlIHRoZSBleGl0IChvciBleHRlbmQgaXRzIGxpZmUpCiAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8KCS8vCiAgICBmdW5jdGlvbiBleHRlbmRfbGlmZV9vZl9jb250cmFjdCAodWludDI1NiBuZXdibG9jayl7CiAgICAgICAgaWYgKCBtc2cuc2VuZGVyICE9IHRoZWJhbmsgfHwgbmV3YmxvY2sgPCBjb250cmFjdF9hbGl2ZV91bnRpbF90aGlzX2Jsb2NrICkgdGhyb3c7CiAgICAgICAgLy8gY2FuIG9ubHkgZXh0ZW5kCiAgICAgICAgY29udHJhY3RfYWxpdmVfdW50aWxfdGhpc19ibG9jayA9IG5ld2Jsb2NrOyAKICAgICAgICAvLyBsb2NrIHRoZWJhbmsvaW50ZXJlc3QgYWNjb3VudCB1bnRpbCBuZXcgZW5kIGRhdGUKICAgICAgICB0ZXJtX2RlcG9zaXRfZW5kX2Jsb2NrW3RoZWJhbmtdID0gY29udHJhY3RfYWxpdmVfdW50aWxfdGhpc19ibG9jazsKICAgIH0KICAgIC8vCiAgICAvLyB0aGUgc2VsZiBkZXN0cnVjdCBhZnRlciB0aGUgZmluYWwgYmxvY2sgbnVtYmVyIGhhcyBiZWVuIHJlYWNoZWQgKG9yIGltbWVkaWF0ZWx5IGlmIHRoZXJlIGhhdmVudCBiZWVuIGFueSBjdXN0b21lciBwYXltZW50cyB5ZXQpCiAgICBmdW5jdGlvbiBjbG9zZV9iYW5rKCl7CiAgICAgICAgaWYgKGNvbnRyYWN0X2FsaXZlX3VudGlsX3RoaXNfYmxvY2sgPCBibG9jay5udW1iZXIgfHwgY291bnRfY3VzdG9tZXJfZGVwb3NpdHMgPT0gMCkKICAgICAgICAgICAgc2VsZmRlc3RydWN0KHRoZWJhbmspOyAKICAgICAgICAgICAgLy8gYW55IGZ1bmRzIHN0aWxsIHJlbWFpbmluZyB3aXRoaW4gdGhlIGJhbmsgd2lsbCBiZSBzZW50IHRvIHRoZSBjcmVhdG9yCiAgICAgICAgICAgIC8vIC0tPiBiYW5rIGN1c3RvbWVycyBoYXZlIHRvIG1ha2Ugc3VyZSB0aGV5IHdpdGhkcmF3IHRoZWlyICQkJCBiZWZvcmUgdGhlIGZpbmFsIGJsb2NrLgogICAgfQogICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLwogICAgLy8gZmFsbGJhY2sgZnVuY3Rpb24KICAgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLwogICAgZnVuY3Rpb24gKCkgcGF5YWJsZSB7IC8vIGFueSB1bmlkZW50aWZpZWQgcGF5bWVudHMgKHRoYXQgZGlkbnQgY2FsbCB0aGUgZGVwb3NpdCBmdW5jdGlvbikgCiAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gZ28gaW50byB0aGUgc3RhbmRhcmQgaW50ZXJlc3QgYWNjb3VudCBvZiB0aGUgYmFuawogICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGFuZCBiZWNvbWUgYXZhaWxhYmxlIGZvciBpbnRlcmVzdCB3aXRoZHJhd2FsIGJ5IGJhbmsgdXNlcnMKICAgICAgICBiYWxhbmNlc1t0aGViYW5rXSArPSBtc2cudmFsdWU7CiAgICB9Cn0='.
	

]
