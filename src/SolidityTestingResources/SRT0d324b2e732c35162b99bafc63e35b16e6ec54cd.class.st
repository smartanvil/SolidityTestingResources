Class {
	#name : #SRT0d324b2e732c35162b99bafc63e35b16e6ec54cd,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT0d324b2e732c35162b99bafc63e35b16e6ec54cd >> base64 [
	^ ''.
	

]
