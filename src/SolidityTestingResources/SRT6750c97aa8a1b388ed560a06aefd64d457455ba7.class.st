Class {
	#name : #SRT6750c97aa8a1b388ed560a06aefd64d457455ba7,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT6750c97aa8a1b388ed560a06aefd64d457455ba7 >> base64 [
	^ ''.
	

]
