Class {
	#name : #SRTb01b98a50781c454c9daa3d43eb5399ff5b604ee,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTb01b98a50781c454c9daa3d43eb5399ff5b604ee >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgovKioKICogQHRpdGxlIE93bmFibGUKICogQGRldiBUaGUgT3duYWJsZSBjb250cmFjdCBoYXMgYW4gb3duZXIgYWRkcmVzcywgYW5kIHByb3ZpZGVzIGJhc2ljIGF1dGhvcml6YXRpb24gY29udHJvbAogKiBmdW5jdGlvbnMsIHRoaXMgc2ltcGxpZmllcyB0aGUgaW1wbGVtZW50YXRpb24gb2YgInVzZXIgcGVybWlzc2lvbnMiLgogKi8KY29udHJhY3QgT3duYWJsZSB7CiAgICBhZGRyZXNzIG93bmVyOwoKICAgIC8qKgogICAgICogQGRldiBUaGUgT3duYWJsZSBjb25zdHJ1Y3RvciBzZXRzIHRoZSBvcmlnaW5hbCBgb3duZXJgIG9mIHRoZSBjb250cmFjdCB0byB0aGUgc2VuZGVyCiAgICAgKiBhY2NvdW50LgogICAgICovCiAgICBmdW5jdGlvbiBPd25hYmxlKCkgcHVibGljIHsKICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgICB9CgogICAgLyoqCiAgICAgKiBAZGV2IFRocm93cyBpZiBjYWxsZWQgYnkgYW55IGFjY291bnQgb3RoZXIgdGhhbiB0aGUgb3duZXIuCiAgICAgKi8KICAgIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgICAgICByZXF1aXJlKG93bmVyID09IG1zZy5zZW5kZXIpOwogICAgICAgIF87CiAgICB9Cn0KCi8qKgogKiBAdGl0bGUgU2VjcmV0IE5vdGUKICovCmNvbnRyYWN0IFNlY3JldE5vdGUgaXMgT3duYWJsZSB7CiAgICBzdHJ1Y3QgVXNlckluZm8gewogICAgICAgIG1hcHBpbmcoYnl0ZXMzMiA9PiBieXRlczMyKSBub3RlczsKICAgICAgICBieXRlczMyW10gbm90ZUtleXM7CiAgICAgICAgdWludDI1NiBpbmRleDsgLy8gMS1iYXNlZAogICAgfQoKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiBVc2VySW5mbykgcHJpdmF0ZSByZWdpc3RlclVzZXJzOwogICAgYWRkcmVzc1tdIHByaXZhdGUgdXNlckluZGV4OwoKICAgIGV2ZW50IFNlY3JldE5vdGVVcGRhdGVkKGFkZHJlc3MgaW5kZXhlZCBfc2VuZGVyLCBieXRlczMyIGluZGV4ZWQgX25vdGVLZXksIGJvb2wgX3N1Y2Nlc3MpOwoKICAgIGZ1bmN0aW9uIFNlY3JldE5vdGUoKSBwdWJsaWMgewogICAgfQoKICAgIGZ1bmN0aW9uIHVzZXJFeGlzdGVkKGFkZHJlc3MgX3VzZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zIChib29sKSB7CiAgICAgICAgaWYgKHVzZXJJbmRleC5sZW5ndGggPT0gMCkgewogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gKHVzZXJJbmRleFtyZWdpc3RlclVzZXJzW191c2VyXS5pbmRleCAtIDFdID09IF91c2VyKTsKICAgIH0KCiAgICBmdW5jdGlvbiAoKSBwdWJsaWMgcGF5YWJsZSB7CiAgICB9CgogICAgLyoqCiAgICAgKiBAZGV2IGZvciBvd25lciB0byB3aXRoZHJhdyBFVEggZnJvbSBkb25hdG9ycyBpZiB0aGVyZSBpcyBhbnkuICA6KQogICAgICogQHBhcmFtIF90byBUaGUgYWRkcmVzcyB3aGVyZSB3aXRoZHJhdyB0bwogICAgICogQHBhcmFtIF9hbW91bnQgVGhlIGFtb3VudCBvZiBFVEggdG8gd2l0aGRyYXcKICAgICAqLwogICAgZnVuY3Rpb24gd2l0aGRyYXcoYWRkcmVzcyBfdG8sIHVpbnQgX2Ftb3VudCkgcHVibGljIG9ubHlPd25lciB7CiAgICAgICAgX3RvLnRyYW5zZmVyKF9hbW91bnQpOwogICAgfQoKICAgIC8qKgogICAgICogQGRldiBGb3Igb3duZXIgdG8gY2hlY2sgcmVnaXN0ZXJlZCB1c2VyIGNvdW50CiAgICAgKi8KICAgIGZ1bmN0aW9uIGdldFVzZXJDb3VudCgpIHB1YmxpYyB2aWV3IG9ubHlPd25lciByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgcmV0dXJuIHVzZXJJbmRleC5sZW5ndGg7CiAgICB9CgogICAgLyoqCiAgICAgKiBAZGV2IEZvciBvd25lciB0byBjaGVjayByZWdpc3RlcmVkIHVzZXIgYWRkcmVzcyBiYXNlZCBvbiBpbmRleAogICAgICogQHBhcmFtIF9pbmRleCBTdGFydGluZyBmcm9tIDEKICAgICAqLwogICAgZnVuY3Rpb24gZ2V0VXNlckFkZHJlc3ModWludDI1NiBfaW5kZXgpIHB1YmxpYyB2aWV3IG9ubHlPd25lciByZXR1cm5zIChhZGRyZXNzKSB7CiAgICAgICAgcmVxdWlyZShfaW5kZXggPiAwKTsKICAgICAgICByZXR1cm4gdXNlckluZGV4W19pbmRleCAtIDFdOwogICAgfQoKICAgIC8qKgogICAgICogQGRldiBGb3IgdXNlciB0byBnZXQgdGhlaXIgb3duIHNlY3JldCBub3RlCiAgICAgKiBAcGFyYW0gX25vdGVLZXkgVGhlIGtleSBpZGVudGlmaWVyIGZvciBwYXJ0aWN1bGFyIG5vdGUKICAgICAqLwogICAgZnVuY3Rpb24gZ2V0Tm90ZShieXRlczMyIF9ub3RlS2V5KSBwdWJsaWMgdmlldyByZXR1cm5zIChieXRlczMyKSB7CiAgICAgICAgcmV0dXJuIHJlZ2lzdGVyVXNlcnNbbXNnLnNlbmRlcl0ubm90ZXNbX25vdGVLZXldOwogICAgfQoKICAgIC8qKgogICAgICogQGRldiBGb3IgdXNlciB0byBnZXQgdGhlaXIgb3duIHNlY3JldCBub3RlIGtleXMgY291bnQKICAgICAqLwogICAgZnVuY3Rpb24gZ2V0Tm90ZUtleXNDb3VudCgpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICByZXR1cm4gcmVnaXN0ZXJVc2Vyc1ttc2cuc2VuZGVyXS5ub3RlS2V5cy5sZW5ndGg7CiAgICB9CgogICAgLyoqCiAgICAgKiBAZGV2IEZvciB1c2VyIHRvIGdldCB0aGVpciBvd24gc2VjcmV0IG5vdGUga2V5IGJ5IGluZGV4CiAgICAgKiBAcGFyYW0gX2luZGV4IFRoZSAwLWJhc2VkIGluZGV4IGZvciBwYXJ0aWN1bGFyIG5vdGUKICAgICAqLwogICAgZnVuY3Rpb24gZ2V0Tm90ZUtleUJ5SW5kZXgodWludDI1NiBfaW5kZXgpIHB1YmxpYyB2aWV3IHJldHVybnMgKGJ5dGVzMzIpIHsKICAgICAgICByZXR1cm4gcmVnaXN0ZXJVc2Vyc1ttc2cuc2VuZGVyXS5ub3RlS2V5c1tfaW5kZXhdOwogICAgfQoKICAgIC8qKgogICAgICogQGRldiBGb3IgdXNlciB0byB1cGRhdGUgdGhlaXIgb3duIHNlY3JldCBub3RlCiAgICAgKiBAcGFyYW0gX25vdGVLZXkgVGhlIGtleSBpZGVudGlmaWVyIGZvciBwYXJ0aWN1bGFyIG5vdGUKICAgICAqIEBwYXJhbSBfY29udGVudCBUaGUgbm90ZSBwYXRoIGhhc2gKICAgICAqLwogICAgZnVuY3Rpb24gc2V0Tm90ZShieXRlczMyIF9ub3RlS2V5LCBieXRlczMyIF9jb250ZW50KSBwdWJsaWMgcGF5YWJsZSB7CiAgICAgICAgcmVxdWlyZShfbm90ZUtleSAhPSAiIik7CiAgICAgICAgcmVxdWlyZShfY29udGVudCAhPSAiIik7CgogICAgICAgIHZhciB1c2VyQWRkciA9IG1zZy5zZW5kZXI7CiAgICAgICAgdmFyIHVzZXIgPSByZWdpc3RlclVzZXJzW3VzZXJBZGRyXTsKICAgICAgICBpZiAodXNlci5ub3Rlc1tfbm90ZUtleV0gPT0gIiIpIHsKICAgICAgICAgICAgdXNlci5ub3RlS2V5cy5wdXNoKF9ub3RlS2V5KTsKICAgICAgICB9CiAgICAgICAgdXNlci5ub3Rlc1tfbm90ZUtleV0gPSBfY29udGVudDsKCiAgICAgICAgaWYgKHVzZXIuaW5kZXggPT0gMCkgewogICAgICAgICAgICB1c2VySW5kZXgucHVzaCh1c2VyQWRkcik7CiAgICAgICAgICAgIHVzZXIuaW5kZXggPSB1c2VySW5kZXgubGVuZ3RoOwogICAgICAgIH0KICAgICAgICBTZWNyZXROb3RlVXBkYXRlZCh1c2VyQWRkciwgX25vdGVLZXksIHRydWUpOwogICAgfQoKICAgIC8qKgogICAgICogQGRldiBEZXN0cm95IG9uZSdzIGFjY291bnQKICAgICAqLwogICAgZnVuY3Rpb24gZGVzdHJveUFjY291bnQoKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgICAgIHZhciB1c2VyQWRkciA9IG1zZy5zZW5kZXI7CiAgICAgICAgcmVxdWlyZSh1c2VyRXhpc3RlZCh1c2VyQWRkcikpOwoKICAgICAgICB1aW50IGRlbEluZGV4ID0gcmVnaXN0ZXJVc2Vyc1t1c2VyQWRkcl0uaW5kZXg7CiAgICAgICAgYWRkcmVzcyB1c2VyVG9Nb3ZlID0gdXNlckluZGV4W3VzZXJJbmRleC5sZW5ndGggLSAxXTsKCiAgICAgICAgaWYgKHVzZXJUb01vdmUgPT0gdXNlckFkZHIpIHsKICAgICAgICAgICAgZGVsZXRlKHJlZ2lzdGVyVXNlcnNbdXNlckFkZHJdKTsKICAgICAgICAgICAgdXNlckluZGV4Lmxlbmd0aCA9IDA7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0KCiAgICAgICAgdXNlckluZGV4W2RlbEluZGV4IC0gMV0gPSB1c2VyVG9Nb3ZlOwogICAgICAgIHJlZ2lzdGVyVXNlcnNbdXNlclRvTW92ZV0uaW5kZXggPSBkZWxJbmRleDsKICAgICAgICB1c2VySW5kZXgubGVuZ3RoLS07CiAgICAgICAgZGVsZXRlKHJlZ2lzdGVyVXNlcnNbdXNlckFkZHJdKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KfQ=='.
	

]
