Class {
	#name : #SRT737242fc5d432fc40f59bb1aa049436b6183f4f6,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT737242fc5d432fc40f59bb1aa049436b6183f4f6 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7CgovLyBXb2xmIENyeXB0byBwb29saW5nIGNvbnRyYWN0IGZvciBGaW50cnV4Ci8vIHdyaXR0ZW4gYnkgQGlhbWRlZmluaXRlbHlhaHVtYW4KCi8qKgogKiBAdGl0bGUgU2FmZU1hdGgKICogQGRldiBNYXRoIG9wZXJhdGlvbnMgd2l0aCBzYWZldHkgY2hlY2tzIHRoYXQgdGhyb3cgb24gZXJyb3IKICovCmxpYnJhcnkgU2FmZU1hdGggewogIGZ1bmN0aW9uIG11bCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICBpZiAoYSA9PSAwKSB7CiAgICAgIHJldHVybiAwOwogICAgfQogICAgdWludDI1NiBjID0gYSAqIGI7CiAgICBhc3NlcnQoYyAvIGEgPT0gYik7CiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIGRpdih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAKICAgIHVpbnQyNTYgYyA9IGEgLyBiOwogICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIGFzc2VydChiIDw9IGEpOwogICAgcmV0dXJuIGEgLSBiOwogIH0KCiAgZnVuY3Rpb24gYWRkKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgYXNzZXJ0KGMgPj0gYSk7CiAgICByZXR1cm4gYzsKICB9Cn0KCgpjb250cmFjdCBFUkMyMCB7CiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpIHt9CiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHt9Cn0KCgpjb250cmFjdCBXaGl0ZUxpc3QgewogICBmdW5jdGlvbiBjaGVja01lbWJlckxldmVsIChhZGRyZXNzIGFkZHIpIHZpZXcgcHVibGljIHJldHVybnMgKHVpbnQpIHt9Cn0KCgpjb250cmFjdCBQcmVzYWxlUG9vbCB7CgogIC8vIFNhZmVNYXRoIGlzIGEgbGlicmFyeSB0byBlbnN1cmUgdGhhdCBtYXRoIG9wZXJhdGlvbnMgZG8gbm90IGhhdmUgb3ZlcmZsb3cgZXJyb3JzCiAgLy8gaHR0cHM6Ly96ZXBwZWxpbi1zb2xpZGl0eS5yZWFkdGhlZG9jcy5pby9lbi9sYXRlc3Qvc2FmZW1hdGguaHRtbAogIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50OwogIAogIC8vIFRoZSBjb250cmFjdCBoYXMgMyBzdGFnZXM6CiAgLy8gMSAtIFRoZSBpbml0aWFsIHN0YXRlLiBUaGUgb3duZXIgaXMgYWJsZSB0byBhZGQgYWRkcmVzc2VzIHRvIHRoZSB3aGl0ZWxpc3QsIGFuZCBhbnkgd2hpdGVsaXN0ZWQgYWRkcmVzc2VzIGNhbiBkZXBvc2l0IG9yIHdpdGhkcmF3IGV0aCB0byB0aGUgY29udHJhY3QuCiAgLy8gMiAtIFRoZSBvd25lciBoYXMgY2xvc2VkIHRoZSBjb250cmFjdCBmb3IgZnVydGhlciBkZXBvc2l0cy4gV2hpdGVsaXN0ZWQgYWRkcmVzc2VzIGNhbiBzdGlsbCB3aXRoZHJhdyBldGggZnJvbSB0aGUgY29udHJhY3QuCiAgLy8gMyAtIFRoZSBldGggaXMgc2VudCBmcm9tIHRoZSBjb250cmFjdCB0byB0aGUgcmVjZWl2ZXIuIFVudXNlZCBldGggY2FuIGJlIGNsYWltZWQgYnkgY29udHJpYnV0b3JzIGltbWVkaWF0ZWx5LiBPbmNlIHRva2VucyBhcmUgc2VudCB0byB0aGUgY29udHJhY3QsCiAgLy8gICAgIHRoZSBvd25lciBlbmFibGVzIHdpdGhkcmF3YWxzIGFuZCBjb250cmlidXRvcnMgY2FuIHdpdGhkcmF3IHRoZWlyIHRva2Vucy4KICB1aW50OCBwdWJsaWMgY29udHJhY3RTdGFnZSA9IDE7CiAgCiAgLy8gVGhlc2UgdmFyaWFibGVzIGFyZSBzZXQgYXQgdGhlIHRpbWUgb2YgY29udHJhY3QgY3JlYXRpb24KICAvLyB0aGUgYWRkcmVzcyB0aGF0IGNyZWF0ZXMgdGhlIGNvbnRyYWN0CiAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CiAgLy8gdGhlIGFkZHJlc3NlcyBvZiBhbGwgYWRtaW5pc3RyYXRvcnMKICBhZGRyZXNzW10gcHVibGljIGFkbWluczsKICAvLyB0aGUgbWluaW11bSBldGggYW1vdW50IChpbiB3ZWkpIHRoYXQgY2FuIGJlIHNlbnQgYnkgYSB3aGl0ZWxpc3RlZCBhZGRyZXNzCiAgdWludCBwdWJsaWMgY29udHJpYnV0aW9uTWluOwogIC8vIHRoZSBtYXhpbXVtIGV0aCBhbW91bnQgKGluIHdlaSkgdGhhdCBjYW4gYmUgc2VudCBieSBhIHdoaXRlbGlzdGVkIGFkZHJlc3MKICB1aW50W10gcHVibGljIGNvbnRyaWJ1dGlvbkNhcHM7CiAgLy8gdGhlICUgb2YgdG9rZW5zIGtlcHQgYnkgdGhlIGNvbnRyYWN0IG93bmVyCiAgdWludCBwdWJsaWMgZmVlUGN0OwogIC8vIHRoZSBtYXhpbXVtIGdhcyBwcmljZSBhbGxvd2VkIGZvciBkZXBvc2l0cyBpbiBzdGFnZSAxCiAgdWludCBjb25zdGFudCBwdWJsaWMgbWF4R2FzUHJpY2UgPSA1MDAwMDAwMDAwMDsKICAvLyB0aGUgd2hpdGVsaXN0aW5nIGNvbnRyYWN0CiAgV2hpdGVMaXN0IHB1YmxpYyB3aGl0ZWxpc3RDb250cmFjdDsKICAKICAvLyBUaGVzZSB2YXJpYWJsZXMgYXJlIGFsbCBpbml0aWFsbHkgc2V0IHRvIDAgYW5kIHdpbGwgYmUgc2V0IGF0IHNvbWUgcG9pbnQgZHVyaW5nIHRoZSBjb250cmFjdAogIC8vIHRoZSBhbW91bnQgb2YgZXRoIChpbiB3ZWkpIHByZXNlbnQgaW4gdGhlIGNvbnRyYWN0IHdoZW4gaXQgd2FzIHN1Ym1pdHRlZAogIHVpbnQgcHVibGljIGZpbmFsQmFsYW5jZTsKICAvLyBhbiBhcnJheSBjb250YWluaW5nIGV0aCBhbW91bnRzIHRvIGJlIHJlZnVuZGVkIGluIHN0YWdlIDMKICB1aW50W10gcHVibGljIGV0aFJlZnVuZEFtb3VudDsKICAvLyB0aGUgZGVmYXVsdCB0b2tlbiBjb250cmFjdCB0byBiZSB1c2VkIGZvciB3aXRoZHJhd2luZyB0b2tlbnMgaW4gc3RhZ2UgMwogIGFkZHJlc3MgcHVibGljIGFjdGl2ZVRva2VuOwogIAogIC8vIGEgZGF0YSBzdHJ1Y3R1cmUgZm9yIGhvbGRpbmcgdGhlIGNvbnRyaWJ1dGlvbiBhbW91bnQsIGNhcCwgZXRoIHJlZnVuZCBzdGF0dXMsIGFuZCB0b2tlbiB3aXRoZHJhd2FsIHN0YXR1cyBmb3IgZWFjaCB3aGl0ZWxpc3RlZCBhZGRyZXNzCiAgc3RydWN0IENvbnRyaWJ1dG9yIHsKICAgIGJvb2wgYXV0aG9yaXplZDsKICAgIHVpbnQgZXRoUmVmdW5kOwogICAgdWludCBiYWxhbmNlOwogICAgdWludCBjYXA7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQpIHRva2Vuc0NsYWltZWQ7CiAgfQogIC8vIGEgbWFwcGluZyB0aGF0IGhvbGRzIHRoZSBjb250cmlidXRvciBzdHJ1Y3QgZm9yIGVhY2ggd2hpdGVsaXN0ZWQgYWRkcmVzcwogIG1hcHBpbmcgKGFkZHJlc3MgPT4gQ29udHJpYnV0b3IpIHdoaXRlbGlzdDsKICAKICAvLyBhIGRhdGEgc3RydWN0dXJlIGZvciBob2xkaW5nIGluZm9ybWF0aW9uIHJlbGF0ZWQgdG8gdG9rZW4gd2l0aGRyYXdhbHMuCiAgc3RydWN0IFRva2VuQWxsb2NhdGlvbiB7CiAgICBFUkMyMCB0b2tlbjsKICAgIHVpbnRbXSBwY3Q7CiAgICB1aW50IGJhbGFuY2VSZW1haW5pbmc7CiAgfQogIC8vIGEgbWFwcGluZyB0aGF0IGhvbGRzIHRoZSB0b2tlbiBhbGxvY2F0aW9uIHN0cnVjdCBmb3IgZWFjaCB0b2tlbiBhZGRyZXNzCiAgbWFwcGluZyAoYWRkcmVzcyA9PiBUb2tlbkFsbG9jYXRpb24pIGRpc3RyaWJ1dGlvbjsKICAKICAKICAvLyB0aGlzIG1vZGlmaWVyIGlzIHVzZWQgZm9yIGZ1bmN0aW9ucyB0aGF0IGNhbiBvbmx5IGJlIGFjY2Vzc2VkIGJ5IHRoZSBjb250cmFjdCBjcmVhdG9yCiAgbW9kaWZpZXIgb25seUFkbWlucyAoKSB7CiAgICBmb3IgKHVpbnQ4IGk9MDsgaTxhZG1pbnMubGVuZ3RoOyBpKyspIHsKICAgICAgaWYgKG1zZy5zZW5kZXI9PWFkbWluc1tpXSkgewogICAgICAgIF87CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICB9CiAgICByZXZlcnQoKTsKICB9CiAgCiAgLy8gdGhpcyBtb2RpZmllciBpcyB1c2VkIHRvIHByZXZlbnQgcmUtZW50cmFuY3kgZXhwbG9pdHMgZHVyaW5nIGNvbnRyYWN0ID4gY29udHJhY3QgaW50ZXJhY3Rpb24KICBib29sIGxvY2tlZDsKICBtb2RpZmllciBub1JlZW50cmFuY3koKSB7CiAgICByZXF1aXJlKCFsb2NrZWQpOwogICAgbG9ja2VkID0gdHJ1ZTsKICAgIF87CiAgICBsb2NrZWQgPSBmYWxzZTsKICB9CiAgCiAgLy8gRXZlbnRzIHRyaWdnZXJlZCB0aHJvdWdob3V0IGNvbnRyYWN0IGV4ZWN1dGlvbgogIC8vIFRoZXNlIGNhbiBiZSB3YXRjaGVkIHZpYSBnZXRoIGZpbHRlcnMgdG8ga2VlcCB1cC10by1kYXRlIHdpdGggdGhlIGNvbnRyYWN0CiAgZXZlbnQgQ29udHJpYnV0b3JCYWxhbmNlQ2hhbmdlZCAoYWRkcmVzcyBjb250cmlidXRvciwgdWludCB0b3RhbEJhbGFuY2UpOwogIGV2ZW50IFJlY2VpdmVyQWRkcmVzc0NoYW5nZWQgKCBhZGRyZXNzIF9hZGRyKTsKICBldmVudCBUb2tlbnNXaXRoZHJhd24gKGFkZHJlc3MgcmVjZWl2ZXIsIHVpbnQgYW1vdW50KTsKICBldmVudCBFdGhSZWZ1bmRlZCAoYWRkcmVzcyByZWNlaXZlciwgdWludCBhbW91bnQpOwogIGV2ZW50IFdpdGhkcmF3YWxzT3BlbiAoYWRkcmVzcyB0b2tlbkFkZHIpOwogIGV2ZW50IEVSQzIyM1JlY2VpdmVkIChhZGRyZXNzIHRva2VuLCB1aW50IHZhbHVlKTsKICBldmVudCBFdGhSZWZ1bmRSZWNlaXZlZCAoYWRkcmVzcyBzZW5kZXIsIHVpbnQgYW1vdW50KTsKICAgCiAgLy8gVGhlc2UgYXJlIGludGVybmFsIGZ1bmN0aW9ucyB1c2VkIGZvciBjYWxjdWxhdGluZyBmZWVzLCBldGggYW5kIHRva2VuIGFsbG9jYXRpb25zIGFzICUKICAvLyByZXR1cm5zIGEgdmFsdWUgYXMgYSAlIGFjY3VyYXRlIHRvIDIwIGRlY2ltYWwgcG9pbnRzCiAgZnVuY3Rpb24gX3RvUGN0ICh1aW50IG51bWVyYXRvciwgdWludCBkZW5vbWluYXRvciApIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludCkgewogICAgcmV0dXJuIG51bWVyYXRvci5tdWwoMTAgKiogMjApIC8gZGVub21pbmF0b3I7CiAgfQogIAogIC8vIHJldHVybnMgJSBvZiBhbnkgbnVtYmVyLCB3aGVyZSAlIGdpdmVuIHdhcyBnZW5lcmF0ZWQgd2l0aCB0b1BjdAogIGZ1bmN0aW9uIF9hcHBseVBjdCAodWludCBudW1lcmF0b3IsIHVpbnQgcGN0KSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQpIHsKICAgIHJldHVybiBudW1lcmF0b3IubXVsKHBjdCkgLyAoMTAgKiogMjApOwogIH0KICAKICAvLyBUaGlzIGZ1bmN0aW9uIGlzIGNhbGxlZCBhdCB0aGUgdGltZSBvZiBjb250cmFjdCBjcmVhdGlvbiwKICAvLyBpdCBzZXRzIHRoZSBpbml0aWFsIHZhcmlhYmxlcyBhbmQgd2hpdGVsaXN0cyB0aGUgY29udHJhY3Qgb3duZXIuCiAgZnVuY3Rpb24gUHJlc2FsZVBvb2woYWRkcmVzc1tdIGFkbWluTGlzdCwgYWRkcmVzcyB3aGl0ZWxpc3RBZGRyLCB1aW50IGluZGl2aWR1YWxNaW4sIHVpbnRbXSBjYXBBbW91bnRzLCB1aW50IGZlZSkgcHVibGljIHsKICAgIHJlcXVpcmUgKGZlZSA8IDEwMCk7CiAgICByZXF1aXJlICgxMDAwMDAwMDAwMDAwMDAwMDAgPD0gaW5kaXZpZHVhbE1pbik7CiAgICByZXF1aXJlIChjYXBBbW91bnRzLmxlbmd0aD4xICYmIGNhcEFtb3VudHMubGVuZ3RoPDI1Nik7CiAgICBmb3IgKHVpbnQ4IGk9MTsgaTxjYXBBbW91bnRzLmxlbmd0aDsgaSsrKSB7CiAgICAgIHJlcXVpcmUgKGNhcEFtb3VudHNbaV0gPD0gY2FwQW1vdW50c1swXSk7CiAgICB9CiAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgICBhZG1pbnMgPSBhZG1pbkxpc3Q7CiAgICBhZG1pbnMucHVzaChtc2cuc2VuZGVyKTsKICAgIGNvbnRyaWJ1dGlvbk1pbiA9IGluZGl2aWR1YWxNaW47CiAgICBjb250cmlidXRpb25DYXBzID0gY2FwQW1vdW50czsKICAgIGZlZVBjdCA9IF90b1BjdChmZWUsMTAwKTsKICAgIHdoaXRlbGlzdENvbnRyYWN0ID0gV2hpdGVMaXN0KHdoaXRlbGlzdEFkZHIpOwogICAgd2hpdGVsaXN0W21zZy5zZW5kZXJdLmF1dGhvcml6ZWQgPSB0cnVlOwogIH0KICAKICAvLyBUaGlzIGZ1bmN0aW9uIGlzIGNhbGxlZCB3aGVuZXZlciBldGggaXMgc2VudCBpbnRvIHRoZSBjb250cmFjdC4KICAvLyBUaGUgc2VuZCB3aWxsIGZhaWwgdW5sZXNzIHRoZSBjb250cmFjdCBpcyBpbiBzdGFnZSBvbmUgYW5kIHRoZSBzZW5kZXIgaGFzIGJlZW4gd2hpdGVsaXN0ZWQuCiAgLy8gVGhlIGFtb3VudCBzZW50IGlzIGFkZGVkIHRvIHRoZSBiYWxhbmNlIGluIHRoZSBDb250cmlidXRvciBzdHJ1Y3QgYXNzb2NpYXRlZCB3aXRoIHRoZSBzZW5kaW5nIGFkZHJlc3MuCiAgZnVuY3Rpb24gKCkgcGF5YWJsZSBwdWJsaWMgewogICAgaWYgKGNvbnRyYWN0U3RhZ2UgPT0gMSkgewogICAgICBfZXRoRGVwb3NpdCgpOwogICAgfSBlbHNlIGlmIChjb250cmFjdFN0YWdlID09IDMpIHsKICAgICAgX2V0aFJlZnVuZCgpOwogICAgfSBlbHNlIHJldmVydCgpOwogIH0KICAKICAvLyBJbnRlcm5hbCBmdW5jdGlvbiBmb3IgaGFuZGxpbmcgZXRoIGRlcG9zaXRzIGR1cmluZyBjb250cmFjdCBzdGFnZSBvbmUuCiAgZnVuY3Rpb24gX2V0aERlcG9zaXQgKCkgaW50ZXJuYWwgewogICAgYXNzZXJ0IChjb250cmFjdFN0YWdlID09IDEpOwogICAgcmVxdWlyZSAodHguZ2FzcHJpY2UgPD0gbWF4R2FzUHJpY2UpOwogICAgcmVxdWlyZSAodGhpcy5iYWxhbmNlIDw9IGNvbnRyaWJ1dGlvbkNhcHNbMF0pOwogICAgdmFyIGMgPSB3aGl0ZWxpc3RbbXNnLnNlbmRlcl07CiAgICB1aW50IG5ld0JhbGFuY2UgPSBjLmJhbGFuY2UuYWRkKG1zZy52YWx1ZSk7CiAgICByZXF1aXJlIChuZXdCYWxhbmNlID49IGNvbnRyaWJ1dGlvbk1pbik7CiAgICByZXF1aXJlIChuZXdCYWxhbmNlIDw9IF9jaGVja0NhcChtc2cuc2VuZGVyKSk7CiAgICBjLmJhbGFuY2UgPSBuZXdCYWxhbmNlOwogICAgQ29udHJpYnV0b3JCYWxhbmNlQ2hhbmdlZChtc2cuc2VuZGVyLCBuZXdCYWxhbmNlKTsKICB9CiAgCiAgLy8gSW50ZXJuYWwgZnVuY3Rpb24gZm9yIGhhbmRsaW5nIGV0aCByZWZ1bmRzIGR1cmluZyBzdGFnZSB0aHJlZS4KICBmdW5jdGlvbiBfZXRoUmVmdW5kICgpIGludGVybmFsIHsKICAgIGFzc2VydCAoY29udHJhY3RTdGFnZSA9PSAzKTsKICAgIHJlcXVpcmUgKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgcmVxdWlyZSAobXNnLnZhbHVlID49IGNvbnRyaWJ1dGlvbk1pbik7CiAgICBldGhSZWZ1bmRBbW91bnQucHVzaChtc2cudmFsdWUpOwogICAgRXRoUmVmdW5kUmVjZWl2ZWQobXNnLnNlbmRlciwgbXNnLnZhbHVlKTsKICB9CiAgCiAgLy8gVGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQgdG8gd2l0aGRyYXcgZXRoIG9yIHRva2VucyBmcm9tIHRoZSBjb250cmFjdC4KICAvLyBJdCBjYW4gb25seSBiZSBjYWxsZWQgYnkgYWRkcmVzc2VzIHRoYXQgYXJlIHdoaXRlbGlzdGVkIGFuZCBzaG93IGEgYmFsYW5jZSBncmVhdGVyIHRoYW4gMC4KICAvLyBJZiBjYWxsZWQgZHVyaW5nIGNvbnRyYWN0IHN0YWdlcyBvbmUgb3IgdHdvLCB0aGUgZnVsbCBldGggYmFsYW5jZSBkZXBvc2l0ZWQgaW50byB0aGUgY29udHJhY3Qgd2lsbCBiZSByZXR1cm5lZCBhbmQgdGhlIGNvbnRyaWJ1dG9yJ3MgYmFsYW5jZSB3aWxsIGJlIHJlc2V0IHRvIDAuCiAgLy8gSWYgY2FsbGVkIGR1cmluZyBzdGFnZSB0aHJlZSwgdGhlIGNvbnRyaWJ1dG9yJ3MgdW51c2VkIGV0aCB3aWxsIGJlIHJldHVybmVkLCBhcyB3ZWxsIGFzIGFueSBhdmFpbGFibGUgdG9rZW5zLgogIC8vIFRoZSB0b2tlbiBhZGRyZXNzIG1heSBiZSBwcm92aWRlZCBvcHRpb25hbGx5IHRvIHdpdGhkcmF3IHRva2VucyB0aGF0IGFyZSBub3QgY3VycmVudGx5IHRoZSBkZWZhdWx0IHRva2VuIChhaXJkcm9wcykuCiAgZnVuY3Rpb24gd2l0aGRyYXcgKGFkZHJlc3MgdG9rZW5BZGRyKSBwdWJsaWMgewogICAgdmFyIGMgPSB3aGl0ZWxpc3RbbXNnLnNlbmRlcl07CiAgICByZXF1aXJlIChjLmJhbGFuY2UgPiAwKTsKICAgIGlmIChjb250cmFjdFN0YWdlIDwgMykgewogICAgICB1aW50IGFtb3VudFRvVHJhbnNmZXIgPSBjLmJhbGFuY2U7CiAgICAgIGMuYmFsYW5jZSA9IDA7CiAgICAgIG1zZy5zZW5kZXIudHJhbnNmZXIoYW1vdW50VG9UcmFuc2Zlcik7CiAgICAgIENvbnRyaWJ1dG9yQmFsYW5jZUNoYW5nZWQobXNnLnNlbmRlciwgMCk7CiAgICB9IGVsc2UgewogICAgICBfd2l0aGRyYXcobXNnLnNlbmRlcix0b2tlbkFkZHIpOwogICAgfSAgCiAgfQogIAogIC8vIFRoaXMgZnVuY3Rpb24gYWxsb3dzIHRoZSBjb250cmFjdCBvd25lciB0byBmb3JjZSBhIHdpdGhkcmF3YWwgdG8gYW55IGNvbnRyaWJ1dG9yLgogIGZ1bmN0aW9uIHdpdGhkcmF3Rm9yIChhZGRyZXNzIGNvbnRyaWJ1dG9yLCBhZGRyZXNzIHRva2VuQWRkcikgcHVibGljIG9ubHlBZG1pbnMgewogICAgcmVxdWlyZSAoY29udHJhY3RTdGFnZSA9PSAzKTsKICAgIHJlcXVpcmUgKHdoaXRlbGlzdFtjb250cmlidXRvcl0uYmFsYW5jZSA+IDApOwogICAgX3dpdGhkcmF3KGNvbnRyaWJ1dG9yLHRva2VuQWRkcik7CiAgfQogIAogIC8vIFRoaXMgaW50ZXJuYWwgZnVuY3Rpb24gaGFuZGxlcyB3aXRoZHJhd2FscyBkdXJpbmcgc3RhZ2UgdGhyZWUuCiAgLy8gVGhlIGFzc29jaWF0ZWQgZXZlbnRzIHdpbGwgZmlyZSB0byBub3RpZnkgd2hlbiBhIHJlZnVuZCBvciB0b2tlbiBhbGxvY2F0aW9uIGlzIGNsYWltZWQuCiAgZnVuY3Rpb24gX3dpdGhkcmF3IChhZGRyZXNzIHJlY2VpdmVyLCBhZGRyZXNzIHRva2VuQWRkcikgaW50ZXJuYWwgewogICAgYXNzZXJ0IChjb250cmFjdFN0YWdlID09IDMpOwogICAgdmFyIGMgPSB3aGl0ZWxpc3RbcmVjZWl2ZXJdOwogICAgaWYgKHRva2VuQWRkciA9PSAweDAwKSB7CiAgICAgIHRva2VuQWRkciA9IGFjdGl2ZVRva2VuOwogICAgfQogICAgdmFyIGQgPSBkaXN0cmlidXRpb25bdG9rZW5BZGRyXTsKICAgIHJlcXVpcmUgKCAoZXRoUmVmdW5kQW1vdW50Lmxlbmd0aCA+IGMuZXRoUmVmdW5kKSB8fCBkLnBjdC5sZW5ndGggPiBjLnRva2Vuc0NsYWltZWRbdG9rZW5BZGRyXSApOwogICAgaWYgKGV0aFJlZnVuZEFtb3VudC5sZW5ndGggPiBjLmV0aFJlZnVuZCkgewogICAgICB1aW50IHBjdCA9IF90b1BjdChjLmJhbGFuY2UsZmluYWxCYWxhbmNlKTsKICAgICAgdWludCBldGhBbW91bnQgPSAwOwogICAgICBmb3IgKHVpbnQgaT1jLmV0aFJlZnVuZDsgaTxldGhSZWZ1bmRBbW91bnQubGVuZ3RoOyBpKyspIHsKICAgICAgICBldGhBbW91bnQgPSBldGhBbW91bnQuYWRkKF9hcHBseVBjdChldGhSZWZ1bmRBbW91bnRbaV0scGN0KSk7CiAgICAgIH0KICAgICAgYy5ldGhSZWZ1bmQgPSBldGhSZWZ1bmRBbW91bnQubGVuZ3RoOwogICAgICBpZiAoZXRoQW1vdW50ID4gMCkgewogICAgICAgIHJlY2VpdmVyLnRyYW5zZmVyKGV0aEFtb3VudCk7CiAgICAgICAgRXRoUmVmdW5kZWQocmVjZWl2ZXIsZXRoQW1vdW50KTsKICAgICAgfQogICAgfQogICAgaWYgKGQucGN0Lmxlbmd0aCA+IGMudG9rZW5zQ2xhaW1lZFt0b2tlbkFkZHJdKSB7CiAgICAgIHVpbnQgdG9rZW5BbW91bnQgPSAwOwogICAgICBmb3IgKGk9Yy50b2tlbnNDbGFpbWVkW3Rva2VuQWRkcl07IGk8ZC5wY3QubGVuZ3RoOyBpKyspIHsKICAgICAgICB0b2tlbkFtb3VudCA9IHRva2VuQW1vdW50LmFkZChfYXBwbHlQY3QoYy5iYWxhbmNlLGQucGN0W2ldKSk7CiAgICAgIH0KICAgICAgYy50b2tlbnNDbGFpbWVkW3Rva2VuQWRkcl0gPSBkLnBjdC5sZW5ndGg7CiAgICAgIGlmICh0b2tlbkFtb3VudCA+IDApIHsKICAgICAgICByZXF1aXJlKGQudG9rZW4udHJhbnNmZXIocmVjZWl2ZXIsdG9rZW5BbW91bnQpKTsKICAgICAgICBkLmJhbGFuY2VSZW1haW5pbmcgPSBkLmJhbGFuY2VSZW1haW5pbmcuc3ViKHRva2VuQW1vdW50KTsKICAgICAgICBUb2tlbnNXaXRoZHJhd24ocmVjZWl2ZXIsdG9rZW5BbW91bnQpOwogICAgICB9ICAKICAgIH0KICAgIAogIH0KICAKICAvLyBUaGlzIGZ1bmN0aW9uIGNhbiBvbmx5IGJlIGV4ZWN1dGVkIGJ5IHRoZSBvd25lciwgaXQgYWRkcyBhbiBhZGRyZXNzIHRvIHRoZSB3aGl0ZWxpc3QuCiAgLy8gVG8gZXhlY3V0ZSwgdGhlIGNvbnRyYWN0IG11c3QgYmUgaW4gc3RhZ2UgMSwgdGhlIGFkZHJlc3MgY2Fubm90IGFscmVhZHkgYmUgd2hpdGVsaXN0ZWQsIGFuZCB0aGUgYWRkcmVzcyBjYW5ub3QgYmUgYSBjb250cmFjdCBpdHNlbGYuCiAgLy8gQmxvY2tpbmcgY29udHJhY3RzIGZyb20gYmVpbmcgd2hpdGVsaXN0ZWQgcHJldmVudHMgYXR0YWNrcyBmcm9tIHVuZXhwZWN0ZWQgY29udHJhY3QgdG8gY29udHJhY3QgaW50ZXJhY3Rpb24gLSB2ZXJ5IGltcG9ydGFudCEKICBmdW5jdGlvbiBhdXRob3JpemUgKGFkZHJlc3MgYWRkciwgdWludCBjYXApIHB1YmxpYyBvbmx5QWRtaW5zIHsKICAgIHJlcXVpcmUgKGNvbnRyYWN0U3RhZ2UgPT0gMSk7CiAgICBfY2hlY2tXaGl0ZWxpc3RDb250cmFjdChhZGRyKTsKICAgIHJlcXVpcmUgKCF3aGl0ZWxpc3RbYWRkcl0uYXV0aG9yaXplZCk7CiAgICByZXF1aXJlICgoY2FwID4gMCAmJiBjYXAgPCBjb250cmlidXRpb25DYXBzLmxlbmd0aCkgfHwgKGNhcCA+PSBjb250cmlidXRpb25NaW4gJiYgY2FwIDw9IGNvbnRyaWJ1dGlvbkNhcHNbMF0pICk7CiAgICB1aW50IHNpemU7CiAgICBhc3NlbWJseSB7IHNpemUgOj0gZXh0Y29kZXNpemUoYWRkcikgfQogICAgcmVxdWlyZSAoc2l6ZSA9PSAwKTsKICAgIHdoaXRlbGlzdFthZGRyXS5jYXAgPSBjYXA7CiAgICB3aGl0ZWxpc3RbYWRkcl0uYXV0aG9yaXplZCA9IHRydWU7CiAgfQogIAogIC8vIFRoaXMgZnVuY3Rpb24gaXMgdXNlZCBieSB0aGUgb3duZXIgdG8gYXV0aG9yaXplIG1hbnkgYWRkcmVzc2VzIGluIGEgc2luZ2xlIGNhbGwuCiAgLy8gRWFjaCBhZGRyZXNzIHdpbGwgYmUgZ2l2ZW4gdGhlIHNhbWUgY2FwLCBhbmQgdGhlIGNhcCBtdXN0IGJlIG9uZSBvZiB0aGUgc3RhbmRhcmQgbGV2ZWxzLgogIGZ1bmN0aW9uIGF1dGhvcml6ZU1hbnkgKGFkZHJlc3NbXSBhZGRyLCB1aW50IGNhcCkgcHVibGljIG9ubHlBZG1pbnMgewogICAgcmVxdWlyZSAoYWRkci5sZW5ndGggPCAyNTUpOwogICAgcmVxdWlyZSAoY2FwID4gMCAmJiBjYXAgPCBjb250cmlidXRpb25DYXBzLmxlbmd0aCk7CiAgICBmb3IgKHVpbnQ4IGk9MDsgaTxhZGRyLmxlbmd0aDsgaSsrKSB7CiAgICAgIGF1dGhvcml6ZShhZGRyW2ldLCBjYXApOwogICAgfQogIH0KICAKICAvLyBUaGlzIGZ1bmN0aW9uIGlzIGNhbGxlZCBieSB0aGUgb3duZXIgdG8gcmVtb3ZlIGFuIGFkZHJlc3MgZnJvbSB0aGUgd2hpdGVsaXN0LgogIC8vIEl0IG1heSBvbmx5IGJlIGV4ZWN1dGVkIGR1cmluZyBzdGFnZXMgMSBhbmQgMi4gIEFueSBldGggc2VudCBieSB0aGUgYWRkcmVzcyBpcyByZWZ1bmRlZCBhbmQgdGhlaXIgcGVyc29uYWwgY2FwIGlzIHNldCB0byAwLgogIC8vIEl0IHdpbGwgdGhyb3cgaWYgdGhlIGFkZHJlc3MgaXMgc3RpbGwgYXV0aG9yaXNlZCBpbiB0aGUgd2hpdGVsaXN0IGNvbnRyYWN0LgogIGZ1bmN0aW9uIHJldm9rZSAoYWRkcmVzcyBhZGRyKSBwdWJsaWMgb25seUFkbWlucyB7CiAgICByZXF1aXJlIChjb250cmFjdFN0YWdlIDwgMyk7CiAgICByZXF1aXJlICh3aGl0ZWxpc3RbYWRkcl0uYXV0aG9yaXplZCk7CiAgICByZXF1aXJlICh3aGl0ZWxpc3RDb250cmFjdC5jaGVja01lbWJlckxldmVsKGFkZHIpID09IDApOwogICAgd2hpdGVsaXN0W2FkZHJdLmF1dGhvcml6ZWQgPSBmYWxzZTsKICAgIGlmICh3aGl0ZWxpc3RbYWRkcl0uYmFsYW5jZSA+IDApIHsKICAgICAgdWludCBhbW91bnRUb1RyYW5zZmVyID0gd2hpdGVsaXN0W2FkZHJdLmJhbGFuY2U7CiAgICAgIHdoaXRlbGlzdFthZGRyXS5iYWxhbmNlID0gMDsKICAgICAgYWRkci50cmFuc2ZlcihhbW91bnRUb1RyYW5zZmVyKTsKICAgICAgQ29udHJpYnV0b3JCYWxhbmNlQ2hhbmdlZChhZGRyLCAwKTsKICAgIH0KICB9CiAgCiAgLy8gVGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQgYnkgdGhlIG93bmVyIHRvIG1vZGlmeSB0aGUgY29udHJpYnV0aW9uIGNhcCBvZiBhIHdoaXRlbGlzdGVkIGFkZHJlc3MuCiAgLy8gSWYgdGhlIGN1cnJlbnQgY29udHJpYnV0aW9uIGJhbGFuY2UgZXhjZWVkcyB0aGUgbmV3IGNhcCwgdGhlIGV4Y2VzcyBiYWxhbmNlIGlzIHJlZnVuZGVkLgogIGZ1bmN0aW9uIG1vZGlmeUluZGl2aWR1YWxDYXAgKGFkZHJlc3MgYWRkciwgdWludCBjYXApIHB1YmxpYyBvbmx5QWRtaW5zIHsKICAgIHJlcXVpcmUgKGNvbnRyYWN0U3RhZ2UgPCAzKTsKICAgIHJlcXVpcmUgKGNhcCA8IGNvbnRyaWJ1dGlvbkNhcHMubGVuZ3RoIHx8IChjYXAgPj0gY29udHJpYnV0aW9uTWluICYmIGNhcCA8PSBjb250cmlidXRpb25DYXBzWzBdKSApOwogICAgX2NoZWNrV2hpdGVsaXN0Q29udHJhY3QoYWRkcik7CiAgICB2YXIgYyA9IHdoaXRlbGlzdFthZGRyXTsKICAgIHJlcXVpcmUgKGMuYXV0aG9yaXplZCk7CiAgICB1aW50IGFtb3VudCA9IGMuYmFsYW5jZTsKICAgIGMuY2FwID0gY2FwOwogICAgdWludCBjYXBBbW91bnQgPSBfY2hlY2tDYXAoYWRkcik7CiAgICBpZiAoYW1vdW50ID4gY2FwQW1vdW50KSB7CiAgICAgIGMuYmFsYW5jZSA9IGNhcEFtb3VudDsKICAgICAgYWRkci50cmFuc2ZlcihhbW91bnQuc3ViKGNhcEFtb3VudCkpOwogICAgICBDb250cmlidXRvckJhbGFuY2VDaGFuZ2VkKGFkZHIsIGNhcEFtb3VudCk7CiAgICB9CiAgfQogIAogIC8vIFRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkIGJ5IHRoZSBvd25lciB0byBtb2RpZnkgdGhlIGNhcCBmb3IgYSBjb250cmlidXRpb24gbGV2ZWwuCiAgLy8gVGhlIGNhcCBjYW4gb25seSBiZSBpbmNyZWFzZWQsIG5vdCBkZWNyZWFzZWQsIGFuZCBjYW5ub3QgZXhjZWVkIHRoZSBjb250cmFjdCBsaW1pdC4KICBmdW5jdGlvbiBtb2RpZnlMZXZlbENhcCAodWludCBsZXZlbCwgdWludCBjYXApIHB1YmxpYyBvbmx5QWRtaW5zIHsKICAgIHJlcXVpcmUgKGNvbnRyYWN0U3RhZ2UgPCAzKTsKICAgIHJlcXVpcmUgKGxldmVsID4gMCAmJiBsZXZlbCA8IGNvbnRyaWJ1dGlvbkNhcHMubGVuZ3RoKTsKICAgIHJlcXVpcmUgKGNvbnRyaWJ1dGlvbkNhcHNbbGV2ZWxdIDwgY2FwICYmIGNvbnRyaWJ1dGlvbkNhcHNbMF0gPj0gY2FwKTsKICAgIGNvbnRyaWJ1dGlvbkNhcHNbbGV2ZWxdID0gY2FwOwogIH0KICAKICAvLyBUaGlzIGZ1bmN0aW9uIGNhbiBiZSBjYWxsZWQgZHVyaW5nIHN0YWdlcyBvbmUgb3IgdHdvIHRvIG1vZGlmeSB0aGUgbWF4aW11bSBiYWxhbmNlIG9mIHRoZSBjb250cmFjdC4KICAvLyBJdCBjYW4gb25seSBiZSBjYWxsZWQgYnkgdGhlIG93bmVyLiBUaGUgYW1vdW50IGNhbm5vdCBiZSBzZXQgdG8gbG93ZXIgdGhhbiB0aGUgY3VycmVudCBiYWxhbmNlIG9mIHRoZSBjb250cmFjdC4KICBmdW5jdGlvbiBtb2RpZnlNYXhDb250cmFjdEJhbGFuY2UgKHVpbnQgYW1vdW50KSBwdWJsaWMgb25seUFkbWlucyB7CiAgICByZXF1aXJlIChjb250cmFjdFN0YWdlIDwgMyk7CiAgICByZXF1aXJlIChhbW91bnQgPj0gY29udHJpYnV0aW9uTWluKTsKICAgIHJlcXVpcmUgKGFtb3VudCA+PSB0aGlzLmJhbGFuY2UpOwogICAgY29udHJpYnV0aW9uQ2Fwc1swXSA9IGFtb3VudDsKICAgIGZvciAodWludDggaT0xOyBpPGNvbnRyaWJ1dGlvbkNhcHMubGVuZ3RoOyBpKyspIHsKICAgICAgaWYgKGNvbnRyaWJ1dGlvbkNhcHNbaV0+YW1vdW50KSBjb250cmlidXRpb25DYXBzW2ldPWFtb3VudDsKICAgIH0KICB9CiAgCiAgLy8gVGhpcyBpbnRlcm5hbCBmdW5jdGlvbiByZXR1cm5zIHRoZSBjYXAgYW1vdW50IG9mIGEgd2hpdGVsaXN0ZWQgYWRkcmVzcy4KICBmdW5jdGlvbiBfY2hlY2tDYXAgKGFkZHJlc3MgYWRkcikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgewogICAgX2NoZWNrV2hpdGVsaXN0Q29udHJhY3QoYWRkcik7CiAgICB2YXIgYyA9IHdoaXRlbGlzdFthZGRyXTsKICAgIGlmICghYy5hdXRob3JpemVkKSByZXR1cm4gMDsKICAgIGlmIChjLmNhcDxjb250cmlidXRpb25DYXBzLmxlbmd0aCkgcmV0dXJuIGNvbnRyaWJ1dGlvbkNhcHNbYy5jYXBdOwogICAgcmV0dXJuIGMuY2FwOyAKICB9CiAgCiAgLy8gVGhpcyBpbnRlcm5hbCBmdW5jdGlvbiBjaGVja3MgaWYgYW4gYWRkcmVzcyBpcyB3aGl0ZWxpc3RlZCBpbiB0aGUgd2hpdGVsaXN0IGNvbnRyYWN0LgogIGZ1bmN0aW9uIF9jaGVja1doaXRlbGlzdENvbnRyYWN0IChhZGRyZXNzIGFkZHIpIGludGVybmFsIHsKICAgIHZhciBjID0gd2hpdGVsaXN0W2FkZHJdOwogICAgaWYgKCFjLmF1dGhvcml6ZWQpIHsKICAgICAgdmFyIGxldmVsID0gd2hpdGVsaXN0Q29udHJhY3QuY2hlY2tNZW1iZXJMZXZlbChhZGRyKTsKICAgICAgaWYgKGxldmVsID09IDAgfHwgbGV2ZWwgPj0gY29udHJpYnV0aW9uQ2Fwcy5sZW5ndGgpIHJldHVybjsKICAgICAgYy5jYXAgPSBsZXZlbDsKICAgICAgYy5hdXRob3JpemVkID0gdHJ1ZTsKICAgIH0KICB9CiAgCiAgLy8gVGhpcyBjYWxsYWJsZSBmdW5jdGlvbiByZXR1cm5zIHRoZSB0b3RhbCBwb29sIGNhcCwgY3VycmVudCBiYWxhbmNlIGFuZCByZW1haW5pbmcgYmFsYW5jZSB0byBiZSBmaWxsZWQuCiAgZnVuY3Rpb24gY2hlY2tQb29sQmFsYW5jZSAoKSB2aWV3IHB1YmxpYyByZXR1cm5zICh1aW50IHBvb2xDYXAsIHVpbnQgYmFsYW5jZSwgdWludCByZW1haW5pbmcpIHsKICAgIGlmIChjb250cmFjdFN0YWdlID09IDEpIHsKICAgICAgcmVtYWluaW5nID0gY29udHJpYnV0aW9uQ2Fwc1swXS5zdWIodGhpcy5iYWxhbmNlKTsKICAgIH0gZWxzZSB7CiAgICAgIHJlbWFpbmluZyA9IDA7CiAgICB9CiAgICByZXR1cm4gKGNvbnRyaWJ1dGlvbkNhcHNbMF0sdGhpcy5iYWxhbmNlLHJlbWFpbmluZyk7CiAgfQogIAogIC8vIFRoaXMgY2FsbGFibGUgZnVuY3Rpb24gcmV0dXJucyB0aGUgYmFsYW5jZSwgY29udHJpYnV0aW9uIGNhcCwgYW5kIHJlbWFpbmluZyBhdmFpbGFibGUgYmFsYW5jZSBvZiBhbnkgY29udHJpYnV0b3IuCiAgZnVuY3Rpb24gY2hlY2tDb250cmlidXRvckJhbGFuY2UgKGFkZHJlc3MgYWRkcikgdmlldyBwdWJsaWMgcmV0dXJucyAodWludCBiYWxhbmNlLCB1aW50IGNhcCwgdWludCByZW1haW5pbmcpIHsKICAgIHZhciBjID0gd2hpdGVsaXN0W2FkZHJdOwogICAgaWYgKCFjLmF1dGhvcml6ZWQpIHsKICAgICAgY2FwID0gd2hpdGVsaXN0Q29udHJhY3QuY2hlY2tNZW1iZXJMZXZlbChhZGRyKTsKICAgICAgaWYgKGNhcCA9PSAwKSByZXR1cm4gKDAsMCwwKTsKICAgIH0gZWxzZSB7CiAgICAgIGNhcCA9IGMuY2FwOwogICAgfQogICAgYmFsYW5jZSA9IGMuYmFsYW5jZTsKICAgIGlmIChjb250cmFjdFN0YWdlID09IDEpIHsKICAgICAgaWYgKGNhcDxjb250cmlidXRpb25DYXBzLmxlbmd0aCkgewogICAgICAgIGNhcCA9IGNvbnRyaWJ1dGlvbkNhcHNbY2FwXTsKICAgICAgfQogICAgICByZW1haW5pbmcgPSBjYXAuc3ViKGJhbGFuY2UpOwogICAgICBpZiAoY29udHJpYnV0aW9uQ2Fwc1swXS5zdWIodGhpcy5iYWxhbmNlKSA8IHJlbWFpbmluZykgcmVtYWluaW5nID0gY29udHJpYnV0aW9uQ2Fwc1swXS5zdWIodGhpcy5iYWxhbmNlKTsKICAgIH0gZWxzZSB7CiAgICAgIHJlbWFpbmluZyA9IDA7CiAgICB9CiAgICByZXR1cm4gKGJhbGFuY2UsIGNhcCwgcmVtYWluaW5nKTsKICB9CiAgCiAgLy8gVGhpcyBjYWxsYWJsZSBmdW5jdGlvbiByZXR1cm5zIHRoZSB0b2tlbiBiYWxhbmNlIHRoYXQgYSBjb250cmlidXRvciBjYW4gY3VycmVudGx5IGNsYWltLgogIGZ1bmN0aW9uIGNoZWNrQXZhaWxhYmxlVG9rZW5zIChhZGRyZXNzIGFkZHIsIGFkZHJlc3MgdG9rZW5BZGRyKSB2aWV3IHB1YmxpYyByZXR1cm5zICh1aW50IHRva2VuQW1vdW50KSB7CiAgICB2YXIgYyA9IHdoaXRlbGlzdFthZGRyXTsKICAgIHZhciBkID0gZGlzdHJpYnV0aW9uW3Rva2VuQWRkcl07CiAgICBmb3IgKHVpbnQgaT1jLnRva2Vuc0NsYWltZWRbdG9rZW5BZGRyXTsgaTxkLnBjdC5sZW5ndGg7IGkrKykgewogICAgICB0b2tlbkFtb3VudCA9IHRva2VuQW1vdW50LmFkZChfYXBwbHlQY3QoYy5iYWxhbmNlLGQucGN0W2ldKSk7CiAgICB9CiAgICByZXR1cm4gdG9rZW5BbW91bnQ7CiAgfQogIAogIC8vIFRoaXMgZnVuY3Rpb24gY2xvc2VzIGZ1cnRoZXIgY29udHJpYnV0aW9ucyB0byB0aGUgY29udHJhY3QsIGFkdmFuY2luZyBpdCB0byBzdGFnZSB0d28uCiAgLy8gSXQgY2FuIG9ubHkgYmUgY2FsbGVkIGJ5IHRoZSBvd25lci4gIEFmdGVyIHRoaXMgY2FsbCBoYXMgYmVlbiBtYWRlLCB3aGl0ZWxpc3RlZCBhZGRyZXNzZXMKICAvLyBjYW4gc3RpbGwgcmVtb3ZlIHRoZWlyIGV0aCBmcm9tIHRoZSBjb250cmFjdCBidXQgY2Fubm90IGNvbnRyaWJ1dGUgYW55IG1vcmUuCiAgZnVuY3Rpb24gY2xvc2VDb250cmlidXRpb25zICgpIHB1YmxpYyBvbmx5QWRtaW5zIHsKICAgIHJlcXVpcmUgKGNvbnRyYWN0U3RhZ2UgPT0gMSk7CiAgICBjb250cmFjdFN0YWdlID0gMjsKICB9CiAgCiAgLy8gVGhpcyBmdW5jdGlvbiByZW9wZW5zIHRoZSBjb250cmFjdCB0byBjb250cmlidXRpb25zIGFuZCBmdXJ0aGVyIHdoaXRlbGlzdGluZywgcmV0dXJuaW5nIGl0IHRvIHN0YWdlIG9uZS4KICAvLyBJdCBjYW4gb25seSBiZSBjYWxsZWQgYnkgdGhlIG93bmVyIGR1cmluZyBzdGFnZSB0d28uCiAgZnVuY3Rpb24gcmVvcGVuQ29udHJpYnV0aW9ucyAoKSBwdWJsaWMgb25seUFkbWlucyB7CiAgICByZXF1aXJlIChjb250cmFjdFN0YWdlID09IDIpOwogICAgY29udHJhY3RTdGFnZSA9IDE7CiAgfQogIAogIC8vIFRoaXMgZnVuY3Rpb24gc2VuZHMgdGhlIHBvb2xlZCBldGggdG8gdGhlIHJlY2VpdmluZyBhZGRyZXNzLCBjYWxjdWxhdGVzIHRoZSAlIG9mIHVudXNlZCBldGggdG8gYmUgcmV0dXJuZWQsCiAgLy8gYW5kIGFkdmFuY2VzIHRoZSBjb250cmFjdCB0byBzdGFnZSB0aHJlZS4gSXQgY2FuIG9ubHkgYmUgY2FsbGVkIGJ5IHRoZSBjb250cmFjdCBvd25lciBkdXJpbmcgc3RhZ2VzIG9uZSBvciB0d28uCiAgLy8gVGhlIGFtb3VudCB0byBzZW5kIChnaXZlbiBpbiB3ZWkpIG11c3QgYmUgc3BlY2lmaWVkIGR1cmluZyB0aGUgY2FsbC4gQXMgdGhpcyBmdW5jdGlvbiBjYW4gb25seSBiZSBleGVjdXRlZCBvbmNlLAogIC8vIGl0IGlzIFZFUlkgSU1QT1JUQU5UIG5vdCB0byBnZXQgdGhlIGFtb3VudCB3cm9uZy4KICBmdW5jdGlvbiBzdWJtaXRQb29sIChhZGRyZXNzIHJlY2VpdmVyQWRkciwgdWludCBhbW91bnRJbldlaSkgcHVibGljIG9ubHlBZG1pbnMgbm9SZWVudHJhbmN5IHsKICAgIHJlcXVpcmUgKGNvbnRyYWN0U3RhZ2UgPCAzKTsKICAgIHJlcXVpcmUgKHJlY2VpdmVyQWRkciAhPSAweDAwKTsKICAgIHJlcXVpcmUgKGNvbnRyaWJ1dGlvbk1pbiA8PSBhbW91bnRJbldlaSAmJiBhbW91bnRJbldlaSA8PSB0aGlzLmJhbGFuY2UpOwogICAgZmluYWxCYWxhbmNlID0gdGhpcy5iYWxhbmNlOwogICAgcmVxdWlyZSAocmVjZWl2ZXJBZGRyLmNhbGwudmFsdWUoYW1vdW50SW5XZWkpLmdhcyhtc2cuZ2FzLnN1Yig1MDAwKSkoKSk7CiAgICBldGhSZWZ1bmRBbW91bnQucHVzaCh0aGlzLmJhbGFuY2UpOwogICAgY29udHJhY3RTdGFnZSA9IDM7CiAgfQogIAogIC8vIFRoaXMgZnVuY3Rpb24gb3BlbnMgdGhlIGNvbnRyYWN0IHVwIGZvciB0b2tlbiB3aXRoZHJhd2Fscy4KICAvLyBJdCBjYW4gb25seSBiZSBjYWxsZWQgYnkgdGhlIG93bmVyIGR1cmluZyBzdGFnZSAzLiAgVGhlIG93bmVyIHNwZWNpZmllcyB0aGUgYWRkcmVzcyBvZiBhbiBFUkMyMCB0b2tlbgogIC8vIGNvbnRyYWN0IHRoYXQgdGhpcyBjb250cmFjdCBoYXMgYSBiYWxhbmNlIGluLCBhbmQgb3B0aW9uYWxseSBhIGJvb2wgdG8gcHJldmVudCB0aGlzIHRva2VuIGZyb20gYmVpbmcKICAvLyB0aGUgZGVmYXVsdCB3aXRoZHJhd2FsIChpbiB0aGUgZXZlbnQgb2YgYW4gYWlyZHJvcCwgZm9yIGV4YW1wbGUpLgogIC8vIFRoZSBmdW5jdGlvbiBjYW4gb25seSBiZSBjYWxsZWQgaWYgdGhlcmUgaXMgbm90IGN1cnJlbnRseSBhIHRva2VuIGRpc3RyaWJ1dGlvbiAKICBmdW5jdGlvbiBlbmFibGVUb2tlbldpdGhkcmF3YWxzIChhZGRyZXNzIHRva2VuQWRkciwgYm9vbCBub3REZWZhdWx0KSBwdWJsaWMgb25seUFkbWlucyBub1JlZW50cmFuY3kgewogICAgcmVxdWlyZSAoY29udHJhY3RTdGFnZSA9PSAzKTsKICAgIGlmIChub3REZWZhdWx0KSB7CiAgICAgIHJlcXVpcmUgKGFjdGl2ZVRva2VuICE9IDB4MDApOwogICAgfSBlbHNlIHsKICAgICAgYWN0aXZlVG9rZW4gPSB0b2tlbkFkZHI7CiAgICB9CiAgICB2YXIgZCA9IGRpc3RyaWJ1dGlvblt0b2tlbkFkZHJdOyAgICAKICAgIGlmIChkLnBjdC5sZW5ndGg9PTApIGQudG9rZW4gPSBFUkMyMCh0b2tlbkFkZHIpOwogICAgdWludCBhbW91bnQgPSBkLnRva2VuLmJhbGFuY2VPZih0aGlzKS5zdWIoZC5iYWxhbmNlUmVtYWluaW5nKTsKICAgIHJlcXVpcmUgKGFtb3VudCA+IDApOwogICAgaWYgKGZlZVBjdCA+IDApIHsKICAgICAgcmVxdWlyZSAoZC50b2tlbi50cmFuc2Zlcihvd25lcixfYXBwbHlQY3QoYW1vdW50LGZlZVBjdCkpKTsKICAgIH0KICAgIGFtb3VudCA9IGQudG9rZW4uYmFsYW5jZU9mKHRoaXMpLnN1YihkLmJhbGFuY2VSZW1haW5pbmcpOwogICAgZC5iYWxhbmNlUmVtYWluaW5nID0gZC50b2tlbi5iYWxhbmNlT2YodGhpcyk7CiAgICBkLnBjdC5wdXNoKF90b1BjdChhbW91bnQsZmluYWxCYWxhbmNlKSk7CiAgfQogIAogIC8vIFRoaXMgaXMgYSBzdGFuZGFyZCBmdW5jdGlvbiByZXF1aXJlZCBmb3IgRVJDMjIzIGNvbXBhdGliaWxpdHkuCiAgZnVuY3Rpb24gdG9rZW5GYWxsYmFjayAoYWRkcmVzcyBmcm9tLCB1aW50IHZhbHVlLCBieXRlcyBkYXRhKSBwdWJsaWMgewogICAgRVJDMjIzUmVjZWl2ZWQgKGZyb20sIHZhbHVlKTsKICB9CiAgCn0='.
	

]
