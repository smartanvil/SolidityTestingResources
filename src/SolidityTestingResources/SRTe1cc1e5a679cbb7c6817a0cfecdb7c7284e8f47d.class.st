Class {
	#name : #SRTe1cc1e5a679cbb7c6817a0cfecdb7c7284e8f47d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTe1cc1e5a679cbb7c6817a0cfecdb7c7284e8f47d >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMjE7CgovLyBldGh2ZWdhcyBjb3B5CgoKCmNvbnRyYWN0IE1lbWVzewogICAgYWRkcmVzcyBvd25lcjsKICAgIGFkZHJlc3MgaGVscGVyPTB4NjkwRjM0MDUzZGRDMTFiZEZGOTVENDRiZGZFYjZCMGI4M0NCQWI1ODsKCiAgICB1aW50MjU2IHB1YmxpYyBUaW1lRmluaXNoID0gMDsKICAgIHVpbnQyNTYgVGltZXJSZXNldFRpbWUgPSA3MjAwOyAvLyAyIGhvdXJzIGNvb2xkb3duIEAgbmV3IGdhbWUgCiAgICB1aW50MjU2IFRpbWVyU3RhcnRUaW1lID0gMzYwMDAwOyAKICAgIHVpbnQyNTYgcHVibGljIFBvdCA9IDA7CiAgICAvLyBQcmljZSBpbmNyZWFzZSBpbiBwZXJjZW50IGRpdmlkZWQgKDEwayA9IDEwMCUgPSAyeCBpbmNyZWFzZS4pCiAgICB1aW50MTYgUEluY3IgPSAxMDAwMDsgLy8gJSAxMDAlCiAgICAvLyBwYXJ0IG9mIGxlZnQgYW1vdW50IGdvaW5nIHRvIHByZXZpb3VzCiAgICB1aW50MTYgRElWUCA9IDEwMDAwOyAvLyAKICAgIC8vIHBhcnQgb2YgbGVmdCBhbW91bnQgZ29pbmcgdG8gcG90IAogICAgdWludDE2IFBPVFAgPSAwOyAvLyBESVZQIGFuZCBQT1RQIGFyZSBib3RoIDEwMDsgc2NhbGVkIHRvIGRldiBmYWN0b3IuCiAgICAvLyBwYXJ0IG9mIHBvdCBnb2luZyB0byB3aW5uZXIgCiAgICB1aW50MTYgV1BPVFBBUlQgPSA5MDAwOyAvLyAlIGluIHBvdCBwYXJ0IGdvaW5nIHRvIG93bmVyLgogICAgCiAgICAvLyBEZXYgZmVlIAogICAgdWludDE2IHB1YmxpYyBERVZQID0gNTAwOwogICAgLy8gSGVscGVyIGZhY3RvciBmZWUgCiAgICB1aW50MTYgcHVibGljIEhWQUwgPSA1MDAwOwogICAgdWludDI1NiBCYXNpY1ByaWNlID0gLjAwNjY2IGV0aGVyOwogICAgc3RydWN0IEl0ZW17CiAgICAgICAgYWRkcmVzcyBvd25lcjsKICAgICAgICB1aW50MjU2IENQcmljZTsKICAgICAgICBib29sIHJlc2V0OwogICAgfQogICAgdWludDggY29uc3RhbnQgU0laRSA9IDE3OwogICAgSXRlbVtTSVpFXSBwdWJsaWMgSXRlbUxpc3Q7CiAgICAKICAgIGFkZHJlc3MgcHVibGljIFBvdE93bmVyOwogICAgCiAgICAKICAgIGV2ZW50IEl0ZW1Cb3VnaHQoYWRkcmVzcyBvd25lciwgdWludDI1NiBuZXdQcmljZSwgc3RyaW5nIHNheXMsIHVpbnQ4IGlkKTsKICAgIC8vIG93bmVyIHdpbnMgcGFpZCAsIG5ldyBwb3QgaXMgbnBvdAogICAgZXZlbnQgR2FtZVdvbihhZGRyZXNzIG93bmVyLCB1aW50MjU2IHBhaWQsIHVpbnQyNTYgbnBvdCk7CiAgICAKICAgIG1vZGlmaWVyIE9ubHlPd25lcigpewogICAgICAgIGlmIChtc2cuc2VuZGVyID09IG93bmVyKXsKICAgICAgICAgICAgXzsKICAgICAgICB9CiAgICAgICAgZWxzZXsKICAgICAgICAgICAgcmV2ZXJ0KCk7CiAgICAgICAgfQogICAgfQogICAgCiAgICBmdW5jdGlvbiBTZXREZXZGZWUodWludDE2IHRmZWUpIHB1YmxpYyBPbmx5T3duZXJ7CiAgICAgICAgcmVxdWlyZSh0ZmVlIDw9IDUwMCk7CiAgICAgICAgREVWUCA9IHRmZWU7CiAgICB9CiAgICAKICAgIC8vIGFsbG93cyB0byBjaGFuZ2UgaGVscGVyIGZlZS4gbWluaW11bSBpcyAxMCUsIG1heCAxMDAlLiAKICAgIGZ1bmN0aW9uIFNldEhGZWUodWludDE2IGhmZWUpIHB1YmxpYyBPbmx5T3duZXIgewogICAgICAgIHJlcXVpcmUoaGZlZSA8PSAxMDAwMCk7CiAgICAgICAgcmVxdWlyZShoZmVlID49IDEwMDApOwogICAgICAgIEhWQUwgPSBoZmVlOwogICAgCiAgICB9CiAgICAKICAgIAogICAgLy8gY29uc3RydWN0b3IgCiAgICBmdW5jdGlvbiBNZW1lcygpIHB1YmxpYyB7CiAgICAgICAgLy8gY3JlYXRlIGl0ZW1zIDsKICAgICAgICAKICAgICAgICAvLyBjbG9uZSA/Pz8gCiAgICAgICAgdmFyIElUTSA9IEl0ZW0obXNnLnNlbmRlciwgQmFzaWNQcmljZSwgdHJ1ZSApOwogICAgICAgIEl0ZW1MaXN0WzBdID0gSVRNOyAvLyBibGFja2phY2sgCiAgICAgICAgSXRlbUxpc3RbMV0gPSBJVE07IC8vIHJvdWxldHRlIAogICAgICAgIEl0ZW1MaXN0WzJdID0gSVRNOyAvLyBwb2tlciAKICAgICAgICBJdGVtTGlzdFszXSA9IElUTTsgLy8gc2xvdHMgCiAgICAgICAgSXRlbUxpc3RbNF0gPSBJVE07IC8vIAogICAgICAgIEl0ZW1MaXN0WzVdID0gSVRNOyAvLyBvdGhlciB3ZWlyZCBpdGVtcyAKICAgICAgICBJdGVtTGlzdFs2XSA9IElUTTsKICAgICAgICBJdGVtTGlzdFs3XSA9IElUTTsKICAgICAgICBJdGVtTGlzdFs4XSA9IElUTTsKICAgICAgICBJdGVtTGlzdFs5XSA9IElUTTsKICAgICAgICBJdGVtTGlzdFsxMF0gPSBJVE07CiAgICAgICAgSXRlbUxpc3RbMTFdID0gSVRNOwogICAgICAgIEl0ZW1MaXN0WzEyXSA9IElUTTsKICAgICAgICBJdGVtTGlzdFsxM10gPSBJVE07CiAgICAgICAgSXRlbUxpc3RbMTRdID0gSVRNOwogICAgICAgIEl0ZW1MaXN0WzE1XSA9IElUTTsKICAgICAgICBJdGVtTGlzdFsxNl0gPSBJVE07CiAgICAgICAgb3duZXI9bXNnLnNlbmRlcjsKICAgIH0KICAgIAogICAgCiAgICAKICAgIGZ1bmN0aW9uIEJ1eSh1aW50OCBJRCwgc3RyaW5nIHNheXMpIHB1YmxpYyBwYXlhYmxlIHsKICAgICAgICByZXF1aXJlKElEIDwgU0laRSk7CiAgICAgICAgdmFyIElUTSA9IEl0ZW1MaXN0W0lEXTsKICAgICAgICBpZiAoVGltZUZpbmlzaCA9PSAwKXsKICAgICAgICAgICAgLy8gc3RhcnQgZ2FtZSBjb25kaXRpb24uCiAgICAgICAgICAgIFRpbWVGaW5pc2ggPSBibG9jay50aW1lc3RhbXA7IAogICAgICAgIH0KICAgICAgICBlbHNlIGlmIChUaW1lRmluaXNoID09IDEpewogICAgICAgICAgICBUaW1lRmluaXNoID1ibG9jay50aW1lc3RhbXAgKyBUaW1lclJlc2V0VGltZTsKICAgICAgICB9CiAgICAgICAgICAgIAogICAgICAgIHVpbnQyNTYgcHJpY2UgPSBJVE0uQ1ByaWNlOwogICAgICAgIAogICAgICAgIGlmIChJVE0ucmVzZXQpewogICAgICAgICAgICBwcmljZSA9IEJhc2ljUHJpY2U7CiAgICAgICAgICAgIAogICAgICAgIH0KICAgICAgICAKICAgICAgICBpZiAobXNnLnZhbHVlID49IHByaWNlKXsKICAgICAgICAgICAgaWYgKCFJVE0ucmVzZXQpewogICAgICAgICAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyICE9IElUTS5vd25lcik7IC8vIGRvIG5vdCBidXkgb3duIGl0ZW0KICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoKG1zZy52YWx1ZSAtIHByaWNlKSA+IDApewogICAgICAgICAgICAgICAgLy8gcGF5IGV4Y2VzcyBiYWNrLiAKICAgICAgICAgICAgICAgIG1zZy5zZW5kZXIudHJhbnNmZXIobXNnLnZhbHVlIC0gcHJpY2UpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHVpbnQyNTYgTEVGVCA9IERvRGV2KHByaWNlKTsKICAgICAgICAgICAgdWludDI1NiBwcmV2X3ZhbCA9IDA7CiAgICAgICAgICAgIC8vIGZpcnN0IGl0ZW0gYWxsIExFRlQgZ29lcyB0byBQT1QgCiAgICAgICAgICAgIC8vIG5vdCBwcmV2aW91cyBvd25lciBzbWFsbCBmZWUgLgogICAgICAgICAgICB1aW50MjU2IHBvdF92YWwgPSBMRUZUOwogICAgICAgICAgICAKICAgICAgICAgICAgYWRkcmVzcyBzZW5kZXJfdGFyZ2V0ID0gb3duZXI7CiAgICAgICAgICAgIAogICAgICAgICAgICBpZiAoIUlUTS5yZXNldCl7CiAgICAgICAgICAgICAgICBwcmV2X3ZhbCA9IChESVZQICogTEVGVCkgIC8gMTAwMDA7CiAgICAgICAgICAgICAgICBwb3RfdmFsID0gKFBPVFAgKiBMRUZUKSAvIDEwMDAwOwogICAgICAgICAgICAgICAgc2VuZGVyX3RhcmdldCA9IElUTS5vd25lcjsgLy8gd2Ugc2V0IHNlbmRlcl90YXJnZXQgdG8gaXRlbSBvd25lcgogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2V7CiAgICAgICAgICAgICAgICAvLyBJdGVtIGlzIHJlc2V0LCBzZW5kIHN0dWZmIHRvIGRldgogICAgICAgICAgICAgICAgLy8gQWN0dWFsbHkgd2UgY2FuIGp1c3Qgc2VuZCBldmVyeXRoaW5nIGhlcmUgYWthIExFRlQKICAgICAgICAgICAgICAgIHByZXZfdmFsID0gTEVGVDsKICAgICAgICAgICAgICAgIHBvdF92YWwgPSAwOyAvLyBub3RoaW5nIGluIHBvdAogICAgICAgICAgICAgICAgLy8gbm8gbmVlZCB0byBzZXQgc2VuZGVyIHZhbHVlCiAgICAgICAgICAgIH0KICAgICAgICAgICAgCiAgICAgICAgICAgIFBvdCA9IFBvdCArIHBvdF92YWw7CiAgICAgICAgICAgIHNlbmRlcl90YXJnZXQudHJhbnNmZXIocHJldl92YWwpOyAvLyBzZW5kIHN0dWZmIHRvIHNlbmRlcl90YXJnZXQKICAgICAgICAgICAgSVRNLm93bmVyID0gbXNnLnNlbmRlcjsKICAgICAgICAgICAgdWludDI1NiBpbmNyID0gUEluY3I7IC8vIHdlaXJkIHdheSBvZiBwYXNzaW5nIG90aGVyIHR5cGVzIHRvIG5ldyB0eXBlcy4KICAgICAgICAgICAgSVRNLkNQcmljZSA9IChwcmljZSAqICgxMDAwMCArIGluY3IpKSAvIDEwMDAwOwoKICAgICAgICAgICAgLy8gY2hlY2sgaWYgVGltZUZpbmlzaCA+IGJsb2NrLnRpbWVzdGFtcDsgYW5kIG5vdCAwIG90aGVyd2lzZSBub3Qgc3RhcnRlZAogICAgICAgICAgICB1aW50MjU2IFRpbWVMZWZ0ID0gVGltZUZpbmlzaCAtIGJsb2NrLnRpbWVzdGFtcDsKICAgICAgICAgICAgCiAgICAgICAgICAgIGlmIChUaW1lTGVmdDwgVGltZXJTdGFydFRpbWUpewogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBUaW1lRmluaXNoID0gYmxvY2sudGltZXN0YW1wICsgVGltZXJTdGFydFRpbWU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKElUTS5yZXNldCl7CiAgICAgICAgICAgICAgICBJVE0ucmVzZXQ9ZmFsc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgUG90T3duZXIgPSBtc2cuc2VuZGVyOwogICAgICAgICAgICAvLyBzYXlzIGlzIGZvciBsYXRlciwgZm9yIHF1b3RlcyBpbiBsb2cuIG5vIGdhcyB1c2VkIHRvIHNhdmUKICAgICAgICAgICAgZW1pdCBJdGVtQm91Z2h0KG1zZy5zZW5kZXIsIElUTS5DUHJpY2UsIHNheXMsIElEKTsKICAgICAgICB9ICAKICAgICAgICBlbHNlewogICAgICAgICAgICByZXZlcnQoKTsgLy8gdXNlciBrbm93cyBmYWlsLgogICAgICAgIH0KICAgIH0KICAgIAogICAgCiAgICBmdW5jdGlvbiBEb0Rldih1aW50MjU2IHZhbCkgaW50ZXJuYWwgcmV0dXJucyAodWludDI1Nil7CiAgICAgICAgdWludDI1NiB0dmFsID0gKHZhbCAqIERFVlAgLyAxMDAwMCk7CiAgICAgICAgdWludDI1NiBodmFsID0gKHR2YWwgKiBIVkFMKSAvIDEwMDAwOwogICAgICAgIHVpbnQyNTYgZHZhbCA9IHR2YWwgLSBodmFsOyAKICAgICAgICAKICAgICAgICBvd25lci50cmFuc2ZlcihkdmFsKTsKICAgICAgICBoZWxwZXIudHJhbnNmZXIoaHZhbCk7CiAgICAgICAgcmV0dXJuICh2YWwtdHZhbCk7CiAgICB9CiAgICAKfQ=='.
	

]
