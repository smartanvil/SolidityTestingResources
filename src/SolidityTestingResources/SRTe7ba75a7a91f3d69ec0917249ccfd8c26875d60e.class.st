Class {
	#name : #SRTe7ba75a7a91f3d69ec0917249ccfd8c26875d60e,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTe7ba75a7a91f3d69ec0917249ccfd8c26875d60e >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgovKgogKiBPd25hYmxlCiAqIEJhc2UgY29udHJhY3Qgd2l0aCBhbiBvd25lci4KICogUHJvdmlkZXMgb25seU93bmVyIG1vZGlmaWVyLCB3aGljaCBwcmV2ZW50cyBmdW5jdGlvbiBmcm9tIHJ1bm5pbmcgaWYgaXQgaXMgY2FsbGVkIGJ5IGFueW9uZSBvdGhlciB0aGFuIHRoZSBvd25lci4KICovCmNvbnRyYWN0IE93bmFibGUgewogICAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CgogICAgZnVuY3Rpb24gT3duYWJsZSgpIHB1YmxpYyB7CiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgfQoKICAgIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lcikgewogICAgICAgICAgICByZXZlcnQoKTsKICAgICAgICB9CiAgICAgICAgXzsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld093bmVyKSBpbnRlcm5hbCBvbmx5T3duZXIgewogICAgICAgIGlmIChuZXdPd25lciAhPSBhZGRyZXNzKDApKSB7CiAgICAgICAgICAgIG93bmVyID0gbmV3T3duZXI7CiAgICAgICAgfQogICAgfQp9CgoKLyoqCiAqIEB0aXRsZSBTYWZlTWF0aAogKiBAZGV2IE1hdGggb3BlcmF0aW9ucyB3aXRoIHNhZmV0eSBjaGVja3MgdGhhdCB0aHJvdyBvbiBlcnJvcgogKi8KbGlicmFyeSBTYWZlTWF0aCB7CiAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIC8vIGFzc2VydChiID4gMCk7IC8vIFNvbGlkaXR5IGF1dG9tYXRpY2FsbHkgdGhyb3dzIHdoZW4gZGl2aWRpbmcgYnkgMAogICAgdWludDI1NiBjID0gYSAvIGI7CiAgICAvLyBhc3NlcnQoYSA9PSBiICogYyArIGEgJSBiKTsgLy8gVGhlcmUgaXMgbm8gY2FzZSBpbiB3aGljaCB0aGlzIGRvZXNuJ3QgaG9sZAogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBzdWIodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KfQoKLyoqCiAqIEB0aXRsZSBUcmFkZUZlZUNhbGN1bGF0b3IgLSBSZXR1cm5zIHRoZSBjYWxjdWxhdGVkIEZlZSBCYXNlZCBvbiB0aGUgVHJhZGUgVmFsdWUgICAKICogQGRldiBGZWUgQ2FsY3VsYXRpb24gY29udHJhY3QuIEFsbCB0aGUgdW5pdHMgYXJlIGRlYWx0IGF0IHdlaSBsZXZlbC4KICogQGF1dGhvciBEaW5lc2gKICovCmNvbnRyYWN0IFRyYWRlRmVlQ2FsY3VsYXRvciBpcyBPd25hYmxlIHsgCiAgICB1c2luZyBTYWZlTWF0aCBmb3IgdWludDI1NjsgCiAgICAKICAgIC8vIGFycmF5IHRvIHN0b3JlIG9wdGlvbmFsIGZlZSBieSBjYXRlZ29yeTogMCAtIEJhc2UgVG9rZW4gRmVlLCAxIC0gRXRoZXIgRmVlLCAyIC0gRXh0ZXJuYWwgdG9rZW4gRmVlCiAgICAvLyBpdHMgbnVtYmVycyBhbmQgaXRzIGZvciBldmVyeSAxIHRva2VuLzEgRXRoZXIgKHNob3VsZCBiZSBvbmx5IHdlaSB2YWx1ZXMpCiAgICB1aW50MjU2WzNdIHB1YmxpYyBleEZlZXM7CiAgICAKICAgIC8qKgogICAgICogQGRldiBjb25zdHJ1Y3RvciBzZXRzIHVwIG93bmVyCiAgICAgKi8KICAgIGZ1bmN0aW9uIFRyYWRlRmVlQ2FsY3VsYXRvcigpIHB1YmxpYyB7CiAgICAgICAgLy8gc2V0IHVwIHRoZSBvd25lcgogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsgCiAgICB9CiAgICAKICAgIC8qKgogICAgICogQGRldiBmdW5jdGlvbiB1cGRhdGVzIHRoZSBmZWVzIGNoYXJnZWQgYnkgdGhlIGV4Y2hhbmdlLiBGZWVzIHdpbGwgYmUgbWVudGlvbmVkIHBlciBFdGhlciAoMzc5MiBXYW5kKSAKICAgICAqIEBwYXJhbSBfYmFzZVRva2VuRmVlIGlzIGZvciB0aGUgdHJhZGVzIHdobyBwYXlzIGZlZXMgaW4gTmF0aXZlIFRva2VucwogICAgICovCiAgICBmdW5jdGlvbiB1cGRhdGVGZWVTY2hlZHVsZSh1aW50MjU2IF9iYXNlVG9rZW5GZWUsIHVpbnQyNTYgX2V0aGVyRmVlLCB1aW50MjU2IF9ub3JtYWxUb2tlbkZlZSkgcHVibGljIG9ubHlPd25lciB7CiAgICAgICAgLy8gQmFzZSB0b2tlbiBmZWUgc2hvdWxkIG5vdCBleGNlZWQgMSBldGhlciB3b3J0aCBvZiB0b2tlbnMgKGV4OiAzNzkyIHdhbmQgPSAxIGV0aGVyKSwgc2luY2UgMSBldGhlciBpcyBvdXIgZmVlIHVuaXQKICAgICAgICByZXF1aXJlKF9iYXNlVG9rZW5GZWUgPj0gMCAmJiBfYmFzZVRva2VuRmVlIDw9ICAxICogMSBldGhlcik7CiAgICAgICAgCiAgICAgICAgLy8gSWYgdGhlIGluY29taW5nIHRyYWRlIGlzIG9uIEV0aGVyLCB0aGVuIGZlZSBzaG91bGQgbm90IGV4Y2VlZCAxIEV0aGVyCiAgICAgICAgcmVxdWlyZShfZXRoZXJGZWUgPj0gMCAmJiBfZXRoZXJGZWUgPD0gIDEgKiAxIGV0aGVyKTsKICAgICAgIAogICAgICAgIC8vIElmIHRoZSBpbmNvbWluZyB0cmFkZSBpcyBvbiBkaWZmcmVudCBjb2lucyBhbmQgaWYgdGhlIGV4Y2hhbmdlIHNob3VsZCBhbGxvdyBkaWZmIHRva2VucyBhcyBmZWUsIHRoZW4gCiAgICAgICAgLy8gaW5wdXQgbXVzdCBiZSBpbiB3ZWkgY29udmVydGVkIHZhbHVlIHRvIHN1cHBwb3J0IGRlY2ltYWwgLSBTcGVjaWFsIENhc2UgCiAgICAgICAgLyoqIENhdXRpb246IE1heCB2YWx1ZSBjaGVjayBtdXN0IGJlIGRvbmUgYnkgT3duZXIgd2hvIGlzIHVwZGF0aW5nIHRoaXMgdmFsdWUgKi8KICAgICAgICByZXF1aXJlKF9ub3JtYWxUb2tlbkZlZSA+PSAwKTsKICAgICAgICByZXF1aXJlKGV4RmVlcy5sZW5ndGggPT0gMyk7CiAgICAgICAgCiAgICAgICAgLy8gU3RvcmVzIHRoZSBmZWUgc3RydWN0dXJlCiAgICAgICAgZXhGZWVzWzBdID0gX2Jhc2VUb2tlbkZlZTsgIAogICAgICAgIGV4RmVlc1sxXSA9IF9ldGhlckZlZTsgCiAgICAgICAgZXhGZWVzWzJdID0gX25vcm1hbFRva2VuRmVlOyAKICAgIH0KICAgIAogICAgLyoqCiAgICAgKiBAZGV2IGZ1bmN0aW9uIHRvIGNhbGN1bGF0ZSB0cmFuc2FjdGlvbiBmZWVzIGZvciBnaXZlbiB2YWx1ZSBhbmQgdG9rZW4KICAgICAqIEBwYXJhbSBfdmFsdWUgaXMgdGhlIGdpdmVuIHRyYWRlIG92ZXJhbGwgdmFsdWUKICAgICAqIEBwYXJhbSBfZmVlSW5kZXggaW5kaWNhdGVzIHRva2VuIHBheSBvcHRpb25zCiAgICAgKiBAcmV0dXJuIGNhbGN1bGF0ZWQgdHJhZGUgZmVlCiAgICAgKiBDYXV0aW9uOiBfdmFsdWUgaXMgZXhwZWN0ZWQgdG8gYmUgaW4gd2VpIHVuaXRzIGFuZCBpdCB3b3JrcyBmb3Igc2luZ2xlIHRva2VuIHBheW1lbnQKICAgICAqLwogICAgZnVuY3Rpb24gY2FsY1RyYWRlRmVlKHVpbnQyNTYgX3ZhbHVlLCB1aW50MjU2IF9mZWVJbmRleCkgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHJlcXVpcmUoX2ZlZUluZGV4ID49IDAgJiYgX2ZlZUluZGV4IDw9IDIpOwogICAgICAgIHJlcXVpcmUoX3ZhbHVlID4gMCk7CiAgICAgICAgcmVxdWlyZShleEZlZXMubGVuZ3RoID09IDMgJiYgZXhGZWVzW19mZWVJbmRleF0gPiAwICk7CiAgICAgICAgCiAgICAgICAgLy9DYWxjdWxhdGlvbiBGb3JtdWxhIFRvdGFsRmVlcyA9IChfdmFsdWUgKiBleEZlZXNbX2ZlZUluZGV4XSkvICgxIGV0aGVyKSAKICAgICAgICB1aW50MjU2IF90b3RhbEZlZXMgPSAoX3ZhbHVlLm11bChleEZlZXNbX2ZlZUluZGV4XSkpLmRpdigxIGV0aGVyKTsKICAgICAgICAKICAgICAgICAvLyBDYWxjdWxhdGVkIHRvdGFsIGZlZSBtdXN0IGJlIGdyZXRhZSB0aGFuIDAgZm9yIGEgZ2l2ZW4gYmFzZSBmZWUgPiAwCiAgICAgICAgcmVxdWlyZShfdG90YWxGZWVzID4gMCk7CiAgICAgICAgCiAgICAgICAgcmV0dXJuIF90b3RhbEZlZXM7CiAgICB9IAogICAgCiAgICAvKioKICAgICAqIEBkZXYgZnVuY3Rpb24gdG8gY2FsY3VsYXRlIHRyYW5zYWN0aW9uIGZlZXMgZm9yIGdpdmVuIGxpc3Qgb2YgdmFsdWVzIGFuZCB0b2tlbnMKICAgICAqIEBwYXJhbSBfdmFsdWVzIGlzIHRoZSBsaXN0IG9mIGdpdmVuIHRyYWRlIG92ZXJhbGwgdmFsdWVzCiAgICAgKiBAcGFyYW0gX2ZlZUluZGV4ZXMgaW5kaWNhdGVzIGxpc3QgdG9rZW4gcGF5IG9wdGlvbnMgZm9yIGVhY2ggdmFsdWUgCiAgICAgKiBAcmV0dXJuIGxpc3Qgb2YgY2FsY3VsYXRlZCB0cmFkZSBmZWVzIGVhY2ggdmFsdWUKICAgICAqIENhdXRpb246IF92YWx1ZXMgaXMgZXhwZWN0ZWQgdG8gYmUgaW4gd2VpIHVuaXRzIGFuZCBpdCB3b3JrcyBmb3IgbXVsdGlwbGUgdG9rZW4gcGF5bWVudAogICAgICovCiAgICBmdW5jdGlvbiBjYWxjVHJhZGVGZWVNdWx0aSh1aW50MjU2W10gX3ZhbHVlcywgdWludDI1NltdIF9mZWVJbmRleGVzKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2W10pIHsKICAgICAgICByZXF1aXJlKF92YWx1ZXMubGVuZ3RoID4gMCk7IAogICAgICAgIHJlcXVpcmUoX2ZlZUluZGV4ZXMubGVuZ3RoID4gMCk7ICAKICAgICAgICByZXF1aXJlKF92YWx1ZXMubGVuZ3RoID09IF9mZWVJbmRleGVzLmxlbmd0aCk7IAogICAgICAgIHJlcXVpcmUoZXhGZWVzLmxlbmd0aCA9PSAzKTsKICAgICAgICAKICAgICAgICB1aW50MjU2W10gbWVtb3J5IF90b3RhbEZlZXMgPSBuZXcgdWludDI1NltdKF92YWx1ZXMubGVuZ3RoKTsKICAgICAgICAvLyBGb3IgRXZlcnkgdG9rZW4gVmFsdWUgCiAgICAgICAgZm9yICh1aW50MjU2IGkgPSAwOyBpIDwgX3ZhbHVlcy5sZW5ndGg7IGkrKyl7ICAKICAgICAgICAgICAgX3RvdGFsRmVlc1tpXSA9ICBjYWxjVHJhZGVGZWUoX3ZhbHVlc1tpXSwgX2ZlZUluZGV4ZXNbaV0pOwogICAgICAgIH0KICAgICAgICByZXF1aXJlKF90b3RhbEZlZXMubGVuZ3RoID4gMCk7CiAgICAgICAgcmVxdWlyZShfdmFsdWVzLmxlbmd0aCA9PSBfdG90YWxGZWVzLmxlbmd0aCk7ICAKICAgICAgICByZXR1cm4gX3RvdGFsRmVlczsKICAgIH0KfQ=='.
	

]
