Class {
	#name : #SRTd73a82531290486F34EbEaB833488650DC73b90c,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTd73a82531290486F34EbEaB833488650DC73b90c >> base64 [
	^ ''.
	

]
