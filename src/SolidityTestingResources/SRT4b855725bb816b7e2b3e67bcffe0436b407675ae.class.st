Class {
	#name : #SRT4b855725bb816b7e2b3e67bcffe0436b407675ae,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT4b855725bb816b7e2b3e67bcffe0436b407675ae >> base64 [
	^ 'LyoqCiAqIFNpbXBsZVJlZ2lzdHJhciBsZXRzIHlvdSBjbGFpbSBhIHN1YmRvbWFpbiBuYW1lIGZvciB5b3Vyc2VsZiBhbmQgY29uZmlndXJlIGl0CiAqIGFsbCBpbiBvbmUgc3RlcC4gVGhpcyBvbmUgaXMgZGVwbG95ZWQgYXQgcmVnaXN0cmFyLmdpbW1ldGhlLmV0aC4KICogCiAqIFRvIHVzZSBpdCwgc2ltcGx5IGNhbGwgcmVnaXN0ZXIoKSB3aXRoIHRoZSBuYW1lIHlvdSB3YW50IGFuZCB0aGUgYXBwcm9wcmlhdGUKICogZmVlIChpbml0aWFsbHkgMC4wMSBldGhlciwgYnV0IGFkanVzdGFibGUgb3ZlciB0aW1lOyBjYWxsIGZlZSgpIHRvIGdldCB0aGUKICogY3VycmVudCBwcmljZSkuIEZvciBleGFtcGxlLCBpbiBhIHdlYjMgY29uc29sZToKICogCiAqICAgICB2YXIgc2ltcGxlUmVnaXN0cmFyQ29udHJhY3QgPSB3ZWIzLmV0aC5jb250cmFjdChbeyJjb25zdGFudCI6dHJ1ZSwiaW5wdXRzIjpbXSwibmFtZSI6ImZlZSIsIm91dHB1dHMiOlt7Im5hbWUiOiIiLCJ0eXBlIjoidWludDI1NiJ9XSwicGF5YWJsZSI6ZmFsc2UsInR5cGUiOiJmdW5jdGlvbiJ9LHsiY29uc3RhbnQiOmZhbHNlLCJpbnB1dHMiOlt7Im5hbWUiOiJuYW1lIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InJlZ2lzdGVyIiwib3V0cHV0cyI6W10sInBheWFibGUiOnRydWUsInR5cGUiOiJmdW5jdGlvbiJ9XSk7CiAqICAgICB2YXIgc2ltcGxlUmVnaXN0cmFyID0gc2ltcGxlUmVnaXN0cmFyQ29udHJhY3QuYXQoIjB4MWJlYmJjMzcyNzcyODE3ZDVkMTFhMDZlZTJhNGViYTMzYWI2ZWU2NSIpOwogKiAgICAgc2ltcGxlUmVnaXN0cmFyLnJlZ2lzdGVyKCdteW5hbWUnLCB7ZnJvbTogYWNjb3VudHNbMF0sIHZhbHVlOiBzaW1wbGVSZWdpc3RyYXIuZmVlKCksIGdhczogMTUwMDAwfSk7CiAqIAogKiBTaW1wbGVSZWdpc3RyYXIgd2lsbCB0YWtlIGNhcmUgb2YgZXZlcnl0aGluZzogcmVnaXN0ZXJpbmcgeW91ciBzdWJkb21haW4sCiAqIHNldHRpbmcgdXAgYSByZXNvbHZlciwgYW5kIHBvaW50aW5nIHRoYXQgcmVzb2x2ZXIgYXQgdGhlIGFjY291bnQgdGhhdCBjYWxsZWQKICogaXQuCiAqIAogKiBGdW5kcyByZWNlaXZlZCBmcm9tIHJ1bm5pbmcgdGhpcyBzZXJ2aWNlIGFyZSByZWludmVzdGVkIGludG8gYnVpbGRpbmcgbmV3CiAqIEVOUyB0b29scyBhbmQgdXRpbGl0aWVzLgogKiAKICogTm90ZSB0aGF0IHRoZSBEZWVkIG93bmluZyBnaW1tZXRoZS5ldGggaXMgbm90IGN1cnJlbnRseSBpbiBhIGhvbGRpbmcKICogY29udHJhY3QsIHNvIEkgY291bGQgdGhlb3JldGljYWxseSBjaGFuZ2UgdGhlIHJlZ2lzdHJhciBhdCBhbnkgdGltZS4gVGhpcyBpcwogKiBhIHRlbXBvcmFyeSBtZWFzdXJlLCBhcyBpdCBtYXkgYmUgbmVjZXNzYXJ5IHRvIHJlcGxhY2UgdGhpcyBjb250cmFjdCB3aXRoIGFuCiAqIHVwZGF0ZWQgb25lIGFzIEVOUyBiZXN0IHByYWN0aWNlcyBjaGFuZ2UuIFlvdSBoYXZlIG9ubHkgbXkgd29yZCB0aGF0IEkgd2lsbAogKiBuZXZlciBpbnRlcmZlcmUgd2l0aCBhIHByb3Blcmx5IHJlZ2lzdGVyZWQgc3ViZG9tYWluIG9mIGdpbW1ldGhlLmV0aC4KICogCiAqIEF1dGhvcjogTmljayBKb2huc29uIDw8YSBocmVmPSIvY2RuLWNnaS9sL2VtYWlsLXByb3RlY3Rpb24iIGNsYXNzPSJfX2NmX2VtYWlsX18iIGRhdGEtY2ZlbWFpbD0iZjA5ZTk5OTM5YmIwOTE4MjkxOTM5ODllOTk5NDljOTE5MjgzZGU5MzlmOWQiPltlbWFpbCYjMTYwO3Byb3RlY3RlZF08L2E+PgogKiBDb3B5cmlnaHQgMjAxNywgTmljayBKb2huc29uCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgUHVibGljIExpY2Vuc2UsIHZlcnNpb24gMi4wLgogKi8KcHJhZ21hIHNvbGlkaXR5IF4wLjQuMTA7Cgpjb250cmFjdCBBYnN0cmFjdEVOUyB7CiAgICBmdW5jdGlvbiBvd25lcihieXRlczMyIG5vZGUpIGNvbnN0YW50IHJldHVybnMoYWRkcmVzcyk7CiAgICBmdW5jdGlvbiByZXNvbHZlcihieXRlczMyIG5vZGUpIGNvbnN0YW50IHJldHVybnMoYWRkcmVzcyk7CiAgICBmdW5jdGlvbiB0dGwoYnl0ZXMzMiBub2RlKSBjb25zdGFudCByZXR1cm5zKHVpbnQ2NCk7CiAgICBmdW5jdGlvbiBzZXRPd25lcihieXRlczMyIG5vZGUsIGFkZHJlc3Mgb3duZXIpOwogICAgZnVuY3Rpb24gc2V0U3Vibm9kZU93bmVyKGJ5dGVzMzIgbm9kZSwgYnl0ZXMzMiBsYWJlbCwgYWRkcmVzcyBvd25lcik7CiAgICBmdW5jdGlvbiBzZXRSZXNvbHZlcihieXRlczMyIG5vZGUsIGFkZHJlc3MgcmVzb2x2ZXIpOwogICAgZnVuY3Rpb24gc2V0VFRMKGJ5dGVzMzIgbm9kZSwgdWludDY0IHR0bCk7Cn0KCmNvbnRyYWN0IG93bmVkIHsKICAgIGFkZHJlc3Mgb3duZXI7CiAgICAKICAgIGZ1bmN0aW9uIG93bmVkKCkgewogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgIH0KICAgIAogICAgbW9kaWZpZXIgb3duZXJfb25seSgpIHsKICAgICAgICBpZihtc2cuc2VuZGVyICE9IG93bmVyKSB0aHJvdzsKICAgICAgICBfOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBzZXRPd25lcihhZGRyZXNzIF9vd25lcikgb3duZXJfb25seSB7CiAgICAgICAgb3duZXIgPSBfb3duZXI7CiAgICB9Cn0KCmNvbnRyYWN0IFJlc29sdmVyIHsKICAgIGZ1bmN0aW9uIHNldEFkZHIoYnl0ZXMzMiBub2RlLCBhZGRyZXNzIGFkZHIpOwp9Cgpjb250cmFjdCBSZXZlcnNlUmVnaXN0cmFyIHsKICAgIGZ1bmN0aW9uIGNsYWltKGFkZHJlc3Mgb3duZXIpIHJldHVybnMgKGJ5dGVzMzIgbm9kZSk7Cn0KCmNvbnRyYWN0IFNpbXBsZVJlZ2lzdHJhciBpcyBvd25lZCB7CiAgICAvLyBuYW1laGFzaCgnYWRkci5yZXZlcnNlJykKICAgIGJ5dGVzMzIgY29uc3RhbnQgUlJfTk9ERSA9IDB4OTFkMTc3Nzc4MTg4NGQwM2E2NzU3YTgwMzk5NmUzOGRlMmE0Mjk2N2ZiMzdlZWFjYTcyNzI5MjcxMDI1YTllMjsKCiAgICBldmVudCBIYXNoUmVnaXN0ZXJlZChieXRlczMyIGluZGV4ZWQgaGFzaCwgYWRkcmVzcyBpbmRleGVkIG93bmVyKTsKCiAgICBBYnN0cmFjdEVOUyBwdWJsaWMgZW5zOwogICAgYnl0ZXMzMiBwdWJsaWMgcm9vdE5vZGU7CiAgICB1aW50IHB1YmxpYyBmZWU7CiAgICAvLyBUZW1wb3JhcnkgdW50aWwgd2UgaGF2ZSBhIHB1YmxpYyBhZGRyZXNzIGZvciBpdAogICAgUmVzb2x2ZXIgcHVibGljIHJlc29sdmVyOwogICAgCiAgICBmdW5jdGlvbiBTaW1wbGVSZWdpc3RyYXIoQWJzdHJhY3RFTlMgX2VucywgYnl0ZXMzMiBfcm9vdE5vZGUsIHVpbnQgX2ZlZSwgUmVzb2x2ZXIgX3Jlc29sdmVyKSB7CiAgICAgICAgZW5zID0gX2VuczsKICAgICAgICByb290Tm9kZSA9IF9yb290Tm9kZTsKICAgICAgICBmZWUgPSBfZmVlOwogICAgICAgIHJlc29sdmVyID0gX3Jlc29sdmVyOwogICAgICAgIAogICAgICAgIC8vIEFzc2lnbiByZXZlcnNlIHJlY29yZCB0byBzZW5kZXIKICAgICAgICBSZXZlcnNlUmVnaXN0cmFyKGVucy5vd25lcihSUl9OT0RFKSkuY2xhaW0obXNnLnNlbmRlcik7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIHdpdGhkcmF3KCkgb3duZXJfb25seSB7CiAgICAgICAgaWYoIW1zZy5zZW5kZXIuc2VuZCh0aGlzLmJhbGFuY2UpKSB0aHJvdzsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gc2V0RmVlKHVpbnQgX2ZlZSkgb3duZXJfb25seSB7CiAgICAgICAgZmVlID0gX2ZlZTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gc2V0UmVzb2x2ZXIoUmVzb2x2ZXIgX3Jlc29sdmVyKSBvd25lcl9vbmx5IHsKICAgICAgICByZXNvbHZlciA9IF9yZXNvbHZlcjsKICAgIH0KICAgIAogICAgbW9kaWZpZXIgY2FuX3JlZ2lzdGVyKGJ5dGVzMzIgbGFiZWwpIHsKICAgICAgICBpZihlbnMub3duZXIoc2hhMyhyb290Tm9kZSwgbGFiZWwpKSAhPSAwIHx8IG1zZy52YWx1ZSA8IGZlZSkgdGhyb3c7CiAgICAgICAgXzsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gcmVnaXN0ZXIoc3RyaW5nIG5hbWUpIHBheWFibGUgY2FuX3JlZ2lzdGVyKHNoYTMobmFtZSkpIHsKICAgICAgICB2YXIgbGFiZWwgPSBzaGEzKG5hbWUpOwogICAgICAgIAogICAgICAgIC8vIEZpcnN0IHJlZ2lzdGVyIHRoZSBuYW1lIHRvIG91cnNlbHZlcwogICAgICAgIGVucy5zZXRTdWJub2RlT3duZXIocm9vdE5vZGUsIGxhYmVsLCB0aGlzKTsKICAgICAgICAKICAgICAgICAvLyBOb3cgc2V0IGEgcmVzb2x2ZXIgdXAKICAgICAgICB2YXIgbm9kZSA9IHNoYTMocm9vdE5vZGUsIGxhYmVsKTsKICAgICAgICBlbnMuc2V0UmVzb2x2ZXIobm9kZSwgcmVzb2x2ZXIpOwogICAgICAgIHJlc29sdmVyLnNldEFkZHIobm9kZSwgbXNnLnNlbmRlcik7CiAgICAgICAgCiAgICAgICAgLy8gTm93IHRyYW5zZmVyIG93bmVyc2hpcCB0byB0aGUgdXNlcgogICAgICAgIGVucy5zZXRPd25lcihub2RlLCBtc2cuc2VuZGVyKTsKICAgICAgICAKICAgICAgICBIYXNoUmVnaXN0ZXJlZChsYWJlbCwgbXNnLnNlbmRlcik7CiAgICAgICAgCiAgICAgICAgLy8gU2VuZCBhbnkgZXhjZXNzIGV0aGVyIGJhY2sKICAgICAgICBpZihtc2cudmFsdWUgPiBmZWUpIHsKICAgICAgICAgICAgaWYoIW1zZy5zZW5kZXIuc2VuZChtc2cudmFsdWUgLSBmZWUpKSB0aHJvdzsKICAgICAgICB9CiAgICB9Cn0='.
	

]
