Class {
	#name : #SRTaaaebe6fe48e54f431b0c390cfaf0b017d09d42d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTaaaebe6fe48e54f431b0c390cfaf0b017d09d42d >> base64 [
	^ ''.
	

]
