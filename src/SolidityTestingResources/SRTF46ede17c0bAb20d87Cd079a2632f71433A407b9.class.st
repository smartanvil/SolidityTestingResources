Class {
	#name : #SRTF46ede17c0bAb20d87Cd079a2632f71433A407b9,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTF46ede17c0bAb20d87Cd079a2632f71433A407b9 >> base64 [
	^ ''.
	

]
