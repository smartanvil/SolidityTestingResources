Class {
	#name : #SRTa65ee5fd259d94294c4ef030d1a62eeb465b9438,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTa65ee5fd259d94294c4ef030d1a62eeb465b9438 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTY7CgpsaWJyYXJ5IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KfQoKY29udHJhY3QgRm9yZWlnblRva2VuIHsKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpOwogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7Cn0KCmNvbnRyYWN0IEVSQzIwQmFzaWMgewogICAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7CiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyB3aG8pIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KTsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sIHVpbnQyNTYgdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKTsKICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBmcm9tLCBhZGRyZXNzIGluZGV4ZWQgdG8sIHVpbnQyNTYgdmFsdWUpOwp9Cgpjb250cmFjdCBFUkMyMCBpcyBFUkMyMEJhc2ljIHsKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIG93bmVyLCBhZGRyZXNzIHNwZW5kZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KTsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIGZyb20sIGFkZHJlc3MgdG8sIHVpbnQyNTYgdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKTsKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBzcGVuZGVyLCB1aW50MjU2IHZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBzcGVuZGVyLCB1aW50MjU2IHZhbHVlKTsKfQoKY29udHJhY3QgRXRoZXJCYWxsIGlzIEVSQzIwIHsKICAgIAogICAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQyNTY7CiAgICAKICAgIGFkZHJlc3Mgb3duZXIgPSBtc2cuc2VuZGVyOwoKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgYmFsYW5jZXM7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikpIGFsbG93ZWQ7CiAgICAKICAgIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5ID0gMTAwMDAwMGU5OwoKICAgIGZ1bmN0aW9uIG5hbWUoKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAoc3RyaW5nKSB7IHJldHVybiAiRXRoZXJiYWxsIjsgfQogICAgZnVuY3Rpb24gc3ltYm9sKCkgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHN0cmluZykgeyByZXR1cm4gIkVCWVRFIjsgfQogICAgZnVuY3Rpb24gZGVjaW1hbHMoKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDgpIHsgcmV0dXJuIDk7IH0KCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsKICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpOwoKICAgIGV2ZW50IERpc3RyRmluaXNoZWQoKTsKCiAgICBib29sIHB1YmxpYyBkaXN0cmlidXRpb25GaW5pc2hlZCA9IGZhbHNlOwoKICAgIG1vZGlmaWVyIGNhbkRpc3RyKCkgewogICAgICAgIHJlcXVpcmUoIWRpc3RyaWJ1dGlvbkZpbmlzaGVkKTsKICAgICAgICBfOwogICAgfQoKICAgIGZ1bmN0aW9uIEV0aGVyQmFsbCgpIHB1YmxpYyB7CiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gdG90YWxTdXBwbHk7CiAgICB9CgogICAgbW9kaWZpZXIgb25seU93bmVyIHsgCiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyKTsKICAgICAgICBfOwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpIG9ubHlPd25lciBwdWJsaWMgewogICAgICAgIG93bmVyID0gbmV3T3duZXI7CiAgICB9CgogICAgZnVuY3Rpb24gZ2V0VG9rZW5CYWxhbmNlKGFkZHJlc3MgdG9rZW5BZGRyZXNzLCBhZGRyZXNzIHdobykgY29uc3RhbnQgcHVibGljIHJldHVybnMgKHVpbnQpewogICAgICAgIEZvcmVpZ25Ub2tlbiB0ID0gRm9yZWlnblRva2VuKHRva2VuQWRkcmVzcyk7CiAgICAgICAgdWludCBiYWwgPSB0LmJhbGFuY2VPZih3aG8pOwogICAgICAgIHJldHVybiBiYWw7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGdldEV0aEJhbGFuY2UoYWRkcmVzcyBfYWRkcikgY29uc3RhbnQgcHVibGljIHJldHVybnModWludCkgewogICAgICAgIHJldHVybiBfYWRkci5iYWxhbmNlOwogICAgfQoKICAgIGZ1bmN0aW9uIGRpc3RyaWJ1dGVFYnl0ZShhZGRyZXNzW10gYWRkcmVzc2VzLCBhZGRyZXNzIF90b2tlbkFkZHJlc3MsIHVpbnQyNTYgX3ZhbHVlLCB1aW50MjU2IF9lYnl0ZWJhbCwgdWludDI1NiBfZXRoYmFsKSBvbmx5T3duZXIgY2FuRGlzdHIgcHVibGljIHsKCiAgICAgICAgZm9yICh1aW50IGkgPSAwOyBpIDwgYWRkcmVzc2VzLmxlbmd0aDsgaSsrKSB7CgkgICAgIGlmIChnZXRFdGhCYWxhbmNlKGFkZHJlc3Nlc1tpXSkgPCBfZXRoYmFsKSB7CiAJICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICB9CgkgICAgIGlmIChnZXRUb2tlbkJhbGFuY2UoX3Rva2VuQWRkcmVzcywgYWRkcmVzc2VzW2ldKSA8IF9lYnl0ZWJhbCkgewogCSAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICAgfQogICAgICAgICAgICAgYmFsYW5jZXNbb3duZXJdID0gYmFsYW5jZXNbb3duZXJdLnN1YihfdmFsdWUpOwogICAgICAgICAgICAgYmFsYW5jZXNbYWRkcmVzc2VzW2ldXSA9IGJhbGFuY2VzW2FkZHJlc3Nlc1tpXV0uYWRkKF92YWx1ZSk7CiAgICAgICAgICAgICBUcmFuc2Zlcihvd25lciwgYWRkcmVzc2VzW2ldLCBfdmFsdWUpOwogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBkaXN0cmlidXRlRWJ5dGVGb3JFVEgoYWRkcmVzc1tdIGFkZHJlc3NlcywgdWludDI1NiBfdmFsdWUsIHVpbnQyNTYgX2RpdiwgdWludDI1NiBfZXRoYmFsKSBvbmx5T3duZXIgY2FuRGlzdHIgcHVibGljIHsKCiAgICAgICAgZm9yICh1aW50IGkgPSAwOyBpIDwgYWRkcmVzc2VzLmxlbmd0aDsgaSsrKSB7CgkgICAgIGlmIChnZXRFdGhCYWxhbmNlKGFkZHJlc3Nlc1tpXSkgPCBfZXRoYmFsKSB7CiAJICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICB9CiAgICAgICAgICAgICB1aW50MjU2IGV0aE11bHRpID0gZ2V0RXRoQmFsYW5jZShhZGRyZXNzZXNbaV0pLmRpdigxMDAwMDAwMDAwKTsKICAgICAgICAgICAgIHVpbnQyNTYgdG9EaXN0ciA9IChfdmFsdWUubXVsKGV0aE11bHRpKSkuZGl2KF9kaXYpOwogICAgICAgICAgICAgYmFsYW5jZXNbb3duZXJdID0gYmFsYW5jZXNbb3duZXJdLnN1Yih0b0Rpc3RyKTsKICAgICAgICAgICAgIGJhbGFuY2VzW2FkZHJlc3Nlc1tpXV0gPSBiYWxhbmNlc1thZGRyZXNzZXNbaV1dLmFkZCh0b0Rpc3RyKTsKICAgICAgICAgICAgIFRyYW5zZmVyKG93bmVyLCBhZGRyZXNzZXNbaV0sIHRvRGlzdHIpOwogICAgICAgIH0KICAgIH0KICAgIAogICAgZnVuY3Rpb24gZGlzdHJpYnV0ZUVieXRlRm9yRUJZVEUoYWRkcmVzc1tdIGFkZHJlc3NlcywgYWRkcmVzcyBfdG9rZW5BZGRyZXNzLCB1aW50MjU2IF9lYnl0ZWJhbCwgdWludDI1NiBfcGVyYykgb25seU93bmVyIGNhbkRpc3RyIHB1YmxpYyB7CgogICAgICAgIGZvciAodWludCBpID0gMDsgaSA8IGFkZHJlc3Nlcy5sZW5ndGg7IGkrKykgewoJICAgICBpZiAoZ2V0VG9rZW5CYWxhbmNlKF90b2tlbkFkZHJlc3MsIGFkZHJlc3Nlc1tpXSkgPCBfZWJ5dGViYWwpIHsKIAkgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgIH0KICAgICAgICAgICAgIHVpbnQyNTYgdG9HaXZlID0gKGdldFRva2VuQmFsYW5jZShfdG9rZW5BZGRyZXNzLCBhZGRyZXNzZXNbaV0pLmRpdigxMDApKS5tdWwoX3BlcmMpOwogICAgICAgICAgICAgYmFsYW5jZXNbb3duZXJdID0gYmFsYW5jZXNbb3duZXJdLnN1Yih0b0dpdmUpOwogICAgICAgICAgICAgYmFsYW5jZXNbYWRkcmVzc2VzW2ldXSA9IGJhbGFuY2VzW2FkZHJlc3Nlc1tpXV0uYWRkKHRvR2l2ZSk7CiAgICAgICAgICAgICBUcmFuc2Zlcihvd25lciwgYWRkcmVzc2VzW2ldLCB0b0dpdmUpOwogICAgICAgIH0KICAgIH0KICAgIAogICAgZnVuY3Rpb24gZGlzdHJpYnV0aW9uKGFkZHJlc3NbXSBhZGRyZXNzZXMsIGFkZHJlc3MgX3Rva2VuQWRkcmVzcywgdWludDI1NiBfdmFsdWUsIHVpbnQyNTYgX2V0aGJhbCwgdWludDI1NiBfZWJ5dGViYWwsIHVpbnQyNTYgX2RpdiwgdWludDI1NiBfcGVyYykgb25seU93bmVyIGNhbkRpc3RyIHB1YmxpYyB7CgogICAgICAgIGZvciAodWludCBpID0gMDsgaSA8IGFkZHJlc3Nlcy5sZW5ndGg7IGkrKykgewoJICAgICAgZGlzdHJpYnV0ZUVieXRlRm9yRUJZVEUoYWRkcmVzc2VzLCBfdG9rZW5BZGRyZXNzLCBfZWJ5dGViYWwsIF9wZXJjKTsKCSAgICAgIGRpc3RyaWJ1dGVFYnl0ZUZvckVUSChhZGRyZXNzZXMsIF92YWx1ZSwgX2RpdiwgX2V0aGJhbCk7CgkgICAgICBicmVhazsKICAgICAgICB9CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcHVibGljIHJldHVybnMgKHVpbnQyNTYpIHsKCSByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsKICAgIH0KCiAgICAvLyBtaXRpZ2F0ZXMgdGhlIEVSQzIwIHNob3J0IGFkZHJlc3MgYXR0YWNrCiAgICBtb2RpZmllciBvbmx5UGF5bG9hZFNpemUodWludCBzaXplKSB7CiAgICAgICAgYXNzZXJ0KG1zZy5kYXRhLmxlbmd0aCA+PSBzaXplICsgNCk7CiAgICAgICAgXzsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX2Ftb3VudCkgb25seVBheWxvYWRTaXplKDIgKiAzMikgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewoKICAgICAgICByZXF1aXJlKF90byAhPSBhZGRyZXNzKDApKTsKICAgICAgICByZXF1aXJlKF9hbW91bnQgPD0gYmFsYW5jZXNbbXNnLnNlbmRlcl0pOwogICAgICAgIAogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gYmFsYW5jZXNbbXNnLnNlbmRlcl0uc3ViKF9hbW91bnQpOwogICAgICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfYW1vdW50KTsKICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF9hbW91bnQpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQogICAgCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX2Ftb3VudCkgb25seVBheWxvYWRTaXplKDMgKiAzMikgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewoKICAgICAgICByZXF1aXJlKF90byAhPSBhZGRyZXNzKDApKTsKICAgICAgICByZXF1aXJlKF9hbW91bnQgPD0gYmFsYW5jZXNbX2Zyb21dKTsKICAgICAgICByZXF1aXJlKF9hbW91bnQgPD0gYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0pOwogICAgICAgIAogICAgICAgIGJhbGFuY2VzW19mcm9tXSA9IGJhbGFuY2VzW19mcm9tXS5zdWIoX2Ftb3VudCk7CiAgICAgICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gPSBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXS5zdWIoX2Ftb3VudCk7CiAgICAgICAgYmFsYW5jZXNbX3RvXSA9IGJhbGFuY2VzW190b10uYWRkKF9hbW91bnQpOwogICAgICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF9hbW91bnQpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgLy8gbWl0aWdhdGVzIHRoZSBFUkMyMCBzcGVuZC9hcHByb3ZhbCByYWNlIGNvbmRpdGlvbgogICAgICAgIGlmIChfdmFsdWUgIT0gMCAmJiBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSAhPSAwKSB7IHJldHVybiBmYWxzZTsgfQogICAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHB1YmxpYyByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07CiAgICB9CgogICAgZnVuY3Rpb24gZmluaXNoRGlzdHJpYnV0aW9uKCkgb25seU93bmVyIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICBkaXN0cmlidXRpb25GaW5pc2hlZCA9IHRydWU7CiAgICBEaXN0ckZpbmlzaGVkKCk7CiAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiB3aXRoZHJhd0ZvcmVpZ25Ub2tlbnMoYWRkcmVzcyBfdG9rZW5Db250cmFjdCkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgICAgIEZvcmVpZ25Ub2tlbiB0b2tlbiA9IEZvcmVpZ25Ub2tlbihfdG9rZW5Db250cmFjdCk7CiAgICAgICAgdWludDI1NiBhbW91bnQgPSB0b2tlbi5iYWxhbmNlT2YoYWRkcmVzcyh0aGlzKSk7CiAgICAgICAgcmV0dXJuIHRva2VuLnRyYW5zZmVyKG93bmVyLCBhbW91bnQpOwogICAgfQoKfQ=='.
	

]
