Class {
	#name : #SRTc385ef4a44de4e31fc83e0a31579df681b64ba8e,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTc385ef4a44de4e31fc83e0a31579df681b64ba8e >> base64 [
	^ ''.
	

]
