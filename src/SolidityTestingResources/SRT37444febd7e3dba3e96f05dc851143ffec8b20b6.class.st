Class {
	#name : #SRT37444febd7e3dba3e96f05dc851143ffec8b20b6,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT37444febd7e3dba3e96f05dc851143ffec8b20b6 >> base64 [
	^ ''.
	

]
