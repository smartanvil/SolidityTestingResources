Class {
	#name : #SRT8a46126dc294a8f1bf94ca2ce9019e4642083c64,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT8a46126dc294a8f1bf94ca2ce9019e4642083c64 >> base64 [
	^ ''.
	

]
