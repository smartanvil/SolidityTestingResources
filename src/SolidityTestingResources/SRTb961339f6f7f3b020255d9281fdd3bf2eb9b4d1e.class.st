Class {
	#name : #SRTb961339f6f7f3b020255d9281fdd3bf2eb9b4d1e,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTb961339f6f7f3b020255d9281fdd3bf2eb9b4d1e >> base64 [
	^ ''.
	

]
