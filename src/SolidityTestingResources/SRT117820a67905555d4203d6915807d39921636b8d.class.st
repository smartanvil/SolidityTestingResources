Class {
	#name : #SRT117820a67905555d4203d6915807d39921636b8d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT117820a67905555d4203d6915807d39921636b8d >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuODsKCi8qCkF2YXRhck5ldHdvcmsgQ29weXJpZ2h0CgpodHRwczovL2F2YXRhcm5ldHdvcmsuaW8KKi8KCmNvbnRyYWN0IE93bmVkIHsKCiAgICBhZGRyZXNzIG93bmVyOwoKICAgIGZ1bmN0aW9uIE93bmVkKCkgewogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgIH0KCiAgICBmdW5jdGlvbiBjaGFuZ2VPd25lcihhZGRyZXNzIG5ld093bmVyKSBvbmx5T3duZXIgewogICAgICAgIG93bmVyID0gbmV3T3duZXI7CiAgICB9CgogICAgbW9kaWZpZXIgb25seU93bmVyKCkgewogICAgICAgIGlmIChtc2cuc2VuZGVyPT1vd25lcikgXzsKICAgIH0KfQoKY29udHJhY3QgVG9rZW4gaXMgT3duZWQgewogICAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7CiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSk7CiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpOwogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50MjU2IF92YWx1ZSk7CiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKTsKICAgIGV2ZW50IEVycih1aW50MjU2IF92YWx1ZSk7Cn0KCmNvbnRyYWN0IEVSQzIwVG9rZW4gaXMgVG9rZW4gewoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CgogICAgICAgIGlmIChiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfdmFsdWUgJiYgYmFsYW5jZXNbX3RvXSArIF92YWx1ZSA+IGJhbGFuY2VzW190b10pIHsKICAgICAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOwogICAgICAgICAgICBiYWxhbmNlc1tfdG9dICs9IF92YWx1ZTsKICAgICAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9IGVsc2UgeyByZXR1cm4gZmFsc2U7IH0KICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKCiAgICAgICAgaWYgKGJhbGFuY2VzW19mcm9tXSA+PSBfdmFsdWUgJiYgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gPj0gX3ZhbHVlICYmIGJhbGFuY2VzW190b10gKyBfdmFsdWUgPiBiYWxhbmNlc1tfdG9dKSB7CiAgICAgICAgICAgIGJhbGFuY2VzW190b10gKz0gX3ZhbHVlOwogICAgICAgICAgICBiYWxhbmNlc1tfZnJvbV0gLT0gX3ZhbHVlOwogICAgICAgICAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0gZWxzZSB7IHJldHVybiBmYWxzZTsgfQogICAgfQoKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7CiAgICAgICAgcmV0dXJuIGJhbGFuY2VzW19vd25lcl07CiAgICB9CgogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHJlbWFpbmluZykgewogICAgICAgIHJldHVybiBhbGxvd2VkW19vd25lcl1bX3NwZW5kZXJdOwogICAgfQoKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgYmFsYW5jZXM7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikpIGFsbG93ZWQ7Cn0KCmNvbnRyYWN0IERpZ2l0YWxWYWxsZXlUb2tlbiBpcyBFUkMyMFRva2VuIHsKCiAgICBib29sIHB1YmxpYyBpc1Rva2VuU2FsZSA9IHRydWU7CiAgICB1aW50MjU2IHB1YmxpYyBwcmljZTsKICAgIHVpbnQyNTYgcHVibGljIGxpbWl0OwoKICAgIGFkZHJlc3Mgd2FsbGV0T3V0ID0gMHhDZDJkM0Y2NjRiRjMwNDQ5MjIxMTBDMDc5NjdmRjQwYzk5NzFBZUU3OwoKICAgIGZ1bmN0aW9uIGdldFdhbGxldE91dCgpIGNvbnN0YW50IHJldHVybnMgKGFkZHJlc3MgX3RvKSB7CiAgICAgICAgcmV0dXJuIHdhbGxldE91dDsKICAgIH0KCiAgICBmdW5jdGlvbiAoKSBleHRlcm5hbCBwYXlhYmxlICB7CiAgICAgICAgaWYgKGlzVG9rZW5TYWxlID09IGZhbHNlKSB7CiAgICAgICAgICAgIHRocm93OwogICAgICAgIH0KCiAgICAgICAgdWludDI1NiB0b2tlbkFtb3VudCA9IChtc2cudmFsdWUgICogMTAwMDAwMDAwKSAvIHByaWNlOwoKICAgICAgICBpZiAoYmFsYW5jZXNbb3duZXJdID49IHRva2VuQW1vdW50ICYmIGJhbGFuY2VzW21zZy5zZW5kZXJdICsgdG9rZW5BbW91bnQgPiBiYWxhbmNlc1ttc2cuc2VuZGVyXSkgewogICAgICAgICAgICBpZiAoYmFsYW5jZXNbb3duZXJdIC0gdG9rZW5BbW91bnQgPCBsaW1pdCkgewogICAgICAgICAgICAgICAgdGhyb3c7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgYmFsYW5jZXNbb3duZXJdIC09IHRva2VuQW1vdW50OwogICAgICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSArPSB0b2tlbkFtb3VudDsKICAgICAgICAgICAgVHJhbnNmZXIob3duZXIsIG1zZy5zZW5kZXIsIHRva2VuQW1vdW50KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aHJvdzsKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gc3RvcFNhbGUoKSBvbmx5T3duZXIgewogICAgICAgIGlzVG9rZW5TYWxlID0gZmFsc2U7CiAgICB9CgogICAgZnVuY3Rpb24gc3RhcnRTYWxlKCkgb25seU93bmVyIHsKICAgICAgICBpc1Rva2VuU2FsZSA9IHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gc2V0UHJpY2UodWludDI1NiBuZXdQcmljZSkgb25seU93bmVyIHsKICAgICAgICBwcmljZSA9IG5ld1ByaWNlOwogICAgfQoKICAgIGZ1bmN0aW9uIHNldExpbWl0KHVpbnQyNTYgbmV3TGltaXQpIG9ubHlPd25lciB7CiAgICAgICAgbGltaXQgPSBuZXdMaW1pdDsKICAgIH0KCiAgICBmdW5jdGlvbiBzZXRXYWxsZXQoYWRkcmVzcyBfdG8pIG9ubHlPd25lciB7CiAgICAgICAgd2FsbGV0T3V0ID0gX3RvOwogICAgfQoKICAgIGZ1bmN0aW9uIHNlbmRGdW5kKCkgb25seU93bmVyIHsKICAgICAgICB3YWxsZXRPdXQuc2VuZCh0aGlzLmJhbGFuY2UpOwogICAgfQoKICAgIHN0cmluZyBwdWJsaWMgbmFtZTsKICAgIHVpbnQ4IHB1YmxpYyBkZWNpbWFsczsKICAgIHN0cmluZyBwdWJsaWMgc3ltYm9sOwogICAgc3RyaW5nIHB1YmxpYyB2ZXJzaW9uID0gJzEuMCc7CgogICAgZnVuY3Rpb24gRGlnaXRhbFZhbGxleVRva2VuKCkgewogICAgICAgIHRvdGFsU3VwcGx5ID0gODgwMDAwMDAgKiAxMDAwMDAwMDA7CiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSB0b3RhbFN1cHBseTsKICAgICAgICBuYW1lID0gJ0RpZ2l0YWxWYWxsZXlUb2tlbic7CiAgICAgICAgZGVjaW1hbHMgPSA4OwogICAgICAgIHN5bWJvbCA9ICdEVlQnOwogICAgICAgIHByaWNlID0gNzE0Mjg1NzE0Mjg1NzE0OwogICAgICAgIGxpbWl0ID0gdG90YWxTdXBwbHkgLSAxMDAwMDAwMDAwMDAwMDsKICAgIH0KCgogICAgLyog0JTQvtCx0LDQstC70Y/QtdGCINC90LAg0YHRh9C10YIg0YLQvtC60LXQvdC+0LIgKi8KICAgIGZ1bmN0aW9uIGFkZCh1aW50MjU2IF92YWx1ZSkgb25seU93bmVyIHJldHVybnMgKGJvb2wgc3VjY2VzcykKICAgIHsKICAgICAgICBpZiAoYmFsYW5jZXNbbXNnLnNlbmRlcl0gKyBfdmFsdWUgPD0gYmFsYW5jZXNbbXNnLnNlbmRlcl0pIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgICB0b3RhbFN1cHBseSArPSBfdmFsdWU7CiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gKz0gX3ZhbHVlOwoKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICAvKiDQo9C90LjRh9GC0L7QttCw0LXRgiDRgtC+0LrQtdC90Ysg0L3QsCDRgdGH0LXRgtC1INCy0LvQsNC00LXQu9GM0YbQsCDQutC+0L3RgtGA0LDQutGC0LAgKi8KICAgIGZ1bmN0aW9uIGJ1cm4odWludDI1NiBfdmFsdWUpIG9ubHlPd25lciAgcmV0dXJucyAoYm9vbCBzdWNjZXNzKQogICAgewogICAgICAgIGlmIChiYWxhbmNlc1ttc2cuc2VuZGVyXSA8IF92YWx1ZSkgewogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICAgIHRvdGFsU3VwcGx5IC09IF92YWx1ZTsKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9Cn0='.
	

]
