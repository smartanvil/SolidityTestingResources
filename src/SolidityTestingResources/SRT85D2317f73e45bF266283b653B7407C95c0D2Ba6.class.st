Class {
	#name : #SRT85D2317f73e45bF266283b653B7407C95c0D2Ba6,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT85D2317f73e45bF266283b653B7407C95c0D2Ba6 >> base64 [
	^ ''.
	

]
