Class {
	#name : #SRT619de4f05fe07522de2bdcf2daeb1a23da8c0bb4,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT619de4f05fe07522de2bdcf2daeb1a23da8c0bb4 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7Cgpjb250cmFjdCBTYWZlTWF0aHsKICBmdW5jdGlvbiBzYWZlTXVsKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7CiAgICB1aW50IGMgPSBhICogYjsKICAgIGFzc2VydChhID09IDAgfHwgYyAvIGEgPT0gYik7CiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIHNhZmVEaXYodWludCBhLCB1aW50IGIpIGludGVybmFsIHJldHVybnMgKHVpbnQpIHsKICAgIGFzc2VydChiID4gMCk7CiAgICB1aW50IGMgPSBhIC8gYjsKICAgIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOwogICAgcmV0dXJuIGM7CiAgfQoJCglmdW5jdGlvbiBzYWZlU3ViKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7CiAgICAJYXNzZXJ0KGIgPD0gYSk7CiAgICAJcmV0dXJuIGEgLSBiOwogIH0KCglmdW5jdGlvbiBzYWZlQWRkKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7CiAgICAJdWludCBjID0gYSArIGI7CiAgICAJYXNzZXJ0KGMgPj0gYSk7CiAgICAJcmV0dXJuIGM7CiAgfQoJZnVuY3Rpb24gYXNzZXJ0KGJvb2wgYXNzZXJ0aW9uKSBpbnRlcm5hbCB7CgkgICAgaWYgKCFhc3NlcnRpb24pIHsKCSAgICAgIHRocm93OwoJICAgIH0KCX0KfQoKCmNvbnRyYWN0IEVSQzIwewoKIAlmdW5jdGlvbiB0b3RhbFN1cHBseSgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgdG90YWxTdXBwbHkpIHt9CglmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkge30KCWZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3JlY2lwaWVudCwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcykge30KCWZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF9yZWNpcGllbnQsIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHt9CglmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHt9CglmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKSB7fQoKCWV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF9yZWNpcGllbnQsIHVpbnQyNTYgX3ZhbHVlKTsKCWV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpOwoKCn0KCmNvbnRyYWN0IFh0cmVtY29pbiBpcyBFUkMyMCwgU2FmZU1hdGh7CgoJCgltYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikgYmFsYW5jZXM7CgoJc3RyaW5nIAlwdWJsaWMgbmFtZSA9ICJYdHJlbWNvaW4iOwoJc3RyaW5nIAlwdWJsaWMgc3ltYm9sID0gIlhUUiI7Cgl1aW50IAlwdWJsaWMgZGVjaW1hbHMgPSA4OwoJdWludDI1NiBwdWJsaWMgQ0lSX1NVUFBMWTsKCXVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5OwoJdWludDI1NiBwdWJsaWMgcHJpY2U7CglhZGRyZXNzIHB1YmxpYyBvd25lcjsKCXVpbnQyNTYgcHVibGljIGVuZFRpbWU7Cgl1aW50MjU2IHB1YmxpYyBzdGFydFRpbWU7CgoJZnVuY3Rpb24gWHRyZW1jb2luKHVpbnQyNTYgX2luaXRpYWxfc3VwcGx5LCB1aW50MjU2IF9wcmljZSwgdWludDI1NiBfY2lyX3N1cHBseSkgewoJCXRvdGFsU3VwcGx5ID0gX2luaXRpYWxfc3VwcGx5OwoJCWJhbGFuY2VzW21zZy5zZW5kZXJdID0gX2luaXRpYWxfc3VwcGx5OyAgLy8gR2l2ZSBhbGwgb2YgdGhlIGluaXRpYWwgdG9rZW5zIHRvIHRoZSBjb250cmFjdCBkZXBsb3llci4KCQlDSVJfU1VQUExZID0gX2Npcl9zdXBwbHk7CgkJZW5kVGltZSA9IG5vdyArIDE3IHdlZWtzOwoJCXN0YXJ0VGltZSA9IG5vdyArIDE1IGRheXM7CgkJb3duZXIgCT0gbXNnLnNlbmRlcjsKCQlwcmljZSAJPSBfcHJpY2U7Cgl9CgoJZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpIHsKCSAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsKCX0KICAgIAoJZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpewoJICAgIHJlcXVpcmUgKF90byAhPSAweDApOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBQcmV2ZW50IHRyYW5zZmVyIHRvIDB4MCBhZGRyZXNzLiBVc2UgYnVybigpIGluc3RlYWQKICAgICAgICByZXF1aXJlIChiYWxhbmNlc1ttc2cuc2VuZGVyXSA+IF92YWx1ZSk7ICAgICAgICAgICAgICAgIC8vIENoZWNrIGlmIHRoZSBzZW5kZXIgaGFzIGVub3VnaAogICAgICAgIHJlcXVpcmUgKHNhZmVBZGQoYmFsYW5jZXNbX3RvXSwgX3ZhbHVlKSA+IGJhbGFuY2VzW190b10pOyAvLyBDaGVjayBmb3Igb3ZlcmZsb3dzCgkgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBzYWZlU3ViKGJhbGFuY2VzW21zZy5zZW5kZXJdLCBfdmFsdWUpOwoJICAgIGJhbGFuY2VzW190b10gPSBzYWZlQWRkKGJhbGFuY2VzW190b10sIF92YWx1ZSk7CgkgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwoJICAgIHJldHVybiB0cnVlOwoJfQoKCW1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsKCglmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpewoJICAgIHZhciBfYWxsb3dhbmNlID0gYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl07CgkgICAgcmVxdWlyZSAoX3ZhbHVlIDwgX2FsbG93YW5jZSk7CgkgICAgCgkgICAgcmVxdWlyZSAoX3RvICE9IDB4MCk7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFByZXZlbnQgdHJhbnNmZXIgdG8gMHgwIGFkZHJlc3MuIFVzZSBidXJuKCkgaW5zdGVhZAogICAgICAgIHJlcXVpcmUgKGJhbGFuY2VzW21zZy5zZW5kZXJdID4gX3ZhbHVlKTsgICAgICAgICAgICAgICAgLy8gQ2hlY2sgaWYgdGhlIHNlbmRlciBoYXMgZW5vdWdoCiAgICAgICAgcmVxdWlyZSAoc2FmZUFkZChiYWxhbmNlc1tfdG9dLCBfdmFsdWUpID4gYmFsYW5jZXNbX3RvXSk7IC8vIENoZWNrIGZvciBvdmVyZmxvd3MKCSAgICBiYWxhbmNlc1tfdG9dID0gc2FmZUFkZChiYWxhbmNlc1tfdG9dLCBfdmFsdWUpOwoJICAgIGJhbGFuY2VzW19mcm9tXSA9IHNhZmVTdWIoYmFsYW5jZXNbX2Zyb21dLCBfdmFsdWUpOwoJICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID0gc2FmZVN1YihfYWxsb3dhbmNlLCBfdmFsdWUpOwoJICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7CgkgICAgcmV0dXJuIHRydWU7Cgl9CgoJZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CgkgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CgkgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CgkgICAgcmV0dXJuIHRydWU7Cgl9CgoJZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHJlbWFpbmluZykgewoJICAgIHJldHVybiBhbGxvd2VkW19vd25lcl1bX3NwZW5kZXJdOwoJfQoKCgltb2RpZmllciBkdXJpbmdfb2ZmZXJpbmdfdGltZSgpewoJCWlmIChub3cgPCBzdGFydFRpbWUgfHwgbm93ID49IGVuZFRpbWUpewoJCQl0aHJvdzsKCQl9ZWxzZXsKCQkJXzsKCQl9Cgl9CgoJZnVuY3Rpb24gKCkgcGF5YWJsZSBkdXJpbmdfb2ZmZXJpbmdfdGltZSB7CgkJY3JlYXRlVG9rZW5zKG1zZy5zZW5kZXIpOwoJfQoKCWZ1bmN0aW9uIGNyZWF0ZVRva2VucyhhZGRyZXNzIHJlY2lwaWVudCkgcGF5YWJsZSB7CgkJaWYgKG1zZy52YWx1ZSA9PSAwKSB7CgkJICB0aHJvdzsKCQl9CgkJdWludCB0b2tlbnMgPSBzYWZlRGl2KHNhZmVNdWwobXNnLnZhbHVlLCBwcmljZSksIDEgZXRoZXIpOwogICAgICAgIGlmKHNhZmVTdWIoYmFsYW5jZXNbb3duZXJdLHRva2Vucyk+c2FmZVN1Yih0b3RhbFN1cHBseSwgQ0lSX1NVUFBMWSkpewogICAgICAgICAgICBiYWxhbmNlc1tvd25lcl0gPSBzYWZlU3ViKGJhbGFuY2VzW293bmVyXSwgdG9rZW5zKTsKCQkgICAgYmFsYW5jZXNbcmVjaXBpZW50XSA9IHNhZmVBZGQoYmFsYW5jZXNbcmVjaXBpZW50XSwgdG9rZW5zKTsgICAKICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgdGhyb3c7CiAgICAgICAgfQoKCQlpZiAoIW93bmVyLnNlbmQobXNnLnZhbHVlKSkgewoJCSAgdGhyb3c7CgkJfQoJfQoKfQ=='.
	

]
