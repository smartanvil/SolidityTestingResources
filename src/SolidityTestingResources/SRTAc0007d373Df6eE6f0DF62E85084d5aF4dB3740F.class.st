Class {
	#name : #SRTAc0007d373Df6eE6f0DF62E85084d5aF4dB3740F,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTAc0007d373Df6eE6f0DF62E85084d5aF4dB3740F >> base64 [
	^ ''.
	

]
