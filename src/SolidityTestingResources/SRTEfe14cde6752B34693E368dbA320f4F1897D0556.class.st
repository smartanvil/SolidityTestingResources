Class {
	#name : #SRTEfe14cde6752B34693E368dbA320f4F1897D0556,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTEfe14cde6752B34693E368dbA320f4F1897D0556 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7CgoKLy8vIEB0aXRsZSAgR0lGVE8gdG9rZW4gcHJlc2FsZSAtIGdpZnRvLmlvIChHSUZUTykgLSBjcm93ZGZ1bmRpbmcgY29kZQovLy8gV2hpdGVwYXBlcjoKLy8vICBodHRwczovL2dpZnRvLmlvL0dJRlRPX1doaXRlcGFwZXJfVjIuMF8yMDE3MTIwNC5wZGYKLy8vIAoKY29udHJhY3QgR0lGVE8gewogICAgc3RyaW5nIHB1YmxpYyBuYW1lID0gIkdJRlRPIjsKICAgIHN0cmluZyBwdWJsaWMgc3ltYm9sID0gIkdJRlRPIjsKICAgIHVpbnQ4IHB1YmxpYyBjb25zdGFudCBkZWNpbWFscyA9IDE4OyAgCiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKCiAgICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCB0b2tlbnNQZXJFdGggPSAxOwogICAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgaG93TWFueUV0aGVySW5XZWlUb0JlY29tZU93bmVyID0gMTAwMCBldGhlcjsKICAgIHVpbnQyNTYgcHVibGljIGNvbnN0YW50IGhvd01hbnlFdGhlckluV2VpVG9LaWxsQ29udHJhY3QgPSA1MDAgZXRoZXI7CiAgICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCBob3dNYW55RXRoZXJJbldlaVRvQ2hhbmdlU3ltYm9sTmFtZSA9IDQwMCBldGhlcjsKICAgIAogICAgYm9vbCBwdWJsaWMgZnVuZGluZyA9IHRydWU7CgogICAgLy8gVGhlIGN1cnJlbnQgdG90YWwgdG9rZW4gc3VwcGx5LgogICAgdWludDI1NiB0b3RhbFRva2VucyA9IDEwMDA7CgogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsKCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsKICAgIGV2ZW50IE1pZ3JhdGUoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50MjU2IF92YWx1ZSk7CiAgICBldmVudCBSZWZ1bmQoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCB1aW50MjU2IF92YWx1ZSk7CiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKTsKCiAgICBmdW5jdGlvbiBHSUZUTygpIHB1YmxpYyB7CiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgICAgIGJhbGFuY2VzW293bmVyXT0xMDAwOwogICAgfQoKICAgIGZ1bmN0aW9uIGNoYW5nZU5hbWVTeW1ib2woc3RyaW5nIF9uYW1lLCBzdHJpbmcgX3N5bWJvbCkgcGF5YWJsZSBleHRlcm5hbAogICAgewogICAgICAgIGlmIChtc2cuc2VuZGVyPT1vd25lciB8fCBtc2cudmFsdWUgPj1ob3dNYW55RXRoZXJJbldlaVRvQ2hhbmdlU3ltYm9sTmFtZSkKICAgICAgICB7CiAgICAgICAgICAgIG5hbWUgPSBfbmFtZTsKICAgICAgICAgICAgc3ltYm9sID0gX3N5bWJvbDsKICAgICAgICB9CiAgICB9CiAgICAKICAgIAogICAgZnVuY3Rpb24gY2hhbmdlT3duZXIgKGFkZHJlc3MgX25ld293bmVyKSBwYXlhYmxlIGV4dGVybmFsCiAgICB7CiAgICAgICAgaWYgKG1zZy52YWx1ZT49aG93TWFueUV0aGVySW5XZWlUb0JlY29tZU93bmVyKQogICAgICAgIHsKICAgICAgICAgICAgb3duZXIudHJhbnNmZXIobXNnLnZhbHVlKTsKICAgICAgICAgICAgb3duZXIudHJhbnNmZXIodGhpcy5iYWxhbmNlKTsKICAgICAgICAgICAgb3duZXI9X25ld293bmVyOwogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBraWxsQ29udHJhY3QgKCkgcGF5YWJsZSBleHRlcm5hbAogICAgewogICAgICAgIGlmIChtc2cuc2VuZGVyPT1vd25lciB8fCBtc2cudmFsdWUgPj1ob3dNYW55RXRoZXJJbldlaVRvS2lsbENvbnRyYWN0KQogICAgICAgIHsKICAgICAgICAgICAgc2VsZmRlc3RydWN0KG93bmVyKTsKICAgICAgICB9CiAgICB9CiAgICAvLy8gQG5vdGljZSBUcmFuc2ZlciBgX3ZhbHVlYCBUT04gdG9rZW5zIGZyb20gc2VuZGVyJ3MgYWNjb3VudAogICAgLy8vIGBtc2cuc2VuZGVyYCB0byBwcm92aWRlZCBhY2NvdW50IGFkZHJlc3MgYF90b2AuCiAgICAvLy8gQG5vdGljZSBUaGlzIGZ1bmN0aW9uIGlzIGRpc2FibGVkIGR1cmluZyB0aGUgZnVuZGluZy4KICAgIC8vLyBAZGV2IFJlcXVpcmVkIHN0YXRlOiBPcGVyYXRpb25hbAogICAgLy8vIEBwYXJhbSBfdG8gVGhlIGFkZHJlc3Mgb2YgdGhlIHRva2VucyByZWNpcGllbnQKICAgIC8vLyBAcGFyYW0gX3ZhbHVlIFRoZSBhbW91bnQgb2YgdG9rZW4gdG8gYmUgdHJhbnNmZXJyZWQKICAgIC8vLyBAcmV0dXJuIFdoZXRoZXIgdGhlIHRyYW5zZmVyIHdhcyBzdWNjZXNzZnVsIG9yIG5vdAogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgICAgIC8vIEFib3J0IGlmIG5vdCBpbiBPcGVyYXRpb25hbCBzdGF0ZS4KICAgICAgICAKICAgICAgICB2YXIgc2VuZGVyQmFsYW5jZSA9IGJhbGFuY2VzW21zZy5zZW5kZXJdOwogICAgICAgIGlmIChzZW5kZXJCYWxhbmNlID49IF92YWx1ZSAmJiBfdmFsdWUgPiAwKSB7CiAgICAgICAgICAgIHNlbmRlckJhbGFuY2UgLT0gX3ZhbHVlOwogICAgICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IHNlbmRlckJhbGFuY2U7CiAgICAgICAgICAgIGJhbGFuY2VzW190b10gKz0gX3ZhbHVlOwogICAgICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0KICAgICAgICByZXR1cm4gZmFsc2U7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIG1pbnRUbyhhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICAgICAgLy8gQWJvcnQgaWYgbm90IGluIE9wZXJhdGlvbmFsIHN0YXRlLgogICAgICAgIAogICAgICAgICAgICBiYWxhbmNlc1tfdG9dICs9IF92YWx1ZTsKICAgICAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIAoKICAgIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgZXh0ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHJldHVybiB0b3RhbFRva2VuczsKICAgIH0KCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGV4dGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsKICAgIH0KCgogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKAogICAgICAgICBhZGRyZXNzIF9mcm9tLAogICAgICAgICBhZGRyZXNzIF90bywKICAgICAgICAgdWludDI1NiBfYW1vdW50CiAgICAgKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgIGlmIChiYWxhbmNlc1tfZnJvbV0gPj0gX2Ftb3VudAogICAgICAgICAgICAgJiYgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gPj0gX2Ftb3VudAogICAgICAgICAgICAgJiYgX2Ftb3VudCA+IDAKICAgICAgICAgICAgICYmIGJhbGFuY2VzW190b10gKyBfYW1vdW50ID4gYmFsYW5jZXNbX3RvXSkgewogICAgICAgICAgICAgYmFsYW5jZXNbX2Zyb21dIC09IF9hbW91bnQ7CiAgICAgICAgICAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSAtPSBfYW1vdW50OwogICAgICAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfYW1vdW50OwogICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgIH0KICB9CgogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF9hbW91bnQpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfYW1vdW50OwogICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX2Ftb3VudCk7CiAgICAgICAgIAogICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICB9Ci8vIENyb3dkZnVuZGluZzoKCiAgICAvLy8gQG5vdGljZSBDcmVhdGUgdG9rZW5zIHdoZW4gZnVuZGluZyBpcyBhY3RpdmUuCiAgICAvLy8gQGRldiBSZXF1aXJlZCBzdGF0ZTogRnVuZGluZyBBY3RpdmUKICAgIC8vLyBAZGV2IFN0YXRlIHRyYW5zaXRpb246IC0+IEZ1bmRpbmcgU3VjY2VzcyAob25seSBpZiBjYXAgcmVhY2hlZCkKICAgIGZ1bmN0aW9uICgpIHBheWFibGUgZXh0ZXJuYWwgewogICAgICAgIC8vIEFib3J0IGlmIG5vdCBpbiBGdW5kaW5nIEFjdGl2ZSBzdGF0ZS4KICAgICAgICAvLyBUaGUgY2hlY2tzIGFyZSBzcGxpdCAoaW5zdGVhZCBvZiB1c2luZyBvciBvcGVyYXRvcikgYmVjYXVzZSBpdCBpcwogICAgICAgIC8vIGNoZWFwZXIgdGhpcyB3YXkuCiAgICAgICAgaWYgKCFmdW5kaW5nKSByZXZlcnQoKTsKICAgICAgICAKICAgICAgICAvLyBEbyBub3QgYWxsb3cgY3JlYXRpbmcgMCBvciBtb3JlIHRoYW4gdGhlIGNhcCB0b2tlbnMuCiAgICAgICAgaWYgKG1zZy52YWx1ZSA9PSAwKSByZXZlcnQoKTsKICAgICAgICAKICAgICAgICB2YXIgbnVtVG9rZW5zID0gbXNnLnZhbHVlICogKDEwMDAuMC90b3RhbFRva2Vucyk7CiAgICAgICAgdG90YWxUb2tlbnMgKz0gbnVtVG9rZW5zOwoKICAgICAgICAvLyBBc3NpZ24gbmV3IHRva2VucyB0byB0aGUgc2VuZGVyCiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gKz0gbnVtVG9rZW5zOwoKICAgICAgICAvLyBMb2cgdG9rZW4gY3JlYXRpb24gZXZlbnQKICAgICAgICBUcmFuc2ZlcigwLCBtc2cuc2VuZGVyLCBudW1Ub2tlbnMpOwogICAgfQp9'.
	

]
