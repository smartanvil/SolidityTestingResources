Class {
	#name : #SRT0174312e4Aef436606ffdEb4D05d22fB68f36Ba0,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT0174312e4Aef436606ffdEb4D05d22fB68f36Ba0 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTM7Cgpjb250cmFjdCBMYXRpdW0gewogICAgc3RyaW5nIHB1YmxpYyBjb25zdGFudCBuYW1lID0gIkxhdGl1bSI7CiAgICBzdHJpbmcgcHVibGljIGNvbnN0YW50IHN5bWJvbCA9ICJMQVQiOwogICAgdWludDggcHVibGljIGNvbnN0YW50IGRlY2ltYWxzID0gMTY7CiAgICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCB0b3RhbFN1cHBseSA9CiAgICAgICAgMzAwMDAwMDAgKiAxMCAqKiB1aW50MjU2KGRlY2ltYWxzKTsKCiAgICAvLyBvd25lciBvZiB0aGlzIGNvbnRyYWN0CiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKCiAgICAvLyBiYWxhbmNlcyBmb3IgZWFjaCBhY2NvdW50CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBiYWxhbmNlT2Y7CgogICAgLy8gdHJpZ2dlcmVkIHdoZW4gdG9rZW5zIGFyZSB0cmFuc2ZlcnJlZAogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50IF92YWx1ZSk7CgogICAgLy8gY29uc3RydWN0b3IKICAgIGZ1bmN0aW9uIExhdGl1bSgpIHsKICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgICAgICAgYmFsYW5jZU9mW293bmVyXSA9IHRvdGFsU3VwcGx5OwogICAgfQoKICAgIC8vIHRyYW5zZmVyIHRoZSBiYWxhbmNlIGZyb20gc2VuZGVyJ3MgYWNjb3VudCB0byBhbm90aGVyIG9uZQogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSB7CiAgICAgICAgLy8gcHJldmVudCB0cmFuc2ZlciB0byAweDAgYWRkcmVzcwogICAgICAgIHJlcXVpcmUoX3RvICE9IDB4MCk7CiAgICAgICAgLy8gc2VuZGVyIGFuZCByZWNpcGllbnQgc2hvdWxkIGJlIGRpZmZlcmVudAogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciAhPSBfdG8pOwogICAgICAgIC8vIGNoZWNrIGlmIHRoZSBzZW5kZXIgaGFzIGVub3VnaCBjb2lucwogICAgICAgIHJlcXVpcmUoX3ZhbHVlID4gMCAmJiBiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPj0gX3ZhbHVlKTsKICAgICAgICAvLyBjaGVjayBmb3Igb3ZlcmZsb3dzCiAgICAgICAgcmVxdWlyZShiYWxhbmNlT2ZbX3RvXSArIF92YWx1ZSA+IGJhbGFuY2VPZltfdG9dKTsKICAgICAgICAvLyBzdWJ0cmFjdCBjb2lucyBmcm9tIHNlbmRlcidzIGFjY291bnQKICAgICAgICBiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOwogICAgICAgIC8vIGFkZCBjb2lucyB0byByZWNpcGllbnQncyBhY2NvdW50CiAgICAgICAgYmFsYW5jZU9mW190b10gKz0gX3ZhbHVlOwogICAgICAgIC8vIG5vdGlmeSBsaXN0ZW5lcnMgYWJvdXQgdGhpcyB0cmFuc2ZlcgogICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgIH0KfQoKY29udHJhY3QgTGF0aXVtU2VsbGVyIHsKICAgIGFkZHJlc3MgcHJpdmF0ZSBjb25zdGFudCBfbGF0aXVtQWRkcmVzcyA9IDB4QmIzMTAzN2Y5OTc1NTNCRWM1MDUxMGE2MzVkMjMxQTM1RjhFQzY0MDsKICAgIExhdGl1bSBwcml2YXRlIGNvbnN0YW50IF9sYXRpdW0gPSBMYXRpdW0oX2xhdGl1bUFkZHJlc3MpOwoKICAgIC8vIGFtb3VudCBvZiBFdGhlciBjb2xsZWN0ZWQgZnJvbSBidXllcnMgYW5kIG5vdCB3aXRoZHJhd24geWV0CiAgICB1aW50MjU2IHByaXZhdGUgX2V0aGVyQW1vdW50ID0gMDsKCiAgICAvLyBzYWxlIHNldHRpbmdzCiAgICB1aW50MjU2IHByaXZhdGUgY29uc3RhbnQgX3Rva2VuUHJpY2UgPSAxMCBmaW5uZXk7IC8vIDAuMDEgRXRoZXIKICAgIHVpbnQyNTYgcHJpdmF0ZSBfbWluaW11bVB1cmNoYXNlID0KICAgICAgICAxMCAqIDEwICoqIHVpbnQyNTYoX2xhdGl1bS5kZWNpbWFscygpKTsgLy8gMTAgTGF0aXVtCgogICAgLy8gb3duZXIgb2YgdGhpcyBjb250cmFjdAogICAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CgogICAgLy8gY29uc3RydWN0b3IKICAgIGZ1bmN0aW9uIExhdGl1bVNlbGxlcigpIHsKICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgICB9CgogICAgZnVuY3Rpb24gdG9rZW5QcmljZSgpIGNvbnN0YW50IHJldHVybnModWludDI1NiB0b2tlblByaWNlKSB7CiAgICAgICAgcmV0dXJuIF90b2tlblByaWNlOwogICAgfQoKICAgIGZ1bmN0aW9uIG1pbmltdW1QdXJjaGFzZSgpIGNvbnN0YW50IHJldHVybnModWludDI1NiBtaW5pbXVtUHVyY2hhc2UpIHsKICAgICAgICByZXR1cm4gX21pbmltdW1QdXJjaGFzZTsKICAgIH0KCiAgICAvLyBmdW5jdGlvbiB0byBnZXQgY3VycmVudCBMYXRpdW0gYmFsYW5jZSBvZiB0aGlzIGNvbnRyYWN0CiAgICBmdW5jdGlvbiBfdG9rZW5zVG9TZWxsKCkgcHJpdmF0ZSByZXR1cm5zICh1aW50MjU2IHRva2Vuc1RvU2VsbCkgewogICAgICAgIHJldHVybiBfbGF0aXVtLmJhbGFuY2VPZihhZGRyZXNzKHRoaXMpKTsKICAgIH0KCiAgICAvLyBmdW5jdGlvbiB3aXRob3V0IG5hbWUgaXMgdGhlIGRlZmF1bHQgZnVuY3Rpb24gdGhhdCBpcyBjYWxsZWQKICAgIC8vIHdoZW5ldmVyIGFueW9uZSBzZW5kcyBmdW5kcyB0byBhIGNvbnRyYWN0CiAgICBmdW5jdGlvbiAoKSBwYXlhYmxlIHsKICAgICAgICAvLyB3ZSBzaG91bGRuJ3Qgc2VsbCB0b2tlbnMgdG8gdGhlaXIgb3duZXIKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgIT0gb3duZXIgJiYgbXNnLnNlbmRlciAhPSBhZGRyZXNzKHRoaXMpKTsKICAgICAgICAvLyBjaGVjayBpZiB3ZSBoYXZlIHRva2VucyB0byBzZWxsCiAgICAgICAgdWludDI1NiB0b2tlbnNUb1NlbGwgPSBfdG9rZW5zVG9TZWxsKCk7CiAgICAgICAgcmVxdWlyZSh0b2tlbnNUb1NlbGwgPiAwKTsKICAgICAgICAvLyBjYWxjdWxhdGUgYW1vdW50IG9mIHRva2VucyB0aGF0IGNhbiBiZSBib3VnaHQKICAgICAgICAvLyB3aXRoIHRoaXMgYW1vdW50IG9mIEV0aGVyCiAgICAgICAgLy8gTk9URTogbWFrZSBtdWx0aXBsaWNhdGlvbiBmaXJzdDsgb3RoZXJ3aXNlIHdlIGNhbiBsb3NlCiAgICAgICAgLy8gZnJhY3Rpb25hbCBwYXJ0IGFmdGVyIGRpdmlzaW9uCiAgICAgICAgdWludDI1NiB0b2tlbnNUb0J1eSA9CiAgICAgICAgICAgIG1zZy52YWx1ZSAqIDEwICoqIHVpbnQyNTYoX2xhdGl1bS5kZWNpbWFscygpKSAvIF90b2tlblByaWNlOwogICAgICAgIC8vIGNoZWNrIGlmIHVzZXIncyBwdXJjaGFzZSBpcyBhYm92ZSB0aGUgbWluaW11bQogICAgICAgIHJlcXVpcmUodG9rZW5zVG9CdXkgPj0gX21pbmltdW1QdXJjaGFzZSk7CiAgICAgICAgLy8gY2hlY2sgaWYgd2UgaGF2ZSBlbm91Z2ggdG9rZW5zIHRvIHNlbGwKICAgICAgICByZXF1aXJlKHRva2Vuc1RvQnV5IDw9IHRva2Vuc1RvU2VsbCk7CiAgICAgICAgX2V0aGVyQW1vdW50ICs9IG1zZy52YWx1ZTsKICAgICAgICBfbGF0aXVtLnRyYW5zZmVyKG1zZy5zZW5kZXIsIHRva2Vuc1RvQnV5KTsKICAgIH0KCiAgICAvLyBmdW5jdGlvbnMgd2l0aCB0aGlzIG1vZGlmaWVyIGNhbiBvbmx5IGJlIGV4ZWN1dGVkIGJ5IHRoZSBvd25lcgogICAgbW9kaWZpZXIgb25seU93bmVyKCkgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICAgICAgXzsKICAgIH0KCiAgICAvLyBmdW5jdGlvbiB0byB3aXRoZHJhdyBFdGhlciB0byBvd25lcidzIGFjY291bnQKICAgIGZ1bmN0aW9uIHdpdGhkcmF3RXRoZXIodWludDI1NiBfYW1vdW50KSBvbmx5T3duZXIgewogICAgICAgIGlmIChfYW1vdW50ID09IDApIHsKICAgICAgICAgICAgLy8gd2l0aGRyYXcgYWxsIGF2YWlsYWJsZSBFdGhlcgogICAgICAgICAgICBfYW1vdW50ID0gX2V0aGVyQW1vdW50OwogICAgICAgIH0KICAgICAgICByZXF1aXJlKF9hbW91bnQgPiAwICYmIF9ldGhlckFtb3VudCA+PSBfYW1vdW50KTsKICAgICAgICBfZXRoZXJBbW91bnQgLT0gX2Ftb3VudDsKICAgICAgICBtc2cuc2VuZGVyLnRyYW5zZmVyKF9hbW91bnQpOwogICAgfQoKICAgIC8vIGZ1bmN0aW9uIHRvIHdpdGhkcmF3IExhdGl1bSB0byBvd25lcidzIGFjY291bnQKICAgIGZ1bmN0aW9uIHdpdGhkcmF3TGF0aXVtKHVpbnQyNTYgX2Ftb3VudCkgb25seU93bmVyIHsKICAgICAgICB1aW50MjU2IGF2YWlsYWJsZUxhdGl1bSA9IF90b2tlbnNUb1NlbGwoKTsKICAgICAgICByZXF1aXJlKGF2YWlsYWJsZUxhdGl1bSA+IDApOwogICAgICAgIGlmIChfYW1vdW50ID09IDApIHsKICAgICAgICAgICAgLy8gd2l0aGRyYXcgYWxsIGF2YWlsYWJsZSBMYXRpdW0KICAgICAgICAgICAgX2Ftb3VudCA9IGF2YWlsYWJsZUxhdGl1bTsKICAgICAgICB9CiAgICAgICAgcmVxdWlyZShhdmFpbGFibGVMYXRpdW0gPj0gX2Ftb3VudCk7CiAgICAgICAgX2xhdGl1bS50cmFuc2Zlcihtc2cuc2VuZGVyLCBfYW1vdW50KTsKICAgIH0KfQ=='.
	

]
