Class {
	#name : #SRTaafd4fc990ffa78ced015d77f04cc65842a3e78a,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTaafd4fc990ffa78ced015d77f04cc65842a3e78a >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTY7Cgpjb250cmFjdCBFdGhyYWZmbGVfdjFiIHsKICAgIHN0cnVjdCBDb250ZXN0YW50IHsKICAgICAgICBhZGRyZXNzIGFkZHI7CiAgICAgICAgdWludCByYWZmbGVJZDsKICAgIH0KCiAgICBldmVudCBSYWZmbGVSZXN1bHQoCiAgICAgICAgdWludCBpbmRleGVkIHJhZmZsZUlkLAogICAgICAgIHVpbnQgd2lubmluZ051bWJlciwKICAgICAgICBhZGRyZXNzIHdpbm5pbmdBZGRyZXNzLAogICAgICAgIGFkZHJlc3Mgc2VlZDEsCiAgICAgICAgYWRkcmVzcyBzZWVkMiwKICAgICAgICB1aW50IHNlZWQzLAogICAgICAgIGJ5dGVzMzIgcmFuZEhhc2gKICAgICk7CgogICAgZXZlbnQgVGlja2V0UHVyY2hhc2UoCiAgICAgICAgdWludCBpbmRleGVkIHJhZmZsZUlkLAogICAgICAgIGFkZHJlc3MgY29udGVzdGFudCwKICAgICAgICB1aW50IG51bWJlcgogICAgKTsKCiAgICBldmVudCBUaWNrZXRSZWZ1bmQoCiAgICAgICAgdWludCBpbmRleGVkIHJhZmZsZUlkLAogICAgICAgIGFkZHJlc3MgY29udGVzdGFudCwKICAgICAgICB1aW50IG51bWJlcgogICAgKTsKCiAgICAvLyBDb25zdGFudHMKICAgIHVpbnQgcHVibGljIGNvbnN0YW50IHByaXplID0gMi41IGV0aGVyOwogICAgdWludCBwdWJsaWMgY29uc3RhbnQgZmVlID0gMC4wMyBldGhlcjsKICAgIHVpbnQgcHVibGljIGNvbnN0YW50IHRvdGFsVGlja2V0cyA9IDUwOwogICAgdWludCBwdWJsaWMgY29uc3RhbnQgcHJpY2VQZXJUaWNrZXQgPSAocHJpemUgKyBmZWUpIC8gdG90YWxUaWNrZXRzOyAvLyBNYWtlIHN1cmUgdGhpcyBkaXZpZGVzIGV2ZW5seQogICAgYWRkcmVzcyBmZWVBZGRyZXNzOwoKICAgIC8vIE90aGVyIGludGVybmFsIHZhcmlhYmxlcwogICAgYm9vbCBwdWJsaWMgcGF1c2VkID0gZmFsc2U7CiAgICB1aW50IHB1YmxpYyByYWZmbGVJZCA9IDE7CiAgICB1aW50IG5leHRUaWNrZXQgPSAwOwogICAgbWFwcGluZyAodWludCA9PiBDb250ZXN0YW50KSBjb250ZXN0YW50czsKICAgIHVpbnRbXSBnYXBzOwoKICAgIC8vIEluaXRpYWxpemF0aW9uCiAgICBmdW5jdGlvbiBFdGhyYWZmbGUoKSBwdWJsaWMgewogICAgICAgIGZlZUFkZHJlc3MgPSBtc2cuc2VuZGVyOwogICAgfQoKICAgIC8vIENhbGwgYnV5VGlja2V0cygpIHdoZW4gcmVjZWl2aW5nIEV0aGVyIG91dHNpZGUgYSBmdW5jdGlvbgogICAgZnVuY3Rpb24gKCkgcGF5YWJsZSBwdWJsaWMgewogICAgICAgIGJ1eVRpY2tldHMoKTsKICAgIH0KCiAgICBmdW5jdGlvbiBidXlUaWNrZXRzKCkgcGF5YWJsZSBwdWJsaWMgewogICAgICAgIGlmIChwYXVzZWQpIHsKICAgICAgICAgICAgbXNnLnNlbmRlci50cmFuc2Zlcihtc2cudmFsdWUpOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICB1aW50IG1vbmV5U2VudCA9IG1zZy52YWx1ZTsKCiAgICAgICAgd2hpbGUgKG1vbmV5U2VudCA+PSBwcmljZVBlclRpY2tldCAmJiBuZXh0VGlja2V0IDwgdG90YWxUaWNrZXRzKSB7CiAgICAgICAgICAgIHVpbnQgY3VyclRpY2tldCA9IDA7CiAgICAgICAgICAgIGlmIChnYXBzLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICAgIGN1cnJUaWNrZXQgPSBnYXBzW2dhcHMubGVuZ3RoLTFdOwogICAgICAgICAgICAgICAgZ2Fwcy5sZW5ndGgtLTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGN1cnJUaWNrZXQgPSBuZXh0VGlja2V0Kys7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGNvbnRlc3RhbnRzW2N1cnJUaWNrZXRdID0gQ29udGVzdGFudChtc2cuc2VuZGVyLCByYWZmbGVJZCk7CiAgICAgICAgICAgIFRpY2tldFB1cmNoYXNlKHJhZmZsZUlkLCBtc2cuc2VuZGVyLCBjdXJyVGlja2V0KTsKICAgICAgICAgICAgbW9uZXlTZW50IC09IHByaWNlUGVyVGlja2V0OwogICAgICAgIH0KCiAgICAgICAgLy8gQ2hvb3NlIHdpbm5lciBpZiB3ZSBzb2xkIGFsbCB0aGUgdGlja2V0cwogICAgICAgIGlmIChuZXh0VGlja2V0ID09IHRvdGFsVGlja2V0cykgewogICAgICAgICAgICBjaG9vc2VXaW5uZXIoKTsKICAgICAgICB9CgogICAgICAgIC8vIFNlbmQgYmFjayBsZWZ0b3ZlciBtb25leQogICAgICAgIGlmIChtb25leVNlbnQgPiAwKSB7CiAgICAgICAgICAgIG1zZy5zZW5kZXIudHJhbnNmZXIobW9uZXlTZW50KTsKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gY2hvb3NlV2lubmVyKCkgcHJpdmF0ZSB7CiAgICAgICAgYWRkcmVzcyBzZWVkMSA9IGNvbnRlc3RhbnRzW3VpbnQoYmxvY2suY29pbmJhc2UpICUgdG90YWxUaWNrZXRzXS5hZGRyOwogICAgICAgIGFkZHJlc3Mgc2VlZDIgPSBjb250ZXN0YW50c1t1aW50KG1zZy5zZW5kZXIpICUgdG90YWxUaWNrZXRzXS5hZGRyOwogICAgICAgIHVpbnQgc2VlZDMgPSBibG9jay5kaWZmaWN1bHR5OwogICAgICAgIGJ5dGVzMzIgcmFuZEhhc2ggPSBrZWNjYWsyNTYoc2VlZDEsIHNlZWQyLCBzZWVkMyk7CgogICAgICAgIHVpbnQgd2lubmluZ051bWJlciA9IHVpbnQocmFuZEhhc2gpICUgdG90YWxUaWNrZXRzOwogICAgICAgIGFkZHJlc3Mgd2lubmluZ0FkZHJlc3MgPSBjb250ZXN0YW50c1t3aW5uaW5nTnVtYmVyXS5hZGRyOwogICAgICAgIFJhZmZsZVJlc3VsdChyYWZmbGVJZCwgd2lubmluZ051bWJlciwgd2lubmluZ0FkZHJlc3MsIHNlZWQxLCBzZWVkMiwgc2VlZDMsIHJhbmRIYXNoKTsKCiAgICAgICAgLy8gU3RhcnQgbmV4dCByYWZmbGUKICAgICAgICByYWZmbGVJZCsrOwogICAgICAgIG5leHRUaWNrZXQgPSAwOwoKICAgICAgICAvLyBnYXBzLmxlbmd0aCA9IDAgaXNuJ3QgbmVjZXNzYXJ5IGhlcmUsCiAgICAgICAgLy8gYmVjYXVzZSBidXlUaWNrZXRzKCkgZXZlbnR1YWxseSBjbGVhcnMKICAgICAgICAvLyB0aGUgZ2FwcyBhcnJheSBpbiB0aGUgbG9vcCBpdHNlbGYuCgogICAgICAgIC8vIERpc3RyaWJ1dGUgcHJpemUgYW5kIGZlZQogICAgICAgIHdpbm5pbmdBZGRyZXNzLnRyYW5zZmVyKHByaXplKTsKICAgICAgICBmZWVBZGRyZXNzLnRyYW5zZmVyKGZlZSk7CiAgICB9CgogICAgLy8gR2V0IHlvdXIgbW9uZXkgYmFjayBiZWZvcmUgdGhlIHJhZmZsZSBvY2N1cnMKICAgIGZ1bmN0aW9uIGdldFJlZnVuZCgpIHB1YmxpYyB7CiAgICAgICAgdWludCByZWZ1bmQgPSAwOwogICAgICAgIGZvciAodWludCBpID0gMDsgaSA8IHRvdGFsVGlja2V0czsgaSsrKSB7CiAgICAgICAgICAgIGlmIChtc2cuc2VuZGVyID09IGNvbnRlc3RhbnRzW2ldLmFkZHIgJiYgcmFmZmxlSWQgPT0gY29udGVzdGFudHNbaV0ucmFmZmxlSWQpIHsKICAgICAgICAgICAgICAgIHJlZnVuZCArPSBwcmljZVBlclRpY2tldDsKICAgICAgICAgICAgICAgIGNvbnRlc3RhbnRzW2ldID0gQ29udGVzdGFudChhZGRyZXNzKDApLCAwKTsKICAgICAgICAgICAgICAgIGdhcHMucHVzaChpKTsKICAgICAgICAgICAgICAgIFRpY2tldFJlZnVuZChyYWZmbGVJZCwgbXNnLnNlbmRlciwgaSk7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmIChyZWZ1bmQgPiAwKSB7CiAgICAgICAgICAgIG1zZy5zZW5kZXIudHJhbnNmZXIocmVmdW5kKTsKICAgICAgICB9CiAgICB9CgogICAgLy8gUmVmdW5kIGV2ZXJ5b25lJ3MgbW9uZXksIHN0YXJ0IGEgbmV3IHJhZmZsZSwgdGhlbiBwYXVzZSBpdAogICAgZnVuY3Rpb24gZW5kUmFmZmxlKCkgcHVibGljIHsKICAgICAgICBpZiAobXNnLnNlbmRlciA9PSBmZWVBZGRyZXNzKSB7CiAgICAgICAgICAgIHBhdXNlZCA9IHRydWU7CgogICAgICAgICAgICBmb3IgKHVpbnQgaSA9IDA7IGkgPCB0b3RhbFRpY2tldHM7IGkrKykgewogICAgICAgICAgICAgICAgaWYgKHJhZmZsZUlkID09IGNvbnRlc3RhbnRzW2ldLnJhZmZsZUlkKSB7CiAgICAgICAgICAgICAgICAgICAgVGlja2V0UmVmdW5kKHJhZmZsZUlkLCBjb250ZXN0YW50c1tpXS5hZGRyLCBpKTsKICAgICAgICAgICAgICAgICAgICBjb250ZXN0YW50c1tpXS5hZGRyLnRyYW5zZmVyKHByaWNlUGVyVGlja2V0KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgUmFmZmxlUmVzdWx0KHJhZmZsZUlkLCB0b3RhbFRpY2tldHMsIGFkZHJlc3MoMCksIGFkZHJlc3MoMCksIGFkZHJlc3MoMCksIDAsIDApOwogICAgICAgICAgICByYWZmbGVJZCsrOwogICAgICAgICAgICBuZXh0VGlja2V0ID0gMDsKICAgICAgICAgICAgZ2Fwcy5sZW5ndGggPSAwOwogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiB0b2dnbGVQYXVzZSgpIHB1YmxpYyB7CiAgICAgICAgaWYgKG1zZy5zZW5kZXIgPT0gZmVlQWRkcmVzcykgewogICAgICAgICAgICBwYXVzZWQgPSAhcGF1c2VkOwogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBraWxsKCkgcHVibGljIHsKICAgICAgICBpZiAobXNnLnNlbmRlciA9PSBmZWVBZGRyZXNzKSB7CiAgICAgICAgICAgIHNlbGZkZXN0cnVjdChmZWVBZGRyZXNzKTsKICAgICAgICB9CiAgICB9Cn0='.
	

]
