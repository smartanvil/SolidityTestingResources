Class {
	#name : #SRTc4837c8d8ba13644d877112ab148dc8b526a7ad2,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTc4837c8d8ba13644d877112ab148dc8b526a7ad2 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7CgovKioKICogQHRpdGxlIFNhZmVNYXRoCiAqIEBkZXYgTWF0aCBvcGVyYXRpb25zIHdpdGggc2FmZXR5IGNoZWNrcyB0aGF0IHRocm93IG9uIGVycm9yCiAqLwpsaWJyYXJ5IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAKICAgIHVpbnQyNTYgYyA9IGEgLyBiOwogICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KfQoKY29udHJhY3QgRVJDMjBDb25zdGFudCB7CiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoIGFkZHJlc3Mgd2hvICkgY29uc3RhbnQgcmV0dXJucyAodWludCB2YWx1ZSk7Cn0KY29udHJhY3QgRVJDMjBTdGF0ZWZ1bCB7CiAgICBmdW5jdGlvbiB0cmFuc2ZlciggYWRkcmVzcyB0bywgdWludCB2YWx1ZSkgcmV0dXJucyAoYm9vbCBvayk7Cn0KY29udHJhY3QgRVJDMjBFdmVudHMgewogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludCB2YWx1ZSk7Cn0KY29udHJhY3QgRVJDMjAgaXMgRVJDMjBDb25zdGFudCwgRVJDMjBTdGF0ZWZ1bCwgRVJDMjBFdmVudHMge30KCmNvbnRyYWN0IE93bmVkIHsKICAgIGFkZHJlc3MgcHVibGljIG93bmVyOwoKICAgIGZ1bmN0aW9uIE93bmVkKCkgewogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgIH0KCiAgICBtb2RpZmllciBvbmx5T3duZXIgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICAgICAgXzsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld093bmVyKSBvbmx5T3duZXIgewogICAgICAgIG93bmVyID0gbmV3T3duZXI7CiAgICB9Cn0KCmNvbnRyYWN0IFdoaXRlbGlzdFNhbGUgaXMgT3duZWQgewoKICAgIEVSQzIwIHB1YmxpYyBtYW5hVG9rZW47CgogICAgLy8gQW1vdW50IG9mIE1BTkEgcmVjZWl2ZWQgcGVyIEVUSAogICAgdWludDI1NiBwdWJsaWMgbWFuYVBlckV0aDsKCiAgICAvLyBTYWxlcyBzdGFydCBhdCB0aGlzIHRpbWVzdGFtcAogICAgdWludDI1NiBwdWJsaWMgaW5pdGlhbFRpbWVzdGFtcDsKCiAgICAvLyBUaGUgc2FsZSBnb2VzIG9uIHRocm91Z2ggNiBkYXlzLiBFYWNoIGRheSwgdXNlcnMgYXJlIGFsbG93ZWQgdG8gYnV5IHVwIHRvIGEgY2VydGFpbiBhbW91bnQgb2YgTUFOQS4KCiAgICAvLyBUaGlzIG1hcHBpbmcgc3RvcmVzIHRoZSBhZGRyZXNzZXMgZm9yIHdoaXRlbGlzdGVkIHVzZXJzCiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gYm9vbCkgcHVibGljIHdoaXRlbGlzdGVkOwoKICAgIC8vIFVzZWQgdG8gY2FsY3VsYXRlIHRoZSBjdXJyZW50IGxpbWl0CiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIGJvdWdodDsKCiAgICAvLyBUaGUgaW5pdGlhbCB2YWx1ZXMgYWxsb3dlZCBwZXIgZGF5IGFyZSBjb3BpZWQgZnJvbSB0aGlzIGFycmF5CiAgICB1aW50MjU2WzZdIHB1YmxpYyBsaW1pdFBlckRheTsKCiAgICAvLyBGb3J3YXJkaW5nIGFkZHJlc3MKICAgIGFkZHJlc3MgcHVibGljIHJlY2VpdmVyOwoKICAgIC8vIFRoZSBzYWxlIGRvZXMgbm90IGNvbnRpbnVlIGlmIHRoaXMgZmxhZyBpcyBzZXQgdG8gdHJ1ZSAtLSBpbiBjYXNlIG9mIGVtZXJnZW5jeSAKICAgIGJvb2wgcHVibGljIGhhbmRicmVhazsKCiAgICBldmVudCBMb2dXaXRoZHJhd2FsKHVpbnQyNTYgX3ZhbHVlKTsKICAgIGV2ZW50IExvZ0JvdWdodCh1aW50IG9yZGVySW5NYW5hKTsKICAgIGV2ZW50IExvZ1VzZXJBZGRlZChhZGRyZXNzIHVzZXIpOwogICAgZXZlbnQgTG9nVXNlclJlbW92ZWQoYWRkcmVzcyB1c2VyKTsKICAgIGV2ZW50IExvZ1VwZGF0ZWRMaW1pdFBlckRheSh1aW50OCBfZGF5LCB1aW50MjU2IGFtb3VudCk7CiAgICBldmVudCBMb2dVcGRhdGVkSW5pdGlhbFRpbWVzdGFtcCh1aW50MjU2IF9pbml0aWFsVGltZXN0YW1wKTsKCiAgICBmdW5jdGlvbiBXaGl0ZWxpc3RTYWxlICgKICAgICAgICBFUkMyMCBfbWFuYVRva2VuLAogICAgICAgIHVpbnQyNTYgX2luaXRpYWxUaW1lc3RhbXAsCiAgICAgICAgYWRkcmVzcyBfcmVjZWl2ZXIKICAgICkKICAgICAgICBPd25lZCgpCiAgICB7CiAgICAgICAgbWFuYVRva2VuICAgICAgICA9IF9tYW5hVG9rZW47CiAgICAgICAgaW5pdGlhbFRpbWVzdGFtcCA9IF9pbml0aWFsVGltZXN0YW1wOwogICAgICAgIHJlY2VpdmVyICAgICAgICAgPSBfcmVjZWl2ZXI7CgogICAgICAgIG1hbmFQZXJFdGggICAgICAgPSAxMTk1NDsKICAgICAgICBsaW1pdFBlckRheVswXSAgID0gMy4zIGV0aGVyOwogICAgICAgIGxpbWl0UGVyRGF5WzFdICAgPSAxMCBldGhlciAgICsgbGltaXRQZXJEYXlbMF07CiAgICAgICAgbGltaXRQZXJEYXlbMl0gICA9IDMwIGV0aGVyICAgKyBsaW1pdFBlckRheVsxXTsKICAgICAgICBsaW1pdFBlckRheVszXSAgID0gOTAgZXRoZXIgICArIGxpbWl0UGVyRGF5WzJdOwogICAgICAgIGxpbWl0UGVyRGF5WzRdICAgPSA0NTAgZXRoZXIgICsgbGltaXRQZXJEYXlbM107CiAgICAgICAgbGltaXRQZXJEYXlbNV0gICA9IDE1MDAgZXRoZXIgKyBsaW1pdFBlckRheVs0XTsKCiAgICAgICAgaGFuZGJyZWFrICAgICAgICA9IGZhbHNlOwogICAgfQoKICAgIC8vIFBhdXNlIHRoZSBzYWxlCiAgICBmdW5jdGlvbiBhY3RpdmF0ZUhhbmRicmVhaygpIG9ubHlPd25lciB7CiAgICAgICAgaGFuZGJyZWFrID0gdHJ1ZTsKICAgIH0KCiAgICAvLyBXaXRoZHJhdyBNYW5hIChvbmx5IG93bmVyKQogICAgZnVuY3Rpb24gd2l0aGRyYXdNYW5hKHVpbnQyNTYgX3ZhbHVlKSBvbmx5T3duZXIgcmV0dXJucyAoYm9vbCBvaykgewogICAgICAgIHJldHVybiB3aXRoZHJhd1Rva2VuKG1hbmFUb2tlbiwgX3ZhbHVlKTsKICAgIH0KCiAgICAvLyBXaXRoZHJhdyBhbnkgRVJDMjAgdG9rZW4gKGp1c3QgaW4gY2FzZSkKICAgIGZ1bmN0aW9uIHdpdGhkcmF3VG9rZW4oYWRkcmVzcyBfdG9rZW4sIHVpbnQyNTYgX3ZhbHVlKSBvbmx5T3duZXIgcmV0dXJucyAoYm9vbCBvaykgewogICAgICAgIHJldHVybiBFUkMyMChfdG9rZW4pLnRyYW5zZmVyKG93bmVyLF92YWx1ZSk7CiAgICAgICAgTG9nV2l0aGRyYXdhbChfdmFsdWUpOwogICAgfQoKICAgIC8vIFdpdGhkcmF3IHByb2NlZWRzCiAgICBmdW5jdGlvbiB3aXRoZHJhdyh1aW50MjU2IF92YWx1ZSkgb25seU93bmVyIHsKICAgICAgICByZXF1aXJlKHRoaXMuYmFsYW5jZSA+PSBfdmFsdWUpOwogICAgICAgIG93bmVyLnRyYW5zZmVyKF92YWx1ZSk7CiAgICAgICAgTG9nV2l0aGRyYXdhbChfdmFsdWUpOwogICAgfQoKICAgIC8vIENoYW5nZSBhZGRyZXNzIHdoZXJlIGZ1bmRzIGFyZSByZWNlaXZlZAogICAgZnVuY3Rpb24gY2hhbmdlUmVjZWl2ZXIoYWRkcmVzcyBfcmVjZWl2ZXIpIG9ubHlPd25lciB7CiAgICAgICAgcmVxdWlyZShfcmVjZWl2ZXIgIT0gMCk7CiAgICAgICAgcmVjZWl2ZXIgPSBfcmVjZWl2ZXI7CiAgICB9CgogICAgLy8gQ2FsY3VsYXRlIHdoaWNoIGRheSBpbnRvIHRoZSBzYWxlIGFyZSB3ZS4KICAgIGZ1bmN0aW9uIGdldERheSgpIHB1YmxpYyByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgcmV0dXJuIFNhZmVNYXRoLnN1YihibG9jay50aW1lc3RhbXAsIGluaXRpYWxUaW1lc3RhbXApIC8gMSBkYXlzOwogICAgfQoKICAgIG1vZGlmaWVyIG9ubHlJZkFjdGl2ZSB7CiAgICAgICAgcmVxdWlyZSghaGFuZGJyZWFrKTsKICAgICAgICByZXF1aXJlKGdldERheSgpID49IDApOwogICAgICAgIHJlcXVpcmUoZ2V0RGF5KCkgPCA2KTsKICAgICAgICBfOwogICAgfQoKICAgIGZ1bmN0aW9uIGJ1eShhZGRyZXNzIGJlbmVmaWNpYXJ5KSBwYXlhYmxlIG9ubHlJZkFjdGl2ZSB7CiAgICAgICAgcmVxdWlyZShiZW5lZmljaWFyeSAhPSAwKTsKICAgICAgICByZXF1aXJlKHdoaXRlbGlzdGVkW21zZy5zZW5kZXJdKTsKCiAgICAgICAgdWludCBkYXkgPSBnZXREYXkoKTsKICAgICAgICB1aW50MjU2IGFsbG93ZWRGb3JTZW5kZXIgPSBsaW1pdFBlckRheVtkYXldIC0gYm91Z2h0W21zZy5zZW5kZXJdOwoKICAgICAgICBpZiAobXNnLnZhbHVlID4gYWxsb3dlZEZvclNlbmRlcikgcmV2ZXJ0KCk7CgogICAgICAgIHVpbnQyNTYgYmFsYW5jZUluTWFuYSA9IG1hbmFUb2tlbi5iYWxhbmNlT2YoYWRkcmVzcyh0aGlzKSk7CgogICAgICAgIHVpbnQgb3JkZXJJbk1hbmEgPSBtc2cudmFsdWUgKiBtYW5hUGVyRXRoOwogICAgICAgIGlmIChvcmRlckluTWFuYSA+IGJhbGFuY2VJbk1hbmEpIHJldmVydCgpOwoKICAgICAgICBib3VnaHRbbXNnLnNlbmRlcl0gPSBTYWZlTWF0aC5hZGQoYm91Z2h0W21zZy5zZW5kZXJdLCBtc2cudmFsdWUpOwogICAgICAgIHJlY2VpdmVyLnRyYW5zZmVyKG1zZy52YWx1ZSk7CiAgICAgICAgbWFuYVRva2VuLnRyYW5zZmVyKGJlbmVmaWNpYXJ5LCBvcmRlckluTWFuYSk7CgogICAgICAgIExvZ0JvdWdodChvcmRlckluTWFuYSk7CiAgICB9CgogICAgLy8gQWRkIGEgdXNlciB0byB0aGUgd2hpdGVsaXN0CiAgICBmdW5jdGlvbiBhZGRVc2VyKGFkZHJlc3MgdXNlcikgb25seU93bmVyIHsKICAgICAgICB3aGl0ZWxpc3RlZFt1c2VyXSA9IHRydWU7CiAgICAgICAgTG9nVXNlckFkZGVkKHVzZXIpOwogICAgfQoKICAgIC8vIFJlbW92ZSBhbiB1c2VyIGZyb20gdGhlIHdoaXRlbGlzdAogICAgZnVuY3Rpb24gcmVtb3ZlVXNlcihhZGRyZXNzIHVzZXIpIG9ubHlPd25lciB7CiAgICAgICAgd2hpdGVsaXN0ZWRbdXNlcl0gPSBmYWxzZTsKICAgICAgICBMb2dVc2VyUmVtb3ZlZCh1c2VyKTsKICAgIH0KCiAgICAvLyBCYXRjaCBhZGQgdXNlcnMKICAgIGZ1bmN0aW9uIGFkZE1hbnlVc2VycyhhZGRyZXNzW10gdXNlcnMpIG9ubHlPd25lciB7CiAgICAgICAgcmVxdWlyZSh1c2Vycy5sZW5ndGggPCAxMDAwMCk7CiAgICAgICAgZm9yICh1aW50IGluZGV4ID0gMDsgaW5kZXggPCB1c2Vycy5sZW5ndGg7IGluZGV4KyspIHsKICAgICAgICAgICAgIHdoaXRlbGlzdGVkW3VzZXJzW2luZGV4XV0gPSB0cnVlOwogICAgICAgICAgICAgTG9nVXNlckFkZGVkKHVzZXJzW2luZGV4XSk7CiAgICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uKCkgcGF5YWJsZSB7CiAgICAgICAgYnV5KG1zZy5zZW5kZXIpOwogICAgfQp9'.
	

]
