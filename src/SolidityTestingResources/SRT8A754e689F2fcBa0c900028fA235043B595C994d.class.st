Class {
	#name : #SRT8A754e689F2fcBa0c900028fA235043B595C994d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT8A754e689F2fcBa0c900028fA235043B595C994d >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTY7Cgpjb250cmFjdCBFdGhyYWZmbGVfdjNiIHsKICAgIHN0cnVjdCBDb250ZXN0YW50IHsKICAgICAgICBhZGRyZXNzIGFkZHI7CiAgICAgICAgdWludCByYWZmbGVJZDsKICAgIH0KCiAgICBldmVudCBSYWZmbGVSZXN1bHQoCiAgICAgICAgdWludCByYWZmbGVJZCwKICAgICAgICB1aW50IGJsb2NrTnVtYmVyLAogICAgICAgIHVpbnQgd2lubmluZ051bWJlciwKICAgICAgICBhZGRyZXNzIHdpbm5pbmdBZGRyZXNzLAogICAgICAgIGFkZHJlc3Mgc2VlZDEsCiAgICAgICAgYWRkcmVzcyBzZWVkMiwKICAgICAgICB1aW50IHNlZWQzLAogICAgICAgIGJ5dGVzMzIgcmFuZEhhc2gKICAgICk7CgogICAgZXZlbnQgVGlja2V0UHVyY2hhc2UoCiAgICAgICAgdWludCByYWZmbGVJZCwKICAgICAgICBhZGRyZXNzIGNvbnRlc3RhbnQsCiAgICAgICAgdWludCBudW1iZXIKICAgICk7CgogICAgZXZlbnQgVGlja2V0UmVmdW5kKAogICAgICAgIHVpbnQgcmFmZmxlSWQsCiAgICAgICAgYWRkcmVzcyBjb250ZXN0YW50LAogICAgICAgIHVpbnQgbnVtYmVyCiAgICApOwoKICAgIC8vIENvbnN0YW50cwogICAgdWludCBwdWJsaWMgY29uc3RhbnQgcHJpemUgPSAyLjUgZXRoZXI7CiAgICB1aW50IHB1YmxpYyBjb25zdGFudCBmZWUgPSAwLjAzIGV0aGVyOwogICAgdWludCBwdWJsaWMgY29uc3RhbnQgdG90YWxUaWNrZXRzID0gNTA7CiAgICB1aW50IHB1YmxpYyBjb25zdGFudCBwcmljZVBlclRpY2tldCA9IChwcml6ZSArIGZlZSkgLyB0b3RhbFRpY2tldHM7IC8vIE1ha2Ugc3VyZSB0aGlzIGRpdmlkZXMgZXZlbmx5CiAgICBhZGRyZXNzIGZlZUFkZHJlc3M7CgogICAgLy8gT3RoZXIgaW50ZXJuYWwgdmFyaWFibGVzCiAgICBib29sIHB1YmxpYyBwYXVzZWQgPSBmYWxzZTsKICAgIHVpbnQgcHVibGljIHJhZmZsZUlkID0gMTsKICAgIHVpbnQgbmV4dFRpY2tldCA9IDA7CiAgICBtYXBwaW5nICh1aW50ID0+IENvbnRlc3RhbnQpIGNvbnRlc3RhbnRzOwogICAgdWludFtdIGdhcHM7CgogICAgLy8gSW5pdGlhbGl6YXRpb24KICAgIGZ1bmN0aW9uIEV0aHJhZmZsZV92M2IoKSBwdWJsaWMgewogICAgICAgIGZlZUFkZHJlc3MgPSBtc2cuc2VuZGVyOwogICAgfQoKICAgIC8vIENhbGwgYnV5VGlja2V0cygpIHdoZW4gcmVjZWl2aW5nIEV0aGVyIG91dHNpZGUgYSBmdW5jdGlvbgogICAgZnVuY3Rpb24gKCkgcGF5YWJsZSBwdWJsaWMgewogICAgICAgIGJ1eVRpY2tldHMoKTsKICAgIH0KCiAgICBmdW5jdGlvbiBidXlUaWNrZXRzKCkgcGF5YWJsZSBwdWJsaWMgewogICAgICAgIGlmIChwYXVzZWQpIHsKICAgICAgICAgICAgbXNnLnNlbmRlci50cmFuc2Zlcihtc2cudmFsdWUpOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICB1aW50IG1vbmV5U2VudCA9IG1zZy52YWx1ZTsKCiAgICAgICAgd2hpbGUgKG1vbmV5U2VudCA+PSBwcmljZVBlclRpY2tldCAmJiBuZXh0VGlja2V0IDwgdG90YWxUaWNrZXRzKSB7CiAgICAgICAgICAgIHVpbnQgY3VyclRpY2tldCA9IDA7CiAgICAgICAgICAgIGlmIChnYXBzLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICAgIGN1cnJUaWNrZXQgPSBnYXBzW2dhcHMubGVuZ3RoLTFdOwogICAgICAgICAgICAgICAgZ2Fwcy5sZW5ndGgtLTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGN1cnJUaWNrZXQgPSBuZXh0VGlja2V0Kys7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGNvbnRlc3RhbnRzW2N1cnJUaWNrZXRdID0gQ29udGVzdGFudChtc2cuc2VuZGVyLCByYWZmbGVJZCk7CiAgICAgICAgICAgIFRpY2tldFB1cmNoYXNlKHJhZmZsZUlkLCBtc2cuc2VuZGVyLCBjdXJyVGlja2V0KTsKICAgICAgICAgICAgbW9uZXlTZW50IC09IHByaWNlUGVyVGlja2V0OwogICAgICAgIH0KCiAgICAgICAgLy8gQ2hvb3NlIHdpbm5lciBpZiB3ZSBzb2xkIGFsbCB0aGUgdGlja2V0cwogICAgICAgIGlmIChuZXh0VGlja2V0ID09IHRvdGFsVGlja2V0cykgewogICAgICAgICAgICBjaG9vc2VXaW5uZXIoKTsKICAgICAgICB9CgogICAgICAgIC8vIFNlbmQgYmFjayBsZWZ0b3ZlciBtb25leQogICAgICAgIGlmIChtb25leVNlbnQgPiAwKSB7CiAgICAgICAgICAgIG1zZy5zZW5kZXIudHJhbnNmZXIobW9uZXlTZW50KTsKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gY2hvb3NlV2lubmVyKCkgcHJpdmF0ZSB7CiAgICAgICAgYWRkcmVzcyBzZWVkMSA9IGNvbnRlc3RhbnRzW3VpbnQoYmxvY2suY29pbmJhc2UpICUgdG90YWxUaWNrZXRzXS5hZGRyOwogICAgICAgIGFkZHJlc3Mgc2VlZDIgPSBjb250ZXN0YW50c1t1aW50KG1zZy5zZW5kZXIpICUgdG90YWxUaWNrZXRzXS5hZGRyOwogICAgICAgIHVpbnQgc2VlZDMgPSBibG9jay5kaWZmaWN1bHR5OwogICAgICAgIGJ5dGVzMzIgcmFuZEhhc2ggPSBrZWNjYWsyNTYoc2VlZDEsIHNlZWQyLCBzZWVkMyk7CgogICAgICAgIHVpbnQgd2lubmluZ051bWJlciA9IHVpbnQocmFuZEhhc2gpICUgdG90YWxUaWNrZXRzOwogICAgICAgIGFkZHJlc3Mgd2lubmluZ0FkZHJlc3MgPSBjb250ZXN0YW50c1t3aW5uaW5nTnVtYmVyXS5hZGRyOwogICAgICAgIFJhZmZsZVJlc3VsdChyYWZmbGVJZCwgYmxvY2subnVtYmVyLCB3aW5uaW5nTnVtYmVyLCB3aW5uaW5nQWRkcmVzcywgc2VlZDEsIHNlZWQyLCBzZWVkMywgcmFuZEhhc2gpOwoKICAgICAgICAvLyBTdGFydCBuZXh0IHJhZmZsZQogICAgICAgIHJhZmZsZUlkKys7CiAgICAgICAgbmV4dFRpY2tldCA9IDA7CgogICAgICAgIC8vIGdhcHMubGVuZ3RoID0gMCBpc24ndCBuZWNlc3NhcnkgaGVyZSwKICAgICAgICAvLyBiZWNhdXNlIGJ1eVRpY2tldHMoKSBldmVudHVhbGx5IGNsZWFycwogICAgICAgIC8vIHRoZSBnYXBzIGFycmF5IGluIHRoZSBsb29wIGl0c2VsZi4KCiAgICAgICAgLy8gRGlzdHJpYnV0ZSBwcml6ZSBhbmQgZmVlCiAgICAgICAgd2lubmluZ0FkZHJlc3MudHJhbnNmZXIocHJpemUpOwogICAgICAgIGZlZUFkZHJlc3MudHJhbnNmZXIoZmVlKTsKICAgIH0KCiAgICAvLyBHZXQgeW91ciBtb25leSBiYWNrIGJlZm9yZSB0aGUgcmFmZmxlIG9jY3VycwogICAgZnVuY3Rpb24gZ2V0UmVmdW5kKCkgcHVibGljIHsKICAgICAgICB1aW50IHJlZnVuZCA9IDA7CiAgICAgICAgZm9yICh1aW50IGkgPSAwOyBpIDwgdG90YWxUaWNrZXRzOyBpKyspIHsKICAgICAgICAgICAgaWYgKG1zZy5zZW5kZXIgPT0gY29udGVzdGFudHNbaV0uYWRkciAmJiByYWZmbGVJZCA9PSBjb250ZXN0YW50c1tpXS5yYWZmbGVJZCkgewogICAgICAgICAgICAgICAgcmVmdW5kICs9IHByaWNlUGVyVGlja2V0OwogICAgICAgICAgICAgICAgY29udGVzdGFudHNbaV0gPSBDb250ZXN0YW50KGFkZHJlc3MoMCksIDApOwogICAgICAgICAgICAgICAgZ2Fwcy5wdXNoKGkpOwogICAgICAgICAgICAgICAgVGlja2V0UmVmdW5kKHJhZmZsZUlkLCBtc2cuc2VuZGVyLCBpKTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKHJlZnVuZCA+IDApIHsKICAgICAgICAgICAgbXNnLnNlbmRlci50cmFuc2ZlcihyZWZ1bmQpOwogICAgICAgIH0KICAgIH0KCiAgICAvLyBSZWZ1bmQgZXZlcnlvbmUncyBtb25leSwgc3RhcnQgYSBuZXcgcmFmZmxlLCB0aGVuIHBhdXNlIGl0CiAgICBmdW5jdGlvbiBlbmRSYWZmbGUoKSBwdWJsaWMgewogICAgICAgIGlmIChtc2cuc2VuZGVyID09IGZlZUFkZHJlc3MpIHsKICAgICAgICAgICAgcGF1c2VkID0gdHJ1ZTsKCiAgICAgICAgICAgIGZvciAodWludCBpID0gMDsgaSA8IHRvdGFsVGlja2V0czsgaSsrKSB7CiAgICAgICAgICAgICAgICBpZiAocmFmZmxlSWQgPT0gY29udGVzdGFudHNbaV0ucmFmZmxlSWQpIHsKICAgICAgICAgICAgICAgICAgICBUaWNrZXRSZWZ1bmQocmFmZmxlSWQsIGNvbnRlc3RhbnRzW2ldLmFkZHIsIGkpOwogICAgICAgICAgICAgICAgICAgIGNvbnRlc3RhbnRzW2ldLmFkZHIudHJhbnNmZXIocHJpY2VQZXJUaWNrZXQpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICBSYWZmbGVSZXN1bHQocmFmZmxlSWQsIGJsb2NrLm51bWJlciwgdG90YWxUaWNrZXRzLCBhZGRyZXNzKDApLCBhZGRyZXNzKDApLCBhZGRyZXNzKDApLCAwLCAwKTsKICAgICAgICAgICAgcmFmZmxlSWQrKzsKICAgICAgICAgICAgbmV4dFRpY2tldCA9IDA7CiAgICAgICAgICAgIGdhcHMubGVuZ3RoID0gMDsKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gdG9nZ2xlUGF1c2UoKSBwdWJsaWMgewogICAgICAgIGlmIChtc2cuc2VuZGVyID09IGZlZUFkZHJlc3MpIHsKICAgICAgICAgICAgcGF1c2VkID0gIXBhdXNlZDsKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24ga2lsbCgpIHB1YmxpYyB7CiAgICAgICAgaWYgKG1zZy5zZW5kZXIgPT0gZmVlQWRkcmVzcykgewogICAgICAgICAgICBzZWxmZGVzdHJ1Y3QoZmVlQWRkcmVzcyk7CiAgICAgICAgfQogICAgfQp9'.
	

]
