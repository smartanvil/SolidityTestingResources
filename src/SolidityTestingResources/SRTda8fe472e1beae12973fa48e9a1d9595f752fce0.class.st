Class {
	#name : #SRTda8fe472e1beae12973fa48e9a1d9595f752fce0,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTda8fe472e1beae12973fa48e9a1d9595f752fce0 >> base64 [
	^ ''.
	

]
