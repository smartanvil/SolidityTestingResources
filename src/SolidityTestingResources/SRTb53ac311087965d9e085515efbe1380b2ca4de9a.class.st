Class {
	#name : #SRTb53ac311087965d9e085515efbe1380b2ca4de9a,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTb53ac311087965d9e085515efbe1380b2ca4de9a >> base64 [
	^ ''.
	

]
