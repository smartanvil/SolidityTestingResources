Class {
	#name : #SRT1e1fe9186c223ee1679634e3cfb7c03276b19493,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT1e1fe9186c223ee1679634e3cfb7c03276b19493 >> base64 [
	^ ''.
	

]
