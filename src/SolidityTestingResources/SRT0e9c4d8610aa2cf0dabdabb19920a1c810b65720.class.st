Class {
	#name : #SRT0e9c4d8610aa2cf0dabdabb19920a1c810b65720,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT0e9c4d8610aa2cf0dabdabb19920a1c810b65720 >> base64 [
	^ ''.
	

]
