Class {
	#name : #SRT608d00b5e4ad0b4108f74163606ea22c457833fe,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT608d00b5e4ad0b4108f74163606ea22c457833fe >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7Cgpjb250cmFjdCBSaXNrCnsKICAgIGFkZHJlc3Mgb3duZXI7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQ4IFtdKSBwbGF5ZXJDb3VudHJpZXM7CiAgICBhZGRyZXNzWzE3OF0gb3duZXJvZkNvdW50cnk7IC8vIHNpemUgbXVzdCBiZSBmaXhlZAogICAgYWRkcmVzc1tdIHBsYXllckxpc3Q7CiAgICB1aW50MjU2IHRvdGFsbW9uZXk9MDsKICAgIHVpbnQyNTYgbGFzdFI9MzsKICAgIGFkZHJlc3MgbGFzdGdhbWVlbmRXaW5uZXI9YWRkcmVzcygwKTsgICAKICAgIHVpbnQ4IHdpbm5lckxpbWl0PTUwOwogICAgCiAgICBhZGRyZXNzWzE1XSB3aW5uZXJsb3NlcjsgLy8gZmlyc3QgNSByZXByZXNlbnRzIGF0dGFja2VyIGxhc3QgNSBkZWZlbmRlcgogICAgLy91aW50WzVdIHdpbm5lcmxvc2Vyc2NvcmU7IC8vICBhdHRha2VyIHdpbnMgMiBhdHRhY2tlciBsb3NlcwogICAgCiAgICBldmVudCBhdHRhY2toYXBwZW5lZCAoYWRkcmVzcyBhdHRhY2tlciwgYWRkcmVzcyBkZWZlbmRlcik7CiAgICBldmVudCBidXloYXBwZW5lZCAoYWRkcmVzcyBidXllciwgdWludCBjb3VudHJ5SUQpOwoKICAgIGZ1bmN0aW9uIFJpc2soKSAKICAgIHsKICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGJ1eUNvdW50cnkodWludDggY291bnRyeUlEKSBwYXlhYmxlIHJldHVybnMoYm9vbCkKICAgIHsKICAgICAgICBhc3NlcnQob3duZXJvZkNvdW50cnlbY291bnRyeUlEXT09MCk7IC8vY291bnRyeSB1bm93bmVkCiAgICAgICAgYXNzZXJ0KG1zZy52YWx1ZSA9PSAxMCBmaW5uZXkpOyAvLzAuMDEgZXRoZXIKICAgICAgICAKICAgICAgICB0b3RhbG1vbmV5ICs9bXNnLnZhbHVlOwogICAgICAgIHBsYXllckNvdW50cmllc1ttc2cuc2VuZGVyXS5wdXNoKGNvdW50cnlJRCk7CiAgICAgICAgb3duZXJvZkNvdW50cnlbY291bnRyeUlEXT1tc2cuc2VuZGVyOwogICAgICAgIHBsYXllckxpc3QucHVzaChtc2cuc2VuZGVyKTsKICAgICAgICAKICAgICAgICBidXloYXBwZW5lZChtc2cuc2VuZGVyLGNvdW50cnlJRCk7CiAgICAgICAgCiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGF0dGFja0NvdW50cnkodWludDggY291bnRyeUlEKQogICAgewogICAgICAgIGFzc2VydChwbGF5ZXJDb3VudHJpZXNbbXNnLnNlbmRlcl0ubGVuZ3RoIT0wKTsgLy9wbGF5ZXIgb3ducyBjb3VudHkKICAgICAgICBhc3NlcnQob3duZXJvZkNvdW50cnlbY291bnRyeUlEXSE9YWRkcmVzcygwKSk7IC8vY291bnRyeSBvd25lZAogICAgICAgIGFzc2VydChtc2cuc2VuZGVyIT1vd25lcm9mQ291bnRyeVtjb3VudHJ5SURdKTsgLy9ub3QgYXR0YWNraW5nIGl0cyBvd24gY291bnRyeQogICAgICAgIAogICAgICAgIGFkZHJlc3MgYXR0YWNrZXIgPSBtc2cuc2VuZGVyOwogICAgICAgIGFkZHJlc3MgZGVmZW5kZXIgPSBvd25lcm9mQ291bnRyeVtjb3VudHJ5SURdOwogICAgICAgIAogICAgICAgIHVpbnQgYT1wbGF5ZXJDb3VudHJpZXNbYXR0YWNrZXJdLmxlbmd0aDsKICAgICAgICB1aW50IGI9cGxheWVyQ291bnRyaWVzW2RlZmVuZGVyXS5sZW5ndGg7CiAgICAgICAgCiAgICAgICAgaWYoYTw9MSkKICAgICAgICAgICAgYT0xOwogICAgICAgIGVsc2UgaWYoYTw9NCkKICAgICAgICAgICAgYT0yOwogICAgICAgIGVsc2UgaWYoYTw9OSkKICAgICAgICAgICAgYT0zOwogICAgICAgIGVsc2UgaWYoYTw9MTYpCiAgICAgICAgICAgIGE9NDsKICAgICAgICBlbHNlIGlmKGE8PTI1KQogICAgICAgICAgICBhPTU7CiAgICAgICAgZWxzZSBpZihhPD0zNikKICAgICAgICAgICAgYT02OwogICAgICAgIGVsc2UgaWYoYTw9NDkpCiAgICAgICAgICAgIGE9NzsKICAgICAgICBlbHNlIGlmKGE8PTY0KQogICAgICAgICAgICBhPTg7CiAgICAgICAgZWxzZSBpZihhPD04MSkKICAgICAgICAgICAgYT05OwogICAgICAgIGVsc2UKICAgICAgICAgICAgYT0xMDsKICAgICAgICAKICAgICAgICBpZihiPD0xKQogICAgICAgICAgICBiPTE7CiAgICAgICAgZWxzZSBpZihiPD00KQogICAgICAgICAgICBiPTI7CiAgICAgICAgZWxzZSBpZihiPD05KQogICAgICAgICAgICBiPTM7CiAgICAgICAgZWxzZSBpZihiPD0xNikKICAgICAgICAgICAgYj00OwogICAgICAgIGVsc2UgaWYoYjw9MjUpCiAgICAgICAgICAgIGI9NTsKICAgICAgICBlbHNlIGlmKGI8PTM2KQogICAgICAgICAgICBiPTY7CiAgICAgICAgZWxzZSBpZihiPD00OSkKICAgICAgICAgICAgYj03OwogICAgICAgIGVsc2UgaWYoYjw9NjQpCiAgICAgICAgICAgIGI9ODsKICAgICAgICBlbHNlIGlmKGI8PTgxKQogICAgICAgICAgICBiPTk7CiAgICAgICAgZWxzZQogICAgICAgICAgICBiPTEwOwoKICAgICAgICBmb3IodWludDI1NiBpPTE0O2k+PTExO2ktLSkKICAgICAgICAgICAgd2lubmVybG9zZXJbaV09d2lubmVybG9zZXJbaS0xXTsKICAgICAgICBmb3IoaT05O2k+PTY7aS0tKQogICAgICAgICAgICB3aW5uZXJsb3NlcltpXT13aW5uZXJsb3NlcltpLTFdOwogICAgICAgIGZvcihpPTQ7aT49MTtpLS0pCiAgICAgICAgICAgIHdpbm5lcmxvc2VyW2ldPXdpbm5lcmxvc2VyW2ktMV07CiAgICAgICAgCiAgICAgICAgdWludDI1NiBsb29wY291bnQ9MDsKICAgICAgICBsYXN0Uj11aW50MjU2KGJsb2NrLmJsb2NraGFzaChibG9jay5udW1iZXItMSkpJShhK2IpOwogICAgICAgIGlmKGxhc3RSPGEpIC8vYXR0YWNrZXIgd2luCiAgICAgICAgewogICAgICAgICAgICBsb29wY291bnQ9cGxheWVyQ291bnRyaWVzW2RlZmVuZGVyXS5sZW5ndGg7CiAgICAgICAgICAgIGZvciAoaT0wO2k8bG9vcGNvdW50O2krKykKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgcGxheWVyQ291bnRyaWVzW2F0dGFja2VyXS5wdXNoKHBsYXllckNvdW50cmllc1tkZWZlbmRlcl1baV0pOwogICAgICAgICAgICAgICAgb3duZXJvZkNvdW50cnlbcGxheWVyQ291bnRyaWVzW2RlZmVuZGVyXVtpXV09YXR0YWNrZXI7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcGxheWVyQ291bnRyaWVzW2RlZmVuZGVyXS5sZW5ndGg9MDsKICAgICAgICAgICAgd2lubmVybG9zZXJbMF09YXR0YWNrZXI7CiAgICAgICAgICAgIHdpbm5lcmxvc2VyWzVdPWRlZmVuZGVyOwogICAgICAgICAgICB3aW5uZXJsb3NlclsxMF09MTsgLy9hdHRhY2tlciB3aW5zCiAgICAgICAgfQogICAgICAgIGVsc2UgLy9kZWZlbmRlciB3aW4KICAgICAgICB7CiAgICAgICAgICAgIGxvb3Bjb3VudD1wbGF5ZXJDb3VudHJpZXNbYXR0YWNrZXJdLmxlbmd0aDsKICAgICAgICAgICAgZm9yIChpPTA7aTxsb29wY291bnQ7aSsrKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBwbGF5ZXJDb3VudHJpZXNbZGVmZW5kZXJdLnB1c2gocGxheWVyQ291bnRyaWVzW2F0dGFja2VyXVtpXSk7CiAgICAgICAgICAgICAgICBvd25lcm9mQ291bnRyeVtwbGF5ZXJDb3VudHJpZXNbYXR0YWNrZXJdW2ldXT1kZWZlbmRlcjsKICAgICAgICAgICAgfQogICAgICAgICAgICBwbGF5ZXJDb3VudHJpZXNbYXR0YWNrZXJdLmxlbmd0aD0wOwogICAgICAgICAgICB3aW5uZXJsb3NlclswXT1hdHRhY2tlcjsKICAgICAgICAgICAgd2lubmVybG9zZXJbNV09ZGVmZW5kZXI7CiAgICAgICAgICAgIHdpbm5lcmxvc2VyWzEwXT0yOyAvL2F0dGFja2VyIGxvc2VzCiAgICAgICAgfQogICAgICAgIGF0dGFja2hhcHBlbmVkKGF0dGFja2VyLGRlZmVuZGVyKTsKICAgICAgICBpc0dhbWVFbmQoKTsKICAgIH0KICAgIGZ1bmN0aW9uIGlzR2FtZUVuZCgpCiAgICB7CiAgICAgICAgdWludDI1NiBsb29wY291bnQ9cGxheWVyTGlzdC5sZW5ndGg7CiAgICAgICAgYWRkcmVzcyB3aW5uZXI9b3duZXI7CiAgICAgICAgCiAgICAgICAgLy9yZXF1aXJlIDE1IGNvdW50cnkgb3duZXJzaGlwIGZvciB0ZXN0aW5nCiAgICAgICAgYm9vbCBkZWw9ZmFsc2U7CiAgICAgICAgZm9yICh1aW50OCBpPTA7IGk8bG9vcGNvdW50O2krKykKICAgICAgICB7CiAgICAgICAgICAgIGlmKHBsYXllckNvdW50cmllc1twbGF5ZXJMaXN0W2ldXS5sZW5ndGg+PXdpbm5lckxpbWl0KSAvL2lzd2lubmVyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHdpbm5lcj1wbGF5ZXJMaXN0W2ldOwogICAgICAgICAgICAgICAgZGVsPXRydWU7CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIC8vZGVsZXRlZXZlcnl0aGluZwogICAgICAgIGlmKGRlbCkKICAgICAgICB7CiAgICAgICAgICAgIHdpbm5lci50cmFuc2Zlcih0b3RhbG1vbmV5LzEwKjkpOyAvL2Rpc3RyaWJ1dGUgOTAlCiAgICAgICAgICAgIG93bmVyLnRyYW5zZmVyKHRvdGFsbW9uZXkvMTApOwogICAgICAgICAgICB0b3RhbG1vbmV5PTA7CiAgICAgICAgICAgIGxhc3RnYW1lZW5kV2lubmVyPXdpbm5lcjsKICAgICAgICAgICAgZm9yIChpPTA7aTwxNzg7aSsrKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBwbGF5ZXJDb3VudHJpZXNbb3duZXJvZkNvdW50cnlbaV1dLmxlbmd0aD0wOwogICAgICAgICAgICAgICAgb3duZXJvZkNvdW50cnlbaV09MDsKICAgICAgICAgICAgfQogICAgICAgICAgICBwbGF5ZXJMaXN0Lmxlbmd0aD0wOwogICAgICAgICAgICBmb3IoaT0wO2k8MTA7aSsrKQogICAgICAgICAgICAgICAgd2lubmVybG9zZXJbaV09YWRkcmVzcygwKTsKICAgICAgICB9CiAgICB9CiAgICBmdW5jdGlvbiBzZXR3aW5uZXJMaW1pdCAodWludDggeCkKICAgIHsKICAgICAgICBhc3NlcnQobXNnLnNlbmRlcj09b3duZXIpOwogICAgICAgIHdpbm5lckxpbWl0PXg7CiAgICB9CiAgICBmdW5jdGlvbiBnZXRDb3VudHJ5T3duZXJzaGlwTGlzdCgpIGNvbnN0YW50IHJldHVybnMgKGFkZHJlc3NbMTc4XSkKICAgIHsKICAgICAgICByZXR1cm4gb3duZXJvZkNvdW50cnk7CiAgICB9CiAgICBmdW5jdGlvbiBnZXRUb3RhbEJldCgpY29uc3RhbnQgcmV0dXJucyAodWludDI1NikKICAgIHsKICAgICAgICByZXR1cm4gdG90YWxtb25leTsKICAgIH0KICAgIGZ1bmN0aW9uIGdldGFkZHIoYWRkcmVzcyBheCwgdWludDggYngpIGNvbnN0YW50IHJldHVybnMoYWRkcmVzcykKICAgIHsKICAgICAgICByZXR1cm4gcGxheWVyQ291bnRyaWVzW2F4XVtieF07CiAgICB9CiAgICBmdW5jdGlvbiBsZW4oYWRkcmVzcyBheCkgY29uc3RhbnQgcmV0dXJucyh1aW50KQogICAgewogICAgICAgIHJldHVybiBwbGF5ZXJDb3VudHJpZXNbYXhdLmxlbmd0aDsKICAgIH0KICAgIGZ1bmN0aW9uIGxhc3RyYW5kb20oKSBjb25zdGFudCByZXR1cm5zKHVpbnQyNTYpCiAgICB7CiAgICAgICAgcmV0dXJuIGxhc3RSOwogICAgfQogICAgZnVuY3Rpb24gZ2V0d2lubmVybG9zZXIoKSBjb25zdGFudCByZXR1cm5zKGFkZHJlc3NbMTVdKQogICAgewogICAgICAgIHJldHVybiB3aW5uZXJsb3NlcjsKICAgIH0KICAgIGZ1bmN0aW9uIGxhc3RnYW1ld2lubmVyKCkgY29uc3RhbnQgcmV0dXJucyhhZGRyZXNzKQogICAgewogICAgICAgIHJldHVybiBsYXN0Z2FtZWVuZFdpbm5lcjsKICAgIH0KICAgIAp9'.
	

]
