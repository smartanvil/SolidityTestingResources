Class {
	#name : #SRT25384fa4586e4836c35be4c013e40681e201020c,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT25384fa4586e4836c35be4c013e40681e201020c >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTM7CgpsaWJyYXJ5IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAKICAgIHVpbnQyNTYgYyA9IGEgLyBiOwogICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KfQoKY29udHJhY3QgT3duYWJsZSB7CiAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CgoKICAvKioKICAgKiBAZGV2IFRoZSBPd25hYmxlIGNvbnN0cnVjdG9yIHNldHMgdGhlIG9yaWdpbmFsIGBvd25lcmAgb2YgdGhlIGNvbnRyYWN0IHRvIHRoZSBzZW5kZXIKICAgKiBhY2NvdW50LgogICAqLwogIGZ1bmN0aW9uIE93bmFibGUoKSB7CiAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgfQoKCiAgLyoqCiAgICogQGRldiBUaHJvd3MgaWYgY2FsbGVkIGJ5IGFueSBhY2NvdW50IG90aGVyIHRoYW4gdGhlIG93bmVyLgogICAqLwogIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICBfOwogIH0KCgogIC8qKgogICAqIEBkZXYgQWxsb3dzIHRoZSBjdXJyZW50IG93bmVyIHRvIHRyYW5zZmVyIGNvbnRyb2wgb2YgdGhlIGNvbnRyYWN0IHRvIGEgbmV3T3duZXIuCiAgICogQHBhcmFtIG5ld093bmVyIFRoZSBhZGRyZXNzIHRvIHRyYW5zZmVyIG93bmVyc2hpcCB0by4KICAgKi8KICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld093bmVyKSBvbmx5T3duZXIgewogICAgaWYgKG5ld093bmVyICE9IGFkZHJlc3MoMCkpIHsKICAgICAgb3duZXIgPSBuZXdPd25lcjsKICAgIH0KICB9Cgp9Cgpjb250cmFjdCBEZW1vVVNEUHJpY2VkQ3Jvd2RzYWxlIGlzIE93bmFibGUgewoKICAgICAgICB1c2luZyBTYWZlTWF0aCBmb3IgdWludDI1NjsKCiAgICAgICAgLyogdGhlIG51bWJlciBvZiB0b2tlbnMgYWxyZWFkeSBzb2xkIHRocm91Z2ggdGhpcyBjb250cmFjdCovCiAgICAgICAgdWludDI1NiBwdWJsaWMgdG9rZW5zU29sZCA9IDA7CgogICAgICAgIC8qIEhvdyBtYW55IHdlaSBvZiBmdW5kaW5nIHdlIGhhdmUgcmFpc2VkICovCiAgICAgICAgdWludDI1NiBwdWJsaWMgd2VpUmFpc2VkID0gMDsKICAgICAgICB1aW50MjU2IHB1YmxpYyBjZW50c1JhaXNlZCA9IDA7CgogICAgICAgIHVpbnQyNTYgcHVibGljIGNlbnRzUGVyRXRoZXIgPSAzMDQwMDsKICAgICAgICB1aW50MjU2IHB1YmxpYyBib251c1BlcmNlbnQgPSAwOwogICAgICAgIHVpbnQyNTYgcHVibGljIGNlbnRzUGVyVG9rZW4gPSAzMDsKICAgICAgICB1aW50MjU2IHB1YmxpYyBkZWJ1Z0xhdGVzdFB1cmNoYXNlQ2VudHNWYWx1ZTsKCiAgICAgICAgYWRkcmVzcyBwdWJsaWMgd2FsbGV0OwoKICAgICAgICBFUkMyMEJhc2ljIHRva2VuQ29udHJhY3Q7CgogICAgICAgIGV2ZW50IFRva2VuUHVyY2hhc2UoYWRkcmVzcyBpbmRleGVkIHB1cmNoYXNlciwgYWRkcmVzcyBpbmRleGVkIGJlbmVmaWNpYXJ5LCB1aW50MjU2IHZhbHVlLCB1aW50MjU2IGFtb3VudCk7CgogICAgICAgIGV2ZW50IEV2ZW50Q2VudHNQZXJFdGhlckNoYW5nZWQodWludDI1NiBfb2xkY2VudHNQZXJFdGhlciwgdWludDI1NiBfY2VudHNQZXJFdGhlcik7CiAgICAgICAgZXZlbnQgRXZlbnRDZW50c1BlclRva2VuQ2hhbmdlZCh1aW50MjU2IF9vbGRjZW50c1BlckV0aGVyLCB1aW50MjU2IF9jZW50c1BlckV0aGVyKTsKICAgICAgICBldmVudCBFdmVudEJvbnVzUGVyY2VudENoYW5nZWQodWludDI1NiBfb2xkY2VudHNQZXJFdGhlciwgdWludDI1NiBfY2VudHNQZXJFdGhlcik7CiAgICAgICAgZXZlbnQgQ2hhbmdlV2FsbGV0KGFkZHJlc3MgX29sZFdhbGxldCwgYWRkcmVzcyBfbmV3V2FsbGV0KTsKCgogICAgICAgIGZ1bmN0aW9uIERlbW9VU0RQcmljZWRDcm93ZHNhbGUoCiAgICAgICAgICAgICAgICB1aW50MjU2IF9jZW50c1BlckV0aGVyLAogICAgICAgICAgICAgICAgdWludDI1NiBfY2VudHNQZXJUb2tlbiwKICAgICAgICAgICAgICAgIGFkZHJlc3MgX3Rva2VuQ29udHJhY3QsCiAgICAgICAgICAgICAgICBhZGRyZXNzIF93YWxsZXQKICAgICAgICApIHsKICAgICAgICAgICAgICAgIHJlcXVpcmUoX2NlbnRzUGVyRXRoZXIgPiAwKTsKICAgICAgICAgICAgICAgIHJlcXVpcmUoX2NlbnRzUGVyVG9rZW4gPiAwKTsKICAgICAgICAgICAgICAgIHJlcXVpcmUoX3Rva2VuQ29udHJhY3QgIT0gMHgwKTsKICAgICAgICAgICAgICAgIHJlcXVpcmUoX3dhbGxldCAhPSAweDApOwoKICAgICAgICAgICAgICAgIGNlbnRzUGVyRXRoZXIgPSBfY2VudHNQZXJFdGhlcjsKICAgICAgICAgICAgICAgIGNlbnRzUGVyVG9rZW4gPSBfY2VudHNQZXJUb2tlbjsKICAgICAgICAgICAgICAgIHRva2VuQ29udHJhY3QgPSBFUkMyMEJhc2ljKF90b2tlbkNvbnRyYWN0KTsKICAgICAgICAgICAgICAgIHdhbGxldCA9IF93YWxsZXQ7CiAgICAgICAgfQoKICAgICAgICBmdW5jdGlvbiBzZXRDZW50c1BlckV0aGVyKHVpbnQyNTYgX2NlbnRzUGVyRXRoZXIpIG9ubHlPd25lciB7CiAgICAgICAgICAgICAgICByZXF1aXJlKF9jZW50c1BlckV0aGVyID4gMCk7CiAgICAgICAgICAgICAgICB1aW50MjU2IG9sZENlbnRzUGVyRXRoZXIgPSBjZW50c1BlckV0aGVyOwogICAgICAgICAgICAgICAgY2VudHNQZXJFdGhlciA9IF9jZW50c1BlckV0aGVyOwogICAgICAgICAgICAgICAgRXZlbnRDZW50c1BlckV0aGVyQ2hhbmdlZChvbGRDZW50c1BlckV0aGVyLCBjZW50c1BlckV0aGVyKTsKICAgICAgICB9CgogICAgICAgIGZ1bmN0aW9uIHNldENlbnRzUGVyVG9rZW4odWludDI1NiBfY2VudHNQZXJUb2tlbikgb25seU93bmVyIHsKICAgICAgICAgICAgICAgIHJlcXVpcmUoX2NlbnRzUGVyVG9rZW4gPiAwKTsKICAgICAgICAgICAgICAgIHVpbnQyNTYgb2xkQ2VudHNQZXJUb2tlbiA9IGNlbnRzUGVyVG9rZW47CiAgICAgICAgICAgICAgICBjZW50c1BlclRva2VuID0gX2NlbnRzUGVyVG9rZW47CiAgICAgICAgICAgICAgICBFdmVudENlbnRzUGVyVG9rZW5DaGFuZ2VkKG9sZENlbnRzUGVyVG9rZW4sIGNlbnRzUGVyVG9rZW4pOwogICAgICAgIH0KCiAgICAgICAgZnVuY3Rpb24gc2V0Qm9udXNQZXJjZW50KHVpbnQyNTYgX2JvbnVzUGVyY2VudCkgb25seU93bmVyIHsKICAgICAgICAgICAgICAgIHJlcXVpcmUoX2JvbnVzUGVyY2VudCA+IDApOwogICAgICAgICAgICAgICAgdWludDI1NiBvbGRCb251c1BlcmNlbnQgPSBfYm9udXNQZXJjZW50OwogICAgICAgICAgICAgICAgYm9udXNQZXJjZW50ID0gX2JvbnVzUGVyY2VudDsKICAgICAgICAgICAgICAgIEV2ZW50Qm9udXNQZXJjZW50Q2hhbmdlZChvbGRCb251c1BlcmNlbnQsIGJvbnVzUGVyY2VudCk7CiAgICAgICAgfQoKICAgICAgICBmdW5jdGlvbiBjaGFuZ2VXYWxsZXQoYWRkcmVzcyBfd2FsbGV0KSBvbmx5T3duZXIgewogICAgICAgICAgICAgICAgcmVxdWlyZShfd2FsbGV0ICE9IDB4MCk7CiAgICAgICAgICAgICAgICBhZGRyZXNzIG9sZFdhbGxldCA9IF93YWxsZXQ7CiAgICAgICAgICAgICAgICB3YWxsZXQgPSBfd2FsbGV0OwogICAgICAgICAgICAgICAgQ2hhbmdlV2FsbGV0KG9sZFdhbGxldCwgd2FsbGV0KTsKICAgICAgICB9CgogICAgICAgIC8vIGZhbGxiYWNrIGZ1bmN0aW9uIGNhbiBiZSB1c2VkIHRvIGJ1eSB0b2tlbnMKICAgICAgICBmdW5jdGlvbiAoKSBwYXlhYmxlIHsKICAgICAgICAgICAgICAgIGJ1eVRva2Vucyhtc2cuc2VuZGVyKTsKICAgICAgICB9CgogICAgICAgIC8vIGxvdyBsZXZlbCB0b2tlbiBwdXJjaGFzZSBmdW5jdGlvbgogICAgICAgIGZ1bmN0aW9uIGJ1eVRva2VucyhhZGRyZXNzIGJlbmVmaWNpYXJ5KSBwYXlhYmxlIHsKICAgICAgICAgICAgICAgIHJlcXVpcmUoYmVuZWZpY2lhcnkgIT0gMHgwKTsKICAgICAgICAgICAgICAgIHJlcXVpcmUobXNnLnZhbHVlICE9IDApOwoKICAgICAgICAgICAgICAgIHVpbnQyNTYgd2VpQW1vdW50ID0gbXNnLnZhbHVlOwogICAgICAgICAgICAgICAgdWludDI1NiBjZW50c0Ftb3VudCA9IHdlaUFtb3VudC5tdWwoY2VudHNQZXJFdGhlcikuZGl2KDFFMTgpOwogICAgICAgICAgICAgICAgZGVidWdMYXRlc3RQdXJjaGFzZUNlbnRzVmFsdWUgPSBjZW50c0Ftb3VudDsKICAgICAgICAgICAgICAgIC8vIGNhbGN1bGF0ZSB0b2tlbiBhbW91bnQgdG8gYmUgY3JlYXRlZAoKICAgICAgICAgICAgICAgIHVpbnQyNTYgdG9rZW5zID0gY2VudHNBbW91bnQuZGl2KGNlbnRzUGVyVG9rZW4pLm11bChnZXRCb251c0NvZWZmaWNpZW50KCkpLmRpdigxMDApOwoKICAgICAgICAgICAgICAgIC8vIHVwZGF0ZSBzdGF0ZQogICAgICAgICAgICAgICAgd2VpUmFpc2VkID0gd2VpUmFpc2VkLmFkZCh3ZWlBbW91bnQpOwogICAgICAgICAgICAgICAgd2VpUmFpc2VkID0gY2VudHNBbW91bnQuYWRkKHdlaUFtb3VudCk7CgogICAgICAgICAgICAgICAgdG9rZW5Db250cmFjdC50cmFuc2ZlcihiZW5lZmljaWFyeSwgdG9rZW5zKTsKICAgICAgICAgICAgICAgIGZvcndhcmRGdW5kcygpOwogICAgICAgIH0KCiAgICAgICAgZnVuY3Rpb24gZ2V0Qm9udXNDb2VmZmljaWVudCgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICAgICAgICAgIHJldHVybiAxMDAgKyBib251c1BlcmNlbnQ7CiAgICAgICAgfQoKICAgICAgICBmdW5jdGlvbiBmb3J3YXJkRnVuZHMoKSBpbnRlcm5hbCB7CiAgICAgICAgICAgICAgICB3YWxsZXQudHJhbnNmZXIobXNnLnZhbHVlKTsKICAgICAgICB9CgogICAgICAgIGZ1bmN0aW9uIHdpdGhkcmF3VG9rZW5zKGFkZHJlc3Mgd2hlcmUpIG9ubHlPd25lciB7CiAgICAgICAgICAgICAgICB0b2tlbkNvbnRyYWN0LnRyYW5zZmVyKHdoZXJlLCB0b2tlbkNvbnRyYWN0LmJhbGFuY2VPZih0aGlzKSk7CiAgICAgICAgfQoKfQoKY29udHJhY3QgRVJDMjBCYXNpYyB7CiAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7CiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3Mgd2hvKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KTsKICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIHRvLCB1aW50MjU2IHZhbHVlKSByZXR1cm5zIChib29sKTsKICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHZhbHVlKTsKfQ=='.
	

]
