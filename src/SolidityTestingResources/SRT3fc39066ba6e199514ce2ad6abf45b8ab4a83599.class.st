Class {
	#name : #SRT3fc39066ba6e199514ce2ad6abf45b8ab4a83599,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT3fc39066ba6e199514ce2ad6abf45b8ab4a83599 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgovKioKICogTWF0aCBvcGVyYXRpb25zIHdpdGggc2FmZXR5IGNoZWNrcwogKi8KY29udHJhY3QgU2FmZU1hdGggewogIGZ1bmN0aW9uIHNhZmVNdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgaWYgKGEgPT0gMCkgewogICAgICByZXR1cm4gMDsKICAgIH0KICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGMgLyBhID09IGIpOwogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBzYWZlRGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIGFzc2VydChiID4gMCk7CiAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOwogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBzYWZlU3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIGFzc2VydChiIDw9IGEpOwogICAgcmV0dXJuIGEgLSBiOwogIH0KCiAgZnVuY3Rpb24gc2FmZUFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhICsgYjsKICAgIGFzc2VydChjPj1hICYmIGM+PWIpOwogICAgcmV0dXJuIGM7CiAgfQogIAp9CmNvbnRyYWN0IEJFQiBpcyBTYWZlTWF0aHsKICAgIHN0cmluZyBwdWJsaWMgbmFtZTsKICAgIHN0cmluZyBwdWJsaWMgc3ltYm9sOwogICAgdWludDggcHVibGljIGRlY2ltYWxzOwogICAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7CglhZGRyZXNzIHB1YmxpYyBvd25lcjsKCiAgICAvKiBUaGlzIGNyZWF0ZXMgYW4gYXJyYXkgd2l0aCBhbGwgYmFsYW5jZXMgKi8KICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIGJhbGFuY2VPZjsKCW1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIGZyZWV6ZU9mOwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBwdWJsaWMgYWxsb3dhbmNlOwoKICAgIC8qIFRoaXMgZ2VuZXJhdGVzIGEgcHVibGljIGV2ZW50IG9uIHRoZSBibG9ja2NoYWluIHRoYXQgd2lsbCBub3RpZnkgY2xpZW50cyAqLwogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiB2YWx1ZSk7CgogICAgLyogVGhpcyBub3RpZmllcyBjbGllbnRzIGFib3V0IHRoZSBhbW91bnQgYnVybnQgKi8KICAgIGV2ZW50IEJ1cm4oYWRkcmVzcyBpbmRleGVkIGZyb20sIHVpbnQyNTYgdmFsdWUpOwoJCgkvKiBUaGlzIG5vdGlmaWVzIGNsaWVudHMgYWJvdXQgdGhlIGFtb3VudCBmcm96ZW4gKi8KICAgIGV2ZW50IEZyZWV6ZShhZGRyZXNzIGluZGV4ZWQgZnJvbSwgdWludDI1NiB2YWx1ZSk7CgkKCS8qIFRoaXMgbm90aWZpZXMgY2xpZW50cyBhYm91dCB0aGUgYW1vdW50IHVuZnJvemVuICovCiAgICBldmVudCBVbmZyZWV6ZShhZGRyZXNzIGluZGV4ZWQgZnJvbSwgdWludDI1NiB2YWx1ZSk7CgogICAgLyogSW5pdGlhbGl6ZXMgY29udHJhY3Qgd2l0aCBpbml0aWFsIHN1cHBseSB0b2tlbnMgdG8gdGhlIGNyZWF0b3Igb2YgdGhlIGNvbnRyYWN0ICovCiAgICBmdW5jdGlvbiBCRUIoCiAgICAgICAgdWludDI1NiBpbml0aWFsU3VwcGx5LAogICAgICAgIHN0cmluZyB0b2tlbk5hbWUsCiAgICAgICAgdWludDggZGVjaW1hbFVuaXRzLAogICAgICAgIHN0cmluZyB0b2tlblN5bWJvbCwKICAgICAgICBhZGRyZXNzIGhvbGRlcgogICAgICAgICkgIHB1YmxpY3sKICAgICAgICBiYWxhbmNlT2ZbaG9sZGVyXSA9IGluaXRpYWxTdXBwbHk7ICAgICAgICAgICAgICAvLyBHaXZlIHRoZSBjcmVhdG9yIGFsbCBpbml0aWFsIHRva2VucwogICAgICAgIHRvdGFsU3VwcGx5ID0gaW5pdGlhbFN1cHBseTsgICAgICAgICAgICAgICAgICAgICAgICAvLyBVcGRhdGUgdG90YWwgc3VwcGx5CiAgICAgICAgbmFtZSA9IHRva2VuTmFtZTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFNldCB0aGUgbmFtZSBmb3IgZGlzcGxheSBwdXJwb3NlcwogICAgICAgIHN5bWJvbCA9IHRva2VuU3ltYm9sOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBTZXQgdGhlIHN5bWJvbCBmb3IgZGlzcGxheSBwdXJwb3NlcwogICAgICAgIGRlY2ltYWxzID0gZGVjaW1hbFVuaXRzOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBBbW91bnQgb2YgZGVjaW1hbHMgZm9yIGRpc3BsYXkgcHVycG9zZXMKCQlvd25lciA9IG1zZy5zZW5kZXI7CiAgICB9CgogICAgLyogU2VuZCBjb2lucyAqLwogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWN7CiAgICAgICAgcmVxdWlyZShfdG8gIT0gMHgwKTsgIC8vIFByZXZlbnQgdHJhbnNmZXIgdG8gMHgwIGFkZHJlc3MuIFVzZSBidXJuKCkgaW5zdGVhZAoJCXJlcXVpcmUoX3ZhbHVlID4gMCk7IAogICAgICAgIHJlcXVpcmUoYmFsYW5jZU9mW21zZy5zZW5kZXJdID49IF92YWx1ZSk7ICAgICAgICAgICAvLyBDaGVjayBpZiB0aGUgc2VuZGVyIGhhcyBlbm91Z2gKICAgICAgICByZXF1aXJlKGJhbGFuY2VPZltfdG9dICsgX3ZhbHVlID49IGJhbGFuY2VPZltfdG9dKTsgLy8gQ2hlY2sgZm9yIG92ZXJmbG93cwogICAgICAgIGJhbGFuY2VPZlttc2cuc2VuZGVyXSA9IFNhZmVNYXRoLnNhZmVTdWIoYmFsYW5jZU9mW21zZy5zZW5kZXJdLCBfdmFsdWUpOyAgICAgICAgICAgICAgICAgICAgIC8vIFN1YnRyYWN0IGZyb20gdGhlIHNlbmRlcgogICAgICAgIGJhbGFuY2VPZltfdG9dID0gU2FmZU1hdGguc2FmZUFkZChiYWxhbmNlT2ZbX3RvXSwgX3ZhbHVlKTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gQWRkIHRoZSBzYW1lIHRvIHRoZSByZWNpcGllbnQKICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7ICAgICAgICAgICAgICAgICAgIC8vIE5vdGlmeSBhbnlvbmUgbGlzdGVuaW5nIHRoYXQgdGhpcyB0cmFuc2ZlciB0b29rIHBsYWNlCiAgICB9CgogICAgLyogQWxsb3cgYW5vdGhlciBjb250cmFjdCB0byBzcGVuZCBzb21lIHRva2VucyBpbiB5b3VyIGJlaGFsZiAqLwogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcHVibGljCiAgICAgICAgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CgkJcmVxdWlyZShfdmFsdWUgPiAwKTsgCiAgICAgICAgYWxsb3dhbmNlW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgICAgIAoKICAgIC8qIEEgY29udHJhY3QgYXR0ZW1wdHMgdG8gZ2V0IHRoZSBjb2lucyAqLwogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIHJlcXVpcmUoX3RvICE9IDB4MCk7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBQcmV2ZW50IHRyYW5zZmVyIHRvIDB4MCBhZGRyZXNzLiBVc2UgYnVybigpIGluc3RlYWQKCQlyZXF1aXJlKF92YWx1ZSA+IDApOyAKICAgICAgICByZXF1aXJlKGJhbGFuY2VPZltfZnJvbV0gPj0gX3ZhbHVlKTsgICAgICAgICAgICAgICAgIC8vIENoZWNrIGlmIHRoZSBzZW5kZXIgaGFzIGVub3VnaAogICAgICAgIHJlcXVpcmUoYmFsYW5jZU9mW190b10gKyBfdmFsdWUgPj0gYmFsYW5jZU9mW190b10pOyAgLy8gQ2hlY2sgZm9yIG92ZXJmbG93cwogICAgICAgIHJlcXVpcmUoX3ZhbHVlIDw9IGFsbG93YW5jZVtfZnJvbV1bbXNnLnNlbmRlcl0pOyAgICAgLy8gQ2hlY2sgYWxsb3dhbmNlCiAgICAgICAgYmFsYW5jZU9mW19mcm9tXSA9IFNhZmVNYXRoLnNhZmVTdWIoYmFsYW5jZU9mW19mcm9tXSwgX3ZhbHVlKTsgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBTdWJ0cmFjdCBmcm9tIHRoZSBzZW5kZXIKICAgICAgICBiYWxhbmNlT2ZbX3RvXSA9IFNhZmVNYXRoLnNhZmVBZGQoYmFsYW5jZU9mW190b10sIF92YWx1ZSk7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBBZGQgdGhlIHNhbWUgdG8gdGhlIHJlY2lwaWVudAogICAgICAgIGFsbG93YW5jZVtfZnJvbV1bbXNnLnNlbmRlcl0gPSBTYWZlTWF0aC5zYWZlU3ViKGFsbG93YW5jZVtfZnJvbV1bbXNnLnNlbmRlcl0sIF92YWx1ZSk7CiAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBidXJuKHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgcmVxdWlyZShiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPj0gX3ZhbHVlKTsgICAgICAgICAgICAvLyBDaGVjayBpZiB0aGUgc2VuZGVyIGhhcyBlbm91Z2gKCQlyZXF1aXJlKF92YWx1ZSA+IDApOyAKICAgICAgICBiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPSBTYWZlTWF0aC5zYWZlU3ViKGJhbGFuY2VPZlttc2cuc2VuZGVyXSwgX3ZhbHVlKTsgICAgICAgICAgICAgICAgICAgICAgLy8gU3VidHJhY3QgZnJvbSB0aGUgc2VuZGVyCiAgICAgICAgdG90YWxTdXBwbHkgPSBTYWZlTWF0aC5zYWZlU3ViKHRvdGFsU3VwcGx5LF92YWx1ZSk7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBVcGRhdGVzIHRvdGFsU3VwcGx5CiAgICAgICAgQnVybihtc2cuc2VuZGVyLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoJCglmdW5jdGlvbiBmcmVlemUodWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICByZXF1aXJlKGJhbGFuY2VPZlttc2cuc2VuZGVyXSA+PSBfdmFsdWUpOyAgICAgICAgICAgIC8vIENoZWNrIGlmIHRoZSBzZW5kZXIgaGFzIGVub3VnaAoJCXJlcXVpcmUoX3ZhbHVlID4gMCk7IAogICAgICAgIGJhbGFuY2VPZlttc2cuc2VuZGVyXSA9IFNhZmVNYXRoLnNhZmVTdWIoYmFsYW5jZU9mW21zZy5zZW5kZXJdLCBfdmFsdWUpOyAgICAgICAgICAgICAgICAgICAgICAvLyBTdWJ0cmFjdCBmcm9tIHRoZSBzZW5kZXIKICAgICAgICBmcmVlemVPZlttc2cuc2VuZGVyXSA9IFNhZmVNYXRoLnNhZmVBZGQoZnJlZXplT2ZbbXNnLnNlbmRlcl0sIF92YWx1ZSk7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBVcGRhdGVzIHRvdGFsU3VwcGx5CiAgICAgICAgRnJlZXplKG1zZy5zZW5kZXIsIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgkKCWZ1bmN0aW9uIHVuZnJlZXplKHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgcmVxdWlyZShmcmVlemVPZlttc2cuc2VuZGVyXSA+PSBfdmFsdWUpOyAgICAgICAgICAgIC8vIENoZWNrIGlmIHRoZSBzZW5kZXIgaGFzIGVub3VnaAoJCXJlcXVpcmUoX3ZhbHVlID4gMCk7IAogICAgICAgIGZyZWV6ZU9mW21zZy5zZW5kZXJdID0gU2FmZU1hdGguc2FmZVN1YihmcmVlemVPZlttc2cuc2VuZGVyXSwgX3ZhbHVlKTsgICAgICAgICAgICAgICAgICAgICAgLy8gU3VidHJhY3QgZnJvbSB0aGUgc2VuZGVyCgkJYmFsYW5jZU9mW21zZy5zZW5kZXJdID0gU2FmZU1hdGguc2FmZUFkZChiYWxhbmNlT2ZbbXNnLnNlbmRlcl0sIF92YWx1ZSk7CiAgICAgICAgVW5mcmVlemUobXNnLnNlbmRlciwgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCQoJLy8gdHJhbnNmZXIgYmFsYW5jZSB0byBvd25lcgoJZnVuY3Rpb24gd2l0aGRyYXdFdGhlcih1aW50MjU2IGFtb3VudCkgcHVibGljIHsKCQlyZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwoJCW93bmVyLnRyYW5zZmVyKGFtb3VudCk7Cgl9CgkKCS8vIGNhbiBhY2NlcHQgZXRoZXIKCWZ1bmN0aW9uKCkgcGF5YWJsZSBwdWJsaWN7CiAgICB9Cn0='.
	

]
