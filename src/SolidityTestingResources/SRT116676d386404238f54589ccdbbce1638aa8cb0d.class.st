Class {
	#name : #SRT116676d386404238f54589ccdbbce1638aa8cb0d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT116676d386404238f54589ccdbbce1638aa8cb0d >> base64 [
	^ ''.
	

]
