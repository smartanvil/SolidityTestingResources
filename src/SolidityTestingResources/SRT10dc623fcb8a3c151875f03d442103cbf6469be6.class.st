Class {
	#name : #SRT10dc623fcb8a3c151875f03d442103cbf6469be6,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT10dc623fcb8a3c151875f03d442103cbf6469be6 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMjE7CgovKioKICogQHRpdGxlIFNhZmVNYXRoCiAqIEBkZXYgTWF0aCBvcGVyYXRpb25zIHdpdGggc2FmZXR5IGNoZWNrcyB0aGF0IHRocm93IG9uIGVycm9yCiAqLwpsaWJyYXJ5IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSAqIGI7CiAgICBhc3NlcnQoYSA9PSAwIHx8IGMgLyBhID09IGIpOwogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBkaXYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSAvIGI7CiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhICsgYjsKICAgIGFzc2VydChjID49IGEpOwogICAgcmV0dXJuIGM7CiAgfQp9CgovKioKICogQHRpdGxlIG93bmVkCiAqIEBkZXYgVGhlIG93bmVkIGNvbnRyYWN0IGhhcyBhbiBvd25lciBhZGRyZXNzLCBhbmQgcHJvdmlkZXMgYmFzaWMgYXV0aG9yaXphdGlvbiBjb250cm9sCiAqIGZ1bmN0aW9ucywgdGhpcyBzaW1wbGlmaWVzIHRoZSBpbXBsZW1lbnRhdGlvbiBvZiAidXNlciBwZXJtaXNzaW9ucyIuCiAqLwpjb250cmFjdCBvd25lZCB7CiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKCiAgICBmdW5jdGlvbiBvd25lZCgpIHB1YmxpYyB7CiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgfQoKICAgIC8qKgogICAgICogQGRldiBUaHJvd3MgaWYgY2FsbGVkIGJ5IGFueSBhY2NvdW50IG90aGVyIHRoYW4gdGhlIG93bmVyLgogICAgICovCiAgICBtb2RpZmllciBvbmx5T3duZXIgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICAgICAgXzsKICAgIH0KCiAgICAvKioKICAgICAqIEBkZXYgQWxsb3dzIHRoZSBjdXJyZW50IG93bmVyIHRvIHRyYW5zZmVyIGNvbnRyb2wgb2YgdGhlIGNvbnRyYWN0IHRvIGEgbmV3T3duZXIuCiAgICAgKiBAcGFyYW0gbmV3T3duZXIgVGhlIGFkZHJlc3MgdG8gdHJhbnNmZXIgb3duZXJzaGlwIHRvLgogICAgICovCiAgICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld093bmVyKSBvbmx5T3duZXIgcHVibGljIHsKICAgICAgICBvd25lciA9IG5ld093bmVyOwogICAgfQp9CgovKioKICogQHRpdGxlIEJhc2ljIHRva2VuCiAqIEBkZXYgQmFzaWMgdmVyc2lvbiBvZiBTdGFuZGFyZFRva2VuLgogKi8KY29udHJhY3QgQmFzaWNUb2tlbiB7CiAgICB1c2luZyBTYWZlTWF0aCBmb3IgdWludDI1NjsKICAgIAogICAgdWludDI1NiAgICAgICBfc3VwcGx5OwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSAgICBfYmFsYW5jZXM7CiAgICAKICAgIGV2ZW50IFRyYW5zZmVyKCBhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHZhbHVlKTsKCiAgICBmdW5jdGlvbiBCYXNpY1Rva2VuKCkgcHVibGljIHsgICAgfQogICAgCiAgICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICByZXR1cm4gX3N1cHBseTsKICAgIH0KICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHJldHVybiBfYmFsYW5jZXNbX293bmVyXTsKICAgIH0KICAgIAogICAgLyoqCiAgICAgKiBAZGV2IHRyYW5zZmVyIHRva2VuIGZvciBhIHNwZWNpZmllZCBhZGRyZXNzCiAgICAgKiBAcGFyYW0gX3RvIFRoZSBhZGRyZXNzIHRvIHRyYW5zZmVyIHRvLgogICAgICogQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IHRvIGJlIHRyYW5zZmVycmVkLgogICAgICovCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICAgICAgcmVxdWlyZShfYmFsYW5jZXNbbXNnLnNlbmRlcl0gPj0gX3ZhbHVlKTsKICAgICAgICAKICAgICAgICBfYmFsYW5jZXNbbXNnLnNlbmRlcl0gPV9iYWxhbmNlc1ttc2cuc2VuZGVyXS5zdWIoX3ZhbHVlKTsKICAgICAgICBfYmFsYW5jZXNbX3RvXSA9X2JhbGFuY2VzW190b10uYWRkKF92YWx1ZSk7CiAgICAgICAgCiAgICAgICAgZW1pdCBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgCiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgCn0KCmNvbnRyYWN0IERlQmlUb2tlbiBpcyBCYXNpY1Rva2VuLG93bmVkIHsKICAgIHN0cmluZyAgY29uc3RhbnQgcHVibGljIHN5bWJvbCA9ICJEQiI7CiAgICBzdHJpbmcgIGNvbnN0YW50IHB1YmxpYyBuYW1lID0gIkRpZ2l0YWwgQmxvY2siOwogICAgdWludDI1NiBjb25zdGFudCBwdWJsaWMgZGVjaW1hbHMgPTY7IAogICAgdWludDI1NiBwdWJsaWMgbG9ja2VkQ291bnRzID0gOCooMTAqKjgpKigxMCoqNik7CiAgICB1aW50MjU2IHB1YmxpYyBlYWNoVW5sb2NrQ291bnRzID0gMiooMTAqKjgpKigxMCoqNik7CiAgICAvL2Nyb3dkU2FsZSBlbmQgdGltZSwgTWF5LzEwLzIwMTgKICAgIHVpbnQyNTYgcHVibGljIHN0YXJ0VGltZSA9IDE1MjU4ODE2MDA7CgogICAgc3RydWN0IExvY2tTdHJ1Y3QgewogICAgICAgIHVpbnQyNTYgdW5sb2NrVGltZTsKICAgICAgICBib29sIGxvY2tlZDsKICAgIH0KCiAgICBMb2NrU3RydWN0W10gcHVibGljIHVubG9ja1RpbWVNYXA7CgogICAgZnVuY3Rpb24gRGVCaVRva2VuKCkgcHVibGljIHsKICAgICAgICBfc3VwcGx5ID01MCooMTAqKjgpKigxMCoqNik7CiAgICAgICAgX2JhbGFuY2VzWzB4MDFdID0gbG9ja2VkQ291bnRzOwogICAgICAgICBfYmFsYW5jZXNbbXNnLnNlbmRlcl0gPV9zdXBwbHkuc3ViKGxvY2tlZENvdW50cyk7CgogICAgICAgIC8vIE5vdmVtYmVyLzEwLzIwMTgKICAgICAgICB1bmxvY2tUaW1lTWFwLnB1c2goTG9ja1N0cnVjdCh7dW5sb2NrVGltZToxNTQxNzc5MjAwLCBsb2NrZWQ6IHRydWV9KSk7IAogICAgICAgIC8vIE1heS8xMC8yMDE5CiAgICAgICAgdW5sb2NrVGltZU1hcC5wdXNoKExvY2tTdHJ1Y3Qoe3VubG9ja1RpbWU6MTU1NzQxNzYwMCwgbG9ja2VkOiB0cnVlfSkpOyAKICAgICAgICAvLyBOb3ZlbWJlci8xMC8yMDE5CiAgICAgICAgdW5sb2NrVGltZU1hcC5wdXNoKExvY2tTdHJ1Y3Qoe3VubG9ja1RpbWU6MTU3MzMxNTIwMCwgbG9ja2VkOiB0cnVlfSkpOyAKICAgICAgICAvLyBNYXkvMTAvMjAyMAogICAgICAgIHVubG9ja1RpbWVNYXAucHVzaChMb2NrU3RydWN0KHt1bmxvY2tUaW1lOjE1ODkwNDAwMDAsIGxvY2tlZDogdHJ1ZX0pKTsgCiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgICAgIHJlcXVpcmUgKG5vdyA+PSBzdGFydFRpbWUpOwoKICAgICAgICByZXR1cm4gc3VwZXIudHJhbnNmZXIoX3RvLCBfdmFsdWUpOwogICAgfQoKICAgIGZ1bmN0aW9uIGRpc3RyaWJ1dGUoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBvbmx5T3duZXIgcHVibGljIHJldHVybnMgKGJvb2wpIHsKCiAgICAgICAgcmV0dXJuIHN1cGVyLnRyYW5zZmVyKF90bywgX3ZhbHVlKTsKICAgIH0KCiAgICAvKioKICAgICAqIEBkZXYgdW5sb2NrICwgb25seSBjYW4gYmUgY2FsbGVkIGJ5IG93bmVyLgogICAgICovCiAgICBmdW5jdGlvbiB1bmxvY2sodWludDI1NiBfaW5kZXgpIG9ubHlPd25lciBwdWJsaWMgewogICAgICAgIHJlcXVpcmUoX2luZGV4Pj0wICYmIF9pbmRleDx1bmxvY2tUaW1lTWFwLmxlbmd0aCk7CiAgICAgICAgcmVxdWlyZShub3cgPj0gdW5sb2NrVGltZU1hcFtfaW5kZXhdLnVubG9ja1RpbWUgJiYgdW5sb2NrVGltZU1hcFtfaW5kZXhdLmxvY2tlZCk7CiAgICAgICAgcmVxdWlyZShfYmFsYW5jZXNbMHgwMV0gPj0gZWFjaFVubG9ja0NvdW50cyk7CgogICAgICAgIF9iYWxhbmNlc1sweDAxXSA9X2JhbGFuY2VzWzB4MDFdLnN1YihlYWNoVW5sb2NrQ291bnRzKTsKICAgICAgICBfYmFsYW5jZXNbb3duZXJdID1fYmFsYW5jZXNbb3duZXJdLmFkZChlYWNoVW5sb2NrQ291bnRzKTsKCiAgICAgICAgbG9ja2VkQ291bnRzID1sb2NrZWRDb3VudHMuc3ViKGVhY2hVbmxvY2tDb3VudHMpOwogICAgICAgIHVubG9ja1RpbWVNYXBbX2luZGV4XS5sb2NrZWQgPSBmYWxzZTsKCiAgICAgICAgZW1pdCBUcmFuc2ZlcigweDAxLCBvd25lciwgZWFjaFVubG9ja0NvdW50cyk7CiAgICB9Cn0='.
	

]
