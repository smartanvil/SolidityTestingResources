Class {
	#name : #SRT9464e7d6dc5e8f34d162f3ca190d788f8ce8cc13,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT9464e7d6dc5e8f34d162f3ca190d788f8ce8cc13 >> base64 [
	^ ''.
	

]
