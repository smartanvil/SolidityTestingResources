Class {
	#name : #SRT1a1770568f8ed3c64dab338dafd0ff9d7d642e12,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT1a1770568f8ed3c64dab338dafd0ff9d7d642e12 >> base64 [
	^ ''.
	

]
