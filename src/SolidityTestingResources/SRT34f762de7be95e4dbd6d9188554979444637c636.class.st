Class {
	#name : #SRT34f762de7be95e4dbd6d9188554979444637c636,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT34f762de7be95e4dbd6d9188554979444637c636 >> base64 [
	^ ''.
	

]
