Class {
	#name : #SRT63506243ff39b29c42c5fa64c73139ea6b4e8fe2,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT63506243ff39b29c42c5fa64c73139ea6b4e8fe2 >> base64 [
	^ ''.
	

]
