Class {
	#name : #SRT1e58880b774fae1856c39b1f4b769da000af330d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT1e58880b774fae1856c39b1f4b769da000af330d >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7Cgpjb250cmFjdCBGb3J0dW5lVG9rZW4gewogICAgYWRkcmVzcyBwdWJsaWMgYWRtaW47CgogICAgdWludCBldGhlcmV1bVRva2VuSW5pdFZhbHVlID0gNSBldGhlcjsKCiAgICB1aW50IGZvcnR1bmVJbml0VmFsdWUgPSAxIGV0aGVyOwoKICAgIHN0cnVjdCBFdGhlckZvcnR1bmVUb2tlbiB7CiAgICAgICAgYWRkcmVzcyBvd25lcjsKICAgICAgICB1aW50IHByaWNlOwogICAgfQoKICAgIHN0cnVjdCBGb3J0dW5lIHsKICAgICAgICBhZGRyZXNzIG93bmVyOwogICAgICAgIGFkZHJlc3MgYnV5ZXIxOwogICAgICAgIGFkZHJlc3MgYnV5ZXIyOwogICAgICAgIHVpbnQgcHJpY2U7CiAgICAgICAgdWludCBidXllcnM7CiAgICB9CgogICAgRXRoZXJGb3J0dW5lVG9rZW4gcHJpdmF0ZSBFdGhlcmV1bVRva2VuOwoKICAgIEZvcnR1bmVbXSBwcml2YXRlIGZvcnR1bmVzOwoKICAgIG1vZGlmaWVyIG9ubHlEZXYoKSB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gYWRtaW4pOwogICAgXzsKICAgIH0KCiAgICBmdW5jdGlvbiBGb3J0dW5lVG9rZW4oKSBwdWJsaWMgewogICAgICBhZG1pbiA9IG1zZy5zZW5kZXI7CgogICAgICBGb3J0dW5lIG1lbW9yeSBfZm9ydHVuZSA9IEZvcnR1bmUoewogICAgICAgICAgb3duZXI6IGFkZHJlc3ModGhpcyksCiAgICAgICAgICBidXllcjE6IGFkZHJlc3MoMCksCiAgICAgICAgICBidXllcjI6IGFkZHJlc3MoMCksCiAgICAgICAgICBwcmljZTogZm9ydHVuZUluaXRWYWx1ZSwKICAgICAgICAgIGJ1eWVyczogMAogICAgICB9KTsKCiAgICAgIGZvcnR1bmVzLnB1c2goX2ZvcnR1bmUpOwoKICAgICAgRXRoZXJGb3J0dW5lVG9rZW4gbWVtb3J5IF9mb3J0dW5lRXRoZXJldW1Ub2tlbiA9IEV0aGVyRm9ydHVuZVRva2VuKHsKICAgICAgICAgIG93bmVyOiBhZGRyZXNzKHRoaXMpLAogICAgICAgICAgcHJpY2U6IGV0aGVyZXVtVG9rZW5Jbml0VmFsdWUKICAgICAgfSk7CgogICAgICBFdGhlcmV1bVRva2VuID0gX2ZvcnR1bmVFdGhlcmV1bVRva2VuOwogICAgfQoKICAgIGZ1bmN0aW9uIGdldEZvcnR1bmUodWludCBpZCkgcHVibGljIHZpZXcgcmV0dXJucyAoYWRkcmVzcyBvd25lciwgYWRkcmVzcyBidXllcjEsIGFkZHJlc3MgYnV5ZXIyLCB1aW50IHByaWNlLCB1aW50IGJ1eWVycykgewogICAgICAgIEZvcnR1bmUgc3RvcmFnZSBfZm9ydHVuZSA9IGZvcnR1bmVzW2lkXTsKICAgICAgICBvd25lciA9IF9mb3J0dW5lLm93bmVyOwogICAgICAgIGJ1eWVyMSA9IF9mb3J0dW5lLmJ1eWVyMTsKICAgICAgICBidXllcjIgPSBfZm9ydHVuZS5idXllcjI7CiAgICAgICAgcHJpY2UgPSBfZm9ydHVuZS5wcmljZTsKICAgICAgICBidXllcnMgPSBfZm9ydHVuZS5idXllcnM7CiAgICB9CgogICAgZnVuY3Rpb24gcGF5Rm9ydHVuZSh1aW50IGlkKSBwdWJsaWMgcGF5YWJsZXsKICAgICAgICBGb3J0dW5lIHN0b3JhZ2UgX2ZvcnR1bmUgPSBmb3J0dW5lc1tpZF07CiAgICAgICAgcmVxdWlyZShfZm9ydHVuZS5idXllcjEgPT0gYWRkcmVzcygwKSB8fCBfZm9ydHVuZS5idXllcjIgPT0gYWRkcmVzcygwKSk7CiAgICAgICAgcmVxdWlyZShtc2cudmFsdWUgPT0gX2ZvcnR1bmUucHJpY2UpOwogICAgICAgIGlmIChfZm9ydHVuZS5idXllcjEgPT0gYWRkcmVzcygwKSkgewogICAgICAgICAgICBfZm9ydHVuZS5idXllcjEgPSBtc2cuc2VuZGVyOwogICAgICAgICAgICBfZm9ydHVuZS5idXllcnMrKzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBfZm9ydHVuZS5idXllcjIgPSBtc2cuc2VuZGVyOwogICAgICAgICAgICBGb3J0dW5lIG1lbW9yeSBuZXdGb3J0dW5lMSA9IEZvcnR1bmUoewogICAgICAgICAgICAgICAgb3duZXI6IF9mb3J0dW5lLmJ1eWVyMSwKICAgICAgICAgICAgICAgIGJ1eWVyMTogYWRkcmVzcygwKSwKICAgICAgICAgICAgICAgIGJ1eWVyMjogYWRkcmVzcygwKSwKICAgICAgICAgICAgICAgIHByaWNlOiBTYWZlTWF0aC5kaXYoU2FmZU1hdGgubXVsKF9mb3J0dW5lLnByaWNlLCAxMDApLCA5MCksCiAgICAgICAgICAgICAgICBidXllcnM6IDAKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIEZvcnR1bmUgbWVtb3J5IG5ld0ZvcnR1bmUyID0gRm9ydHVuZSh7CiAgICAgICAgICAgICAgICBvd25lcjogX2ZvcnR1bmUuYnV5ZXIyLAogICAgICAgICAgICAgICAgYnV5ZXIxOiBhZGRyZXNzKDApLAogICAgICAgICAgICAgICAgYnV5ZXIyOiBhZGRyZXNzKDApLAogICAgICAgICAgICAgICAgcHJpY2U6IFNhZmVNYXRoLmRpdihTYWZlTWF0aC5tdWwoX2ZvcnR1bmUucHJpY2UsIDEwMCksIDkwKSwKICAgICAgICAgICAgICAgIGJ1eWVyczogMAogICAgICAgICAgICB9KTsKICAgICAgICAgICAgZm9ydHVuZXMucHVzaChuZXdGb3J0dW5lMSk7CiAgICAgICAgICAgIGZvcnR1bmVzLnB1c2gobmV3Rm9ydHVuZTIpOwogICAgICAgICAgICBfZm9ydHVuZS5idXllcnMrKzsKICAgICAgICB9CiAgICAgICAgaWYgKF9mb3J0dW5lLm93bmVyICE9IGFkZHJlc3ModGhpcykpIHsKICAgICAgICAgICAgdWludDI1NiBwYXltZW50ID0gU2FmZU1hdGguZGl2KFNhZmVNYXRoLm11bChfZm9ydHVuZS5wcmljZSwgOTApLCAxMDApOwogICAgICAgICAgICBfZm9ydHVuZS5vd25lci50cmFuc2ZlcihwYXltZW50KTsKICAgICAgICB9CiAgICAgICAgaWYgKEV0aGVyZXVtVG9rZW4ub3duZXIgIT0gYWRkcmVzcyh0aGlzKSkgewogICAgICAgICAgICB1aW50MjU2IHBheW1lbnRFdGhlcmV1bVRva2VuRm9ydHVuZSA9IFNhZmVNYXRoLmRpdihTYWZlTWF0aC5tdWwoX2ZvcnR1bmUucHJpY2UsIDUpLCAxMDApOwogICAgICAgICAgICBFdGhlcmV1bVRva2VuLm93bmVyLnRyYW5zZmVyKHBheW1lbnRFdGhlcmV1bVRva2VuRm9ydHVuZSk7CiAgICAgICAgfQoKCgogICAgfQoKICAgIGZ1bmN0aW9uIGJ1eUV0aGVyZXVtVG9rZW4oKSBwdWJsaWMgcGF5YWJsZSB7CiAgICAgICAgcmVxdWlyZShFdGhlcmV1bVRva2VuLnByaWNlID09IG1zZy52YWx1ZSk7CiAgICAgICAgcmVxdWlyZShFdGhlcmV1bVRva2VuLm93bmVyICE9IG1zZy5zZW5kZXIpOwogICAgICAgIGFkZHJlc3MgbmV3T3duZXIgPSBtc2cuc2VuZGVyOwogICAgICAgIGlmIChFdGhlcmV1bVRva2VuLm93bmVyICE9IGFkZHJlc3ModGhpcykpIHsKICAgICAgICAgICAgdWludDI1NiBwYXltZW50ID0gU2FmZU1hdGguZGl2KFNhZmVNYXRoLm11bChFdGhlcmV1bVRva2VuLnByaWNlLCA5MCksIDEwMCk7CiAgICAgICAgICAgIEV0aGVyZXVtVG9rZW4ub3duZXIudHJhbnNmZXIocGF5bWVudCk7CiAgICAgICAgfQogICAgICAgIEV0aGVyZXVtVG9rZW4ub3duZXIgPSBuZXdPd25lcjsKICAgICAgICBFdGhlcmV1bVRva2VuLnByaWNlID0gU2FmZU1hdGguZGl2KFNhZmVNYXRoLm11bChFdGhlcmV1bVRva2VuLnByaWNlLCAxMjApLCA5MCk7CgogICAgfQoKICAgIGZ1bmN0aW9uIGdldEV0aGVyZXVtVG9rZW4oKSBwdWJsaWMgdmlldyByZXR1cm5zIChhZGRyZXNzIG93bmVyLCB1aW50IHByaWNlKSB7CiAgICAgICAgRXRoZXJGb3J0dW5lVG9rZW4gc3RvcmFnZSBfZm9ydHVuZUV0aGVyZXVtVG9rZW4gPSBFdGhlcmV1bVRva2VuOwogICAgICAgIG93bmVyID0gX2ZvcnR1bmVFdGhlcmV1bVRva2VuLm93bmVyOwogICAgICAgIHByaWNlID0gX2ZvcnR1bmVFdGhlcmV1bVRva2VuLnByaWNlOwogICAgfQoKICAgIGZ1bmN0aW9uIHRvdGFsRm9ydHVuZXMoKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50KSB7CiAgICAgICAgcmV0dXJuIGZvcnR1bmVzLmxlbmd0aDsKICAgIH0KCiAgICBmdW5jdGlvbiBnZXRCYWxhbmNlKCkgcHVibGljIHZpZXcgcmV0dXJucyAodWludCkgewogICAgICAgIHJldHVybiB0aGlzLmJhbGFuY2U7CiAgICB9CgogICAgZnVuY3Rpb24gd2l0aGRyYXcoYWRkcmVzcyBfdG8pIHB1YmxpYyBvbmx5RGV2ewogICAgICAgIGlmIChfdG8gIT0gYWRkcmVzcygwKSkgewogICAgICAgICAgICBfdG8udHJhbnNmZXIodGhpcy5iYWxhbmNlKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBhZG1pbi50cmFuc2Zlcih0aGlzLmJhbGFuY2UpOwogICAgICAgIH0KICAgIH0KCgoKfQoKCgoKCmxpYnJhcnkgU2FmZU1hdGggewoKICAvKioKICAqIEBkZXYgTXVsdGlwbGllcyB0d28gbnVtYmVycywgdGhyb3dzIG9uIG92ZXJmbG93LgogICovCiAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIGlmIChhID09IDApIHsKICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICB1aW50MjU2IGMgPSBhICogYjsKICAgIGFzc2VydChjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgLyoqCiAgKiBAZGV2IEludGVnZXIgZGl2aXNpb24gb2YgdHdvIG51bWJlcnMsIHRydW5jYXRpbmcgdGhlIHF1b3RpZW50LgogICovCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIC8vIGFzc2VydChiID4gMCk7IC8vIFNvbGlkaXR5IGF1dG9tYXRpY2FsbHkgdGhyb3dzIHdoZW4gZGl2aWRpbmcgYnkgMAogICAgdWludDI1NiBjID0gYSAvIGI7CiAgICAvLyBhc3NlcnQoYSA9PSBiICogYyArIGEgJSBiKTsgLy8gVGhlcmUgaXMgbm8gY2FzZSBpbiB3aGljaCB0aGlzIGRvZXNuJ3QgaG9sZAogICAgcmV0dXJuIGM7CiAgfQoKICAvKioKICAqIEBkZXYgU3Vic3RyYWN0cyB0d28gbnVtYmVycywgdGhyb3dzIG9uIG92ZXJmbG93IChpLmUuIGlmIHN1YnRyYWhlbmQgaXMgZ3JlYXRlciB0aGFuIG1pbnVlbmQpLgogICovCiAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIGFzc2VydChiIDw9IGEpOwogICAgcmV0dXJuIGEgLSBiOwogIH0KCiAgLyoqCiAgKiBAZGV2IEFkZHMgdHdvIG51bWJlcnMsIHRocm93cyBvbiBvdmVyZmxvdy4KICAqLwogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhICsgYjsKICAgIGFzc2VydChjID49IGEpOwogICAgcmV0dXJuIGM7CiAgfQp9'.
	

]
