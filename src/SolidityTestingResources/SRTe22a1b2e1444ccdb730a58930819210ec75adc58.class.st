Class {
	#name : #SRTe22a1b2e1444ccdb730a58930819210ec75adc58,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTe22a1b2e1444ccdb730a58930819210ec75adc58 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTM7CgovKgoKTElOSyBmdW5kcyBwb29sCj09PT09PT09PT09PT09PT09PT09PT09PQoKKi8KCi8vIEVSQzIwIEludGVyZmFjZTogaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL0VJUHMvaXNzdWVzLzIwCmNvbnRyYWN0IEVSQzIwIHsKICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpOwp9Cgpjb250cmFjdCBMSU5LRnVuZCB7CiAgLy8gU3RvcmUgdGhlIGFtb3VudCBvZiBFVEggZGVwb3NpdGVkIGJ5IGVhY2ggYWNjb3VudC4KICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBiYWxhbmNlczsKICAKICAvLyBUcmFjayB3aGV0aGVyIHRoZSBjb250cmFjdCBoYXMgYm91Z2h0IHRoZSB0b2tlbnMgeWV0LgogIGJvb2wgcHVibGljIGJvdWdodF90b2tlbnM7CiAgCiAgLy8gUmVjb3JkIEVUSCB2YWx1ZSBvZiB0b2tlbnMgY3VycmVudGx5IGhlbGQgYnkgY29udHJhY3QuCiAgdWludDI1NiBwdWJsaWMgY29udHJhY3RfZXRoX3ZhbHVlOwogIAogIC8vIFRoZSBtaW5pbXVtIGFtb3VudCBvZiBFVEggdGhhdCBtdXN0IGJlIGRlcG9zaXRlZCBiZWZvcmUgdGhlIGJ1eS1pbiBjYW4gYmUgcGVyZm9ybWVkLgogIHVpbnQyNTYgY29uc3RhbnQgcHVibGljIG1pbl9yZXF1aXJlZF9hbW91bnQgPSAxMDAgZXRoZXI7CiAgCiAgLy8gVGhlIG1heGltdW0gYW1vdW50IG9mIEVUSCB0aGF0IGNhbiBiZSBkZXBvc2l0ZWQgaW50byB0aGUgY29udHJhY3QuCiAgdWludDI1NiBwdWJsaWMgbWF4X3JhaXNlZF9hbW91bnQgPSAzMDAgZXRoZXI7CiAgCiAgLy8gVGhlIGZpcnN0IGJsb2NrIGFmdGVyIHdoaWNoIGJ1eS1pbiBpcyBhbGxvd2VkLiBTZXQgaW4gdGhlIGNvbnRyYWN0IGNvbnN0cnVjdG9yLgogIHVpbnQyNTYgcHVibGljIG1pbl9idXlfYmxvY2s7CiAgCiAgLy8gVGhlIGZpcnN0IGJsb2NrIGFmdGVyIHdoaWNoIGEgcmVmdW5kIGlzIGFsbG93ZWQuIFNldCBpbiB0aGUgY29udHJhY3QgY29uc3RydWN0b3IuCiAgdWludDI1NiBwdWJsaWMgbWluX3JlZnVuZF9ibG9jazsKICAKICAvLyBUaGUgY3Jvd2RzYWxlIGFkZHJlc3MuIEFkZHJlc3MgY2FuIGJlIHZlcmlmaWVkIGF0OiBodHRwczovL2xpbmsuc21hcnRjb250cmFjdC5jb20vcHJlc2FsZXMvMGNjOWFmZWQtYzMzYS00MjY0LWJkZjctNWY1YzY3NWMxZTc2CiAgYWRkcmVzcyBjb25zdGFudCBwdWJsaWMgc2FsZSA9IDB4QzhFMjNiQTFmNDIzODEyRWNhODY4MTg5MDcyNzIyRDgyMmZDQUZDMTsKCiAgYWRkcmVzcyBjb25zdGFudCBwdWJsaWMgY3JlYXRvciA9IDB4RGU4MUIyMEI2ODAxZDk5RUZFYUVjRWQ0OGExMWJhMDI1MTgwYjhjYzsKICAKICAvLyBDb25zdHJ1Y3Rvci4gCiAgZnVuY3Rpb24gTElOS0Z1bmQoKSB7CiAgICAvLyA0MjE3NTU3ICsgKDYwKjYwKjI0LzI1KSBiZWNhdXNlIDEgYmxvY2sgaXMgbWluZWQgZXZlcnkgMjUgc2Vjb25kcwogICAgbWluX2J1eV9ibG9jayA9IDQyMjEwMTM7CiAgICAKICAgIC8vIDQyMTc1NTcgKyAoNjAqNjAqMjQqNjAvMjUpIGlmIHRoZSBkZXZzIHJlZnVuZCB0aGUgZXRoLCAyMCBkYXlzCiAgICBtaW5fcmVmdW5kX2Jsb2NrID0gNDI4NjY3NzsKICB9CiAgCiAgLy8gQWxsb3dzIGFueSB1c2VyIHRvIHdpdGhkcmF3IGhpcyB0b2tlbnMuCiAgLy8gVGFrZXMgdGhlIHRva2VuJ3MgRVJDMjAgYWRkcmVzcyBhcyBhcmd1bWVudCBhcyBpdCBpcyB1bmtub3duIGF0IHRoZSB0aW1lIG9mIGNvbnRyYWN0IGRlcGxveW1lbnQuCiAgLy9XaGVuIHRoZSBkZXZzIHdpbGwgc2VuZCB0aGUgdG9rZW5zLCB5b3Ugd2lsbCBoYXZlIHRvIGNhbGwgdGhpcyBmdW5jdGlvbiBhbmQgcGFzcyB0aGUgRVJDMjAgdG9rZW4gYWRkcmVzcyBvZiBMSU5LCiAgZnVuY3Rpb24gcGVyZm9ybV93aXRoZHJhdyhhZGRyZXNzIHRva2VuQWRkcmVzcykgewogICAgLy8gRGlzYWxsb3cgd2l0aGRyYXcgaWYgdG9rZW5zIGhhdmVuJ3QgYmVlbiBib3VnaHQgeWV0LgogICAgaWYgKCFib3VnaHRfdG9rZW5zKSB0aHJvdzsKICAgIAogICAgLy8gUmV0cmlldmUgY3VycmVudCB0b2tlbiBiYWxhbmNlIG9mIGNvbnRyYWN0LgogICAgRVJDMjAgdG9rZW4gPSBFUkMyMCh0b2tlbkFkZHJlc3MpOwogICAgdWludDI1NiBjb250cmFjdF90b2tlbl9iYWxhbmNlID0gdG9rZW4uYmFsYW5jZU9mKGFkZHJlc3ModGhpcykpOwogICAgICAKICAgIC8vIERpc2FsbG93IHRva2VuIHdpdGhkcmF3YWxzIGlmIHRoZXJlIGFyZSBubyB0b2tlbnMgdG8gd2l0aGRyYXcuCiAgICBpZiAoY29udHJhY3RfdG9rZW5fYmFsYW5jZSA9PSAwKSB0aHJvdzsKICAgICAgCiAgICAvLyBTdG9yZSB0aGUgdXNlcidzIHRva2VuIGJhbGFuY2UgaW4gYSB0ZW1wb3JhcnkgdmFyaWFibGUuCiAgICB1aW50MjU2IHRva2Vuc190b193aXRoZHJhdyA9IChiYWxhbmNlc1ttc2cuc2VuZGVyXSAqIGNvbnRyYWN0X3Rva2VuX2JhbGFuY2UpIC8gY29udHJhY3RfZXRoX3ZhbHVlOwogICAgICAKICAgIC8vIFVwZGF0ZSB0aGUgdmFsdWUgb2YgdG9rZW5zIGN1cnJlbnRseSBoZWxkIGJ5IHRoZSBjb250cmFjdC4KICAgIGNvbnRyYWN0X2V0aF92YWx1ZSAtPSBiYWxhbmNlc1ttc2cuc2VuZGVyXTsKICAgICAgCiAgICAvLyBVcGRhdGUgdGhlIHVzZXIncyBiYWxhbmNlIHByaW9yIHRvIHNlbmRpbmcgdG8gcHJldmVudCByZWN1cnNpdmUgY2FsbC4KICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gMDsKCiAgICAvLyBTZW5kIHRoZSBmdW5kcy4gIFRocm93cyBvbiBmYWlsdXJlIHRvIHByZXZlbnQgbG9zcyBvZiBmdW5kcy4KICAgIGlmKCF0b2tlbi50cmFuc2Zlcihtc2cuc2VuZGVyLCB0b2tlbnNfdG9fd2l0aGRyYXcpKSB0aHJvdzsKICB9CiAgCiAgLy8gQWxsb3dzIGFueSB1c2VyIHRvIGdldCBoaXMgZXRoIHJlZnVuZGVkIGJlZm9yZSB0aGUgcHVyY2hhc2UgaXMgbWFkZSBvciBhZnRlciBhcHByb3guIDIwIGRheXMgaW4gY2FzZSB0aGUgZGV2cyByZWZ1bmQgdGhlIGV0aC4KICBmdW5jdGlvbiByZWZ1bmRfbWUoKSB7CiAgICBpZiAoYm91Z2h0X3Rva2VucykgewogICAgICAvLyBPbmx5IGFsbG93IHJlZnVuZHMgd2hlbiB0aGUgdG9rZW5zIGhhdmUgYmVlbiBib3VnaHQgaWYgdGhlIG1pbmltdW0gcmVmdW5kIGJsb2NrIGhhcyBiZWVuIHJlYWNoZWQuCiAgICAgIGlmIChibG9jay5udW1iZXIgPCBtaW5fcmVmdW5kX2Jsb2NrKSB0aHJvdzsKICAgIH0KICAgIAogICAgLy8gU3RvcmUgdGhlIHVzZXIncyBiYWxhbmNlIHByaW9yIHRvIHdpdGhkcmF3YWwgaW4gYSB0ZW1wb3JhcnkgdmFyaWFibGUuCiAgICB1aW50MjU2IGV0aF90b193aXRoZHJhdyA9IGJhbGFuY2VzW21zZy5zZW5kZXJdOwogICAgICAKICAgIC8vIFVwZGF0ZSB0aGUgdXNlcidzIGJhbGFuY2UgcHJpb3IgdG8gc2VuZGluZyBFVEggdG8gcHJldmVudCByZWN1cnNpdmUgY2FsbC4KICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gMDsKICAgICAgCiAgICAvLyBSZXR1cm4gdGhlIHVzZXIncyBmdW5kcy4gIFRocm93cyBvbiBmYWlsdXJlIHRvIHByZXZlbnQgbG9zcyBvZiBmdW5kcy4KICAgIG1zZy5zZW5kZXIudHJhbnNmZXIoZXRoX3RvX3dpdGhkcmF3KTsKICB9CiAgCiAgLy8gQnV5IHRoZSB0b2tlbnMuIFNlbmRzIEVUSCB0byB0aGUgcHJlc2FsZSB3YWxsZXQgYW5kIHJlY29yZHMgdGhlIEVUSCBhbW91bnQgaGVsZCBpbiB0aGUgY29udHJhY3QuCiAgZnVuY3Rpb24gYnV5X3RoZV90b2tlbnMoKSB7CiAgICAvLyBTaG9ydCBjaXJjdWl0IHRvIHNhdmUgZ2FzIGlmIHRoZSBjb250cmFjdCBoYXMgYWxyZWFkeSBib3VnaHQgdG9rZW5zLgogICAgaWYgKGJvdWdodF90b2tlbnMpIHJldHVybjsKICAgIAogICAgLy8gVGhyb3cgaWYgdGhlIGNvbnRyYWN0IGJhbGFuY2UgaXMgbGVzcyB0aGFuIHRoZSBtaW5pbXVtIHJlcXVpcmVkIGFtb3VudAogICAgaWYgKHRoaXMuYmFsYW5jZSA8IG1pbl9yZXF1aXJlZF9hbW91bnQpIHRocm93OwogICAgCiAgICAvLyBUaHJvdyBpZiB0aGUgbWluaW11bSBidXktaW4gYmxvY2sgaGFzbid0IGJlZW4gcmVhY2hlZAogICAgaWYgKGJsb2NrLm51bWJlciA8IG1pbl9idXlfYmxvY2spIHRocm93OwogICAgCiAgICAvLyBSZWNvcmQgdGhhdCB0aGUgY29udHJhY3QgaGFzIGJvdWdodCB0aGUgdG9rZW5zLgogICAgYm91Z2h0X3Rva2VucyA9IHRydWU7CiAgICAKICAgIC8vIFJlY29yZCB0aGUgYW1vdW50IG9mIEVUSCBzZW50IGFzIHRoZSBjb250cmFjdCdzIGN1cnJlbnQgdmFsdWUuCiAgICBjb250cmFjdF9ldGhfdmFsdWUgPSB0aGlzLmJhbGFuY2U7CgogICAgLy8gVHJhbnNmZXIgYWxsIHRoZSBmdW5kcyB0byB0aGUgY3Jvd2RzYWxlIGFkZHJlc3MuCiAgICBzYWxlLnRyYW5zZmVyKGNvbnRyYWN0X2V0aF92YWx1ZSk7CiAgfQoKICAvLyBBIGhlbHBlciBmdW5jdGlvbiBmb3IgdGhlIGRlZmF1bHQgZnVuY3Rpb24sIGFsbG93aW5nIGNvbnRyYWN0cyB0byBpbnRlcmFjdC4KICBmdW5jdGlvbiBkZWZhdWx0X2hlbHBlcigpIHBheWFibGUgewogICAgLy8gVGhyb3cgaWYgdGhlIGJhbGFuY2UgaXMgbGFyZ2VyIHRoYW4gdGhlIG1heGltdW0gYWxsb3dlZCBhbW91bnQuCiAgICBpZiAodGhpcy5iYWxhbmNlID4gbWF4X3JhaXNlZF9hbW91bnQpIHRocm93OwogICAgCiAgICAvLyBVcGRhdGUgcmVjb3JkcyBvZiBkZXBvc2l0ZWQgRVRIIHRvIGluY2x1ZGUgdGhlIHJlY2VpdmVkIGFtb3VudCBidXQgb25seSBpZiB0aGUgYnV5LWluIGhhc24ndCBiZWVuIGRvbmUgeWV0LgogICAgLy8gVGhpcyB3aWxsIGhhbmRsZSBhbiBldmVudHVhbCByZWZ1bmQgZnJvbSB0aGUgZGV2cyB3aGlsZSBkaXNhbGxvd2luZyBidXktaW5zIGFmdGVyIHRoZSBkZWFkbGluZS4KICAgIGlmICghYm91Z2h0X3Rva2VucykgewogICAgICAvLzEwJSBmZWUgZm9yIHRoZSBjcmVhdG9yCiAgICAgIHVpbnQyNTYgZmVlID0gbXNnLnZhbHVlIC8gMTA7CiAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdICs9IG1zZy52YWx1ZSAtIGZlZTsKICAgICAgY3JlYXRvci50cmFuc2ZlcihmZWUpOwogICAgfQogIH0KICAKICAvLyBEZWZhdWx0IGZ1bmN0aW9uLiAgQ2FsbGVkIHdoZW4gYSB1c2VyIHNlbmRzIEVUSCB0byB0aGUgY29udHJhY3QuCiAgZnVuY3Rpb24gKCkgcGF5YWJsZSB7CiAgICAvLyBEZWxlZ2F0ZSB0byB0aGUgaGVscGVyIGZ1bmN0aW9uLgogICAgZGVmYXVsdF9oZWxwZXIoKTsKICB9Cn0='.
	

]
