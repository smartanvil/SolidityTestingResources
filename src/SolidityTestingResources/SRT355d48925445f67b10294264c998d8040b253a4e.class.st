Class {
	#name : #SRT355d48925445f67b10294264c998d8040b253a4e,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT355d48925445f67b10294264c998d8040b253a4e >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMDsKCmludGVyZmFjZSBFUkMyMCB7CiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50KTsKICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludCBfdmFsdWUpOwp9CgppbnRlcmZhY2UgRVJDMjIzIHsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSwgYnl0ZXMgX2RhdGEpIHB1YmxpYyByZXR1cm5zIChib29sKTsKICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBmcm9tLCBhZGRyZXNzIGluZGV4ZWQgdG8sIHVpbnQgdmFsdWUsIGJ5dGVzIGluZGV4ZWQgZGF0YSk7Cn0KCmNvbnRyYWN0IEVSQzIyM1JlY2VpdmluZ0NvbnRyYWN0IHsKICAgIGZ1bmN0aW9uIHRva2VuRmFsbGJhY2soYWRkcmVzcyBfZnJvbSwgdWludCBfdmFsdWUsIGJ5dGVzIF9kYXRhKSBwdWJsaWM7Cn0KCmNvbnRyYWN0IFRva2VuIHsKICAgIHN0cmluZyBpbnRlcm5hbCBfc3ltYm9sOwogICAgc3RyaW5nIGludGVybmFsIF9uYW1lOwogICAgdWludDggaW50ZXJuYWwgX2RlY2ltYWxzOwogICAgdWludCBpbnRlcm5hbCBfdG90YWxTdXBwbHkgPSAxMDAwOwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50KSBpbnRlcm5hbCBfYmFsYW5jZU9mOwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQpKSBpbnRlcm5hbCBfYWxsb3dhbmNlczsKCiAgICBmdW5jdGlvbiBUb2tlbihzdHJpbmcgc3ltYm9sLCBzdHJpbmcgbmFtZSwgdWludDggZGVjaW1hbHMsIHVpbnQgdG90YWxTdXBwbHkpIHB1YmxpYyB7CiAgICAgICAgX3N5bWJvbCA9IHN5bWJvbDsKICAgICAgICBfbmFtZSA9IG5hbWU7CiAgICAgICAgX2RlY2ltYWxzID0gZGVjaW1hbHM7CiAgICAgICAgX3RvdGFsU3VwcGx5ID0gdG90YWxTdXBwbHk7CiAgICB9CgogICAgZnVuY3Rpb24gbmFtZSgpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zIChzdHJpbmcpIHsKICAgICAgICByZXR1cm4gX25hbWU7CiAgICB9CgogICAgZnVuY3Rpb24gc3ltYm9sKCkgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHN0cmluZykgewogICAgICAgIHJldHVybiBfc3ltYm9sOwogICAgfQoKICAgIGZ1bmN0aW9uIGRlY2ltYWxzKCkgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQ4KSB7CiAgICAgICAgcmV0dXJuIF9kZWNpbWFsczsKICAgIH0KCiAgICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50KSB7CiAgICAgICAgcmV0dXJuIF90b3RhbFN1cHBseTsKICAgIH0KCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfYWRkcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQpOwogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQgX3ZhbHVlKTsKfQoKbGlicmFyeSBTYWZlTWF0aCB7CiAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIC8vIGFzc2VydChiID4gMCk7IC8vIFNvbGlkaXR5IGF1dG9tYXRpY2FsbHkgdGhyb3dzIHdoZW4gZGl2aWRpbmcgYnkgMAogICAgdWludDI1NiBjID0gYSAvIGI7CiAgICAvLyBhc3NlcnQoYSA9PSBiICogYyArIGEgJSBiKTsgLy8gVGhlcmUgaXMgbm8gY2FzZSBpbiB3aGljaCB0aGlzIGRvZXNuJ3QgaG9sZAogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBzdWIodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KfQoKY29udHJhY3QgTEdDQ29pbiBpcyBUb2tlbigiTEdDIiwgIkxHQy1Db2luIiwgMiwgNjAwMDAwMDAwKSwgRVJDMjAsIEVSQzIyMyB7CgogICAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQ7CgogICAgZnVuY3Rpb24gTEdDQ29pbigpIHB1YmxpYyB7CiAgICAgICAgX2JhbGFuY2VPZlttc2cuc2VuZGVyXSA9IF90b3RhbFN1cHBseTsKICAgIH0KCiAgICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50KSB7CiAgICAgICAgcmV0dXJuIF90b3RhbFN1cHBseTsKICAgIH0KCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfYWRkcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQpIHsKICAgICAgICByZXR1cm4gX2JhbGFuY2VPZltfYWRkcl07CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgICAgIGlmIChfdmFsdWUgPiAwICYmCiAgICAgICAgICAgIF92YWx1ZSA8PSBfYmFsYW5jZU9mW21zZy5zZW5kZXJdICYmCiAgICAgICAgICAgICFpc0NvbnRyYWN0KF90bykpIHsKICAgICAgICAgICAgX2JhbGFuY2VPZlttc2cuc2VuZGVyXSA9IF9iYWxhbmNlT2ZbbXNnLnNlbmRlcl0uc3ViKF92YWx1ZSk7CiAgICAgICAgICAgIF9iYWxhbmNlT2ZbX3RvXSA9IF9iYWxhbmNlT2ZbX3RvXS5hZGQoX3ZhbHVlKTsKICAgICAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSwgYnl0ZXMgX2RhdGEpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICAgICAgaWYgKF92YWx1ZSA+IDAgJiYKICAgICAgICAgICAgX3ZhbHVlIDw9IF9iYWxhbmNlT2ZbbXNnLnNlbmRlcl0gJiYKICAgICAgICAgICAgaXNDb250cmFjdChfdG8pKSB7CiAgICAgICAgICAgIF9iYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPSBfYmFsYW5jZU9mW21zZy5zZW5kZXJdLnN1YihfdmFsdWUpOwogICAgICAgICAgICBfYmFsYW5jZU9mW190b10gPSBfYmFsYW5jZU9mW190b10uYWRkKF92YWx1ZSk7CiAgICAgICAgICAgIEVSQzIyM1JlY2VpdmluZ0NvbnRyYWN0IF9jb250cmFjdCA9IEVSQzIyM1JlY2VpdmluZ0NvbnRyYWN0KF90byk7CiAgICAgICAgICAgIF9jb250cmFjdC50b2tlbkZhbGxiYWNrKG1zZy5zZW5kZXIsIF92YWx1ZSwgX2RhdGEpOwogICAgICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSwgX2RhdGEpOwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQoKICAgIGZ1bmN0aW9uIGlzQ29udHJhY3QoYWRkcmVzcyBfYWRkcikgcHJpdmF0ZSBjb25zdGFudCByZXR1cm5zIChib29sKSB7CiAgICAgICAgdWludCBjb2RlU2l6ZTsKICAgICAgICBhc3NlbWJseSB7CiAgICAgICAgICAgIGNvZGVTaXplIDo9IGV4dGNvZGVzaXplKF9hZGRyKQogICAgICAgIH0KICAgICAgICByZXR1cm4gY29kZVNpemUgPiAwOwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludCBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICAgICAgaWYgKF9hbGxvd2FuY2VzW19mcm9tXVttc2cuc2VuZGVyXSA+IDAgJiYKICAgICAgICAgICAgX3ZhbHVlID4gMCAmJgogICAgICAgICAgICBfYWxsb3dhbmNlc1tfZnJvbV1bbXNnLnNlbmRlcl0gPj0gX3ZhbHVlICYmCiAgICAgICAgICAgIF9iYWxhbmNlT2ZbX2Zyb21dID49IF92YWx1ZSkgewogICAgICAgICAgICBfYmFsYW5jZU9mW19mcm9tXSA9IF9iYWxhbmNlT2ZbX2Zyb21dLnN1YihfdmFsdWUpOwogICAgICAgICAgICBfYmFsYW5jZU9mW190b10gPSBfYmFsYW5jZU9mW190b10uYWRkKF92YWx1ZSk7CiAgICAgICAgICAgIF9hbGxvd2FuY2VzW19mcm9tXVttc2cuc2VuZGVyXSA9IF9hbGxvd2FuY2VzW19mcm9tXVttc2cuc2VuZGVyXS5zdWIoX3ZhbHVlKTsKICAgICAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfQogICAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgICAgIF9hbGxvd2FuY2VzW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF9hbGxvd2FuY2VzW21zZy5zZW5kZXJdW19zcGVuZGVyXS5hZGQoX3ZhbHVlKTsKICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50KSB7CiAgICAgICAgcmV0dXJuIF9hbGxvd2FuY2VzW19vd25lcl1bX3NwZW5kZXJdOwogICAgfQp9'.
	

]
