Class {
	#name : #SRT01e53a2e7122a63845b1c329d4fce8124dda5b06,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT01e53a2e7122a63845b1c329d4fce8124dda5b06 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTY7Cgpjb250cmFjdCBCYXNlIAp7CiAgICBhZGRyZXNzIENyZWF0b3IgPSBtc2cuc2VuZGVyOwogICAgYWRkcmVzcyBPd25lcl8wMSA9IG1zZy5zZW5kZXI7CiAgICBhZGRyZXNzIE93bmVyXzAyOwogICAgYWRkcmVzcyBPd25lcl8wMzsKICAgIAogICAgZnVuY3Rpb24gYWRkKHVpbnQyNTYgeCwgdWludDI1NiB5KSAKICAgIGludGVybmFsIAogICAgcmV0dXJucyAodWludDI1NikgCiAgICB7CiAgICAgICAgdWludDI1NiB6ID0geCArIHk7CiAgICAgICAgaWYoKHogPj0geCkgJiYgKHogPj0geSkpCiAgICAgICAgewogICAgICAgICAgcmV0dXJuIHo7CiAgICAgICAgfQogICAgICAgIGVsc2UKICAgICAgICB7CiAgICAgICAgICAgIHJldmVydCgpOwogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBzdWIodWludDI1NiB4LCB1aW50MjU2IHkpIAogICAgaW50ZXJuYWwgCiAgICByZXR1cm5zICh1aW50MjU2KSAKICAgIHsKICAgICAgICBpZih4ID49IHkpCiAgICAgICAgewogICAgICAgICAgIHVpbnQyNTYgeiA9IHggLSB5OwogICAgICAgICAgIHJldHVybiB6OwogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICByZXZlcnQoKTsKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgeCwgdWludDI1NiB5KSAKICAgIGludGVybmFsIAogICAgcmV0dXJucyAodWludDI1NikgCiAgICB7CiAgICAgICAgdWludDI1NiB6ID0geCAqIHk7CiAgICAgICAgaWYoKHggPT0gMCkgfHwgKHogLyB4ID09IHkpKQogICAgICAgIHsKICAgICAgICAgICAgcmV0dXJuIHo7CiAgICAgICAgfQogICAgICAgIGVsc2UKICAgICAgICB7CiAgICAgICAgICAgIHJldmVydCgpOwogICAgICAgIH0KICAgIH0KICAgIAogICAgZXZlbnQgRGVwb3NpdChhZGRyZXNzIGluZGV4ZWQgc2VuZGVyLCB1aW50IHZhbHVlKTsKICAgIAogICAgZXZlbnQgSW52ZXN0KGFkZHJlc3MgaW5kZXhlZCBzZW5kZXIsIHVpbnQgdmFsdWUpOwogICAgCiAgICBldmVudCBSZWZvdW5kKGFkZHJlc3MgaW5kZXhlZCBzZW5kZXIsIHVpbnQgdmFsdWUpOwogICAgCiAgICBldmVudCBXaXRoZHJhdyhhZGRyZXNzIGluZGV4ZWQgc2VuZGVyLCB1aW50IHZhbHVlKTsKICAgIAogICAgZXZlbnQgTG9nKHN0cmluZyBtZXNzYWdlKTsKfQoKY29udHJhY3QgTG9hbiBpcyBCYXNlCnsKICAgIHN0cnVjdCBDcmVkaXRvcgogICAgewogICAgICAgIHVpbnQgVGltZTsKICAgICAgICB1aW50IEludmVzdGVkOwogICAgfQogICAgCiAgICB1aW50IHB1YmxpYyBUb3RhbEludmVzdGVkOwogICAgdWludCBwdWJsaWMgQXZhaWxhYmxlOwogICAgdWludCBwdWJsaWMgSW52ZXN0b3JzUXR5OwogICAgdWludCBwdWJsaWMgcHJjbnRSYXRlID0gMTsKICAgIGJvb2wgQ2FuUmVmb3VuZDsKICAgIAogICAgYWRkcmVzcyBPd25lcl8wbDsKICAgIGFkZHJlc3MgT3duZXJfMDI7CiAgICBhZGRyZXNzIE93bmVyXzAzOwogICAgCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQpIHB1YmxpYyBJbnZlc3RvcnM7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IENyZWRpdG9yKSBwdWJsaWMgQ3JlZGl0b3JzOwogICAgCiAgICBmdW5jdGlvbiBpbml0TG9hbigpCiAgICB7CiAgICAgICAgT3duZXJfMGwgPSBtc2cuc2VuZGVyOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBTZXRTY25kT3duZXIoYWRkcmVzcyBhZGRyKSAKICAgIHB1YmxpYyAKICAgIHsKICAgICAgICByZXF1aXJlKChtc2cuc2VuZGVyID09IE93bmVyXzAyKXx8KG1zZy5zZW5kZXI9PUNyZWF0b3IpKTsKICAgICAgICBPd25lcl8wMiA9IGFkZHI7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIFNldFRocmRPd25lcihhZGRyZXNzIGFkZHIpIAogICAgcHVibGljIAogICAgewogICAgICAgIHJlcXVpcmUoKG1zZy5zZW5kZXIgPT0gT3duZXJfMDIpfHwobXNnLnNlbmRlcj09Q3JlYXRvcikpOwogICAgICAgIE93bmVyXzAzID0gYWRkcjsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gU2V0UHJjbnRSYXRlKHVpbnQgdmFsKQogICAgcHVibGljCiAgICB7CiAgICAgICAgaWYodmFsPj0xJiZtc2cuc2VuZGVyPT1DcmVhdG9yKQogICAgICAgIHsKICAgICAgICAgICAgcHJjbnRSYXRlID0gdmFsOyAgCiAgICAgICAgfQogICAgfQogICAgCiAgICBmdW5jdGlvbiBTdGFydFJlZm91bmQoYm9vbCB2YWwpCiAgICBwdWJsaWMKICAgIHsKICAgICAgICBpZihtc2cuc2VuZGVyPT1DcmVhdG9yKQogICAgICAgIHsgCiAgICAgICAgICAgIENhblJlZm91bmQgPSB2YWw7CiAgICAgICAgfQogICAgfQogICAgCiAgICBmdW5jdGlvbigpIHBheWFibGUKICAgIHsKICAgICAgICBJbnZlc3RGdW5kKCk7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIEludmVzdEZ1bmQoKSAKICAgIHB1YmxpYwogICAgcGF5YWJsZQogICAgewogICAgICAgIGlmKG1zZy52YWx1ZT49IDEgZXRoZXIpCiAgICAgICAgewogICAgICAgICAgICBpZihJbnZlc3RvcnNbbXNnLnNlbmRlcl09PTApSW52ZXN0b3JzUXR5Kys7CiAgICAgICAgICAgIEludmVzdG9yc1ttc2cuc2VuZGVyXSs9bXNnLnZhbHVlOwogICAgICAgICAgICBUb3RhbEludmVzdGVkKz1tc2cudmFsdWU7CiAgICAgICAgICAgIEF2YWlsYWJsZSs9bXNnLnZhbHVlOwogICAgICAgICAgICBJbnZlc3QobXNnLnNlbmRlcixtc2cudmFsdWUpOwogICAgICAgIH0gICAKICAgIH0KICAgIAogICAgZnVuY3Rpb24gVG9MZW5kKCkgCiAgICBwdWJsaWMgCiAgICBwYXlhYmxlCiAgICB7CiAgICAgICAgQ3JlZGl0b3JzW21zZy5zZW5kZXJdLlRpbWUgPSBub3c7CiAgICAgICAgQ3JlZGl0b3JzW21zZy5zZW5kZXJdLkludmVzdGVkICs9IG1zZy52YWx1ZTsKICAgICAgICBEZXBvc2l0KG1zZy5zZW5kZXIsbXNnLnZhbHVlKTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gQ2hlY2tQcm9maXQoYWRkcmVzcyBhZGRyKSAKICAgIHB1YmxpYyAKICAgIGNvbnN0YW50IAogICAgcmV0dXJucyh1aW50KQogICAgewogICAgICAgIHJldHVybiAoKENyZWRpdG9yc1thZGRyXS5JbnZlc3RlZC8xMDApKnByY250UmF0ZSkqKChub3ctQ3JlZGl0b3JzW2FkZHJdLlRpbWUpLzEgZGF5cyk7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIFRha2VCYWNrKCkgCiAgICBwdWJsaWMgCiAgICBwYXlhYmxlCiAgICB7CiAgICAgICAgdWludCBwcm9maXQgPSBDaGVja1Byb2ZpdChtc2cuc2VuZGVyKTsKICAgICAgICBpZihwcm9maXQ+MCYmQ2FuUmVmb3VuZCkKICAgICAgICB7CiAgICAgICAgICAgIHVpbnQgc3VtbSA9IENyZWRpdG9yc1ttc2cuc2VuZGVyXS5JbnZlc3RlZCtwcm9maXQ7CiAgICAgICAgICAgIENyZWRpdG9yc1ttc2cuc2VuZGVyXS5JbnZlc3RlZCA9IDA7CiAgICAgICAgICAgIG1zZy5zZW5kZXIudHJhbnNmZXIoc3VtbSk7CiAgICAgICAgICAgIFJlZm91bmQobXNnLnNlbmRlcixzdW1tKTsKICAgICAgICB9CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIFdpdGhkcmF3VG9JbnZlc3RvcihhZGRyZXNzIF9hZGRyLCB1aW50IF93ZWkpIAogICAgcHVibGljIAogICAgcGF5YWJsZQogICAgewogICAgICAgIGlmKEludmVzdG9yc1tfYWRkcl0+MCkKICAgICAgICB7CiAgICAgICAgICAgIGlmKGlzT3duZXIoKSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIGlmKF9hZGRyLnNlbmQoX3dlaSkpCiAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgQXZhaWxhYmxlLT1fd2VpOwogICAgICAgICAgICAgICAgICAgV2l0aGRyYXcoX2FkZHIsX3dlaSk7CiAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQogICAgCiAgICBmdW5jdGlvbiBXdGhkcmF3KCkKICAgIHB1YmxpYwogICAgcGF5YWJsZQogICAgewogICAgICAgIGlmKG1zZy5zZW5kZXI9PUNyZWF0b3IpCiAgICAgICAgewogICAgICAgICAgICBDcmVhdG9yLnRyYW5zZmVyKHRoaXMuYmFsYW5jZSk7CiAgICAgICAgfQogICAgfQogICAgCiAgICAKICAgIGZ1bmN0aW9uIGlzT3duZXIoKQogICAgcHJpdmF0ZQogICAgY29uc3RhbnQgCiAgICByZXR1cm5zIChib29sKQogICAgewogICAgICAgIHJldHVybiggbXNnLnNlbmRlciA9PSBPd25lcl8wMSB8fCBtc2cuc2VuZGVyID09IE93bmVyXzAyIHx8IG1zZy5zZW5kZXIgPT0gT3duZXJfMDMpOwogICAgfQp9'.
	

]
