Class {
	#name : #SRT6b4d6666156a2921850527aa00e47047857159d2,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT6b4d6666156a2921850527aa00e47047857159d2 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7Cgpjb250cmFjdCBFUkMyMEludGVyZmFjZSB7CglmdW5jdGlvbiB0b3RhbFN1cHBseSgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQgc3VwcGx5KTsKCWZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludCBiYWxhbmNlKTsKCWZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKCWZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludCBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CglmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwoJZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBjb25zdGFudCByZXR1cm5zICh1aW50IHJlbWFpbmluZyk7CglldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQgX3ZhbHVlKTsKCWV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludCBfdmFsdWUpOwp9Cgpjb250cmFjdCBEZURlTWFzdGVyQ29udHJhY3QgewoKCW1hcHBpbmcgKGFkZHJlc3MgPT4gYm9vbCkgcHVibGljIGlzRGVEZUNvbnRyYWN0OwoKCW1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIHZhbGlkYXRpb25UaW1lOwoJbWFwcGluZyAoYWRkcmVzcyA9PiBhZGRyZXNzKSBwdWJsaWMgZGlwOwoJbWFwcGluZyAoYWRkcmVzcyA9PiBhZGRyZXNzKSBwdWJsaWMgc2NzOwoJbWFwcGluZyAoYWRkcmVzcyA9PiBhZGRyZXNzKSBwdWJsaWMgaXNzdWVyOwoJbWFwcGluZyAoYWRkcmVzcyA9PiBhZGRyZXNzKSBwdWJsaWMgdGFyZ2V0QWRkcmVzczsvL2lmIGFkZHJlc3MgdmFsdWUgaXMgemVybywgdGhpcyBjb250cmFjdCBpdHNlbGYgcG9zZXNzZXMgZXRoZXJldW0gYXMgdGFyZ2V0LgoJbWFwcGluZyAoYWRkcmVzcyA9PiBhZGRyZXNzKSBwdWJsaWMgYnVsbGV0QWRkcmVzczsvL2lmIGFkZHJlc3MgdmFsdWUgaXMgemVybywgdGhpcyBjb250cmFjdCBpdHNlbGYgZ2V0cyBldGhlcmV1bSBhcyBidWxsZXQuCgltYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyB0YXJnZXRBbW91bnQ7CgltYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBidWxsZXRBbW91bnQ7CgoJZXZlbnQgSXNzdWUoYWRkcmVzcyBpbmRleGVkIGRpcCwgYWRkcmVzcyBpbmRleGVkIHNjcywgYWRkcmVzcyBpc3N1ZXIsIGFkZHJlc3MgaW5kZXhlZCBkZWRlQWRkcmVzcyk7CglldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCBhZGRyZXNzIGlzc3VlciwgYWRkcmVzcyBpbmRleGVkIGRlZGVBZGRyZXNzKTsgLy8gdW51c2VkIGluIGN1cnJlbnQgdmVyc2lvbgoJZXZlbnQgQWN0aXZhdGUoYWRkcmVzcyBpbmRleGVkIGRpcCwgYWRkcmVzcyBpbmRleGVkIHNjcywgYWRkcmVzcyBpc3N1ZXIsIGFkZHJlc3MgaW5kZXhlZCBkZWRlQWRkcmVzcyk7CglldmVudCBOdWxsaWZ5KGFkZHJlc3MgaW5kZXhlZCBkaXAsIGFkZHJlc3MgaW5kZXhlZCBzY3MsIGFkZHJlc3MgaXNzdWVyLCBhZGRyZXNzIGluZGV4ZWQgZGVkZUFkZHJlc3MpOwoKCWFkZHJlc3MgcHVibGljIGRlZGVOZXR3b3JrQWRkcmVzczsKCglmdW5jdGlvbiBEZURlTWFzdGVyQ29udHJhY3QoYWRkcmVzcyBfZGVkZU5ldHdvcmtBZGRyZXNzKXsKCQlkZWRlTmV0d29ya0FkZHJlc3MgPSBfZGVkZU5ldHdvcmtBZGRyZXNzOwoJfQoKCWZ1bmN0aW9uIGNoYW5nZURlZGVBZGRyZXNzKGFkZHJlc3MgbmV3RGVkZUFkZHJlc3MpewoJCXJlcXVpcmUobXNnLnNlbmRlciA9PSBkZWRlTmV0d29ya0FkZHJlc3MpOwoJCWRlZGVOZXR3b3JrQWRkcmVzcyA9IG5ld0RlZGVBZGRyZXNzOwoJfQoKCWZ1bmN0aW9uIGlzc3VlKHVpbnQyNTYgX3RhcmdldEFtb3VudCwgdWludDI1NiBfYnVsbGV0QW1vdW50LCBhZGRyZXNzIF90YXJnZXRBZGRyZXNzLCBhZGRyZXNzIF9idWxsZXRBZGRyZXNzLCB1aW50MjU2IF92YWxpZGF0aW9uVGltZSwgYWRkcmVzcyBfaXNzdWVyKSBwYXlhYmxlIHsKCQlyZXF1aXJlKG1zZy5zZW5kZXIgPT0gZGVkZU5ldHdvcmtBZGRyZXNzKTsKCQlyZXF1aXJlKG5vdyArIDEgZGF5cyA8IF92YWxpZGF0aW9uVGltZSk7CgkJcmVxdWlyZShfdGFyZ2V0QWRkcmVzcyAhPSBfYnVsbGV0QWRkcmVzcyk7CgoJCWlmKF90YXJnZXRBZGRyZXNzID09IDApeyAvLyBldGhlciB0YXJnZXQKCQkJcmVxdWlyZShtc2cudmFsdWUgPj0gX3RhcmdldEFtb3VudCk7CgkJCWlmKG1zZy52YWx1ZSA+IF90YXJnZXRBbW91bnQpewoJCQkJbXNnLnNlbmRlci50cmFuc2Zlcihtc2cudmFsdWUgLSBfdGFyZ2V0QW1vdW50KTsKCQkJfQoJCX0KCgkJYWRkcmVzcyBkZWRlID0gKG5ldyBEZURlQ29udHJhY3QpLnZhbHVlKF90YXJnZXRBZGRyZXNzID09IDAgPyBfdGFyZ2V0QW1vdW50IDogMCkoX3RhcmdldEFkZHJlc3MsIF90YXJnZXRBbW91bnQpOwoJCWlzRGVEZUNvbnRyYWN0W2RlZGVdID0gdHJ1ZTsKCgkJdmFsaWRhdGlvblRpbWVbZGVkZV0gPSBfdmFsaWRhdGlvblRpbWU7CgkJZGlwW2RlZGVdID0gbXNnLnNlbmRlcjsKCQlzY3NbZGVkZV0gPSBtc2cuc2VuZGVyOwoJCWlzc3VlcltkZWRlXSA9IF9pc3N1ZXI7CgkJdGFyZ2V0QWRkcmVzc1tkZWRlXSA9IF90YXJnZXRBZGRyZXNzOwoJCWJ1bGxldEFkZHJlc3NbZGVkZV0gPSBfYnVsbGV0QWRkcmVzczsKCQl0YXJnZXRBbW91bnRbZGVkZV0gPSBfdGFyZ2V0QW1vdW50OwoJCWJ1bGxldEFtb3VudFtkZWRlXSA9IF9idWxsZXRBbW91bnQ7CgoJCWlmKF90YXJnZXRBZGRyZXNzICE9IDApeyAvLyBzZW5kIHRhcmdldCB0b2tlbiB0byBkZWRlCgkJCWFzc2VydChFUkMyMEludGVyZmFjZShfdGFyZ2V0QWRkcmVzcykudHJhbnNmZXJGcm9tKG1zZy5zZW5kZXIsIGRlZGUsIF90YXJnZXRBbW91bnQpKTsKCQl9CgoJCUlzc3VlKG1zZy5zZW5kZXIsIG1zZy5zZW5kZXIsIF9pc3N1ZXIsIGRlZGUpOwoJfQoJZnVuY3Rpb24gYWN0aXZhdGUoYWRkcmVzcyBkZWRlKSBwYXlhYmxlIHsKCQl2YXIgX2RlZGUgPSBEZURlQ29udHJhY3QoZGVkZSk7CgoJCXJlcXVpcmUoaXNEZURlQ29udHJhY3RbZGVkZV0pOwoKCQlyZXF1aXJlKG1zZy5zZW5kZXIgPT0gc2NzW2RlZGVdKTsKCQlyZXF1aXJlKG5vdyA+PSB2YWxpZGF0aW9uVGltZVtkZWRlXSAmJiBub3cgPCB2YWxpZGF0aW9uVGltZVtkZWRlXSArIDEgZGF5cyk7CgoJCWlzRGVEZUNvbnRyYWN0W2RlZGVdID0gZmFsc2U7CgoJCUFjdGl2YXRlKGRpcFtkZWRlXSwgc2NzW2RlZGVdLCBpc3N1ZXJbZGVkZV0sIGRlZGUpOwoKCQlpZihidWxsZXRBZGRyZXNzW2RlZGVdID09IDApewoJCQlyZXF1aXJlKG1zZy52YWx1ZSA+PSBidWxsZXRBbW91bnRbZGVkZV0pOwoJCQlpZihtc2cudmFsdWUgPiBidWxsZXRBbW91bnRbZGVkZV0pewoJCQkJbXNnLnNlbmRlci50cmFuc2Zlcihtc2cudmFsdWUgLSBidWxsZXRBbW91bnRbZGVkZV0pOwoJCQl9CgkJfQoJCWVsc2V7CgkJCWFzc2VydChFUkMyMEludGVyZmFjZShidWxsZXRBZGRyZXNzW2RlZGVdKS50cmFuc2ZlckZyb20oc2NzW2RlZGVdLCBkaXBbZGVkZV0sIGJ1bGxldEFtb3VudFtkZWRlXSkpOyAvLyBzZW5kIGJ1bGxldCB0b2tlbiB0byBkaXAKCQl9CgoJCWlmKHRhcmdldEFkZHJlc3NbZGVkZV0gIT0gMCl7CgkJCWFzc2VydChFUkMyMEludGVyZmFjZSh0YXJnZXRBZGRyZXNzW2RlZGVdKS50cmFuc2ZlckZyb20oZGVkZSwgc2NzW2RlZGVdLCB0YXJnZXRBbW91bnRbZGVkZV0pKTsgLy8gc2VuZCB0YXJnZXQgdG9rZW4gdG8gc2NzCgkJfQoJCV9kZWRlLmFjdGl2YXRlLnZhbHVlKGJ1bGxldEFkZHJlc3NbZGVkZV0gPT0gMCA/IGJ1bGxldEFtb3VudFtkZWRlXSA6IDApKGJ1bGxldEFkZHJlc3NbZGVkZV0gPT0gMCA/IGRpcFtkZWRlXSA6IHNjc1tkZWRlXSk7IC8vIHNlbmQgdGFyZ2V0IGV0aGVyIHRvIHNjcyAob3IgYnVsbGV0IGV0aGVyIHRvIGRpcCkgYW5kIHN1aWNpZGUgZGVkZQoJfQoJZnVuY3Rpb24gbnVsbGlmeShhZGRyZXNzIGRlZGUpewoJCXZhciBfZGVkZSA9IERlRGVDb250cmFjdChkZWRlKTsKCgkJcmVxdWlyZShpc0RlRGVDb250cmFjdFtkZWRlXSk7CgoJCXJlcXVpcmUobm93ID49ICh2YWxpZGF0aW9uVGltZVtkZWRlXSArIDEgZGF5cykgJiYgKG1zZy5zZW5kZXIgPT0gZGlwW2RlZGVdIHx8IG1zZy5zZW5kZXIgPT0gc2NzW2RlZGVdKSk7CgoJCWlzRGVEZUNvbnRyYWN0W2RlZGVdID0gZmFsc2U7CgoJCU51bGxpZnkoZGlwW2RlZGVdLCBzY3NbZGVkZV0sIGlzc3VlcltkZWRlXSwgZGVkZSk7CgkKCQlpZih0YXJnZXRBZGRyZXNzW2RlZGVdICE9IDApewoJCQlhc3NlcnQoRVJDMjBJbnRlcmZhY2UodGFyZ2V0QWRkcmVzc1tkZWRlXSkudHJhbnNmZXJGcm9tKGRlZGUsIGRpcFtkZWRlXSwgdGFyZ2V0QW1vdW50W2RlZGVdKSk7IC8vIHNlbmQgdGFyZ2V0IHRva2VuIHRvIGRpcAoJCX0KCQlfZGVkZS5udWxsaWZ5KGRpcFtkZWRlXSk7IC8vIHNlbmQgdGFyZ2V0IGV0aGVyIHRvIGRpcCBhbmQgc3VpY2lkZSBkZWRlCgl9CgoJZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyByZWNlaXZlciwgYWRkcmVzcyBkZWRlKXsgLy8gdW51c2VkIGluIGN1cnJlbnQgdmVyc2lvbgoJCXJlcXVpcmUoaXNEZURlQ29udHJhY3RbZGVkZV0pOwoKCQlyZXF1aXJlKG1zZy5zZW5kZXIgPT0gc2NzW2RlZGVdKTsKCgkJVHJhbnNmZXIoc2NzW2RlZGVdLCByZWNlaXZlciwgaXNzdWVyW2RlZGVdLCBkZWRlKTsKCgkJc2NzW2RlZGVdID0gcmVjZWl2ZXI7Cgl9Cn0KCgpjb250cmFjdCBEZURlQ29udHJhY3QgewoKCWFkZHJlc3MgcHVibGljIG1hc3RlckNvbnRyYWN0Oy8vbWFzdGVyIHNtYXJ0IGNvbnRyYWN0IGFkZHJlc3MKCglmdW5jdGlvbiBEZURlQ29udHJhY3QoYWRkcmVzcyB0YXJnZXRBZGRyZXNzLCB1aW50MjU2IHRhcmdldEFtb3VudCkgcGF5YWJsZSB7CgkJbWFzdGVyQ29udHJhY3QgPSBtc2cuc2VuZGVyOwoJCWlmKHRhcmdldEFkZHJlc3MgIT0gMCl7CgkJCWFzc2VydChFUkMyMEludGVyZmFjZSh0YXJnZXRBZGRyZXNzKS5hcHByb3ZlKG1zZy5zZW5kZXIsIHRhcmdldEFtb3VudCkpOwoJCX0KCX0KCglmdW5jdGlvbiBhY3RpdmF0ZShhZGRyZXNzIGRlc3RpbmF0aW9uKSBwYXlhYmxlIHsKCQlyZXF1aXJlKG1zZy5zZW5kZXIgPT0gbWFzdGVyQ29udHJhY3QpOwoKCQlzdWljaWRlKGRlc3RpbmF0aW9uKTsKCX0KCWZ1bmN0aW9uIG51bGxpZnkoYWRkcmVzcyBkZXN0aW5hdGlvbikgewoJCXJlcXVpcmUobXNnLnNlbmRlciA9PSBtYXN0ZXJDb250cmFjdCk7CgoJCXN1aWNpZGUoZGVzdGluYXRpb24pOwoJfQp9'.
	

]
