Class {
	#name : #SRTd1e74ef5b003196942b845238773c35f7b7a21fd,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTd1e74ef5b003196942b845238773c35f7b7a21fd >> base64 [
	^ ''.
	

]
