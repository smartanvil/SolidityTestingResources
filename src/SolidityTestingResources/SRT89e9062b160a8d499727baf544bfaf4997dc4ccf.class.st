Class {
	#name : #SRT89e9062b160a8d499727baf544bfaf4997dc4ccf,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT89e9062b160a8d499727baf544bfaf4997dc4ccf >> base64 [
	^ ''.
	

]
