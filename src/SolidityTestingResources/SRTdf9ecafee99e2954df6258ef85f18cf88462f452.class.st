Class {
	#name : #SRTdf9ecafee99e2954df6258ef85f18cf88462f452,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTdf9ecafee99e2954df6258ef85f18cf88462f452 >> base64 [
	^ ''.
	

]
