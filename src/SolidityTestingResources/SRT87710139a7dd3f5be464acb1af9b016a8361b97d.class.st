Class {
	#name : #SRT87710139a7dd3f5be464acb1af9b016a8361b97d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT87710139a7dd3f5be464acb1af9b016a8361b97d >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7CgovLyBpbXBvcnQgImJyb3dzZXIvRVJDMjIzQmFzaWNUb2tlbi5zb2wiOwoKLy8gaW1wb3J0ICJicm93c2VyL1NhZmVNYXRoLnNvbCI7CgovKioKICogTWF0aCBvcGVyYXRpb25zIHdpdGggc2FmZXR5IGNoZWNrcwogKi8KbGlicmFyeSBTYWZlTWF0aCB7CiAgZnVuY3Rpb24gbXVsKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7CiAgICB1aW50IGMgPSBhICogYjsKICAgIGFzc2VydChhID09IDAgfHwgYyAvIGEgPT0gYik7CiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIGRpdih1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgewogICAgLy8gYXNzZXJ0KGIgPiAwKTsgLy8gU29saWRpdHkgYXV0b21hdGljYWxseSB0aHJvd3Mgd2hlbiBkaXZpZGluZyBieSAwCiAgICB1aW50IGMgPSBhIC8gYjsKICAgIC8vIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOyAvLyBUaGVyZSBpcyBubyBjYXNlIGluIHdoaWNoIHRoaXMgZG9lc24ndCBob2xkCiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIHN1Yih1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICBmdW5jdGlvbiBhZGQodWludCBhLCB1aW50IGIpIGludGVybmFsIHJldHVybnMgKHVpbnQpIHsKICAgIHVpbnQgYyA9IGEgKyBiOwogICAgYXNzZXJ0KGMgPj0gYSk7CiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIG1heDY0KHVpbnQ2NCBhLCB1aW50NjQgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDY0KSB7CiAgICByZXR1cm4gYSA+PSBiID8gYSA6IGI7CiAgfQoKICBmdW5jdGlvbiBtaW42NCh1aW50NjQgYSwgdWludDY0IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQ2NCkgewogICAgcmV0dXJuIGEgPCBiID8gYSA6IGI7CiAgfQoKICBmdW5jdGlvbiBtYXgyNTYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHJldHVybiBhID49IGIgPyBhIDogYjsKICB9CgogIGZ1bmN0aW9uIG1pbjI1Nih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgcmV0dXJuIGEgPCBiID8gYSA6IGI7CiAgfQoKICBmdW5jdGlvbiBhc3NlcnQoYm9vbCBhc3NlcnRpb24pIGludGVybmFsIHsKICAgIGlmICghYXNzZXJ0aW9uKSB7CiAgICAgIHRocm93OwogICAgfQogIH0KfQoKLy8gZW5kIGltcG9ydAoKCmNvbnRyYWN0IEVSQzIyM0Jhc2ljIHsKICB1aW50IHB1YmxpYyB0b3RhbFN1cHBseTsKICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyB3aG8pIGNvbnN0YW50IHJldHVybnMgKHVpbnQpOwogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sIHVpbnQgdmFsdWUpOwogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sIHVpbnQgdmFsdWUsIGJ5dGVzIGRhdGEpOwogIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBmcm9tLCBhZGRyZXNzIGluZGV4ZWQgdG8sIHVpbnQgdmFsdWUsIGJ5dGVzIGluZGV4ZWQgZGF0YSk7Cn0KCiAvKgogKiBDb250cmFjdCB0aGF0IGlzIHdvcmtpbmcgd2l0aCBFUkMyMjMgdG9rZW5zCiAqLwpjb250cmFjdCBFUkMyMjNSZWNlaXZpbmdDb250cmFjdCB7CiAgZnVuY3Rpb24gdG9rZW5GYWxsYmFjayhhZGRyZXNzIF9mcm9tLCB1aW50IF92YWx1ZSwgYnl0ZXMgX2RhdGEpOwp9CgoKY29udHJhY3QgRVJDMjIzQmFzaWNUb2tlbiBpcyBFUkMyMjNCYXNpYyB7CiAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQ7CgogIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50KSBiYWxhbmNlczsKCiAgLy8gRnVuY3Rpb24gdGhhdCBpcyBjYWxsZWQgd2hlbiBhIHVzZXIgb3IgYW5vdGhlciBjb250cmFjdCB3YW50cyB0byB0cmFuc2ZlciBmdW5kcyAuCiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyB0bywgdWludCB2YWx1ZSwgYnl0ZXMgZGF0YSkgewogICAgLy8gU3RhbmRhcmQgZnVuY3Rpb24gdHJhbnNmZXIgc2ltaWxhciB0byBFUkMyMCB0cmFuc2ZlciB3aXRoIG5vIF9kYXRhIC4KICAgIC8vIEFkZGVkIGR1ZSB0byBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eSByZWFzb25zIC4KICAgIHVpbnQgY29kZUxlbmd0aDsKCiAgICBhc3NlbWJseSB7CiAgICAgIC8vIFJldHJpZXZlIHRoZSBzaXplIG9mIHRoZSBjb2RlIG9uIHRhcmdldCBhZGRyZXNzLCB0aGlzIG5lZWRzIGFzc2VtYmx5IC4KICAgICAgY29kZUxlbmd0aCA6PSBleHRjb2Rlc2l6ZSh0bykKICAgIH0KCiAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IGJhbGFuY2VzW21zZy5zZW5kZXJdLnN1Yih2YWx1ZSk7CiAgICBiYWxhbmNlc1t0b10gPSBiYWxhbmNlc1t0b10uYWRkKHZhbHVlKTsKICAgIGlmIChjb2RlTGVuZ3RoID4gMCkgewogICAgICBFUkMyMjNSZWNlaXZpbmdDb250cmFjdCByZWNlaXZlciA9IEVSQzIyM1JlY2VpdmluZ0NvbnRyYWN0KHRvKTsKICAgICAgcmVjZWl2ZXIudG9rZW5GYWxsYmFjayhtc2cuc2VuZGVyLCB2YWx1ZSwgZGF0YSk7CiAgICB9CiAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCB0bywgdmFsdWUsIGRhdGEpOwogIH0KCiAgLy8gU3RhbmRhcmQgZnVuY3Rpb24gdHJhbnNmZXIgc2ltaWxhciB0byBFUkMyMCB0cmFuc2ZlciB3aXRoIG5vIF9kYXRhIC4KICAvLyBBZGRlZCBkdWUgdG8gYmFja3dhcmRzIGNvbXBhdGliaWxpdHkgcmVhc29ucyAuCiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyB0bywgdWludCB2YWx1ZSkgewogICAgdWludCBjb2RlTGVuZ3RoOwoKICAgIGFzc2VtYmx5IHsKICAgICAgLy8gUmV0cmlldmUgdGhlIHNpemUgb2YgdGhlIGNvZGUgb24gdGFyZ2V0IGFkZHJlc3MsIHRoaXMgbmVlZHMgYXNzZW1ibHkgLgogICAgICBjb2RlTGVuZ3RoIDo9IGV4dGNvZGVzaXplKHRvKQogICAgfQoKICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gYmFsYW5jZXNbbXNnLnNlbmRlcl0uc3ViKHZhbHVlKTsKICAgIGJhbGFuY2VzW3RvXSA9IGJhbGFuY2VzW3RvXS5hZGQodmFsdWUpOwogICAgaWYgKGNvZGVMZW5ndGggPiAwKSB7CiAgICAgIEVSQzIyM1JlY2VpdmluZ0NvbnRyYWN0IHJlY2VpdmVyID0gRVJDMjIzUmVjZWl2aW5nQ29udHJhY3QodG8pOwogICAgICBieXRlcyBtZW1vcnkgZW1wdHk7CiAgICAgIHJlY2VpdmVyLnRva2VuRmFsbGJhY2sobXNnLnNlbmRlciwgdmFsdWUsIGVtcHR5KTsKICAgIH0KICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIHRvLCB2YWx1ZSwgZW1wdHkpOwogIH0KCiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50IGJhbGFuY2UpIHsKICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogIH0KfQovLyBlbmQgaW1wb3J0Cgpjb250cmFjdCBQcmVUZ2VFeHBlcnR5IGlzIEVSQzIyM0Jhc2ljVG9rZW4gewoKICAvLyB0b2tlbiBjb25zdGFudHMKICBzdHJpbmcgcHVibGljIGNvbnN0YW50IG5hbWUgPSAiUHJlLVRHRSBFeHBlcnR5IFRva2VuIjsKICBzdHJpbmcgcHVibGljIGNvbnN0YW50IHN5bWJvbCA9ICJQRVhZIjsKICB1aW50OCBwdWJsaWMgY29uc3RhbnQgZGVjaW1hbHMgPSAxODsKCiAgLy8gcHJlLXRnZSB2YXJpYWJsZXMKICB1aW50OCBwdWJsaWMgYmFzaWNSYXRlID0gMTAwOwogIHVpbnQ4IHB1YmxpYyBwcmVUZ2VCb251cyA9IDQ1OwogIGFkZHJlc3MgcHVibGljIHByZVRnZU1hbmFnZXI7CiAgYWRkcmVzcyBwdWJsaWMgbXVsdGlzaWdXYWxsZXQ7CiAgYm9vbCBwdWJsaWMgaXNDbG9zZWQgPSBmYWxzZTsKCiAgLy8ga2VlcCB0cmFjayBvZiBidXJuZWQgdG9rZW5zIGhlcmUKICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludCkgcHVibGljIGJ1cm5lZFRva2VuczsKICAKICAvLyBwcmVJQ08gY29uc3RydWN0b3IKICBmdW5jdGlvbiBQcmVUZ2VFeHBlcnR5KCkgewogICAgbXVsdGlzaWdXYWxsZXQgPSAweDYwZjQwMjVjNjc0NzdlZGYzYThlZGE3ZDFiZjZiM2IwMzVhNjY0ZWI7CiAgICBwcmVUZ2VNYW5hZ2VyID0gMHgwMDlBNTVBM2MxNjk1M0EzNTk0ODRhZkQyOTllYmRDNDQ0MjAwRWRCOwogIH0KCiAgLy8gY29udHJpYnV0ZSBmdW5jdGlvbgogIGZ1bmN0aW9uKCkgcGF5YWJsZSB7CiAgICAvLyB0aHJvdyBpZiBwcmUtdGdlIGlzIGNsb3NlZAogICAgaWYgKGlzQ2xvc2VkKSB0aHJvdzsKCiAgICB1aW50IGV0aGVycyA9IG1zZy52YWx1ZTsKCiAgICAvLyBjYWxjdWxhdGUgdG9rZW5zIGFtb3VudCBhbmQgcHJlLXRnZSBib251cwogICAgdWludCB0b2tlbnMgPSBldGhlcnMgKiBiYXNpY1JhdGU7CiAgICB1aW50IGJvbnVzID0gZXRoZXJzICogcHJlVGdlQm9udXM7CgogICAgLy8gZ2VuZXJhdGUgbmV3IHRva2VucwogICAgdWludCBzdW0gPSB0b2tlbnMgKyBib251czsKICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdICs9IHN1bTsKICAgIHRvdGFsU3VwcGx5ICs9IHN1bTsKCiAgICAvLyBzZW5kIGV0aGVycyB0byBzZWN1cmUgd2FsbGV0CiAgICBtdWx0aXNpZ1dhbGxldC50cmFuc2ZlcihldGhlcnMpOwogIH0KCiAgLy8gYWxsb3cgdG8gYnVybiBwcmUtdGdlIHRva2VucyBpbiBvcmRlciB0byB0ZWxlcG9ydCB0aGVtIHRvIG5ldyBjb250cmFjdAogIGZ1bmN0aW9uIGJ1cm5Ub2tlbnModWludCBhbW91bnQpIHsKICAgIGlmIChhbW91bnQgPiBiYWxhbmNlc1ttc2cuc2VuZGVyXSkgdGhyb3c7CgogICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBiYWxhbmNlc1ttc2cuc2VuZGVyXS5zdWIoYW1vdW50KTsKICAgIGJ1cm5lZFRva2Vuc1ttc2cuc2VuZGVyXSA9IGJ1cm5lZFRva2Vuc1ttc2cuc2VuZGVyXS5hZGQoYW1vdW50KTsKICB9CgogIC8vIGFsbG93IGNvbnRyYWN0IG1hbmFnZXIgdG8gZGVjcmVhc2UgYm9udXMgb3ZlciB0aW1lCiAgZnVuY3Rpb24gY2hhbmdlQm9udXModWludDggX3ByZVRnZUJvbnVzKSB7CiAgICBpZiAobXNnLnNlbmRlciAhPSBwcmVUZ2VNYW5hZ2VyKSB0aHJvdzsKCiAgICAvLyB3ZSBjYW4gb25seSBkZWNyZWFzZSBib251cwogICAgaWYgKF9wcmVUZ2VCb251cyA+IHByZVRnZUJvbnVzKSB0aHJvdzsKCiAgICBwcmVUZ2VCb251cyA9IF9wcmVUZ2VCb251czsKICB9CgogIC8vIGFsbG93IGNvbnRyYWN0IG1hbmFnZXIgdG8gY2xvc2UgcHJlLXRnZQogIGZ1bmN0aW9uIGNsb3NlKCkgewogICAgaWYgKG1zZy5zZW5kZXIgIT0gcHJlVGdlTWFuYWdlcikgdGhyb3c7CgogICAgaXNDbG9zZWQgPSB0cnVlOwogIH0KCn0='.
	

]
