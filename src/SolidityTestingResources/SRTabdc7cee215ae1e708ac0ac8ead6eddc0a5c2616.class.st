Class {
	#name : #SRTabdc7cee215ae1e708ac0ac8ead6eddc0a5c2616,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTabdc7cee215ae1e708ac0ac8ead6eddc0a5c2616 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuODsKCmNvbnRyYWN0IE93bmVkIHsKICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKCiAgZnVuY3Rpb24gT3duZWQoKSB7CiAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgfQoKICBtb2RpZmllciBvbmx5T3duZXIoKSB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgXzsKICB9CgogIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpIGV4dGVybmFsIG9ubHlPd25lciB7CiAgICBvd25lciA9IG5ld093bmVyOwogIH0KfQoKY29udHJhY3QgRmlkZ2V0U3Bpbm5lciBpcyBPd25lZCB7CiAgaW50IG9tZWdhOwogIGludCB0aGV0YTsKICB1aW50IHB1YmxpYyBsYXN0VXBkYXRlOwoKICB1aW50IHB1YmxpYyBkZWNheVJhdGU7CiAgdWludCBwdWJsaWMgb21lZ2FQZXJFdGhlcjsKCiAgaW50IHB1YmxpYyBsYXJnZXN0UmV0cm87CiAgaW50IHB1YmxpYyBsYXJnZXN0UHJvOwoKICBldmVudCBTcGluKAogICAgYWRkcmVzcyBpbmRleGVkIGZyb20sCiAgICBpbnQgaW5kZXhlZCBkaXJlY3Rpb24sCiAgICB1aW50IGFtb3VudAogICk7CgogIC8qCiAgICogQ3JlYXRlcyBhIG5ldyBGaWRnZXRTcGlubmVyIHdob3NlIHNwaW4gZGVjYXlzIGF0IGEgcmF0ZSBvZiBfZGVjYXlOdW1lcmF0b3IvX2RlY2F5RGVub21pbmF0b3IlIHBlciBzZWNvbmQKICAgKiBhbmQgd2hvIGdhaW5zIF9vbWVnYVBlckV0aGVyIHNwaW4gcGVyIEV0aGVyIHNwZW50IG9uIHNwaW5uaW5nIGl0LgogICAqLwoJZnVuY3Rpb24gRmlkZ2V0U3Bpbm5lcih1aW50IF9kZWNheVJhdGUsIHVpbnQgX29tZWdhUGVyRXRoZXIpIHsKICAgIGxhc3RVcGRhdGUgPSBub3c7CgkJZGVjYXlSYXRlID0gX2RlY2F5UmF0ZTsKICAgIG9tZWdhUGVyRXRoZXIgPSBfb21lZ2FQZXJFdGhlcjsKCX0KCgogIC8qCiAgICogVGhpcyBtYWtlcyBpdCBlYXN5IHRvIG92ZXJyaWRlIGRlbHRhVGltZSBpbiBGaWRnZXRTcGlubmVyVGVzdCBzbyB3ZSBjYW4gdGVzdCB0aGF0IHZlbG9jaXR5L2Rpc3BsYWNlbWVudCBkZWNheSBpcwogICAqIHdvcmtpbmcgY29ycmVjdGx5CiAgICovCiAgZnVuY3Rpb24gZGVsdGFUaW1lKCkgY29uc3RhbnQgcmV0dXJucyh1aW50KSB7CiAgICByZXR1cm4gbm93IC0gbGFzdFVwZGF0ZTsKICB9CgogIC8qCiAgICogUmV0dXJucyB0aGUgdmVsb2NpdHkgb2YgdGhlIHNwaW5uZXIgZHVyaW5nIHRoaXMgc3BlY2lmaWMgYmxvY2sgaW4gdGhlIGNoYWluCiAgICovCiAgZnVuY3Rpb24gZ2V0Q3VycmVudFZlbG9jaXR5KCkgY29uc3RhbnQgcmV0dXJucyhpbnQpIHsKICAgIGlmKGRlY2F5UmF0ZSA9PSAwKSB7CiAgICAgIHJldHVybiBvbWVnYTsKICAgIH0KCiAgICBpbnQgZGlyID0gLTE7CiAgICBpZihvbWVnYSA9PSAwKSB7CiAgICAgIHJldHVybiAwOwogICAgfSBlbHNlIGlmKG9tZWdhIDwgMCkgewogICAgICBkaXIgPSAxOwogICAgfQoKICAgIHVpbnQgdGltZUVsYXBzZWQgPSBkZWx0YVRpbWUoKTsKICAgIHVpbnQgZGVsdGFPbWVnYSA9IHRpbWVFbGFwc2VkICogZGVjYXlSYXRlOwogICAgaW50IG5ld09tZWdhID0gb21lZ2EgKyAoaW50KGRlbHRhT21lZ2EpICogZGlyKTsKCiAgICAvLyBtYWtlIHN1cmUgd2UgZGlkbid0IGNyb3NzIHplcm8KICAgIGlmKChvbWVnYSA+IDAgJiYgbmV3T21lZ2EgPCAwKSB8fCAob21lZ2EgPCAwICYmIG5ld09tZWdhID4gMCkpIHsKICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgcmV0dXJuIG5ld09tZWdhOwogIH0KCiAgLyoKICAgKiBSZXR1cm5zIHRoZSBkaXNwbGFjZW1lbnQgb2YgdGhlIHNwaW5uZXIgZHVyaW5nIHRoaXMgc3BlY2lmaWMgYmxvY2sgaW4gdGhlIGNoYWluCiAgICovCiAgZnVuY3Rpb24gZ2V0Q3VycmVudERpc3BsYWNlbWVudCgpIGNvbnN0YW50IHJldHVybnMoaW50KSB7CiAgICAvLyBpbnRlZ3JhdGVzIG9tZWdhIG92ZXIgdGltZQogICAgaW50IHRpbWVFbGFwc2VkID0gaW50KGRlbHRhVGltZSgpKTsKCiAgICBpZihkZWNheVJhdGUgPT0gMCkgewogICAgICByZXR1cm4gdGhldGEgKyAodGltZUVsYXBzZWQgKiBvbWVnYSk7CiAgICB9CgogICAgLy8gZmluZCBtYXggdGltZSBlbGFwc2VkIGJlZm9yZSB2PTAgKGJlY29tZXMgbWF4LWhlaWdodCBvZiB0cmFwZXpvaWQpCiAgICBpbnQgbWF4VGltZSA9IG9tZWdhIC8gaW50KGRlY2F5UmF0ZSk7CgogICAgaWYgKG1heFRpbWUgPCAwKSB7CiAgICAgIG1heFRpbWUgKj0gLTE7CiAgICB9CgogICAgaWYodGltZUVsYXBzZWQgPiBtYXhUaW1lKSB7CiAgICAgIHRpbWVFbGFwc2VkID0gbWF4VGltZTsKICAgIH0KCiAgICBpbnQgZGVsdGFUaGV0YSA9ICgob21lZ2EgKyBnZXRDdXJyZW50VmVsb2NpdHkoKSkgKiB0aW1lRWxhcHNlZCkgLyAyOwogICAgcmV0dXJuIHRoZXRhICsgZGVsdGFUaGV0YTsKICB9CgogIC8qCiAgICogQWRkcyBvciBzdWJ0cmFjdHMgZnJvbSB0aGUgc3BpbiBvZiB0aGUgc3Bpbm5lcgogICAqCiAgICogQWxsIGNoYW5nZXMgdG8gdGhlIHNwaW5uZXIgc3RhdGUgc2hvdWxkIGhhcHBlbiBhdCB0aGUgZW5kIG9mIHRoZSBjdXJyZW50IGJsb2NrLiBTbyBtdWx0aXBsZSBzcGlucyBpbiB0aGUgc2FtZSBibG9jawogICAqIHNob3VsZCBiZSBhZGRpdGl2ZSB3aXRoIHRoZWlyIGVmZmVjdHMgb25seSBiZWNvbWluZyBhcHBhcmVudCBpbiB0aGUgbmV4dCBibG9jay4KICAgKi8KICBmdW5jdGlvbiBzcGluKGludCBkaXJlY3Rpb24pIHBheWFibGUgewogICAgcmVxdWlyZShkaXJlY3Rpb24gPT0gLTEgfHwgZGlyZWN0aW9uID09IDEpOwoKICAgIGludCBkZWx0YU9tZWdhID0gKGludChtc2cudmFsdWUpICogZGlyZWN0aW9uICogaW50KG9tZWdhUGVyRXRoZXIpKSAvIDEgZXRoZXI7CiAgICBpbnQgbmV3T21lZ2EgPSBnZXRDdXJyZW50VmVsb2NpdHkoKSArIGRlbHRhT21lZ2E7CiAgICBpbnQgbmV3VGhldGEgPSBnZXRDdXJyZW50RGlzcGxhY2VtZW50KCk7CgogICAgb21lZ2EgPSBuZXdPbWVnYTsKICAgIHRoZXRhID0gbmV3VGhldGE7CgogICAgaWYoLW9tZWdhID4gbGFyZ2VzdFJldHJvKSB7CiAgICAgIGxhcmdlc3RSZXRybyA9IC1vbWVnYTsKICAgIH0gZWxzZSBpZihvbWVnYSA+IGxhcmdlc3RQcm8pIHsKICAgICAgbGFyZ2VzdFBybyA9IG9tZWdhOwogICAgfQoKICAgIFNwaW4obXNnLnNlbmRlciwgZGlyZWN0aW9uLCBtc2cudmFsdWUpOwogICAgbGFzdFVwZGF0ZSA9IG5vdzsKICB9CgogIC8qCiAgICogV2l0aGRyYXdzIGFsbCB0aGUgbW9uZXkgZnJvbSB0aGUgY29udHJhY3QKICAgKi8KICBmdW5jdGlvbiB3aXRoZHJhd0FsbCgpIG9ubHlPd25lciB7CiAgICB3aXRoZHJhdyhhZGRyZXNzKHRoaXMpLmJhbGFuY2UpOwogIH0KCiAgLyoKICAgKiBXaXRoZHJhd3MgYSBnaXZlbiBhbW91bnQgb2YgbW9uZXkgZnJvbSB0aGUgY29udHJhY3QKICAgKi8KICBmdW5jdGlvbiB3aXRoZHJhdyh1aW50IGFtb3VudCkgb25seU93bmVyIHsKICAgIG93bmVyLnRyYW5zZmVyKGFtb3VudCk7CiAgfQp9'.
	

]
