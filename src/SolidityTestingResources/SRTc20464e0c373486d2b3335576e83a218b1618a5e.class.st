Class {
	#name : #SRTc20464e0c373486d2b3335576e83a218b1618a5e,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTc20464e0c373486d2b3335576e83a218b1618a5e >> base64 [
	^ ''.
	

]
