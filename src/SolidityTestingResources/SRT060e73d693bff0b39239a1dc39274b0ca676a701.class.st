Class {
	#name : #SRT060e73d693bff0b39239a1dc39274b0ca676a701,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT060e73d693bff0b39239a1dc39274b0ca676a701 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTM7ICAgICAgICAKICAgCiAgY29udHJhY3QgQ2VudHJhU2FsZSB7IAoKICAgIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50OyAKCiAgICBhZGRyZXNzIHB1YmxpYyBjb250cmFjdF9hZGRyZXNzID0gMHg5NmE2NTYwOWE3Yjg0ZTg4NDI3MzJkZWIwOGY1NmMzZTIxYWM2ZjhhOyAKCiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKICAgIHVpbnQgcHVibGljIGNhcDsKICAgIHVpbnQgcHVibGljIGNvbnN0YW50IGNhcF9tYXggPSAxNzAwMDAqMTAqKjE4OwogICAgdWludCBwdWJsaWMgY29uc3RhbnQgbWluX3ZhbHVlID0gMTAqKjE4KjEvMTA7IAogICAgdWludCBwdWJsaWMgb3BlcmF0aW9uOwogICAgbWFwcGluZyh1aW50ID0+IGFkZHJlc3MpIHB1YmxpYyBvcGVyYXRpb25fYWRkcmVzczsKICAgIG1hcHBpbmcodWludCA9PiB1aW50KSBwdWJsaWMgb3BlcmF0aW9uX2Ftb3VudDsKCiAgICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCB0b2tlbl9wcmljZSA9IDEwKioxOCoxLzI1MDsgIAogICAgdWludDI1NiBwdWJsaWMgdG9rZW5zX3RvdGFsOyAgCgogICAgdWludCBwdWJsaWMgY29uc3RhbnQgY29udHJhY3Rfc3RhcnQgPSAxNTA1ODQ0MDAwOwogICAgdWludCBwdWJsaWMgY29uc3RhbnQgY29udHJhY3RfZmluaXNoID0gMTUwNzI2OTYwMDsKCiAgICB1aW50IHB1YmxpYyBjb25zdGFudCBjYXJkX3RpdGFuaXVtX21pbmFtb3VudCA9IDUwMCoxMCoqMTg7CiAgICB1aW50IHB1YmxpYyBjb25zdGFudCBjYXJkX3RpdGFuaXVtX2ZpcnN0ID0gMjAwOwogICAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQpIGNhcmRzX3RpdGFuaXVtX2NoZWNrOyAKICAgIGFkZHJlc3NbXSBwdWJsaWMgY2FyZHNfdGl0YW5pdW07CgogICAgdWludCBwdWJsaWMgY29uc3RhbnQgY2FyZF9ibGFja19taW5hbW91bnQgPSAxMDAqMTAqKjE4OwogICAgdWludCBwdWJsaWMgY29uc3RhbnQgY2FyZF9ibGFja19maXJzdCA9IDUwMDsKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50KSBwdWJsaWMgY2FyZHNfYmxhY2tfY2hlY2s7IAogICAgYWRkcmVzc1tdIHB1YmxpYyBjYXJkc19ibGFjazsKCiAgICB1aW50IHB1YmxpYyBjb25zdGFudCBjYXJkX21ldGFsX21pbmFtb3VudCA9IDQwKjEwKioxODsKICAgIHVpbnQgcHVibGljIGNvbnN0YW50IGNhcmRfbWV0YWxfZmlyc3QgPSA3NTA7CiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludCkgY2FyZHNfbWV0YWxfY2hlY2s7IAogICAgYWRkcmVzc1tdIHB1YmxpYyBjYXJkc19tZXRhbDsgICAgICAKCiAgICB1aW50IHB1YmxpYyBjb25zdGFudCBjYXJkX2dvbGRfbWluYW1vdW50ID0gMzAqMTAqKjE4OwogICAgdWludCBwdWJsaWMgY29uc3RhbnQgY2FyZF9nb2xkX2ZpcnN0ID0gMTAwMDsKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50KSBjYXJkc19nb2xkX2NoZWNrOyAKICAgIGFkZHJlc3NbXSBwdWJsaWMgY2FyZHNfZ29sZDsgICAgICAKCiAgICB1aW50IHB1YmxpYyBjb25zdGFudCBjYXJkX2JsdWVfbWluYW1vdW50ID0gNS8xMCoxMCoqMTg7CiAgICB1aW50IHB1YmxpYyBjb25zdGFudCBjYXJkX2JsdWVfZmlyc3QgPSAxMDAwMDAwMDA7CiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludCkgY2FyZHNfYmx1ZV9jaGVjazsgCiAgICBhZGRyZXNzW10gcHVibGljIGNhcmRzX2JsdWU7CgogICAgdWludCBwdWJsaWMgY29uc3RhbnQgY2FyZF9zdGFydF9taW5hbW91bnQgPSAxLzEwKjEwKioxODsKICAgIHVpbnQgcHVibGljIGNvbnN0YW50IGNhcmRfc3RhcnRfZmlyc3QgPSAxMDAwMDAwMDA7CiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludCkgY2FyZHNfc3RhcnRfY2hlY2s7IAogICAgYWRkcmVzc1tdIHB1YmxpYyBjYXJkc19zdGFydDsKICAgICAgCiAgIAogICAgLy8gRnVuY3Rpb25zIHdpdGggdGhpcyBtb2RpZmllciBjYW4gb25seSBiZSBleGVjdXRlZCBieSB0aGUgb3duZXIKICAgIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lcikgewogICAgICAgICAgICB0aHJvdzsKICAgICAgICB9CiAgICAgICAgXzsKICAgIH0gICAgICAKIAogICAgLy8gQ29uc3RydWN0b3IKICAgIGZ1bmN0aW9uIENlbnRyYVNhbGUoKSB7CiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOyAKICAgICAgICBvcGVyYXRpb24gPSAwOyAKICAgICAgICBjYXAgPSAwOyAgICAgICAgCiAgICB9CiAgICAgIAogICAgLy9kZWZhdWx0IGZ1bmN0aW9uIGZvciBjcm93ZGZ1bmRpbmcKICAgIGZ1bmN0aW9uKCkgcGF5YWJsZSB7ICAgIAoKICAgICAgaWYoIShtc2cudmFsdWUgPj0gbWluX3ZhbHVlKSkgdGhyb3c7CiAgICAgIGlmKG5vdyA8IGNvbnRyYWN0X3N0YXJ0KSB0aHJvdzsKICAgICAgaWYobm93ID4gY29udHJhY3RfZmluaXNoKSB0aHJvdzsgICAgICAgICAgICAgICAgICAgICAKCiAgICAgIGlmKGNhcCArIG1zZy52YWx1ZSA+IGNhcF9tYXgpIHRocm93OyAgICAgICAgIAoKICAgICAgdG9rZW5zX3RvdGFsID0gbXNnLnZhbHVlKjEwKioxOC90b2tlbl9wcmljZTsKICAgICAgaWYoISh0b2tlbnNfdG90YWwgPiAwKSkgdGhyb3c7ICAgICAgICAgICAKCiAgICAgIGlmKCFjb250cmFjdF90cmFuc2Zlcih0b2tlbnNfdG90YWwpKSB0aHJvdzsKCiAgICAgIGNhcCA9IGNhcC5hZGQobXNnLnZhbHVlKTsgCiAgICAgIG9wZXJhdGlvbnMoKTsKICAgICAgZ2V0X2NhcmQoKTsKICAgICAgb3duZXIuc2VuZCh0aGlzLmJhbGFuY2UpOwogICAgfQoKICAgIC8vQ29udHJhY3QgZXhlY3V0ZQogICAgZnVuY3Rpb24gY29udHJhY3RfdHJhbnNmZXIodWludCBfYW1vdW50KSBwcml2YXRlIHJldHVybnMgKGJvb2wpIHsgICAgICAKCiAgICAgIGlmKCFjb250cmFjdF9hZGRyZXNzLmNhbGwoYnl0ZXM0KHNoYTMoInRyYW5zZmVyKGFkZHJlc3MsdWludDI1NikiKSksbXNnLnNlbmRlcixfYW1vdW50KSkgeyAgICAKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KICAgICAgcmV0dXJuIHRydWU7CiAgICB9IAoKICAgIC8vVXBkYXRlIG9wZXJhdGlvbnMKICAgIGZ1bmN0aW9uIG9wZXJhdGlvbnMoKSBwcml2YXRlIHJldHVybnMgKGJvb2wpIHsKICAgICAgICBvcGVyYXRpb25fYWRkcmVzc1tvcGVyYXRpb25dID0gbXNnLnNlbmRlcjsKICAgICAgICBvcGVyYXRpb25fYW1vdW50W29wZXJhdGlvbl0gPSBtc2cudmFsdWU7ICAgICAgICAKICAgICAgICBvcGVyYXRpb24gPSBvcGVyYXRpb24uYWRkKDEpOyAgICAgICAgCiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9ICAgIAoKICAgIC8vV2l0aGRyYXcgbW9uZXkgZnJvbSBjb250cmFjdCBiYWxhbmNlIHRvIG93bmVyCiAgICBmdW5jdGlvbiB3aXRoZHJhdygpIG9ubHlPd25lciByZXR1cm5zIChib29sIHJlc3VsdCkgewogICAgICAgIG93bmVyLnNlbmQodGhpcy5iYWxhbmNlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICAvL2dldCB0b3RhbCB0aXRhbml1bSBjYXJkcwogICAgZnVuY3Rpb24gY2FyZHNfdGl0YW5pdW1fdG90YWwoKSBjb25zdGFudCByZXR1cm5zICh1aW50KSB7IAogICAgICByZXR1cm4gY2FyZHNfdGl0YW5pdW0ubGVuZ3RoOwogICAgfSAgCiAgICAvL2dldCB0b3RhbCBibGFjayBjYXJkcwogICAgZnVuY3Rpb24gY2FyZHNfYmxhY2tfdG90YWwoKSBjb25zdGFudCByZXR1cm5zICh1aW50KSB7IAogICAgICByZXR1cm4gY2FyZHNfYmxhY2subGVuZ3RoOwogICAgfQogICAgLy9nZXQgdG90YWwgbWV0YWwgY2FyZHMKICAgIGZ1bmN0aW9uIGNhcmRzX21ldGFsX3RvdGFsKCkgY29uc3RhbnQgcmV0dXJucyAodWludCkgeyAKICAgICAgcmV0dXJuIGNhcmRzX21ldGFsLmxlbmd0aDsKICAgIH0gICAgICAgIAogICAgLy9nZXQgdG90YWwgZ29sZCBjYXJkcwogICAgZnVuY3Rpb24gY2FyZHNfZ29sZF90b3RhbCgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQpIHsgCiAgICAgIHJldHVybiBjYXJkc19nb2xkLmxlbmd0aDsKICAgIH0gICAgICAgIAogICAgLy9nZXQgdG90YWwgYmx1ZSBjYXJkcwogICAgZnVuY3Rpb24gY2FyZHNfYmx1ZV90b3RhbCgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQpIHsgCiAgICAgIHJldHVybiBjYXJkc19ibHVlLmxlbmd0aDsKICAgIH0KCiAgICAvL2dldCB0b3RhbCBzdGFydCBjYXJkcwogICAgZnVuY3Rpb24gY2FyZHNfc3RhcnRfdG90YWwoKSBjb25zdGFudCByZXR1cm5zICh1aW50KSB7IAogICAgICByZXR1cm4gY2FyZHNfc3RhcnQubGVuZ3RoOwogICAgfQoKICAgIC8qCiAgICAqIFVzZXIgZ2V0IGNhcmQodGl0YW5pdW0sIGJsYWNrLCBnb2xkIG1ldGFsLCBnb2xkIGFuZCBvdGhlciksIGlmIGFtb3VudCBldGggc3VmZmljaWVudCBmb3IgdGhpcy4KICAgICovCiAgICBmdW5jdGlvbiBnZXRfY2FyZCgpIHByaXZhdGUgcmV0dXJucyAoYm9vbCkgewoKICAgICAgaWYoKG1zZy52YWx1ZSA+PSBjYXJkX3RpdGFuaXVtX21pbmFtb3VudCkKICAgICAgICAmJihjYXJkc190aXRhbml1bS5sZW5ndGggPCBjYXJkX3RpdGFuaXVtX2ZpcnN0KQogICAgICAgICYmKGNhcmRzX3RpdGFuaXVtX2NoZWNrW21zZy5zZW5kZXJdICE9IDEpCiAgICAgICAgKSB7CiAgICAgICAgY2FyZHNfdGl0YW5pdW0ucHVzaChtc2cuc2VuZGVyKTsKICAgICAgICBjYXJkc190aXRhbml1bV9jaGVja1ttc2cuc2VuZGVyXSA9IDE7CiAgICAgIH0KCiAgICAgIGlmKChtc2cudmFsdWUgPj0gY2FyZF9ibGFja19taW5hbW91bnQpCiAgICAgICAgJiYobXNnLnZhbHVlIDwgY2FyZF90aXRhbml1bV9taW5hbW91bnQpCiAgICAgICAgJiYoY2FyZHNfYmxhY2subGVuZ3RoIDwgY2FyZF9ibGFja19maXJzdCkKICAgICAgICAmJihjYXJkc19ibGFja19jaGVja1ttc2cuc2VuZGVyXSAhPSAxKQogICAgICAgICkgewogICAgICAgIGNhcmRzX2JsYWNrLnB1c2gobXNnLnNlbmRlcik7CiAgICAgICAgY2FyZHNfYmxhY2tfY2hlY2tbbXNnLnNlbmRlcl0gPSAxOwogICAgICB9ICAgICAgICAgICAgICAgIAoKICAgICAgaWYoKG1zZy52YWx1ZSA+PSBjYXJkX21ldGFsX21pbmFtb3VudCkKICAgICAgICAmJihtc2cudmFsdWUgPCBjYXJkX2JsYWNrX21pbmFtb3VudCkKICAgICAgICAmJihjYXJkc19tZXRhbC5sZW5ndGggPCBjYXJkX21ldGFsX2ZpcnN0KQogICAgICAgICYmKGNhcmRzX21ldGFsX2NoZWNrW21zZy5zZW5kZXJdICE9IDEpCiAgICAgICAgKSB7CiAgICAgICAgY2FyZHNfbWV0YWwucHVzaChtc2cuc2VuZGVyKTsKICAgICAgICBjYXJkc19tZXRhbF9jaGVja1ttc2cuc2VuZGVyXSA9IDE7CiAgICAgIH0gICAgICAgICAgICAgICAKCiAgICAgIGlmKChtc2cudmFsdWUgPj0gY2FyZF9nb2xkX21pbmFtb3VudCkKICAgICAgICAmJihtc2cudmFsdWUgPCBjYXJkX21ldGFsX21pbmFtb3VudCkKICAgICAgICAmJihjYXJkc19nb2xkLmxlbmd0aCA8IGNhcmRfZ29sZF9maXJzdCkKICAgICAgICAmJihjYXJkc19nb2xkX2NoZWNrW21zZy5zZW5kZXJdICE9IDEpCiAgICAgICAgKSB7CiAgICAgICAgY2FyZHNfZ29sZC5wdXNoKG1zZy5zZW5kZXIpOwogICAgICAgIGNhcmRzX2dvbGRfY2hlY2tbbXNnLnNlbmRlcl0gPSAxOwogICAgICB9ICAgICAgICAgICAgICAgCgogICAgICBpZigobXNnLnZhbHVlID49IGNhcmRfYmx1ZV9taW5hbW91bnQpCiAgICAgICAgJiYobXNnLnZhbHVlIDwgY2FyZF9nb2xkX21pbmFtb3VudCkKICAgICAgICAmJihjYXJkc19ibHVlLmxlbmd0aCA8IGNhcmRfYmx1ZV9maXJzdCkKICAgICAgICAmJihjYXJkc19ibHVlX2NoZWNrW21zZy5zZW5kZXJdICE9IDEpCiAgICAgICAgKSB7CiAgICAgICAgY2FyZHNfYmx1ZS5wdXNoKG1zZy5zZW5kZXIpOwogICAgICAgIGNhcmRzX2JsdWVfY2hlY2tbbXNnLnNlbmRlcl0gPSAxOwogICAgICB9CgogICAgICBpZigobXNnLnZhbHVlID49IGNhcmRfc3RhcnRfbWluYW1vdW50KQogICAgICAgICYmKG1zZy52YWx1ZSA8IGNhcmRfYmx1ZV9taW5hbW91bnQpCiAgICAgICAgJiYoY2FyZHNfc3RhcnQubGVuZ3RoIDwgY2FyZF9zdGFydF9maXJzdCkKICAgICAgICAmJihjYXJkc19zdGFydF9jaGVja1ttc2cuc2VuZGVyXSAhPSAxKQogICAgICAgICkgewogICAgICAgIGNhcmRzX3N0YXJ0LnB1c2gobXNnLnNlbmRlcik7CiAgICAgICAgY2FyZHNfc3RhcnRfY2hlY2tbbXNnLnNlbmRlcl0gPSAxOwogICAgICB9CgogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0gICAgCiAgICAgIAogfQoKIC8qKgogICAqIE1hdGggb3BlcmF0aW9ucyB3aXRoIHNhZmV0eSBjaGVja3MKICAgKi8KICBsaWJyYXJ5IFNhZmVNYXRoIHsKICAgIGZ1bmN0aW9uIG11bCh1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgewogICAgICB1aW50IGMgPSBhICogYjsKICAgICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgICAgcmV0dXJuIGM7CiAgICB9CgogICAgZnVuY3Rpb24gZGl2KHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7CiAgICAgIC8vIGFzc2VydChiID4gMCk7IC8vIFNvbGlkaXR5IGF1dG9tYXRpY2FsbHkgdGhyb3dzIHdoZW4gZGl2aWRpbmcgYnkgMAogICAgICB1aW50IGMgPSBhIC8gYjsKICAgICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICAgICAgcmV0dXJuIGM7CiAgICB9CgogICAgZnVuY3Rpb24gc3ViKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7CiAgICAgIGFzc2VydChiIDw9IGEpOwogICAgICByZXR1cm4gYSAtIGI7CiAgICB9CgogICAgZnVuY3Rpb24gYWRkKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7CiAgICAgIHVpbnQgYyA9IGEgKyBiOwogICAgICBhc3NlcnQoYyA+PSBhKTsKICAgICAgcmV0dXJuIGM7CiAgICB9CgogICAgZnVuY3Rpb24gbWF4NjQodWludDY0IGEsIHVpbnQ2NCBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50NjQpIHsKICAgICAgcmV0dXJuIGEgPj0gYiA/IGEgOiBiOwogICAgfQoKICAgIGZ1bmN0aW9uIG1pbjY0KHVpbnQ2NCBhLCB1aW50NjQgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDY0KSB7CiAgICAgIHJldHVybiBhIDwgYiA/IGEgOiBiOwogICAgfQoKICAgIGZ1bmN0aW9uIG1heDI1Nih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgICByZXR1cm4gYSA+PSBiID8gYSA6IGI7CiAgICB9CgogICAgZnVuY3Rpb24gbWluMjU2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgIHJldHVybiBhIDwgYiA/IGEgOiBiOwogICAgfQoKICAgIGZ1bmN0aW9uIGFzc2VydChib29sIGFzc2VydGlvbikgaW50ZXJuYWwgewogICAgICBpZiAoIWFzc2VydGlvbikgewogICAgICAgIHRocm93OwogICAgICB9CiAgICB9CiAgfQ=='.
	

]
