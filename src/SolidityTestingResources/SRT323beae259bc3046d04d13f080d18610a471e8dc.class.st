Class {
	#name : #SRT323beae259bc3046d04d13f080d18610a471e8dc,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT323beae259bc3046d04d13f080d18610a471e8dc >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7CgoKLyoqCiAqIEB0aXRsZSBPd25hYmxlCiAqIEBkZXYgVGhlIE93bmFibGUgY29udHJhY3QgaGFzIGFuIG93bmVyIGFkZHJlc3MsIGFuZCBwcm92aWRlcyBiYXNpYyBhdXRob3JpemF0aW9uIGNvbnRyb2wKICogZnVuY3Rpb25zLCB0aGlzIHNpbXBsaWZpZXMgdGhlIGltcGxlbWVudGF0aW9uIG9mICJ1c2VyIHBlcm1pc3Npb25zIi4KICovCmNvbnRyYWN0IE93bmFibGUgewogIGFkZHJlc3MgcHVibGljIG93bmVyOwoKCiAgLyoqCiAgICogQGRldiBUaGUgT3duYWJsZSBjb25zdHJ1Y3RvciBzZXRzIHRoZSBvcmlnaW5hbCBgb3duZXJgIG9mIHRoZSBjb250cmFjdCB0byB0aGUgc2VuZGVyCiAgICogYWNjb3VudC4KICAgKi8KICBmdW5jdGlvbiBPd25hYmxlKCkgewogICAgb3duZXIgPSBtc2cuc2VuZGVyOwogIH0KCgogIC8qKgogICAqIEBkZXYgVGhyb3dzIGlmIGNhbGxlZCBieSBhbnkgYWNjb3VudCBvdGhlciB0aGFuIHRoZSBvd25lci4KICAgKi8KICBtb2RpZmllciBvbmx5T3duZXIoKSB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgXzsKICB9CgoKICAvKioKICAgKiBAZGV2IEFsbG93cyB0aGUgY3VycmVudCBvd25lciB0byB0cmFuc2ZlciBjb250cm9sIG9mIHRoZSBjb250cmFjdCB0byBhIG5ld093bmVyLgogICAqIEBwYXJhbSBuZXdPd25lciBUaGUgYWRkcmVzcyB0byB0cmFuc2ZlciBvd25lcnNoaXAgdG8uCiAgICovCiAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBuZXdPd25lcikgb25seU93bmVyIHsKICAgIGlmIChuZXdPd25lciAhPSBhZGRyZXNzKDApKSB7CiAgICAgIG93bmVyID0gbmV3T3duZXI7CiAgICB9CiAgfQoKfQoKY29udHJhY3QgQmxvY2t2UHVibGljTGVkZ2VyIGlzIE93bmFibGUgewoKICBzdHJ1Y3QgbG9nRW50cnl7CiAgICAgICAgc3RyaW5nIHR4VHlwZTsKICAgICAgICBzdHJpbmcgdHhJZDsKICAgICAgICBhZGRyZXNzIHRvOwogICAgICAgIHVpbnQyNTYgYW1vdW50Q29udHJpYnV0ZWQ7CiAgICAgICAgdWludDggZGlzY291bnQ7CiAgICAgICAgdWludDI1NiBibG9ja1RpbWVzdGFtcDsKICB9CiAgc3RydWN0IGRpc3RyaWJ1dGlvbkVudHJ5ewogICAgICAgIHN0cmluZyB0eElkOwogICAgICAgIGFkZHJlc3MgdG87CiAgICAgICAgdWludDI1NiBhbW91bnRDb250cmlidXRlZDsgICAgCiAgICAgICAgdWludDggZGlzY291bnQ7CiAgICAgICAgdWludDI1NiB0b2tlbkFtb3VudDsKICB9CiAgc3RydWN0IGluZGV4IHsKICAgIHVpbnQyNTYgaW5kZXg7CiAgICBib29sIHNldDsKICB9CiAgdWludDI1NiBwdWJsaWMgdHhDb3VudCA9IDA7CiAgdWludDI1NiBwdWJsaWMgZGlzdHJpYnV0aW9uRW50cnlDb3VudCA9IDA7CiAgbWFwcGluZyAoc3RyaW5nID0+IGluZGV4KSBkaXN0cmlidXRpb25JbmRleDsKICBsb2dFbnRyeVtdIHB1YmxpYyB0cmFuc2FjdGlvbkxvZzsKICBkaXN0cmlidXRpb25FbnRyeVtdIHB1YmxpYyBkaXN0cmlidXRpb25MaXN0OwogIGJvb2wgcHVibGljIGRpc3RyaWJ1dGlvbkZpeGVkID0gZmFsc2U7CgoKICAvKioKICAgKiBAZGV2IEJsb2NrdlB1YmxpY0xlZGdlciBDb25zdHJ1Y3RvcgogICAqIFJ1bnMgb25seSBvbiBpbml0aWFsIGNvbnRyYWN0IGNyZWF0aW9uLgogICAqLwogIGZ1bmN0aW9uIEJsb2NrdlB1YmxpY0xlZGdlcigpIHsKICB9CgogIC8qKgogICAqIEBkZXYgdXBkYXRlL2NyZWF0ZSBhIHJlY29yZCBpbiB0aGUgRGlzdHJpYnV0aW9uIExpc3QKICAgKiBAcGFyYW0gX3R4X2lkIEEgdW5pcXVlIGlkIGZvciB0aGUgdHJhbnNhY3Rpb24sIGNvdWxkIGJlIHRoZSBCVEMgb3IgRVRIIHR4X2lkCiAgICogQHBhcmFtIF90byBUaGUgYWRkcmVzcyB0byB0cmFuc2ZlciB0by4KICAgKiBAcGFyYW0gX2Ftb3VudCBUaGUgYW1vdW50IGNvbnRyaWJ1dGVkIGluIEVUSCBncmFpbnMuCiAgICogQHBhcmFtIF9kaXNjb3VudCBUaGUgZGlzY291bnQgdmFsdWUgaW4gcGVyY2VudDsgMTAwIG1lYW5pbmcgbm8gZGlzY291bnQsIDgwIG1lYW5pbmcgMjAlIGRpc2NvdW50LgogICAqLwogIGZ1bmN0aW9uIGFwcGVuZFRvRGlzdHJpYnV0aW9uTGlzdChzdHJpbmcgX3R4X2lkLCBhZGRyZXNzIF90bywgdWludDI1NiBfYW1vdW50LCB1aW50OCBfZGlzY291bnQpICBvbmx5T3duZXIgcmV0dXJucyAoYm9vbCkgewogICAgICAgIGluZGV4IG1lbW9yeSBpZHggPSBkaXN0cmlidXRpb25JbmRleFtfdHhfaWRdOwogICAgICAgIGJvb2wgcmV0OwogICAgICAgIGxvZ0VudHJ5IG1lbW9yeSBsZTsKICAgICAgICBkaXN0cmlidXRpb25FbnRyeSBtZW1vcnkgZGU7CgogICAgICAgIGlmKGRpc3RyaWJ1dGlvbkZpeGVkKSB7ICAKICAgICAgICAgIHJldmVydCgpOwogICAgICAgIH0KCiAgICAgICAgaWYgKCBfZGlzY291bnQgPiAxMDAgKSB7CiAgICAgICAgICByZXZlcnQoKTsKICAgICAgICB9CiAgICAgICAgLyogYnVpbGQgdGhlIGxvZyByZWNvcmQgYW5kIGFkZCBpdCB0byB0aGUgdHJhbnNhY3Rpb24gbG9nIGZpcnN0ICovCiAgICAgICAgaWYgKCAhaWR4LnNldCApIHsKICAgICAgICAgICAgcmV0ID0gZmFsc2U7CiAgICAgICAgICAgIGxlLnR4VHlwZSA9ICJJTlNFUlQiOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldCA9IHRydWU7CiAgICAgICAgICAgIGxlLnR4VHlwZSA9ICJVUERBVEUiOyAgICAgICAgICAKICAgICAgICB9CiAgICAgICAgbGUudG8gPSBfdG87CiAgICAgICAgbGUuYW1vdW50Q29udHJpYnV0ZWQgPSBfYW1vdW50OwogICAgICAgIGxlLmJsb2NrVGltZXN0YW1wID0gYmxvY2sudGltZXN0YW1wOwogICAgICAgIGxlLnR4SWQgPSBfdHhfaWQ7CiAgICAgICAgbGUuZGlzY291bnQgPSBfZGlzY291bnQ7CiAgICAgICAgdHJhbnNhY3Rpb25Mb2cucHVzaChsZSk7CiAgICAgICAgdHhDb3VudCsrOwoKICAgICAgICAvKiBub3cgYXBwZW5kIG9yIHVwZGF0ZSB0aGUgZGlzdHJpYnV0aW9uTGlzdCAqLwogICAgICAgIGRlLnR4SWQgPSBfdHhfaWQ7CiAgICAgICAgZGUudG8gPSBfdG87CiAgICAgICAgZGUuYW1vdW50Q29udHJpYnV0ZWQgPSBfYW1vdW50OwogICAgICAgIGRlLmRpc2NvdW50ID0gX2Rpc2NvdW50OwogICAgICAgIGRlLnRva2VuQW1vdW50ID0gMDsKICAgICAgICBpZiAoIWlkeC5zZXQpIHsKICAgICAgICAgIGlkeC5pbmRleCA9IGRpc3RyaWJ1dGlvbkVudHJ5Q291bnQ7CiAgICAgICAgICBpZHguc2V0ID0gdHJ1ZTsKICAgICAgICAgIGRpc3RyaWJ1dGlvbkluZGV4W190eF9pZF0gPSBpZHg7CiAgICAgICAgICBkaXN0cmlidXRpb25MaXN0LnB1c2goZGUpOwogICAgICAgICAgZGlzdHJpYnV0aW9uRW50cnlDb3VudCsrOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBkaXN0cmlidXRpb25MaXN0W2lkeC5pbmRleF0gPSBkZTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHJldDsKICB9CgoKICAvKioKICAqIEBkZXYgZmluYWxpemUgdGhlIGRpc3RyaWJ1dGlvbkxpc3QgYWZ0ZXIgdG9rZW4gcHJpY2UgaXMgc2V0IGFuZCBFVEggY29udmVyc2lvbiBpcyBrbm93bgogICogQHBhcmFtIF90b2tlblByaWNlIHRoZSBwcmljZSBvZiBhIFZFRSBpbiBVU0QtY2VudHMKICAqIEBwYXJhbSBfdXNkVG9FdGhDb252ZXJzaW9uUmF0ZSBpbiBncmFpbnMKICAqLwogIGZ1bmN0aW9uIGZpeERpc3RyaWJ1dGlvbih1aW50OCBfdG9rZW5QcmljZSwgdWludDI1NiBfdXNkVG9FdGhDb252ZXJzaW9uUmF0ZSkgb25seU93bmVyIHsKCiAgICBkaXN0cmlidXRpb25FbnRyeSBtZW1vcnkgZGU7CiAgICBsb2dFbnRyeSBtZW1vcnkgbGU7CiAgICB1aW50MjU2IGkgPSAwOwoKICAgIGlmKGRpc3RyaWJ1dGlvbkZpeGVkKSB7ICAKICAgICAgcmV2ZXJ0KCk7CiAgICB9CgogICAgZm9yKGkgPSAwOyBpIDwgZGlzdHJpYnV0aW9uRW50cnlDb3VudDsgaSsrKSB7CiAgICAgIGRlID0gZGlzdHJpYnV0aW9uTGlzdFtpXTsKICAgICAgZGUudG9rZW5BbW91bnQgPSAoZGUuYW1vdW50Q29udHJpYnV0ZWQgKiBfdXNkVG9FdGhDb252ZXJzaW9uUmF0ZSAqIDEwMCkgLyAoX3Rva2VuUHJpY2UgICogZGUuZGlzY291bnQgLyAxMDApOwogICAgICBkaXN0cmlidXRpb25MaXN0W2ldID0gZGU7CiAgICB9CiAgICBkaXN0cmlidXRpb25GaXhlZCA9IHRydWU7CiAgCiAgICBsZS50eFR5cGUgPSAiRklYRUQiOwogICAgbGUuYmxvY2tUaW1lc3RhbXAgPSBibG9jay50aW1lc3RhbXA7CiAgICBsZS50eElkID0gIl9fRklYRURfX0RJU1RSSUJVVElPTl9fIjsKICAgIHRyYW5zYWN0aW9uTG9nLnB1c2gobGUpOwogICAgdHhDb3VudCsrOwoKICB9Cgp9'.
	

]
