Class {
	#name : #SRT173bddd4f27a7737a86b2918d816018701329013,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT173bddd4f27a7737a86b2918d816018701329013 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7CgoKCgpjb250cmFjdCBra0lDT1Rlc3Q3NyB7CiAgICAKICAgIHN0cmluZyBwdWJsaWMgbmFtZTsKICAgIHN0cmluZyBwdWJsaWMgc3ltYm9sOwogICAgCiAgICB1aW50MjU2IHB1YmxpYyBkZWNpbWFsczsKICAgIHVpbnQyNTYgcHVibGljIElOSVRJQUxfU1VQUExZOwogICAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7CiAgICAKICAgIHVpbnQyNTYgcHVibGljIHJhdGU7CiAgCiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsJCQkJCQkgICAgLy9pbml0IG93bmVyIGFkZHJlc3M/Cgl1aW50MjU2IHB1YmxpYyB0b2tlbnM7CQkJCQkJCS8vaW5pdCB0aGUgY29pbiBzdXBwbHkgdmFyCgkKCXVpbnQyNTYgcHVibGljIGFtb3VudDsKCQoJCglmdW5jdGlvbiBra0lDT1Rlc3Q3NygpIHsJCQkvL1RoaXMgZnVuY3Rpb24gZ2l2ZXMgdGhlIHRvdGFsIHN1cHBseSB0byB0aGUgY29udHJhY3QKICAgICAgICBuYW1lID0gImtrVEVTVDc3IjsKICAgICAgICBzeW1ib2wgPSAia2tUU1Q3NyI7CiAgICAgICAgCiAgICAgICAgZGVjaW1hbHMgPSAwOwogICAgICAgIElOSVRJQUxfU1VQUExZID0gMzAwMDAwMDA7CiAgICAgICAgCiAgICAgICAgcmF0ZSA9IDUwMDA7CgkJCgkJb3duZXIgPSBtc2cuc2VuZGVyOwkJCSAgICAvL01ha2Ugb3duZXIgb2YgY29udHJhY3QgdGhlIGNyZWF0b3IKCQl0b2tlbnMgPSBJTklUSUFMX1NVUFBMWTsKCQl0b3RhbFN1cHBseSA9IElOSVRJQUxfU1VQUExZOwoJfQoJCgkKCS8vVGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQgd2hlbiBFdGhlciBpcyBzZW50IHRvIHRoZSBjb250cmFjdCBhZGRyZXNzCgkvL0V2ZW4gaWYgMCBldGhlciBpcyBzZW50LgoJZnVuY3Rpb24gKCkgcGF5YWJsZSB7CgkgICAgCgkgICAgdWludDI1NiB0cnlBbW91bnQgPSBkaXYoKG11bChtc2cudmFsdWUsIHJhdGUpKSwgMSBldGhlcik7ICAgICAgICAgICAvL0Rvbid0IGxldCBwZW9wbGUgYnV5IG1vcmUgdG9rZW5zIHRoYW4gdGhlcmUgYXJlLgoJICAgIAoJCWlmIChtc2cudmFsdWUgPT0gMCB8fCBtc2cudmFsdWUgPCAwIHx8IHRva2VucyA8IHRyeUFtb3VudCkgewkJLy9JZiB6ZXJvIGV0aGVyIGlzIHNlbnQsIGtpbGwuIERvIG5vdGhpbmcuIAoJCQl0aHJvdzsKCQl9CgkJCgkJYnV5VG9rZW5zKG1zZy52YWx1ZSk7CQkvL2NhbGwgYnV5VG9rZW5zIHdpdGggdGhlIGV0aGVyIHNlbnQgYW1vdW50IGFzIGFuIGFyZwoKCX0KCQoJCgkvL1RoaXMgZnVuY3Rpb24gdGFrZXMgdGhlIGFtb3VudCBvZiBldGhlciBzZW50IGFuZCBidXlzIHRva2VucwoJLy9UaGVuIHNlbmRzIHRoZSB0b2tlbnMgdG8gYnV5ZXIKCWZ1bmN0aW9uIGJ1eVRva2Vucyh1aW50MjU2IGV0aGVyU2VudCkgcGF5YWJsZSB7CSAgICAgICAgICAgICAgICAvL1Rha2UgdGhlIGV0aGVyU2VudCB2YXIgYW5kIGRvIHN0dWZmCgkgICAgYW1vdW50ID0gMDsJCQkJCQkJCQkgICAgICAgICAgICAgICAgLy9zZXQgdGhlICdhbW91bnQnIHZhciBiYWNrIHRvIHplcm8KCQlhbW91bnQgPSBkaXYoKG11bChldGhlclNlbnQsIHJhdGUpKSwgMSBldGhlcik7CQkvL3Rha2Ugc2VudCBldGhlciwgbXVsdGlwbHkgaXQgYnkgdGhlIHJhdGUgdGhlbiBkaXZpZGUgYnkgMSBldGhlci4KCQliYWxhbmNlc1ttc2cuc2VuZGVyXSArPSBhbW91bnQ7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL1NlbmQgdG9rZW5zIHRvIGJ1eWVyCgkJdG9rZW5zIC09IGFtb3VudDsJCSAgCQkJCQkgICAgICAgICAgICAgICAgLy9TdWJ0cmFjdCBib3VnaHQgdG9rZW5zIGZyb20gc3VwcGx5CgkJYW1vdW50ID0gMDsJCQkJCQkJCQkgICAgICAgICAgICAgICAgLy9zZXQgdGhlICdhbW91bnQnIHZhciBiYWNrIHRvIHplcm8KCQkKCQkKCQlvd25lci50cmFuc2Zlcihtc2cudmFsdWUpOwkJCQkJLy9TZW5kIHRoZSBFVEggdG8gY29udHJhY3Qgb3duZXIuCgoJfQoJCgkKCQoJCgkKCQoJCiAgCiAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiB2YWx1ZSk7CiAgCiAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIG93bmVyLCBhZGRyZXNzIGluZGV4ZWQgc3BlbmRlciwgdWludDI1NiB2YWx1ZSk7CiAgCiAgCiAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpIGJhbGFuY2VzOwoKCiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sKSB7CiAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IHN1YihiYWxhbmNlc1ttc2cuc2VuZGVyXSwgX3ZhbHVlKTsKICAgIGJhbGFuY2VzW190b10gPSBhZGQoYmFsYW5jZXNbX3RvXSwgX3ZhbHVlKTsKICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgIHJldHVybiB0cnVlOwogIH0KCgogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7CiAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsKICB9CiAgCiAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBhbGxvd2VkOwoKCgogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wpIHsKICAgIHZhciBfYWxsb3dhbmNlID0gYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl07CgoKICAgIGJhbGFuY2VzW190b10gPSBhZGQoYmFsYW5jZXNbX3RvXSwgX3ZhbHVlKTsKICAgIGJhbGFuY2VzW19mcm9tXSA9IHN1YihiYWxhbmNlc1tfZnJvbV0sIF92YWx1ZSk7CiAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA9IHN1YihfYWxsb3dhbmNlLCBfdmFsdWUpOwogICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgIHJldHVybiB0cnVlOwogIH0KCgogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wpIHsKCiAgICByZXF1aXJlKChfdmFsdWUgPT0gMCkgfHwgKGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID09IDApKTsKCiAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsKICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgcmV0dXJuIHRydWU7CiAgfQoKCiAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHJlbWFpbmluZykgewogICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07CiAgfQkKCQoJCgkKCQoJCiAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhICogYjsKICAgIGFzc2VydChhID09IDAgfHwgYyAvIGEgPT0gYik7CiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIGRpdih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgLy8gYXNzZXJ0KGIgPiAwKTsgLy8gU29saWRpdHkgYXV0b21hdGljYWxseSB0aHJvd3Mgd2hlbiBkaXZpZGluZyBieSAwCiAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgIC8vIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOyAvLyBUaGVyZSBpcyBubyBjYXNlIGluIHdoaWNoIHRoaXMgZG9lc24ndCBob2xkCiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgYXNzZXJ0KGMgPj0gYSk7CiAgICByZXR1cm4gYzsKICB9CgkKCQoJCgkKCQp9'.
	

]
