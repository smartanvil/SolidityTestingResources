Class {
	#name : #SRT2b96efc474b9fb935951ca65f10d0cecdc480d57,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT2b96efc474b9fb935951ca65f10d0cecdc480d57 >> base64 [
	^ ''.
	

]
