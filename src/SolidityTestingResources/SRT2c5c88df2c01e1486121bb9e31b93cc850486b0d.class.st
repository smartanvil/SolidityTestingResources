Class {
	#name : #SRT2c5c88df2c01e1486121bb9e31b93cc850486b0d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT2c5c88df2c01e1486121bb9e31b93cc850486b0d >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgovLy9FdGhlckRydWdzCgovLy8gQHRpdGxlIEludGVyZmFjZSBmb3IgY29udHJhY3RzIGNvbmZvcm1pbmcgdG8gRVJDLTcyMTogTm9uLUZ1bmdpYmxlIFRva2VucwovLy8gQGF1dGhvciBEaWV0ZXIgU2hpcmxleSA8PHNwYW4gY2xhc3M9Il9fY2ZfZW1haWxfXyIgZGF0YS1jZmVtYWlsPSI2YTBlMGYxZTBmMmEwYjEyMDMwNTA3MTAwZjA0NDQwOTA1Ij5bZW1haWwmIzE2MDtwcm90ZWN0ZWRdPC9zcGFuPj4gKGh0dHBzOi8vZ2l0aHViLmNvbS9kZXRlKQpjb250cmFjdCBFUkM3MjEgewogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF90bywgdWludDI1NiBfdG9rZW5JZCkgcHVibGljOwogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpOwogICAgZnVuY3Rpb24gaW1wbGVtZW50c0VSQzcyMSgpIHB1YmxpYyBwdXJlIHJldHVybnMgKGJvb2wpOwogICAgZnVuY3Rpb24gb3duZXJPZih1aW50MjU2IF90b2tlbklkKSBwdWJsaWMgdmlldyByZXR1cm5zIChhZGRyZXNzIGFkZHIpOwogICAgZnVuY3Rpb24gdGFrZU93bmVyc2hpcCh1aW50MjU2IF90b2tlbklkKSBwdWJsaWM7CiAgICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYgdG90YWwpOwogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF90b2tlbklkKSBwdWJsaWM7CiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdG9rZW5JZCkgcHVibGljOwoKICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBmcm9tLCBhZGRyZXNzIGluZGV4ZWQgdG8sIHVpbnQyNTYgdG9rZW5JZCk7CiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBhcHByb3ZlZCwgdWludDI1NiB0b2tlbklkKTsKfQoKY29udHJhY3QgRXRoZXJEcnVncyBpcyBFUkM3MjEgewoKICAvKioqIEVWRU5UUyAqKiovCiAgZXZlbnQgQmlydGgodWludDI1NiB0b2tlbklkLCBieXRlczMyIG5hbWUsIGFkZHJlc3Mgb3duZXIpOwogIGV2ZW50IFRva2VuU29sZCh1aW50MjU2IHRva2VuSWQsIHVpbnQyNTYgb2xkUHJpY2UsIHVpbnQyNTYgbmV3UHJpY2UsIGFkZHJlc3MgcHJldk93bmVyLCBhZGRyZXNzIHdpbm5lciwgYnl0ZXMzMiBuYW1lKTsKICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGZyb20sIGFkZHJlc3MgdG8sIHVpbnQyNTYgdG9rZW5JZCk7CgogIC8qKiogU1RSVUNUUyAqKiovCiAgc3RydWN0IERydWcgewogICAgYnl0ZXMzMiBuYW1lOwogICAgYWRkcmVzcyBvd25lcjsKICAgIHVpbnQyNTYgcHJpY2U7CiAgICB1aW50MjU2IGxhc3RfcHJpY2U7CiAgICBhZGRyZXNzIGFwcHJvdmVfdHJhbnNmZXJfdG87CiAgfQoKICAvKioqIENPTlNUQU5UUyAqKiovCiAgc3RyaW5nIHB1YmxpYyBjb25zdGFudCBOQU1FID0gIkV0aGVyRHJ1Z3MiOwogIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgU1lNQk9MID0gIkRSVUciOwogIAogIGJvb2wgcHVibGljIGdhbWVPcGVuID0gZmFsc2U7CgogIC8qKiogU1RPUkFHRSAqKiovCiAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBwcml2YXRlIG93bmVyQ291bnQ7CiAgbWFwcGluZyAodWludDI1NiA9PiBhZGRyZXNzKSBwdWJsaWMgbGFzdEJ1eWVyOwoKICBhZGRyZXNzIHB1YmxpYyBjZW9BZGRyZXNzOwogIG1hcHBpbmcgKHVpbnQyNTYgPT4gYWRkcmVzcykgcHVibGljIGV4dHJhOwogIAogIHVpbnQyNTYgZHJ1Z19jb3VudDsKIAogIG1hcHBpbmcgKHVpbnQyNTYgPT4gRHJ1ZykgcHJpdmF0ZSBkcnVnczsKCiAgLyoqKiBBQ0NFU1MgTU9ESUZJRVJTICoqKi8KICBtb2RpZmllciBvbmx5Q0VPKCkgeyByZXF1aXJlKG1zZy5zZW5kZXIgPT0gY2VvQWRkcmVzcyk7IF87IH0KCiAgLyoqKiBBQ0NFU1MgTU9ESUZJRVMgKioqLwogIGZ1bmN0aW9uIHNldENFTyhhZGRyZXNzIF9uZXdDRU8pIHB1YmxpYyBvbmx5Q0VPIHsKICAgIHJlcXVpcmUoX25ld0NFTyAhPSBhZGRyZXNzKDApKTsKICAgIGNlb0FkZHJlc3MgPSBfbmV3Q0VPOwogIH0KCiAgZnVuY3Rpb24gc2V0TGFzdCh1aW50MjU2IF9pZCwgYWRkcmVzcyBfbmV3RXh0cmEpIHB1YmxpYyBvbmx5Q0VPIHsKICAgIHJlcXVpcmUoX25ld0V4dHJhICE9IGFkZHJlc3MoMCkpOwogICAgbGFzdEJ1eWVyW19pZF0gPSBfbmV3RXh0cmE7CiAgfQoKICAvKioqIERFRkFVTFQgTUVUSE9EUyAqKiovCiAgZnVuY3Rpb24gc3ltYm9sKCkgcHVibGljIHB1cmUgcmV0dXJucyAoc3RyaW5nKSB7IHJldHVybiBTWU1CT0w7IH0KICBmdW5jdGlvbiBuYW1lKCkgcHVibGljIHB1cmUgcmV0dXJucyAoc3RyaW5nKSB7IHJldHVybiBOQU1FOyB9CiAgZnVuY3Rpb24gaW1wbGVtZW50c0VSQzcyMSgpIHB1YmxpYyBwdXJlIHJldHVybnMgKGJvb2wpIHsgcmV0dXJuIHRydWU7IH0KCiAgLyoqKiBDT05TVFJVQ1RPUiAqKiovCiAgZnVuY3Rpb24gRXRoZXJEcnVncygpIHB1YmxpYyB7CiAgICBjZW9BZGRyZXNzID0gbXNnLnNlbmRlcjsKICAgIGxhc3RCdXllclsxXSA9IG1zZy5zZW5kZXI7CiAgICBsYXN0QnV5ZXJbMl0gPSBtc2cuc2VuZGVyOwogICAgbGFzdEJ1eWVyWzNdID0gbXNnLnNlbmRlcjsKICAgIGxhc3RCdXllcls0XSA9IG1zZy5zZW5kZXI7CiAgICBsYXN0QnV5ZXJbNV0gPSBtc2cuc2VuZGVyOwogICAgbGFzdEJ1eWVyWzZdID0gbXNnLnNlbmRlcjsKICAgIGxhc3RCdXllcls3XSA9IG1zZy5zZW5kZXI7CiAgICBsYXN0QnV5ZXJbOF0gPSBtc2cuc2VuZGVyOwogICAgbGFzdEJ1eWVyWzldID0gbXNnLnNlbmRlcjsKICB9CgogIC8qKiogSU5URVJGQUNFIE1FVEhPRFMgKioqLwoKICBmdW5jdGlvbiBjcmVhdGVEcnVnKGJ5dGVzMzIgX25hbWUsIHVpbnQyNTYgX3ByaWNlKSBwdWJsaWMgb25seUNFTyB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgIT0gYWRkcmVzcygwKSk7CiAgICBfY3JlYXRlX2RydWcoX25hbWUsIGFkZHJlc3ModGhpcyksIF9wcmljZSwgMCk7CiAgfQoKICBmdW5jdGlvbiBjcmVhdGVQcm9tb0RydWcoYnl0ZXMzMiBfbmFtZSwgYWRkcmVzcyBfb3duZXIsIHVpbnQyNTYgX3ByaWNlLCB1aW50MjU2IF9sYXN0X3ByaWNlKSBwdWJsaWMgb25seUNFTyB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgIT0gYWRkcmVzcygwKSk7CiAgICByZXF1aXJlKF9vd25lciAhPSBhZGRyZXNzKDApKTsKICAgIF9jcmVhdGVfZHJ1ZyhfbmFtZSwgX293bmVyLCBfcHJpY2UsIF9sYXN0X3ByaWNlKTsKICB9CgogIGZ1bmN0aW9uIG9wZW5HYW1lKCkgcHVibGljIG9ubHlDRU8gewogICAgcmVxdWlyZShtc2cuc2VuZGVyICE9IGFkZHJlc3MoMCkpOwogICAgZ2FtZU9wZW4gPSB0cnVlOwogIH0KCiAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2IHRvdGFsKSB7CiAgICByZXR1cm4gZHJ1Z19jb3VudDsKICB9CgogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7CiAgICByZXR1cm4gb3duZXJDb3VudFtfb3duZXJdOwogIH0KICBmdW5jdGlvbiBwcmljZU9mKHVpbnQyNTYgX2RydWdfaWQpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYgcHJpY2UpIHsKICAgIHJldHVybiBkcnVnc1tfZHJ1Z19pZF0ucHJpY2U7CiAgfQoKICBmdW5jdGlvbiBnZXREcnVnKHVpbnQyNTYgX2RydWdfaWQpIHB1YmxpYyB2aWV3IHJldHVybnMgKAogICAgdWludDI1NiBpZCwKICAgIGJ5dGVzMzIgZHJ1Z19uYW1lLAogICAgYWRkcmVzcyBvd25lciwKICAgIHVpbnQyNTYgcHJpY2UsCiAgICB1aW50MjU2IGxhc3RfcHJpY2UKICApIHsKICAgIGlkID0gX2RydWdfaWQ7CiAgICBkcnVnX25hbWUgPSBkcnVnc1tfZHJ1Z19pZF0ubmFtZTsKICAgIG93bmVyID0gZHJ1Z3NbX2RydWdfaWRdLm93bmVyOwogICAgcHJpY2UgPSBkcnVnc1tfZHJ1Z19pZF0ucHJpY2U7CiAgICBsYXN0X3ByaWNlID0gZHJ1Z3NbX2RydWdfaWRdLmxhc3RfcHJpY2U7CiAgfQogIAogIGZ1bmN0aW9uIGdldERydWdzKCkgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1NltdLCBieXRlczMyW10sIGFkZHJlc3NbXSwgdWludDI1NltdKSB7CiAgICB1aW50MjU2W10gbWVtb3J5IGlkcyA9IG5ldyB1aW50MjU2W10oZHJ1Z19jb3VudCk7CiAgICBieXRlczMyW10gbWVtb3J5IG5hbWVzID0gbmV3IGJ5dGVzMzJbXShkcnVnX2NvdW50KTsKICAgIGFkZHJlc3NbXSBtZW1vcnkgb3duZXJzID0gbmV3IGFkZHJlc3NbXShkcnVnX2NvdW50KTsKICAgIHVpbnQyNTZbXSBtZW1vcnkgcHJpY2VzID0gbmV3IHVpbnQyNTZbXShkcnVnX2NvdW50KTsKICAgIGZvcih1aW50MjU2IF9pZCA9IDA7IF9pZCA8IGRydWdfY291bnQ7IF9pZCsrKXsKICAgICAgaWRzW19pZF0gPSBfaWQ7CiAgICAgIG5hbWVzW19pZF0gPSBkcnVnc1tfaWRdLm5hbWU7CiAgICAgIG93bmVyc1tfaWRdID0gZHJ1Z3NbX2lkXS5vd25lcjsKICAgICAgcHJpY2VzW19pZF0gPSBkcnVnc1tfaWRdLnByaWNlOwogICAgfQogICAgcmV0dXJuIChpZHMsIG5hbWVzLCBvd25lcnMsIHByaWNlcyk7CiAgfQogIAogIGZ1bmN0aW9uIHB1cmNoYXNlKHVpbnQyNTYgX2RydWdfaWQpIHB1YmxpYyBwYXlhYmxlIHsKICAgIHJlcXVpcmUoZ2FtZU9wZW4gPT0gdHJ1ZSk7CiAgICBEcnVnIHN0b3JhZ2UgZHJ1ZyA9IGRydWdzW19kcnVnX2lkXTsKCiAgICByZXF1aXJlKGRydWcub3duZXIgIT0gbXNnLnNlbmRlcik7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgIT0gYWRkcmVzcygwKSk7ICAKICAgIHJlcXVpcmUobXNnLnZhbHVlID49IGRydWcucHJpY2UpOwoKICAgIHVpbnQyNTYgZXhjZXNzID0gU2FmZU1hdGguc3ViKG1zZy52YWx1ZSwgZHJ1Zy5wcmljZSk7CiAgICB1aW50MjU2IGhhbGZfZGlmZiA9IFNhZmVNYXRoLmRpdihTYWZlTWF0aC5zdWIoZHJ1Zy5wcmljZSwgZHJ1Zy5sYXN0X3ByaWNlKSwgMik7CiAgICB1aW50MjU2IHJld2FyZCA9IFNhZmVNYXRoLmFkZChoYWxmX2RpZmYsIGRydWcubGFzdF9wcmljZSk7CiAgCiAgICBsYXN0QnV5ZXJbMV0uc2VuZCh1aW50MjU2KFNhZmVNYXRoLm11bChTYWZlTWF0aC5kaXYoaGFsZl9kaWZmLCAxMDApLCA2OSkpKTsgLy82OSUgZ29lcyB0byBsYXN0IGJ1eWVyCiAgICBsYXN0QnV5ZXJbNl0uc2VuZCh1aW50MjU2KFNhZmVNYXRoLm11bChTYWZlTWF0aC5kaXYoaGFsZl9kaWZmLCAxMDApLCAyKSkpOyAgLy8yJSBnb2VzIHRvIDZ0aCBsYXN0IGJ1eWVyLCBlbHNlIGNlbwogICAgbGFzdEJ1eWVyWzldLnNlbmQodWludDI1NihTYWZlTWF0aC5tdWwoU2FmZU1hdGguZGl2KGhhbGZfZGlmZiwgMTAwKSwgMikpKTsgIC8vMiUgZ29lcyB0byA5dGggbGFzdCBidXllciwgZWxzZSBjZW8KCiAgICBpZihkcnVnLm93bmVyID09IGFkZHJlc3ModGhpcykpewogICAgICBjZW9BZGRyZXNzLnNlbmQocmV3YXJkKTsKICAgIH0gZWxzZSB7CiAgICAgIGRydWcub3duZXIuc2VuZChyZXdhcmQpOwogICAgfQogICAgCiAgICAKICAgIGRydWcubGFzdF9wcmljZSA9IGRydWcucHJpY2U7CiAgICBhZGRyZXNzIF9vbGRfb3duZXIgPSBkcnVnLm93bmVyOwogICAgCiAgICBpZihkcnVnLnByaWNlIDwgMTY5MDAwMDAwMDAwMDAwMDAwMCl7IC8vIDEuNjkgZXRoCiAgICAgICAgZHJ1Zy5wcmljZSA9IFNhZmVNYXRoLm11bChTYWZlTWF0aC5kaXYoZHJ1Zy5wcmljZSwgMTAwKSwgMTY5KTsgLy8gMS42OXgKICAgIH0gZWxzZSB7CiAgICAgICAgZHJ1Zy5wcmljZSA9IFNhZmVNYXRoLm11bChTYWZlTWF0aC5kaXYoZHJ1Zy5wcmljZSwgMTAwKSwgMTI1KTsgLy8gMS4yeAogICAgfQogICAgZHJ1Zy5vd25lciA9IG1zZy5zZW5kZXI7CgogICAgbGFzdEJ1eWVyWzldID0gbGFzdEJ1eWVyWzhdOwogICAgbGFzdEJ1eWVyWzhdID0gbGFzdEJ1eWVyWzddOwogICAgbGFzdEJ1eWVyWzddID0gbGFzdEJ1eWVyWzZdOwogICAgbGFzdEJ1eWVyWzZdID0gbGFzdEJ1eWVyWzVdOwogICAgbGFzdEJ1eWVyWzVdID0gbGFzdEJ1eWVyWzRdOwogICAgbGFzdEJ1eWVyWzRdID0gbGFzdEJ1eWVyWzNdOwogICAgbGFzdEJ1eWVyWzNdID0gbGFzdEJ1eWVyWzJdOwogICAgbGFzdEJ1eWVyWzJdID0gbGFzdEJ1eWVyWzFdOwogICAgbGFzdEJ1eWVyWzFdID0gbXNnLnNlbmRlcjsKCiAgICBUcmFuc2Zlcihfb2xkX293bmVyLCBkcnVnLm93bmVyLCBfZHJ1Z19pZCk7CiAgICBUb2tlblNvbGQoX2RydWdfaWQsIGRydWcubGFzdF9wcmljZSwgZHJ1Zy5wcmljZSwgX29sZF9vd25lciwgZHJ1Zy5vd25lciwgZHJ1Zy5uYW1lKTsKCiAgICBtc2cuc2VuZGVyLnNlbmQoZXhjZXNzKTsKICB9CgogIGZ1bmN0aW9uIHBheW91dCgpIHB1YmxpYyBvbmx5Q0VPIHsKICAgIGNlb0FkZHJlc3Muc2VuZCh0aGlzLmJhbGFuY2UpOwogIH0KCiAgZnVuY3Rpb24gdG9rZW5zT2ZPd25lcihhZGRyZXNzIF9vd25lcikgcHVibGljIHZpZXcgcmV0dXJucyh1aW50MjU2W10gb3duZXJUb2tlbnMpIHsKICAgIHVpbnQyNTYgdG9rZW5Db3VudCA9IGJhbGFuY2VPZihfb3duZXIpOwogICAgaWYgKHRva2VuQ291bnQgPT0gMCkgewogICAgICByZXR1cm4gbmV3IHVpbnQyNTZbXSgwKTsKICAgIH0gZWxzZSB7CiAgICAgIHVpbnQyNTZbXSBtZW1vcnkgcmVzdWx0ID0gbmV3IHVpbnQyNTZbXSh0b2tlbkNvdW50KTsKICAgICAgdWludDI1NiByZXN1bHRJbmRleCA9IDA7CiAgICAgIGZvciAodWludDI1NiBkcnVnSWQgPSAwOyBkcnVnSWQgPD0gdG90YWxTdXBwbHkoKTsgZHJ1Z0lkKyspIHsKICAgICAgICBpZiAoZHJ1Z3NbZHJ1Z0lkXS5vd25lciA9PSBfb3duZXIpIHsKICAgICAgICAgIHJlc3VsdFtyZXN1bHRJbmRleF0gPSBkcnVnSWQ7CiAgICAgICAgICByZXN1bHRJbmRleCsrOwogICAgICAgIH0KICAgICAgfQogICAgICByZXR1cm4gcmVzdWx0OwogICAgfQogIH0KCiAgLyoqKiBFUkMtNzIxIGNvbXBsaWFuY2UuICoqKi8KCiAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF90bywgdWludDI1NiBfZHJ1Z19pZCkgcHVibGljIHsKICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBkcnVnc1tfZHJ1Z19pZF0ub3duZXIpOwogICAgZHJ1Z3NbX2RydWdfaWRdLmFwcHJvdmVfdHJhbnNmZXJfdG8gPSBfdG87CiAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfdG8sIF9kcnVnX2lkKTsKICB9CiAgZnVuY3Rpb24gb3duZXJPZih1aW50MjU2IF9kcnVnX2lkKSBwdWJsaWMgdmlldyByZXR1cm5zIChhZGRyZXNzIG93bmVyKXsKICAgIG93bmVyID0gZHJ1Z3NbX2RydWdfaWRdLm93bmVyOwogICAgcmVxdWlyZShvd25lciAhPSBhZGRyZXNzKDApKTsKICB9CiAgZnVuY3Rpb24gdGFrZU93bmVyc2hpcCh1aW50MjU2IF9kcnVnX2lkKSBwdWJsaWMgewogICAgYWRkcmVzcyBvbGRPd25lciA9IGRydWdzW19kcnVnX2lkXS5vd25lcjsKICAgIHJlcXVpcmUobXNnLnNlbmRlciAhPSBhZGRyZXNzKDApKTsKICAgIHJlcXVpcmUoZHJ1Z3NbX2RydWdfaWRdLmFwcHJvdmVfdHJhbnNmZXJfdG8gPT0gbXNnLnNlbmRlcik7CiAgICBfdHJhbnNmZXIob2xkT3duZXIsIG1zZy5zZW5kZXIsIF9kcnVnX2lkKTsKICB9CiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX2RydWdfaWQpIHB1YmxpYyB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgIT0gYWRkcmVzcygwKSk7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gZHJ1Z3NbX2RydWdfaWRdLm93bmVyKTsKICAgIF90cmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF9kcnVnX2lkKTsKICB9CiAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF9kcnVnX2lkKSBwdWJsaWMgewogICAgcmVxdWlyZShfZnJvbSA9PSBkcnVnc1tfZHJ1Z19pZF0ub3duZXIpOwogICAgcmVxdWlyZShkcnVnc1tfZHJ1Z19pZF0uYXBwcm92ZV90cmFuc2Zlcl90byA9PSBfdG8pOwogICAgcmVxdWlyZShfdG8gIT0gYWRkcmVzcygwKSk7CiAgICBfdHJhbnNmZXIoX2Zyb20sIF90bywgX2RydWdfaWQpOwogIH0KCiAgLyoqKiBQUklWQVRFIE1FVEhPRFMgKioqLwoKICBmdW5jdGlvbiBfY3JlYXRlX2RydWcoYnl0ZXMzMiBfbmFtZSwgYWRkcmVzcyBfb3duZXIsIHVpbnQyNTYgX3ByaWNlLCB1aW50MjU2IF9sYXN0X3ByaWNlKSBwcml2YXRlIHsKICAgIC8vIFBhcmFtczogbmFtZSwgb3duZXIsIHByaWNlLCBpc19mb3Jfc2FsZSwgaXNfcHVibGljLCBzaGFyZV9wcmljZSwgaW5jcmVhc2UsIGZlZSwgc2hhcmVfY291bnQsCiAgICBkcnVnc1tkcnVnX2NvdW50XSA9IERydWcoewogICAgICBuYW1lOiBfbmFtZSwKICAgICAgb3duZXI6IF9vd25lciwKICAgICAgcHJpY2U6IF9wcmljZSwKICAgICAgbGFzdF9wcmljZTogX2xhc3RfcHJpY2UsCiAgICAgIGFwcHJvdmVfdHJhbnNmZXJfdG86IGFkZHJlc3MoMCkKICAgIH0pOwogICAgCiAgICBEcnVnIHN0b3JhZ2UgZHJ1ZyA9IGRydWdzW2RydWdfY291bnRdOwogICAgCiAgICBCaXJ0aChkcnVnX2NvdW50LCBfbmFtZSwgX293bmVyKTsKICAgIFRyYW5zZmVyKGFkZHJlc3ModGhpcyksIF9vd25lciwgZHJ1Z19jb3VudCk7CiAgICBkcnVnX2NvdW50Kys7CiAgfQoKICBmdW5jdGlvbiBfdHJhbnNmZXIoYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX2RydWdfaWQpIHByaXZhdGUgewogICAgZHJ1Z3NbX2RydWdfaWRdLm93bmVyID0gX3RvOwogICAgZHJ1Z3NbX2RydWdfaWRdLmFwcHJvdmVfdHJhbnNmZXJfdG8gPSBhZGRyZXNzKDApOwogICAgb3duZXJDb3VudFtfZnJvbV0gLT0gMTsKICAgIG93bmVyQ291bnRbX3RvXSArPSAxOwogICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX2RydWdfaWQpOwogIH0KfQoKbGlicmFyeSBTYWZlTWF0aCB7CiAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIGlmIChhID09IDApIHsKICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICB1aW50MjU2IGMgPSBhICogYjsKICAgIGFzc2VydChjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KICBmdW5jdGlvbiBkaXYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSAvIGI7CiAgICByZXR1cm4gYzsKICB9CiAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIGFzc2VydChiIDw9IGEpOwogICAgcmV0dXJuIGEgLSBiOwogIH0KICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KfQ=='.
	

]
