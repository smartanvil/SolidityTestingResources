Class {
	#name : #SRTFE2F0a2d25639366b19E4105068720837277E70F,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTFE2F0a2d25639366b19E4105068720837277E70F >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMjsKY29udHJhY3QgdG9rZW4geyAKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MsIHVpbnQyNTYpeyAgfQogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsgfQp9CgovLy8gQHRpdGxlIEZhaXJBdWN0aW9uIGNvbnRyYWN0Ci8vLyBAYXV0aG9yIENocmlzdG9waGVyIEdyYW50IC0gPDxzcGFuIGNsYXNzPSJfX2NmX2VtYWlsX18iIGRhdGEtY2ZlbWFpbD0iZjc5NDlmODU5ZTg0ODM5ODg3OWY5Mjg1Yjc5MzkyOWI4NzlmOWVkOTlhOTY4NTljOTI4Mzg0Ij5bZW1haWwmIzE2MDtwcm90ZWN0ZWRdPC9zcGFuPj4KY29udHJhY3QgRmFpckF1Y3Rpb24gewogICAgLyogU3RhdGUgKi8KICAgIGFkZHJlc3MgcHVibGljIGJlbmVmaWNpYXJ5OwogICAgdWludCBwdWJsaWMgYW1vdW50UmFpc2VkOyB1aW50IHB1YmxpYyBzdGFydFRpbWU7IHVpbnQgcHVibGljIGRlYWRsaW5lOyB1aW50IHB1YmxpYyBtZW1iZXJDb3VudDsgdWludCBwdWJsaWMgY3Jvd2RzYWxlQ2FwOwogICAgdWludDI1NiBwdWJsaWMgdG9rZW5TdXBwbHk7CiAgICB0b2tlbiBwdWJsaWMgdG9rZW5SZXdhcmQ7CiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIGJhbGFuY2VPZjsKICAgIG1hcHBpbmcgKHVpbnQgPT4gYWRkcmVzcykgYWNjb3VudEluZGV4OwogICAgYm9vbCBwdWJsaWMgZmluYWxpemVkOwoKICAgIC8qIEV2ZW50cyAqLwogICAgZXZlbnQgVG9rZW5BbGxvY2F0aW9uKGFkZHJlc3MgcmVjaXBpZW50LCB1aW50IGFtb3VudCk7CiAgICBldmVudCBGaW5hbGl6ZWQoYWRkcmVzcyBiZW5lZmljaWFyeSwgdWludCBhbW91bnRSYWlzZWQpOwogICAgZXZlbnQgRnVuZFRyYW5zZmVyKGFkZHJlc3MgYmFja2VyLCB1aW50IGFtb3VudCk7CiAgICBldmVudCBGdW5kQ2xhaW0oYWRkcmVzcyBjbGFpbWFudCwgdWludCBhbW91bnQpOwoKICAgIC8qIEluaXRpYWxpemUgcmVsZXZhbnQgY3Jvd2RzYWxlIGNvbnRyYWN0IGRldGFpbHMgKi8KICAgIGZ1bmN0aW9uIEZhaXJBdWN0aW9uKAogICAgICAgIGFkZHJlc3MgZnVuZGVkQWRkcmVzcywKICAgICAgICB1aW50IGVwb2NoU3RhcnRUaW1lLAogICAgICAgIHVpbnQgZHVyYXRpb25Jbk1pbnV0ZXMsCiAgICAgICAgdWludDI1NiBjYXBPbkNyb3dkc2FsZSwKICAgICAgICB0b2tlbiBjb250cmFjdEFkZHJlc3NPZlJld2FyZFRva2VuCiAgICApIHsKICAgICAgICBiZW5lZmljaWFyeSA9IGZ1bmRlZEFkZHJlc3M7CiAgICAgICAgc3RhcnRUaW1lID0gZXBvY2hTdGFydFRpbWU7CiAgICAgICAgZGVhZGxpbmUgPSBzdGFydFRpbWUgKyAoZHVyYXRpb25Jbk1pbnV0ZXMgKiAxIG1pbnV0ZXMpOwogICAgICAgIHRva2VuUmV3YXJkID0gdG9rZW4oY29udHJhY3RBZGRyZXNzT2ZSZXdhcmRUb2tlbik7CiAgICAgICAgY3Jvd2RzYWxlQ2FwID0gY2FwT25Dcm93ZHNhbGUgKiAxIGV0aGVyOwogICAgICAgIGZpbmFsaXplZCA9IGZhbHNlOwogICAgfQoKICAgIC8qIGRlZmF1bHQgZnVuY3Rpb24gKGNhbGxlZCB3aGVuZXZlciBmdW5kcyBhcmUgc2VudCB0byB0aGUgRmFpckF1Y3Rpb24pICovCiAgICBmdW5jdGlvbiAoKSBwYXlhYmxlIHsKICAgICAgICAvKiBFbnN1cmUgdGhhdCBhdWN0aW9uIGlzIG9uZ29pbmcgKi8KICAgICAgICBpZiAobm93IDwgc3RhcnRUaW1lKSB0aHJvdzsKICAgICAgICBpZiAobm93ID49IGRlYWRsaW5lKSB0aHJvdzsKCiAgICAgICAgdWludCBhbW91bnQgPSBtc2cudmFsdWU7CgogICAgICAgIC8qIEVuc3VyZSB0aGF0IHdlIGRvIG5vdCBwYXNzIHRoZSBjYXAgKi8KICAgICAgICBpZiAoYW1vdW50UmFpc2VkICsgYW1vdW50ID4gY3Jvd2RzYWxlQ2FwKSB0aHJvdzsKCiAgICAgICAgdWludDI1NiBleGlzdGluZ0JhbGFuY2UgPSBiYWxhbmNlT2ZbbXNnLnNlbmRlcl07CgogICAgICAgIC8qIFRhbGx5IG5ldyBtZW1iZXJzIChoZWxwcyBpdGVyYXRpb24gbGF0ZXIpICovCiAgICAgICAgaWYgKGV4aXN0aW5nQmFsYW5jZSA9PSAwKSB7CiAgICAgICAgICAgIGFjY291bnRJbmRleFttZW1iZXJDb3VudF0gPSBtc2cuc2VuZGVyOwogICAgICAgICAgICBtZW1iZXJDb3VudCArPSAxOwogICAgICAgIH0gCiAgICAgICAgCiAgICAgICAgLyogVHJhY2sgY29udHJpYnV0aW9uIGFtb3VudCAqLwogICAgICAgIGJhbGFuY2VPZlttc2cuc2VuZGVyXSA9IGV4aXN0aW5nQmFsYW5jZSArIGFtb3VudDsKICAgICAgICBhbW91bnRSYWlzZWQgKz0gYW1vdW50OwoKICAgICAgICAvKiBGaXJlIEZ1bmRUcmFuc2ZlciBldmVudCAqLwogICAgICAgIEZ1bmRUcmFuc2Zlcihtc2cuc2VuZGVyLCBhbW91bnQpOwogICAgfQoKICAgIC8qIGZpbmFsaXplKCkgY2FuIGJlIGNhbGxlZCBvbmNlIHRoZSBGYWlyQXVjdGlvbiBoYXMgZW5kZWQsIHdoaWNoIHdpbGwgYWxsb3cgd2l0aGRyYXdhbHMgKi8KICAgIGZ1bmN0aW9uIGZpbmFsaXplKCkgewogICAgICAgIC8qIE5vdGhpbmcgdG8gZmluYWxpemUgKi8KICAgICAgICBpZiAoYW1vdW50UmFpc2VkID09IDApIHRocm93OwoKICAgICAgICAvKiBBdWN0aW9uIHN0aWxsIG9uZ29pbmcgKi8KICAgICAgICBpZiAobm93IDwgZGVhZGxpbmUpIHsKICAgICAgICAgICAgLyogRG9uJ3QgdGVybWluYXRlIGF1Y3Rpb24gYmVmb3JlIGNhcCBpcyByZWFjaGVkICovCiAgICAgICAgICAgIGlmIChhbW91bnRSYWlzZWQgPCBjcm93ZHNhbGVDYXApIHRocm93OwogICAgICAgIH0KCiAgICAgICAgLyogU25hcHNob3QgYXZhaWxhYmxlIHN1cHBseSBvZiByZXdhcmQgdG9rZW5zICovCiAgICAgICAgdG9rZW5TdXBwbHkgPSB0b2tlblJld2FyZC5iYWxhbmNlT2YodGhpcyk7CgogICAgICAgIC8qIE1hcmsgdGhlIEZhaXJBdWN0aW9uIGFzIGZpbmFsaXplZCAqLwogICAgICAgIGZpbmFsaXplZCA9IHRydWU7CiAgICAgICAgLyogRmlyZSBGaW5hbGl6ZWQgZXZlbnQgKi8KICAgICAgICBGaW5hbGl6ZWQoYmVuZWZpY2lhcnksIGFtb3VudFJhaXNlZCk7CiAgICB9CgogICAgLyogaW5kaXZpZHVhbENsYWltKCkgY2FuIGJlIGNhbGxlZCBieSBhbnkgYXVjdGlvbiBwYXJ0aWNpcGFudCBvbmNlIHRoZSBGYWlyQXVjdGlvbiBpcyBmaW5hbGl6ZWQsIHRvIGNsYWltIHRoZSB0b2tlbnMgdGhleSBhcmUgb3dlZCBmcm9tIHRoZSBhdWN0aW9uICovCiAgICBmdW5jdGlvbiBpbmRpdmlkdWFsQ2xhaW0oKSB7CiAgICAgICAgLyogT25seSBhbGxvdyBvbmNlIGF1Y3Rpb24gaGFzIGJlZW4gZmluYWxpemVkICovCiAgICAgICAgaWYgKCFmaW5hbGl6ZWQpIHRocm93OwoKICAgICAgICAvKiBHcmFudCB0b2tlbnMgZHVlICovCiAgICAgICAgdG9rZW5SZXdhcmQudHJhbnNmZXIobXNnLnNlbmRlciwgKGJhbGFuY2VPZlttc2cuc2VuZGVyXSAqIHRva2VuU3VwcGx5IC8gYW1vdW50UmFpc2VkKSk7CiAgICAgICAgLyogRmlyZSBUb2tlbkFsbG9jYXRpb24gZXZlbnQgKi8KICAgICAgICBUb2tlbkFsbG9jYXRpb24obXNnLnNlbmRlciwgKGJhbGFuY2VPZlttc2cuc2VuZGVyXSAqIHRva2VuU3VwcGx5IC8gYW1vdW50UmFpc2VkKSk7CiAgICAgICAgLyogUHJldmVudCByZXBlYXQtd2l0aGRyYXdhbHMgKi8KICAgICAgICBiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPSAwOwogICAgfQoKICAgIC8qIGJlbmVmaWNpYXJ5U2VuZCgpIGNhbiBiZSBjYWxsZWQgb25jZSB0aGUgRmFpckF1Y3Rpb24gaXMgZmluYWxpemVkLCB0byBzZW5kIHRoZSBjcm93ZHNhbGUgcHJvY2VlZHMgdG8gdGhlaXIgZGVzdGluYXRpb24gYWRkcmVzcyAqLwogICAgZnVuY3Rpb24gYmVuZWZpY2lhcnlTZW5kKCkgewogICAgICAgIC8qIE9ubHkgYWxsb3cgb25jZSBhdWN0aW9uIGhhcyBiZWVuIGZpbmFsaXplZCAqLwogICAgICAgIGlmICghZmluYWxpemVkKSB0aHJvdzsKCiAgICAgICAgLyogU2VuZCBwcm9jZWVkcyB0byBiZW5lZmljaWFyeSAqLwogICAgICAgIGlmIChiZW5lZmljaWFyeS5zZW5kKGFtb3VudFJhaXNlZCkpIHsKICAgICAgICAgICAgLyogRmlyZSBGdW5kQ2xhaW0gZXZlbnQgKi8KICAgICAgICAgICAgRnVuZENsYWltKGJlbmVmaWNpYXJ5LCBhbW91bnRSYWlzZWQpOwogICAgICAgIH0KICAgIH0KCiAgICAvKiBhdXRvbWF0aWNXaXRoZHJhd0xvb3AoKSBjYW4gYmUgY2FsbGVkIG9uY2UgdGhlIEZhaXJBdWN0aW9uIGlzIGZpbmFsaXplZCB0byBhdXRvbWF0aWNhbGx5IGFsbG9jYXRlIGEgYmF0Y2ggb2YgYXVjdGlvbmVkIHRva2VucyAqLwogICAgZnVuY3Rpb24gYXV0b21hdGljV2l0aGRyYXdMb29wKHVpbnQgc3RhcnRJbmRleCwgdWludCBlbmRJbmRleCkgewogICAgICAgIC8qIE9ubHkgYWxsb3cgb25jZSBhdWN0aW9uIGhhcyBiZWVuIGZpbmFsaXplZCAqLwogICAgICAgIGlmICghZmluYWxpemVkKSB0aHJvdzsKICAgICAgICAKICAgICAgICAvKiBEaXN0cmlidXRlIGF1Y3Rpb25lZCB0b2tlbnMgZmFpcmx5IGFtb25nIGEgYmF0Y2ggb2YgcGFydGljaXBhbnRzLiAqLwogICAgICAgIGZvciAodWludCBpPXN0YXJ0SW5kZXg7IGk8PWVuZEluZGV4ICYmIGk8bWVtYmVyQ291bnQ7IGkrKykgewogICAgICAgICAgICAvKiBTaG91bGQgbm90IG9jY3VyICovCiAgICAgICAgICAgIGlmIChhY2NvdW50SW5kZXhbaV0gPT0gMCkKICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICAvKiBHcmFudCB0b2tlbnMgZHVlICovCiAgICAgICAgICAgIHRva2VuUmV3YXJkLnRyYW5zZmVyKGFjY291bnRJbmRleFtpXSwgKGJhbGFuY2VPZlthY2NvdW50SW5kZXhbaV1dICogdG9rZW5TdXBwbHkgLyBhbW91bnRSYWlzZWQpKTsKICAgICAgICAgICAgLyogRmlyZSBUb2tlbkFsbG9jYXRpb24gZXZlbnQgKi8KICAgICAgICAgICAgVG9rZW5BbGxvY2F0aW9uKGFjY291bnRJbmRleFtpXSwgKGJhbGFuY2VPZlthY2NvdW50SW5kZXhbaV1dICogdG9rZW5TdXBwbHkgLyBhbW91bnRSYWlzZWQpKTsKICAgICAgICAgICAgLyogUHJldmVudCByZXBlYXQtd2l0aGRyYXdhbHMgKi8KICAgICAgICAgICAgYmFsYW5jZU9mW2FjY291bnRJbmRleFtpXV0gPSAwOwogICAgICAgIH0KICAgIH0KfQ=='.
	

]
