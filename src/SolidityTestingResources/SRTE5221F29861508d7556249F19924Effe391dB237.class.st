Class {
	#name : #SRTE5221F29861508d7556249F19924Effe391dB237,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTE5221F29861508d7556249F19924Effe391dB237 >> base64 [
	^ ''.
	

]
