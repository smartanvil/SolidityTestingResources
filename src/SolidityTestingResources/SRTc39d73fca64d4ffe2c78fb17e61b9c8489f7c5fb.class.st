Class {
	#name : #SRTc39d73fca64d4ffe2c78fb17e61b9c8489f7c5fb,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTc39d73fca64d4ffe2c78fb17e61b9c8489f7c5fb >> base64 [
	^ ''.
	

]
