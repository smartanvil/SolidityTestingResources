Class {
	#name : #SRT2f2f25ee6a102272a484fa85388f0206ec7b0668,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT2f2f25ee6a102272a484fa85388f0206ec7b0668 >> base64 [
	^ ''.
	

]
