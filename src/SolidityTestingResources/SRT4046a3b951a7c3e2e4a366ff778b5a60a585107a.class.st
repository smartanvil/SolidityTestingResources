Class {
	#name : #SRT4046a3b951a7c3e2e4a366ff778b5a60a585107a,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT4046a3b951a7c3e2e4a366ff778b5a60a585107a >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTA7Cgpjb250cmFjdCB0b2tlblJlY2lwaWVudCB7IGZ1bmN0aW9uIHJlY2VpdmVBcHByb3ZhbChhZGRyZXNzIF9mcm9tLCB1aW50MjU2IF92YWx1ZSwgYWRkcmVzcyBfdG9rZW4sIGJ5dGVzIF9leHRyYURhdGEpOyB9CgovLy8gQHRpdGxlIElDT05PTUkgRGFhIHRva2VuCmNvbnRyYWN0IERhYVRva2VuIHsKICAvLwogIC8vIGV2ZW50cwogIC8vCiAgLy8gRVJDMjAgZXZlbnRzCiAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50MjU2IF92YWx1ZSk7CiAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7CgogIC8vIG1pbnQvYnVybiBldmVudHMKICBldmVudCBNaW50KGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX2Ftb3VudCwgdWludDI1NiBfbmV3VG90YWxTdXBwbHkpOwogIGV2ZW50IEJ1cm4oYWRkcmVzcyBpbmRleGVkIF9mcm9tLCB1aW50MjU2IF9hbW91bnQsIHVpbnQyNTYgX25ld1RvdGFsU3VwcGx5KTsKCiAgLy8gYWRtaW4gZXZlbnRzCiAgZXZlbnQgQmxvY2tMb2NrU2V0KHVpbnQyNTYgX3ZhbHVlKTsKICBldmVudCBOZXdPd25lcihhZGRyZXNzIF9uZXdPd25lcik7CiAgZXZlbnQgTmV3TWludGVyKGFkZHJlc3MgX21pbnRlcik7CgogIG1vZGlmaWVyIG9ubHlPd25lciB7CiAgICBpZiAobXNnLnNlbmRlciA9PSBvd25lcikgewogICAgICBfOwogICAgfQogIH0KCiAgbW9kaWZpZXIgbWludGVyT3JPd25lciB7CiAgICBpZiAobXNnLnNlbmRlciA9PSBtaW50ZXIgfHwgbXNnLnNlbmRlciA9PSBvd25lcikgewogICAgICBfOwogICAgfQogIH0KCiAgbW9kaWZpZXIgYmxvY2tMb2NrKGFkZHJlc3MgX3NlbmRlcikgewogICAgaWYgKCFpc0xvY2tlZCgpIHx8IF9zZW5kZXIgPT0gb3duZXIpIHsKICAgICAgXzsKICAgIH0KICB9CgogIG1vZGlmaWVyIHZhbGlkVHJhbnNmZXIoYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX2Ftb3VudCkgewogICAgaWYgKGlzVHJhbnNmZXJWYWxpZChfZnJvbSwgX3RvLCBfYW1vdW50KSkgewogICAgICBfOwogICAgfQogIH0KCiAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7CiAgc3RyaW5nIHB1YmxpYyBuYW1lOwogIHVpbnQ4IHB1YmxpYyBkZWNpbWFsczsKICBzdHJpbmcgcHVibGljIHN5bWJvbDsKICBzdHJpbmcgcHVibGljIHZlcnNpb24gPSAnMC4wLjEnOwogIGFkZHJlc3MgcHVibGljIG93bmVyOwogIGFkZHJlc3MgcHVibGljIG1pbnRlcjsKICB1aW50MjU2IHB1YmxpYyBsb2NrZWRVbnRpbEJsb2NrOwoKICBmdW5jdGlvbiBEYWFUb2tlbigKICAgICAgc3RyaW5nIF90b2tlbk5hbWUsCiAgICAgIHVpbnQ4IF9kZWNpbWFsVW5pdHMsCiAgICAgIHN0cmluZyBfdG9rZW5TeW1ib2wsCiAgICAgIHVpbnQyNTYgX2xvY2tlZFVudGlsQmxvY2sKICApIHsKCiAgICBuYW1lID0gX3Rva2VuTmFtZTsKICAgIGRlY2ltYWxzID0gX2RlY2ltYWxVbml0czsKICAgIHN5bWJvbCA9IF90b2tlblN5bWJvbDsKICAgIGxvY2tlZFVudGlsQmxvY2sgPSBfbG9ja2VkVW50aWxCbG9jazsKICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICB9CgogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkKICAgICAgcHVibGljCiAgICAgIGJsb2NrTG9jayhtc2cuc2VuZGVyKQogICAgICB2YWxpZFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKQogICAgICByZXR1cm5zIChib29sIHN1Y2Nlc3MpCiAgewoKICAgIC8vIHRyYW5zZmVyIHRva2VucwogICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOwogICAgYmFsYW5jZXNbX3RvXSArPSBfdmFsdWU7CgogICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgcmV0dXJuIHRydWU7CiAgfQoKICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKQogICAgICBwdWJsaWMKICAgICAgcmV0dXJucyAoYm9vbCBzdWNjZXNzKQogIHsKICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpCiAgICAgIHB1YmxpYwogICAgICBibG9ja0xvY2soX2Zyb20pCiAgICAgIHZhbGlkVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKQogICAgICByZXR1cm5zIChib29sIHN1Y2Nlc3MpCiAgewoKICAgIC8vIGNoZWNrIHN1ZmZpY2llbnQgYWxsb3dhbmNlCiAgICBpZiAoX3ZhbHVlID4gYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0pIHsKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQoKICAgIC8vIHRyYW5zZmVyIHRva2VucwogICAgYmFsYW5jZXNbX2Zyb21dIC09IF92YWx1ZTsKICAgIGJhbGFuY2VzW190b10gKz0gX3ZhbHVlOwogICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOwoKICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIGFwcHJvdmVBbmRDYWxsKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlLCBieXRlcyBfZXh0cmFEYXRhKQogICAgICBwdWJsaWMKICAgICAgcmV0dXJucyAoYm9vbCBzdWNjZXNzKQogIHsKICAgIGlmIChhcHByb3ZlKF9zcGVuZGVyLCBfdmFsdWUpKSB7CiAgICAgIHRva2VuUmVjaXBpZW50KF9zcGVuZGVyKS5yZWNlaXZlQXBwcm92YWwobXNnLnNlbmRlciwgX3ZhbHVlLCB0aGlzLCBfZXh0cmFEYXRhKTsKICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgfQoKICAvLy8gQG5vdGljZSBNaW50IG5ldyB0b2tlbnMuIENhbiBvbmx5IGJlIGNhbGxlZCBieSBtaW50ZXIgb3Igb3duZXIKICBmdW5jdGlvbiBtaW50KGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkKICAgICAgcHVibGljCiAgICAgIG1pbnRlck9yT3duZXIKICAgICAgYmxvY2tMb2NrKG1zZy5zZW5kZXIpCiAgICAgIHJldHVybnMgKGJvb2wgc3VjY2VzcykKICB7CiAgICAvLyBlbnN1cmUgX3ZhbHVlIGlzIGdyZWF0ZXIgdGhhbiB6ZXJvIGFuZAogICAgLy8gZG9lc24ndCBvdmVyZmxvdwogICAgaWYgKHRvdGFsU3VwcGx5ICsgX3ZhbHVlIDw9IHRvdGFsU3VwcGx5KSB7CiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KCiAgICBiYWxhbmNlc1tfdG9dICs9IF92YWx1ZTsKICAgIHRvdGFsU3VwcGx5ICs9IF92YWx1ZTsKCiAgICBNaW50KF90bywgX3ZhbHVlLCB0b3RhbFN1cHBseSk7CiAgICBUcmFuc2ZlcigweDAsIF90bywgX3ZhbHVlKTsKCiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIC8vLyBAbm90aWNlIEJ1cm4gdG9rZW5zLiBDYW4gYmUgY2FsbGVkIGJ5IGFueSBhY2NvdW50CiAgZnVuY3Rpb24gYnVybih1aW50MjU2IF92YWx1ZSkKICAgICAgcHVibGljCiAgICAgIGJsb2NrTG9jayhtc2cuc2VuZGVyKQogICAgICByZXR1cm5zIChib29sIHN1Y2Nlc3MpCiAgewogICAgaWYgKF92YWx1ZSA9PSAwIHx8IF92YWx1ZSA+IGJhbGFuY2VzW21zZy5zZW5kZXJdKSB7CiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KCiAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICB0b3RhbFN1cHBseSAtPSBfdmFsdWU7CgogICAgQnVybihtc2cuc2VuZGVyLCBfdmFsdWUsIHRvdGFsU3VwcGx5KTsKICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIDB4MCwgX3ZhbHVlKTsKCiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIC8vLyBAbm90aWNlIFNldCBibG9jayBsb2NrLiBVbnRpbCB0aGF0IGJsb2NrIChleGNsdXNpdmUpIHRyYW5zZmVycyBhcmUgZGlzYWxsb3dlZAogIGZ1bmN0aW9uIHNldEJsb2NrTG9jayh1aW50MjU2IF9sb2NrZWRVbnRpbEJsb2NrKQogICAgICBwdWJsaWMKICAgICAgb25seU93bmVyCiAgICAgIHJldHVybnMgKGJvb2wgc3VjY2VzcykKICB7CiAgICBsb2NrZWRVbnRpbEJsb2NrID0gX2xvY2tlZFVudGlsQmxvY2s7CiAgICBCbG9ja0xvY2tTZXQoX2xvY2tlZFVudGlsQmxvY2spOwogICAgcmV0dXJuIHRydWU7CiAgfQoKICAvLy8gQG5vdGljZSBSZXBsYWNlIGN1cnJlbnQgb3duZXIgd2l0aCBuZXcgb25lCiAgZnVuY3Rpb24gcmVwbGFjZU93bmVyKGFkZHJlc3MgX25ld093bmVyKQogICAgICBwdWJsaWMKICAgICAgb25seU93bmVyCiAgICAgIHJldHVybnMgKGJvb2wgc3VjY2VzcykKICB7CiAgICBvd25lciA9IF9uZXdPd25lcjsKICAgIE5ld093bmVyKF9uZXdPd25lcik7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIC8vLyBAbm90aWNlIFNldCBhY2NvdW50IHRoYXQgY2FuIG1pbnQgbmV3IHRva2VucwogIGZ1bmN0aW9uIHNldE1pbnRlcihhZGRyZXNzIF9uZXdNaW50ZXIpCiAgICAgIHB1YmxpYwogICAgICBvbmx5T3duZXIKICAgICAgcmV0dXJucyAoYm9vbCBzdWNjZXNzKQogIHsKICAgIG1pbnRlciA9IF9uZXdNaW50ZXI7CiAgICBOZXdNaW50ZXIoX25ld01pbnRlcik7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikKICAgICAgcHVibGljCiAgICAgIGNvbnN0YW50CiAgICAgIHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkKICB7CiAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsKICB9CgogIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikKICAgICAgcHVibGljCiAgICAgIGNvbnN0YW50CiAgICAgIHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKQogIHsKICAgIHJldHVybiBhbGxvd2VkW19vd25lcl1bX3NwZW5kZXJdOwogIH0KCiAgLy8vIEBub3RpY2UgQXJlIHRyYW5zZmVycyBjdXJyZW50bHkgZGlzYWxsb3dlZAogIGZ1bmN0aW9uIGlzTG9ja2VkKCkKICAgICAgcHVibGljCiAgICAgIGNvbnN0YW50CiAgICAgIHJldHVybnMgKGJvb2wgc3VjY2VzcykKICB7CiAgICByZXR1cm4gbG9ja2VkVW50aWxCbG9jayA+IGJsb2NrLm51bWJlcjsKICB9CgogIC8vLyBAZGV2IENoZWNrcyBpZiB0cmFuc2ZlciBwYXJhbWV0ZXJzIGFyZSB2YWxpZAogIGZ1bmN0aW9uIGlzVHJhbnNmZXJWYWxpZChhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfYW1vdW50KQogICAgICBwcml2YXRlCiAgICAgIGNvbnN0YW50CiAgICAgIHJldHVybnMgKGJvb2wgaXNWYWxpZCkKICB7CiAgICByZXR1cm4gIGJhbGFuY2VzW19mcm9tXSA+PSBfYW1vdW50ICYmICAvLyBzdWZmaWNpZW50IGJhbGFuY2UKICAgICAgICAgICAgX2Ftb3VudCA+IDAgJiYgICAgICAgICAgICAgICAgIC8vIGFtb3VudCBpcyBwb3NpdGl2ZQogICAgICAgICAgICBfdG8gIT0gYWRkcmVzcyh0aGlzKSAmJiAgICAgICAgLy8gcHJldmVudCBzZW5kaW5nIHRva2VucyB0byBjb250cmFjdAogICAgICAgICAgICBfdG8gIT0gMHgwICAgICAgICAgICAgICAgICAgICAgLy8gcHJldmVudCBzZW5kaW5nIHRva2VuIHRvIDB4MCBhZGRyZXNzCiAgICA7CiAgfQoKICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIGJhbGFuY2VzOwogIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsKfQ=='.
	

]
