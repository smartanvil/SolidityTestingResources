Class {
	#name : #SRTc2d890f9ee41d84aeefeae0886bccddc12a6a394,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTc2d890f9ee41d84aeefeae0886bccddc12a6a394 >> base64 [
	^ ''.
	

]
