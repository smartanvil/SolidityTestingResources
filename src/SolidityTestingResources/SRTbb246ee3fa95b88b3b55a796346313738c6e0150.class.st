Class {
	#name : #SRTbb246ee3fa95b88b3b55a796346313738c6e0150,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTbb246ee3fa95b88b3b55a796346313738c6e0150 >> base64 [
	^ ''.
	

]
