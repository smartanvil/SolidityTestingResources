Class {
	#name : #SRT8ca1d9c33c338520604044977be69a9ac19d6e54,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT8ca1d9c33c338520604044977be69a9ac19d6e54 >> base64 [
	^ ''.
	

]
