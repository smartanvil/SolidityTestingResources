Class {
	#name : #SRTE2fe5E7E206e7B46CAd6A5146320e5b4b9A18E97,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTE2fe5E7E206e7B46CAd6A5146320e5b4b9A18E97 >> base64 [
	^ 'LyogdmVyc2lvbiBtZXRhaGFzaHRva2VuIDAuMS40IFJDICovCnByYWdtYSBzb2xpZGl0eSBeMC40LjE4Owpjb250cmFjdCBtZXRhaGFzaHRva2VuIHsKCiAgICAvKiB0b2tlbiBzZXR0aW5ncyAqLwogICAgc3RyaW5nIHB1YmxpYyBuYW1lOyAgICAgICAgICAgICAvKiB0b2tlbiBuYW1lICAgICAgICAgICAgICAqLwogICAgc3RyaW5nIHB1YmxpYyBzeW1ib2w7ICAgICAgICAgICAvKiB0b2tlbiBzeW1ib2wgICAgICAgICAgICAqLwogICAgdWludDggIHB1YmxpYyBkZWNpbWFsczsgICAgICAgICAvKiBudW1iZXIgb2YgZGlnaXRzIGFmdGVyIHRoZSBkZWNpbWFsIHBvaW50ICAgICAgKi8KICAgIHVpbnQgICBwdWJsaWMgdG90YWxUb2tlbnM7ICAgICAgLyogdG90YWwgYW1vdW50IG9mIHRva2VucyAgKi8KICAgIHVpbnQgICBwdWJsaWMgZmluYWx5emU7CgogICAgLyogdG9rZW4gbWFuYWdlbWVudCBkYXRhICovCiAgICBhZGRyZXNzIHB1YmxpYyBvd25lckNvbnRyYWN0OyAgIC8qIGNvbnRyYWN0IG93bmVyICAgICAgICAgKi8KICAgIGFkZHJlc3MgcHVibGljIG93bmVyOyAgICAgICAgICAgLyogb3duZXIgICAgICAgICAgICAgICAgICAqLwogICAgCiAgICAvKiBhcnJheXMgKi8KICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIGJhbGFuY2U7ICAgICAgICAgICAgICAgICAgLyogYXJyYXkgb2YgYmFsYW5jZSAgICAgICAgICAgICAgKi8KICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsgICAgLyogYXJyYXlzIG9mIGFsbG93ZWQgdHJhbnNmZXJzICAqLwogICAgCiAgICAvKiBldmVudHMgKi8KICAgIGV2ZW50IEJ1cm4oYWRkcmVzcyBpbmRleGVkIGZyb20sIHVpbnQyNTYgdmFsdWUpOwogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiB2YWx1ZSk7CiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKTsKICAgIAogICAgLyogZ2V0IHRoZSB0b3RhbCBhbW91bnQgb2YgdG9rZW5zICovCiAgICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IF90b3RhbFN1cHBseSl7CiAgICAgICAgcmV0dXJuIHRvdGFsVG9rZW5zOwogICAgfQogICAgCiAgICAvKiBnZXQgdGhlIGFtb3VudCBvZiB0b2tlbnMgZnJvbSBhIHBhcnRpY3VsYXIgdXNlciAqLwogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBfYmFsYW5jZSl7CiAgICAgICAgcmV0dXJuIGJhbGFuY2VbX293bmVyXTsKICAgIH0KICAgIAogICAgLyogdHJhbnNmZXIgdG9rZW5zICovCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBhZGRyZXNzIGFkZHJTZW5kZXI7CiAgICAgICAgaWYgKG1zZy5zZW5kZXIgPT0gb3duZXJDb250cmFjdCl7CiAgICAgICAgICAgIC8qIHRoZSBtZXNzYWdlIHdhcyBzZW50IGJ5IHRoZSBvd25lci4gaXQgbWVhbnMgYSBib3VudHkgcHJvZ3JhbSAqLwogICAgICAgICAgICBhZGRyU2VuZGVyID0gb3duZXJDb250cmFjdDsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAvKiB0cmFuc2ZlciBiZXR3ZWVuIHVzZXJzKi8KICAgICAgICAgICAgYWRkclNlbmRlciA9IG1zZy5zZW5kZXI7CiAgICAgICAgfQogICAgICAgIAogICAgICAgIC8qIHRva2VucyBhcmUgbm90IGVub3VnaCAqLwogICAgICAgIGlmIChiYWxhbmNlW2FkZHJTZW5kZXJdIDwgX3ZhbHVlKXsKICAgICAgICAgICAgcmV2ZXJ0KCk7CiAgICAgICAgfQogICAgICAgIAogICAgICAgIC8qIG92ZXJmbG93ICovCiAgICAgICAgaWYgKChiYWxhbmNlW190b10gKyBfdmFsdWUpIDwgYmFsYW5jZVtfdG9dKXsKICAgICAgICAgICAgcmV2ZXJ0KCk7CiAgICAgICAgfQogICAgICAgIGJhbGFuY2VbYWRkclNlbmRlcl0gLT0gX3ZhbHVlOwogICAgICAgIGJhbGFuY2VbX3RvXSArPSBfdmFsdWU7CiAgICAgICAgCiAgICAgICAgVHJhbnNmZXIoYWRkclNlbmRlciwgX3RvLCBfdmFsdWUpOyAgCiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgICAKICAgIC8qIGhvdyBtYW55IHRva2VucyB3ZXJlIGFsbG93ZWQgdG8gc2VuZCAqLwogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpIHsKICAgICAgICByZXR1cm4gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsKICAgIH0KICAgIAogICAgLyogU2VuZCB0b2tlbnMgZnJvbSB0aGUgcmVjaXBpZW50IHRvIHRoZSByZWNpcGllbnQgKi8KICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpewogICAgICAgIHZhciBfYWxsb3dhbmNlID0gYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl07CiAgICAgICAgCiAgICAgICAgLyogY2hlY2sgb2YgYWxsb3dlZCB2YWx1ZSAqLwogICAgICAgIGlmIChfYWxsb3dhbmNlIDwgX3ZhbHVlKXsKICAgICAgICAgICAgcmV2ZXJ0KCk7CiAgICAgICAgfQogICAgICAgIAogICAgICAgIC8qIG5vdCBlbm91Z2ggdG9rZW5zICovCiAgICAgICAgaWYgKGJhbGFuY2VbX2Zyb21dIDwgX3ZhbHVlKXsKICAgICAgICAgICAgcmV2ZXJ0KCk7CiAgICAgICAgfQogICAgICAgIGJhbGFuY2VbX3RvXSArPSBfdmFsdWU7CiAgICAgICAgYmFsYW5jZVtfZnJvbV0gLT0gX3ZhbHVlOwogICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID0gX2FsbG93YW5jZSAtIF92YWx1ZTsKICAgICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQogICAgCiAgICAvKiBhbGxvdyB0byBzZW5kIHRva2VucyBiZXR3ZWVuIHJlY2lwaWVudHMgKi8KICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpewogICAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQogICAgCiAgICAvKiBjb25zdHJ1Y3RvciAqLwogICAgZnVuY3Rpb24gbWV0YWhhc2h0b2tlbigpIHB1YmxpYyB7CiAgICAgICAgbmFtZSA9ICdCSVRDT01PJzsKICAgICAgICBzeW1ib2wgPSAnQk0nOwogICAgICAgIGRlY2ltYWxzID0gMjsKICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgICAgICAgdG90YWxUb2tlbnMgPSAwOyAvKiB3aGVuIGNyZWF0aW5nIGEgdG9rZW4gd2UgZG8gbm90IGFkZCB0aGVtICovCiAgICAgICAgZmluYWx5emUgPSAwOwogICAgfQogICAgCiAgICAvKiBzZXQgY29udHJhY3Qgb3duZXIgKi8KICAgIGZ1bmN0aW9uIHNldENvbnRyYWN0KGFkZHJlc3MgX293bmVyQ29udHJhY3QpIHB1YmxpYyB7CiAgICAgICAgaWYgKG1zZy5zZW5kZXIgPT0gb3duZXIpewogICAgICAgICAgICBvd25lckNvbnRyYWN0ID0gX293bmVyQ29udHJhY3Q7CiAgICAgICAgfQogICAgfQogICAgCiAgICBmdW5jdGlvbiBzZXRPcHRpb25zKHVpbnQyNTYgdG9rZW5DcmVhdGUpIHB1YmxpYyB7CiAgICAgICAgLyogc2V0IHRoZSBhbW91bnQsIGdpdmUgdGhlIHRva2VucyB0byB0aGUgY29udHJhY3QgKi8KICAgICAgICBpZiAoKG1zZy5zZW5kZXIgPT0gb3duZXJDb250cmFjdCkgJiYgKGZpbmFseXplID09IDApKXsKICAgICAgICAgICAgdG90YWxUb2tlbnMgKz0gdG9rZW5DcmVhdGU7CiAgICAgICAgICAgIGJhbGFuY2Vbb3duZXJDb250cmFjdF0gKz0gdG9rZW5DcmVhdGU7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV2ZXJ0KCk7CiAgICAgICAgfQogICAgfQogICAgCiAgICBmdW5jdGlvbiBidXJuKHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgaWYgKGJhbGFuY2VbbXNnLnNlbmRlcl0gPD0gX3ZhbHVlKXsKICAgICAgICAgICAgcmV2ZXJ0KCk7CiAgICAgICAgfQoKICAgICAgICBiYWxhbmNlW21zZy5zZW5kZXJdIC09IF92YWx1ZTsKICAgICAgICB0b3RhbFRva2VucyAtPSBfdmFsdWU7CiAgICAgICAgQnVybihtc2cuc2VuZGVyLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQogICAgCiAgICAvKiB0aGUgY29udHJhY3QgaXMgY2xvc2VkLiBFaXRoZXIgYmVjYXVzZSBvZiB0aGUgYW1vdW50IHJlYWNoZWQsIG9yIGJ5IHRoZSBkZWFkbGluZS4gKi8KICAgIGZ1bmN0aW9uIGZpbmFseXplQ29udHJhY3QoKSBwdWJsaWMgewogICAgICAgIGlmIChtc2cuc2VuZGVyICE9IG93bmVyKXsKICAgICAgICAgICAgcmV2ZXJ0KCk7CiAgICAgICAgfQogICAgICAgIGZpbmFseXplID0gMTsKICAgIH0KfQ=='.
	

]
