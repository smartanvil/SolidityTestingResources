Class {
	#name : #SRT0db847406c33959dd0b30fd6962b60f1f3bfcce7,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT0db847406c33959dd0b30fd6962b60f1f3bfcce7 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7Ci8qKgogKiBAdGl0bGUgT3duYWJsZQogKiBAZGV2IFRoZSBPd25hYmxlIGNvbnRyYWN0IGhhcyBhbiBvd25lciBhZGRyZXNzLCBhbmQgcHJvdmlkZXMgYmFzaWMgYXV0aG9yaXphdGlvbiBjb250cm9sCiAqIGZ1bmN0aW9ucywgdGhpcyBzaW1wbGlmaWVzIHRoZSBpbXBsZW1lbnRhdGlvbiBvZiAidXNlciBwZXJtaXNzaW9ucyIuCiAqLwpjb250cmFjdCBPd25hYmxlIHsKICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKCgogIGV2ZW50IE93bmVyc2hpcFRyYW5zZmVycmVkKGFkZHJlc3MgaW5kZXhlZCBwcmV2aW91c093bmVyLCBhZGRyZXNzIGluZGV4ZWQgbmV3T3duZXIpOwoKCiAgLyoqCiAgICogQGRldiBUaGUgT3duYWJsZSBjb25zdHJ1Y3RvciBzZXRzIHRoZSBvcmlnaW5hbCBgb3duZXJgIG9mIHRoZSBjb250cmFjdCB0byB0aGUgc2VuZGVyCiAgICogYWNjb3VudC4KICAgKi8KICBmdW5jdGlvbiBPd25hYmxlKCkgcHVibGljIHsKICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICB9CgoKICAvKioKICAgKiBAZGV2IFRocm93cyBpZiBjYWxsZWQgYnkgYW55IGFjY291bnQgb3RoZXIgdGhhbiB0aGUgb3duZXIuCiAgICovCiAgbW9kaWZpZXIgb25seU93bmVyKCkgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyKTsKICAgIF87CiAgfQoKCiAgLyoqCiAgICogQGRldiBBbGxvd3MgdGhlIGN1cnJlbnQgb3duZXIgdG8gdHJhbnNmZXIgY29udHJvbCBvZiB0aGUgY29udHJhY3QgdG8gYSBuZXdPd25lci4KICAgKiBAcGFyYW0gbmV3T3duZXIgVGhlIGFkZHJlc3MgdG8gdHJhbnNmZXIgb3duZXJzaGlwIHRvLgogICAqLwogIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpIG9ubHlPd25lciBwdWJsaWMgewogICAgcmVxdWlyZShuZXdPd25lciAhPSBhZGRyZXNzKDApKTsKICAgIE93bmVyc2hpcFRyYW5zZmVycmVkKG93bmVyLCBuZXdPd25lcik7CiAgICBvd25lciA9IG5ld093bmVyOwogIH0KCn0KCi8qKgogKiBAdGl0bGUgUGF1c2FibGUKICogQGRldiBCYXNlIGNvbnRyYWN0IHdoaWNoIGFsbG93cyBjaGlsZHJlbiB0byBpbXBsZW1lbnQgYW4gZW1lcmdlbmN5IHN0b3AgbWVjaGFuaXNtLgogKi8KY29udHJhY3QgUGF1c2FibGUgaXMgT3duYWJsZSB7CiAgZXZlbnQgUGF1c2UoKTsKICBldmVudCBVbnBhdXNlKCk7CgogIGJvb2wgcHVibGljIHBhdXNlZCA9IGZhbHNlOwoKCiAgLyoqCiAgICogQGRldiBNb2RpZmllciB0byBtYWtlIGEgZnVuY3Rpb24gY2FsbGFibGUgb25seSB3aGVuIHRoZSBjb250cmFjdCBpcyBub3QgcGF1c2VkLgogICAqLwogIG1vZGlmaWVyIHdoZW5Ob3RQYXVzZWQoKSB7CiAgICByZXF1aXJlKCFwYXVzZWQpOwogICAgXzsKICB9CgogIC8qKgogICAqIEBkZXYgTW9kaWZpZXIgdG8gbWFrZSBhIGZ1bmN0aW9uIGNhbGxhYmxlIG9ubHkgd2hlbiB0aGUgY29udHJhY3QgaXMgcGF1c2VkLgogICAqLwogIG1vZGlmaWVyIHdoZW5QYXVzZWQoKSB7CiAgICByZXF1aXJlKHBhdXNlZCk7CiAgICBfOwogIH0KCiAgLyoqCiAgICogQGRldiBjYWxsZWQgYnkgdGhlIG93bmVyIHRvIHBhdXNlLCB0cmlnZ2VycyBzdG9wcGVkIHN0YXRlCiAgICovCiAgZnVuY3Rpb24gcGF1c2UoKSBvbmx5T3duZXIgd2hlbk5vdFBhdXNlZCBwdWJsaWMgewogICAgcGF1c2VkID0gdHJ1ZTsKICAgIFBhdXNlKCk7CiAgfQoKICAvKioKICAgKiBAZGV2IGNhbGxlZCBieSB0aGUgb3duZXIgdG8gdW5wYXVzZSwgcmV0dXJucyB0byBub3JtYWwgc3RhdGUKICAgKi8KICBmdW5jdGlvbiB1bnBhdXNlKCkgb25seU93bmVyIHdoZW5QYXVzZWQgcHVibGljIHsKICAgIHBhdXNlZCA9IGZhbHNlOwogICAgVW5wYXVzZSgpOwogIH0KfQoKCmNvbnRyYWN0IFR3b1hNYWNoaW5lIGlzIE93bmFibGUsIFBhdXNhYmxlIHsKCiAgLy8gQWRkcmVzcyBvZiB0aGUgY29udHJhY3QgY3JlYXRvcgogIGFkZHJlc3MgcHVibGljIGNvbnRyYWN0T3duZXI7CgogIC8vIEZJRk8gcXVldWUKICBCdXlJbltdIHB1YmxpYyBidXlJbnM7CgogIC8vIFRoZSBjdXJyZW50IEJ1eUluIHF1ZXVlIGluZGV4CiAgdWludDI1NiBwdWJsaWMgaW5kZXg7CgogIC8vIFRvdGFsIGludmVzdGVkIGZvciBlbnRpcmUgY29udHJhY3QKICB1aW50MjU2IHB1YmxpYyBjb250cmFjdFRvdGFsSW52ZXN0ZWQ7CgogIC8vIFRvdGFsIGludmVzdGVkIGZvciBhIGdpdmVuIGFkZHJlc3MKICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyB0b3RhbEludmVzdGVkOwoKICAvLyBUb3RhbCB2YWx1ZSBmb3IgYSBnaXZlbiBhZGRyZXNzCiAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBwdWJsaWMgdG90YWxWYWx1ZTsKCiAgLy8gVG90YWwgcGFpZCBvdXQgZm9yIGEgZ2l2ZW4gYWRkcmVzcwogIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIHRvdGFsUGFpZE91dDsKCiAgc3RydWN0IEJ1eUluIHsKICAgIHVpbnQyNTYgdmFsdWU7CiAgICBhZGRyZXNzIG93bmVyOwogIH0KCiAgLyoqCiAgICogRmFsbGJhY2sgZnVuY3Rpb24gdG8gaGFuZGxlIGV0aGVyZXVtIHRoYXQgd2FzIHNlbmQgc3RyYWlnaHQgdG8gdGhlIGNvbnRyYWN0CiAgICovCiAgZnVuY3Rpb24oKSB3aGVuTm90UGF1c2VkKCkgcHVibGljIHBheWFibGUgewogICAgcHVyY2hhc2UoKTsKICB9CgogIGZ1bmN0aW9uIHB1cmNoYXNlKCkgd2hlbk5vdFBhdXNlZCgpIHB1YmxpYyBwYXlhYmxlIHsKICAgIC8vIEkgZG9uJ3Qgd2FudCBubyBzY3J1YgogICAgcmVxdWlyZShtc2cudmFsdWUgPj0gMC4wMSBldGhlcik7CgogICAgdWludDI1NiB2YWx1ZSA9IFNhZmVNYXRoLmRpdihTYWZlTWF0aC5tdWwobXNnLnZhbHVlLCA5OCksIDEwMCk7CgogICAgLy8gSE5OTk5OTkdHR0dHRwogICAgdWludDI1NiB2YWx1ZU11bHRpcGxpZWQgPSBTYWZlTWF0aC5kaXYoU2FmZU1hdGgubXVsKG1zZy52YWx1ZSwgMTUwKSwgMTAwKTsKCiAgICBjb250cmFjdFRvdGFsSW52ZXN0ZWQgKz0gbXNnLnZhbHVlOwogICAgdG90YWxJbnZlc3RlZFttc2cuc2VuZGVyXSArPSBtc2cudmFsdWU7CgogICAgd2hpbGUgKGluZGV4IDwgYnV5SW5zLmxlbmd0aCAmJiB2YWx1ZSA+IDApIHsKICAgICAgQnV5SW4gc3RvcmFnZSBidXlJbiA9IGJ1eUluc1tpbmRleF07CgogICAgICBpZiAodmFsdWUgPCBidXlJbi52YWx1ZSkgewogICAgICAgIGJ1eUluLm93bmVyLnRyYW5zZmVyKHZhbHVlKTsKICAgICAgICB0b3RhbFBhaWRPdXRbYnV5SW4ub3duZXJdICs9IHZhbHVlOwogICAgICAgIHRvdGFsVmFsdWVbYnV5SW4ub3duZXJdIC09IHZhbHVlOwogICAgICAgIGJ1eUluLnZhbHVlIC09IHZhbHVlOwogICAgICAgIHZhbHVlID0gMDsKICAgICAgfSBlbHNlIHsKICAgICAgICBidXlJbi5vd25lci50cmFuc2ZlcihidXlJbi52YWx1ZSk7CiAgICAgICAgdG90YWxQYWlkT3V0W2J1eUluLm93bmVyXSArPSBidXlJbi52YWx1ZTsKICAgICAgICB0b3RhbFZhbHVlW2J1eUluLm93bmVyXSAtPSBidXlJbi52YWx1ZTsKICAgICAgICB2YWx1ZSAtPSBidXlJbi52YWx1ZTsKICAgICAgICBidXlJbi52YWx1ZSA9IDA7CiAgICAgICAgaW5kZXgrKzsKICAgICAgfQogICAgfQoKICAgIC8vIGlmIGJ1eWlucyBoYXZlIGJlZW4gZXhoYXVzdGVkLCByZXR1cm4gdGhlIHJlbWFpbmluZwogICAgLy8gZnVuZHMgYmFjayB0byB0aGUgaW52ZXN0b3IKICAgIGlmICh2YWx1ZSA+IDApIHsKICAgICAgbXNnLnNlbmRlci50cmFuc2Zlcih2YWx1ZSk7CiAgICAgIHZhbHVlTXVsdGlwbGllZCAtPSB2YWx1ZTsKICAgICAgdG90YWxQYWlkT3V0W21zZy5zZW5kZXJdICs9IHZhbHVlOwogICAgfQoKICAgIHRvdGFsVmFsdWVbbXNnLnNlbmRlcl0gKz0gdmFsdWVNdWx0aXBsaWVkOwoKICAgIGJ1eUlucy5wdXNoKEJ1eUluKHsKICAgICAgdmFsdWU6IHZhbHVlTXVsdGlwbGllZCwKICAgICAgb3duZXI6IG1zZy5zZW5kZXIKICAgIH0pKTsKICB9CgogIGZ1bmN0aW9uIHBheW91dCgpIG9ubHlPd25lcigpIHB1YmxpYyB7CiAgICBvd25lci50cmFuc2Zlcih0aGlzLmJhbGFuY2UpOwogIH0KfQoKLyoqCiAqIEB0aXRsZSBTYWZlTWF0aAogKiBAZGV2IE1hdGggb3BlcmF0aW9ucyB3aXRoIHNhZmV0eSBjaGVja3MgdGhhdCB0aHJvdyBvbiBlcnJvcgogKi8KbGlicmFyeSBTYWZlTWF0aCB7CgogIC8qKgogICogQGRldiBNdWx0aXBsaWVzIHR3byBudW1iZXJzLCB0aHJvd3Mgb24gb3ZlcmZsb3cuCiAgKi8KICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgaWYgKGEgPT0gMCkgewogICAgICByZXR1cm4gMDsKICAgIH0KICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGMgLyBhID09IGIpOwogICAgcmV0dXJuIGM7CiAgfQoKICAvKioKICAqIEBkZXYgSW50ZWdlciBkaXZpc2lvbiBvZiB0d28gbnVtYmVycywgdHJ1bmNhdGluZyB0aGUgcXVvdGllbnQuCiAgKi8KICBmdW5jdGlvbiBkaXYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgLy8gYXNzZXJ0KGIgPiAwKTsgLy8gU29saWRpdHkgYXV0b21hdGljYWxseSB0aHJvd3Mgd2hlbiBkaXZpZGluZyBieSAwCiAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgIC8vIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOyAvLyBUaGVyZSBpcyBubyBjYXNlIGluIHdoaWNoIHRoaXMgZG9lc24ndCBob2xkCiAgICByZXR1cm4gYzsKICB9CgogIC8qKgogICogQGRldiBTdWJzdHJhY3RzIHR3byBudW1iZXJzLCB0aHJvd3Mgb24gb3ZlcmZsb3cgKGkuZS4gaWYgc3VidHJhaGVuZCBpcyBncmVhdGVyIHRoYW4gbWludWVuZCkuCiAgKi8KICBmdW5jdGlvbiBzdWIodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICAvKioKICAqIEBkZXYgQWRkcyB0d28gbnVtYmVycywgdGhyb3dzIG9uIG92ZXJmbG93LgogICovCiAgZnVuY3Rpb24gYWRkKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgYXNzZXJ0KGMgPj0gYSk7CiAgICByZXR1cm4gYzsKICB9Cn0='.
	

]
