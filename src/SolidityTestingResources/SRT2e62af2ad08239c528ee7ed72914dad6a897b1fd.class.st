Class {
	#name : #SRT2e62af2ad08239c528ee7ed72914dad6a897b1fd,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT2e62af2ad08239c528ee7ed72914dad6a897b1fd >> base64 [
	^ ''.
	

]
