Class {
	#name : #SRTd2943044a142895fe07650c3bcd70bd2e17885d9,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTd2943044a142895fe07650c3bcd70bd2e17885d9 >> base64 [
	^ ''.
	

]
