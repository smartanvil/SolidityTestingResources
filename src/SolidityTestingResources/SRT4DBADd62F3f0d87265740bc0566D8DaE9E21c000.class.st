Class {
	#name : #SRT4DBADd62F3f0d87265740bc0566D8DaE9E21c000,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT4DBADd62F3f0d87265740bc0566D8DaE9E21c000 >> base64 [
	^ ''.
	

]
