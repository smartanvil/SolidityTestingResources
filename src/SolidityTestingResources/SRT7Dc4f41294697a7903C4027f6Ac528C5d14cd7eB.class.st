Class {
	#name : #SRT7Dc4f41294697a7903C4027f6Ac528C5d14cd7eB,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT7Dc4f41294697a7903C4027f6Ac528C5d14cd7eB >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMjsKCmNvbnRyYWN0IEVSQzIwSW50ZXJmYWNlIHsKCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSk7CiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpOwoKICAgIC8vIFRyaWdnZXJlZCB3aGVuIHRva2VucyBhcmUgdHJhbnNmZXJyZWQuCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsKCiAgICAvLyBUcmlnZ2VyZWQgd2hlbmV2ZXIgYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgaXMgY2FsbGVkLgogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7Cgp9Cgpjb250cmFjdCBPd25lciB7CiAgICAvL0ZvciBzdG9yaW5nIHRoZSBvd25lciBhZGRyZXNzCiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKCiAgICAvL0NvbnN0cnVjdG9yIGZvciBhc3NpZ24gYSBhZGRyZXNzIGZvciBvd25lciBwcm9wZXJ0eShJdCB3aWxsIGJlIGFkZHJlc3Mgd2hvIGRlcGxveSB0aGUgY29udHJhY3QpIAogICAgZnVuY3Rpb24gT3duZXIoKSB7CiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgfQoKICAgIC8vVGhpcyBpcyBtb2RpZmllciAoYSBzcGVjaWFsIGZ1bmN0aW9uKSB3aGljaCB3aWxsIGV4ZWN1dGUgYmVmb3JlIHRoZSBmdW5jdGlvbiBleGVjdXRpb24gb24gd2hpY2ggaXQgYXBwbGllZCAKICAgIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgICAgICBpZihtc2cuc2VuZGVyICE9IG93bmVyKSB0aHJvdzsKICAgICAgICAvL1RoaXMgc3RhdGVtZW50IHJlcGxhY2Ugd2l0aCB0aGUgY29kZSBvZiBmdWNudGlvbiBvbiB3aGljaCBtb2RpZmllciBpcyBhcHBsaWVkCiAgICAgICAgXzsKICAgIH0KICAgIC8vSGVyZSBpcyB0aGUgZXhhbXBsZSBvZiBtb2RpZmllciB0aGlzIGZ1bmN0aW9uIGNvZGUgcmVwbGFjZSBfOyBzdGF0ZW1lbnQgb2YgbW9kaWZpZXIgCiAgICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld19vd25lcikgb25seU93bmVyIHsKICAgICAgICBvd25lciA9IG5ld19vd25lcjsKICAgIH0KfQoKY29udHJhY3QgUmVtaUNvaW4gaXMgRVJDMjBJbnRlcmZhY2UsT3duZXIgewoKICAgIC8vQ29tbW9uIGluZm9ybWF0aW9uIGFib3V0IGNvaW4KICAgIHN0cmluZyAgcHVibGljIG5hbWU7CiAgICBzdHJpbmcgIHB1YmxpYyBzeW1ib2w7CiAgICB1aW50OCAgIHB1YmxpYyBkZWNpbWFsczsKICAgIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5OwogICAgCiAgICAvL0JhbGFuY2UgcHJvcGVydHkgd2hpY2ggc2hvdWxkIGJlIGFsd2F5cyBhc3NvY2lhdGUgd2l0aCBhbiBhZGRyZXNzCiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikgYmFsYW5jZXM7CiAgICAvL2Zyb3plbkFjY291bnQgcHJvcGVydHkgd2hpY2ggc2hvdWxkIGJlIGFzc29jaWF0ZSB3aXRoIGFuIGFkZHJlc3MKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gYm9vbCkgcHVibGljIGZyb3plbkFjY291bnQ7CiAgICAvLyBPd25lciBvZiBhY2NvdW50IGFwcHJvdmVzIHRoZSB0cmFuc2ZlciBvZiBhbiBhbW91bnQgdG8gYW5vdGhlciBhY2NvdW50CiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsKICAgIAogICAgLy9UaGVzZSBnZW5lcmF0ZXMgYSBwdWJsaWMgZXZlbnQgb24gdGhlIGJsb2NrY2hhaW4gdGhhdCB3aWxsIG5vdGlmeSBjbGllbnRzCiAgICBldmVudCBGcm96ZW5GdW5kcyhhZGRyZXNzIHRhcmdldCwgYm9vbCBmcm96ZW4pOwogICAgCiAgICAvL0NvbnN0cnV0b3IgZm9yIGluaXRpYWwgc3VwcGx5IChUaGUgYWRkcmVzcyB3aG8gZGVwbG95ZWQgdGhlIGNvbnRyYWN0IHdpbGwgZ2V0IGl0KSBhbmQgaW1wb3J0YW50IGluZm9ybWF0aW9uCiAgICBmdW5jdGlvbiBSZW1pQ29pbih1aW50MjU2IGluaXRpYWxfc3VwcGx5LCBzdHJpbmcgX25hbWUsIHN0cmluZyBfc3ltYm9sLCB1aW50OCBfZGVjaW1hbCkgewogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdICA9IGluaXRpYWxfc3VwcGx5OwogICAgICAgIG5hbWUgICAgICAgICAgICAgICAgICA9IF9uYW1lOwogICAgICAgIHN5bWJvbCAgICAgICAgICAgICAgICA9IF9zeW1ib2w7CiAgICAgICAgZGVjaW1hbHMgICAgICAgICAgICAgID0gX2RlY2ltYWw7CiAgICAgICAgdG90YWxTdXBwbHkgICAgICAgICAgID0gaW5pdGlhbF9zdXBwbHk7CiAgICB9CgogICAgLy8gV2hhdCBpcyB0aGUgYmFsYW5jZSBvZiBhIHBhcnRpY3VsYXIgYWNjb3VudD8KICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7CiAgICAgICAgcmV0dXJuIGJhbGFuY2VzW19vd25lcl07CiAgICB9CgogICAgLy9GdW5jdGlvbiBmb3IgdHJhbnNlciB0aGUgY29pbiBmcm9tIG9uZSBhZGRyZXNzIHRvIGFub3RoZXIKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sIHVpbnQgdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewoKICAgICAgICAvL2NoZWNraW5nIGFjY291bnQgaXMgZnJlZXplIG9yIG5vdAogICAgICAgIGlmIChmcm96ZW5BY2NvdW50W21zZy5zZW5kZXJdKSByZXR1cm4gZmFsc2U7CgogICAgICAgIC8vY2hlY2tpbmcgdGhlIHNlbmRlciBzaG91bGQgaGF2ZSBlbm91Z2ggY29pbnMKICAgICAgICBpZihiYWxhbmNlc1ttc2cuc2VuZGVyXSA8IHZhbHVlKSByZXR1cm4gZmFsc2U7CiAgICAgICAgLy9jaGVja2luZyBmb3Igb3ZlcmZsb3dzCiAgICAgICAgaWYoYmFsYW5jZXNbdG9dICsgdmFsdWUgPCBiYWxhbmNlc1t0b10pIHJldHVybiBmYWxzZTsKICAgICAgICAKICAgICAgICAvL3N1YnN0cmFjdGluZyB0aGUgc2VuZGVyIGJhbGFuY2UKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtPSB2YWx1ZTsKICAgICAgICAvL2FkZGluZyB0aGUgcmVjaWV2ZXIgYmFsYW5jZQogICAgICAgIGJhbGFuY2VzW3RvXSArPSB2YWx1ZTsKICAgICAgICAKICAgICAgICAvLyBOb3RpZnkgYW55b25lIGxpc3RlbmluZyB0aGF0IHRoaXMgdHJhbnNmZXIgdG9vayBwbGFjZQogICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIHRvLCB2YWx1ZSk7CgogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKCiAgICAvL0Z1bmN0aW9uIGZvciB0cmFuc2VyIHRoZSBjb2luIGZyb20gb25lIGFkZHJlc3MgdG8gYW5vdGhlcgogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgZnJvbSwgYWRkcmVzcyB0bywgdWludCB2YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CgogICAgICAgIC8vY2hlY2tpbmcgYWNjb3VudCBpcyBmcmVlemUgb3Igbm90CiAgICAgICAgaWYgKGZyb3plbkFjY291bnRbbXNnLnNlbmRlcl0pIHJldHVybiBmYWxzZTsKCiAgICAgICAgLy9jaGVja2luZyB0aGUgZnJvbSBzaG91bGQgaGF2ZSBlbm91Z2ggY29pbnMKICAgICAgICBpZihiYWxhbmNlc1tmcm9tXSA8IHZhbHVlKSByZXR1cm4gZmFsc2U7CgogICAgICAgIC8vY2hlY2tpbmcgZm9yIGFsbG93YW5jZQogICAgICAgIGlmKCBhbGxvd2VkW2Zyb21dW21zZy5zZW5kZXJdID49IHZhbHVlICkgcmV0dXJuIGZhbHNlOwoKICAgICAgICAvL2NoZWNraW5nIGZvciBvdmVyZmxvd3MKICAgICAgICBpZihiYWxhbmNlc1t0b10gKyB2YWx1ZSA8IGJhbGFuY2VzW3RvXSkgcmV0dXJuIGZhbHNlOwogICAgICAgIAogICAgICAgIGJhbGFuY2VzW2Zyb21dIC09IHZhbHVlOwogICAgICAgIGFsbG93ZWRbZnJvbV1bbXNnLnNlbmRlcl0gLT0gdmFsdWU7CiAgICAgICAgYmFsYW5jZXNbdG9dICs9IHZhbHVlOwogICAgICAgIAogICAgICAgIC8vIE5vdGlmeSBhbnlvbmUgbGlzdGVuaW5nIHRoYXQgdGhpcyB0cmFuc2ZlciB0b29rIHBsYWNlCiAgICAgICAgVHJhbnNmZXIoZnJvbSwgdG8sIHZhbHVlKTsKCiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgLy8KICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpIHsKICAgICAgICByZXR1cm4gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsKICAgIH0KCiAgICAvLwogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF9hbW91bnQpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX2Ftb3VudDsKICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX2Ftb3VudCk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgICAKICAgIC8vCiAgICBmdW5jdGlvbiBtaW50VG9rZW4oYWRkcmVzcyB0YXJnZXQsIHVpbnQyNTYgbWludGVkQW1vdW50KSBvbmx5T3duZXJ7CiAgICAgICAgYmFsYW5jZXNbdGFyZ2V0XSArPSBtaW50ZWRBbW91bnQ7CiAgICAgICAgdG90YWxTdXBwbHkgKz0gbWludGVkQW1vdW50OwogICAgICAgIAogICAgICAgIFRyYW5zZmVyKDAsb3duZXIsbWludGVkQW1vdW50KTsKICAgICAgICBUcmFuc2Zlcihvd25lcix0YXJnZXQsbWludGVkQW1vdW50KTsKICAgIH0KCiAgICAvLwogICAgZnVuY3Rpb24gZnJlZXplQWNjb3VudChhZGRyZXNzIHRhcmdldCwgYm9vbCBmcmVlemUpIG9ubHlPd25lciB7CiAgICAgICAgZnJvemVuQWNjb3VudFt0YXJnZXRdID0gZnJlZXplOwogICAgICAgIEZyb3plbkZ1bmRzKHRhcmdldCwgZnJlZXplKTsKICAgIH0KCiAgICAvLwogICAgZnVuY3Rpb24gY2hhbmdlTmFtZShzdHJpbmcgX25hbWUpIG9ubHlPd25lciB7CiAgICAgICAgbmFtZSA9IF9uYW1lOwogICAgfQoKICAgIC8vCiAgICBmdW5jdGlvbiBjaGFuZ2VTeW1ib2woc3RyaW5nIF9zeW1ib2wpIG9ubHlPd25lciB7CiAgICAgICAgc3ltYm9sID0gX3N5bWJvbDsKICAgIH0KCiAgICAvLwogICAgZnVuY3Rpb24gY2hhbmdlRGVjaW1hbHModWludDggX2RlY2ltYWxzKSBvbmx5T3duZXIgewogICAgICAgIGRlY2ltYWxzID0gX2RlY2ltYWxzOwogICAgfQp9'.
	

]
