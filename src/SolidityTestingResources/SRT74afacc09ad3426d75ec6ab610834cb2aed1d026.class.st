Class {
	#name : #SRT74afacc09ad3426d75ec6ab610834cb2aed1d026,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT74afacc09ad3426d75ec6ab610834cb2aed1d026 >> base64 [
	^ ''.
	

]
