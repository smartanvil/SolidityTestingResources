Class {
	#name : #SRT33c623a2baafeb8d15dfaf3ce44095efec83d72c,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT33c623a2baafeb8d15dfaf3ce44095efec83d72c >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7CgoKLyoqCiAqIEB0aXRsZSBPd25hYmxlCiAqIEBkZXYgVGhlIE93bmFibGUgY29udHJhY3QgaGFzIGFuIG93bmVyIGFkZHJlc3MsIGFuZCBwcm92aWRlcyBiYXNpYyBhdXRob3JpemF0aW9uIGNvbnRyb2wKICogZnVuY3Rpb25zLCB0aGlzIHNpbXBsaWZpZXMgdGhlIGltcGxlbWVudGF0aW9uIG9mICJ1c2VyIHBlcm1pc3Npb25zIi4KICovCmNvbnRyYWN0IE93bmFibGUgewogIGFkZHJlc3MgcHVibGljIG93bmVyOwoKCiAgZXZlbnQgT3duZXJzaGlwVHJhbnNmZXJyZWQoYWRkcmVzcyBpbmRleGVkIHByZXZpb3VzT3duZXIsIGFkZHJlc3MgaW5kZXhlZCBuZXdPd25lcik7CgoKICAvKioKICAgKiBAZGV2IFRoZSBPd25hYmxlIGNvbnN0cnVjdG9yIHNldHMgdGhlIG9yaWdpbmFsIGBvd25lcmAgb2YgdGhlIGNvbnRyYWN0IHRvIHRoZSBzZW5kZXIKICAgKiBhY2NvdW50LgogICAqLwogIGZ1bmN0aW9uIE93bmFibGUoKSB7CiAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgfQoKCiAgLyoqCiAgICogQGRldiBUaHJvd3MgaWYgY2FsbGVkIGJ5IGFueSBhY2NvdW50IG90aGVyIHRoYW4gdGhlIG93bmVyLgogICAqLwogIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICBfOwogIH0KCgogIC8qKgogICAqIEBkZXYgQWxsb3dzIHRoZSBjdXJyZW50IG93bmVyIHRvIHRyYW5zZmVyIGNvbnRyb2wgb2YgdGhlIGNvbnRyYWN0IHRvIGEgbmV3T3duZXIuCiAgICogQHBhcmFtIG5ld093bmVyIFRoZSBhZGRyZXNzIHRvIHRyYW5zZmVyIG93bmVyc2hpcCB0by4KICAgKi8KICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld093bmVyKSBvbmx5T3duZXIgcHVibGljIHsKICAgIHJlcXVpcmUobmV3T3duZXIgIT0gYWRkcmVzcygwKSk7CiAgICBPd25lcnNoaXBUcmFuc2ZlcnJlZChvd25lciwgbmV3T3duZXIpOwogICAgb3duZXIgPSBuZXdPd25lcjsKICB9Cgp9Cgpjb250cmFjdCBFUkMyMjNSZWNlaXZpbmdDb250cmFjdCB7CiAgICBmdW5jdGlvbiB0b2tlbkZhbGxiYWNrKGFkZHJlc3MgX2Zyb20sIHVpbnQgX3ZhbHVlLCBieXRlcyBfZGF0YSk7Cn0KCgovKgogKiBFUkMyMEJhc2ljCiAqIFNpbXBsZXIgdmVyc2lvbiBvZiBFUkMyMCBpbnRlcmZhY2UKICogc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8yMAogKi8KY29udHJhY3QgRVJDMjBCYXNpYyB7CiAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KTsKICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpOwogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCk7CiAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludCB2YWx1ZSk7Cn0KCmNvbnRyYWN0IEVSQzIyM0Jhc2ljIGlzIEVSQzIwQmFzaWMgewogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyB0bywgdWludCB2YWx1ZSwgYnl0ZXMgZGF0YSkgcmV0dXJucyAoYm9vbCk7Cn0KCi8qCiAqIEVSQzIwIGludGVyZmFjZQogKiBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL0VJUHMvaXNzdWVzLzIwCiAqLwpjb250cmFjdCBFUkMyMCBpcyBFUkMyMjNCYXNpYyB7CiAgLy8gYWN0aXZlIHN1cHBseSBvZiB0b2tlbnMKICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpOwogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludCBfdmFsdWUpIHJldHVybnMgKGJvb2wpOwogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wpOwogIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBvd25lciwgYWRkcmVzcyBpbmRleGVkIHNwZW5kZXIsIHVpbnQyNTYgdmFsdWUpOwp9Cgpjb250cmFjdCBDb250cm9sbGVySW50ZXJmYWNlIHsKCiAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KTsKICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpOwogIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nik7CgogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBvd25lciwgYWRkcmVzcyBzcGVuZGVyLCB1aW50MjU2IHZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBvd25lciwgYWRkcmVzcyB0bywgdWludCB2YWx1ZSwgYnl0ZXMgZGF0YSkgcHVibGljIHJldHVybnMgKGJvb2wpOwogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIG93bmVyLCBhZGRyZXNzIGZyb20sIGFkZHJlc3MgdG8sIHVpbnQyNTYgYW1vdW50LCBieXRlcyBkYXRhKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CiAgZnVuY3Rpb24gbWludChhZGRyZXNzIF90bywgdWludDI1NiBfYW1vdW50KSAgcHVibGljIHJldHVybnMgKGJvb2wpOwp9Cgpjb250cmFjdCBUb2tlbiBpcyBPd25hYmxlLCBFUkMyMCB7CgogIGV2ZW50IE1pbnQoYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IGFtb3VudCk7CiAgZXZlbnQgTWludFRvZ2dsZShib29sIHN0YXR1cyk7CgogIC8vIENvbnN0YW50IEZ1bmN0aW9ucwogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgcmV0dXJuIENvbnRyb2xsZXJJbnRlcmZhY2Uob3duZXIpLmJhbGFuY2VPZihfb3duZXIpOwogIH0KCiAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICByZXR1cm4gQ29udHJvbGxlckludGVyZmFjZShvd25lcikudG90YWxTdXBwbHkoKTsKICB9CgogIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgcmV0dXJuIENvbnRyb2xsZXJJbnRlcmZhY2Uob3duZXIpLmFsbG93YW5jZShfb3duZXIsIF9zcGVuZGVyKTsKICB9CgogIGZ1bmN0aW9uIG1pbnQoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX2Ftb3VudCkgb25seU93bmVyIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICBNaW50KF90bywgX2Ftb3VudCk7CiAgICBUcmFuc2ZlcihhZGRyZXNzKDApLCBfdG8sIF9hbW91bnQpOwogICAgcmV0dXJuIHRydWU7CiAgfQoKICBmdW5jdGlvbiBtaW50VG9nZ2xlKGJvb2wgc3RhdHVzKSBvbmx5T3duZXIgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgIE1pbnRUb2dnbGUoc3RhdHVzKTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgLy8gcHVibGljIGZ1bmN0aW9ucwogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICBDb250cm9sbGVySW50ZXJmYWNlKG93bmVyKS5hcHByb3ZlKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgIGJ5dGVzIG1lbW9yeSBlbXB0eTsKICAgIHJldHVybiB0cmFuc2ZlcihfdG8sIF92YWx1ZSwgZW1wdHkpOwogIH0KCiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyB0bywgdWludCB2YWx1ZSwgYnl0ZXMgZGF0YSkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgIENvbnRyb2xsZXJJbnRlcmZhY2Uob3duZXIpLnRyYW5zZmVyKG1zZy5zZW5kZXIsIHRvLCB2YWx1ZSwgZGF0YSk7CiAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCB0bywgdmFsdWUpOwogICAgX2NoZWNrRGVzdGluYXRpb24obXNnLnNlbmRlciwgdG8sIHZhbHVlLCBkYXRhKTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgIGJ5dGVzIG1lbW9yeSBlbXB0eTsKICAgIHJldHVybiB0cmFuc2ZlckZyb20oX2Zyb20sIF90bywgX3ZhbHVlLCBlbXB0eSk7CiAgfQoKCiAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF9hbW91bnQsIGJ5dGVzIF9kYXRhKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgQ29udHJvbGxlckludGVyZmFjZShvd25lcikudHJhbnNmZXJGcm9tKG1zZy5zZW5kZXIsIF9mcm9tLCBfdG8sIF9hbW91bnQsIF9kYXRhKTsKICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF9hbW91bnQpOwogICAgX2NoZWNrRGVzdGluYXRpb24oX2Zyb20sIF90bywgX2Ftb3VudCwgX2RhdGEpOwogICAgcmV0dXJuIHRydWU7CiAgfQoKICAvLyBJbnRlcm5hbCBGdW5jdGlvbnMKICBmdW5jdGlvbiBfY2hlY2tEZXN0aW5hdGlvbihhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUsIGJ5dGVzIF9kYXRhKSBpbnRlcm5hbCB7CgogICAgdWludDI1NiBjb2RlTGVuZ3RoOwogICAgYXNzZW1ibHkgewogICAgICBjb2RlTGVuZ3RoIDo9IGV4dGNvZGVzaXplKF90bykKICAgIH0KICAgIGlmKGNvZGVMZW5ndGg+MCkgewogICAgICBFUkMyMjNSZWNlaXZpbmdDb250cmFjdCB1bnRydXN0ZWRSZWNlaXZlciA9IEVSQzIyM1JlY2VpdmluZ0NvbnRyYWN0KF90byk7CiAgICAgIC8vIHVudHJ1c3RlZCBjb250cmFjdCBjYWxsCiAgICAgIHVudHJ1c3RlZFJlY2VpdmVyLnRva2VuRmFsbGJhY2soX2Zyb20sIF92YWx1ZSwgX2RhdGEpOwogICAgfQogIH0KfQoKLyoqCiBTaW1wbGUgVG9rZW4gYmFzZWQgb24gT3BlblplcHBlbGluIHRva2VuIGNvbnRyYWN0CiAqLwpjb250cmFjdCBTR1BheSBpcyBUb2tlbiB7CgogIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgbmFtZSA9ICJTR1BheSBUb2tlbiI7CiAgc3RyaW5nIHB1YmxpYyBjb25zdGFudCBzeW1ib2wgPSAiU0dQIjsKICB1aW50OCBwdWJsaWMgY29uc3RhbnQgZGVjaW1hbHMgPSAxODsKCn0='.
	

]
