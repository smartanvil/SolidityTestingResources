Class {
	#name : #SRT5c37a208408c5adbb5ed0d29cfd4ad341ca708df,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT5c37a208408c5adbb5ed0d29cfd4ad341ca708df >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7CgpsaWJyYXJ5IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAKICAgIHVpbnQyNTYgYyA9IGEgLyBiOwogICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gbWF4NjQodWludDY0IGEsIHVpbnQ2NCBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50NjQpIHsKICAgIHJldHVybiBhID49IGIgPyBhIDogYjsKICB9CgogIGZ1bmN0aW9uIG1pbjY0KHVpbnQ2NCBhLCB1aW50NjQgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDY0KSB7CiAgICByZXR1cm4gYSA8IGIgPyBhIDogYjsKICB9CgogIGZ1bmN0aW9uIG1heDI1Nih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgcmV0dXJuIGEgPj0gYiA/IGEgOiBiOwogIH0KCiAgZnVuY3Rpb24gbWluMjU2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICByZXR1cm4gYSA8IGIgPyBhIDogYjsKICB9Cgp9CgovLyBJbnRlcmZhY3RpbmcgRGVwbG95ZWQgTmVydGlhIFRva2VuIApjb250cmFjdCBLYWlyb3NUb2tlbnsKICBmdW5jdGlvbiBnZXRFeGNoYW5nZVJhdGUoKSByZXR1cm5zICh1aW50MjU2IGV4Y2hhbmdlUmF0ZSk7CiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpOwogIGZ1bmN0aW9uIGdldE93bmVyKCkgcmV0dXJucyAoYWRkcmVzcyBvd25lcik7CiAgZnVuY3Rpb24gZ2V0RGVjaW1hbHMoKSByZXR1cm5zICh1aW50MjU2IGRlY2ltYWxzKTsKICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwp9CgoKLyoqCiAqIElDTyBjb250cmFjdCBmb3IgdGhlIE5lcnRpYSBUb2tlbgogKi8KY29udHJhY3QgQ3Jvd2RzYWxlIHsKCiAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQyNTY7CgogIGFkZHJlc3MgcHVibGljIGV0aE93bmVyOwogIGFkZHJlc3MgcHVibGljIGthaXJvc093bmVyOwoKICBLYWlyb3NUb2tlbiBwdWJsaWMgdG9rZW47CgogIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSBldGhlckJsYW5jZTsKCiAgdWludDI1NiBwdWJsaWMgZGVjaW1hbHM7CiAgdWludDI1NiBwdWJsaWMgaWNvTWluQ2FwOwogICAgCiAgYm9vbCBwdWJsaWMgaXNGaW5hbGl6ZWQ7CiAgdWludDI1NiBwdWJsaWMgaWNvU3RhcnRCbG9jazsKICB1aW50MjU2IHB1YmxpYyBpY29FbmRCbG9jazsKICB1aW50MjU2IHB1YmxpYyBpY29TdGFydFRpbWU7CiAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7CiAgdWludDI1NiBwdWJsaWMgZXhjaGFuZ2VSYXRlOwoKICBldmVudCBSZWZ1bmQoYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwogIGV2ZW50IFJlZnVuZEVycm9yKGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsKICAgIAogIGZ1bmN0aW9uIENyb3dkc2FsZSgpIHsKICAgIHRva2VuICAgICAgICAgID0gS2Fpcm9zVG9rZW4oMHhhNkM5ZTRENEIzNEQ0MzJkNGFlYTc5M0ZhOEMzODBiOTk0MGE1Mjc5KTsKICAgIGRlY2ltYWxzICAgICAgID0gdG9rZW4uZ2V0RGVjaW1hbHMoKTsKICAgIGV4Y2hhbmdlUmF0ZSAgID0gMjA7CiAgICBpc0ZpbmFsaXplZCAgICA9IGZhbHNlOwogICAgaWNvU3RhcnRUaW1lICAgPSBub3c7CiAgICBpY29TdGFydEJsb2NrICA9IGJsb2NrLm51bWJlci5hZGQoMTUyNDcpOwogICAgaWNvRW5kQmxvY2sgICAgPSBpY29TdGFydEJsb2NrLmFkZCgxNTI0NzApOwogICAgZXRoT3duZXIgICAgICAgPSAweDBmZTc3N0ZBNDQ0RmFlMTI4MTY5NzU0ODc3ZDUxYjY2NWVFNTU3RWU7CiAgICBrYWlyb3NPd25lciAgICA9IDB4YTZDOWU0RDRCMzRENDMyZDRhZWE3OTNGYThDMzgwYjk5NDBhNTI3OTsKICAgIGljb01pbkNhcCAgICAgID0gMTUgKiAoMTAqKjYpICogMTAqKmRlY2ltYWxzOwogIH0KCgogIC8vLyBAZGV2IEVuZHMgdGhlIGZ1bmRpbmcgcGVyaW9kIGFuZCBzZW5kcyB0aGUgRVRIIGhvbWUKICBmdW5jdGlvbiBmaW5hbGl6ZSgpIGV4dGVybmFsIHsKICAgIGlmKGlzRmluYWxpemVkKSB0aHJvdzsKICAgIGlmKG1zZy5zZW5kZXIgIT0gZXRoT3duZXIpIHRocm93OyAvLyBsb2NrcyBmaW5hbGl6ZSB0byB0aGUgdWx0aW1hdGUgRVRIIG93bmVyCiAgICAvL2lmKHRvdGFsU3VwcGx5IDwgaWNvTWluQ2FwKSB0aHJvdzsgICAgICAvLyBoYXZlIHRvIHNlbGwgbWluaW11bSB0byBtb3ZlIHRvIG9wZXJhdGlvbmFsCiAgICBpZihibG9jay5udW1iZXIgPD0gaWNvRW5kQmxvY2spIHRocm93OwogICAgCiAgICAvLyBtb3ZlIHRvIG9wZXJhdGlvbmFsCiAgICBpc0ZpbmFsaXplZCA9IHRydWU7CiAgICBpZighZXRoT3duZXIuc2VuZCh0aGlzLmJhbGFuY2UpKSB0aHJvdzsgIC8vIHNlbmQgdGhlIGV0aCB0byBOZXJ0aWEgT3duZXIKICB9CgoKICBmdW5jdGlvbiByZWZ1bmQoKXsKICAgIGlmKGlzRmluYWxpemVkKSB0aHJvdzsKICAgIGlmKGJsb2NrLm51bWJlciA8PSBpY29FbmRCbG9jaykgdGhyb3c7CiAgICBpZihtc2cuc2VuZGVyID09IHRva2VuLmdldE93bmVyKCkgKSB0aHJvdzsKCiAgICB1aW50MjU2IHVzZXJCYWxhbmNlID0gdG9rZW4uYmFsYW5jZU9mKG1zZy5zZW5kZXIpOwogICAgaWYodXNlckJhbGFuY2UgPT0gMCkgdGhyb3c7CgogICAgdWludDI1NiB1c2VyRXRoZXJzID0gZXRoZXJCbGFuY2VbbXNnLnNlbmRlcl07CiAgICBpZih1c2VyRXRoZXJzID09IDApIHRocm93OyAgICAKICAgIAogICAgZXRoZXJCbGFuY2VbbXNnLnNlbmRlcl0gPSAwOwogICAgCiAgICBpZighdG9rZW4udHJhbnNmZXJGcm9tKG1zZy5zZW5kZXIsa2Fpcm9zT3duZXIsIHVzZXJCYWxhbmNlKSkgdGhyb3c7CgogICAgaWYobXNnLnNlbmRlci5zZW5kKHVzZXJFdGhlcnMpKXsKICAgICAgUmVmdW5kKG1zZy5zZW5kZXIsIHVzZXJFdGhlcnMpOwogICAgfWVsc2V7CiAgICAgIGV0aGVyQmxhbmNlW21zZy5zZW5kZXJdID0gdXNlckV0aGVyczsKICAgICAgUmVmdW5kRXJyb3IobXNnLnNlbmRlciwgdXNlckV0aGVycyk7CiAgICAgIHRocm93OwogICAgfQogIH0KCgogIGZ1bmN0aW9uICgpIHBheWFibGUgewogICAgaWYoaXNGaW5hbGl6ZWQgJiYgbXNnLnZhbHVlIDw9IDApIHRocm93OwoKICAgIGlmKGJsb2NrLm51bWJlciA8IGljb1N0YXJ0QmxvY2spIHRocm93OwogICAgaWYoYmxvY2subnVtYmVyID4gaWNvRW5kQmxvY2spIHRocm93OwoKICAgIC8vIHN0b3JpbmcgdXNlciBldGhlcnM7CiAgICBldGhlckJsYW5jZVttc2cuc2VuZGVyXSArPSBtc2cudmFsdWU7CgogICAgLy8gY2FsY3VsYXRpbmcgYm9udXMKICAgIHVpbnQyNTYgdmFsID0gbXNnLnZhbHVlOwogICAgdWludDI1NiBib251cyAgPSAgY2FsY0JvbnVzKHZhbCk7CiAgICB1aW50MjU2IGxldmVsMmJvbnVzID0gY2FsY0xldmVsMkJvbnVzKHZhbCk7CiAgICB1aW50MjU2IHRva2VucyA9IG1zZy52YWx1ZS5hZGQobGV2ZWwyYm9udXMpLmFkZChib251cykubXVsKGV4Y2hhbmdlUmF0ZSk7ICAgIAogICAgdWludDI1NiBjaGVja2VkU3VwcGx5ID0gdG90YWxTdXBwbHkuYWRkKHRva2Vucyk7CiAgICB0b3RhbFN1cHBseSA9IGNoZWNrZWRTdXBwbHk7CiAgICBib29sIHRyYW5zZmVyID0gdG9rZW4udHJhbnNmZXJGcm9tKCB0b2tlbi5nZXRPd25lcigpLG1zZy5zZW5kZXIsIHRva2Vucyk7CiAgICBpZighdHJhbnNmZXIpewogICAgICAgIHRvdGFsU3VwcGx5ID0gdG90YWxTdXBwbHkuc3ViKHRva2Vucyk7CiAgICAgICAgdGhyb3c7CiAgICB9CiAgfQogIAogIC8vIENhbGN1bGF0aW5nIGJvdW51cyB0b2tlbnMKICBmdW5jdGlvbiBjYWxjQm9udXModWludDI1NiBfdmFsKSBwcml2YXRlIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpewogICAgcmV0dXJuIF92YWwuZGl2KDEwMCkubXVsKGdldFBlcmNlbnRhZ2UoKSk7ICAgICAgICAgICAgCiAgfSAgCgogIC8vIENhbGN1bGF0aW5nIGJvbnVzIHBlcmNlbnRhZ2UgCiAgZnVuY3Rpb24gZ2V0UGVyY2VudGFnZSgpIHByaXZhdGUgY29uc3RhbnQgcmV0dXJucyAodWludCl7CiAgICB1aW50IGR1cmF0aW9uID0gbm93LnN1YihpY29TdGFydFRpbWUpOwogICAgaWYoZHVyYXRpb24gPiAyMSBkYXlzKXsKICAgICAgcmV0dXJuIDA7CiAgICB9IGVsc2UgaWYoZHVyYXRpb24gPD0gMjEgZGF5cyAmJiBkdXJhdGlvbiA+IDE0IGRheXMpewogICAgICByZXR1cm4gMTsKICAgIH0gZWxzZSBpZihkdXJhdGlvbiA8PSAxNCBkYXlzICYmIGR1cmF0aW9uID4gNyBkYXlzKXsKICAgICAgcmV0dXJuIDM7CiAgICB9IGVsc2UgewogICAgICByZXR1cm4gNTsKICAgIH0KICB9CgogIGZ1bmN0aW9uIGNhbGNMZXZlbDJCb251cyh1aW50MjU2IF92YWwpIHByaXZhdGUgY29uc3RhbnQgcmV0dXJucyh1aW50MjU2KSB7CiAgICByZXR1cm4gX3ZhbC5kaXYoMTAwKS5tdWwobGV2ZWwyQm9udXMoX3ZhbCkpOwogIH0KCiAgLy8gY2FsY3VsYXRpbmcgMm5kIGxldmVsIGJvbnVzCiAgZnVuY3Rpb24gbGV2ZWwyQm9udXModWludDI1NiB0b2tlbnMpIHByaXZhdGUgY29uc3RhbnQgcmV0dXJucyh1aW50MjU2KSB7CiAgICAgIGlmKHRva2VucyA+IDEwMDAwMDApewogICAgICAgIHJldHVybiA1OyAgIAogICAgICB9ZWxzZSBpZih0b2tlbnMgPD0gOTk5OTk5ICYmIHRva2VucyA+PSAxMDAwMDApewogICAgICAgIHJldHVybiAzOwogICAgICB9ZWxzZSBpZih0b2tlbnMgPD0gOTk5OTkgJiYgdG9rZW5zID49IDUwMDAwICl7CiAgICAgICAgcmV0dXJuIDI7CiAgICAgIH1lbHNlIGlmKCB0b2tlbnMgPD0gNDk5OTkgJiYgdG9rZW5zID49IDEwMDAwKXsKICAgICAgICByZXR1cm4gMTsKICAgICAgfQogICAgICByZXR1cm4gMDsKICB9CgoKfQ=='.
	

]
