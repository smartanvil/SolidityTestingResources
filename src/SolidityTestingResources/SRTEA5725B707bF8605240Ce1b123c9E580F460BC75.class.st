Class {
	#name : #SRTEA5725B707bF8605240Ce1b123c9E580F460BC75,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTEA5725B707bF8605240Ce1b123c9E580F460BC75 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7CgovLyBjb3B5cmlnaHQgPGEgaHJlZj0iL2Nkbi1jZ2kvbC9lbWFpbC1wcm90ZWN0aW9uIiBjbGFzcz0iX19jZl9lbWFpbF9fIiBkYXRhLWNmZW1haWw9ImE0YzdjYmNhZDBjNWM3ZDBlNGM2ZGRkMGMxZDBjY2MxZDY4YWM3Y2JjOSI+W2VtYWlsJiMxNjA7cHJvdGVjdGVkXTwvYT4KCmNvbnRyYWN0IEJ5dGV0aGVyT1YgewogICAgZW51bSBSZXN1bHRDb2RlIHsgCiAgICAgICAgU1VDQ0VTUywKICAgICAgICBFUlJPUl9FWElTVCwKICAgICAgICBFUlJPUl9OT1RfRVhJU1QKICAgIH0KICAgIHN0cnVjdCBPd25lclNoaXAgewogICAgICAgIGFkZHJlc3MgbXlFdGhlcjsKICAgICAgICB1aW50IHZlcmlmeUNvZGU7CiAgICAgICAgc3RyaW5nIHJlZmVyQ29kZTsKICAgICAgICB1aW50IGNyZWF0ZVRpbWU7CiAgICB9CiAgICAKICAgIGFkZHJlc3MgcHVibGljIG93bmVyOwogICAgYWRkcmVzc1tdIHB1YmxpYyBtb2RlcmF0b3JzOwogICAgdWludCBwdWJsaWMgdG90YWwgPSAwOwogICAgYm9vbCBwdWJsaWMgbWFpbnRhaW5pbmcgPSBmYWxzZTsKICAgIAogICAgLy8gYml0Y29pbl9hZGRyZXNzIC0+IE93bmVyU2hpcCBsaXN0CiAgICBtYXBwaW5nKHN0cmluZyA9PiBPd25lclNoaXBbXSkgaXRlbXM7CgogICAgLy8gbW9kaWZpZXIKICAgIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgICAgIF87CiAgICB9CiAgICAKICAgIG1vZGlmaWVyIGlzQWN0aXZlIHsKICAgICAgICByZXF1aXJlKG1haW50YWluaW5nICE9IHRydWUpOwogICAgICAgIF87CiAgICB9CgogICAgbW9kaWZpZXIgb25seU1vZGVyYXRvcnMoKSB7CiAgICAgICAgaWYgKG1zZy5zZW5kZXIgIT0gb3duZXIpIHsKICAgICAgICAgICAgYm9vbCBmb3VuZCA9IGZhbHNlOwogICAgICAgICAgICBmb3IgKHVpbnQgaW5kZXggPSAwOyBpbmRleCA8IG1vZGVyYXRvcnMubGVuZ3RoOyBpbmRleCsrKSB7CiAgICAgICAgICAgICAgICBpZiAobW9kZXJhdG9yc1tpbmRleF0gPT0gbXNnLnNlbmRlcikgewogICAgICAgICAgICAgICAgICAgIGZvdW5kID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICByZXF1aXJlKGZvdW5kKTsKICAgICAgICB9CiAgICAgICAgXzsKICAgIH0KCiAgICBmdW5jdGlvbiBCeXRldGhlck9WKCkgcHVibGljIHsKICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgICB9CgogICAgLy8gZXZlbnQKICAgIGV2ZW50IExvZ0NyZWF0ZShieXRlczMyIGluZGV4ZWQgYnRjQWRkcmVzcywgdWludCB2ZXJpZnlDb2RlLCBSZXN1bHRDb2RlIHJlc3VsdCk7CiAgICAKICAgIC8vIG93bmVyIGZ1bmN0aW9uCiAgICBmdW5jdGlvbiBDaGFuZ2VPd25lcihhZGRyZXNzIF9uZXdPd25lcikgb25seU93bmVyIHB1YmxpYyB7CiAgICAgICAgaWYgKF9uZXdPd25lciAhPSBhZGRyZXNzKDApKSB7CiAgICAgICAgICAgIG93bmVyID0gX25ld093bmVyOwogICAgICAgIH0KICAgIH0KICAgIAogICAgZnVuY3Rpb24gS2lsbCgpIG9ubHlPd25lciBwdWJsaWMgewogICAgICAgIHNlbGZkZXN0cnVjdChvd25lcik7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIFRvZ2dsZU1haW50ZW5hbmNlKCkgb25seU1vZGVyYXRvcnMgcHVibGljIHsKICAgICAgICBtYWludGFpbmluZyA9ICFtYWludGFpbmluZzsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gQWRkTW9kZXJhdG9yKGFkZHJlc3MgX25ld01vZGVyYXRvcikgb25seU93bmVyIHB1YmxpYyB7CiAgICAgICAgZm9yICh1aW50IGluZGV4ID0gMDsgaW5kZXggPCBtb2RlcmF0b3JzLmxlbmd0aDsgaW5kZXgrKykgewogICAgICAgICAgICBpZiAobW9kZXJhdG9yc1tpbmRleF0gPT0gX25ld01vZGVyYXRvcikgewogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIG1vZGVyYXRvcnMucHVzaChfbmV3TW9kZXJhdG9yKTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gUmVtb3ZlTW9kZXJhdG9yKGFkZHJlc3MgX29sZE1vZGVyYXRvcikgb25seU93bmVyIHB1YmxpYyB7CiAgICAgICAgdWludCBmb3VuZEluZGV4ID0gMDsKICAgICAgICBmb3IgKDsgZm91bmRJbmRleCA8IG1vZGVyYXRvcnMubGVuZ3RoOyBmb3VuZEluZGV4KyspIHsKICAgICAgICAgICAgaWYgKG1vZGVyYXRvcnNbZm91bmRJbmRleF0gPT0gX29sZE1vZGVyYXRvcikgewogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgaWYgKGZvdW5kSW5kZXggPCBtb2RlcmF0b3JzLmxlbmd0aCkgewogICAgICAgICAgICBtb2RlcmF0b3JzW2ZvdW5kSW5kZXhdID0gbW9kZXJhdG9yc1ttb2RlcmF0b3JzLmxlbmd0aC0xXTsKICAgICAgICAgICAgZGVsZXRlIG1vZGVyYXRvcnNbbW9kZXJhdG9ycy5sZW5ndGgtMV07CiAgICAgICAgICAgIG1vZGVyYXRvcnMubGVuZ3RoLS07CiAgICAgICAgfQogICAgfQogICAgCiAgICAvLyBtb2RlcmF0b3IgZnVuY3Rpb24KICAgIGZ1bmN0aW9uIFVuY2xvY2tWZXJpZmljYXRpb24oc3RyaW5nIF9idGNBZGRyZXNzLCB1aW50IF92ZXJpZnlDb2RlKSBvbmx5TW9kZXJhdG9ycyBwdWJsaWMgcmV0dXJucyhSZXN1bHRDb2RlKSB7CiAgICAgICAgLy8gcmVtb3ZlIGZyb20gdGhlIHZlcmlmeSBjb2RlIGxpc3QKICAgICAgICB2YXIgYXJyYXkgPSBpdGVtc1tfYnRjQWRkcmVzc107CiAgICAgICAgZm9yICh1aW50IGkgPSAwOyBpPGFycmF5Lmxlbmd0aDsgaSsrKXsKICAgICAgICAgICAgaWYgKGFycmF5W2ldLnZlcmlmeUNvZGUgPT0gX3ZlcmlmeUNvZGUpIHsKICAgICAgICAgICAgICAgIGlmIChpICE9IGFycmF5Lmxlbmd0aC0xKSB7CiAgICAgICAgICAgICAgICAgICAgYXJyYXlbaV0gPSBhcnJheVthcnJheS5sZW5ndGgtMV07CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBkZWxldGUgYXJyYXlbYXJyYXkubGVuZ3RoLTFdOwogICAgICAgICAgICAgICAgYXJyYXkubGVuZ3RoLS07CiAgICAgICAgICAgICAgICB0b3RhbC0tOwogICAgICAgICAgICAgICAgcmV0dXJuIFJlc3VsdENvZGUuU1VDQ0VTUzsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gUmVzdWx0Q29kZS5FUlJPUl9OT1RfRVhJU1Q7CiAgICB9CiAgICAKICAgIC8vIHB1YmxpYyBmdW5jdGlvbgogICAgZnVuY3Rpb24gR2V0T3duZXJzaGlwKHN0cmluZyBfYnRjQWRkcmVzcywgdWludCBfdmVyaWZ5Q29kZSkgY29uc3RhbnQgcHVibGljIHJldHVybnMoYWRkcmVzcywgc3RyaW5nKSB7CiAgICAgICAgdmFyIGFycmF5ID0gaXRlbXNbX2J0Y0FkZHJlc3NdOwogICAgICAgIGZvciAodWludCBpPTA7IGk8YXJyYXkubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgaWYgKGFycmF5W2ldLnZlcmlmeUNvZGUgPT0gX3ZlcmlmeUNvZGUpIHsKICAgICAgICAgICAgICAgIHZhciBpdGVtID0gYXJyYXlbaV07CiAgICAgICAgICAgICAgICByZXR1cm4gKGl0ZW0ubXlFdGhlciwgaXRlbS5yZWZlckNvZGUpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiAoMCwgIiIpOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBBZGRPd25lcnNoaXAoc3RyaW5nIF9idGNBZGRyZXNzLCB1aW50IF92ZXJpZnlDb2RlLCBzdHJpbmcgX3JlZmVyQ29kZSkgaXNBY3RpdmUgcHVibGljIHJldHVybnMoUmVzdWx0Q29kZSkgewogICAgICAgIGJ5dGVzMzIgYnRjQWRkcmVzc0hhc2ggPSBrZWNjYWsyNTYoX2J0Y0FkZHJlc3MpOwogICAgICAgIHZhciBhcnJheSA9IGl0ZW1zW19idGNBZGRyZXNzXTsKICAgICAgICBmb3IgKHVpbnQgaT0wOyBpPGFycmF5Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIGlmIChhcnJheVtpXS52ZXJpZnlDb2RlID09IF92ZXJpZnlDb2RlKSB7CiAgICAgICAgICAgICAgICBMb2dDcmVhdGUoYnRjQWRkcmVzc0hhc2gsIF92ZXJpZnlDb2RlLCBSZXN1bHRDb2RlLkVSUk9SX0VYSVNUKTsKICAgICAgICAgICAgICAgIHJldHVybiBSZXN1bHRDb2RlLkVSUk9SX0VYSVNUOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIE93bmVyU2hpcCBtZW1vcnkgaXRlbTsKICAgICAgICBpdGVtLm15RXRoZXIgPSBtc2cuc2VuZGVyOwogICAgICAgIGl0ZW0udmVyaWZ5Q29kZSA9IF92ZXJpZnlDb2RlOwogICAgICAgIGl0ZW0ucmVmZXJDb2RlID0gX3JlZmVyQ29kZTsKICAgICAgICBpdGVtLmNyZWF0ZVRpbWUgPSBub3c7CgogICAgICAgIHRvdGFsKys7CiAgICAgICAgYXJyYXkucHVzaChpdGVtKTsKICAgICAgICBMb2dDcmVhdGUoYnRjQWRkcmVzc0hhc2gsIF92ZXJpZnlDb2RlLCBSZXN1bHRDb2RlLlNVQ0NFU1MpOwogICAgICAgIHJldHVybiBSZXN1bHRDb2RlLlNVQ0NFU1M7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIEdldFZlcmlmeUNvZGVzKHN0cmluZyBfYnRjQWRkcmVzcykgY29uc3RhbnQgcHVibGljIHJldHVybnModWludFtdKSB7CiAgICAgICAgdmFyIGFycmF5ID0gaXRlbXNbX2J0Y0FkZHJlc3NdOwogICAgICAgIHVpbnRbXSBtZW1vcnkgdmVyaWZ5Q29kZXMgPSBuZXcgdWludFtdKGFycmF5Lmxlbmd0aCk7CiAgICAgICAgZm9yICh1aW50IGk9MDsgaTxhcnJheS5sZW5ndGg7IGkrKykgewogICAgICAgICAgICB2ZXJpZnlDb2Rlc1tpXSA9IGFycmF5W2ldLnZlcmlmeUNvZGU7CiAgICAgICAgfQogICAgICAgIHJldHVybiB2ZXJpZnlDb2RlczsKICAgIH0KfQ=='.
	

]
