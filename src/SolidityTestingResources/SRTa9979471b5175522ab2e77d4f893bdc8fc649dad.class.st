Class {
	#name : #SRTa9979471b5175522ab2e77d4f893bdc8fc649dad,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTa9979471b5175522ab2e77d4f893bdc8fc649dad >> base64 [
	^ ''.
	

]
