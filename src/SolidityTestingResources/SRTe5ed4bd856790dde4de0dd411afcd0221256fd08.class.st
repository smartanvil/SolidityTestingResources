Class {
	#name : #SRTe5ed4bd856790dde4de0dd411afcd0221256fd08,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTe5ed4bd856790dde4de0dd411afcd0221256fd08 >> base64 [
	^ ''.
	

]
