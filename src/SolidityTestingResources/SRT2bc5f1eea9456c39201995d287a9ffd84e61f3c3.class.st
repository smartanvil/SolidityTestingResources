Class {
	#name : #SRT2bc5f1eea9456c39201995d287a9ffd84e61f3c3,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT2bc5f1eea9456c39201995d287a9ffd84e61f3c3 >> base64 [
	^ ''.
	

]
