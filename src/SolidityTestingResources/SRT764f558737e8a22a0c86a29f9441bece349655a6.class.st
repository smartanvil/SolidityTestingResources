Class {
	#name : #SRT764f558737e8a22a0c86a29f9441bece349655a6,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT764f558737e8a22a0c86a29f9441bece349655a6 >> base64 [
	^ ''.
	

]
