Class {
	#name : #SRTe762da33bf2b2412477c65b01f46d923a7ef5794,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTe762da33bf2b2412477c65b01f46d923a7ef5794 >> base64 [
	^ ''.
	

]
