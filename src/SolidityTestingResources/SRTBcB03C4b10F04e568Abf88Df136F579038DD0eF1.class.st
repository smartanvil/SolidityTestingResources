Class {
	#name : #SRTBcB03C4b10F04e568Abf88Df136F579038DD0eF1,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTBcB03C4b10F04e568Abf88Df136F579038DD0eF1 >> base64 [
	^ ''.
	

]
