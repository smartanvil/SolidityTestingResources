Class {
	#name : #SRT6cb2b8dc6a508c9a21db9683d1a729715969a6ee,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT6cb2b8dc6a508c9a21db9683d1a729715969a6ee >> base64 [
	^ ''.
	

]
