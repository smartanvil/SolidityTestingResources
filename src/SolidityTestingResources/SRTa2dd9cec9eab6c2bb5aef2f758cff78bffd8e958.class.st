Class {
	#name : #SRTa2dd9cec9eab6c2bb5aef2f758cff78bffd8e958,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTa2dd9cec9eab6c2bb5aef2f758cff78bffd8e958 >> base64 [
	^ ''.
	

]
