Class {
	#name : #SRTF9DD354Be4A35ba3f44f8b51564e9D5110B16357,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTF9DD354Be4A35ba3f44f8b51564e9D5110B16357 >> base64 [
	^ ''.
	

]
