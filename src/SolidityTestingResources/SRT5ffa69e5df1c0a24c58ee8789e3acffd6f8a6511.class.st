Class {
	#name : #SRT5ffa69e5df1c0a24c58ee8789e3acffd6f8a6511,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT5ffa69e5df1c0a24c58ee8789e3acffd6f8a6511 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7Cgpjb250cmFjdCBvd25lZCB7CiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKCiAgICBmdW5jdGlvbiBvd25lZCgpIHB1YmxpYyB7CiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgfQoKICAgIG1vZGlmaWVyIG9ubHlPd25lciB7CiAgICAgICAgaWYgKG1zZy5zZW5kZXIgIT0gb3duZXIpIHJldmVydCgpOwogICAgICAgIF87CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBuZXdPd25lcikgcHVibGljIG9ubHlPd25lciB7CiAgICAgICAgb3duZXIgPSBuZXdPd25lcjsKICAgIH0KfQoKCmNvbnRyYWN0IFJlZ2lzdHJhdGlvbiB7IAogICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gYm9vbCkgcHVibGljIGlzUmVnaXN0ZXJlZDsgIAp9Cgpjb250cmFjdCBMaWJyYXJpdW1TdWJtaXNzaW9uIGlzIG93bmVkIHsgCiAgICBzdHJ1Y3QgVGl0bGUgeyAKICAgICAgCiAgICAgICAgYWRkcmVzcyBvd25lcjsgCiAgICAgICAgdWludDI1NiBwcmljZTsgCiAgICB9CiAgICAKICAgIFJlZ2lzdHJhdGlvbiByZWdpc3RyeUludGVyZmFjZTsKICAgIGV2ZW50IENhdGVnb3J5QWRkZWQodWludDI1NiBpZCwgc3RyaW5nIG5hbWUpOyAKICAgIGV2ZW50IENhdGVnb3J5RGVsZXRlZCh1aW50MjU2IGlkKTsKICAgICAKICAgIGV2ZW50IFRpdGxlQWRkZWQodWludDI1NiBpZCxhZGRyZXNzIG93bmVyLHVpbnQyNTYgY2F0ZWdvcnksIHN0cmluZyBuYW1lLHN0cmluZyBtZWRpYV9oYXNoLHN0cmluZyBkZXNjLHVpbnQyNTYgcHJpY2UgKTsKICAgIGV2ZW50IFRpdGxlRGVsaXN0ZWQodWludDI1NiBpZCk7CiAgICBldmVudCBUaXRsZUFwcHJvdmVkKHVpbnQyNTYgaWQpOyAKICAgIGV2ZW50IFRpdGxlVXBkYXRlZCh1aW50MjU2IGlkLHVpbnQyNTYgY2F0ZWdvcnksIHN0cmluZyBuYW1lLCBzdHJpbmcgbWVkaWFfaGFzaCwgc3RyaW5nIGRlc2MsIHVpbnQyNTYgcHJpY2UpOwogICAgZXZlbnQgVGl0bGVQdXJjaGFzZWQoYWRkcmVzcyBidXllciwgdWludDI1NiB0aXRsZSk7CiAgICAKICAgIHVpbnQyNTYgcHVibGljIGNhdGVnb3JpZXNDb3VudDsgCiAgICB1aW50MjU2IHB1YmxpYyB0aXRsZUNvdW50OyAKICAgIAogICAgbWFwcGluZyAodWludDI1NiA9PiBUaXRsZSkgcHVibGljIHRpdGxlczsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIGJhbGFuY2VzOyAvL0V0aGVyIG9uIGFjY291bnQgZm9yIHNlbGxlcnMgCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBzYWxlc0V0aDsgLy9Ub3RhbCBldGggZWFybmVkIGJ5IHNlbGxlcgogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBwdWJsaWMgdGl0bGVzU29sZDsgLy9Ub3RhbCBjb3BpZXMgb2YgYm9va3Mgc29sZCBieSBzZWxsZXIKICAgIG1hcHBpbmcgKHVpbnQyNTYgPT4gdWludDI1NikgcHVibGljIGNvcGllc1NvbGQ7ICAvL0NvcGllcyBzb2xkIG9mIGVhY2ggdGl0bGUKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gc3RyaW5nKSBwdWJsaWMgdXNlcm5hbWVzOyAvLyBOYW1lcyBvZiBidXllcnMgYW5kIHNlbGxlcnMgcmVnaXN0ZXJlZCAKICAgIAogICAgZnVuY3Rpb24gQWRkQ2F0ZWdvcnkoc3RyaW5nIGNhdGVnb3J5TmFtZSkgcHVibGljIG9ubHlPd25lciB7IAogICAgICAgIENhdGVnb3J5QWRkZWQoY2F0ZWdvcmllc0NvdW50LGNhdGVnb3J5TmFtZSk7CiAgICAgICAgY2F0ZWdvcmllc0NvdW50Kys7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIFJlbW92ZUNhdGVnb3J5KHVpbnQyNTYgaWQpIHB1YmxpYyBvbmx5T3duZXIgeyAKICAgICAgICBDYXRlZ29yeURlbGV0ZWQoaWQpOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBTZXRSZWdpc3RyYXRpb25Db250cmFjdChhZGRyZXNzIHJlZ2lzdHJ5QWRkcmVzcykgcHVibGljIG9ubHlPd25lciB7IAogICAgICAgIHJlZ2lzdHJ5SW50ZXJmYWNlID0gUmVnaXN0cmF0aW9uKHJlZ2lzdHJ5QWRkcmVzcyk7CiAgICAgICAgCiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIEFkZFRpdGxlKHVpbnQyNTYgY2F0ZWdvcnksc3RyaW5nIG5hbWUsc3RyaW5nIG1lZGlhX2hhc2gsc3RyaW5nIGRlc2MsdWludDI1NiBwcmljZSkgcHVibGljIHsgCiAgICAgICAgcmVxdWlyZShyZWdpc3RyeUludGVyZmFjZS5pc1JlZ2lzdGVyZWQobXNnLnNlbmRlcikgPT0gdHJ1ZSk7IAogICAgICAgIAogICAgICAgIFRpdGxlIG1lbW9yeSB0ID0gVGl0bGUobXNnLnNlbmRlcixwcmljZSk7IAogICAgICAgIHRpdGxlc1t0aXRsZUNvdW50XSA9IHQ7IAogICAgICAgIAogICAgICAgIFRpdGxlQWRkZWQodGl0bGVDb3VudCxtc2cuc2VuZGVyLGNhdGVnb3J5LG5hbWUsbWVkaWFfaGFzaCxkZXNjLHByaWNlKTsKICAgICAgICAKICAgICAgICB0aXRsZUNvdW50Kys7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIFJlZ2lzdGVyVXNlcm5hbWUoc3RyaW5nIG5hbWUpIHB1YmxpYyB7CiAgICAgICAgcmVxdWlyZShyZWdpc3RyeUludGVyZmFjZS5pc1JlZ2lzdGVyZWQobXNnLnNlbmRlcikgPT0gdHJ1ZSk7IAogICAgICAgIHVzZXJuYW1lc1ttc2cuc2VuZGVyXSA9IG5hbWU7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIERlbGlzdFRpdGxlKHVpbnQyNTYgdGl0bGVJZCkgcHVibGljICB7IAogICAgICAgIHJlcXVpcmUgKHRpdGxlSWQgPCB0aXRsZUNvdW50KTsgCiAgICAgICAgcmVxdWlyZSAobXNnLnNlbmRlciA9PSBvd25lciB8fCBtc2cuc2VuZGVyID09IHRpdGxlc1t0aXRsZUlkXS5vd25lcik7CiAgICAgICAgCiAgICAgICAgVGl0bGVEZWxpc3RlZCh0aXRsZUlkKTsKICAgICAgICAKICAgIH0KICAgIAogICAgZnVuY3Rpb24gQXBwcm92ZVRpdGxlKHVpbnQyNTYgdGl0bGVJZCkgcHVibGljIG9ubHlPd25lciB7IAogICAgICAgIHJlcXVpcmUgKHRpdGxlSWQgPCB0aXRsZUNvdW50KTsgCiAgICAgICAgCiAgICAgICAgVGl0bGVBcHByb3ZlZCh0aXRsZUlkKTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gRWRpdFRpbGUodWludDI1NiBpZCx1aW50MjU2IGNhdGVnb3J5LHN0cmluZyBuYW1lLHN0cmluZyBtZWRpYV9oYXNoLHN0cmluZyBkZXNjLHVpbnQyNTYgcHJpY2UpIHB1YmxpYyB7IAogICAgICAgIHJlcXVpcmUgKGlkIDwgdGl0bGVDb3VudCk7CiAgICAgICAgcmVxdWlyZSh0aXRsZXNbaWRdLm93bmVyID09IG1zZy5zZW5kZXIpOwogICAgICAgIAogICAgICAgIHRpdGxlc1tpZF0ucHJpY2UgPSBwcmljZTsKICAgICAgICAKICAgICAgICBUaXRsZVVwZGF0ZWQoaWQsY2F0ZWdvcnksIG5hbWUsIG1lZGlhX2hhc2gsIGRlc2MsIHByaWNlKTsKCiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIFZlbmRUaXRsZSh1aW50MjU2IHRpdGxlSWQpIHB1YmxpYyBwYXlhYmxlIHsKICAgICAgICByZXF1aXJlICh0aXRsZUlkIDwgdGl0bGVDb3VudCk7IAogICAgICAgIFRpdGxlIHN0b3JhZ2UgdCA9IHRpdGxlc1t0aXRsZUlkXTsgCiAgICAgICAgcmVxdWlyZShtc2cudmFsdWUgPT0gdC5wcmljZSk7IAogICAgICAgIAogICAgICAgIHVpbnQyNTYgdGVtcCA9IGJhbGFuY2VzW3Qub3duZXJdOwogICAgICAgIGJhbGFuY2VzW3Qub3duZXJdICs9IG1zZy52YWx1ZTsgCiAgICAgICAgcmVxdWlyZShiYWxhbmNlc1t0Lm93bmVyXSA+IHRlbXApOwogICAgICAgIAogICAgICAgIGNvcGllc1NvbGRbdGl0bGVJZF0rKzsKICAgICAgICB0aXRsZXNTb2xkW3Qub3duZXJdKys7CiAgICAgICAgc2FsZXNFdGhbdC5vd25lcl0gKz0gbXNnLnZhbHVlOwogICAgICAgIAogICAgICAgIFRpdGxlUHVyY2hhc2VkKG1zZy5zZW5kZXIsIHRpdGxlSWQpOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBXaWR0aGRyYXdFYXJuaW5ncyh1aW50MjU2IGFtb3VudCkgcHVibGljIHsgCiAgICAgICAgcmVxdWlyZShiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBhbW91bnQpOyAKICAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gLT0gYW1vdW50OyAKICAgICAgICAgbXNnLnNlbmRlci50cmFuc2ZlcihhbW91bnQpOwogICAgfQogICAgCiAgICBmdW5jdGlvbiAoKSBwdWJsaWMgcGF5YWJsZSB7CiAgICAgICAgcmV2ZXJ0KCk7ICAgICAvLyBQcmV2ZW50cyBhY2NpZGVudGFsIHNlbmRpbmcgb2YgZXRoZXIKICAgIH0KICAgIAp9'.
	

]
