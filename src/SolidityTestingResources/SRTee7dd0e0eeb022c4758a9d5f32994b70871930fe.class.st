Class {
	#name : #SRTee7dd0e0eeb022c4758a9d5f32994b70871930fe,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTee7dd0e0eeb022c4758a9d5f32994b70871930fe >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMDsKCi8vIEVSQyBUb2tlbiBTdGFuZGFyZCAjMjAgSW50ZXJmYWNlCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8yMApjb250cmFjdCBFUkMyMEludGVyZmFjZSB7CgkvLyBHZXQgdGhlIHRvdGFsIHRva2VuIHN1cHBseQoJZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nik7CgkKCS8vIEdldCB0aGUgYWNjb3VudCBiYWxhbmNlIG9mIGFub3RoZXIgYWNjb3VudCB3aXRoIGFkZHJlc3MgX293bmVyCglmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KTsKCQoJLy8gU2VuZCBfdmFsdWUgYW1vdW50IG9mIHRva2VucyB0byBhZGRyZXNzIF90bwoJZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CgkKCS8vIFNlbmQgX3ZhbHVlIGFtb3VudCBvZiB0b2tlbnMgZnJvbSBhZGRyZXNzIF9mcm9tIHRvIGFkZHJlc3MgX3RvCglmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CgkKCS8vIEFsbG93IF9zcGVuZGVyIHRvIHdpdGhkcmF3IGZyb20geW91ciBhY2NvdW50LCBtdWx0aXBsZSB0aW1lcywgdXAgdG8gdGhlIF92YWx1ZSBhbW91bnQuCgkvLyBJZiB0aGlzIGZ1bmN0aW9uIGlzIGNhbGxlZCBhZ2FpbiBpdCBvdmVyd3JpdGVzIHRoZSBjdXJyZW50IGFsbG93YW5jZSB3aXRoIF92YWx1ZS4KCS8vIHRoaXMgZnVuY3Rpb24gaXMgcmVxdWlyZWQgZm9yIHNvbWUgREVYIGZ1bmN0aW9uYWxpdHkKCWZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKTsKCQoJLy8gUmV0dXJucyB0aGUgYW1vdW50IHdoaWNoIF9zcGVuZGVyIGlzIHN0aWxsIGFsbG93ZWQgdG8gd2l0aGRyYXcgZnJvbSBfb3duZXIKCWZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpOwoJCgkvLyBUcmlnZ2VyZWQgd2hlbiB0b2tlbnMgYXJlIHRyYW5zZmVycmVkLgoJZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50MjU2IF92YWx1ZSk7CgkKCS8vIFRyaWdnZXJlZCB3aGVuZXZlciBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSBpcyBjYWxsZWQuCglldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKTsKfQoKY29udHJhY3QgUmFuZG9tVG9rZW4gewogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2KTsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpOwp9Cgpjb250cmFjdCBZZXRBbm90aGVyVG9rZW4gaXMgRVJDMjBJbnRlcmZhY2UgewogICAgYm9vbCBwdWJsaWMgaXNfcHVyY2hhc2VfYWxsb3dlZDsKICAgIGJvb2wgcHVibGljIGlzX3RyYW5zZmVyX2FsbG93ZWQ7CiAgICB1aW50MjU2IHB1YmxpYyB0b3RTdXBwbHkgPSAwOwogICAgdWludDI1NiBwdWJsaWMgdG90Q29udHJpYnV0aW9uID0gMDsKICAgIGFkZHJlc3Mgb3duZXI7CiAgICAKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikpIGFsbG93ZWQ7CiAgICAKICAgIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lcikgeyByZXZlcnQoKTsgfQogICAgICAgIF87CiAgICB9CiAgICAKICAgIG1vZGlmaWVyIHRyYW5zZmVyQWxsb3dlZCgpIHsKICAgICAgICBpZiAoISBpc190cmFuc2Zlcl9hbGxvd2VkKSB7IHJldmVydCgpOyB9CiAgICAgICAgXzsKICAgIH0KICAgIAogICAgbW9kaWZpZXIgcHVyY2hhc2VBbGxvd2VkKCkgewogICAgICAgIGlmICghIGlzX3B1cmNoYXNlX2FsbG93ZWQpIHsgcmV2ZXJ0KCk7IH0KICAgICAgICBfOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBZZXRBbm90aGVyVG9rZW4oKSBwdWJsaWMgewogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgICAgICBlbmFibGVUcmFuc2ZlcihmYWxzZSk7CiAgICAgICAgZW5hYmxlUHVyY2hhc2UoZmFsc2UpOwogICAgfQoKICAgIGZ1bmN0aW9uIG5hbWUoKSBwdWJsaWMgcHVyZSByZXR1cm5zIChzdHJpbmcpICAgIHsgcmV0dXJuICJOdW1iZXIgT25lIERpbWUiOyB9CiAgICBmdW5jdGlvbiBzeW1ib2woKSBwdWJsaWMgcHVyZSByZXR1cm5zIChzdHJpbmcpICB7IHJldHVybiAiTjFESU1FIjsgfQogICAgZnVuY3Rpb24gZGVjaW1hbHMoKSBwdWJsaWMgcHVyZSByZXR1cm5zICh1aW50OCkgeyByZXR1cm4gMDsgfQogICAgCiAgICBmdW5jdGlvbiBnZXRfYmFsYW5jZShhZGRyZXNzIGEpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYpIHsgcmV0dXJuIGEuYmFsYW5jZTsgfQogICAgCiAgICBmdW5jdGlvbiBnZXRfc3RhdHMoKSBwdWJsaWMgdmlldyBvbmx5T3duZXIgcmV0dXJucyAodWludDI1NiBfdG90U3VwcGx5LCB1aW50MjU2IF90b3RDb250cmlidXRpb24pIHsKICAgICAgICBfdG90U3VwcGx5ID0gdG90U3VwcGx5OwogICAgICAgIF90b3RDb250cmlidXRpb24gPSB0b3RDb250cmlidXRpb247CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGVuYWJsZVB1cmNoYXNlKGJvb2wgX2VuYWIpIHB1YmxpYyBvbmx5T3duZXIgcmV0dXJucyAoYm9vbCkgewogICAgICAgIHJldHVybiBpc19wdXJjaGFzZV9hbGxvd2VkID0gX2VuYWI7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGVuYWJsZVRyYW5zZmVyKGJvb2wgX2VuYWIpIHB1YmxpYyBvbmx5T3duZXIgcmV0dXJucyAoYm9vbCkgewogICAgICAgIHJldHVybiBpc190cmFuc2Zlcl9hbGxvd2VkID0gX2VuYWI7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHJldHVybiB0b3RTdXBwbHk7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIGEpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICByZXR1cm4gYmFsYW5jZXNbYV07CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX2Ftb3VudCkgcHVibGljIHRyYW5zZmVyQWxsb3dlZCByZXR1cm5zIChib29sKSB7CiAgICAgICAgaWYgKCAKICAgICAgICAgICAgICAgIF9hbW91bnQgPiAwCiAgICAgICAgICAgICYmICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfYW1vdW50CiAgICAgICAgICAgICYmICBiYWxhbmNlc1tfdG9dICsgX2Ftb3VudCA+IGJhbGFuY2VzW190b10KICAgICAgICApIHsKICAgICAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gLT0gX2Ftb3VudDsKICAgICAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfYW1vdW50OwogICAgICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF9hbW91bnQpOwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgfQogCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oCiAgICAgICAgYWRkcmVzcyBfZnJvbSwKICAgICAgICBhZGRyZXNzIF90bywKICAgICAgICB1aW50MjU2IF9hbW91bnQKICAgICkgcHVibGljIHRyYW5zZmVyQWxsb3dlZCByZXR1cm5zIChib29sKSB7CiAgICAgICAgaWYgKAogICAgICAgICAgICAgICAgX2Ftb3VudCA+IDAKICAgICAgICAgICAgJiYgIGJhbGFuY2VzW19mcm9tXSA+PSBfYW1vdW50CiAgICAgICAgICAgICYmICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA+PSBfYW1vdW50CiAgICAgICAgICAgICYmICBiYWxhbmNlc1tfdG9dICsgX2Ftb3VudCA+IGJhbGFuY2VzW190b10KICAgICAgICApIHsKICAgICAgICAgICAgYmFsYW5jZXNbX2Zyb21dIC09IF9hbW91bnQ7CiAgICAgICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdIC09IF9hbW91bnQ7CiAgICAgICAgICAgIGJhbGFuY2VzW190b10gKz0gX2Ftb3VudDsKICAgICAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX2Ftb3VudCk7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0KICAgICAgICBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgIH0KIAogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF9hbW91bnQpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfYW1vdW50OwogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfYW1vdW50KTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KIAogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uKCkgcHVibGljIHBheWFibGUgcHVyY2hhc2VBbGxvd2VkIHsKICAgICAgICBpZiAobXNnLnZhbHVlID09IDApIHsgcmV0dXJuOyB9CgogICAgICAgIHRvdENvbnRyaWJ1dGlvbiArPSBtc2cudmFsdWU7CiAgICAgICAgdWludDI1NiB0b2tlbnNJc3N1ZWQgPSBtc2cudmFsdWU7CiAgICAgICAgdG90U3VwcGx5ICs9IHRva2Vuc0lzc3VlZDsKICAgICAgICBvd25lci50cmFuc2Zlcihtc2cudmFsdWUpOwogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdICs9IHRva2Vuc0lzc3VlZDsKICAgICAgICBUcmFuc2ZlcihhZGRyZXNzKHRoaXMpLCBtc2cuc2VuZGVyLCB0b2tlbnNJc3N1ZWQpOwogICAgfQogICAgCiAgICBmdW5jdGlvbiB3aXRoZHJhd0ZvcmVpZ25Ub2tlbnMoYWRkcmVzcyBfdG9rZW5Db250cmFjdCkgcHVibGljIG9ubHlPd25lciByZXR1cm5zIChib29sKSB7CiAgICAgICAgUmFuZG9tVG9rZW4gdG9rZW4gPSBSYW5kb21Ub2tlbihfdG9rZW5Db250cmFjdCk7CiAgICAgICAgdWludDI1NiBhbW91bnQgPSB0b2tlbi5iYWxhbmNlT2YoYWRkcmVzcyh0aGlzKSk7CiAgICAgICAgcmV0dXJuIHRva2VuLnRyYW5zZmVyKG93bmVyLCBhbW91bnQpOwogICAgfQp9'.
	

]
