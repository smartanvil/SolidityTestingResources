Class {
	#name : #SRT4763768d6938353c9c8849115c58a32142b0f9ea,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT4763768d6938353c9c8849115c58a32142b0f9ea >> base64 [
	^ ''.
	

]
