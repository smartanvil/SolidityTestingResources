Class {
	#name : #SRT92e55c6ee3171779174cebb27211120b730c155c,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT92e55c6ee3171779174cebb27211120b730c155c >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7CgovLwovLyA9PT09IERJU0NMQUlNRVIgPT09PQovLwovLyBFVEhFUkVVTSBJUyBTVElMTCBBTiBFWFBFUkVNRU5UQUwgVEVDSE5PTE9HWS4KLy8gQUxUSE9VR0ggVEhJUyBTTUFSVCBDT05UUkFDVCBXQVMgQ1JFQVRFRCBXSVRIIEdSRUFUIENBUkUgQU5EIElOIFRIRSBIT1BFIE9GIEJFSU5HIFVTRUZVTCwgTk8gR1VBUkFOVEVFUyBPRiBGTEFXTEVTUyBPUEVSQVRJT04gQ0FOIEJFIEdJVkVOLgovLyBJTiBQQVJUSUNVTEFSIC0gU1VCVElMRSBCVUdTLCBIQUNLRVIgQVRUQUNLUyBPUiBNQUxGVU5DVElPTiBPRiBVTkRFUkxZSU5HIFRFQ0hOT0xPR1kgQ0FOIENBVVNFIFVOSU5URU5USU9OQUwgQkVIQVZJT1VSLgovLyBZT1UgQVJFIFNUUk9OR0xZIEVOQ09VUkFHRUQgVE8gU1RVRFkgVEhJUyBTTUFSVCBDT05UUkFDVCBDQVJFRlVMTFkgSU4gT1JERVIgVE8gVU5ERVJTVEFORCBQT1NTSUJMRSBFREdFIENBU0VTIEFORCBSSVNLUy4KLy8gRE9OJ1QgVVNFIFRISVMgU01BUlQgQ09OVFJBQ1QgSUYgWU9VIEhBVkUgU1VCU1RBTlRJQUwgRE9VQlRTIE9SIElGIFlPVSBET04nVCBLTk9XIFdIQVQgWU9VIEFSRSBET0lORy4KLy8KLy8gVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCAiQVMgSVMiIEFORCBBTlkgRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRCBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWQovLyBBTkQgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQVJFIERJU0NMQUlNRUQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBDT1BZUklHSFQgT1dORVIgT1IgQ09OVFJJQlVUT1JTIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsCi8vIElOQ0lERU5UQUwsIFNQRUNJQUwsIEVYRU1QTEFSWSwgT1IgQ09OU0VRVUVOVElBTCBEQU1BR0VTIChJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgUFJPQ1VSRU1FTlQgT0YgU1VCU1RJVFVURSBHT09EUyBPUiBTRVJWSUNFUzsgTE9TUyBPRiBVU0UsIERBVEEsCi8vIE9SIFBST0ZJVFM7IE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSIElOIENPTlRSQUNULCBTVFJJQ1QgTElBQklMSVRZLAovLyBPUiBUT1JUIChJTkNMVURJTkcgTkVHTElHRU5DRSBPUiBPVEhFUldJU0UpIEFSSVNJTkcgSU4gQU5ZIFdBWSBPVVQgT0YgVEhFIFVTRSBPRiBUSElTIFNPRlRXQVJFLCBFVkVOIElGIEFEVklTRUQgT0YgVEhFIFBPU1NJQklMSVRZIE9GIFNVQ0ggREFNQUdFLgovLyA9PT09Ci8vCi8vCi8vID09PT0gUEFSQU5PSUEgTk9USUNFID09PT0KLy8gQSBjYXJlZnVsIHJlYWRlciB3aWxsIGZpbmQgc29tZSBhZGRpdGlvbmFsIGNoZWNrcyBhbmQgZXhjZXNzaXZlIGNvZGUsIGNvbnN1bWluZyBzb21lIGV4dHJhIGdhcy4gVGhpcyBpcyBpbnRlbnRpb25hbC4KLy8gRXZlbiB0aG91Z2ggdGhlIGNvbnRyYWN0IHNob3VsZCB3b3JrIHdpdGhvdXQgdGhlc2UgcGFydHMsIHRoZXkgbWFrZSB0aGUgY29kZSBtb3JlIHNlY3VyZSBpbiBwcm9kdWN0aW9uIGFuZCBmb3IgZnV0dXJlIHJlZmFjdG9yaW5nLgovLyBBbHNvLCB0aGV5IHNob3cgbW9yZSBjbGVhcmx5IHdoYXQgd2UgaGF2ZSBjb25zaWRlcmVkIGFuZCBhZGRyZXNzZWQgZHVyaW5nIGRldmVsb3BtZW50LgovLyBEaXNjdXNzaW9uIGlzIHdlbGNvbWUhCi8vID09PT0KLy8KCi8vLyBAYXV0aG9yIHdyaXR0ZW4gYnkgZXRoZXJuaWFuIGZvciBTYW50aW1lbnQgU2FnbAovLy8gQG5vdGljZSByZXBvcnQgYnVncyB0bzogPGEgaHJlZj0iL2Nkbi1jZ2kvbC9lbWFpbC1wcm90ZWN0aW9uIiBjbGFzcz0iX19jZl9lbWFpbF9fIiBkYXRhLWNmZW1haWw9ImY5OWI4YzllOGFiOTljOGQ5MTljOGI5NzkwOTg5N2Q3OWE5Njk0Ij5bZW1haWwmIzE2MDtwcm90ZWN0ZWRdPC9hPgovLy8gQHRpdGxlIFNhbnRpbWVudCBXaGl0ZUxpc3QgY29udHJhY3QKY29udHJhY3QgU2FudGltZW50V2hpdGVMaXN0IHsKCiAgICBzdHJpbmcgY29uc3RhbnQgcHVibGljIFZFUlNJT04gPSAiMC4zLjAiOwoKICAgIGZ1bmN0aW9uICgpIHsgdGhyb3c7IH0gICAvL2V4cGxpY2l0bHkgdW5wYXlhYmxlCgogICAgc3RydWN0IExpbWl0IHsKICAgICAgICB1aW50MjQgbWluOyAgLy9maW5uZXkKICAgICAgICB1aW50MjQgbWF4OyAgLy9maW5uZXkKICAgIH0KCiAgICBzdHJ1Y3QgTGltaXRXaXRoQWRkciB7CiAgICAgICAgYWRkcmVzcyBhZGRyOwogICAgICAgIHVpbnQyNCBtaW47IC8vZmlubmV5CiAgICAgICAgdWludDI0IG1heDsgLy9maW5uZXkKICAgIH0KCiAgICBtYXBwaW5nKGFkZHJlc3M9PkxpbWl0KSBwdWJsaWMgYWxsb3dlZDsKICAgIHVpbnQxNiAgcHVibGljIGNodW5rTnIgPSAwOwogICAgdWludCAgICBwdWJsaWMgcmVjb3JkTnVtID0gMDsKICAgIHVpbnQyNTYgcHVibGljIGNvbnRyb2xTdW0gPSAwOwogICAgYm9vbCBwdWJsaWMgaXNTZXR1cE1vZGUgPSB0cnVlOwogICAgYWRkcmVzcyBwdWJsaWMgYWRtaW47CgogICAgZnVuY3Rpb24gU2FudGltZW50V2hpdGVMaXN0KCkgeyBhZG1pbiA9IG1zZy5zZW5kZXI7IH0KCiAgICAvLy9AZGV2IGFkZCBuZXh0IGFkZHJlc3MgcGFja2FnZSB0byB0aGUgaW50ZXJuYWwgd2hpdGUgbGlzdC4KICAgIC8vL0BkZXYgY2FsbCBpcyBhbGxvd2VkIGluIHNldHVwIG1vZGUgb25seS4KICAgIGZ1bmN0aW9uIGFkZFBhY2soYWRkcmVzc1tdIGFkZHJzLCB1aW50MjRbXSBtaW5zLCB1aW50MjRbXSBtYXhzLCB1aW50MTYgX2NodW5rTnIpCiAgICBzZXR1cE9ubHkKICAgIGFkbWluT25seQogICAgZXh0ZXJuYWwgewogICAgICAgIHZhciBsZW4gPSBhZGRycy5sZW5ndGg7CiAgICAgICAgcmVxdWlyZSAoIGNodW5rTnIrKyA9PSBfY2h1bmtOcik7CiAgICAgICAgcmVxdWlyZSAoIG1pbnMubGVuZ3RoID09IGxlbiAmJiAgbWlucy5sZW5ndGggPT0gbGVuICk7CiAgICAgICAgZm9yKHVpbnQxNiBpPTA7IGk8bGVuOyArK2kpIHsKICAgICAgICAgICAgdmFyIGFkZHIgPSBhZGRyc1tpXTsKICAgICAgICAgICAgdmFyIG1heCAgPSBtYXhzW2ldOwogICAgICAgICAgICB2YXIgbWluICA9IG1pbnNbaV07CiAgICAgICAgICAgIExpbWl0IGxpbSA9IGFsbG93ZWRbYWRkcl07CiAgICAgICAgICAgIC8vcmVtb3ZlIG9sZCByZWNvcmQgaWYgZXhpc3RzCiAgICAgICAgICAgIGlmIChsaW0ubWF4ID4gMCkgewogICAgICAgICAgICAgICAgY29udHJvbFN1bSAtPSB1aW50MTYwKGFkZHIpICsgbGltLm1pbiArIGxpbS5tYXg7CiAgICAgICAgICAgICAgICBkZWxldGUgYWxsb3dlZFthZGRyXTsKICAgICAgICAgICAgfQogICAgICAgICAgICAvL2luc2VydCByZWNvcmQgaWYgbWF4ID4gMAogICAgICAgICAgICBpZiAobWF4ID4gMCkgewogICAgICAgICAgICAgICAgLy8gbWF4ID4gMCBtZWFucyBhZGQgYSBuZXcgcmVjb3JkIGludG8gdGhlIGxpc3QuCiAgICAgICAgICAgICAgICBhbGxvd2VkW2FkZHJdID0gTGltaXQoe21pbjptaW4sIG1heDptYXh9KTsKICAgICAgICAgICAgICAgIGNvbnRyb2xTdW0gKz0gdWludDE2MChhZGRyKSArIG1pbiArIG1heDsKICAgICAgICAgICAgfQogICAgICAgIH0vL2ZvcgogICAgICAgIHJlY29yZE51bSs9bGVuOwogICAgfQoKICAgIC8vL0BkZXYgZGlzYWJsZSBzZXR1cCBtb2RlCiAgICBmdW5jdGlvbiBzdGFydCgpCiAgICBhZG1pbk9ubHkKICAgIHB1YmxpYyB7CiAgICAgICAgaXNTZXR1cE1vZGUgPSBmYWxzZTsKICAgIH0KCiAgICBtb2RpZmllciBzZXR1cE9ubHkgewogICAgICAgIGlmICggIWlzU2V0dXBNb2RlICkgdGhyb3c7CiAgICAgICAgXzsKICAgIH0KCiAgICBtb2RpZmllciBhZG1pbk9ubHkgewogICAgICAgIGlmIChtc2cuc2VuZGVyICE9IGFkbWluKSB0aHJvdzsKICAgICAgICBfOwogICAgfQoKICAgIC8vPT09IGZvciBiZXR0ZXIgZGVidWcgPT09PQogICAgZnVuY3Rpb24gcGluZygpCiAgICBhZG1pbk9ubHkKICAgIHB1YmxpYyB7CiAgICAgICAgbG9nKCJwb25nIik7CiAgICB9CiAgICBldmVudCBsb2coc3RyaW5nKTsKCn0='.
	

]
