Class {
	#name : #SRT162c91e864d37055f7d5696b845f3af520cd911d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT162c91e864d37055f7d5696b845f3af520cd911d >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTY7Ci8vIEl0IGlzIFNtYXJ0Y29udHJhY3QgZm9yIEJyaWNrdG94LCBmdWxseSBiYXNlZCBvbiB0aGUgZnVsbCBFUkMgMjAgVG9rZW4gc3RhbmRhcmQKLy8gTW9yZSBpbmZvcm1hdGlvbiBvbiBFUkMyMCBTdGFuZGFyZCA6IGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8yMCAKLy8gTW9yZSBpbmZvcm1hdGlvbiBhYm91dCBCcmlja3RveDogaHR0cHM6Ly9icmlja3RveC5jb20KLy8gVG9rZW4gU3ltYm9sOiBYQlQKLy8gVG9rZW4gVmVyaWZpY2F0aW9uIFN0YXR1czogRVJDMjAgVmVyaWZpZWQKCmNvbnRyYWN0IFhCVFRva2VuIHsgCiAgICAvKiBUaGlzIGlzIGEgc2xpZ2h0IGNoYW5nZSB0byB0aGUgRVJDMjAgYmFzZSBzdGFuZGFyZC4KICAgIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBzdXBwbHkpOwogICAgaXMgcmVwbGFjZWQgd2l0aDoKICAgIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5OwogICAgVGhpcyBhdXRvbWF0aWNhbGx5IGNyZWF0ZXMgYSBnZXR0ZXIgZnVuY3Rpb24gZm9yIHRoZSB0b3RhbFN1cHBseS4KICAgIFRoaXMgaXMgbW92ZWQgdG8gdGhlIGJhc2UgY29udHJhY3Qgc2luY2UgcHVibGljIGdldHRlciBmdW5jdGlvbnMgYXJlIG5vdAogICAgY3VycmVudGx5IHJlY29nbmlzZWQgYXMgYW4gaW1wbGVtZW50YXRpb24gb2YgdGhlIG1hdGNoaW5nIGFic3RyYWN0CiAgICBmdW5jdGlvbiBieSB0aGUgY29tcGlsZXIuCiAgICAqLwogICAgLy8vIHRvdGFsIGFtb3VudCBvZiB0b2tlbnMKICAgIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5OwogICAgCiAgICAvLy8gQHBhcmFtIF9vd25lciBUaGUgYWRkcmVzcyBmcm9tIHdoaWNoIHRoZSBiYWxhbmNlIHdpbGwgYmUgcmV0cmlldmVkCiAgICAvLy8gQHJldHVybiBUaGUgYmFsYW5jZQogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpOwoKICAgIC8vLyBAbm90aWNlIHNlbmQgYF92YWx1ZWAgdG9rZW4gdG8gYF90b2AgZnJvbSBgbXNnLnNlbmRlcmAKICAgIC8vLyBAcGFyYW0gX3RvIFRoZSBhZGRyZXNzIG9mIHRoZSByZWNpcGllbnQKICAgIC8vLyBAcGFyYW0gX3ZhbHVlIFRoZSBhbW91bnQgb2YgdG9rZW4gdG8gYmUgdHJhbnNmZXJyZWQKICAgIC8vLyBAcmV0dXJuIFdoZXRoZXIgdGhlIHRyYW5zZmVyIHdhcyBzdWNjZXNzZnVsIG9yIG5vdAogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwoKICAgIC8vLyBAbm90aWNlIHNlbmQgYF92YWx1ZWAgdG9rZW4gdG8gYF90b2AgZnJvbSBgX2Zyb21gIG9uIHRoZSBjb25kaXRpb24gaXQgaXMgYXBwcm92ZWQgYnkgYF9mcm9tYAogICAgLy8vIEBwYXJhbSBfZnJvbSBUaGUgYWRkcmVzcyBvZiB0aGUgc2VuZGVyCiAgICAvLy8gQHBhcmFtIF90byBUaGUgYWRkcmVzcyBvZiB0aGUgcmVjaXBpZW50CiAgICAvLy8gQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IG9mIHRva2VuIHRvIGJlIHRyYW5zZmVycmVkCiAgICAvLy8gQHJldHVybiBXaGV0aGVyIHRoZSB0cmFuc2ZlciB3YXMgc3VjY2Vzc2Z1bCBvciBub3QKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CgogICAgLy8vIEBub3RpY2UgYG1zZy5zZW5kZXJgIGFwcHJvdmVzIGBfYWRkcmAgdG8gc3BlbmQgYF92YWx1ZWAgdG9rZW5zCiAgICAvLy8gQHBhcmFtIF9zcGVuZGVyIFRoZSBhZGRyZXNzIG9mIHRoZSBhY2NvdW50IGFibGUgdG8gdHJhbnNmZXIgdGhlIHRva2VucwogICAgLy8vIEBwYXJhbSBfdmFsdWUgVGhlIGFtb3VudCBvZiB3ZWkgdG8gYmUgYXBwcm92ZWQgZm9yIHRyYW5zZmVyCiAgICAvLy8gQHJldHVybiBXaGV0aGVyIHRoZSBhcHByb3ZhbCB3YXMgc3VjY2Vzc2Z1bCBvciBub3QKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CgogICAgLy8vIEBwYXJhbSBfb3duZXIgVGhlIGFkZHJlc3Mgb2YgdGhlIGFjY291bnQgb3duaW5nIHRva2VucwogICAgLy8vIEBwYXJhbSBfc3BlbmRlciBUaGUgYWRkcmVzcyBvZiB0aGUgYWNjb3VudCBhYmxlIHRvIHRyYW5zZmVyIHRoZSB0b2tlbnMKICAgIC8vLyBAcmV0dXJuIEFtb3VudCBvZiByZW1haW5pbmcgdG9rZW5zIGFsbG93ZWQgdG8gc3BlbnQKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpOwoKICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7Cn0KCgovKioKICogWEJUVG9rZW4gTWF0aCBvcGVyYXRpb25zIHdpdGggc2FmZXR5IGNoZWNrcyB0byBhdm9pZCB1bm5lY2Vzc2FyeSBjb25mbGljdHMKICovCgpsaWJyYXJ5IFNhZmVNYXRocyB7Ci8vIFNhZnRleSBDaGVja3MgZm9yIE11bHRpcGxpY2F0aW9uIFRhc2tzCiAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhICogYjsKICAgIGFzc2VydChhID09IDAgfHwgYyAvIGEgPT0gYik7CiAgICByZXR1cm4gYzsKICB9Ci8vIFNhZnRleSBDaGVja3MgZm9yIERpdmlzb24gVGFza3MKICBmdW5jdGlvbiBkaXYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIGFzc2VydChiID4gMCk7CiAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOwogICAgcmV0dXJuIGM7CiAgfQovLyBTYWZ0ZXkgQ2hlY2tzIGZvciBTdWJ0cmFjdGlvbiBUYXNrcwogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQovLyBTYWZ0ZXkgQ2hlY2tzIGZvciBBZGRpdGlvbiBUYXNrcwogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYz49YSAmJiBjPj1iKTsKICAgIHJldHVybiBjOwogIH0KfQoKY29udHJhY3QgT3duYWJsZSB7CiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKICAgIGFkZHJlc3MgcHVibGljIG5ld093bmVyOwoKICAgIC8qKiAKICAgICAqIEBkZXYgVGhlIE93bmFibGUgY29uc3RydWN0b3Igc2V0cyB0aGUgb3JpZ2luYWwgYG93bmVyYCBvZiB0aGUgY29udHJhY3QgdG8gdGhlIHNlbmRlcgogICAgICogYWNjb3VudC4KICAgICAqLwogICAgZnVuY3Rpb24gT3duYWJsZSgpIHsKICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgICB9CgogICAgbW9kaWZpZXIgb25seU93bmVyKCkgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyKTsKICAgIF87CiAgfQoKICAgLy8gdmFsaWRhdGVzIGFuIGFkZHJlc3MgLSBjdXJyZW50bHkgb25seSBjaGVja3MgdGhhdCBpdCBpc24ndCBudWxsCiAgICBtb2RpZmllciB2YWxpZEFkZHJlc3MoYWRkcmVzcyBfYWRkcmVzcykgewogICAgICAgIHJlcXVpcmUoX2FkZHJlc3MgIT0gMHgwKTsKICAgICAgICBfOwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgX25ld093bmVyKSBvbmx5T3duZXIgewogICAgICAgIGlmIChfbmV3T3duZXIgIT0gYWRkcmVzcygwKSkgewogICAgICAgICAgICBvd25lciA9IF9uZXdPd25lcjsKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gYWNjZXB0T3duZXJzaGlwKCkgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBuZXdPd25lcik7CiAgICAgICAgT3duZXJzaGlwVHJhbnNmZXJyZWQob3duZXIsIG5ld093bmVyKTsKICAgICAgICBvd25lciA9IG5ld093bmVyOwogICAgfQogICAgZXZlbnQgT3duZXJzaGlwVHJhbnNmZXJyZWQoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvKTsKfQoKCmNvbnRyYWN0IFN0YW5kYXJkVG9rZW4gaXMgWEJUVG9rZW4sIE93bmFibGUgewogICAgCiAgICB1c2luZyBTYWZlTWF0aHMgZm9yIHVpbnQyNTY7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIGJhbGFuY2VzOwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBhbGxvd2VkOwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBib29sKSBwdWJsaWMgZnJvemVuQWNjb3VudDsKCiAgICBldmVudCBGcm96ZW5GdW5kcyhhZGRyZXNzIHRhcmdldCwgYm9vbCBmcm96ZW4pOwogICAgIAogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpIHsKICAgICAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsKICAgIH0KCiAgICBmdW5jdGlvbiBmcmVlemVBY2NvdW50KGFkZHJlc3MgdGFyZ2V0LCBib29sIGZyZWV6ZSkgb25seU93bmVyIHsKICAgICAgICBmcm96ZW5BY2NvdW50W3RhcmdldF0gPSBmcmVlemU7CiAgICAgICAgRnJvemVuRnVuZHModGFyZ2V0LCBmcmVlemUpOwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgaWYgKGZyb3plbkFjY291bnRbbXNnLnNlbmRlcl0pIHJldHVybiBmYWxzZTsKICAgICAgICByZXF1aXJlKAogICAgICAgICAgICAoYmFsYW5jZXNbbXNnLnNlbmRlcl0gPj0gX3ZhbHVlKSAvLyBDaGVjayBpZiB0aGUgc2VuZGVyIGhhcyBlbm91Z2gKICAgICAgICAgICAgJiYgKF92YWx1ZSA+IDApIC8vIERvbid0IGFsbG93IDB2YWx1ZSB0cmFuc2ZlcgogICAgICAgICAgICAmJiAoX3RvICE9IGFkZHJlc3MoMCkpIC8vIFByZXZlbnQgdHJhbnNmZXIgdG8gMHgwIGFkZHJlc3MKICAgICAgICAgICAgJiYgKGJhbGFuY2VzW190b10uYWRkKF92YWx1ZSkgPj0gYmFsYW5jZXNbX3RvXSkgLy8gQ2hlY2sgZm9yIG92ZXJmbG93cwogICAgICAgICAgICAmJiAobXNnLmRhdGEubGVuZ3RoID49ICgyICogMzIpICsgNCkpOyAvL21pdGlnYXRlcyB0aGUgRVJDMjAgc2hvcnQgYWRkcmVzcyBhdHRhY2sKICAgICAgICAgICAgLy9tb3N0IG9mIHRoZXNlIHRoaW5ncyBhcmUgbm90IG5lY2VzYXJ5CgogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gYmFsYW5jZXNbbXNnLnNlbmRlcl0uc3ViKF92YWx1ZSk7CiAgICAgICAgYmFsYW5jZXNbX3RvXSA9IGJhbGFuY2VzW190b10uYWRkKF92YWx1ZSk7CiAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGlmIChmcm96ZW5BY2NvdW50W21zZy5zZW5kZXJdKSByZXR1cm4gZmFsc2U7CiAgICAgICAgcmVxdWlyZSgKICAgICAgICAgICAgKGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID49IF92YWx1ZSkgLy8gQ2hlY2sgYWxsb3dhbmNlCiAgICAgICAgICAgICYmIChiYWxhbmNlc1tfZnJvbV0gPj0gX3ZhbHVlKSAvLyBDaGVjayBpZiB0aGUgc2VuZGVyIGhhcyBlbm91Z2gKICAgICAgICAgICAgJiYgKF92YWx1ZSA+IDApIC8vIERvbid0IGFsbG93IDB2YWx1ZSB0cmFuc2ZlcgogICAgICAgICAgICAmJiAoX3RvICE9IGFkZHJlc3MoMCkpIC8vIFByZXZlbnQgdHJhbnNmZXIgdG8gMHgwIGFkZHJlc3MKICAgICAgICAgICAgJiYgKGJhbGFuY2VzW190b10uYWRkKF92YWx1ZSkgPj0gYmFsYW5jZXNbX3RvXSkgLy8gQ2hlY2sgZm9yIG92ZXJmbG93cwogICAgICAgICAgICAmJiAobXNnLmRhdGEubGVuZ3RoID49ICgyICogMzIpICsgNCkgLy9taXRpZ2F0ZXMgdGhlIEVSQzIwIHNob3J0IGFkZHJlc3MgYXR0YWNrCiAgICAgICAgICAgIC8vbW9zdCBvZiB0aGVzZSB0aGluZ3MgYXJlIG5vdCBuZWNlc2FyeQogICAgICAgICk7CiAgICAgICAgYmFsYW5jZXNbX2Zyb21dID0gYmFsYW5jZXNbX2Zyb21dLnN1YihfdmFsdWUpOwogICAgICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfdmFsdWUpOwogICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID0gYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0uc3ViKF92YWx1ZSk7CiAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICAvKiBUbyBjaGFuZ2UgdGhlIGFwcHJvdmUgYW1vdW50IHlvdSBmaXJzdCBoYXZlIHRvIHJlZHVjZSB0aGUgYWRkcmVzc2VzYAogICAgICAgICAqIGFsbG93YW5jZSB0byB6ZXJvIGJ5IGNhbGxpbmcgYGFwcHJvdmUoX3NwZW5kZXIsIDApYCBpZiBpdCBpcyBub3QKICAgICAgICAgKiBhbHJlYWR5IDAgdG8gbWl0aWdhdGUgdGhlIHJhY2UgY29uZGl0aW9uIGRlc2NyaWJlZCBoZXJlOgogICAgICAgICAqIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8yMCNpc3N1ZWNvbW1lbnQtMjYzNTI0NzI5ICovCiAgICAgICAgCiAgICAgICAgcmVxdWlyZSgoX3ZhbHVlID09IDApIHx8IChhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9PSAwKSk7CiAgICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CgogICAgICAgIC8vIE5vdGlmeSBhbnlvbmUgbGlzdGVuaW5nIHRoYXQgdGhpcyBhcHByb3ZhbCBkb25lCiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpIHsKICAgICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07CiAgICB9CiAgCn0KY29udHJhY3QgQnJpY2t0b3ggaXMgU3RhbmRhcmRUb2tlbiB7CgogICAgLyogUHVibGljIHZhcmlhYmxlcyBvZiB0aGUgdG9rZW4gKi8KICAgIC8qCiAgICBOT1RFOgogICAgVGhlIGZvbGxvd2luZyB2YXJpYWJsZXMgYXJlIE9QVElPTkFMIHZhbml0aWVzLiBPbmUgZG9lcyBub3QgaGF2ZSB0byBpbmNsdWRlIHRoZW0uCiAgICBUaGV5IGFsbG93IG9uZSB0byBjdXN0b21pc2UgdGhlIHRva2VuIGNvbnRyYWN0ICYgaW4gbm8gd2F5IGluZmx1ZW5jZXMgdGhlIGNvcmUgZnVuY3Rpb25hbGl0eS4KICAgIFNvbWUgd2FsbGV0cy9pbnRlcmZhY2VzIG1pZ2h0IG5vdCBldmVuIGJvdGhlciB0byBsb29rIGF0IHRoaXMgaW5mb3JtYXRpb24uCiAgICAqLwogICAgCiAgICB1aW50MjU2IGNvbnN0YW50IHB1YmxpYyBkZWNpbWFscyA9IDg7IC8vIEl0IGNvbnNpc3RzIG9mIDggZGVjaW1hbAogICAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHkgPSA1NiAqICgxMCoqNikgKiAxMCoqOCA7IC8vIDU2IG1pbGxpb24gdG9rZW5zIGlzIHRvdGFsIG1heCBhdmFpbGFibGUgc3VwcGx5CiAgICBzdHJpbmcgY29uc3RhbnQgcHVibGljIG5hbWUgPSAiQnJpY2t0b3giOyAvLyBUaGUgZmluYWxpc2VkIG5hbWUgaXMgQnJpY2t0b3gKICAgIHN0cmluZyBjb25zdGFudCBwdWJsaWMgc3ltYm9sID0gIlhCVCI7IC8vIFRva2VuIFN5bWJvbCBpcyBYQlQKICAgIHN0cmluZyBjb25zdGFudCBwdWJsaWMgdmVyc2lvbiA9ICJWMSI7IC8vIFRoZSByZWxlYXNlIHZlcnNpb24gaXMgVjEuIEl0IGlzIGp1c3QgYW4gYXJiaXRyYXJ5IHZlcnNpb25pbmcgc2NoZW1lLgogICAgCiAgICBmdW5jdGlvbiBCcmlja3RveCgpewogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gdG90YWxTdXBwbHk7ICAgICAgICAgICAgICAgLy8gR2l2ZSB0aGUgY3JlYXRvciBhbGwgaW5pdGlhbCB0b2tlbnMKICAgIH0KCiAgICAvKiBBcHByb3ZlcyBhbmQgdGhlbiBjYWxscyB0aGUgcmVjZWl2aW5nIGNvbnRyYWN0ICovCiAgICBmdW5jdGlvbiBhcHByb3ZlQW5kQ2FsbChhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSwgYnl0ZXMgX2V4dHJhRGF0YSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CgogICAgICAgIC8vY2FsbCB0aGUgcmVjZWl2ZUFwcHJvdmFsIGZ1bmN0aW9uIG9uIHRoZSBjb250cmFjdCB5b3Ugd2FudCB0byBiZSBub3RpZmllZC4gVGhpcyBjcmFmdHMgdGhlIGZ1bmN0aW9uIHNpZ25hdHVyZSBtYW51YWxseSBzbyBvbmUgZG9lc24ndCBoYXZlIHRvIGluY2x1ZGUgYSBjb250cmFjdCBpbiBoZXJlIGp1c3QgZm9yIHRoaXMuCiAgICAgICAgLy9yZWNlaXZlQXBwcm92YWwoYWRkcmVzcyBfZnJvbSwgdWludDI1NiBfdmFsdWUsIGFkZHJlc3MgX3Rva2VuQ29udHJhY3QsIGJ5dGVzIF9leHRyYURhdGEpCiAgICAgICAgLy9pdCBpcyBhc3N1bWVkIHRoYXQgd2hlbiBkb2VzIHRoaXMgdGhhdCB0aGUgY2FsbCAqc2hvdWxkKiBzdWNjZWVkLCBvdGhlcndpc2Ugb25lIHdvdWxkIHVzZSB2YW5pbGxhIGFwcHJvdmUgaW5zdGVhZC4KICAgICAgICByZXF1aXJlKF9zcGVuZGVyLmNhbGwoYnl0ZXM0KGJ5dGVzMzIoc2hhMygicmVjZWl2ZUFwcHJvdmFsKGFkZHJlc3MsdWludDI1NixhZGRyZXNzLGJ5dGVzKSIpKSksIG1zZy5zZW5kZXIsIF92YWx1ZSwgdGhpcywgX2V4dHJhRGF0YSkpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQp9'.
	

]
