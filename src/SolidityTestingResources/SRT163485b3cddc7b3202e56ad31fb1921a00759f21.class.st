Class {
	#name : #SRT163485b3cddc7b3202e56ad31fb1921a00759f21,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT163485b3cddc7b3202e56ad31fb1921a00759f21 >> base64 [
	^ 'LyoKTUlUIExpY2Vuc2UKCkNvcHlyaWdodCAoYykgMjAxOCBOZ3V5ZW4gVnUgTmhhdCBNaW5oCgpQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5Cm9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlICJTb2Z0d2FyZSIpLCB0byBkZWFsCmluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMKdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbApjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMKZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczoKClRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluIGFsbApjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLgoKVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1IKSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksCkZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRQpBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSCkxJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sCk9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFClNPRlRXQVJFLgoqLwoKcHJhZ21hIHNvbGlkaXR5IF4wLjQuMjA7Cgpjb250cmFjdCBFdGhlckNoYXQgewogICAgZXZlbnQgbWVzc2FnZVNlbnRFdmVudChhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCBieXRlcyBtZXNzYWdlLCBieXRlczMyIGVuY3J5cHRpb24pOwogICAgZXZlbnQgYWRkQ29udGFjdEV2ZW50KGFkZHJlc3MgaW5kZXhlZCBmcm9tLCBhZGRyZXNzIGluZGV4ZWQgdG8pOwogICAgZXZlbnQgYWNjZXB0Q29udGFjdEV2ZW50KGFkZHJlc3MgaW5kZXhlZCBmcm9tLCBhZGRyZXNzIGluZGV4ZWQgdG8pOwogICAgZXZlbnQgcHJvZmlsZVVwZGF0ZUV2ZW50KGFkZHJlc3MgaW5kZXhlZCBmcm9tLCBieXRlczMyIG5hbWUsIGJ5dGVzMzIgYXZhdGFyVXJsKTsKICAgIGV2ZW50IGJsb2NrQ29udGFjdEV2ZW50KGFkZHJlc3MgaW5kZXhlZCBmcm9tLCBhZGRyZXNzIGluZGV4ZWQgdG8pOwogICAgZXZlbnQgdW5ibG9ja0NvbnRhY3RFdmVudChhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvKTsKICAgIAogICAgZW51bSBSZWxhdGlvbnNoaXBUeXBlIHtOb1JlbGF0aW9uLCBSZXF1ZXN0ZWQsIENvbm5lY3RlZCwgQmxvY2tlZH0KICAgIAogICAgc3RydWN0IE1lbWJlciB7CiAgICAgICAgYnl0ZXMzMiBwdWJsaWNLZXlMZWZ0OwogICAgICAgIGJ5dGVzMzIgcHVibGljS2V5UmlnaHQ7CiAgICAgICAgYnl0ZXMzMiBuYW1lOwogICAgICAgIGJ5dGVzMzIgYXZhdGFyVXJsOwogICAgICAgIHVpbnQgbWVzc2FnZVN0YXJ0QmxvY2s7CiAgICAgICAgYm9vbCBpc01lbWJlcjsKICAgIH0KICAgIAogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IFJlbGF0aW9uc2hpcFR5cGUpKSByZWxhdGlvbnNoaXBzOwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBNZW1iZXIpIHB1YmxpYyBtZW1iZXJzOwogICAgCiAgICBmdW5jdGlvbiBhZGRDb250YWN0KGFkZHJlc3MgYWRkcikgcHVibGljIG9ubHlNZW1iZXIgewogICAgICAgIHJlcXVpcmUocmVsYXRpb25zaGlwc1ttc2cuc2VuZGVyXVthZGRyXSA9PSBSZWxhdGlvbnNoaXBUeXBlLk5vUmVsYXRpb24pOwogICAgICAgIHJlcXVpcmUocmVsYXRpb25zaGlwc1thZGRyXVttc2cuc2VuZGVyXSA9PSBSZWxhdGlvbnNoaXBUeXBlLk5vUmVsYXRpb24pOwogICAgICAgIAogICAgICAgIHJlbGF0aW9uc2hpcHNbbXNnLnNlbmRlcl1bYWRkcl0gPSBSZWxhdGlvbnNoaXBUeXBlLlJlcXVlc3RlZDsKICAgICAgICBlbWl0IGFkZENvbnRhY3RFdmVudChtc2cuc2VuZGVyLCBhZGRyKTsKICAgIH0KCiAgICBmdW5jdGlvbiBhY2NlcHRDb250YWN0UmVxdWVzdChhZGRyZXNzIGFkZHIpIHB1YmxpYyBvbmx5TWVtYmVyIHsKICAgICAgICByZXF1aXJlKHJlbGF0aW9uc2hpcHNbYWRkcl1bbXNnLnNlbmRlcl0gPT0gUmVsYXRpb25zaGlwVHlwZS5SZXF1ZXN0ZWQpOwogICAgICAgIAogICAgICAgIHJlbGF0aW9uc2hpcHNbbXNnLnNlbmRlcl1bYWRkcl0gPSBSZWxhdGlvbnNoaXBUeXBlLkNvbm5lY3RlZDsKICAgICAgICByZWxhdGlvbnNoaXBzW2FkZHJdW21zZy5zZW5kZXJdID0gUmVsYXRpb25zaGlwVHlwZS5Db25uZWN0ZWQ7CgogICAgICAgIGVtaXQgYWNjZXB0Q29udGFjdEV2ZW50KG1zZy5zZW5kZXIsIGFkZHIpOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBqb2luKGJ5dGVzMzIgcHVibGljS2V5TGVmdCwgYnl0ZXMzMiBwdWJsaWNLZXlSaWdodCkgcHVibGljIHsKICAgICAgICByZXF1aXJlKG1lbWJlcnNbbXNnLnNlbmRlcl0uaXNNZW1iZXIgPT0gZmFsc2UpOwogICAgICAgIAogICAgICAgIE1lbWJlciBtZW1vcnkgbmV3TWVtYmVyID0gTWVtYmVyKHB1YmxpY0tleUxlZnQsIHB1YmxpY0tleVJpZ2h0LCAiIiwgIiIsIDAsIHRydWUpOwogICAgICAgIG1lbWJlcnNbbXNnLnNlbmRlcl0gPSBuZXdNZW1iZXI7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIHNlbmRNZXNzYWdlKGFkZHJlc3MgdG8sIGJ5dGVzIG1lc3NhZ2UsIGJ5dGVzMzIgZW5jcnlwdGlvbikgcHVibGljIG9ubHlNZW1iZXIgewogICAgICAgIHJlcXVpcmUocmVsYXRpb25zaGlwc1t0b11bbXNnLnNlbmRlcl0gPT0gUmVsYXRpb25zaGlwVHlwZS5Db25uZWN0ZWQpOwoKICAgICAgICBpZiAobWVtYmVyc1t0b10ubWVzc2FnZVN0YXJ0QmxvY2sgPT0gMCkgewogICAgICAgICAgICBtZW1iZXJzW3RvXS5tZXNzYWdlU3RhcnRCbG9jayA9IGJsb2NrLm51bWJlcjsKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgZW1pdCBtZXNzYWdlU2VudEV2ZW50KG1zZy5zZW5kZXIsIHRvLCBtZXNzYWdlLCBlbmNyeXB0aW9uKTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gYmxvY2tNZXNzYWdlc0Zyb20oYWRkcmVzcyBmcm9tKSBwdWJsaWMgb25seU1lbWJlciB7CiAgICAgICAgcmVxdWlyZShyZWxhdGlvbnNoaXBzW21zZy5zZW5kZXJdW2Zyb21dID09IFJlbGF0aW9uc2hpcFR5cGUuQ29ubmVjdGVkKTsKCiAgICAgICAgcmVsYXRpb25zaGlwc1ttc2cuc2VuZGVyXVtmcm9tXSA9IFJlbGF0aW9uc2hpcFR5cGUuQmxvY2tlZDsKICAgICAgICBlbWl0IGJsb2NrQ29udGFjdEV2ZW50KG1zZy5zZW5kZXIsIGZyb20pOwogICAgfQogICAgCiAgICBmdW5jdGlvbiB1bmJsb2NrTWVzc2FnZXNGcm9tKGFkZHJlc3MgZnJvbSkgcHVibGljIG9ubHlNZW1iZXIgewogICAgICAgIHJlcXVpcmUocmVsYXRpb25zaGlwc1ttc2cuc2VuZGVyXVtmcm9tXSA9PSBSZWxhdGlvbnNoaXBUeXBlLkJsb2NrZWQpOwoKICAgICAgICByZWxhdGlvbnNoaXBzW21zZy5zZW5kZXJdW2Zyb21dID0gUmVsYXRpb25zaGlwVHlwZS5Db25uZWN0ZWQ7CiAgICAgICAgZW1pdCB1bmJsb2NrQ29udGFjdEV2ZW50KG1zZy5zZW5kZXIsIGZyb20pOwogICAgfQogICAgCiAgICBmdW5jdGlvbiB1cGRhdGVQcm9maWxlKGJ5dGVzMzIgbmFtZSwgYnl0ZXMzMiBhdmF0YXJVcmwpIHB1YmxpYyBvbmx5TWVtYmVyIHsKICAgICAgICBtZW1iZXJzW21zZy5zZW5kZXJdLm5hbWUgPSBuYW1lOwogICAgICAgIG1lbWJlcnNbbXNnLnNlbmRlcl0uYXZhdGFyVXJsID0gYXZhdGFyVXJsOwogICAgICAgIGVtaXQgcHJvZmlsZVVwZGF0ZUV2ZW50KG1zZy5zZW5kZXIsIG5hbWUsIGF2YXRhclVybCk7CiAgICB9CiAgICAKICAgIG1vZGlmaWVyIG9ubHlNZW1iZXIoKSB7CiAgICAgICAgcmVxdWlyZShtZW1iZXJzW21zZy5zZW5kZXJdLmlzTWVtYmVyID09IHRydWUpOwogICAgICAgIF87CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGdldFJlbGF0aW9uV2l0aChhZGRyZXNzIGEpIHB1YmxpYyB2aWV3IG9ubHlNZW1iZXIgcmV0dXJucyAoUmVsYXRpb25zaGlwVHlwZSkgewogICAgICAgIHJldHVybiByZWxhdGlvbnNoaXBzW21zZy5zZW5kZXJdW2FdOwogICAgfQp9'.
	

]
