Class {
	#name : #SRTfbadbf0a1296d2da94e59d76107c61581d393196,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTfbadbf0a1296d2da94e59d76107c61581d393196 >> base64 [
	^ ''.
	

]
