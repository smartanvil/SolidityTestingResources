Class {
	#name : #SRTb5a5f22694352c15b00323844ad545abb2b11028,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTb5a5f22694352c15b00323844ad545abb2b11028 >> base64 [
	^ ''.
	

]
