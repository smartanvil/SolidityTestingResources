Class {
	#name : #SRT7a2301086478efc25a51a8f2c7490d6a2dca3fb2,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT7a2301086478efc25a51a8f2c7490d6a2dca3fb2 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTU7CgovKioKICogQHRpdGxlIE93bmFibGUKICogQGRldiBUaGUgT3duYWJsZSBjb250cmFjdCBoYXMgYW4gb3duZXIgYWRkcmVzcywgYW5kIHByb3ZpZGVzIGJhc2ljIGF1dGhvcml6YXRpb24gY29udHJvbAogKiBmdW5jdGlvbnMsIHRoaXMgc2ltcGxpZmllcyB0aGUgaW1wbGVtZW50YXRpb24gb2YgInVzZXIgcGVybWlzc2lvbnMiLgogKi8KY29udHJhY3QgT3duYWJsZSB7CiAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CgoKICBldmVudCBPd25lcnNoaXBUcmFuc2ZlcnJlZChhZGRyZXNzIGluZGV4ZWQgcHJldmlvdXNPd25lciwgYWRkcmVzcyBpbmRleGVkIG5ld093bmVyKTsKCgogIC8qKgogICAqIEBkZXYgVGhlIE93bmFibGUgY29uc3RydWN0b3Igc2V0cyB0aGUgb3JpZ2luYWwgYG93bmVyYCBvZiB0aGUgY29udHJhY3QgdG8gdGhlIHNlbmRlcgogICAqIGFjY291bnQuCiAgICovCiAgZnVuY3Rpb24gT3duYWJsZSgpIHsKICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICB9CgogIC8qKgogICAqIEBkZXYgVGhyb3dzIGlmIGNhbGxlZCBieSBhbnkgYWNjb3VudCBvdGhlciB0aGFuIHRoZSBvd25lci4KICAgKi8KICBtb2RpZmllciBvbmx5T3duZXIoKSB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgXzsKICB9CgoKICAvKioKICAgKiBAZGV2IEFsbG93cyB0aGUgY3VycmVudCBvd25lciB0byB0cmFuc2ZlciBjb250cm9sIG9mIHRoZSBjb250cmFjdCB0byBhIG5ld093bmVyLgogICAqIEBwYXJhbSBuZXdPd25lciBUaGUgYWRkcmVzcyB0byB0cmFuc2ZlciBvd25lcnNoaXAgdG8uCiAgICovCiAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBuZXdPd25lcikgb25seU93bmVyIHB1YmxpYyB7CiAgICByZXF1aXJlKG5ld093bmVyICE9IGFkZHJlc3MoMCkpOwogICAgT3duZXJzaGlwVHJhbnNmZXJyZWQob3duZXIsIG5ld093bmVyKTsKICAgIG93bmVyID0gbmV3T3duZXI7CiAgfQoKfQoKLyoqCiAqIEB0aXRsZSBTdG9wcGFibGUKICogQGRldiBCYXNlIGNvbnRyYWN0IHdoaWNoIGFsbG93cyBjaGlsZHJlbiB0byBpbXBsZW1lbnQgYSBwZXJtYW5lbnQgc3RvcCBtZWNoYW5pc20uCiAqLwpjb250cmFjdCBTdG9wcGFibGUgaXMgT3duYWJsZSB7CiAgZXZlbnQgU3RvcCgpOyAgCgogIGJvb2wgcHVibGljIHN0b3BwZWQgPSBmYWxzZTsKCiAgLyoqCiAgICogQGRldiBNb2RpZmllciB0byBtYWtlIGEgZnVuY3Rpb24gY2FsbGFibGUgb25seSB3aGVuIHRoZSBjb250cmFjdCBpcyBub3Qgc3RvcHBlZC4KICAgKi8KICBtb2RpZmllciB3aGVuTm90U3RvcHBlZCgpIHsKICAgIHJlcXVpcmUoIXN0b3BwZWQpOwogICAgXzsKICB9CgogIC8qKgogICAqIEBkZXYgTW9kaWZpZXIgdG8gbWFrZSBhIGZ1bmN0aW9uIGNhbGxhYmxlIG9ubHkgd2hlbiB0aGUgY29udHJhY3QgaXMgc3RvcHBlZC4KICAgKi8KICBtb2RpZmllciB3aGVuU3RvcHBlZCgpIHsKICAgIHJlcXVpcmUoc3RvcHBlZCk7CiAgICBfOwogIH0KCiAgLyoqCiAgICogQGRldiBjYWxsZWQgYnkgdGhlIG93bmVyIHRvIHBhdXNlLCB0cmlnZ2VycyBzdG9wcGVkIHN0YXRlCiAgICovCiAgZnVuY3Rpb24gc3RvcCgpIG9ubHlPd25lciB3aGVuTm90U3RvcHBlZCBwdWJsaWMgewogICAgc3RvcHBlZCA9IHRydWU7CiAgICBTdG9wKCk7CiAgfQp9Cgpjb250cmFjdCBTcGFjZVJlZ2lzdHJ5IGlzIFN0b3BwYWJsZSB7CiAgICAKICAgIGV2ZW50IEFkZCgpOwogICAgdWludCBjb25zdGFudCBTVEFSVF9JTkRFWCA9IDE7CiAgICBTcGFjZVtdIHNwYWNlczsKICAgIG1hcHBpbmcodWludCA9PiB1aW50KSBzcGFjZU1hcDsKICAgIG1hcHBpbmcodWludCA9PiB1aW50W10pIHVzZXJTcGFjZUxvb2t1cDsKICAgIAogICAgc3RydWN0IFNwYWNlIHsKICAgICAgICB1aW50IGlkOwogICAgICAgIHVpbnQgdXNlcklkOwogICAgICAgIGJ5dGVzIHVzZXJIYXNoOwogICAgICAgIHVpbnQgYm90dG9tTGVmdDsKICAgICAgICB1aW50IHRvcExlZnQ7CiAgICAgICAgdWludCB0b3BSaWdodDsKICAgICAgICB1aW50IGJvdHRvbVJpZ2h0OwogICAgICAgIHN0cmluZyB0eFR5cGU7CiAgICAgICAgc3RyaW5nIHR4SWQ7CiAgICAgICAgdWludCB0eFRpbWU7CiAgICAgICAgdWludCBjcmVhdGVkOwogICAgfQoKICAgIGZ1bmN0aW9uIFNwYWNlUmVnaXN0cnkoKSB7CiAgICAgICAgc3BhY2VzLmxlbmd0aCA9IFNUQVJUX0lOREVYOwogICAgfQoKICAgIGZ1bmN0aW9uIGFkZFNwYWNlKAogICAgICAgIHVpbnQgaWQsIHVpbnQgdXNlcklkLCBieXRlcyB1c2VySGFzaCwgdWludCBib3R0b21MZWZ0LCB1aW50IHRvcExlZnQsIAogICAgICAgIHVpbnQgdG9wUmlnaHQsIHVpbnQgYm90dG9tUmlnaHQsIHN0cmluZyB0eFR5cGUsIHN0cmluZyB0eElkLCB1aW50IHR4VGltZSkgCiAgICAgICAgb25seU93bmVyIHdoZW5Ob3RTdG9wcGVkIHsKCiAgICAgICAgcmVxdWlyZShpZCA+IDApOwogICAgICAgIHJlcXVpcmUoc3BhY2VNYXBbaWRdID09IDApOwogICAgICAgIHJlcXVpcmUodXNlcklkID4gMCk7CiAgICAgICAgcmVxdWlyZSh1c2VySGFzaC5sZW5ndGggPiAwKTsKICAgICAgICByZXF1aXJlKGJvdHRvbUxlZnQgPiAwKTsKICAgICAgICByZXF1aXJlKHRvcExlZnQgPiAwKTsKICAgICAgICByZXF1aXJlKHRvcFJpZ2h0ID4gMCk7CiAgICAgICAgcmVxdWlyZShib3R0b21SaWdodCA+IDApOwogICAgICAgIHJlcXVpcmUoYnl0ZXModHhUeXBlKS5sZW5ndGggPiAwKTsKICAgICAgICByZXF1aXJlKGJ5dGVzKHR4SWQpLmxlbmd0aCA+IDApOwogICAgICAgIHJlcXVpcmUodHhUaW1lID4gMCk7CiAgICAgICAgCiAgICAgICAgdmFyIHNwYWNlID0gU3BhY2UoewogICAgICAgICAgICBpZDogaWQsCiAgICAgICAgICAgIHVzZXJJZDogdXNlcklkLAogICAgICAgICAgICB1c2VySGFzaDogdXNlckhhc2gsCiAgICAgICAgICAgIGJvdHRvbUxlZnQ6IGJvdHRvbUxlZnQsCiAgICAgICAgICAgIHRvcExlZnQ6IHRvcExlZnQsCiAgICAgICAgICAgIHRvcFJpZ2h0OiB0b3BSaWdodCwKICAgICAgICAgICAgYm90dG9tUmlnaHQ6IGJvdHRvbVJpZ2h0LAogICAgICAgICAgICB0eFR5cGU6IHR4VHlwZSwKICAgICAgICAgICAgdHhJZDogdHhJZCwKICAgICAgICAgICAgdHhUaW1lOiB0eFRpbWUsCiAgICAgICAgICAgIGNyZWF0ZWQ6IGJsb2NrLnRpbWVzdGFtcAogICAgICAgIH0pOwoKICAgICAgICB2YXIgX2luZGV4ID0gc3BhY2VzLnB1c2goc3BhY2UpIC0gMTsKICAgICAgICBhc3NlcnQoX2luZGV4ID49IFNUQVJUX0lOREVYKTsKICAgICAgICBzcGFjZU1hcFtpZF0gPSBfaW5kZXg7CiAgICAgICAgdXNlclNwYWNlTG9va3VwW3VzZXJJZF0ucHVzaChpZCk7CiAgICAgICAgQWRkKCk7CiAgICB9CgogICAgZnVuY3Rpb24gZ2V0U3BhY2VCeUluZGV4KHVpbnQgaW5kZXgpIGV4dGVybmFsIGNvbnN0YW50IHJldHVybnMoCiAgICAgICAgdWludCBpZCwKICAgICAgICB1aW50IHVzZXJJZCwKICAgICAgICBieXRlcyB1c2VySGFzaCwKICAgICAgICB1aW50IGJvdHRvbUxlZnQsCiAgICAgICAgdWludCB0b3BMZWZ0LAogICAgICAgIHVpbnQgdG9wUmlnaHQsIAogICAgICAgIHVpbnQgYm90dG9tUmlnaHQsCiAgICAgICAgc3RyaW5nIHR4VHlwZSwKICAgICAgICBzdHJpbmcgdHhJZCwgCiAgICAgICAgdWludCB0eFRpbWUsCiAgICAgICAgdWludCBjcmVhdGVkKSB7CgogICAgICAgIHZhciBfaW5kZXggPSBpbmRleCArIFNUQVJUX0lOREVYOwogICAgICAgIHJlcXVpcmUoc3BhY2VzLmxlbmd0aCA+IF9pbmRleCk7CiAgICAgICAgdmFyIHNwYWNlID0gc3BhY2VzW19pbmRleF07CiAgICAgICAgaWQgPSBzcGFjZS5pZDsKICAgICAgICB1c2VySWQgPSBzcGFjZS51c2VySWQ7CiAgICAgICAgdXNlckhhc2ggPSBzcGFjZS51c2VySGFzaDsKICAgICAgICBib3R0b21MZWZ0ID0gc3BhY2UuYm90dG9tTGVmdDsKICAgICAgICB0b3BMZWZ0ID0gc3BhY2UudG9wTGVmdDsKICAgICAgICB0b3BSaWdodCA9IHNwYWNlLnRvcFJpZ2h0OwogICAgICAgIGJvdHRvbVJpZ2h0ID0gc3BhY2UuYm90dG9tUmlnaHQ7CiAgICAgICAgdHhUeXBlID0gc3BhY2UudHhUeXBlOwogICAgICAgIHR4SWQgPSBzcGFjZS50eElkOwogICAgICAgIHR4VGltZSA9IHNwYWNlLnR4VGltZTsKICAgICAgICBjcmVhdGVkID0gc3BhY2UuY3JlYXRlZDsKICAgIH0gICAgCgogICAgZnVuY3Rpb24gZ2V0U3BhY2VCeUlkKHVpbnQgX2lkKSBleHRlcm5hbCBjb25zdGFudCByZXR1cm5zKAogICAgICAgIHVpbnQgaWQsCiAgICAgICAgdWludCB1c2VySWQsCiAgICAgICAgYnl0ZXMgdXNlckhhc2gsCiAgICAgICAgdWludCBib3R0b21MZWZ0LAogICAgICAgIHVpbnQgdG9wTGVmdCwKICAgICAgICB1aW50IHRvcFJpZ2h0LCAKICAgICAgICB1aW50IGJvdHRvbVJpZ2h0LAogICAgICAgIHN0cmluZyB0eFR5cGUsCiAgICAgICAgc3RyaW5nIHR4SWQsCiAgICAgICAgdWludCB0eFRpbWUsCiAgICAgICAgdWludCBjcmVhdGVkKSB7CgogICAgICAgIHJlcXVpcmUoX2lkID4gMCk7CiAgICAgICAgaWQgPSBfaWQ7CiAgICAgICAgdmFyIGluZGV4ID0gc3BhY2VNYXBbaWRdOwogICAgICAgIHZhciBzcGFjZSA9IHNwYWNlc1tpbmRleF07CiAgICAgICAgdXNlcklkID0gc3BhY2UudXNlcklkOwogICAgICAgIHVzZXJIYXNoID0gc3BhY2UudXNlckhhc2g7CiAgICAgICAgYm90dG9tTGVmdCA9IHNwYWNlLmJvdHRvbUxlZnQ7CiAgICAgICAgdG9wTGVmdCA9IHNwYWNlLnRvcExlZnQ7CiAgICAgICAgdG9wUmlnaHQgPSBzcGFjZS50b3BSaWdodDsKICAgICAgICBib3R0b21SaWdodCA9IHNwYWNlLmJvdHRvbVJpZ2h0OwogICAgICAgIHR4VHlwZSA9IHNwYWNlLnR4VHlwZTsKICAgICAgICB0eElkID0gc3BhY2UudHhJZDsKICAgICAgICB0eFRpbWUgPSBzcGFjZS50eFRpbWU7CiAgICAgICAgY3JlYXRlZCA9IHNwYWNlLmNyZWF0ZWQ7CiAgICB9CgogICAgZnVuY3Rpb24gZ2V0VXNlclNwYWNlSWRzKHVpbnQgdXNlcklkKSBleHRlcm5hbCBjb25zdGFudCByZXR1cm5zKHVpbnRbXSkgewogICAgICAgIHJlcXVpcmUodXNlcklkID4gMCk7CiAgICAgICAgcmV0dXJuIHVzZXJTcGFjZUxvb2t1cFt1c2VySWRdOyAKICAgIH0KCiAgICBmdW5jdGlvbiBnZXRVc2VySWQodWludCBpZCkgZXh0ZXJuYWwgY29uc3RhbnQgcmV0dXJucyh1aW50KSB7CiAgICAgICAgcmVxdWlyZShpZCA+IDApOwogICAgICAgIHZhciBpbmRleCA9IHNwYWNlTWFwW2lkXTsKICAgICAgICByZXF1aXJlKGluZGV4ID4gMCk7CiAgICAgICAgdmFyIHNwYWNlID0gc3BhY2VzW2luZGV4XTsKICAgICAgICByZXR1cm4gc3BhY2UudXNlcklkOyAKICAgIH0KCiAgICBmdW5jdGlvbiBleGlzdHModWludCBpZCkgZXh0ZXJuYWwgY29uc3RhbnQgcmV0dXJucyhib29sKSB7CiAgICAgICAgcmVxdWlyZShpZCA+IDApOwogICAgICAgIHJldHVybiBzcGFjZU1hcFtpZF0gIT0gMDsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gc3BhY2VDb3VudCgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQpIHsKICAgICAgICByZXR1cm4gc3BhY2VzLmxlbmd0aCAtIFNUQVJUX0lOREVYOwogICAgfSAgIAp9'.
	

]
