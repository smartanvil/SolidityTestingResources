Class {
	#name : #SRTeaa77dcef0ef8b0c5145e0c29021094fcd63bd38,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTeaa77dcef0ef8b0c5145e0c29021094fcd63bd38 >> base64 [
	^ ''.
	

]
