Class {
	#name : #SRT54853124eFc380cA0b0f87958A69DF8622BD1721,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT54853124eFc380cA0b0f87958A69DF8622BD1721 >> base64 [
	^ ''.
	

]
