Class {
	#name : #SRTCF10991B7041BD179E1DE80752BB5f4f6F548689,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTCF10991B7041BD179E1DE80752BB5f4f6F548689 >> base64 [
	^ ''.
	

]
