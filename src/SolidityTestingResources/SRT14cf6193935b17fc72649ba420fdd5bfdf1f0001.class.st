Class {
	#name : #SRT14cf6193935b17fc72649ba420fdd5bfdf1f0001,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT14cf6193935b17fc72649ba420fdd5bfdf1f0001 >> base64 [
	^ ''.
	

]
