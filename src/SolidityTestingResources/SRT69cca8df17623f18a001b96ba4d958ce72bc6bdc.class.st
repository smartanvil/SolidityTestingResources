Class {
	#name : #SRT69cca8df17623f18a001b96ba4d958ce72bc6bdc,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT69cca8df17623f18a001b96ba4d958ce72bc6bdc >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTY7Cgpjb250cmFjdCBDb250cm9sbGVySW50ZXJmYWNlIHsKCgogIC8vIFN0YXRlIFZhcmlhYmxlcwogIGJvb2wgcHVibGljIHBhdXNlZDsKICBhZGRyZXNzIHB1YmxpYyBudXR6QWRkcjsKCiAgLy8gTnV0eiBmdW5jdGlvbnMKICBmdW5jdGlvbiBiYWJ6QmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KTsKICBmdW5jdGlvbiBhY3RpdmVTdXBwbHkoKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KTsKICBmdW5jdGlvbiBidXJuUG9vbCgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpOwogIGZ1bmN0aW9uIHBvd2VyUG9vbCgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpOwogIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nik7CiAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KTsKCiAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfYW1vdW50QmFieikgcHVibGljOwogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF9hbW91bnRCYWJ6LCBieXRlcyBfZGF0YSkgcHVibGljOwogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9zZW5kZXIsIGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF9hbW91bnRCYWJ6LCBieXRlcyBfZGF0YSkgcHVibGljOwoKICAvLyBNYXJrZXQgZnVuY3Rpb25zCiAgZnVuY3Rpb24gZmxvb3IoKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KTsKICBmdW5jdGlvbiBjZWlsaW5nKCkgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nik7CgogIGZ1bmN0aW9uIHB1cmNoYXNlKGFkZHJlc3MgX3NlbmRlciwgdWludDI1NiBfdmFsdWUsIHVpbnQyNTYgX3ByaWNlKSBwdWJsaWMgcmV0dXJucyAodWludDI1Nik7CiAgZnVuY3Rpb24gc2VsbChhZGRyZXNzIF9mcm9tLCB1aW50MjU2IF9wcmljZSwgdWludDI1NiBfYW1vdW50QmFieik7CgogIC8vIFBvd2VyIGZ1bmN0aW9ucwogIGZ1bmN0aW9uIHBvd2VyQmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KTsKICBmdW5jdGlvbiBvdXRzdGFuZGluZ1Bvd2VyKCkgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nik7CiAgZnVuY3Rpb24gYXV0aG9yaXplZFBvd2VyKCkgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nik7CiAgZnVuY3Rpb24gcG93ZXJUb3RhbFN1cHBseSgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpOwoKICBmdW5jdGlvbiBwb3dlclVwKGFkZHJlc3MgX3NlbmRlciwgYWRkcmVzcyBfZnJvbSwgdWludDI1NiBfYW1vdW50QmFieikgcHVibGljOwogIGZ1bmN0aW9uIGRvd25UaWNrKGFkZHJlc3MgX293bmVyLCB1aW50MjU2IF9ub3cpIHB1YmxpYzsKICBmdW5jdGlvbiBjcmVhdGVEb3duUmVxdWVzdChhZGRyZXNzIF9vd25lciwgdWludDI1NiBfYW1vdW50UG93ZXIpIHB1YmxpYzsKICBmdW5jdGlvbiBkb3ducyhhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcHVibGljIHJldHVybnModWludDI1NiwgdWludDI1NiwgdWludDI1Nik7CiAgZnVuY3Rpb24gZG93bnRpbWUoKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KTsKfQoKLyoqCiAqIEB0aXRsZSBPd25hYmxlCiAqIEBkZXYgVGhlIE93bmFibGUgY29udHJhY3QgaGFzIGFuIG93bmVyIGFkZHJlc3MsIGFuZCBwcm92aWRlcyBiYXNpYyBhdXRob3JpemF0aW9uIGNvbnRyb2wKICogZnVuY3Rpb25zLCB0aGlzIHNpbXBsaWZpZXMgdGhlIGltcGxlbWVudGF0aW9uIG9mICJ1c2VyIHBlcm1pc3Npb25zIi4KICovCmNvbnRyYWN0IE93bmFibGUgewogIGFkZHJlc3MgcHVibGljIG93bmVyOwoKCiAgLyoqCiAgICogQGRldiBUaGUgT3duYWJsZSBjb25zdHJ1Y3RvciBzZXRzIHRoZSBvcmlnaW5hbCBgb3duZXJgIG9mIHRoZSBjb250cmFjdCB0byB0aGUgc2VuZGVyCiAgICogYWNjb3VudC4KICAgKi8KICBmdW5jdGlvbiBPd25hYmxlKCkgewogICAgb3duZXIgPSBtc2cuc2VuZGVyOwogIH0KCgogIC8qKgogICAqIEBkZXYgVGhyb3dzIGlmIGNhbGxlZCBieSBhbnkgYWNjb3VudCBvdGhlciB0aGFuIHRoZSBvd25lci4KICAgKi8KICBtb2RpZmllciBvbmx5T3duZXIoKSB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgXzsKICB9CgoKICAvKioKICAgKiBAZGV2IEFsbG93cyB0aGUgY3VycmVudCBvd25lciB0byB0cmFuc2ZlciBjb250cm9sIG9mIHRoZSBjb250cmFjdCB0byBhIG5ld093bmVyLgogICAqIEBwYXJhbSBuZXdPd25lciBUaGUgYWRkcmVzcyB0byB0cmFuc2ZlciBvd25lcnNoaXAgdG8uCiAgICovCiAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBuZXdPd25lcikgb25seU93bmVyIHsKICAgIHJlcXVpcmUobmV3T3duZXIgIT0gYWRkcmVzcygwKSk7ICAgICAgCiAgICBvd25lciA9IG5ld093bmVyOwogIH0KCn0KCgovKioKICogQHRpdGxlIFNhZmVNYXRoCiAqIEBkZXYgTWF0aCBvcGVyYXRpb25zIHdpdGggc2FmZXR5IGNoZWNrcyB0aGF0IHRocm93IG9uIGVycm9yCiAqLwpsaWJyYXJ5IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAKICAgIHVpbnQyNTYgYyA9IGEgLyBiOwogICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KfQoKLyoqCiAqIEB0aXRsZSBQdWxsUGF5bWVudAogKiBAZGV2IEJhc2UgY29udHJhY3Qgc3VwcG9ydGluZyBhc3luYyBzZW5kIGZvciBwdWxsIHBheW1lbnRzLgogKi8KY29udHJhY3QgUHVsbFBheW1lbnQgaXMgT3duYWJsZSB7CiAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQyNTY7CgoKICB1aW50IHB1YmxpYyBkYWlseUxpbWl0ID0gMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDsgIC8vIDEgRVRICiAgdWludCBwdWJsaWMgbGFzdERheTsKICB1aW50IHB1YmxpYyBzcGVudFRvZGF5OwoKICAvLyA4Ynl0ZXMgZGF0ZSwgMjQgYnl0ZXMgdmFsdWUKICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikgaW50ZXJuYWwgcGF5bWVudHM7CgogIG1vZGlmaWVyIG9ubHlOdXR6KCkgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IENvbnRyb2xsZXJJbnRlcmZhY2Uob3duZXIpLm51dHpBZGRyKCkpOwogICAgXzsKICB9CgogIG1vZGlmaWVyIHdoZW5Ob3RQYXVzZWQgKCkgewogICAgcmVxdWlyZSghQ29udHJvbGxlckludGVyZmFjZShvd25lcikucGF1c2VkKCkpOwogICAgIF87CiAgfQoKICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgdmFsdWUpIHsKICAgIHJldHVybiB1aW50MTkyKHBheW1lbnRzW19vd25lcl0pOwogIH0KCiAgZnVuY3Rpb24gcGF5bWVudE9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHZhbHVlLCB1aW50MjU2IGRhdGUpIHsKICAgIHZhbHVlID0gdWludDE5MihwYXltZW50c1tfb3duZXJdKTsKICAgIGRhdGUgPSAocGF5bWVudHNbX293bmVyXSA+PiAxOTIpOwogICAgcmV0dXJuOwogIH0KCiAgLy8vIEBkZXYgQWxsb3dzIHRvIGNoYW5nZSB0aGUgZGFpbHkgbGltaXQuIFRyYW5zYWN0aW9uIGhhcyB0byBiZSBzZW50IGJ5IHdhbGxldC4KICAvLy8gQHBhcmFtIF9kYWlseUxpbWl0IEFtb3VudCBpbiB3ZWkuCiAgZnVuY3Rpb24gY2hhbmdlRGFpbHlMaW1pdCh1aW50IF9kYWlseUxpbWl0KSBwdWJsaWMgb25seU93bmVyIHsKICAgICAgZGFpbHlMaW1pdCA9IF9kYWlseUxpbWl0OwogIH0KCiAgZnVuY3Rpb24gY2hhbmdlV2l0aGRyYXdhbERhdGUoYWRkcmVzcyBfb3duZXIsIHVpbnQyNTYgX25ld0RhdGUpICBwdWJsaWMgb25seU93bmVyIHsKICAgIC8vIGFsbG93IHRvIHdpdGhkcmF3IGltbWVkaWF0ZWx5CiAgICAvLyBtb3ZlIHdpdGRyYXdhbCBkYXRlIG1vcmUgZGF5cyBpbnRvIGZ1dHVyZQogICAgcGF5bWVudHNbX293bmVyXSA9IChfbmV3RGF0ZSA8PCAxOTIpICsgdWludDE5MihwYXltZW50c1tfb3duZXJdKTsKICB9CgogIGZ1bmN0aW9uIGFzeW5jU2VuZChhZGRyZXNzIF9kZXN0KSBwdWJsaWMgcGF5YWJsZSBvbmx5TnV0eiB7CiAgICByZXF1aXJlKG1zZy52YWx1ZSA+IDApOwogICAgdWludDI1NiBuZXdWYWx1ZSA9IG1zZy52YWx1ZS5hZGQodWludDE5MihwYXltZW50c1tfZGVzdF0pKTsKICAgIHVpbnQyNTYgbmV3RGF0ZTsKICAgIGlmIChpc1VuZGVyTGltaXQobXNnLnZhbHVlKSkgewogICAgICB1aW50MjU2IGRhdGUgPSBwYXltZW50c1tfZGVzdF0gPj4gMTkyOwogICAgICBuZXdEYXRlID0gKGRhdGUgPiBub3cpID8gZGF0ZSA6IG5vdzsKICAgIH0gZWxzZSB7CiAgICAgIG5ld0RhdGUgPSBub3cuYWRkKDMgZGF5cyk7CiAgICB9CiAgICBzcGVudFRvZGF5ID0gc3BlbnRUb2RheS5hZGQobXNnLnZhbHVlKTsKICAgIHBheW1lbnRzW19kZXN0XSA9IChuZXdEYXRlIDw8IDE5MikgKyB1aW50MTkyKG5ld1ZhbHVlKTsKICB9CgoKICBmdW5jdGlvbiB3aXRoZHJhdygpIHB1YmxpYyB3aGVuTm90UGF1c2VkIHsKICAgIGFkZHJlc3MgdW50cnVzdGVkUmVjaXBpZW50ID0gbXNnLnNlbmRlcjsKICAgIHVpbnQyNTYgYW1vdW50V2VpID0gdWludDE5MihwYXltZW50c1t1bnRydXN0ZWRSZWNpcGllbnRdKTsKCiAgICByZXF1aXJlKGFtb3VudFdlaSAhPSAwKTsKICAgIHJlcXVpcmUobm93ID49IChwYXltZW50c1t1bnRydXN0ZWRSZWNpcGllbnRdID4+IDE5MikpOwogICAgcmVxdWlyZSh0aGlzLmJhbGFuY2UgPj0gYW1vdW50V2VpKTsKCiAgICBwYXltZW50c1t1bnRydXN0ZWRSZWNpcGllbnRdID0gMDsKCiAgICB1bnRydXN0ZWRSZWNpcGllbnQudHJhbnNmZXIoYW1vdW50V2VpKTsKICB9CgogIC8qCiAgICogSW50ZXJuYWwgZnVuY3Rpb25zCiAgICovCiAgLy8vIEBkZXYgUmV0dXJucyBpZiBhbW91bnQgaXMgd2l0aGluIGRhaWx5IGxpbWl0IGFuZCByZXNldHMgc3BlbnRUb2RheSBhZnRlciBvbmUgZGF5LgogIC8vLyBAcGFyYW0gYW1vdW50IEFtb3VudCB0byB3aXRoZHJhdy4KICAvLy8gQHJldHVybiBSZXR1cm5zIGlmIGFtb3VudCBpcyB1bmRlciBkYWlseSBsaW1pdC4KICBmdW5jdGlvbiBpc1VuZGVyTGltaXQodWludCBhbW91bnQpIGludGVybmFsIHJldHVybnMgKGJvb2wpIHsKICAgIGlmIChub3cgPiBsYXN0RGF5LmFkZCgyNCBob3VycykpIHsKICAgICAgbGFzdERheSA9IG5vdzsKICAgICAgc3BlbnRUb2RheSA9IDA7CiAgICB9CiAgICAvLyBub3QgdXNpbmcgc2FmZSBtYXRoIGJlY2F1c2Ugd2UgZG9uJ3Qgd2FudCB0byB0aHJvdzsKICAgIGlmIChzcGVudFRvZGF5ICsgYW1vdW50ID4gZGFpbHlMaW1pdCB8fCBzcGVudFRvZGF5ICsgYW1vdW50IDwgc3BlbnRUb2RheSkgewogICAgICByZXR1cm4gZmFsc2U7CiAgICB9CiAgICByZXR1cm4gdHJ1ZTsKICB9Cgp9'.
	

]
