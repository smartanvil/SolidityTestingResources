Class {
	#name : #SRT41642b325a44df26357aad70f013d828f5adc52a,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT41642b325a44df26357aad70f013d828f5adc52a >> base64 [
	^ ''.
	

]
