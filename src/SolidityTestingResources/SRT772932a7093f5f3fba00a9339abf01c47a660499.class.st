Class {
	#name : #SRT772932a7093f5f3fba00a9339abf01c47a660499,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT772932a7093f5f3fba00a9339abf01c47a660499 >> base64 [
	^ ''.
	

]
