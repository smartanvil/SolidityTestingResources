Class {
	#name : #SRT43b4d9e3a82a443e4bfb25470e1dcd12d6853f0b,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT43b4d9e3a82a443e4bfb25470e1dcd12d6853f0b >> base64 [
	^ ''.
	

]
