Class {
	#name : #SRTca58cf6d68344a2b13f0f62d29351466ee4d7c76,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTca58cf6d68344a2b13f0f62d29351466ee4d7c76 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7Ci8qCiAqIFN0YW5kYXJkIHRva2VuIGNvbnRyYWN0IHdpdGggYWJpbGl0eSB0byBob2xkIHNvbWUgYW1vdW50IG9uIHNvbWUgYmFsYW5jZXMgYmVmb3JlIHNpbmdsZSBpbml0aWFsbHkgc3BlY2lmaWVkIGRlYWRsaW5lCiAqIFdoaWNoIGlzIHVzZWZ1bCBmb3IgZXhhbXBsZSBmb3IgaG9sZGluZyB1bnNvbGQgdG9rZW5zIGZvciBhIHllYXIgZm9yIG5leHQgc3RlcCBvZiBwcm9qZWN0IG1hbmFnZW1lbnQKICoKICogSW1wbGVtZW50cyBpbml0aWFsIHN1cHBseSBhbmQgZG9lcyBub3QgYWxsb3cgdG8gc3VwcGx5IG1vcmUgdG9rZW5zIGxhdGVyCiAqCiAqLyAKCmNvbnRyYWN0IFNCQ0UgewoJLyogUHVibGljIHZhcmlhYmxlcyBvZiB0aGUgdG9rZW4gKi8JCglzdHJpbmcgcHVibGljIGNvbnN0YW50IG5hbWUgPSAiU0JDIHRva2VuIjsKCXN0cmluZyBwdWJsaWMgY29uc3RhbnQgc3ltYm9sID0gIlNCQ0UiOwkKCXVpbnQ4IHB1YmxpYyBjb25zdGFudCBkZWNpbWFscyA9IDg7CglhZGRyZXNzIHB1YmxpYyBvd25lcjsKCXVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5XzsKCglhZGRyZXNzIHB1YmxpYyBhaXJkcm9wOwoJdWludDI1NiBwdWJsaWMgYWlyZHJvcEFtb3VudDsKCWJvb2wgcHVibGljIGFpcmRyb3BDb25qdXJlZDsKCgkvKiBUaGlzIGNyZWF0ZXMgYW4gYXJyYXkgd2l0aCBhbGwgYmFsYW5jZXMgKi8KCW1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIGJhbGFuY2VzOwoJbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBpbnRlcm5hbCBhbGxvd2VkOwoKCS8qIFRoaXMgZ2VuZXJhdGVzIGEgcHVibGljIGV2ZW50IG9uIHRoZSBibG9ja2NoYWluIHRoYXQgd2lsbCBub3RpZnkgY2xpZW50cyAqLwoJZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiB2YWx1ZSk7CQoJZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7CglldmVudCBCdXJuKGFkZHJlc3MgaW5kZXhlZCBmcm9tLCB1aW50MjU2IHZhbHVlKTsKCWV2ZW50IE93bmVyc2hpcFRyYW5zZmVycmVkKGFkZHJlc3MgaW5kZXhlZCBwcmV2aW91c093bmVyLCBhZGRyZXNzIGluZGV4ZWQgbmV3T3duZXIpOwoJCgltb2RpZmllciBvbmx5T3duZXIoKSB7CgkJcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyKTsKCQlfOwoJfQoKCS8qIEluaXRpYWxpemVzIGNvbnRyYWN0IHdpdGggaW5pdGlhbCBzdXBwbHkgdG9rZW5zIHRvIHRoZSBjcmVhdG9yIG9mIHRoZSBjb250cmFjdCAqLwoJZnVuY3Rpb24gU0JDRSh1aW50MjU2IGluaXRpYWxTdXBwbHkpIHB1YmxpYyB7CgkJb3duZXI9bXNnLnNlbmRlcjsKCQliYWxhbmNlc1tvd25lcl0gPSBpbml0aWFsU3VwcGx5ICogMTAwMDAwMDAwOwkJCQkJCQkvLyBHaXZlIHRoZSBjcmVhdG9yIGFsbCBpbml0aWFsIHRva2VucwoJCXRvdGFsU3VwcGx5XyA9IGluaXRpYWxTdXBwbHkgKiAxMDAwMDAwMDA7CQkJCQkJCQkvLyBVcGRhdGUgdG90YWwgc3VwcGx5CgkJYWlyZHJvcEFtb3VudCA9IHRvdGFsU3VwcGx5XyAvIDM3ICogMTAwOwoJfQogICAgLypUaGlzIHJldHVybnMgdG90YWwgbnVtYmVyIG9mIHRva2VucyBpbiBleGlzdGVuY2UqLwoJZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2KSB7CiAgICAJcmV0dXJuIHRvdGFsU3VwcGx5XzsKICAJfQoJCgkvKiBTZW5kIGNvaW5zICovCglmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CgkJcmVxdWlyZShfdG8gIT0gYWRkcmVzcygwKSk7CiAgICAJcmVxdWlyZShiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PV92YWx1ZSk7CgkJCgkJcmVxdWlyZShiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfdmFsdWUpOwoJCXJlcXVpcmUoYmFsYW5jZXNbX3RvXSArIF92YWx1ZSA+PSBiYWxhbmNlc1tfdG9dKTsKCgkJYmFsYW5jZXNbbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOwkJCQkJIAoJCWJhbGFuY2VzW190b10gKz0gX3ZhbHVlOwkJCQkJCgkJVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwkJCQkgIAoJCXJldHVybiB0cnVlOwoJfQoKCS8qVGhpcyBwdWxscyB0aGUgYWxsb3dlZCB0b2tlbnMgYW1vdW50IGZyb20gYWRkcmVzcyB0byBhbm90aGVyKi8KCWZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CgkJcmVxdWlyZShfdG8gIT0gYWRkcmVzcygwKSk7CQkJCQkJICAKCQlyZXF1aXJlKF92YWx1ZSA8PSBiYWxhbmNlc1tfZnJvbV0pOwkJCQoJCXJlcXVpcmUoX3ZhbHVlIDw9IGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdKTsKCgkJcmVxdWlyZShiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfdmFsdWUpOwoJCXJlcXVpcmUoYmFsYW5jZXNbX3RvXSArIF92YWx1ZSA+PSBiYWxhbmNlc1tfdG9dKTsJCQoJCXJlcXVpcmUoYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gPj0gX3ZhbHVlKTsJCQkvLyBDaGVjayBhbGxvd2FuY2UKCgkJYmFsYW5jZXNbX2Zyb21dIC09IF92YWx1ZTsJCQkJCQkgICAJCQkvLyBTdWJ0cmFjdCBmcm9tIHRoZSBzZW5kZXIKCQliYWxhbmNlc1tfdG9dICs9IF92YWx1ZTsJCQkJCQkJIAkJLy8gQWRkIHRoZSBzYW1lIHRvIHRoZSByZWNpcGllbnQKCQlhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CgkJVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKCQlyZXR1cm4gdHJ1ZTsKCX0KCglmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgewogICAgCXJldHVybiBiYWxhbmNlc1tfb3duZXJdOwoJfQoKCS8qIEFsbG93IGFub3RoZXIgY29udHJhY3QgdG8gc3BlbmQgc29tZSB0b2tlbnMgaW4geW91ciBiZWhhbGYuIAoJQ2hhbmdpbmcgYW4gYWxsb3dhbmNlIGJyaW5ncyB0aGUgcmlzayBvZiBkb3VibGUgc3BlbmRpbmcsIHdoZW4gYm90aCBvbGQgYW5kIG5ldyB2YWx1ZXMgd2lsbCBiZSB1c2VkICovCglmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgCWFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgCUFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwkJCgkJcmV0dXJuIHRydWU7Cgl9CQoJCgkvKiBUaGlzIHJldHVybnMgdGhlIGFtb3VudCBvZiB0b2tlbnMgdGhhdCBhbiBvd25lciBhbGxvd2VkIHRvIGEgc3BlbmRlci4gKi8KCWZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1NikgewoJCXJldHVybiBhbGxvd2VkW19vd25lcl1bX3NwZW5kZXJdOwoJfQoKCS8qIFRoaXMgZnVuY3Rpb24gaXMgdXNlZCB0byBpbmNyZWFzZSB0aGUgYW1vdW50IG9mIHRva2VucyBhbGxvd2VkIHRvIHNwZW5kIGJ5IHNwZW5kZXIuKi8KCWZ1bmN0aW9uIGluY3JlYXNlQXBwcm92YWwoYWRkcmVzcyBfc3BlbmRlciwgdWludCBfYWRkZWRWYWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgIAlyZXF1aXJlKGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdICsgX2FkZGVkVmFsdWUgPj0gYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0pOwoJCWFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gKyBfYWRkZWRWYWx1ZTsKICAgIAlBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0pOwogICAgCXJldHVybiB0cnVlOwogIAl9CgoJLyogVGhpcyBmdW5jdGlvbiBpcyB1c2VkIHRvIGRlY3JlYXNlIHRoZSBhbW91bnQgb2YgdG9rZW5zIGFsbG93ZWQgdG8gc3BlbmQgYnkgc3BlbmRlci4qLwoJZnVuY3Rpb24gZGVjcmVhc2VBcHByb3ZhbChhZGRyZXNzIF9zcGVuZGVyLCB1aW50IF9zdWJ0cmFjdGVkVmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CgkJdWludCBvbGRWYWx1ZSA9IGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdOwoJCWlmIChfc3VidHJhY3RlZFZhbHVlID4gb2xkVmFsdWUpIHsKCQkJYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSAwOwoJCX0gCgkJZWxzZSB7CgkJCWFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gb2xkVmFsdWUgLSBfc3VidHJhY3RlZFZhbHVlOwoJCX0KCQlBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0pOwoJCXJldHVybiB0cnVlOwogIAl9CgoJZnVuY3Rpb24gYnVybih1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpIHsJCQoJCXJlcXVpcmUoYmFsYW5jZXNbbXNnLnNlbmRlcl0gPj0gX3ZhbHVlICk7IAkJCQkJCQkvLyB2YWx1ZSA+IHRvdGFsU3VwcGx5IGlzIGltcG9zc2libGUgYmVjYXVzZSBpdCBtZWFucyB0aGF0IHNlbmRlciBiYWxhbmNlIGlzIGdyZWF0ZXIgdGhhbiB0b3RhbFN1cHBseS4JCQkJCgkJYmFsYW5jZXNbbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOwkJCQkJICAJCQkJCS8vIFN1YnRyYWN0IGZyb20gdGhlIHNlbmRlcgoJCXRvdGFsU3VwcGx5XyAtPSBfdmFsdWU7CQkJCQkJCQkJCQkJLy8gVXBkYXRlcyB0b3RhbFN1cHBseQoJCUJ1cm4obXNnLnNlbmRlciwgX3ZhbHVlKTsJCQkJCQkJCQkJCS8vIEZpcmVzIHRoZSBldmVudCBhYm91dCB0b2tlbiBidXJuCgkJcmV0dXJuIHRydWU7Cgl9CgoJZnVuY3Rpb24gYnVybkZyb20oYWRkcmVzcyBfZnJvbSwgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CgkJcmVxdWlyZShiYWxhbmNlc1tfZnJvbV0gPj0gX3ZhbHVlICk7CQkJCQkJCQkvLyBDaGVjayBpZiB0aGUgc2VuZGVyIGhhcyBlbm91Z2gKCQlyZXF1aXJlKGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID49IF92YWx1ZSk7CQkJCQkvLyBDaGVjayBhbGxvd2FuY2UKCQliYWxhbmNlc1tfZnJvbV0gLT0gX3ZhbHVlOwkJCQkJCSAgCQkJCQkvLyBTdWJ0cmFjdCBmcm9tIHRoZSBzZW5kZXIKCQl0b3RhbFN1cHBseV8gLT0gX3ZhbHVlOwkJCQkJCQkgICAJCQkJCS8vIFVwZGF0ZXMgdG90YWxTdXBwbHkKCQlCdXJuKF9mcm9tLCBfdmFsdWUpOwkJCQkJCQkJCQkJCS8vIEZpcmVzIHRoZSBldmVudCBhYm91dCB0b2tlbiBidXJuCgkJcmV0dXJuIHRydWU7Cgl9CgoJZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBuZXdPd25lcikgcHVibGljIG9ubHlPd25lciB7CgkJcmVxdWlyZShuZXdPd25lciAhPSBhZGRyZXNzKDApKTsKCQlPd25lcnNoaXBUcmFuc2ZlcnJlZChvd25lciwgbmV3T3duZXIpOwogICAgCW93bmVyID0gbmV3T3duZXI7Cgl9CgoJZnVuY3Rpb24gc2V0QWlyZHJvcFJlY2VpdmVyKGFkZHJlc3MgX2FpcmRyb3ApIHB1YmxpYyBvbmx5T3duZXIgewoJCXJlcXVpcmUoX2FpcmRyb3AgIT0gYWRkcmVzcygwKSk7CgkJYWlyZHJvcCA9IF9haXJkcm9wOwoJfQoKCWZ1bmN0aW9uIGNvbmp1cmVBaXJkcm9wKCkgcHVibGljIG9ubHlPd25lciB7CQkJCgkJcmVxdWlyZSh0b3RhbFN1cHBseV8gKyBhaXJkcm9wQW1vdW50ID49IGJhbGFuY2VzW2FpcmRyb3BdKTsKCQlyZXF1aXJlKGFpcmRyb3AgIT0gYWRkcmVzcygwKSk7CgkJYmFsYW5jZXNbYWlyZHJvcF0gKz0gYWlyZHJvcEFtb3VudDsKCQl0b3RhbFN1cHBseV8gKz0gYWlyZHJvcEFtb3VudDsJCQoJfQp9'.
	

]
