Class {
	#name : #SRT08711d3b02c8758f2fb3ab4e80228418a7f8e39c,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT08711d3b02c8758f2fb3ab4e80228418a7f8e39c >> base64 [
	^ 'LyoqCiAqIFRoZSBFZGdlbGVzcyB0b2tlbiBjb250cmFjdCBjb21wbGllcyB3aXRoIHRoZSBFUkMyMCBzdGFuZGFyZCAoc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8yMCkuCiAqIEFkZGl0aW9uYWxseSB0b2tlbnMgY2FuIGJlIGxvY2tlZCBmb3IgYSBkZWZpbmVkIHRpbWUgaW50ZXJ2YWwgYnkgdG9rZW4gaG9sZGVycy4KICogVGhlIG93bmVyJ3Mgc2hhcmUgb2YgdG9rZW5zIGlzIGxvY2tlZCBmb3IgdGhlIGZpcnN0IHllYXIgYW5kIGFsbCB0b2tlbnMgbm90CiAqIGJlaW5nIHNvbGQgZHVyaW5nIHRoZSBjcm93ZHNhbGUgYnV0IDYwLjAwMC4wMDAgKG93bmVyJ3Mgc2hhcmUgKyBib3VudHkgcHJvZ3JhbSkgYXJlIGJ1cm5lZC4KICogQXV0aG9yOiBKdWxpYSBBbHRlbnJpZWQKICogKi8KCnByYWdtYSBzb2xpZGl0eSBeMC40LjY7Cgpjb250cmFjdCBTYWZlTWF0aCB7CiAgLy9pbnRlcm5hbHMKCiAgZnVuY3Rpb24gc2FmZU11bCh1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgewogICAgdWludCBjID0gYSAqIGI7CiAgICBhc3NlcnQoYSA9PSAwIHx8IGMgLyBhID09IGIpOwogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBzYWZlU3ViKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIGZ1bmN0aW9uIHNhZmVBZGQodWludCBhLCB1aW50IGIpIGludGVybmFsIHJldHVybnMgKHVpbnQpIHsKICAgIHVpbnQgYyA9IGEgKyBiOwogICAgYXNzZXJ0KGM+PWEgJiYgYz49Yik7CiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIGFzc2VydChib29sIGFzc2VydGlvbikgaW50ZXJuYWwgewogICAgaWYgKCFhc3NlcnRpb24pIHRocm93OwogIH0KfQoKY29udHJhY3QgRWRnZWxlc3NUb2tlbiBpcyBTYWZlTWF0aCB7CiAgICAvKiBQdWJsaWMgdmFyaWFibGVzIG9mIHRoZSB0b2tlbiAqLwogICAgc3RyaW5nIHB1YmxpYyBzdGFuZGFyZCA9ICdFUkMyMCc7CiAgICBzdHJpbmcgcHVibGljIG5hbWUgPSAnRWRnZWxlc3MnOwogICAgc3RyaW5nIHB1YmxpYyBzeW1ib2wgPSAnRURHJzsKICAgIHVpbnQ4IHB1YmxpYyBkZWNpbWFscyA9IDA7CiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsKICAgIGFkZHJlc3MgcHVibGljIG93bmVyOwogICAgLyogZnJvbSB0aGlzIHRpbWUgb24gdG9rZW5zIG1heSBiZSB0cmFuc2ZlcmVkIChhZnRlciBJQ08pKi8KICAgIHVpbnQyNTYgcHVibGljIHN0YXJ0VGltZSA9IDE0OTAxMTIwMDA7CiAgICAvKiB0ZWxscyBpZiB0b2tlbnMgaGF2ZSBiZWVuIGJ1cm5lZCBhbHJlYWR5ICovCiAgICBib29sIGJ1cm5lZDsKCiAgICAvKiBUaGlzIGNyZWF0ZXMgYW4gYXJyYXkgd2l0aCBhbGwgYmFsYW5jZXMgKi8KICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIGJhbGFuY2VPZjsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgcHVibGljIGFsbG93YW5jZTsKCgogICAgLyogVGhpcyBnZW5lcmF0ZXMgYSBwdWJsaWMgZXZlbnQgb24gdGhlIGJsb2NrY2hhaW4gdGhhdCB3aWxsIG5vdGlmeSBjbGllbnRzICovCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHZhbHVlKTsKICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBvd25lciwgYWRkcmVzcyBpbmRleGVkIHNwZW5kZXIsIHVpbnQyNTYgdmFsdWUpOwoJZXZlbnQgQnVybmVkKHVpbnQgYW1vdW50KTsKCiAgICAvKiBJbml0aWFsaXplcyBjb250cmFjdCB3aXRoIGluaXRpYWwgc3VwcGx5IHRva2VucyB0byB0aGUgY3JlYXRvciBvZiB0aGUgY29udHJhY3QgKi8KICAgIGZ1bmN0aW9uIEVkZ2VsZXNzVG9rZW4oKSB7CiAgICAgICAgb3duZXIgPSAweDAwMzIzMEJCRTY0ZWNjRDY2ZjYyOTEzNjc5Qzg5NjZDZjlGNDExNjY7CiAgICAgICAgYmFsYW5jZU9mW293bmVyXSA9IDUwMDAwMDAwMDsgICAgICAgICAgICAgIC8vIEdpdmUgdGhlIG93bmVyIGFsbCBpbml0aWFsIHRva2VucwogICAgICAgIHRvdGFsU3VwcGx5ID0gNTAwMDAwMDAwOyAgICAgICAgICAgICAgICAgICAvLyBVcGRhdGUgdG90YWwgc3VwcGx5CiAgICB9CgogICAgLyogU2VuZCBzb21lIG9mIHlvdXIgdG9rZW5zIHRvIGEgZ2l2ZW4gYWRkcmVzcyAqLwogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpewogICAgICAgIGlmIChub3cgPCBzdGFydFRpbWUpIHRocm93OyAvL2NoZWNrIGlmIHRoZSBjcm93ZHNhbGUgaXMgYWxyZWFkeSBvdmVyCiAgICAgICAgaWYobXNnLnNlbmRlciA9PSBvd25lciAmJiBub3cgPCBzdGFydFRpbWUgKyAxIHllYXJzICYmIHNhZmVTdWIoYmFsYW5jZU9mW21zZy5zZW5kZXJdLF92YWx1ZSkgPCA1MDAwMDAwMCkgdGhyb3c7IC8vcHJldmVudCB0aGUgb3duZXIgb2Ygc3BlbmRpbmcgaGlzIHNoYXJlIG9mIHRva2VucyB3aXRoaW4gdGhlIGZpcnN0IHllYXIKICAgICAgICBiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPSBzYWZlU3ViKGJhbGFuY2VPZlttc2cuc2VuZGVyXSxfdmFsdWUpOyAgICAgICAgICAgICAgICAgICAgIC8vIFN1YnRyYWN0IGZyb20gdGhlIHNlbmRlcgogICAgICAgIGJhbGFuY2VPZltfdG9dID0gc2FmZUFkZChiYWxhbmNlT2ZbX3RvXSxfdmFsdWUpOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBBZGQgdGhlIHNhbWUgdG8gdGhlIHJlY2lwaWVudAogICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsgICAgICAgICAgICAgICAgICAgLy8gTm90aWZ5IGFueW9uZSBsaXN0ZW5pbmcgdGhhdCB0aGlzIHRyYW5zZmVyIHRvb2sgcGxhY2UKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICAvKiBBbGxvdyBhbm90aGVyIGNvbnRyYWN0IG9yIHBlcnNvbiB0byBzcGVuZCBzb21lIHRva2VucyBpbiB5b3VyIGJlaGFsZiAqLwogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgYWxsb3dhbmNlW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsKICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCgogICAgLyogQSBjb250cmFjdCBvciAgcGVyc29uIGF0dGVtcHRzIHRvIGdldCB0aGUgdG9rZW5zIG9mIHNvbWVib2R5IGVsc2UuCiAgICAqICBUaGlzIGlzIG9ubHkgYWxsb3dlZCBpZiB0aGUgdG9rZW4gaG9sZGVyIGFwcHJvdmVkLiAqLwogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgaWYgKG5vdyA8IHN0YXJ0VGltZSAmJiBfZnJvbSE9b3duZXIpIHRocm93OyAvL2NoZWNrIGlmIHRoZSBjcm93ZHNhbGUgaXMgYWxyZWFkeSBvdmVyCiAgICAgICAgaWYoX2Zyb20gPT0gb3duZXIgJiYgbm93IDwgc3RhcnRUaW1lICsgMSB5ZWFycyAmJiBzYWZlU3ViKGJhbGFuY2VPZltfZnJvbV0sX3ZhbHVlKSA8IDUwMDAwMDAwKSB0aHJvdzsgLy9wcmV2ZW50IHRoZSBvd25lciBvZiBzcGVuZGluZyBoaXMgc2hhcmUgb2YgdG9rZW5zIHdpdGhpbiB0aGUgZmlyc3QgeWVhcgogICAgICAgIHZhciBfYWxsb3dhbmNlID0gYWxsb3dhbmNlW19mcm9tXVttc2cuc2VuZGVyXTsKICAgICAgICBiYWxhbmNlT2ZbX2Zyb21dID0gc2FmZVN1YihiYWxhbmNlT2ZbX2Zyb21dLF92YWx1ZSk7IC8vIFN1YnRyYWN0IGZyb20gdGhlIHNlbmRlcgogICAgICAgIGJhbGFuY2VPZltfdG9dID0gc2FmZUFkZChiYWxhbmNlT2ZbX3RvXSxfdmFsdWUpOyAgICAgLy8gQWRkIHRoZSBzYW1lIHRvIHRoZSByZWNpcGllbnQKICAgICAgICBhbGxvd2FuY2VbX2Zyb21dW21zZy5zZW5kZXJdID0gc2FmZVN1YihfYWxsb3dhbmNlLF92YWx1ZSk7CiAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCgogICAgLyogdG8gYmUgY2FsbGVkIHdoZW4gSUNPIGlzIGNsb3NlZCwgYnVybnMgdGhlIHJlbWFpbmluZyB0b2tlbnMgYnV0IHRoZSBvd25lcnMgc2hhcmUgKDUwIDAwMCAwMDApIGFuZCB0aGUgb25lcyByZXNlcnZlZAogICAgKiAgZm9yIHRoZSBib3VudHkgcHJvZ3JhbSAoMTAgMDAwIDAwMCkuCiAgICAqICBhbnlib2R5IG1heSBidXJuIHRoZSB0b2tlbnMgYWZ0ZXIgSUNPIGVuZGVkLCBidXQgb25seSBvbmNlIChpbiBjYXNlIHRoZSBvd25lciBob2xkcyBtb3JlIHRva2VucyBpbiB0aGUgZnV0dXJlKS4KICAgICogIHRoaXMgZW5zdXJlcyB0aGF0IHRoZSBvd25lciB3aWxsIG5vdCBwb3NzZXMgYSBtYWpvcml0eSBvZiB0aGUgdG9rZW5zLiAqLwogICAgZnVuY3Rpb24gYnVybigpewogICAgCS8vaWYgdG9rZW5zIGhhdmUgbm90IGJlZW4gYnVybmVkIGFscmVhZHkgYW5kIHRoZSBJQ08gZW5kZWQKICAgIAlpZighYnVybmVkICYmIG5vdz5zdGFydFRpbWUpewogICAgCQl1aW50IGRpZmZlcmVuY2UgPSBzYWZlU3ViKGJhbGFuY2VPZltvd25lcl0sIDYwMDAwMDAwKTsvL2NoZWNrZWQgZm9yIG92ZXJmbG93IGFib3ZlCiAgICAJCWJhbGFuY2VPZltvd25lcl0gPSA2MDAwMDAwMDsKICAgIAkJdG90YWxTdXBwbHkgPSBzYWZlU3ViKHRvdGFsU3VwcGx5LCBkaWZmZXJlbmNlKTsKICAgIAkJYnVybmVkID0gdHJ1ZTsKICAgIAkJQnVybmVkKGRpZmZlcmVuY2UpOwogICAgCX0KICAgIH0KCn0='.
	

]
