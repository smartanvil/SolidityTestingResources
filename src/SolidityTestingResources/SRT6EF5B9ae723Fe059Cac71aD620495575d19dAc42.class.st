Class {
	#name : #SRT6EF5B9ae723Fe059Cac71aD620495575d19dAc42,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT6EF5B9ae723Fe059Cac71aD620495575d19dAc42 >> base64 [
	^ ''.
	

]
