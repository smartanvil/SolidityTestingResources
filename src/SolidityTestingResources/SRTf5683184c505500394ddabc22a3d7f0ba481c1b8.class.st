Class {
	#name : #SRTf5683184c505500394ddabc22a3d7f0ba481c1b8,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTf5683184c505500394ddabc22a3d7f0ba481c1b8 >> base64 [
	^ ''.
	

]
