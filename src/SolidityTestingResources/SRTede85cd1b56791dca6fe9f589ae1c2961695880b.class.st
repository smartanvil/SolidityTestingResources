Class {
	#name : #SRTede85cd1b56791dca6fe9f589ae1c2961695880b,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTede85cd1b56791dca6fe9f589ae1c2961695880b >> base64 [
	^ ''.
	

]
