Class {
	#name : #SRT03b0be689f36f383568d0a2486834cc6ceddda50,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT03b0be689f36f383568d0a2486834cc6ceddda50 >> base64 [
	^ ''.
	

]
