Class {
	#name : #SRTb6346b0cf3925b8758b5d98cd19703d2c5239e99,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTb6346b0cf3925b8758b5d98cd19703d2c5239e99 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTA7Cgpjb250cmFjdCBGb3JlaWduVG9rZW4gewogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KTsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCk7Cn0KCmNvbnRyYWN0IFp1a2VyRXRoZXJldW1Ub2tlbiB7CiAgICBhZGRyZXNzIG93bmVyID0gbXNnLnNlbmRlcjsKCiAgICBib29sIHB1YmxpYyBwdXJjaGFzaW5nQWxsb3dlZCA9IGZhbHNlOwoKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgYmFsYW5jZXM7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikpIGFsbG93ZWQ7CgogICAgdWludDI1NiBwdWJsaWMgdG90YWxDb250cmlidXRpb24gPSAwOwogICAgdWludDI1NiBwdWJsaWMgdG90YWxCb251c1Rva2Vuc0lzc3VlZCA9IDA7CgogICAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHkgPSAwOwoKICAgIGZ1bmN0aW9uIG5hbWUoKSBjb25zdGFudCByZXR1cm5zIChzdHJpbmcpIHsgcmV0dXJuICJaVUtFUiBDT0lOIjsgfQogICAgZnVuY3Rpb24gc3ltYm9sKCkgY29uc3RhbnQgcmV0dXJucyAoc3RyaW5nKSB7IHJldHVybiAiWlVLS0siOyB9CiAgICBmdW5jdGlvbiBkZWNpbWFscygpIGNvbnN0YW50IHJldHVybnMgKHVpbnQ4KSB7IHJldHVybiAxODsgfQogICAgCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsgcmV0dXJuIGJhbGFuY2VzW19vd25lcl07IH0KICAgIAogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICAvLyBtaXRpZ2F0ZXMgdGhlIEVSQzIwIHNob3J0IGFkZHJlc3MgYXR0YWNrCiAgICAgICAgaWYobXNnLmRhdGEubGVuZ3RoIDwgKDIgKiAzMikgKyA0KSB7IHRocm93OyB9CgogICAgICAgIGlmIChfdmFsdWUgPT0gMCkgeyByZXR1cm4gZmFsc2U7IH0KCiAgICAgICAgdWludDI1NiBmcm9tQmFsYW5jZSA9IGJhbGFuY2VzW21zZy5zZW5kZXJdOwoKICAgICAgICBib29sIHN1ZmZpY2llbnRGdW5kcyA9IGZyb21CYWxhbmNlID49IF92YWx1ZTsKICAgICAgICBib29sIG92ZXJmbG93ZWQgPSBiYWxhbmNlc1tfdG9dICsgX3ZhbHVlIDwgYmFsYW5jZXNbX3RvXTsKICAgICAgICAKICAgICAgICBpZiAoc3VmZmljaWVudEZ1bmRzICYmICFvdmVyZmxvd2VkKSB7CiAgICAgICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdIC09IF92YWx1ZTsKICAgICAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfdmFsdWU7CiAgICAgICAgICAgIAogICAgICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0gZWxzZSB7IHJldHVybiBmYWxzZTsgfQogICAgfQogICAgCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICAvLyBtaXRpZ2F0ZXMgdGhlIEVSQzIwIHNob3J0IGFkZHJlc3MgYXR0YWNrCiAgICAgICAgaWYobXNnLmRhdGEubGVuZ3RoIDwgKDMgKiAzMikgKyA0KSB7IHRocm93OyB9CgogICAgICAgIGlmIChfdmFsdWUgPT0gMCkgeyByZXR1cm4gZmFsc2U7IH0KICAgICAgICAKICAgICAgICB1aW50MjU2IGZyb21CYWxhbmNlID0gYmFsYW5jZXNbX2Zyb21dOwogICAgICAgIHVpbnQyNTYgYWxsb3dhbmNlID0gYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl07CgogICAgICAgIGJvb2wgc3VmZmljaWVudEZ1bmRzID0gZnJvbUJhbGFuY2UgPD0gX3ZhbHVlOwogICAgICAgIGJvb2wgc3VmZmljaWVudEFsbG93YW5jZSA9IGFsbG93YW5jZSA8PSBfdmFsdWU7CiAgICAgICAgYm9vbCBvdmVyZmxvd2VkID0gYmFsYW5jZXNbX3RvXSArIF92YWx1ZSA+IGJhbGFuY2VzW190b107CgogICAgICAgIGlmIChzdWZmaWNpZW50RnVuZHMgJiYgc3VmZmljaWVudEFsbG93YW5jZSAmJiAhb3ZlcmZsb3dlZCkgewogICAgICAgICAgICBiYWxhbmNlc1tfdG9dICs9IF92YWx1ZTsKICAgICAgICAgICAgYmFsYW5jZXNbX2Zyb21dIC09IF92YWx1ZTsKICAgICAgICAgICAgCiAgICAgICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdIC09IF92YWx1ZTsKICAgICAgICAgICAgCiAgICAgICAgICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0gZWxzZSB7IHJldHVybiBmYWxzZTsgfQogICAgfQogICAgCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICAvLyBtaXRpZ2F0ZXMgdGhlIEVSQzIwIHNwZW5kL2FwcHJvdmFsIHJhY2UgY29uZGl0aW9uCiAgICAgICAgaWYgKF92YWx1ZSAhPSAwICYmIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdICE9IDApIHsgcmV0dXJuIGZhbHNlOyB9CiAgICAgICAgCiAgICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CiAgICAgICAgCiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHJldHVybiBhbGxvd2VkW19vd25lcl1bX3NwZW5kZXJdOwogICAgfQoKICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7CgogICAgZnVuY3Rpb24gZW5hYmxlUHVyY2hhc2luZygpIHsKICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lcikgeyB0aHJvdzsgfQoKICAgICAgICBwdXJjaGFzaW5nQWxsb3dlZCA9IHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gZGlzYWJsZVB1cmNoYXNpbmcoKSB7CiAgICAgICAgaWYgKG1zZy5zZW5kZXIgIT0gb3duZXIpIHsgdGhyb3c7IH0KCiAgICAgICAgcHVyY2hhc2luZ0FsbG93ZWQgPSBmYWxzZTsKICAgIH0KCiAgICBmdW5jdGlvbiB3aXRoZHJhd0ZvcmVpZ25Ub2tlbnMoYWRkcmVzcyBfdG9rZW5Db250cmFjdCkgcmV0dXJucyAoYm9vbCkgewogICAgICAgIGlmIChtc2cuc2VuZGVyICE9IG93bmVyKSB7IHRocm93OyB9CgogICAgICAgIEZvcmVpZ25Ub2tlbiB0b2tlbiA9IEZvcmVpZ25Ub2tlbihfdG9rZW5Db250cmFjdCk7CgogICAgICAgIHVpbnQyNTYgYW1vdW50ID0gdG9rZW4uYmFsYW5jZU9mKGFkZHJlc3ModGhpcykpOwogICAgICAgIHJldHVybiB0b2tlbi50cmFuc2Zlcihvd25lciwgYW1vdW50KTsKICAgIH0KCiAgICBmdW5jdGlvbiBnZXRTdGF0cygpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYsIHVpbnQyNTYsIHVpbnQyNTYsIGJvb2wpIHsKICAgICAgICByZXR1cm4gKHRvdGFsQ29udHJpYnV0aW9uLCB0b3RhbFN1cHBseSwgdG90YWxCb251c1Rva2Vuc0lzc3VlZCwgcHVyY2hhc2luZ0FsbG93ZWQpOwogICAgfQoKICAgIGZ1bmN0aW9uKCkgcGF5YWJsZSB7CiAgICAgICAgaWYgKCFwdXJjaGFzaW5nQWxsb3dlZCkgeyB0aHJvdzsgfQogICAgICAgIAogICAgICAgIGlmIChtc2cudmFsdWUgPT0gMCkgeyByZXR1cm47IH0KCiAgICAgICAgb3duZXIudHJhbnNmZXIobXNnLnZhbHVlKTsKICAgICAgICB0b3RhbENvbnRyaWJ1dGlvbiArPSBtc2cudmFsdWU7CgogICAgICAgIHVpbnQyNTYgdG9rZW5zSXNzdWVkID0gKG1zZy52YWx1ZSAqIDEwMDApOwoKICAgICAgICBpZiAobXNnLnZhbHVlID49IDEwIGZpbm5leSkgewogICAgICAgICAgICB0b2tlbnNJc3N1ZWQgKz0gdG90YWxDb250cmlidXRpb247CgogICAgICAgICAgICBieXRlczIwIGJvbnVzSGFzaCA9IHJpcGVtZDE2MChibG9jay5jb2luYmFzZSwgYmxvY2subnVtYmVyLCBibG9jay50aW1lc3RhbXApOwogICAgICAgICAgICBpZiAoYm9udXNIYXNoWzBdID09IDApIHsKICAgICAgICAgICAgICAgIHVpbnQ4IGJvbnVzTXVsdGlwbGllciA9CiAgICAgICAgICAgICAgICAgICAgKChib251c0hhc2hbMV0gJiAweDAxICE9IDApID8gMSA6IDApICsgKChib251c0hhc2hbMV0gJiAweDAyICE9IDApID8gMSA6IDApICsKICAgICAgICAgICAgICAgICAgICAoKGJvbnVzSGFzaFsxXSAmIDB4MDQgIT0gMCkgPyAxIDogMCkgKyAoKGJvbnVzSGFzaFsxXSAmIDB4MDggIT0gMCkgPyAxIDogMCkgKwogICAgICAgICAgICAgICAgICAgICgoYm9udXNIYXNoWzFdICYgMHgxMCAhPSAwKSA/IDEgOiAwKSArICgoYm9udXNIYXNoWzFdICYgMHgyMCAhPSAwKSA/IDEgOiAwKSArCiAgICAgICAgICAgICAgICAgICAgKChib251c0hhc2hbMV0gJiAweDQwICE9IDApID8gMSA6IDApICsgKChib251c0hhc2hbMV0gJiAweDgwICE9IDApID8gMSA6IDApOwogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB1aW50MjU2IGJvbnVzVG9rZW5zSXNzdWVkID0gKG1zZy52YWx1ZSAqIDEwMDApICogYm9udXNNdWx0aXBsaWVyOwogICAgICAgICAgICAgICAgdG9rZW5zSXNzdWVkICs9IGJvbnVzVG9rZW5zSXNzdWVkOwoKICAgICAgICAgICAgICAgIHRvdGFsQm9udXNUb2tlbnNJc3N1ZWQgKz0gYm9udXNUb2tlbnNJc3N1ZWQ7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHRvdGFsU3VwcGx5ICs9IHRva2Vuc0lzc3VlZDsKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSArPSB0b2tlbnNJc3N1ZWQ7CiAgICAgICAgCiAgICAgICAgVHJhbnNmZXIoYWRkcmVzcyh0aGlzKSwgbXNnLnNlbmRlciwgdG9rZW5zSXNzdWVkKTsKICAgIH0KfQ=='.
	

]
