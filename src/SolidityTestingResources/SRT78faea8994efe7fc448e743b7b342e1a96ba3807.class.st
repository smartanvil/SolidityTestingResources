Class {
	#name : #SRT78faea8994efe7fc448e743b7b342e1a96ba3807,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT78faea8994efe7fc448e743b7b342e1a96ba3807 >> base64 [
	^ ''.
	

]
