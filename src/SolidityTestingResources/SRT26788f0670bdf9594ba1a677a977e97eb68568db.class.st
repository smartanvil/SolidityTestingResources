Class {
	#name : #SRT26788f0670bdf9594ba1a677a977e97eb68568db,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT26788f0670bdf9594ba1a677a977e97eb68568db >> base64 [
	^ ''.
	

]
