Class {
	#name : #SRTeF828938155CAbfE83aFfbe726b55D188B4F45c0,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTeF828938155CAbfE83aFfbe726b55D188B4F45c0 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTU7Cgpjb250cmFjdCBTYWZlTWF0aCB7CgoKICAgIGZ1bmN0aW9uIHNhZmVBZGQodWludDI1NiB4LCB1aW50MjU2IHkpIGludGVybmFsIHJldHVybnModWludDI1NikgewogICAgICB1aW50MjU2IHogPSB4ICsgeTsKICAgICAgYXNzZXJ0KCh6ID49IHgpICYmICh6ID49IHkpKTsKICAgICAgcmV0dXJuIHo7CiAgICB9CgogICAgZnVuY3Rpb24gc2FmZVN1YnRyYWN0KHVpbnQyNTYgeCwgdWludDI1NiB5KSBpbnRlcm5hbCByZXR1cm5zKHVpbnQyNTYpIHsKICAgICAgYXNzZXJ0KHggPj0geSk7CiAgICAgIHVpbnQyNTYgeiA9IHggLSB5OwogICAgICByZXR1cm4gejsKICAgIH0KCiAgICBmdW5jdGlvbiBzYWZlTXVsdCh1aW50MjU2IHgsIHVpbnQyNTYgeSkgaW50ZXJuYWwgcmV0dXJucyh1aW50MjU2KSB7CiAgICAgIHVpbnQyNTYgeiA9IHggKiB5OwogICAgICBhc3NlcnQoKHggPT0gMCl8fCh6L3ggPT0geSkpOwogICAgICByZXR1cm4gejsKICAgIH0KCn0KCmNvbnRyYWN0IFRva2VuIHsKICAgIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5OwogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpOwogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKTsKICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7Cn0KCgovKiAgRVJDIDIwIHRva2VuICovCmNvbnRyYWN0IFN0YW5kYXJkVG9rZW4gaXMgVG9rZW4gewoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgIGlmIChiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfdmFsdWUgJiYgX3ZhbHVlID4gMCkgewogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdIC09IF92YWx1ZTsKICAgICAgICBiYWxhbmNlc1tfdG9dICs9IF92YWx1ZTsKICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgIGlmIChiYWxhbmNlc1tfZnJvbV0gPj0gX3ZhbHVlICYmIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID49IF92YWx1ZSAmJiBfdmFsdWUgPiAwKSB7CiAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfdmFsdWU7CiAgICAgICAgYmFsYW5jZXNbX2Zyb21dIC09IF92YWx1ZTsKICAgICAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgewogICAgICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogICAgfQoKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpIHsKICAgICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07CiAgICB9CgogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsKfQoKY29udHJhY3QgQVBQVG9rZW4gaXMgU3RhbmRhcmRUb2tlbiwgU2FmZU1hdGggewoKICAgIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgbmFtZSA9ICJBUFBJQU4iOwogICAgc3RyaW5nIHB1YmxpYyBjb25zdGFudCBzeW1ib2wgPSAiQVBQIjsKICAgIHVpbnQyNTYgcHVibGljIGNvbnN0YW50IGRlY2ltYWxzID0gMTg7CiAgICBzdHJpbmcgcHVibGljIHZlcnNpb24gPSAiMS4wIjsKCiAgICBhZGRyZXNzIHB1YmxpYyBldGhGdW5kRGVwb3NpdDsKICAgIGFkZHJlc3MgcHVibGljIGFwcEZ1bmREZXBvc2l0OwoKICAgIGJvb2wgcHVibGljIGlzRmluYWxpemVkOwogICAgdWludDI1NiBwdWJsaWMgZnVuZGluZ1N0YXJ0QmxvY2s7CiAgICB1aW50MjU2IHB1YmxpYyBmdW5kaW5nRW5kQmxvY2s7CiAgICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCBhcHBGdW5kID0gMzAwMCAqICgxMCoqMykgKiAxMCoqZGVjaW1hbHM7CgogICAgZnVuY3Rpb24gdG9rZW5SYXRlKCkgY29uc3RhbnQgcmV0dXJucyh1aW50KSB7CiAgICAgICAgaWYgKGJsb2NrLm51bWJlcj49ZnVuZGluZ1N0YXJ0QmxvY2sgJiYgYmxvY2subnVtYmVyPGZ1bmRpbmdTdGFydEJsb2NrKzIzMzMzKSByZXR1cm4gMzYwOwogICAgICAgIGlmIChibG9jay5udW1iZXI+PWZ1bmRpbmdTdGFydEJsb2NrICYmIGJsb2NrLm51bWJlcjxmdW5kaW5nU3RhcnRCbG9jaysyMzMzMykgcmV0dXJuIDMwMDsKICAgICAgICByZXR1cm4gMjUwOwogICAgfQoKICAgIHVpbnQyNTYgcHVibGljIGNvbnN0YW50IHRva2VuQ3JlYXRpb25DYXAgPSAgNy41ICogKDEwKio2KSAqIDEwKipkZWNpbWFsczsgLy8vIDQuNSBNaWxsaW9uIFRva2VucyBNYXgKCgogICAgLy8gZXZlbnRzCiAgICBldmVudCBDcmVhdGVBUFAoYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwoKICAgIC8vIGNvbnN0cnVjdG9yCiAgICBmdW5jdGlvbiBBUFBUb2tlbigKICAgICAgICBhZGRyZXNzIF9ldGhGdW5kRGVwb3NpdCwKICAgICAgICBhZGRyZXNzIF9hcHBGdW5kRGVwb3NpdCwKICAgICAgICB1aW50MjU2IF9mdW5kaW5nU3RhcnRCbG9jaywKICAgICAgICB1aW50MjU2IF9mdW5kaW5nRW5kQmxvY2spCiAgICB7CiAgICAgIGlzRmluYWxpemVkID0gZmFsc2U7CiAgICAgIGV0aEZ1bmREZXBvc2l0ID0gX2V0aEZ1bmREZXBvc2l0OwogICAgICBhcHBGdW5kRGVwb3NpdCA9IF9hcHBGdW5kRGVwb3NpdDsKICAgICAgZnVuZGluZ1N0YXJ0QmxvY2sgPSBfZnVuZGluZ1N0YXJ0QmxvY2s7CiAgICAgIGZ1bmRpbmdFbmRCbG9jayA9IF9mdW5kaW5nRW5kQmxvY2s7CiAgICAgIHRvdGFsU3VwcGx5ID0gYXBwRnVuZDsKICAgICAgYmFsYW5jZXNbYXBwRnVuZERlcG9zaXRdID0gYXBwRnVuZDsKICAgICAgQ3JlYXRlQVBQKGFwcEZ1bmREZXBvc2l0LCBhcHBGdW5kKTsKICAgIH0KCgogICAgZnVuY3Rpb24gbWFrZVRva2VucygpIHBheWFibGUgIHsKICAgICAgaWYgKGlzRmluYWxpemVkKSB0aHJvdzsKICAgICAgaWYgKGJsb2NrLm51bWJlciA8IGZ1bmRpbmdTdGFydEJsb2NrKSB0aHJvdzsKICAgICAgaWYgKGJsb2NrLm51bWJlciA+IGZ1bmRpbmdFbmRCbG9jaykgdGhyb3c7CiAgICAgIGlmIChtc2cudmFsdWUgPT0gMCkgdGhyb3c7CgogICAgICB1aW50MjU2IHRva2VucyA9IHNhZmVNdWx0KG1zZy52YWx1ZSwgdG9rZW5SYXRlKCkpOwoKICAgICAgdWludDI1NiBjaGVja2VkU3VwcGx5ID0gc2FmZUFkZCh0b3RhbFN1cHBseSwgdG9rZW5zKTsKCiAgICAgIGlmICh0b2tlbkNyZWF0aW9uQ2FwIDwgY2hlY2tlZFN1cHBseSkgdGhyb3c7CgogICAgICB0b3RhbFN1cHBseSA9IGNoZWNrZWRTdXBwbHk7CiAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdICs9IHRva2VuczsKICAgICAgQ3JlYXRlQVBQKG1zZy5zZW5kZXIsIHRva2Vucyk7CiAgICB9CgogICAgZnVuY3Rpb24oKSBwYXlhYmxlIHsKICAgICAgICBtYWtlVG9rZW5zKCk7CiAgICB9CgogICAgZnVuY3Rpb24gZmluYWxpemUoKSBleHRlcm5hbCB7CiAgICAgIGlmIChpc0ZpbmFsaXplZCkgdGhyb3c7CiAgICAgIGlmIChtc2cuc2VuZGVyICE9IGV0aEZ1bmREZXBvc2l0KSB0aHJvdzsKCiAgICAgIGlmKGJsb2NrLm51bWJlciA8PSBmdW5kaW5nRW5kQmxvY2sgJiYgdG90YWxTdXBwbHkgIT0gdG9rZW5DcmVhdGlvbkNhcCkgdGhyb3c7CgogICAgICBpc0ZpbmFsaXplZCA9IHRydWU7CiAgICAgIGlmKCFldGhGdW5kRGVwb3NpdC5zZW5kKHRoaXMuYmFsYW5jZSkpIHRocm93OwogICAgfQoKCgp9'.
	

]
