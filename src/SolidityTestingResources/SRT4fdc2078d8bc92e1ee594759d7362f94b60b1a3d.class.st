Class {
	#name : #SRT4fdc2078d8bc92e1ee594759d7362f94b60b1a3d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT4fdc2078d8bc92e1ee594759d7362f94b60b1a3d >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7Ci8qCiAqIFRoaXMgaXMgYSBkaXN0cmlidXRlZCBsb3R0ZXJ5IHRoYXQgY2hvb3NlcyByYW5kb20gYWRkcmVzc2VzIGFzIGx1Y2t5IGFkZHJlc3Nlcy4gSWYgdGhlc2UKICogcGFydGljaXBhdGUsIHRoZXkgZ2V0IHRoZSBqYWNrcG90OiAxLjkgdGltZXMgdGhlIHByaWNlIG9mIHRoZWlyIGJldC4KICogT2YgY291cnNlIG9uZSBhZGRyZXNzIGNhbiBvbmx5IHdpbiBvbmNlLiBUaGUgb3duZXIgcmVndWxhcmx5IHJlc2VlZHMgdGhlIHNlY3JldAogKiBzZWVkIG9mIHRoZSBjb250cmFjdCAoYmFzZWQgb24gd2hpY2ggdGhlIGx1Y2t5IGFkZHJlc3NlcyBhcmUgY2hvc2VuKSwgc28gaWYgeW91IGRpZCBub3Qgd2luLAogKiBqdXN0IHdhaXQgZm9yIGEgcmVzZWVkIGFuZCB0cnkgYWdhaW4hCiAqCiAqIEphY2twb3QgY2hhbmNlOiAgIDUwJQogKiBUaWNrZXQgcHJpY2U6IEFueXRoaW5nIGxhcmdlciB0aGFuIChvciBlcXVhbCB0bykgMC4xIEVUSAogKiBKYWNrcG90IHNpemU6IDEuOSB0aW1lcyB0aGUgdGlja2V0IHByaWNlCiAqCiAqIEhPVyBUTyBQQVJUSUNJUEFURTogSnVzdCBzZW5kIGFueSBhbW91bnQgZ3JlYXRlciB0aGFuIChvciBlcXVhbCB0bykgMC4xIEVUSCB0byB0aGUgY29udHJhY3QncyBhZGRyZXNzCiAqIEtlZXAgaW4gbWluZCB0aGF0IHlvdXIgYWRkcmVzcyBjYW4gb25seSB3aW4gb25jZQogKgogKiBJZiB0aGUgY29udHJhY3QgZG9lc24ndCBoYXZlIGVub3VnaCBFVEggdG8gcGF5IHRoZSBqYWNrcG90LCBpdCBzZW5kcyB0aGUgd2hvbGUgYmFsYW5jZS4KICoKICogRXhhbXBsZTogRm9yIGVhY2ggYWRkcmVzcywgYSByYW5kb20gbnVtYmVyIGlzIGdlbmVyYXRlZCwgZWl0aGVyIDAgb3IgMS4gVGhpcyBudW1iZXIgaXMgdGhlbiBjb21wYXJlZAogKiB3aXRoIHRoZSBMdWNreU51bWJlciAtIGEgY29uc3RhbnQgMS4gSWYgdGhleSBhcmUgZXF1YWwsIHRoZSBjb250cmFjdCB3aWxsIGluc3RhbnRseSBzZW5kIHlvdSB0aGUgamFja3BvdDoKICogeW91ciBiZXQgbXVsdGlwbGllZCBieSAxLjkgKEhvdXNlIGVkZ2Ugb2YgMC4xKQoqLwoKY29udHJhY3QgT3BlbkFkZHJlc3NMb3R0ZXJ5ewogICAgc3RydWN0IFNlZWRDb21wb25lbnRzewogICAgICAgIHVpbnQgY29tcG9uZW50MTsKICAgICAgICB1aW50IGNvbXBvbmVudDI7CiAgICAgICAgdWludCBjb21wb25lbnQzOwogICAgICAgIHVpbnQgY29tcG9uZW50NDsKICAgIH0KICAgIAogICAgYWRkcmVzcyBvd25lcjsgLy9hZGRyZXNzIG9mIHRoZSBvd25lcgogICAgdWludCBwcml2YXRlIHNlY3JldFNlZWQ7IC8vc2VlZCB1c2VkIHRvIGNhbGN1bGF0ZSBudW1iZXIgb2YgYW4gYWRkcmVzcwogICAgdWludCBwcml2YXRlIGxhc3RSZXNlZWQ7IC8vbGFzdCByZXNlZWQgLSB1c2VkIHRvIGF1dG9tYXRpY2FsbHkgcmVzZWVkIHRoZSBjb250cmFjdCBldmVyeSAxMDAwIGJsb2NrcwogICAgdWludCBMdWNreU51bWJlciA9IDE7IC8vaWYgdGhlIG51bWJlciBvZiBhbiBhZGRyZXNzIGVxdWFscyAxLCBpdCB3aW5zCiAgICAgICAgCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IGJvb2wpIHdpbm5lcjsgLy9rZWVwaW5nIHRyYWNrIG9mIGFkZHJlc3NlcyB0aGF0IGhhdmUgYWxyZWFkeSB3b24KICAgIAogICAgZnVuY3Rpb24gT3BlbkFkZHJlc3NMb3R0ZXJ5KCkgewogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgICAgICByZXNlZWQoU2VlZENvbXBvbmVudHMoKHVpbnQpKGJsb2NrLmNvaW5iYXNlKSwgYmxvY2suZGlmZmljdWx0eSwgYmxvY2suZ2FzbGltaXQsIGJsb2NrLnRpbWVzdGFtcCkpOyAvL2dlbmVyYXRlIGEgcXVhbGl0eSByYW5kb20gc2VlZAogICAgfQogICAgCiAgICBmdW5jdGlvbiBwYXJ0aWNpcGF0ZSgpIHBheWFibGUgewogICAgICAgIGlmKG1zZy52YWx1ZTwwLjEgZXRoZXIpCiAgICAgICAgICAgIHJldHVybjsgLy92ZXJpZnkgdGlja2V0IHByaWNlCiAgICAgICAgCiAgICAgICAgLy8gbWFrZSBzdXJlIGhlIGhhc24ndCB3b24gYWxyZWFkeQogICAgICAgIHJlcXVpcmUod2lubmVyW21zZy5zZW5kZXJdID09IGZhbHNlKTsKICAgICAgICAKICAgICAgICBpZihsdWNreU51bWJlck9mQWRkcmVzcyhtc2cuc2VuZGVyKSA9PSBMdWNreU51bWJlcil7IC8vY2hlY2sgaWYgaXQgZXF1YWxzIDEKICAgICAgICAgICAgd2lubmVyW21zZy5zZW5kZXJdID0gdHJ1ZTsgLy8gZXZlcnkgYWRkcmVzcyBjYW4gb25seSB3aW4gb25jZQogICAgICAgICAgICAKICAgICAgICAgICAgdWludCB3aW49KG1zZy52YWx1ZS8xMCkqMTk7IC8vd2luID0gMS45IHRpbWVzIHRoZSB0aWNrZXQgcHJpY2UKICAgICAgICAgICAgCiAgICAgICAgICAgIGlmKHdpbj50aGlzLmJhbGFuY2UpIC8vaWYgdGhlIGJhbGFuY2UgaXNudCBzdWZmaWNpZW50Li4uCiAgICAgICAgICAgICAgICB3aW49dGhpcy5iYWxhbmNlOyAvLy4uLnNlbmQgZXZlcnl0aGluZyB3ZSd2ZSBnb3QKICAgICAgICAgICAgbXNnLnNlbmRlci50cmFuc2Zlcih3aW4pOwogICAgICAgIH0KICAgICAgICAKICAgICAgICBpZihibG9jay5udW1iZXItbGFzdFJlc2VlZD4xMDAwKSAvL3Jlc2VlZCBpZiBuZWVkZWQKICAgICAgICAgICAgcmVzZWVkKFNlZWRDb21wb25lbnRzKCh1aW50KShibG9jay5jb2luYmFzZSksIGJsb2NrLmRpZmZpY3VsdHksIGJsb2NrLmdhc2xpbWl0LCBibG9jay50aW1lc3RhbXApKTsgLy9nZW5lcmF0ZSBhIHF1YWxpdHkgcmFuZG9tIHNlZWQKICAgIH0KICAgIAogICAgZnVuY3Rpb24gbHVja3lOdW1iZXJPZkFkZHJlc3MoYWRkcmVzcyBhZGRyKSBjb25zdGFudCByZXR1cm5zKHVpbnQgbil7CiAgICAgICAgLy8gY2FsY3VsYXRlIHRoZSBudW1iZXIgb2YgY3VycmVudCBhZGRyZXNzIC0gNTAlIGNoYW5jZQogICAgICAgIG4gPSB1aW50KGtlY2NhazI1Nih1aW50KGFkZHIpLCBzZWNyZXRTZWVkKVswXSkgJSAyOyAvL21vZCAyIHJldHVybnMgZWl0aGVyIDAgb3IgMQogICAgfQogICAgCiAgICBmdW5jdGlvbiByZXNlZWQoU2VlZENvbXBvbmVudHMgY29tcG9uZW50cykgaW50ZXJuYWwgewogICAgICAgIHNlY3JldFNlZWQgPSB1aW50MjU2KGtlY2NhazI1NigKICAgICAgICAgICAgY29tcG9uZW50cy5jb21wb25lbnQxLAogICAgICAgICAgICBjb21wb25lbnRzLmNvbXBvbmVudDIsCiAgICAgICAgICAgIGNvbXBvbmVudHMuY29tcG9uZW50MywKICAgICAgICAgICAgY29tcG9uZW50cy5jb21wb25lbnQ0CiAgICAgICAgKSk7IC8vaGFzaCB0aGUgaW5jb21pbmcgcGFyYW1ldGVycyBhbmQgdXNlIHRoZSBoYXNoIHRvIChyZSlpbml0aWFsaXplIHRoZSBzZWVkCiAgICAgICAgbGFzdFJlc2VlZCA9IGJsb2NrLm51bWJlcjsKICAgIH0KICAgIAogICAgZnVuY3Rpb24ga2lsbCgpIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXI9PW93bmVyKTsKICAgICAgICAKICAgICAgICBzZWxmZGVzdHJ1Y3QobXNnLnNlbmRlcik7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGZvcmNlUmVzZWVkKCkgeyAvL3Jlc2VlZCBpbml0aWF0ZWQgYnkgdGhlIG93bmVyIC0gZm9yIHRlc3RpbmcgcHVycG9zZXMKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXI9PW93bmVyKTsKICAgICAgICAKICAgICAgICBTZWVkQ29tcG9uZW50cyBzOwogICAgICAgIHMuY29tcG9uZW50MSA9IHVpbnQobXNnLnNlbmRlcik7CiAgICAgICAgcy5jb21wb25lbnQyID0gdWludDI1NihibG9jay5ibG9ja2hhc2goYmxvY2subnVtYmVyIC0gMSkpOwogICAgICAgIHMuY29tcG9uZW50MyA9IGJsb2NrLmRpZmZpY3VsdHkqKHVpbnQpKGJsb2NrLmNvaW5iYXNlKTsKICAgICAgICBzLmNvbXBvbmVudDQgPSB0eC5nYXNwcmljZSAqIDc7CiAgICAgICAgCiAgICAgICAgcmVzZWVkKHMpOyAvL3Jlc2VlZAogICAgfQogICAgCiAgICBmdW5jdGlvbiAoKSBwYXlhYmxlIHsgLy9pZiBzb21lb25lIHNlbmRzIG1vbmV5IHdpdGhvdXQgYW55IGZ1bmN0aW9uIGNhbGwsIGp1c3QgYXNzdW1lIGhlIHdhbnRlZCB0byBwYXJ0aWNpcGF0ZQogICAgICAgIGlmKG1zZy52YWx1ZT49MC4xIGV0aGVyICYmIG1zZy5zZW5kZXIhPW93bmVyKSAvL293bmVyIGNhbid0IHBhcnRpY2lwYXRlLCBoZSBjYW4gb25seSBmdW5kIHRoZSBqYWNrcG90CiAgICAgICAgICAgIHBhcnRpY2lwYXRlKCk7CiAgICB9Cgp9'.
	

]
