Class {
	#name : #SRT0747af71e2034bc2d2fcad388a264f5ccdff505c,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT0747af71e2034bc2d2fcad388a264f5ccdff505c >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4gMC40IC4xMTsKCgoKY29udHJhY3QgdG9rZW5SZWNpcGllbnQgewoKICAgIGZ1bmN0aW9uIHJlY2VpdmVBcHByb3ZhbChhZGRyZXNzIF9mcm9tLCB1aW50MjU2IF92YWx1ZSwgYWRkcmVzcyBfdG9rZW4sIGJ5dGVzIF9leHRyYURhdGEpOwoKfQoKCgoKCmNvbnRyYWN0IEVSQzIwIHsKCgoKICAgIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgY29uc3RhbnQgcmV0dXJucyh1aW50IF90b3RhbFN1cHBseSk7CgoKCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyB3aG8pIGNvbnN0YW50IHJldHVybnModWludDI1Nik7CgoKCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIHRvLCB1aW50IHZhbHVlKSByZXR1cm5zKGJvb2wgb2spOwoKCgogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgZnJvbSwgYWRkcmVzcyB0bywgdWludCB2YWx1ZSkgcmV0dXJucyhib29sIG9rKTsKCgoKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBzcGVuZGVyLCB1aW50IHZhbHVlKSByZXR1cm5zKGJvb2wgb2spOwoKCgogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3Mgb3duZXIsIGFkZHJlc3Mgc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyh1aW50KTsKCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50IHZhbHVlKTsKCiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBzcGVuZGVyLCB1aW50IHZhbHVlKTsKCgoKfQoKCgoKCiAKCmNvbnRyYWN0IEJsb2NrVmVudHVyZUNvaW4gaXMgRVJDMjAgewoKCgoKCiAgICBzdHJpbmcgcHVibGljIHN0YW5kYXJkID0gJ0JWQyAxLjEnOwoKICAgIHN0cmluZyBwdWJsaWMgbmFtZTsKCiAgICBzdHJpbmcgcHVibGljIHN5bWJvbDsKCiAgICB1aW50OCBwdWJsaWMgZGVjaW1hbHM7CgogICAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7CgogICAgCgogICAgCgogICAgCgogICAKCiAgICBtYXBwaW5nKCBhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBiYWxhbmNlT2Y7CgogICAgbWFwcGluZyggdWludCA9PiBhZGRyZXNzKSBwdWJsaWMgYWNjb3VudEluZGV4OwoKICAgIHVpbnQgYWNjb3VudENvdW50OwoKICAgIAoKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikpIHB1YmxpYyBhbGxvd2FuY2U7CgogICAKCiAgICAKCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHZhbHVlKTsKCiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgc3BlbmRlciwgdWludCB2YWx1ZSk7CgogICAgZXZlbnQgTWVzc2FnZSAoIGFkZHJlc3MgYSwgdWludDI1NiBhbW91bnQgKTsKCiAgICBldmVudCBCdXJuKGFkZHJlc3MgaW5kZXhlZCBmcm9tLCB1aW50MjU2IHZhbHVlKTsKCgoKCgogICAKCiAgICAKCiAgICBmdW5jdGlvbiBCbG9ja1ZlbnR1cmVDb2luKCkgewoKICAgICAgICAgCgogICAgICAgIHVpbnQgc3VwcGx5ID0gMTAwMDAwMDAwMDAwMDAwMDA7IAoKICAgICAgICBhcHBlbmRUb2tlbkhvbGRlcnMoIG1zZy5zZW5kZXIgKTsKCiAgICAgICAgYmFsYW5jZU9mW21zZy5zZW5kZXJdID0gIHN1cHBseTsKCiAgICAgICAgdG90YWxTdXBwbHkgPSBzdXBwbHk7IAoKICAgICAgICBuYW1lID0gIkJsb2NrVmVudHVyZUNvaW4iOyAKCiAgICAgICAgc3ltYm9sID0gIkJWQyI7IAoKICAgICAgICBkZWNpbWFscyA9IDg7IAoKICAgICAgIAoKIAoKICAgICAgICAKCiAgCgogICAgfQoKICAgIAoKICAKCiAgCgogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgdG9rZW5Ib2xkZXIpIGNvbnN0YW50IHJldHVybnModWludDI1NikgewoKCgogICAgICAgIHJldHVybiBiYWxhbmNlT2ZbdG9rZW5Ib2xkZXJdOwoKICAgIH0KCgoKICAgIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgY29uc3RhbnQgcmV0dXJucyh1aW50MjU2KSB7CgoKCiAgICAgICAgcmV0dXJuIHRvdGFsU3VwcGx5OwoKICAgIH0KCgoKICAgIGZ1bmN0aW9uIGdldEFjY291bnRDb3VudCgpIGNvbnN0YW50IHJldHVybnModWludDI1NikgewoKCgogICAgICAgIHJldHVybiBhY2NvdW50Q291bnQ7CgogICAgfQoKCgogICAgZnVuY3Rpb24gZ2V0QWRkcmVzcyh1aW50IHNsb3QpIGNvbnN0YW50IHJldHVybnMoYWRkcmVzcykgewoKCgogICAgICAgIHJldHVybiBhY2NvdW50SW5kZXhbc2xvdF07CgoKCiAgICB9CgoKCiAgICAKCiAgICBmdW5jdGlvbiBhcHBlbmRUb2tlbkhvbGRlcnMoYWRkcmVzcyB0b2tlbkhvbGRlcikgcHJpdmF0ZSB7CgoKCiAgICAgICAgaWYgKGJhbGFuY2VPZlt0b2tlbkhvbGRlcl0gPT0gMCkgewoKICAgICAgICAgIAoKICAgICAgICAgICAgYWNjb3VudEluZGV4W2FjY291bnRDb3VudF0gPSB0b2tlbkhvbGRlcjsKCiAgICAgICAgICAgIGFjY291bnRDb3VudCsrOwoKICAgICAgICB9CgoKCiAgICB9CgoKCiAgICAKCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMoYm9vbCBvaykgewoKICAgICAgICBpZiAoX3RvID09IDB4MCkgdGhyb3c7IAoKICAgICAgICBpZiAoYmFsYW5jZU9mW21zZy5zZW5kZXJdIDwgX3ZhbHVlKSB0aHJvdzsgCgogICAgICAgIGlmIChiYWxhbmNlT2ZbX3RvXSArIF92YWx1ZSA8IGJhbGFuY2VPZltfdG9dKSB0aHJvdzsKCiAgICAgICAgCgogICAgICAgIGFwcGVuZFRva2VuSG9sZGVycyhfdG8pOwoKICAgICAgICBiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOyAKCiAgICAgICAgYmFsYW5jZU9mW190b10gKz0gX3ZhbHVlOyAKCiAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOyAKCiAgICAKCiAgICAgICAgCgogICAgICAgIHJldHVybiB0cnVlOwoKICAgIH0KCiAgICAKCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKQoKICAgIHJldHVybnMoYm9vbCBzdWNjZXNzKSB7CgogICAgICAgIGFsbG93YW5jZVttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CgogICAgICAgIEFwcHJvdmFsKCBtc2cuc2VuZGVyICxfc3BlbmRlciwgX3ZhbHVlKTsKCiAgICAgICAgcmV0dXJuIHRydWU7CgogICAgfQoKCgogCgogICAgZnVuY3Rpb24gYXBwcm92ZUFuZENhbGwoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUsIGJ5dGVzIF9leHRyYURhdGEpCgogICAgcmV0dXJucyhib29sIHN1Y2Nlc3MpIHsKCiAgICAgICAgdG9rZW5SZWNpcGllbnQgc3BlbmRlciA9IHRva2VuUmVjaXBpZW50KF9zcGVuZGVyKTsKCiAgICAgICAgaWYgKGFwcHJvdmUoX3NwZW5kZXIsIF92YWx1ZSkpIHsKCiAgICAgICAgICAgIHNwZW5kZXIucmVjZWl2ZUFwcHJvdmFsKG1zZy5zZW5kZXIsIF92YWx1ZSwgdGhpcywgX2V4dHJhRGF0YSk7CgogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKCiAgICAgICAgfQoKICAgIH0KCgoKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyh1aW50MjU2IHJlbWFpbmluZykgewoKICAgICAgICByZXR1cm4gYWxsb3dhbmNlW19vd25lcl1bX3NwZW5kZXJdOwoKICAgIH0KCgoKIAoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMoYm9vbCBzdWNjZXNzKSB7CgogICAgICAgIGlmIChfdG8gPT0gMHgwKSB0aHJvdzsgIAoKICAgICAgICBpZiAoYmFsYW5jZU9mW19mcm9tXSA8IF92YWx1ZSkgdGhyb3c7ICAKCiAgICAgICAgaWYgKGJhbGFuY2VPZltfdG9dICsgX3ZhbHVlIDwgYmFsYW5jZU9mW190b10pIHRocm93OyAgCgogICAgICAgIGlmIChfdmFsdWUgPiBhbGxvd2FuY2VbX2Zyb21dW21zZy5zZW5kZXJdKSB0aHJvdzsgCgogICAgICAgIGFwcGVuZFRva2VuSG9sZGVycyhfdG8pOwoKICAgICAgICBiYWxhbmNlT2ZbX2Zyb21dIC09IF92YWx1ZTsgCgogICAgICAgIGJhbGFuY2VPZltfdG9dICs9IF92YWx1ZTsgCgogICAgICAgIGFsbG93YW5jZVtfZnJvbV1bbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOwoKICAgICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwoKICAgICAgIAoKICAgICAgICByZXR1cm4gdHJ1ZTsKCiAgICB9CgogIAoKICAgIGZ1bmN0aW9uIGJ1cm4odWludDI1NiBfdmFsdWUpIHJldHVybnMoYm9vbCBzdWNjZXNzKSB7CgogICAgICAgIGlmIChiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPCBfdmFsdWUpIHRocm93OyAKCiAgICAgICAgYmFsYW5jZU9mW21zZy5zZW5kZXJdIC09IF92YWx1ZTsgCgogICAgICAgIHRvdGFsU3VwcGx5IC09IF92YWx1ZTsgCgogICAgICAgIEJ1cm4obXNnLnNlbmRlciwgX3ZhbHVlKTsKCiAgICAgICAgcmV0dXJuIHRydWU7CgogICAgfQoKCgogICAgZnVuY3Rpb24gYnVybkZyb20oYWRkcmVzcyBfZnJvbSwgdWludDI1NiBfdmFsdWUpIHJldHVybnMoYm9vbCBzdWNjZXNzKSB7CgogICAgCgogICAgICAgIGlmIChiYWxhbmNlT2ZbX2Zyb21dIDwgX3ZhbHVlKSB0aHJvdzsgCgogICAgICAgIGlmIChfdmFsdWUgPiBhbGxvd2FuY2VbX2Zyb21dW21zZy5zZW5kZXJdKSB0aHJvdzsgCgogICAgICAgIGFsbG93YW5jZVtfZnJvbV1bbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOyAKCiAgICAgICAgYmFsYW5jZU9mW19mcm9tXSAtPSBfdmFsdWU7IAoKICAgICAgICB0b3RhbFN1cHBseSAtPSBfdmFsdWU7IAoKICAgICAgICBCdXJuKF9mcm9tLCBfdmFsdWUpOwoKICAgICAgICByZXR1cm4gdHJ1ZTsKCiAgICB9CgogICAgCgogIAoKIAoKICAgIAoKfQ=='.
	

]
