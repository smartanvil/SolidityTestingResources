Class {
	#name : #SRT8b807cf49ca593c4678811211df2992e64f2f3ef,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT8b807cf49ca593c4678811211df2992e64f2f3ef >> base64 [
	^ ''.
	

]
