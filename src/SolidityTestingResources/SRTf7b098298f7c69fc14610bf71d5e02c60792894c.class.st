Class {
	#name : #SRTf7b098298f7c69fc14610bf71d5e02c60792894c,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTf7b098298f7c69fc14610bf71d5e02c60792894c >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuODsKCgpjb250cmFjdCBTYWZlTWF0aCB7CgogIGZ1bmN0aW9uIGFzc2VydChib29sIGFzc2VydGlvbikgaW50ZXJuYWwgewogICAgaWYgKCFhc3NlcnRpb24pIHRocm93OwogIH0KCiAgZnVuY3Rpb24gc2FmZU11bCh1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgewogICAgdWludCBjID0gYSAqIGI7CiAgICBhc3NlcnQoYSA9PSAwIHx8IGMgLyBhID09IGIpOwogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBzYWZlRGl2KHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7CiAgICBhc3NlcnQoYiA+IDApOwogICAgdWludCBjID0gYSAvIGI7CiAgICBhc3NlcnQoYSA9PSBiICogYyArIGEgJSBiKTsKICAgIHJldHVybiBjOwogIH0KCn0KCgpjb250cmFjdCBTdGFuZGFyZFRva2VuUHJvdG9jb2wgewoKICAgIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiB0b3RhbFN1cHBseSkge30KICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7fQogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfcmVjaXBpZW50LCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7fQogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3JlY2lwaWVudCwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcykge30KICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcykge30KICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpIHt9CgogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3JlY2lwaWVudCwgdWludDI1NiBfdmFsdWUpOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7Cgp9CgoKY29udHJhY3QgU3RhbmRhcmRUb2tlbiBpcyBTdGFuZGFyZFRva2VuUHJvdG9jb2wgewoKICAgIG1vZGlmaWVyIHdoZW5fY2FuX3RyYW5zZmVyKGFkZHJlc3MgX2Zyb20sIHVpbnQyNTYgX3ZhbHVlKSB7CiAgICAgICAgaWYgKGJhbGFuY2VzW19mcm9tXSA+PSBfdmFsdWUpIF87CiAgICB9CgogICAgbW9kaWZpZXIgd2hlbl9jYW5fcmVjZWl2ZShhZGRyZXNzIF9yZWNpcGllbnQsIHVpbnQyNTYgX3ZhbHVlKSB7CiAgICAgICAgaWYgKGJhbGFuY2VzW19yZWNpcGllbnRdICsgX3ZhbHVlID4gYmFsYW5jZXNbX3JlY2lwaWVudF0pIF87CiAgICB9CgogICAgbW9kaWZpZXIgd2hlbl9pc19hbGxvd2VkKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX2RlbGVnYXRlLCB1aW50MjU2IF92YWx1ZSkgewogICAgICAgIGlmIChhbGxvd2VkW19mcm9tXVtfZGVsZWdhdGVdID49IF92YWx1ZSkgXzsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF9yZWNpcGllbnQsIHVpbnQyNTYgX3ZhbHVlKQogICAgICAgIHdoZW5fY2FuX3RyYW5zZmVyKG1zZy5zZW5kZXIsIF92YWx1ZSkKICAgICAgICB3aGVuX2Nhbl9yZWNlaXZlKF9yZWNpcGllbnQsIF92YWx1ZSkKICAgICAgICByZXR1cm5zIChib29sIG9fc3VjY2VzcykKICAgIHsKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgYmFsYW5jZXNbX3JlY2lwaWVudF0gKz0gX3ZhbHVlOwogICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF9yZWNpcGllbnQsIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3JlY2lwaWVudCwgdWludDI1NiBfdmFsdWUpCiAgICAgICAgd2hlbl9jYW5fdHJhbnNmZXIoX2Zyb20sIF92YWx1ZSkKICAgICAgICB3aGVuX2Nhbl9yZWNlaXZlKF9yZWNpcGllbnQsIF92YWx1ZSkKICAgICAgICB3aGVuX2lzX2FsbG93ZWQoX2Zyb20sIG1zZy5zZW5kZXIsIF92YWx1ZSkKICAgICAgICByZXR1cm5zIChib29sIG9fc3VjY2VzcykKICAgIHsKICAgICAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgYmFsYW5jZXNbX2Zyb21dIC09IF92YWx1ZTsKICAgICAgICBiYWxhbmNlc1tfcmVjaXBpZW50XSArPSBfdmFsdWU7CiAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF9yZWNpcGllbnQsIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpIHsKICAgICAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsKICAgIH0KCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIG9fc3VjY2VzcykgewogICAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBvX3JlbWFpbmluZykgewogICAgICAgIHJldHVybiBhbGxvd2VkW19vd25lcl1bX3NwZW5kZXJdOwogICAgfQoKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgYmFsYW5jZXM7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikpIGFsbG93ZWQ7CiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsKCn0KCmNvbnRyYWN0IEdVUFRva2VuIGlzIFN0YW5kYXJkVG9rZW4gewoKCS8vRklFTERTCglzdHJpbmcgcHVibGljIG5hbWUgPSAiR3VwcHkiOwogICAgc3RyaW5nIHB1YmxpYyBzeW1ib2wgPSAiR1VQIjsKICAgIHVpbnQgcHVibGljIGRlY2ltYWxzID0gMzsKCgkvL0NPTlNUQU5UUwoJdWludCBwdWJsaWMgY29uc3RhbnQgTE9DS09VVF9QRVJJT0QgPSAxIHllYXJzOyAvL3RpbWUgYWZ0ZXIgZW5kIGRhdGUgdGhhdCBpbGxpcXVpZCBHVVAgY2FuIGJlIHRyYW5zZmVycmVkCgoJLy9BU1NJR05FRCBJTiBJTklUSUFMSVpBVElPTgoJdWludCBwdWJsaWMgZW5kTWludGluZ1RpbWU7IC8vVGltZXN0YW1wIGFmdGVyIHdoaWNoIG5vIG1vcmUgdG9rZW5zIGNhbiBiZSBjcmVhdGVkCglhZGRyZXNzIHB1YmxpYyBtaW50ZXI7IC8vYWRkcmVzcyBvZiB0aGUgYWNjb3VudCB3aGljaCBtYXkgbWludCBuZXcgdG9rZW5zCgoJbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50KSBwdWJsaWMgaWxsaXF1aWRCYWxhbmNlOyAvL0JhbGFuY2Ugb2YgJ0Zyb3plbiBmdW5kcycKCgkvL01PRElGSUVSUwoJLy9DYW4gb25seSBiZSBjYWxsZWQgYnkgY29udHJpYnV0aW9uIGNvbnRyYWN0LgoJbW9kaWZpZXIgb25seV9taW50ZXIgewoJCWlmIChtc2cuc2VuZGVyICE9IG1pbnRlcikgdGhyb3c7CgkJXzsKCX0KCgkvLyBDYW4gb25seSBiZSBjYWxsZWQgaWYgaWxsaXF1aWQgdG9rZW5zIG1heSBiZSB0cmFuc2Zvcm1lZCBpbnRvIGxpcXVpZC4KCS8vIFRoaXMgaGFwcGVucyB3aGVuIGBMT0NLT1VUX1BFUklPRGAgb2YgdGltZSBwYXNzZXMgYWZ0ZXIgYGVuZE1pbnRpbmdUaW1lYC4KCW1vZGlmaWVyIHdoZW5fdGhhd2FibGUgewoJCWlmIChub3cgPCBlbmRNaW50aW5nVGltZSArIExPQ0tPVVRfUEVSSU9EKSB0aHJvdzsKCQlfOwoJfQoKCS8vIENhbiBvbmx5IGJlIGNhbGxlZCBpZiAobGlxdWlkKSB0b2tlbnMgbWF5IGJlIHRyYW5zZmVycmVkLiBIYXBwZW5zCgkvLyBpbW1lZGlhdGVseSBhZnRlciBgZW5kTWludGluZ1RpbWVgLgoJbW9kaWZpZXIgd2hlbl90cmFuc2ZlcmFibGUgewoJCWlmIChub3cgPCBlbmRNaW50aW5nVGltZSkgdGhyb3c7CgkJXzsKCX0KCgkvLyBDYW4gb25seSBiZSBjYWxsZWQgaWYgdGhlIGBjcm93ZGZ1bmRlcmAgaXMgYWxsb3dlZCB0byBtaW50IHRva2Vucy4gQW55CgkvLyB0aW1lIGJlZm9yZSBgZW5kTWludGluZ1RpbWVgLgoJbW9kaWZpZXIgd2hlbl9taW50YWJsZSB7CgkJaWYgKG5vdyA+PSBlbmRNaW50aW5nVGltZSkgdGhyb3c7CgkJXzsKCX0KCgkvLyBJbml0aWFsaXphdGlvbiBjb250cmFjdCBhc3NpZ25zIGFkZHJlc3Mgb2YgY3Jvd2RmdW5kIGNvbnRyYWN0IGFuZCBlbmQgdGltZS4KCWZ1bmN0aW9uIEdVUFRva2VuKGFkZHJlc3MgX21pbnRlciwgdWludCBfZW5kTWludGluZ1RpbWUpIHsKCQllbmRNaW50aW5nVGltZSA9IF9lbmRNaW50aW5nVGltZTsKCQltaW50ZXIgPSBfbWludGVyOwoJfQoKCS8vIENyZWF0ZSBuZXcgdG9rZW5zIHdoZW4gY2FsbGVkIGJ5IHRoZSBjcm93ZGZ1bmQgY29udHJhY3QuCgkvLyBPbmx5IGNhbGxhYmxlIGJlZm9yZSB0aGUgZW5kIHRpbWUuCglmdW5jdGlvbiBjcmVhdGVUb2tlbihhZGRyZXNzIF9yZWNpcGllbnQsIHVpbnQgX3ZhbHVlKQoJCXdoZW5fbWludGFibGUKCQlvbmx5X21pbnRlcgoJCXJldHVybnMgKGJvb2wgb19zdWNjZXNzKQoJewoJCWJhbGFuY2VzW19yZWNpcGllbnRdICs9IF92YWx1ZTsKCQl0b3RhbFN1cHBseSArPSBfdmFsdWU7CgkJcmV0dXJuIHRydWU7Cgl9CgoJLy8gQ3JlYXRlIGFuIGlsbGlxdWlkQmFsYW5jZSB3aGljaCBjYW5ub3QgYmUgdHJhZGVkIHVudGlsIGVuZCBvZiBsb2Nrb3V0IHBlcmlvZC4KCS8vIENhbiBvbmx5IGJlIGNhbGxlZCBieSBjcm93ZGZ1bmQgY29udHJhY3QgYmVmb3JlIHRoZSBlbmQgdGltZS4KCWZ1bmN0aW9uIGNyZWF0ZUlsbGlxdWlkVG9rZW4oYWRkcmVzcyBfcmVjaXBpZW50LCB1aW50IF92YWx1ZSkKCQl3aGVuX21pbnRhYmxlCgkJb25seV9taW50ZXIKCQlyZXR1cm5zIChib29sIG9fc3VjY2VzcykKCXsKCQlpbGxpcXVpZEJhbGFuY2VbX3JlY2lwaWVudF0gKz0gX3ZhbHVlOwoJCXRvdGFsU3VwcGx5ICs9IF92YWx1ZTsKCQlyZXR1cm4gdHJ1ZTsKCX0KCgkvLyBNYWtlIHNlbmRlcidzIGlsbGlxdWlkIGJhbGFuY2UgbGlxdWlkIHdoZW4gY2FsbGVkIGFmdGVyIGxvY2tvdXQgcGVyaW9kLgoJZnVuY3Rpb24gbWFrZUxpcXVpZCgpCgkJd2hlbl90aGF3YWJsZQoJewoJCWJhbGFuY2VzW21zZy5zZW5kZXJdICs9IGlsbGlxdWlkQmFsYW5jZVttc2cuc2VuZGVyXTsKCQlpbGxpcXVpZEJhbGFuY2VbbXNnLnNlbmRlcl0gPSAwOwoJfQoKCS8vIFRyYW5zZmVyIGFtb3VudCBvZiB0b2tlbnMgZnJvbSBzZW5kZXIgYWNjb3VudCB0byByZWNpcGllbnQuCgkvLyBPbmx5IGNhbGxhYmxlIGFmdGVyIHRoZSBjcm93ZCBmdW5kIGVuZCBkYXRlLgoJZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfcmVjaXBpZW50LCB1aW50IF9hbW91bnQpCgkJd2hlbl90cmFuc2ZlcmFibGUKCQlyZXR1cm5zIChib29sIG9fc3VjY2VzcykKCXsKCQlyZXR1cm4gc3VwZXIudHJhbnNmZXIoX3JlY2lwaWVudCwgX2Ftb3VudCk7Cgl9CgoJLy8gVHJhbnNmZXIgYW1vdW50IG9mIHRva2VucyBmcm9tIGEgc3BlY2lmaWVkIGFkZHJlc3MgdG8gYSByZWNpcGllbnQuCgkvLyBPbmx5IGNhbGxhYmxlIGFmdGVyIHRoZSBjcm93ZCBmdW5kIGVuZCBkYXRlLgoJZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3JlY2lwaWVudCwgdWludCBfYW1vdW50KQoJCXdoZW5fdHJhbnNmZXJhYmxlCgkJcmV0dXJucyAoYm9vbCBvX3N1Y2Nlc3MpCgl7CgkJcmV0dXJuIHN1cGVyLnRyYW5zZmVyRnJvbShfZnJvbSwgX3JlY2lwaWVudCwgX2Ftb3VudCk7Cgl9Cn0='.
	

]
