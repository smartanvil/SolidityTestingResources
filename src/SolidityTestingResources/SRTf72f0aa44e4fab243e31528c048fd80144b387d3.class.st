Class {
	#name : #SRTf72f0aa44e4fab243e31528c048fd80144b387d3,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTf72f0aa44e4fab243e31528c048fd80144b387d3 >> base64 [
	^ ''.
	

]
