Class {
	#name : #SRT6183DD6d4418B3414c5b9e700c81A5e860a22397,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT6183DD6d4418B3414c5b9e700c81A5e860a22397 >> base64 [
	^ ''.
	

]
