Class {
	#name : #SRT29f01443384c39381040d6b10bba6631868c760a,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT29f01443384c39381040d6b10bba6631868c760a >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMjE7CgoKbGlicmFyeSBTYWZlTWF0aCB7CglmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewoJCXVpbnQyNTYgYyA9IGEgKyBiOwoJCWFzc2VydChhIDw9IGMpOwoJCXJldHVybiBjOwoJfQoKCWZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CgkJYXNzZXJ0KGEgPj0gYik7CgkJcmV0dXJuIGEgLSBiOwoJfQoKCWZ1bmN0aW9uIG11bCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CgkJdWludDI1NiBjID0gYSAqIGI7CgkJYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKCQlyZXR1cm4gYzsKCX0KCglmdW5jdGlvbiBkaXYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewoJCXJldHVybiBhIC8gYjsKCX0KfQoKCmNvbnRyYWN0IENvbnRyYWN0UmVjZWl2ZXIgewoJZnVuY3Rpb24gdG9rZW5GYWxsYmFjayhhZGRyZXNzIGZyb20sIHVpbnQyNTYgdmFsdWUsIGJ5dGVzIGRhdGEpIHB1YmxpYzsKfQoKCmNvbnRyYWN0IEF1Y3R1c1Rva2VuIHsKCWZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sIHVpbnQyNTYgdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKTsKCWZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sIHVpbnQyNTYgdmFsdWUsIGJ5dGVzIGRhdGEpIHB1YmxpYyByZXR1cm5zIChib29sKTsKCWZ1bmN0aW9uIGJ1cm4odWludDI1NiB2YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpOwoJZnVuY3Rpb24gc2V0VG9rZW5TYWxlRmluaXNoZWQoKSBwdWJsaWM7Cn0KCgpjb250cmFjdCBBdWN0dXNXaGl0ZWxpc3QgewoJZnVuY3Rpb24gZ2V0QWxsb3dlZEFtb3VudFRvQ29udHJpYnV0ZShhZGRyZXNzIGFkZHIpIHZpZXcgcHVibGljIHJldHVybnModWludDI1Nik7Cn0KCgpjb250cmFjdCBBdWN0dXNUb2tlblNhbGUgaXMgQ29udHJhY3RSZWNlaXZlciB7Cgl1c2luZyBTYWZlTWF0aCBmb3IgdWludDI1NjsKCglhZGRyZXNzIHB1YmxpYyBhdWN0dXNUb2tlbkFkZHJlc3MgPSAweGZEODlkZTY4YjI0NmVCM2UyMUIwNmU5QjY1NDUwQUMyOEQyMjI0ODg7CglhZGRyZXNzIHB1YmxpYyBhdWN0dXNXaGl0ZUxpc3RBZGRyZXNzID0gMHhBNmU3MjhFNTI0YzFEN0E2NWZFNTE5M2NBMTYzNjI2NURFOUJjOTgyOwoKCXVpbnQyNTYgcHVibGljIHN0YXJ0VGltZSA9IDE1MjIxNTkyMDA7IC8vMjAxOC0wMy0yNyAyIFBNIFVUQwoJdWludDI1NiBwdWJsaWMgZW5kVGltZTsgCgoJdWludDI1NiBwdWJsaWMgYmFzaWNQcmljZVBlckV0aCA9IDIwMDA7CgoJYWRkcmVzcyBwdWJsaWMgb3duZXI7Cgl1aW50MjU2IHB1YmxpYyBzb2Z0Q2FwOwoJdWludDI1NiBwdWJsaWMgcmVtYWluaW5nVG9rZW5zOwoJdWludDI1NiBwdWJsaWMgd2VpUmFpc2VkOwoJbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBpbnZlc3RlZDsKCglib29sIHB1YmxpYyBzYWxlV2FzU2V0OwoJYm9vbCBwdWJsaWMgdG9rZW5TYWxlSGFsdGVkOwoKCWV2ZW50IEJ1eShhZGRyZXNzIGluZGV4ZWQgYnV5ZXIsIHVpbnQyNTYgdG9rZW5BbW91bnQpOwoJZXZlbnQgUmV2b2tlKGFkZHJlc3MgaW5kZXhlZCBidXllciwgdWludDI1NiBpbnZlc3RlZEFtb3VudCk7CgoJZnVuY3Rpb24gQXVjdHVzVG9rZW5TYWxlKHVpbnQyNTYgbWluaW11bUNhcCwgdWludDI1NiBlbmRTYWxlVGltZSkgcHVibGljIHsKCQlvd25lciA9IG1zZy5zZW5kZXI7CgkJc29mdENhcCA9IG1pbmltdW1DYXA7CgkJZW5kVGltZSA9IGVuZFNhbGVUaW1lOwoJCXNhbGVXYXNTZXQgPSBmYWxzZTsKCQl0b2tlblNhbGVIYWx0ZWQgPSBmYWxzZTsKCX0KCgltb2RpZmllciBvbmx5T3duZXIoKSB7CgkJcmVxdWlyZShvd25lciA9PSBtc2cuc2VuZGVyKTsKCQlfOwoJfQoKCW1vZGlmaWVyIG9wZW5TYWxlKCkgewoJCXJlcXVpcmUoc2FsZVdhc1NldCAmJiAhdG9rZW5TYWxlSGFsdGVkICYmIG5vdyA+PSBzdGFydFRpbWUgJiYgbm93IDw9IGVuZFRpbWUgJiYgcmVtYWluaW5nVG9rZW5zID4gMCk7CgkJXzsKCX0KCgltb2RpZmllciBzYWxlQ29tcGxldGVkU3VjY2Vzc2Z1bGx5KCkgewoJCXJlcXVpcmUod2VpUmFpc2VkID49IHNvZnRDYXAgJiYgKG5vdyA+IGVuZFRpbWUgfHwgcmVtYWluaW5nVG9rZW5zID09IDApKTsKCQlfOwoJfQoKCW1vZGlmaWVyIHNhbGVGYWlsZWQoKSB7CgkJcmVxdWlyZSh3ZWlSYWlzZWQgPCBzb2Z0Q2FwICYmIG5vdyA+IGVuZFRpbWUpOwoJCV87Cgl9CgoJZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBuZXdPd25lcikgb25seU93bmVyIHB1YmxpYyB7CgkJcmVxdWlyZShuZXdPd25lciAhPSBhZGRyZXNzKDApKTsKCQlvd25lciA9IG5ld093bmVyOwoJfQoKCWZ1bmN0aW9uIHNldFRva2VuU2FsZUhhbHQoYm9vbCBoYWx0ZWQpIG9ubHlPd25lciBwdWJsaWMgewoJCXRva2VuU2FsZUhhbHRlZCA9IGhhbHRlZDsKCX0KCglmdW5jdGlvbiBzZXRTb2Z0Q2FwKHVpbnQyNTYgbWluaW11bUNhcCkgb25seU93bmVyIHB1YmxpYyB7CgkJcmVxdWlyZShub3cgPCBzdGFydFRpbWUpOwoJCXNvZnRDYXAgPSBtaW5pbXVtQ2FwOwoJfQoKCWZ1bmN0aW9uIHNldEVuZFNhbGVUaW1lKHVpbnQyNTYgZW5kU2FsZVRpbWUpIG9ubHlPd25lciBwdWJsaWMgewoJCXJlcXVpcmUobm93IDwgZW5kVGltZSk7CgkJZW5kVGltZSA9IGVuZFNhbGVUaW1lOwoJfQoKCWZ1bmN0aW9uIHRva2VuRmFsbGJhY2soYWRkcmVzcywgdWludDI1NiB2YWx1ZSwgYnl0ZXMpIHB1YmxpYyB7CgkJcmVxdWlyZShtc2cuc2VuZGVyID09IGF1Y3R1c1Rva2VuQWRkcmVzcyk7CgkJcmVxdWlyZSghc2FsZVdhc1NldCk7CgkJc2V0VG9rZW5TYWxlRGlzdHJpYnV0aW9uKHZhbHVlKTsKCX0KCglmdW5jdGlvbigpCgkJcGF5YWJsZQoJCW9wZW5TYWxlCgkJcHVibGljCgl7CgkJdWludDI1NiB3ZWlUb0ludmVzdDsKCQl1aW50MjU2IHdlaVJlbWFpbmluZzsKCQkod2VpVG9JbnZlc3QsIHdlaVJlbWFpbmluZykgPSBnZXRWYWx1ZVRvSW52ZXN0KCk7CgoJCXJlcXVpcmUod2VpVG9JbnZlc3QgPiAwKTsKCgkJdWludDI1NiB0b2tlbnNUb1JlY2VpdmUgPSB3ZWlUb0ludmVzdC5tdWwoYmFzaWNQcmljZVBlckV0aCk7CgkJcmVtYWluaW5nVG9rZW5zID0gcmVtYWluaW5nVG9rZW5zLnN1Yih0b2tlbnNUb1JlY2VpdmUpOwoJCXdlaVJhaXNlZCA9IHdlaVJhaXNlZC5hZGQod2VpVG9JbnZlc3QpOwoJCWludmVzdGVkW21zZy5zZW5kZXJdID0gaW52ZXN0ZWRbbXNnLnNlbmRlcl0uYWRkKHdlaVRvSW52ZXN0KTsKCgkJaWYgKHdlaVJlbWFpbmluZyA+IDApIHsKCQkJbXNnLnNlbmRlci50cmFuc2Zlcih3ZWlSZW1haW5pbmcpOwoJCX0KCQlhc3NlcnQoQXVjdHVzVG9rZW4oYXVjdHVzVG9rZW5BZGRyZXNzKS50cmFuc2Zlcihtc2cuc2VuZGVyLCB0b2tlbnNUb1JlY2VpdmUpKTsKCgkJZW1pdCBCdXkobXNnLnNlbmRlciwgdG9rZW5zVG9SZWNlaXZlKTsKCX0KCglmdW5jdGlvbiByZXZva2UoKSBzYWxlRmFpbGVkIHB1YmxpYyB7CgkJdWludDI1NiBpbnZlc3RlZFZhbHVlID0gaW52ZXN0ZWRbbXNnLnNlbmRlcl07CgkJcmVxdWlyZShpbnZlc3RlZFZhbHVlID4gMCk7CgoJCWludmVzdGVkW21zZy5zZW5kZXJdID0gMDsKCQltc2cuc2VuZGVyLnRyYW5zZmVyKGludmVzdGVkVmFsdWUpOwoKCQllbWl0IFJldm9rZShtc2cuc2VuZGVyLCBpbnZlc3RlZFZhbHVlKTsKCX0KCglmdW5jdGlvbiBmaW5pc2goKSAKCQlvbmx5T3duZXIKCQlzYWxlQ29tcGxldGVkU3VjY2Vzc2Z1bGx5IAoJCXB1YmxpYyAKCXsKCQkvLzQwJSBvZiB0aGUgZXRoZXJzIGFyZSB1bnZlc3RlZAoJCXVpbnQyNTYgZnJlZUV0aGVycyA9IGFkZHJlc3ModGhpcykuYmFsYW5jZSAqIDQwIC8gMTAwOwoJCXVpbnQyNTYgdmVzdGVkRXRoZXJzID0gYWRkcmVzcyh0aGlzKS5iYWxhbmNlIC0gZnJlZUV0aGVyczsKCgkJYWRkcmVzcygweGQxQjEwNjA3OTIxQzc4RDlhMDA1MjkyOTRDNGI5OWYxYmQyNTBFMWMpLnRyYW5zZmVyKGZyZWVFdGhlcnMpOyAvL093bmVyCgkJYXNzZXJ0KGFkZHJlc3MoMHgwMjg1ZDM1NTA4ZTFBMWY4MzMxNDJFQjUyMTFhZGI4NThCZDMzMjNBKS5jYWxsLnZhbHVlKHZlc3RlZEV0aGVycykoKSk7IC8vQXVjdHVzRXRoZXJWZXN0aW5nIFNDCgoJCUF1Y3R1c1Rva2VuIHRva2VuID0gQXVjdHVzVG9rZW4oYXVjdHVzVG9rZW5BZGRyZXNzKTsKCQl0b2tlbi5zZXRUb2tlblNhbGVGaW5pc2hlZCgpOwoJCWlmIChyZW1haW5pbmdUb2tlbnMgPiAwKSB7CgkJCXRva2VuLmJ1cm4ocmVtYWluaW5nVG9rZW5zKTsKCQkJcmVtYWluaW5nVG9rZW5zID0gMDsKCQl9Cgl9CgoJZnVuY3Rpb24gZ2V0VmFsdWVUb0ludmVzdCgpIHZpZXcgcHJpdmF0ZSByZXR1cm5zICh1aW50MjU2LCB1aW50MjU2KSB7CgkJdWludDI1NiBhbGxvd2VkVmFsdWUgPSBBdWN0dXNXaGl0ZWxpc3QoYXVjdHVzV2hpdGVMaXN0QWRkcmVzcykuZ2V0QWxsb3dlZEFtb3VudFRvQ29udHJpYnV0ZShtc2cuc2VuZGVyKTsKCgkJdWludDI1NiB3ZWlUb0ludmVzdDsKCQlpZiAoYWxsb3dlZFZhbHVlID09IDApIHsKCQkJd2VpVG9JbnZlc3QgPSAwOwoJCX0gZWxzZSBpZiAoYWxsb3dlZFZhbHVlID49IGludmVzdGVkW21zZy5zZW5kZXJdLmFkZChtc2cudmFsdWUpKSB7CgkJCXdlaVRvSW52ZXN0ID0gZ2V0QWxsb3dlZEFtb3VudChtc2cudmFsdWUpOwoJCX0gZWxzZSB7CgkJCXdlaVRvSW52ZXN0ID0gZ2V0QWxsb3dlZEFtb3VudChhbGxvd2VkVmFsdWUuc3ViKGludmVzdGVkW21zZy5zZW5kZXJdKSk7CgkJfQoJCXJldHVybiAod2VpVG9JbnZlc3QsIG1zZy52YWx1ZS5zdWIod2VpVG9JbnZlc3QpKTsKCX0KCglmdW5jdGlvbiBnZXRBbGxvd2VkQW1vdW50KHVpbnQyNTYgdmFsdWUpIHZpZXcgcHJpdmF0ZSByZXR1cm5zICh1aW50MjU2KSB7CgkJdWludDI1NiBtYXhpbXVtVmFsdWUgPSByZW1haW5pbmdUb2tlbnMgLyBiYXNpY1ByaWNlUGVyRXRoOwoJCWlmICh2YWx1ZSA+IG1heGltdW1WYWx1ZSkgewoJCQlyZXR1cm4gbWF4aW11bVZhbHVlOwoJCX0gZWxzZSB7CgkJCXJldHVybiB2YWx1ZTsKCQl9Cgl9CgoJZnVuY3Rpb24gc2V0VG9rZW5TYWxlRGlzdHJpYnV0aW9uKHVpbnQyNTYgdG90YWxBbW91bnQpIHByaXZhdGUgewoJCS8vQXVjdHVzIGNvcmUgdGVhbSAyMCUKCQl1aW50MjU2IGF1Y3R1c0NvcmVUZWFtID0gdG90YWxBbW91bnQgKiAyMCAvIDEwMDsKCQkvL0JvdW50eSAyJQoJCXVpbnQyNTYgYm91bnR5ID0gdG90YWxBbW91bnQgKiAyIC8gMTAwOwoJCS8vUmVzZXJ2ZSBmb3IgRnV0dXJlIDE4JQoJCXVpbnQyNTYgcmVzZXJ2ZUZvckZ1dHVyZSA9IHRvdGFsQW1vdW50ICogMTggLyAxMDA7CgkJLy9QYXJ0bmVyc2hpcHMgYW5kIEFkdmlzb3J5IGZyZWUgYW1vdW50IDEuOCUKCQl1aW50MjU2IHBhcnRuZXJzaGlwc0Fkdmlzb3J5RnJlZSA9IHRvdGFsQW1vdW50ICogMTggLyAxMDAwOwoJCS8vUGFydG5lcnNoaXBzIGFuZCBBZHZpc29yeSB2ZXN0ZWQgYW1vdW50IDcuMiUKCQl1aW50MjU2IHBhcnRuZXJzaGlwc0Fkdmlzb3J5VmVzdGVkID0gdG90YWxBbW91bnQgKiA3MiAvIDEwMDA7CgoJCXVpbnQyNTYgcHJpdmF0ZVNhbGVzID0gMjk3MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDsKCQl1aW50MjU2IHByZVNhbGUgPSAyMzk3MzA3NTU3MDA3MzI5OTY4MjkwMDAwOwoKCQl0cmFuc2ZlclRva2VucyhhdWN0dXNDb3JlVGVhbSwgYm91bnR5LCByZXNlcnZlRm9yRnV0dXJlLCBwcmVTYWxlLCBwYXJ0bmVyc2hpcHNBZHZpc29yeVZlc3RlZCwgcGFydG5lcnNoaXBzQWR2aXNvcnlGcmVlLCBwcml2YXRlU2FsZXMpOwoJCQoJCXJlbWFpbmluZ1Rva2VucyA9IHRvdGFsQW1vdW50IC0gYXVjdHVzQ29yZVRlYW0gLSBib3VudHkgLSByZXNlcnZlRm9yRnV0dXJlIC0gcHJlU2FsZSAtIHBhcnRuZXJzaGlwc0Fkdmlzb3J5VmVzdGVkIC0gcGFydG5lcnNoaXBzQWR2aXNvcnlGcmVlIC0gcHJpdmF0ZVNhbGVzOwoJCXNhbGVXYXNTZXQgPSB0cnVlOwoJfQoJCglmdW5jdGlvbiB0cmFuc2ZlclRva2VucygKCQl1aW50MjU2IGF1Y3R1c0NvcmVUZWFtLAoJCXVpbnQyNTYgYm91bnR5LAoJCXVpbnQyNTYgcmVzZXJ2ZUZvckZ1dHVyZSwKCQl1aW50MjU2IHByZVNhbGUsCgkJdWludDI1NiBwYXJ0bmVyc2hpcHNBZHZpc29yeVZlc3RlZCwKCQl1aW50MjU2IHBhcnRuZXJzaGlwc0Fkdmlzb3J5RnJlZSwKCQl1aW50MjU2IHByaXZhdGVTYWxlcwoJKSBwcml2YXRlIHsKCQlBdWN0dXNUb2tlbiB0b2tlbiA9IEF1Y3R1c1Rva2VuKGF1Y3R1c1Rva2VuQWRkcmVzcyk7CgkJYnl0ZXMgbWVtb3J5IGVtcHR5OwoJCWFzc2VydCh0b2tlbi50cmFuc2ZlcigweDZiYzU4YzU3MmQwOTczY0YwRWZBMUZlMUQ3RDZjOWQ3RWVhMmNkMjMsIGF1Y3R1c0NvcmVUZWFtLCBlbXB0eSkpOyAvL0F1Y3R1c1Rva2VuVmVzdGluZyBTQwoJCWFzc2VydCh0b2tlbi50cmFuc2ZlcigweDkzNkNmM2U5MDRCODNCMUQ5MzlDNDE0NzVEQzVGN2M0NzA0MTlBM0UsIGJvdW50eSwgZW1wdHkpKTsgLy9BdWN0dXNCb3VudHlEaXN0cmlidXRpb24gU0MKCQlhc3NlcnQodG9rZW4udHJhbnNmZXIoMHhGNWFkNWZGNzAzRDBBRDBkZjNiQWIzQTExOTRGYkNDNWMxNTJiZjNiLCByZXNlcnZlRm9yRnV0dXJlLCBlbXB0eSkpOyAvL0F1Y3R1c1Rva2VuVmVzdGluZyBTQwoJCWFzc2VydCh0b2tlbi50cmFuc2ZlcigweDJjRTRGQWI5RjMxM0YxZGYwOTc4ODY5QzVkMzAyNzY4RjFiQjQ3MWQsIHByZVNhbGUsIGVtcHR5KSk7IC8vQXVjdHVzUHJlU2FsZURpc3RyaWJ1dGlvbiBTQwoJCWFzc2VydCh0b2tlbi50cmFuc2ZlcigweDAzZjYyNzhFNWMzNTlhNUU4OTQ3YTYyRTg3RDg1QUMzOTQ1ODBkMTMsIHBhcnRuZXJzaGlwc0Fkdmlzb3J5VmVzdGVkLCBlbXB0eSkpOyAvL0F1Y3R1c1Rva2VuVmVzdGluZyBTQwoJCWFzc2VydCh0b2tlbi50cmFuc2ZlcigweDZjODlDYzAzMDM2MTkzZDUyZTliODM4NjQxM2I1NDUxODRCREFiOTksIHBhcnRuZXJzaGlwc0Fkdmlzb3J5RnJlZSkpOwoJCWFzc2VydCh0b2tlbi50cmFuc2ZlcigweGQxQjEwNjA3OTIxQzc4RDlhMDA1MjkyOTRDNGI5OWYxYmQyNTBFMWMsIHByaXZhdGVTYWxlcykpOwoJfQp9'.
	

]
