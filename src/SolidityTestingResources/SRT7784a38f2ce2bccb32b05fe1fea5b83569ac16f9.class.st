Class {
	#name : #SRT7784a38f2ce2bccb32b05fe1fea5b83569ac16f9,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT7784a38f2ce2bccb32b05fe1fea5b83569ac16f9 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgovKioKICogQHRpdGxlIFNhZmVNYXRoCiAqIEBkZXYgTWF0aCBvcGVyYXRpb25zIHdpdGggc2FmZXR5IGNoZWNrcyB0aGF0IHRocm93IG9uIGVycm9yCiAqLwpsaWJyYXJ5IFNhZmVNYXRoIHsKCiAgLyoqCiAgKiBAZGV2IE11bHRpcGxpZXMgdHdvIG51bWJlcnMsIHRocm93cyBvbiBvdmVyZmxvdy4KICAqLwogIGZ1bmN0aW9uIG11bCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICBpZiAoYSA9PSAwKSB7CiAgICAgIHJldHVybiAwOwogICAgfQogICAgdWludDI1NiBjID0gYSAqIGI7CiAgICBhc3NlcnQoYyAvIGEgPT0gYik7CiAgICByZXR1cm4gYzsKICB9CgogIC8qKgogICogQGRldiBJbnRlZ2VyIGRpdmlzaW9uIG9mIHR3byBudW1iZXJzLCB0cnVuY2F0aW5nIHRoZSBxdW90aWVudC4KICAqLwogIGZ1bmN0aW9uIGRpdih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAKICAgIHVpbnQyNTYgYyA9IGEgLyBiOwogICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICAgIHJldHVybiBjOwogIH0KCiAgLyoqCiAgKiBAZGV2IFN1YnN0cmFjdHMgdHdvIG51bWJlcnMsIHRocm93cyBvbiBvdmVyZmxvdyAoaS5lLiBpZiBzdWJ0cmFoZW5kIGlzIGdyZWF0ZXIgdGhhbiBtaW51ZW5kKS4KICAqLwogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIC8qKgogICogQGRldiBBZGRzIHR3byBudW1iZXJzLCB0aHJvd3Mgb24gb3ZlcmZsb3cuCiAgKi8KICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KfQoKCi8qKgogKiBAdGl0bGUgT3duYWJsZQogKiBAZGV2IFRoZSBPd25hYmxlIGNvbnRyYWN0IGhhcyBhbiBvd25lciBhZGRyZXNzLCBhbmQgcHJvdmlkZXMgYmFzaWMgYXV0aG9yaXphdGlvbiBjb250cm9sCiAqIGZ1bmN0aW9ucywgdGhpcyBzaW1wbGlmaWVzIHRoZSBpbXBsZW1lbnRhdGlvbiBvZiAidXNlciBwZXJtaXNzaW9ucyIuCiAqLwpjb250cmFjdCBPd25hYmxlIHsKCiAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CgogIC8qKgogICAqIEBkZXYgVGhlIE93bmFibGUgY29uc3RydWN0b3Igc2V0cyB0aGUgb3JpZ2luYWwgYG93bmVyYCBvZiB0aGUgY29udHJhY3QgdG8gdGhlIHNlbmRlcgogICAqIGFjY291bnQuCiAgICovCiAgZnVuY3Rpb24gT3duYWJsZSgpIHB1YmxpYyB7CiAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgfQoKICAvKiogCiAgICogQGRldiBUaHJvd3MgaWYgY2FsbGVkIGJ5IGFueSBhY2NvdW50IG90aGVyIHRoYW4gdGhlIG93bmVyLgogICAqLwogIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICBfOwogIH0KCiAgLyoqCiAgICogQGRldiBBbGxvd3MgdGhlIGN1cnJlbnQgb3duZXIgdG8gdHJhbnNmZXIgY29udHJvbCBvZiB0aGUgY29udHJhY3QgdG8gYSBuZXdPd25lci4KICAgKiBAcGFyYW0gbmV3T3duZXIgVGhlIGFkZHJlc3MgdG8gdHJhbnNmZXIgb3duZXJzaGlwIHRvLgogICAqLwogIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpIHB1YmxpYyBvbmx5T3duZXIgewogICAgcmVxdWlyZShuZXdPd25lciAhPSBhZGRyZXNzKDApKTsKICAgIG93bmVyID0gbmV3T3duZXI7CiAgfQp9CgovKioKICogQHRpdGxlIFRva2VuCiAqIEBkZXYgQVBJIGludGVyZmFjZSBmb3IgaW50ZXJhY3Rpbmcgd2l0aCB0aGUgVG9rZW4gY29udHJhY3QgCiAqLwppbnRlcmZhY2UgVG9rZW4gewogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bykgcHVibGljIHJldHVybnMgKGJvb2wpOwogIAogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSk7Cn0KCmNvbnRyYWN0IENMVUIxIGlzIE93bmFibGUgewoKICB1c2luZyBTYWZlTWF0aCBmb3IgdWludDI1NjsKICBUb2tlbiB0b2tlbjsKCiAgYWRkcmVzcyBwdWJsaWMgQ3VycmVudFRva2VuT3duZXIgPSBhZGRyZXNzKHRoaXMpOwogIGFkZHJlc3MgdG9rZW5BZGRyZXNzID0gMHgwMzU2ZTE0QzJmOERlMzM5MTMxQzY2OGMxNzQ3ZEVGNTk0NDY3YTlBOyAgLy8gQWRkcmVzcyBvZiB0aGUgVE9LRU4gQ09OVFJBQ1QKICB1aW50MjU2IHB1YmxpYyBDdXJyZW50UHJpY2UgPSAwOwoKICBtYXBwaW5nIChhZGRyZXNzID0+IGJvb2wpIHByZXZvd25lcnM7CiAgCiAgZXZlbnQgQm91Z2h0VG9rZW4oYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IExhc3RQcmljZSk7CgogIAogIGZ1bmN0aW9uIENMVUIxKCkgcHVibGljIHBheWFibGUgewogICAgICAgCiAgICAgIHRva2VuID0gVG9rZW4odG9rZW5BZGRyZXNzKTsgCiAgICAgICAgICAgIAogIH0KICAKICBmdW5jdGlvbiBjaGVja3ByZXZvd25lcihhZGRyZXNzIF9vd25lcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKGJvb2wgaXNPd25lZCkgewoKICAgIHJldHVybiBwcmV2b3duZXJzW19vd25lcl07CgogIH0KICAKICAKICBmdW5jdGlvbiAoKSBwdWJsaWMgcGF5YWJsZSB7CiAgIAogICAgYnV5VG9rZW4oKTsKICAgCiAgfQoKICAvKioKICAqIEBkZXYgZnVuY3Rpb24gdGhhdCBzZWxscyBhdmFpbGFibGUgdG9rZW5zCiAgKi8KICBmdW5jdGlvbiBidXlUb2tlbigpIHB1YmxpYyBwYXlhYmxlIHsKICAgIAogICAgdWludDI1NiBsYXN0aG9sZGVyc2hhcmUgPSBDdXJyZW50UHJpY2UgKiA5MCAvIDEwMDsKICAgIHVpbnQyNTYgb3duZXJzaGFyZSA9IG1zZy52YWx1ZSAqIDEwIC8gMTAwOyAKCiAgICByZXF1aXJlKG1zZy52YWx1ZSA+IEN1cnJlbnRQcmljZSk7ICAgIAoKICAgIEJvdWdodFRva2VuKG1zZy5zZW5kZXIsIG1zZy52YWx1ZSk7CgogICAgdG9rZW4udHJhbnNmZXJGcm9tKEN1cnJlbnRUb2tlbk93bmVyLCBtc2cuc2VuZGVyKTsgICAgICAKICAKICAgIEN1cnJlbnRQcmljZSA9IG1zZy52YWx1ZTsKICAgICAgCiAgICBpZiAobGFzdGhvbGRlcnNoYXJlID4gMCkgQ3VycmVudFRva2VuT3duZXIudHJhbnNmZXIobGFzdGhvbGRlcnNoYXJlKTsKICAgIG93bmVyLnRyYW5zZmVyKG93bmVyc2hhcmUpOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgIAogICAgQ3VycmVudFRva2VuT3duZXIgPSBtc2cuc2VuZGVyOyAgICAgICAgICAgICAgICAgICAgICAgIAogICAgcHJldm93bmVyc1ttc2cuc2VuZGVyXSA9IHRydWU7CiAgfQoKICAgZnVuY3Rpb24gcmVzZXRUb2tlbigpIHB1YmxpYyBwYXlhYmxlIHsKICAgIAogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IHRva2VuQWRkcmVzcyk7CiAgICB1aW50MjU2IGxhc3Rob2xkZXJzaGFyZSA9IEN1cnJlbnRQcmljZSAqIDkwIC8gMTAwOwogICAgICAgIAogICAgQm91Z2h0VG9rZW4obXNnLnNlbmRlciwgMCk7CgogICAgQ3VycmVudFByaWNlID0gMDsKICAgIAogICAgQ3VycmVudFRva2VuT3duZXIudHJhbnNmZXIobGFzdGhvbGRlcnNoYXJlKTsKICAgIEN1cnJlbnRUb2tlbk93bmVyID0gYWRkcmVzcyh0aGlzKTsKICAgIAogIH0KCiAgIC8qKgogICAqIEBub3RpY2UgVGVybWluYXRlIGNvbnRyYWN0IGFuZCByZWZ1bmQgdG8gb3duZXIKICAgKi8KICBmdW5jdGlvbiBkZXN0cm95KCkgcHVibGljIG9ubHlPd25lciB7CiAgIHNlbGZkZXN0cnVjdChvd25lcik7CiAgfQoKfQ=='.
	

]
