Class {
	#name : #SRT849af9678414331e2a703db0f68633839c08237a,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT849af9678414331e2a703db0f68633839c08237a >> base64 [
	^ ''.
	

]
