Class {
	#name : #SRTf463434733b26c6f5e79eb9dbde4b508dedda95c,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTf463434733b26c6f5e79eb9dbde4b508dedda95c >> base64 [
	^ ''.
	

]
