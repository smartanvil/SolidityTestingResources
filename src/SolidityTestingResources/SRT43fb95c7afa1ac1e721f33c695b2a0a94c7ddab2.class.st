Class {
	#name : #SRT43fb95c7afa1ac1e721f33c695b2a0a94c7ddab2,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT43fb95c7afa1ac1e721f33c695b2a0a94c7ddab2 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7Cgpjb250cmFjdCBMdW5hclRva2VuIHsKCiAgc3RydWN0IEx1bmFyUGxvdCB7CiAgICBhZGRyZXNzIG93bmVyOwogICAgdWludCBwcmljZTsKICAgIGJvb2wgZm9yU2FsZTsKICAgIHN0cmluZyBtZXRhZGF0YTsKICAgIGJvb2wgZGlzYWJsZWQ7CiAgICB1aW50OCBzdWJkaXZpc2lvbjsKICAgIHVpbnQgcGFyZW50SUQ7CiAgfQoKICBhZGRyZXNzIG93bmVyOwogIGFkZHJlc3MgYmVuZWZpY2lhcnk7CiAgdWludCBwdWJsaWMgbnVtUGxvdHM7CiAgdWludCBwdWJsaWMgdG90YWxPd25lZDsKICB1aW50IHB1YmxpYyB0b3RhbFB1cmNoYXNlczsKICB1aW50IHB1YmxpYyBpbml0aWFsUHJpY2U7CiAgdWludDggcHVibGljIGZlZVBlcmNlbnRhZ2U7CiAgYm9vbCBwdWJsaWMgdHJhZGluZ0VuYWJsZWQ7CiAgYm9vbCBwdWJsaWMgc3ViZGl2aXNpb25FbmFibGVkOwogIHVpbnQ4IHB1YmxpYyBtYXhTdWJkaXZpc2lvbnM7CgogIC8vIEVSQzIwLWNvbXBhdGlibGUgZmllbGRzCiAgdWludCBwdWJsaWMgdG90YWxTdXBwbHk7CiAgc3RyaW5nIHB1YmxpYyBzeW1ib2wgPSAiTFVOQSI7CiAgc3RyaW5nIHB1YmxpYyBuYW1lID0gImx1bmFycyI7CgogIG1hcHBpbmcgKHVpbnQgPT4gTHVuYXJQbG90KSBwdWJsaWMgcGxvdHM7CiAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50W10pIHB1YmxpYyBwbG90c093bmVkOwoKICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQgaWQpOwogIGV2ZW50IFB1cmNoYXNlKGFkZHJlc3MgX2Zyb20sIHVpbnQgaWQsIHVpbnQyNTYgcHJpY2UpOwogIGV2ZW50IFByaWNlQ2hhbmdlZChhZGRyZXNzIF9mcm9tLCB1aW50IGlkLCB1aW50MjU2IG5ld1ByaWNlKTsKICBldmVudCBNZXRhZGF0YVVwZGF0ZWQoYWRkcmVzcyBfZnJvbSwgdWludCBpZCwgc3RyaW5nIG5ld0RhdGEpOwoKICBtb2RpZmllciB2YWxpZElEKHVpbnQgaWQpIHsKICAgIHJlcXVpcmUoaWQgPCBudW1QbG90cyk7CiAgICByZXF1aXJlKCFwbG90c1tpZF0uZGlzYWJsZWQpOwogICAgXzsKICB9CgogIG1vZGlmaWVyIG93bmVyT25seSgpIHsKICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICBfOwogIH0KCiAgbW9kaWZpZXIgaXNPd25lck9mKHVpbnQgaWQpIHsKICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lck9mKGlkKSk7CiAgICBfOwogIH0KCiAgbW9kaWZpZXIgdHJhZGluZ0lzRW5hYmxlZCgpIHsKICAgIHJlcXVpcmUodHJhZGluZ0VuYWJsZWQpOwogICAgXzsKICB9CgogIG1vZGlmaWVyIHN1YmRpdmlzaW9uSXNFbmFibGVkKCkgewogICAgcmVxdWlyZShzdWJkaXZpc2lvbkVuYWJsZWQpOwogICAgXzsKICB9CgogIGZ1bmN0aW9uIEx1bmFyVG9rZW4oCiAgICB1aW50IF9udW1QbG90cywKICAgIHVpbnQgX2luaXRpYWxQcmljZUluV2VpLAogICAgdWludDggX2ZlZVBlcmNlbnRhZ2UsCiAgICBib29sIF90cmFkaW5nRW5hYmxlZCwKICAgIGJvb2wgX3N1YmRpdmlzaW9uRW5hYmxlZCwKICAgIHVpbnQ4IF9tYXhTdWJkaXZpc2lvbnMKICApIHsKICAgIG51bVBsb3RzID0gX251bVBsb3RzOwogICAgdG90YWxTdXBwbHkgPSBfbnVtUGxvdHM7CiAgICBpbml0aWFsUHJpY2UgPSBfaW5pdGlhbFByaWNlSW5XZWk7CiAgICBmZWVQZXJjZW50YWdlID0gX2ZlZVBlcmNlbnRhZ2UgPiAxMDAgPyAxMDAgOiBfZmVlUGVyY2VudGFnZTsKICAgIHRyYWRpbmdFbmFibGVkID0gX3RyYWRpbmdFbmFibGVkOwogICAgc3ViZGl2aXNpb25FbmFibGVkID0gX3N1YmRpdmlzaW9uRW5hYmxlZDsKICAgIG1heFN1YmRpdmlzaW9ucyA9IF9tYXhTdWJkaXZpc2lvbnM7CiAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgICBiZW5lZmljaWFyeSA9IG1zZy5zZW5kZXI7CiAgfQoKICAvKiogQW4gRVJDMjAtY29tcGF0aWJsZSBiYWxhbmNlIHRoYXQgcmV0dXJucyB0aGUgbnVtYmVyIG9mIHBsb3RzIG93bmVkICovCiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgYWRkcikgY29uc3RhbnQgcmV0dXJucyh1aW50KSB7CiAgICByZXR1cm4gcGxvdHNPd25lZFthZGRyXS5sZW5ndGg7CiAgfQoKICBmdW5jdGlvbiB0b2tlbnNPZk93bmVyQnlJbmRleChhZGRyZXNzIGFkZHIsIHVpbnQgaWR4KSBjb25zdGFudCByZXR1cm5zKHVpbnQpIHsKICAgIHJldHVybiBwbG90c093bmVkW2FkZHJdW2lkeF07CiAgfQoKICBmdW5jdGlvbiBvd25lck9mKHVpbnQgaWQpIGNvbnN0YW50IHZhbGlkSUQoaWQpIHJldHVybnMgKGFkZHJlc3MpIHsKICAgIHJldHVybiBwbG90c1tpZF0ub3duZXI7CiAgfQoKICBmdW5jdGlvbiBpc1Vub3duZWQodWludCBpZCkgY29uc3RhbnQgdmFsaWRJRChpZCkgcmV0dXJucyhib29sKSB7CiAgICByZXR1cm4gcGxvdHNbaWRdLm93bmVyID09IDB4MDsKICB9CgogIGZ1bmN0aW9uIHRyYW5zZmVyKHVpbnQgaWQsIGFkZHJlc3MgbmV3T3duZXIsIHN0cmluZyBuZXdEYXRhKQogICAgdmFsaWRJRChpZCkgaXNPd25lck9mKGlkKSB0cmFkaW5nSXNFbmFibGVkIHJldHVybnMoYm9vbCkKICB7CiAgICBwbG90c1tpZF0ub3duZXIgPSBuZXdPd25lcjsKCiAgICBpZiAoYnl0ZXMobmV3RGF0YSkubGVuZ3RoICE9IDApIHsKICAgICAgcGxvdHNbaWRdLm1ldGFkYXRhID0gbmV3RGF0YTsKICAgIH0KCiAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBuZXdPd25lciwgaWQpOwogICAgYWRkUGxvdChuZXdPd25lciwgaWQpOwogICAgcmVtb3ZlUGxvdChtc2cuc2VuZGVyLCBpZCk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIHB1cmNoYXNlKHVpbnQgaWQsIHN0cmluZyBtZXRhZGF0YSwgYm9vbCBmb3JTYWxlLCB1aW50IG5ld1ByaWNlKQogICAgdmFsaWRJRChpZCkgdHJhZGluZ0lzRW5hYmxlZCBwYXlhYmxlIHJldHVybnMoYm9vbCkKICB7CiAgICBMdW5hclBsb3QgcGxvdCA9IHBsb3RzW2lkXTsKCiAgICBpZiAoaXNVbm93bmVkKGlkKSkgewogICAgICByZXF1aXJlKG1zZy52YWx1ZSA+PSBpbml0aWFsUHJpY2UpOwogICAgfSBlbHNlIHsKICAgICAgcmVxdWlyZShwbG90LmZvclNhbGUgJiYgbXNnLnZhbHVlID49IHBsb3QucHJpY2UpOwogICAgfQoKICAgIGlmIChwbG90Lm93bmVyICE9IDB4MCkgewogICAgICAvLyBXZSBvbmx5IHNlbmQgbW9uZXkgdG8gb3duZXIgaWYgdGhlIG93bmVyIGlzIHNldAogICAgICB1aW50IGZlZSA9IHBsb3QucHJpY2UgKiBmZWVQZXJjZW50YWdlIC8gMTAwOwogICAgICB1aW50IHNhbGVQcm9jZWVkcyA9IHBsb3QucHJpY2UgLSBmZWU7CiAgICAgIHBsb3Qub3duZXIudHJhbnNmZXIoc2FsZVByb2NlZWRzKTsKICAgICAgcmVtb3ZlUGxvdChwbG90Lm93bmVyLCBpZCk7CiAgICB9IGVsc2UgewogICAgICB0b3RhbE93bmVkKys7CiAgICB9CgogICAgYWRkUGxvdChtc2cuc2VuZGVyLCBpZCk7CiAgICBwbG90Lm93bmVyID0gbXNnLnNlbmRlcjsKICAgIHBsb3QuZm9yU2FsZSA9IGZvclNhbGU7CiAgICBwbG90LnByaWNlID0gbmV3UHJpY2U7CgogICAgaWYgKGJ5dGVzKG1ldGFkYXRhKS5sZW5ndGggIT0gMCkgewogICAgICBwbG90Lm1ldGFkYXRhID0gbWV0YWRhdGE7CiAgICB9CgogICAgUHVyY2hhc2UobXNnLnNlbmRlciwgaWQsIG1zZy52YWx1ZSk7CiAgICB0b3RhbFB1cmNoYXNlcysrOwogICAgcmV0dXJuIHRydWU7CiAgfQoKICBmdW5jdGlvbiBzdWJkaXZpZGUoCiAgICB1aW50IGlkLAogICAgYm9vbCBmb3JTYWxlMSwKICAgIGJvb2wgZm9yU2FsZTIsCiAgICB1aW50IHByaWNlMSwKICAgIHVpbnQgcHJpY2UyLAogICAgc3RyaW5nIG1ldGFkYXRhMSwKICAgIHN0cmluZyBtZXRhZGF0YTIKICApIGlzT3duZXJPZihpZCkgc3ViZGl2aXNpb25Jc0VuYWJsZWQgewogICAgLy8gUHJldmVudCBtb3JlIHN1YmRpdmlzaW9ucyB0aGFuIG1heAogICAgcmVxdWlyZShwbG90c1tpZF0uc3ViZGl2aXNpb24gPCBtYXhTdWJkaXZpc2lvbnMpOwoKICAgIEx1bmFyUGxvdCBzdG9yYWdlIG9sZFBsb3QgPSBwbG90c1tpZF07CgogICAgdWludCBpZDEgPSBudW1QbG90cysrOwogICAgcGxvdHNbaWQxXSA9IEx1bmFyUGxvdCh7CiAgICAgIG93bmVyOiBtc2cuc2VuZGVyLAogICAgICBwcmljZTogcHJpY2UxLAogICAgICBmb3JTYWxlOiBmb3JTYWxlMSwKICAgICAgbWV0YWRhdGE6IG1ldGFkYXRhMSwKICAgICAgZGlzYWJsZWQ6IGZhbHNlLAogICAgICBwYXJlbnRJRDogaWQsCiAgICAgIHN1YmRpdmlzaW9uOiBvbGRQbG90LnN1YmRpdmlzaW9uICsgMQogICAgfSk7CgogICAgdWludCBpZDIgPSBudW1QbG90cysrOwogICAgcGxvdHNbaWQyXSA9IEx1bmFyUGxvdCh7CiAgICAgIG93bmVyOiBtc2cuc2VuZGVyLAogICAgICBwcmljZTogcHJpY2UyLAogICAgICBmb3JTYWxlOiBmb3JTYWxlMiwKICAgICAgbWV0YWRhdGE6IG1ldGFkYXRhMiwKICAgICAgZGlzYWJsZWQ6IGZhbHNlLAogICAgICBwYXJlbnRJRDogaWQsCiAgICAgIHN1YmRpdmlzaW9uOiBvbGRQbG90LnN1YmRpdmlzaW9uICsgMQogICAgfSk7CgogICAgLy8gRGlzYWJsZSBvbGQgcGxvdCBhbmQgYWRkIG5ldyBwbG90cwogICAgcGxvdHNbaWRdLmRpc2FibGVkID0gdHJ1ZTsKICAgIHRvdGFsT3duZWQgKz0gMTsKICAgIHRvdGFsU3VwcGx5ICs9IDE7CgogICAgcmVtb3ZlUGxvdChtc2cuc2VuZGVyLCBpZCk7CiAgICBhZGRQbG90KG1zZy5zZW5kZXIsIGlkMSk7CiAgICBhZGRQbG90KG1zZy5zZW5kZXIsIGlkMik7CiAgfQoKICBmdW5jdGlvbiBzZXRQcmljZSh1aW50IGlkLCBib29sIGZvclNhbGUsIHVpbnQgbmV3UHJpY2UpIHZhbGlkSUQoaWQpIGlzT3duZXJPZihpZCkgewogICAgcGxvdHNbaWRdLnByaWNlID0gbmV3UHJpY2U7CiAgICBwbG90c1tpZF0uZm9yU2FsZSA9IGZvclNhbGU7CiAgICBQcmljZUNoYW5nZWQobXNnLnNlbmRlciwgaWQsIG5ld1ByaWNlKTsKICB9CgogIGZ1bmN0aW9uIHNldE1ldGFkYXRhKHVpbnQgaWQsIHN0cmluZyBuZXdEYXRhKSB2YWxpZElEKGlkKSBpc093bmVyT2YoaWQpIHsKICAgIHBsb3RzW2lkXS5tZXRhZGF0YSA9IG5ld0RhdGE7CiAgICBNZXRhZGF0YVVwZGF0ZWQobXNnLnNlbmRlciwgaWQsIG5ld0RhdGEpOwogIH0KCiAgLy8gUHJpdmF0ZSBtZXRob2RzCgogIGZ1bmN0aW9uIHJlbW92ZVBsb3QoYWRkcmVzcyBhZGRyLCB1aW50IGlkKSBwcml2YXRlIHsKICAgIC8vIENvcHkgdGhlIGxhc3QgZW50cnkgdG8gaWQgYW5kIHRoZW4gZGVsZXRlIHRoZSBsYXN0IG9uZQogICAgdWludCBuID0gcGxvdHNPd25lZFthZGRyXS5sZW5ndGg7CiAgICBmb3IgKHVpbnQ4IGkgPSAwOyBpIDwgbjsgaSsrKSB7CiAgICAgIGlmIChwbG90c093bmVkW2FkZHJdW2ldID09IGlkKSB7CiAgICAgICAgLy8gSWYgZm91bmQsIGNvcHkgdGhlIGxhc3QgZWxlbWVudCB0byB0aGUgaWR4IGFuZCB0aGVuIGRlbGV0ZSBsYXN0IGVsZW1lbnQKICAgICAgICBwbG90c093bmVkW2FkZHJdW2ldID0gcGxvdHNPd25lZFthZGRyXVtuIC0gMV07CiAgICAgICAgZGVsZXRlIHBsb3RzT3duZWRbYWRkcl1bbiAtIDFdOwogICAgICAgIHBsb3RzT3duZWRbYWRkcl0ubGVuZ3RoLS07CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0KICB9CgogIGZ1bmN0aW9uIGFkZFBsb3QoYWRkcmVzcyBhZGRyLCB1aW50IGlkKSBwcml2YXRlIHsKICAgIHBsb3RzT3duZWRbYWRkcl0ucHVzaChpZCk7CiAgfQoKICAvLyBDb250cmFjdCBtYW5hZ2VtZW50IG1ldGhvZHMKCiAgZnVuY3Rpb24gc2V0T3duZXIoYWRkcmVzcyBuZXdPd25lcikgb3duZXJPbmx5IHsKICAgIG93bmVyID0gbmV3T3duZXI7CiAgfQoKICBmdW5jdGlvbiBzZXRCZW5lZmljaWFyeShhZGRyZXNzIG5ld0JlbmVmaWNpYXJ5KSBvd25lck9ubHkgewogICAgYmVuZWZpY2lhcnkgPSBuZXdCZW5lZmljaWFyeTsKICB9CgogIGZ1bmN0aW9uIHNldFN1YmRpdmlzaW9uRW5hYmxlZChib29sIGVuYWJsZWQpIG93bmVyT25seSB7CiAgICBzdWJkaXZpc2lvbkVuYWJsZWQgPSBlbmFibGVkOwogIH0KCiAgZnVuY3Rpb24gc2V0VHJhZGluZ0VuYWJsZWQoYm9vbCBlbmFibGVkKSBvd25lck9ubHkgewogICAgdHJhZGluZ0VuYWJsZWQgPSBlbmFibGVkOwogIH0KCiAgZnVuY3Rpb24gc2V0RmVlUGVyY2VudGFnZSh1aW50OCBfcGVyY2VudGFnZSkgb3duZXJPbmx5IHsKICAgIGZlZVBlcmNlbnRhZ2UgPSBfcGVyY2VudGFnZSA+IDEwMCA/IDEwMCA6IF9wZXJjZW50YWdlOwogIH0KCiAgZnVuY3Rpb24gc2V0SW5pdGlhbFByaWNlKHVpbnQgX3ByaWNlSW5XZWkpIG93bmVyT25seSB7CiAgICBpbml0aWFsUHJpY2UgPSBfcHJpY2VJbldlaTsKICB9CgogIGZ1bmN0aW9uIHdpdGhkcmF3KCkgb3duZXJPbmx5IHsKICAgIGJlbmVmaWNpYXJ5LnRyYW5zZmVyKHRoaXMuYmFsYW5jZSk7CiAgfQp9'.
	

]
