Class {
	#name : #SRT486e49d1622fdfc8ca760fcfc17792753a4beca8,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT486e49d1622fdfc8ca760fcfc17792753a4beca8 >> base64 [
	^ ''.
	

]
