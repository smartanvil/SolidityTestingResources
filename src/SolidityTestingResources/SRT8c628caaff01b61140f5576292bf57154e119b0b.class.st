Class {
	#name : #SRT8c628caaff01b61140f5576292bf57154e119b0b,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT8c628caaff01b61140f5576292bf57154e119b0b >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgoKY29udHJhY3QgRXRoZXJlYWxGb3VuZGF0aW9uT3duZWQgewoJYWRkcmVzcyBwcml2YXRlIE93bmVyOwogICAgCglmdW5jdGlvbiBJc093bmVyKGFkZHJlc3MgYWRkcikgdmlldyBwdWJsaWMgcmV0dXJucyhib29sKQoJewoJICAgIHJldHVybiBPd25lciA9PSBhZGRyOwoJfQoJCglmdW5jdGlvbiBUcmFuc2Zlck93bmVyKGFkZHJlc3MgbmV3T3duZXIpIHB1YmxpYyBvbmx5T3duZXIKCXsKCSAgICBPd25lciA9IG5ld093bmVyOwoJfQoJCglmdW5jdGlvbiBFdGhlcmVhbEZvdW5kYXRpb25Pd25lZCgpIHB1YmxpYwoJewoJICAgIE93bmVyID0gbXNnLnNlbmRlcjsKCX0KCQoJZnVuY3Rpb24gVGVybWluYXRlKCkgcHVibGljIG9ubHlPd25lcgoJewoJICAgIHNlbGZkZXN0cnVjdChPd25lcik7Cgl9CgkKCW1vZGlmaWVyIG9ubHlPd25lcigpewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBPd25lcik7CiAgICAgICAgXzsKICAgIH0KfQoKCmNvbnRyYWN0IFJpZW1hbm5pYW5Ob25vcmllbnRhYmxlTWFuaWZvbGRzIGlzIEV0aGVyZWFsRm91bmRhdGlvbk93bmVkIHsKICAgIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgQ09OVFJBQ1RfTkFNRSA9ICJSaWVtYW5uaWFuTm9ub3JpZW50YWJsZU1hbmlmb2xkcyI7CiAgICBzdHJpbmcgcHVibGljIGNvbnN0YW50IENPTlRSQUNUX1ZFUlNJT04gPSAiQiI7CglzdHJpbmcgcHVibGljIGNvbnN0YW50IFFVT1RFID0gIidFdmVyeXRoaW5nIGlzIHRoZW9yZXRpY2FsbHkgaW1wb3NzaWJsZSwgdW50aWwgaXQgaXMgZG9uZS4nIC1Sb2JlcnQgQS4gSGVpbmxlaW4iOwogICAgCiAgICBzdHJpbmcgcHVibGljIGNvbnN0YW50IG5hbWUgPSAiUmllbWFubmlhbiBOb25vcmllbnRhYmxlIE1hbmlmb2xkcyI7CiAgICBzdHJpbmcgcHVibGljIGNvbnN0YW50IHN5bWJvbCA9ICJSTk0iOwoJCiAgICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCBkZWNpbWFscyA9IDE4OyAgLy8gMTggaXMgdGhlIG1vc3QgY29tbW9uIG51bWJlciBvZiBkZWNpbWFsIHBsYWNlcwoJCiAgICBib29sIHByaXZhdGUgdHJhZGVhYmxlOwogICAgdWludDI1NiBwcml2YXRlIGN1cnJlbnRTdXBwbHk7CiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikgcHJpdmF0ZSBiYWxhbmNlczsKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiBtYXBwaW5nKGFkZHJlc3M9PiB1aW50MjU2KSkgcHJpdmF0ZSBhbGxvd2VkOwogICAgbWFwcGluZyhhZGRyZXNzID0+IGJvb2wpIHByaXZhdGUgbG9ja2VkQWNjb3VudHM7ICAKCQoJLyoKCQlJbmNvbW1pbmcgRXRoZXIKCSovCQogICAgZXZlbnQgUmVjaWV2ZWRFdGgoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCB1aW50MjU2IF92YWx1ZSwgdWludDI1NiB0aW1lU3RhbXApOwoJLy90aGlzIGlzIHRoZSBmYWxsYmFjawoJZnVuY3Rpb24gKCkgcGF5YWJsZSBwdWJsaWMgewoJCVJlY2lldmVkRXRoKG1zZy5zZW5kZXIsIG1zZy52YWx1ZSwgbm93KTsJCQoJfQoJCglldmVudCBUcmFuc2ZlcmVkRXRoKGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsKCWZ1bmN0aW9uIEZvdW5kYXRpb25UcmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBhbXRFdGgsIHVpbnQyNTYgYW10VG9rZW4pIHB1YmxpYyBvbmx5T3duZXIKCXsKCQlyZXF1aXJlKHRoaXMuYmFsYW5jZSA+PSBhbXRFdGggJiYgYmFsYW5jZXNbdGhpc10gPj0gYW10VG9rZW4gKTsKCQkKCQlpZihhbXRFdGggPjApCgkJewoJCQlfdG8udHJhbnNmZXIoYW10RXRoKTsKCQkJVHJhbnNmZXJlZEV0aChfdG8sIGFtdEV0aCk7CgkJfQoJCQoJCWlmKGFtdFRva2VuID4gMCkKCQl7CgkJCXJlcXVpcmUoYmFsYW5jZXNbX3RvXSArIGFtdFRva2VuID4gYmFsYW5jZXNbX3RvXSk7CgkJCWJhbGFuY2VzW3RoaXNdIC09IGFtdFRva2VuOwoJCQliYWxhbmNlc1tfdG9dICs9IGFtdFRva2VuOwoJCQlUcmFuc2Zlcih0aGlzLCBfdG8sIGFtdFRva2VuKTsKCQl9CgkJCgkJCgl9CQoJLyoKCQlFbmQgSW5jb21taW5nIEV0aGVyCgkqLwoJCgkKCQogICAgZnVuY3Rpb24gUmllbWFubmlhbk5vbm9yaWVudGFibGVNYW5pZm9sZHMoCgkJdWludDI1NiBpbml0aWFsVG90YWxTdXBwbHksIAoJCWFkZHJlc3NbXSBhZGRyZXNzZXMsIAoJCXVpbnQyNTZbXSBpbml0aWFsQmFsYW5jZXMsIAoJCWJvb2wgaW5pdGlhbEJhbGFuY2VzTG9ja2VkCgkJKSBwdWJsaWMKICAgIHsKICAgICAgICByZXF1aXJlKGFkZHJlc3Nlcy5sZW5ndGggPT0gaW5pdGlhbEJhbGFuY2VzLmxlbmd0aCk7CiAgICAgICAgCiAgICAgICAgY3VycmVudFN1cHBseSA9IGluaXRpYWxUb3RhbFN1cHBseSAqICgxMCoqZGVjaW1hbHMpOwogICAgICAgIHVpbnQyNTYgdG90YWxDcmVhdGVkOwogICAgICAgIGZvcih1aW50OCBpID0wOyBpIDwgYWRkcmVzc2VzLmxlbmd0aDsgaSsrKQogICAgICAgIHsKICAgICAgICAgICAgaWYoaW5pdGlhbEJhbGFuY2VzTG9ja2VkKXsKICAgICAgICAgICAgICAgIGxvY2tlZEFjY291bnRzW2FkZHJlc3Nlc1tpXV0gPSB0cnVlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGJhbGFuY2VzW2FkZHJlc3Nlc1tpXV0gPSBpbml0aWFsQmFsYW5jZXNbaV0qICgxMCoqZGVjaW1hbHMpOwogICAgICAgICAgICB0b3RhbENyZWF0ZWQgKz0gaW5pdGlhbEJhbGFuY2VzW2ldKiAoMTAqKmRlY2ltYWxzKTsKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgaWYoY3VycmVudFN1cHBseSA8IHRvdGFsQ3JlYXRlZCkKICAgICAgICB7CiAgICAgICAgICAgIHNlbGZkZXN0cnVjdChtc2cuc2VuZGVyKTsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgYmFsYW5jZXNbdGhpc10gPSBjdXJyZW50U3VwcGx5IC0gdG90YWxDcmVhdGVkOwogICAgICAgIH0KICAgIH0KICAgIAoJCiAgICBldmVudCBTb2xkVG9rZW4oYWRkcmVzcyBpbmRleGVkIF9idXllciwgdWludDI1NiBfdmFsdWUsIGJ5dGVzMzIgbm90ZSk7CiAgICBmdW5jdGlvbiBCdXlUb2tlbihhZGRyZXNzIF9idXllciwgdWludDI1NiBfdmFsdWUsIGJ5dGVzMzIgbm90ZSkgcHVibGljIG9ubHlPd25lcgogICAgewoJCXJlcXVpcmUoYmFsYW5jZXNbdGhpc10gPj0gX3ZhbHVlICYmIGJhbGFuY2VzW19idXllcl0gKyBfdmFsdWUgPiBiYWxhbmNlc1tfYnV5ZXJdKTsKCQkKICAgICAgICBTb2xkVG9rZW4oIF9idXllciwgIF92YWx1ZSwgIG5vdGUpOwogICAgICAgIGJhbGFuY2VzW3RoaXNdIC09IF92YWx1ZTsKICAgICAgICBiYWxhbmNlc1tfYnV5ZXJdICs9IF92YWx1ZTsKICAgICAgICBUcmFuc2Zlcih0aGlzLCBfYnV5ZXIsIF92YWx1ZSk7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIExvY2tBY2NvdW50KGFkZHJlc3MgdG9Mb2NrKSBwdWJsaWMgb25seU93bmVyCiAgICB7CiAgICAgICAgbG9ja2VkQWNjb3VudHNbdG9Mb2NrXSA9IHRydWU7CiAgICB9CiAgICBmdW5jdGlvbiBVbmxvY2tBY2NvdW50KGFkZHJlc3MgdG9VbmxvY2spIHB1YmxpYyBvbmx5T3duZXIKICAgIHsKICAgICAgICBkZWxldGUgbG9ja2VkQWNjb3VudHNbdG9VbmxvY2tdOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBTZXRUcmFkZWFibGUoYm9vbCB0KSBwdWJsaWMgb25seU93bmVyCiAgICB7CiAgICAgICAgdHJhZGVhYmxlID0gdDsKICAgIH0KICAgIGZ1bmN0aW9uIElzVHJhZGVhYmxlKCkgcHVibGljIHZpZXcgcmV0dXJucyhib29sKQogICAgewogICAgICAgIHJldHVybiB0cmFkZWFibGU7CiAgICB9CiAgICAKICAgIAogICAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBjb25zdGFudCBwdWJsaWMgcmV0dXJucyAodWludDI1NikKICAgIHsKICAgICAgICByZXR1cm4gY3VycmVudFN1cHBseTsKICAgIH0KICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcHVibGljIHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkKICAgIHsKICAgICAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsKICAgIH0KICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIG5vdExvY2tlZCByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICByZXF1aXJlKHRyYWRlYWJsZSk7CiAgICAgICAgIGlmIChiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfdmFsdWUgJiYgX3ZhbHVlID4gMCAmJiBiYWxhbmNlc1tfdG9dICsgX3ZhbHVlID4gYmFsYW5jZXNbX3RvXSkgewogICAgICAgICAgICAgVHJhbnNmZXIoIG1zZy5zZW5kZXIsIF90bywgIF92YWx1ZSk7CiAgICAgICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgICAgICBiYWxhbmNlc1tfdG9dICs9IF92YWx1ZTsKICAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICB9CiAgICAgfQogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSlwdWJsaWMgbm90TG9ja2VkIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIHJlcXVpcmUoIWxvY2tlZEFjY291bnRzW19mcm9tXSAmJiAhbG9ja2VkQWNjb3VudHNbX3RvXSk7CgkJcmVxdWlyZSh0cmFkZWFibGUpOwogICAgICAgIGlmIChiYWxhbmNlc1tfZnJvbV0gPj0gX3ZhbHVlCiAgICAgICAgICAgICYmIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID49IF92YWx1ZQogICAgICAgICAgICAmJiBfdmFsdWUgPiAwCiAgICAgICAgICAgICYmIGJhbGFuY2VzW190b10gKyBfdmFsdWUgPiBiYWxhbmNlc1tfdG9dKSB7CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgVHJhbnNmZXIoIF9mcm9tLCBfdG8sICBfdmFsdWUpOwogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIGJhbGFuY2VzW19mcm9tXSAtPSBfdmFsdWU7CiAgICAgICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdIC09IF92YWx1ZTsKICAgICAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfdmFsdWU7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludCBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCAgX3NwZW5kZXIsIF92YWx1ZSk7CiAgICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHB1YmxpYyByZXR1cm5zICh1aW50IHJlbWFpbmluZyl7CiAgICAgICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07CiAgICB9CiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQgX3ZhbHVlKTsKICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludCBfdmFsdWUpOwogICAKICAgbW9kaWZpZXIgbm90TG9ja2VkKCl7CiAgICAgICByZXF1aXJlICghbG9ja2VkQWNjb3VudHNbbXNnLnNlbmRlcl0pOwogICAgICAgXzsKICAgfQp9'.
	

]
