Class {
	#name : #SRT66b1e7e51a441f41a0584820a629ba36fd2e2dda,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT66b1e7e51a441f41a0584820a629ba36fd2e2dda >> base64 [
	^ ''.
	

]
