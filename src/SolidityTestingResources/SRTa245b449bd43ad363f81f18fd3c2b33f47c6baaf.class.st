Class {
	#name : #SRTa245b449bd43ad363f81f18fd3c2b33f47c6baaf,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTa245b449bd43ad363f81f18fd3c2b33f47c6baaf >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTY7CgppbnRlcmZhY2UgQ0NDUkNvaW4gewogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyByZWNlaXZlciwgdWludCBhbW91bnQpOwp9CgpsaWJyYXJ5IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAKICAgIHVpbnQyNTYgYyA9IGEgLyBiOwogICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KCn0KCmNvbnRyYWN0IE93bmFibGUgewogIGFkZHJlc3MgcHVibGljIG93bmVyOwoKICAvKioKICAgKiBAZGV2IFRoZSBPd25hYmxlIGNvbnN0cnVjdG9yIHNldHMgdGhlIG9yaWdpbmFsIGBvd25lcmAgb2YgdGhlIGNvbnRyYWN0IHRvIHRoZSBzZW5kZXIKICAgKiBhY2NvdW50LgogICAqLwogIGZ1bmN0aW9uIE93bmFibGUoKSB7CiAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgfQoKICAvKioKICAgKiBAZGV2IFRocm93cyBpZiBjYWxsZWQgYnkgYW55IGFjY291bnQgb3RoZXIgdGhhbiB0aGUgb3duZXIuCiAgICovCiAgbW9kaWZpZXIgb25seU93bmVyKCkgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyKTsKICAgIF87CiAgfQoKICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld093bmVyKSBvbmx5T3duZXIgewogICAgaWYgKG5ld093bmVyICE9IGFkZHJlc3MoMCkpIHsKICAgICAgb3duZXIgPSBuZXdPd25lcjsKICAgIH0KICB9Cgp9CgovKioKICogQHRpdGxlIFBhdXNhYmxlCiAqIEBkZXYgQmFzZSBjb250cmFjdCB3aGljaCBhbGxvd3MgY2hpbGRyZW4gdG8gaW1wbGVtZW50IGFuIGVtZXJnZW5jeSBzdG9wIG1lY2hhbmlzbS4KICovCmNvbnRyYWN0IFBhdXNhYmxlIGlzIE93bmFibGUgewogIGV2ZW50IFBhdXNlKCk7CiAgZXZlbnQgVW5wYXVzZSgpOwoKICBib29sIHB1YmxpYyBwYXVzZWQgPSBmYWxzZTsKCgogIC8qKgogICAqIEBkZXYgTW9kaWZpZXIgdG8gbWFrZSBhIGZ1bmN0aW9uIGNhbGxhYmxlIG9ubHkgd2hlbiB0aGUgY29udHJhY3QgaXMgbm90IHBhdXNlZC4KICAgKi8KICBtb2RpZmllciB3aGVuTm90UGF1c2VkKCkgewogICAgcmVxdWlyZSghcGF1c2VkKTsKICAgIF87CiAgfQoKICAvKioKICAgKiBAZGV2IE1vZGlmaWVyIHRvIG1ha2UgYSBmdW5jdGlvbiBjYWxsYWJsZSBvbmx5IHdoZW4gdGhlIGNvbnRyYWN0IGlzIHBhdXNlZC4KICAgKi8KICBtb2RpZmllciB3aGVuUGF1c2VkKCkgewogICAgcmVxdWlyZShwYXVzZWQpOwogICAgXzsKICB9CgogIC8qKgogICAqIEBkZXYgY2FsbGVkIGJ5IHRoZSBvd25lciB0byBwYXVzZSwgdHJpZ2dlcnMgc3RvcHBlZCBzdGF0ZQogICAqLwogIGZ1bmN0aW9uIHBhdXNlKCkgb25seU93bmVyIHdoZW5Ob3RQYXVzZWQgcHVibGljIHsKICAgIHBhdXNlZCA9IHRydWU7CiAgICBQYXVzZSgpOwogIH0KCiAgLyoqCiAgICogQGRldiBjYWxsZWQgYnkgdGhlIG93bmVyIHRvIHVucGF1c2UsIHJldHVybnMgdG8gbm9ybWFsIHN0YXRlCiAgICovCiAgZnVuY3Rpb24gdW5wYXVzZSgpIG9ubHlPd25lciB3aGVuUGF1c2VkIHB1YmxpYyB7CiAgICBwYXVzZWQgPSBmYWxzZTsKICAgIFVucGF1c2UoKTsKICB9Cn0KCmNvbnRyYWN0IENDQ1JTYWxlIGlzIFBhdXNhYmxlIHsKICAgIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwoKICAgIGFkZHJlc3MgcHVibGljIGludmVzdFdhbGxldCA9IDB4YmIyZWZGYWI5MzJhNGMyZjc3RmMxNjE3QzFhNTYzNzM4RDcxQjBhNzsKICAgIENDQ1JDb2luIHB1YmxpYyB0b2tlblJld2FyZDsgCiAgICB1aW50MjU2IHB1YmxpYyB0b2tlblByaWNlID0gODU2OyAvLyAxRVRIICg4NTYkKSAvIDEkCiAgICB1aW50MjU2IHplcm9BbW91bnQgPSAxMDAwMDAwMDAwMDsgLy8gMTAgemVybwogICAgdWludDI1NiBzdGFydGxpbmUgPSAxNTEwNzM2NDAwOyAvLyAxNS4xMS4xNyAxMjowMAogICAgdWludDI1NiBwdWJsaWMgbWluQ2FwID0gMzAwMDAwMDAwMDAwMDAwOwogICAgdWludDI1NiBwdWJsaWMgdG90YWxSYWlzZWQgPSAyMDcwMDg5OTczNTUzMDA7CgogICAgZnVuY3Rpb24gQ0NDUlNhbGUoYWRkcmVzcyBfdG9rZW5SZXdhcmQpIHsKICAgICAgICB0b2tlblJld2FyZCA9IENDQ1JDb2luKF90b2tlblJld2FyZCk7CiAgICB9CgogICAgZnVuY3Rpb24gKCkgd2hlbk5vdFBhdXNlZCBwYXlhYmxlIHsKICAgICAgICBidXkobXNnLnNlbmRlciwgbXNnLnZhbHVlKTsgCiAgICB9CgogICAgZnVuY3Rpb24gZ2V0UmF0ZSgpIGNvbnN0YW50IGludGVybmFsIHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICBpZiAgICAgIChibG9jay50aW1lc3RhbXAgPCBzdGFydGxpbmUgKyAxOSBkYXlzKSByZXR1cm4gdG9rZW5QcmljZS5tdWwoMTM4KS5kaXYoMTAwKTsKICAgICAgICBlbHNlIGlmIChibG9jay50aW1lc3RhbXAgPD0gc3RhcnRsaW5lICsgNDYgZGF5cykgcmV0dXJuIHRva2VuUHJpY2UubXVsKDEyMykuZGl2KDEwMCk7CiAgICAgICAgZWxzZSBpZiAoYmxvY2sudGltZXN0YW1wIDw9IHN0YXJ0bGluZSArIDYwIGRheXMpIHJldHVybiB0b2tlblByaWNlLm11bCgxMTUpLmRpdigxMDApOwogICAgICAgIGVsc2UgaWYgKGJsb2NrLnRpbWVzdGFtcCA8PSBzdGFydGxpbmUgKyA3NCBkYXlzKSByZXR1cm4gdG9rZW5QcmljZS5tdWwoMTA5KS5kaXYoMTAwKTsKICAgICAgICByZXR1cm4gdG9rZW5QcmljZTsKICAgIH0KCiAgICBmdW5jdGlvbiBidXkoYWRkcmVzcyBidXllciwgdWludDI1NiBfYW1vdW50KSB3aGVuTm90UGF1c2VkIHBheWFibGUgewogICAgICAgIHJlcXVpcmUoYnV5ZXIgIT0gYWRkcmVzcygwKSk7CiAgICAgICAgcmVxdWlyZShtc2cudmFsdWUgIT0gMCk7CgogICAgICAgIHVpbnQyNTYgYW1vdW50ID0gX2Ftb3VudC5kaXYoemVyb0Ftb3VudCk7CiAgICAgICAgdWludDI1NiB0b2tlbnMgPSBhbW91bnQubXVsKGdldFJhdGUoKSk7CiAgICAgICAgdG9rZW5SZXdhcmQudHJhbnNmZXIoYnV5ZXIsIHRva2Vucyk7CgogICAgICAgIGludmVzdFdhbGxldC50cmFuc2Zlcih0aGlzLmJhbGFuY2UpOwogICAgICAgIHRvdGFsUmFpc2VkID0gdG90YWxSYWlzZWQuYWRkKHRva2Vucyk7CgogICAgICAgIGlmICh0b3RhbFJhaXNlZCA+PSBtaW5DYXApIHsKICAgICAgICAgIHBhdXNlZCA9IHRydWU7CiAgICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIHVwZGF0ZVByaWNlKHVpbnQyNTYgX3Rva2VuUHJpY2UpIGV4dGVybmFsIG9ubHlPd25lciB7CiAgICAgICAgdG9rZW5QcmljZSA9IF90b2tlblByaWNlOwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyVG9rZW5zKHVpbnQyNTYgX3Rva2VucykgZXh0ZXJuYWwgb25seU93bmVyIHsKICAgICAgICB0b2tlblJld2FyZC50cmFuc2Zlcihvd25lciwgX3Rva2Vucyk7IAogICAgfQoKICAgIGZ1bmN0aW9uIGFpcmRyb3AoYWRkcmVzc1tdIF9hcnJheTEsIHVpbnQyNTZbXSBfYXJyYXkyKSBleHRlcm5hbCBvbmx5T3duZXIgewogICAgICAgYWRkcmVzc1tdIG1lbW9yeSBhcnJheUFkZHJlc3MgPSBfYXJyYXkxOwogICAgICAgdWludDI1NltdIG1lbW9yeSBhcnJheUFtb3VudCA9IF9hcnJheTI7CiAgICAgICB1aW50MjU2IGFycmF5TGVuZ3RoID0gYXJyYXlBZGRyZXNzLmxlbmd0aC5zdWIoMSk7CiAgICAgICB1aW50MjU2IGkgPSAwOwogICAgICAgCiAgICAgICB3aGlsZSAoaSA8PSBhcnJheUxlbmd0aCkgewogICAgICAgICAgIHRva2VuUmV3YXJkLnRyYW5zZmVyKGFycmF5QWRkcmVzc1tpXSwgYXJyYXlBbW91bnRbaV0pOwogICAgICAgICAgIGkgPSBpLmFkZCgxKTsKICAgICAgIH0gIAogICB9Cgp9'.
	

]
