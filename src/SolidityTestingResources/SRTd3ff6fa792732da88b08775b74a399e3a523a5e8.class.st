Class {
	#name : #SRTd3ff6fa792732da88b08775b74a399e3a523a5e8,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTd3ff6fa792732da88b08775b74a399e3a523a5e8 >> base64 [
	^ ''.
	

]
