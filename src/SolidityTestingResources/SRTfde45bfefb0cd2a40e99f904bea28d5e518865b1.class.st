Class {
	#name : #SRTfde45bfefb0cd2a40e99f904bea28d5e518865b1,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTfde45bfefb0cd2a40e99f904bea28d5e518865b1 >> base64 [
	^ ''.
	

]
