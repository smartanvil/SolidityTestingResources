Class {
	#name : #SRTa1ea6670edf54d0cf557491cc9be249dc25dc20b,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTa1ea6670edf54d0cf557491cc9be249dc25dc20b >> base64 [
	^ 'Ly8gQXV0aG9yIDogc2hpZnQKCnByYWdtYSBzb2xpZGl0eSBeMC40LjEzOwoKLy8gRVJDMjAgSW50ZXJmYWNlOiBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9pc3N1ZXMvMjAKY29udHJhY3QgRVJDMjAgewogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSk7Cn0KCi8qCiAgVGhpcyBjb250cmFjdCBzdG9yZXMgdHdpY2UgZXZlcnkga2V5IHZhbHVlIGluIG9yZGVyIHRvIGJlIGFibGUgdG8gcmVkaXN0cmlidXRlIGZ1bmRzCiAgd2hlbiB0aGUgYm9udXMgdG9rZW5zIGFyZSByZWNlaXZlZCAod2hpY2ggaXMgdHlwaWNhbGx5IFggbW9udGhzIGFmdGVyIHRoZSBpbml0aWFsIGJ1eSkuCiovCgpjb250cmFjdCBTRUNSRVRTYW5pdHkgewoKICBtb2RpZmllciBvbmx5T3duZXIgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IGRldmVsb3Blcik7CiAgICBfOwogIH0KCiAgLy9TdG9yZSB0aGUgYW1vdW50IG9mIEVUSCBkZXBvc2l0ZWQgYnkgZWFjaCBhY2NvdW50LgogIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIGJhbGFuY2VzOwogIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIGJhbGFuY2VzX2JvbnVzOwogIC8vIFRyYWNrIHdoZXRoZXIgdGhlIGNvbnRyYWN0IGhhcyBib3VnaHQgdGhlIHRva2VucyB5ZXQuCiAgYm9vbCBwdWJsaWMgYm91Z2h0X3Rva2VucyA9IGZhbHNlOwogIC8vIFJlY29yZCBFVEggdmFsdWUgb2YgdG9rZW5zIGN1cnJlbnRseSBoZWxkIGJ5IGNvbnRyYWN0LgogIHVpbnQyNTYgcHVibGljIGNvbnRyYWN0X2V0aF92YWx1ZTsKICB1aW50MjU2IHB1YmxpYyBjb250cmFjdF9ldGhfdmFsdWVfYm9udXM7CiAgLy9TZXQgYnkgdGhlIG93bmVyIGluIG9yZGVyIHRvIGFsbG93IHRoZSB3aXRoZHJhd2FsIG9mIGJvbnVzIHRva2Vucy4KICBib29sIGJvbnVzX3JlY2VpdmVkOwogIC8vVGhlIGFkZHJlc3Mgb2YgdGhlIGNvbnRhY3QuCiAgYWRkcmVzcyBwdWJsaWMgc2FsZSA9IDB4Njk5N2Y3ODA1MjFFMjMzMTMwMjQ5ZmMwMGJEN2UwYTdGMmRkYmJDRjsKICAvLyBUb2tlbiBhZGRyZXNzCiAgRVJDMjAgcHVibGljIHRva2VuOwogIGFkZHJlc3MgY29uc3RhbnQgcHVibGljIGRldmVsb3BlciA9IDB4RUUwNkJkRGFmRkE1NmEzMDM3MThERTUzQTViYzM0N0VmYkU0QzY4ZjsKICB1aW50MjU2IGZlZXM7CiAgCiAgLy8gQWxsb3dzIGFueSB1c2VyIHRvIHdpdGhkcmF3IGhpcyB0b2tlbnMuCiAgZnVuY3Rpb24gd2l0aGRyYXcoKSB7CiAgICAvLyBEaXNhbGxvdyB3aXRoZHJhdyBpZiB0b2tlbnMgaGF2ZW4ndCBiZWVuIGJvdWdodCB5ZXQuCiAgICByZXF1aXJlKGJvdWdodF90b2tlbnMpOwogICAgdWludDI1NiBjb250cmFjdF90b2tlbl9iYWxhbmNlID0gdG9rZW4uYmFsYW5jZU9mKGFkZHJlc3ModGhpcykpOwogICAgLy8gRGlzYWxsb3cgdG9rZW4gd2l0aGRyYXdhbHMgaWYgdGhlcmUgYXJlIG5vIHRva2VucyB0byB3aXRoZHJhdy4KICAgIHJlcXVpcmUoY29udHJhY3RfdG9rZW5fYmFsYW5jZSAhPSAwKTsKICAgIHVpbnQyNTYgdG9rZW5zX3RvX3dpdGhkcmF3ID0gKGJhbGFuY2VzW21zZy5zZW5kZXJdICogY29udHJhY3RfdG9rZW5fYmFsYW5jZSkgLyBjb250cmFjdF9ldGhfdmFsdWU7CiAgICAvLyBVcGRhdGUgdGhlIHZhbHVlIG9mIHRva2VucyBjdXJyZW50bHkgaGVsZCBieSB0aGUgY29udHJhY3QuCiAgICBjb250cmFjdF9ldGhfdmFsdWUgLT0gYmFsYW5jZXNbbXNnLnNlbmRlcl07CiAgICAvLyBVcGRhdGUgdGhlIHVzZXIncyBiYWxhbmNlIHByaW9yIHRvIHNlbmRpbmcgdG8gcHJldmVudCByZWN1cnNpdmUgY2FsbC4KICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gMDsKICAgIC8vIFNlbmQgdGhlIGZ1bmRzLiAgVGhyb3dzIG9uIGZhaWx1cmUgdG8gcHJldmVudCBsb3NzIG9mIGZ1bmRzLgogICAgcmVxdWlyZSh0b2tlbi50cmFuc2Zlcihtc2cuc2VuZGVyLCB0b2tlbnNfdG9fd2l0aGRyYXcpKTsKICB9CgogIGZ1bmN0aW9uIHdpdGhkcmF3X2JvbnVzKCkgewogIC8qCiAgICBTcGVjaWFsIGZ1bmN0aW9uIHRvIHdpdGhkcmF3IHRoZSBib251cyB0b2tlbnMgYWZ0ZXIgdGhlIDYgbW9udGhzIGxvY2t1cC4KICAgIGJvbnVzX3JlY2VpdmVkIGhhcyB0byBiZSBzZXQgdG8gdHJ1ZS4KICAqLwogICAgcmVxdWlyZShib3VnaHRfdG9rZW5zKTsKICAgIHJlcXVpcmUoYm9udXNfcmVjZWl2ZWQpOwogICAgdWludDI1NiBjb250cmFjdF90b2tlbl9iYWxhbmNlID0gdG9rZW4uYmFsYW5jZU9mKGFkZHJlc3ModGhpcykpOwogICAgcmVxdWlyZShjb250cmFjdF90b2tlbl9iYWxhbmNlICE9IDApOwogICAgdWludDI1NiB0b2tlbnNfdG9fd2l0aGRyYXcgPSAoYmFsYW5jZXNfYm9udXNbbXNnLnNlbmRlcl0gKiBjb250cmFjdF90b2tlbl9iYWxhbmNlKSAvIGNvbnRyYWN0X2V0aF92YWx1ZV9ib251czsKICAgIGNvbnRyYWN0X2V0aF92YWx1ZV9ib251cyAtPSBiYWxhbmNlc19ib251c1ttc2cuc2VuZGVyXTsKICAgIGJhbGFuY2VzX2JvbnVzW21zZy5zZW5kZXJdID0gMDsKICAgIHJlcXVpcmUodG9rZW4udHJhbnNmZXIobXNnLnNlbmRlciwgdG9rZW5zX3RvX3dpdGhkcmF3KSk7CiAgfQogIAogIC8vIEFsbG93cyBhbnkgdXNlciB0byBnZXQgaGlzIGV0aCByZWZ1bmRlZCBiZWZvcmUgdGhlIHB1cmNoYXNlIGlzIG1hZGUuCiAgZnVuY3Rpb24gcmVmdW5kX21lKCkgewogICAgcmVxdWlyZSghYm91Z2h0X3Rva2Vucyk7CiAgICAvLyBTdG9yZSB0aGUgdXNlcidzIGJhbGFuY2UgcHJpb3IgdG8gd2l0aGRyYXdhbCBpbiBhIHRlbXBvcmFyeSB2YXJpYWJsZS4KICAgIHVpbnQyNTYgZXRoX3RvX3dpdGhkcmF3ID0gYmFsYW5jZXNbbXNnLnNlbmRlcl07CiAgICAvLyBVcGRhdGUgdGhlIHVzZXIncyBiYWxhbmNlIHByaW9yIHRvIHNlbmRpbmcgRVRIIHRvIHByZXZlbnQgcmVjdXJzaXZlIGNhbGwuCiAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IDA7CiAgICAvL1VwZGF0ZXMgdGhlIGJhbGFuY2VzX2JvbnVzIHRvbwogICAgYmFsYW5jZXNfYm9udXNbbXNnLnNlbmRlcl0gPSAwOwogICAgLy8gUmV0dXJuIHRoZSB1c2VyJ3MgZnVuZHMuICBUaHJvd3Mgb24gZmFpbHVyZSB0byBwcmV2ZW50IGxvc3Mgb2YgZnVuZHMuCiAgICBtc2cuc2VuZGVyLnRyYW5zZmVyKGV0aF90b193aXRoZHJhdyk7CiAgfQogIAogIC8vIEJ1eSB0aGUgdG9rZW5zLiBTZW5kcyBFVEggdG8gdGhlIHByZXNhbGUgd2FsbGV0IGFuZCByZWNvcmRzIHRoZSBFVEggYW1vdW50IGhlbGQgaW4gdGhlIGNvbnRyYWN0LgogIGZ1bmN0aW9uIGJ1eV90aGVfdG9rZW5zKCkgb25seU93bmVyIHsKICAgIHJlcXVpcmUoIWJvdWdodF90b2tlbnMpOwogICAgcmVxdWlyZShzYWxlICE9IDB4MCk7CiAgICAvL1JlY29yZCB0aGF0IHRoZSBjb250cmFjdCBoYXMgYm91Z2h0IHRoZSB0b2tlbnMuCiAgICBib3VnaHRfdG9rZW5zID0gdHJ1ZTsKICAgIC8vU2VudCBiZWZvcmUgc28gdGhlIGNvbnRyYWN0X2V0aF92YWx1ZSBjb250YWlucyB0aGUgY29ycmVjdCBiYWxhbmNlCiAgICBkZXZlbG9wZXIudHJhbnNmZXIoZmVlcyk7CiAgICAvL1JlY29yZCB0aGUgYW1vdW50IG9mIEVUSCBzZW50IGFzIHRoZSBjb250cmFjdCdzIGN1cnJlbnQgdmFsdWUuCiAgICBjb250cmFjdF9ldGhfdmFsdWUgPSB0aGlzLmJhbGFuY2U7CiAgICBjb250cmFjdF9ldGhfdmFsdWVfYm9udXMgPSB0aGlzLmJhbGFuY2U7CiAgICAvLyBUcmFuc2ZlciBhbGwgdGhlIGZ1bmRzIHRvIHRoZSBjcm93ZHNhbGUgYWRkcmVzcy4KICAgIHNhbGUudHJhbnNmZXIoY29udHJhY3RfZXRoX3ZhbHVlKTsKICB9CiAgCiAgZnVuY3Rpb24gc2V0X3Rva2VuX2FkZHJlc3MoYWRkcmVzcyBfdG9rZW4pIG9ubHlPd25lciB7CiAgICByZXF1aXJlKF90b2tlbiAhPSAweDApOwogICAgdG9rZW4gPSBFUkMyMChfdG9rZW4pOwogIH0KCiAgZnVuY3Rpb24gc2V0X2JvbnVzX3JlY2VpdmVkKCkgb25seU93bmVyIHsKICAgIGJvbnVzX3JlY2VpdmVkID0gdHJ1ZTsKICB9CgogIC8vIERlZmF1bHQgZnVuY3Rpb24uICBDYWxsZWQgd2hlbiBhIHVzZXIgc2VuZHMgRVRIIHRvIHRoZSBjb250cmFjdC4KICBmdW5jdGlvbiAoKSBwYXlhYmxlIHsKICAgIHJlcXVpcmUoIWJvdWdodF90b2tlbnMpOwogICAgLy9GZWUgaXMgdGFrZW4gb24gdGhlIEVUSAogICAgdWludDI1NiBmZWUgPSBtc2cudmFsdWUgLyA1MDsKICAgIGZlZXMgKz0gZmVlOwogICAgLy9VcGRhdGVzIGJvdGggb2YgdGhlIGJhbGFuY2VzCiAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSArPSAobXNnLnZhbHVlLWZlZSk7CiAgICBiYWxhbmNlc19ib251c1ttc2cuc2VuZGVyXSArPSAobXNnLnZhbHVlLWZlZSk7CiAgfQp9'.
	

]
