Class {
	#name : #SRT6b7290527ab68d72158cecaef27b0db6238b6fc5,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT6b7290527ab68d72158cecaef27b0db6238b6fc5 >> base64 [
	^ 'LyoKSW1wbGVtZW50cyBFSVAyMCB0b2tlbiBzdGFuZGFyZDogaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL0VJUHMvYmxvYi9tYXN0ZXIvRUlQUy9laXAtMjAubWQKLiovCgoKcHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgoKY29udHJhY3QgRUlQMjBJbnRlcmZhY2UgewogICAgLyogVGhpcyBpcyBhIHNsaWdodCBjaGFuZ2UgdG8gdGhlIEVSQzIwIGJhc2Ugc3RhbmRhcmQuCiAgICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgc3VwcGx5KTsKICAgIGlzIHJlcGxhY2VkIHdpdGg6CiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsKICAgIFRoaXMgYXV0b21hdGljYWxseSBjcmVhdGVzIGEgZ2V0dGVyIGZ1bmN0aW9uIGZvciB0aGUgdG90YWxTdXBwbHkuCiAgICBUaGlzIGlzIG1vdmVkIHRvIHRoZSBiYXNlIGNvbnRyYWN0IHNpbmNlIHB1YmxpYyBnZXR0ZXIgZnVuY3Rpb25zIGFyZSBub3QKICAgIGN1cnJlbnRseSByZWNvZ25pc2VkIGFzIGFuIGltcGxlbWVudGF0aW9uIG9mIHRoZSBtYXRjaGluZyBhYnN0cmFjdAogICAgZnVuY3Rpb24gYnkgdGhlIGNvbXBpbGVyLgogICAgKi8KICAgIC8vLyB0b3RhbCBhbW91bnQgb2YgdG9rZW5zCiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsKCiAgICAvLy8gQHBhcmFtIF9vd25lciBUaGUgYWRkcmVzcyBmcm9tIHdoaWNoIHRoZSBiYWxhbmNlIHdpbGwgYmUgcmV0cmlldmVkCiAgICAvLy8gQHJldHVybiBUaGUgYmFsYW5jZQogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpOwoKICAgIC8vLyBAbm90aWNlIHNlbmQgYF92YWx1ZWAgdG9rZW4gdG8gYF90b2AgZnJvbSBgbXNnLnNlbmRlcmAKICAgIC8vLyBAcGFyYW0gX3RvIFRoZSBhZGRyZXNzIG9mIHRoZSByZWNpcGllbnQKICAgIC8vLyBAcGFyYW0gX3ZhbHVlIFRoZSBhbW91bnQgb2YgdG9rZW4gdG8gYmUgdHJhbnNmZXJyZWQKICAgIC8vLyBAcmV0dXJuIFdoZXRoZXIgdGhlIHRyYW5zZmVyIHdhcyBzdWNjZXNzZnVsIG9yIG5vdAogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKCiAgICAvLy8gQG5vdGljZSBzZW5kIGBfdmFsdWVgIHRva2VuIHRvIGBfdG9gIGZyb20gYF9mcm9tYCBvbiB0aGUgY29uZGl0aW9uIGl0IGlzIGFwcHJvdmVkIGJ5IGBfZnJvbWAKICAgIC8vLyBAcGFyYW0gX2Zyb20gVGhlIGFkZHJlc3Mgb2YgdGhlIHNlbmRlcgogICAgLy8vIEBwYXJhbSBfdG8gVGhlIGFkZHJlc3Mgb2YgdGhlIHJlY2lwaWVudAogICAgLy8vIEBwYXJhbSBfdmFsdWUgVGhlIGFtb3VudCBvZiB0b2tlbiB0byBiZSB0cmFuc2ZlcnJlZAogICAgLy8vIEByZXR1cm4gV2hldGhlciB0aGUgdHJhbnNmZXIgd2FzIHN1Y2Nlc3NmdWwgb3Igbm90CiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKCiAgICAvLy8gQG5vdGljZSBgbXNnLnNlbmRlcmAgYXBwcm92ZXMgYF9zcGVuZGVyYCB0byBzcGVuZCBgX3ZhbHVlYCB0b2tlbnMKICAgIC8vLyBAcGFyYW0gX3NwZW5kZXIgVGhlIGFkZHJlc3Mgb2YgdGhlIGFjY291bnQgYWJsZSB0byB0cmFuc2ZlciB0aGUgdG9rZW5zCiAgICAvLy8gQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IG9mIHRva2VucyB0byBiZSBhcHByb3ZlZCBmb3IgdHJhbnNmZXIKICAgIC8vLyBAcmV0dXJuIFdoZXRoZXIgdGhlIGFwcHJvdmFsIHdhcyBzdWNjZXNzZnVsIG9yIG5vdAogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CgogICAgLy8vIEBwYXJhbSBfb3duZXIgVGhlIGFkZHJlc3Mgb2YgdGhlIGFjY291bnQgb3duaW5nIHRva2VucwogICAgLy8vIEBwYXJhbSBfc3BlbmRlciBUaGUgYWRkcmVzcyBvZiB0aGUgYWNjb3VudCBhYmxlIHRvIHRyYW5zZmVyIHRoZSB0b2tlbnMKICAgIC8vLyBAcmV0dXJuIEFtb3VudCBvZiByZW1haW5pbmcgdG9rZW5zIGFsbG93ZWQgdG8gc3BlbnQKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpOwoKICAgIC8vIHNvbGhpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2ltcGxlLWV2ZW50LWZ1bmMtbmFtZSAgCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsgCiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKTsKfQoKCmNvbnRyYWN0IENvbnVuVG9rZW4gaXMgRUlQMjBJbnRlcmZhY2UgewoKICAgIHVpbnQyNTYgY29uc3RhbnQgcHJpdmF0ZSBNQVhfVUlOVDI1NiA9IDIqKjI1NiAtIDE7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBiYWxhbmNlczsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgcHVibGljIGFsbG93ZWQ7CiAgICAvKgogICAgTk9URToKICAgIFRoZSBmb2xsb3dpbmcgdmFyaWFibGVzIGFyZSBPUFRJT05BTCB2YW5pdGllcy4gT25lIGRvZXMgbm90IGhhdmUgdG8gaW5jbHVkZSB0aGVtLgogICAgVGhleSBhbGxvdyBvbmUgdG8gY3VzdG9taXNlIHRoZSB0b2tlbiBjb250cmFjdCAmIGluIG5vIHdheSBpbmZsdWVuY2VzIHRoZSBjb3JlIGZ1bmN0aW9uYWxpdHkuCiAgICBTb21lIHdhbGxldHMvaW50ZXJmYWNlcyBtaWdodCBub3QgZXZlbiBib3RoZXIgdG8gbG9vayBhdCB0aGlzIGluZm9ybWF0aW9uLgogICAgKi8KICAgIHN0cmluZyBwdWJsaWMgbmFtZTsgICAgICAgICAgICAgICAgICAgLy9mYW5jeSBuYW1lOiBlZyBTaW1vbiBCdWNrcwogICAgdWludDggcHVibGljIGRlY2ltYWxzOyAgICAgICAgICAgICAgICAvL0hvdyBtYW55IGRlY2ltYWxzIHRvIHNob3cuCiAgICBzdHJpbmcgcHVibGljIHN5bWJvbDsgICAgICAgICAgICAgICAgIC8vQW4gaWRlbnRpZmllcjogZWcgU0JYCgogICAgZnVuY3Rpb24gQ29udW5Ub2tlbigKICAgICAgICB1aW50MjU2IF9pbml0aWFsQW1vdW50LAogICAgICAgIHN0cmluZyBfdG9rZW5OYW1lLAogICAgICAgIHVpbnQ4IF9kZWNpbWFsVW5pdHMsCiAgICAgICAgc3RyaW5nIF90b2tlblN5bWJvbAogICAgKSBwdWJsaWMgewogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gX2luaXRpYWxBbW91bnQ7ICAgICAgICAgICAgICAgLy8gR2l2ZSB0aGUgY3JlYXRvciBhbGwgaW5pdGlhbCB0b2tlbnMKICAgICAgICB0b3RhbFN1cHBseSA9IF9pbml0aWFsQW1vdW50OyAgICAgICAgICAgICAgICAgICAgICAgIC8vIFVwZGF0ZSB0b3RhbCBzdXBwbHkKICAgICAgICBuYW1lID0gX3Rva2VuTmFtZTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFNldCB0aGUgbmFtZSBmb3IgZGlzcGxheSBwdXJwb3NlcwogICAgICAgIGRlY2ltYWxzID0gX2RlY2ltYWxVbml0czsgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gQW1vdW50IG9mIGRlY2ltYWxzIGZvciBkaXNwbGF5IHB1cnBvc2VzCiAgICAgICAgc3ltYm9sID0gX3Rva2VuU3ltYm9sOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBTZXQgdGhlIHN5bWJvbCBmb3IgZGlzcGxheSBwdXJwb3NlcwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIHJlcXVpcmUoYmFsYW5jZXNbbXNnLnNlbmRlcl0gPj0gX3ZhbHVlKTsKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfdmFsdWU7CiAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICB1aW50MjU2IGFsbG93YW5jZSA9IGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdOwogICAgICAgIHJlcXVpcmUoYmFsYW5jZXNbX2Zyb21dID49IF92YWx1ZSAmJiBhbGxvd2FuY2UgPj0gX3ZhbHVlKTsKICAgICAgICBiYWxhbmNlc1tfdG9dICs9IF92YWx1ZTsKICAgICAgICBiYWxhbmNlc1tfZnJvbV0gLT0gX3ZhbHVlOwogICAgICAgIGlmIChhbGxvd2FuY2UgPCBNQVhfVUlOVDI1NikgewogICAgICAgICAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgfQogICAgICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpIHsKICAgICAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsKICAgIH0KCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2IHJlbWFpbmluZykgewogICAgICAgIHJldHVybiBhbGxvd2VkW19vd25lcl1bX3NwZW5kZXJdOwogICAgfSAgIAp9'.
	

]
