Class {
	#name : #SRT5846282f218a96ea184be5a67b098d652c411fc1,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT5846282f218a96ea184be5a67b098d652c411fc1 >> base64 [
	^ ''.
	

]
