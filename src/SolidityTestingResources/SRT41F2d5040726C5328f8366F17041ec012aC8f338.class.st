Class {
	#name : #SRT41F2d5040726C5328f8366F17041ec012aC8f338,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT41F2d5040726C5328f8366F17041ec012aC8f338 >> base64 [
	^ ''.
	

]
