Class {
	#name : #SRT4efcbf4c53158808fd067f58e1c67d496ef6c9ff,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT4efcbf4c53158808fd067f58e1c67d496ef6c9ff >> base64 [
	^ ''.
	

]
