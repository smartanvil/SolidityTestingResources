Class {
	#name : #SRTda5c805cfcf76ccc44ba616e0898ef1e33286063,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTda5c805cfcf76ccc44ba616e0898ef1e33286063 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTA7CgoKY29udHJhY3QgRHV0Y2hBdWN0aW9uIHsKICAgIGZ1bmN0aW9uIGJpZChhZGRyZXNzIHJlY2VpdmVyKSBwYXlhYmxlIHJldHVybnMgKHVpbnQpOwogICAgZnVuY3Rpb24gY2xhaW1Ub2tlbnMoYWRkcmVzcyByZWNlaXZlcik7CiAgICBmdW5jdGlvbiBzdGFnZSgpIHJldHVybnMgKHVpbnQpOwogICAgZnVuY3Rpb24gY2FsY1Rva2VuUHJpY2UoKSBjb25zdGFudCBwdWJsaWMgcmV0dXJucyAodWludCk7CiAgICBUb2tlbiBwdWJsaWMgZ25vc2lzVG9rZW47Cn0KCgpjb250cmFjdCBUb2tlbiB7CiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIHRvLCB1aW50MjU2IHZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3Mgb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSk7Cn0KCgpjb250cmFjdCBCaWRkaW5nUmluZyB7CgogICAgZXZlbnQgQmlkU3VibWlzc2lvbihhZGRyZXNzIGluZGV4ZWQgc2VuZGVyLCB1aW50MjU2IGFtb3VudCk7CiAgICBldmVudCBSZWZ1bmRTdWJtaXNzaW9uKGFkZHJlc3MgaW5kZXhlZCBzZW5kZXIsIHVpbnQyNTYgYW1vdW50KTsKICAgIGV2ZW50IFJlZnVuZFJlY2VpdmVkKHVpbnQyNTYgYW1vdW50KTsKCiAgICB1aW50IHB1YmxpYyBjb25zdGFudCBBVUNUSU9OX1NUQVJURUQgPSAyOwogICAgdWludCBwdWJsaWMgY29uc3RhbnQgVFJBRElOR19TVEFSVEVEID0gNDsKCiAgICBEdXRjaEF1Y3Rpb24gcHVibGljIGR1dGNoQXVjdGlvbjsKICAgIFRva2VuIHB1YmxpYyBnbm9zaXNUb2tlbjsKICAgIHVpbnQgcHVibGljIG1heFByaWNlOwogICAgdWludCBwdWJsaWMgdG90YWxDb250cmlidXRpb25zOwogICAgdWludCBwdWJsaWMgdG90YWxUb2tlbnM7CiAgICB1aW50IHB1YmxpYyB0b3RhbEJhbGFuY2U7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQpIHB1YmxpYyBjb250cmlidXRpb25zOwogICAgU3RhZ2VzIHB1YmxpYyBzdGFnZTsKCiAgICBlbnVtIFN0YWdlcyB7CiAgICAgICAgQ29udHJpYnV0aW9uc0NvbGxlY3Rpb24sCiAgICAgICAgQ29udHJpYnV0aW9uc1NlbnQsCiAgICAgICAgVG9rZW5zQ2xhaW1lZAogICAgfQoKICAgIG1vZGlmaWVyIGF0U3RhZ2UoU3RhZ2VzIF9zdGFnZSkgewogICAgICAgIGlmIChzdGFnZSAhPSBfc3RhZ2UpCiAgICAgICAgICAgIHRocm93OwogICAgICAgIF87CiAgICB9CgogICAgZnVuY3Rpb24gQmlkZGluZ1JpbmcoYWRkcmVzcyBfZHV0Y2hBdWN0aW9uLCB1aW50IF9tYXhQcmljZSkKICAgICAgICBwdWJsaWMKICAgIHsKICAgICAgICBpZiAoX2R1dGNoQXVjdGlvbiA9PSAwIHx8IF9tYXhQcmljZSA9PSAwKQogICAgICAgICAgICB0aHJvdzsKICAgICAgICBkdXRjaEF1Y3Rpb24gPSBEdXRjaEF1Y3Rpb24oX2R1dGNoQXVjdGlvbik7CiAgICAgICAgZ25vc2lzVG9rZW4gPSBkdXRjaEF1Y3Rpb24uZ25vc2lzVG9rZW4oKTsKICAgICAgICBpZiAoYWRkcmVzcyhnbm9zaXNUb2tlbikgPT0gMCkKICAgICAgICAgICAgdGhyb3c7CiAgICAgICAgbWF4UHJpY2UgPSBfbWF4UHJpY2U7CiAgICAgICAgc3RhZ2UgPSBTdGFnZXMuQ29udHJpYnV0aW9uc0NvbGxlY3Rpb247CiAgICB9CgogICAgZnVuY3Rpb24oKQogICAgICAgIHB1YmxpYwogICAgICAgIHBheWFibGUKICAgIHsKICAgICAgICBpZiAobXNnLnNlbmRlciA9PSBhZGRyZXNzKGR1dGNoQXVjdGlvbikpCiAgICAgICAgICAgIFJlZnVuZFJlY2VpdmVkKG1zZy52YWx1ZSk7CiAgICAgICAgZWxzZSBpZiAoc3RhZ2UgPT0gU3RhZ2VzLkNvbnRyaWJ1dGlvbnNDb2xsZWN0aW9uKQogICAgICAgICAgICBjb250cmlidXRlKCk7CiAgICAgICAgZWxzZSBpZiAoc3RhZ2UgPT0gU3RhZ2VzLlRva2Vuc0NsYWltZWQpCiAgICAgICAgICAgIHRyYW5zZmVyKCk7CiAgICAgICAgZWxzZQogICAgICAgICAgICB0aHJvdzsKICAgIH0KCiAgICBmdW5jdGlvbiBjb250cmlidXRlKCkKICAgICAgICBwdWJsaWMKICAgICAgICBwYXlhYmxlCiAgICAgICAgYXRTdGFnZShTdGFnZXMuQ29udHJpYnV0aW9uc0NvbGxlY3Rpb24pCiAgICB7CiAgICAgICAgY29udHJpYnV0aW9uc1ttc2cuc2VuZGVyXSArPSBtc2cudmFsdWU7CiAgICAgICAgdG90YWxDb250cmlidXRpb25zICs9IG1zZy52YWx1ZTsKICAgICAgICBCaWRTdWJtaXNzaW9uKG1zZy5zZW5kZXIsIG1zZy52YWx1ZSk7CiAgICB9CgogICAgZnVuY3Rpb24gcmVmdW5kKCkKICAgICAgICBwdWJsaWMKICAgICAgICBhdFN0YWdlKFN0YWdlcy5Db250cmlidXRpb25zQ29sbGVjdGlvbikKICAgIHsKICAgICAgICB1aW50IGNvbnRyaWJ1dGlvbiA9IGNvbnRyaWJ1dGlvbnNbbXNnLnNlbmRlcl07CiAgICAgICAgY29udHJpYnV0aW9uc1ttc2cuc2VuZGVyXSA9IDA7CiAgICAgICAgdG90YWxDb250cmlidXRpb25zIC09IGNvbnRyaWJ1dGlvbjsKICAgICAgICBSZWZ1bmRTdWJtaXNzaW9uKG1zZy5zZW5kZXIsIGNvbnRyaWJ1dGlvbik7CiAgICAgICAgaWYgKCFtc2cuc2VuZGVyLnNlbmQoY29udHJpYnV0aW9uKSkKICAgICAgICAgICAgdGhyb3c7CiAgICB9CgogICAgZnVuY3Rpb24gYmlkUHJveHkoKQogICAgICAgIHB1YmxpYwogICAgICAgIGF0U3RhZ2UoU3RhZ2VzLkNvbnRyaWJ1dGlvbnNDb2xsZWN0aW9uKQogICAgewogICAgICAgIC8vIENoZWNrIGF1Y3Rpb24gaGFzIHN0YXJ0ZWQgYW5kIHByaWNlIGlzIGJlbG93IG1heCBwcmljZQogICAgICAgIGlmIChkdXRjaEF1Y3Rpb24uc3RhZ2UoKSAhPSBBVUNUSU9OX1NUQVJURUQgfHwgZHV0Y2hBdWN0aW9uLmNhbGNUb2tlblByaWNlKCkgPiBtYXhQcmljZSkKICAgICAgICAgICAgdGhyb3c7CiAgICAgICAgLy8gU2VuZCBhbGwgbW9uZXkgdG8gYXVjdGlvbiBjb250cmFjdAogICAgICAgIHN0YWdlID0gU3RhZ2VzLkNvbnRyaWJ1dGlvbnNTZW50OwogICAgICAgIGR1dGNoQXVjdGlvbi5iaWQudmFsdWUodGhpcy5iYWxhbmNlKSgwKTsKICAgIH0KCiAgICBmdW5jdGlvbiBjbGFpbVByb3h5KCkKICAgICAgICBwdWJsaWMKICAgICAgICBhdFN0YWdlKFN0YWdlcy5Db250cmlidXRpb25zU2VudCkKICAgIHsKICAgICAgICAvLyBBdWN0aW9uIGlzIG92ZXIKICAgICAgICBpZiAoZHV0Y2hBdWN0aW9uLnN0YWdlKCkgIT0gVFJBRElOR19TVEFSVEVEKQogICAgICAgICAgICB0aHJvdzsKICAgICAgICBkdXRjaEF1Y3Rpb24uY2xhaW1Ub2tlbnMoMCk7CiAgICAgICAgdG90YWxUb2tlbnMgPSBnbm9zaXNUb2tlbi5iYWxhbmNlT2YodGhpcyk7CiAgICAgICAgdG90YWxCYWxhbmNlID0gdGhpcy5iYWxhbmNlOwogICAgICAgIHN0YWdlID0gU3RhZ2VzLlRva2Vuc0NsYWltZWQ7CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXIoKQogICAgICAgIHB1YmxpYwogICAgICAgIGF0U3RhZ2UoU3RhZ2VzLlRva2Vuc0NsYWltZWQpCiAgICAgICAgcmV0dXJucyAodWludCBhbW91bnQpCiAgICB7CiAgICAgICAgdWludCBjb250cmlidXRpb24gPSBjb250cmlidXRpb25zW21zZy5zZW5kZXJdOwogICAgICAgIGNvbnRyaWJ1dGlvbnNbbXNnLnNlbmRlcl0gPSAwOwogICAgICAgIC8vIENhbGMuIHBlcmNlbnRhZ2Ugb2YgdG9rZW5zIGZvciBzZW5kZXIKICAgICAgICBhbW91bnQgPSB0b3RhbFRva2VucyAqIGNvbnRyaWJ1dGlvbiAvIHRvdGFsQ29udHJpYnV0aW9uczsKICAgICAgICBnbm9zaXNUb2tlbi50cmFuc2Zlcihtc2cuc2VuZGVyLCBhbW91bnQpOwogICAgICAgIC8vIFNlbmQgcG9zc2libGUgcmVmdW5kIHNoYXJlLCBkb24ndCB0aHJvdyB0byBtYWtlIHN1cmUgdG9rZW5zIGFyZSB0cmFuc2ZlcnJlZAogICAgICAgIHVpbnQgcmVmdW5kID0gdG90YWxCYWxhbmNlICogY29udHJpYnV0aW9uIC8gdG90YWxDb250cmlidXRpb25zOwogICAgICAgIGlmIChyZWZ1bmQgPiAwKQogICAgICAgICAgICBtc2cuc2VuZGVyLnNlbmQocmVmdW5kKTsKICAgIH0KfQ=='.
	

]
