Class {
	#name : #SRT049a5bf874f241d94232137ef728a9c7dd0d7550,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT049a5bf874f241d94232137ef728a9c7dd0d7550 >> base64 [
	^ ''.
	

]
