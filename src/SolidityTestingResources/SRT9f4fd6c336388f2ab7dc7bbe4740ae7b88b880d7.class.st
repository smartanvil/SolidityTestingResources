Class {
	#name : #SRT9f4fd6c336388f2ab7dc7bbe4740ae7b88b880d7,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT9f4fd6c336388f2ab7dc7bbe4740ae7b88b880d7 >> base64 [
	^ ''.
	

]
