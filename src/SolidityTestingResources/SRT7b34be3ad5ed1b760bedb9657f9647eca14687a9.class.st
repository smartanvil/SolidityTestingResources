Class {
	#name : #SRT7b34be3ad5ed1b760bedb9657f9647eca14687a9,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT7b34be3ad5ed1b760bedb9657f9647eca14687a9 >> base64 [
	^ ''.
	

]
