Class {
	#name : #SRTf487e54a41660ef17374f6ebf8340c6ef3163f30,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTf487e54a41660ef17374f6ebf8340c6ef3163f30 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTU7Cgpjb250cmFjdCBFUkMyMCB7CiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwp9Cgpjb250cmFjdCBSRU1NRVNhbGUgewogICAgdWludCBwdWJsaWMgY29uc3RhbnQgU0FMRVNfU1RBUlQgPSAxNTE4NTUyMDAwOyAvLyAxMy4wMi4yMDE4IDIwOjAwOjAwIFVUQwogICAgdWludCBwdWJsaWMgY29uc3RhbnQgRklSU1RfREFZX0VORCA9IDE1MTg2Mzg0MDA7IC8vIDE0LjAyLjIwMTggMjA6MDA6MDAgVVRDCiAgICB1aW50IHB1YmxpYyBjb25zdGFudCBTQUxFU19ERUFETElORSA9IDE1MTg3MjQ4MDA7IC8vIDE1LjAyLjIwMTggMjA6MDA6MDAgVVRDCiAgICBhZGRyZXNzIHB1YmxpYyBjb25zdGFudCBBU1NFVF9NQU5BR0VSX1dBTExFVCA9IDB4YmIxMjgwMEU3NDQ2QTUxMzk1QjJkODUzRDZDZTdGMjIyMTBCYjVFNTsKICAgIGFkZHJlc3MgcHVibGljIGNvbnN0YW50IFRPS0VOID0gMHg4Mzk4NGQ2MTQyOTM0YmI1MzU3OTNBODJBREIwYTQ2RUYwRjY2QjZkOyAvLyBSRU1NRSB0b2tlbgogICAgYWRkcmVzcyBwdWJsaWMgY29uc3RhbnQgV0hJVEVMSVNUX1NVUFBMSUVSID0gMHgxRmYyMWVDYTFjM2JhOTZlZDUzNzgzYUI5QzkyRmZiRjc3ODYyNTg0OwogICAgdWludCBwdWJsaWMgY29uc3RhbnQgVE9LRU5fQ0VOVFMgPSAxMDAwMDsgLy8gMSBSRU0gaXMgMS4wMDAwIFJFTQogICAgdWludCBwdWJsaWMgY29uc3RhbnQgQk9OVVMgPSAxMDsKICAgIHVpbnQgcHVibGljIGNvbnN0YW50IFNBTEVfTUFYX0NBUCA9IDUwMDAwMDAwMCAqIFRPS0VOX0NFTlRTOwogICAgdWludCBwdWJsaWMgY29uc3RhbnQgTUlOSU1BTF9QQVJUSUNJUEFUSU9OID0gMC4xIGV0aGVyOwogICAgdWludCBwdWJsaWMgY29uc3RhbnQgTUFYSU1BTF9QQVJUSUNJUEFUSU9OID0gMTUgZXRoZXI7CgogICAgdWludCBwdWJsaWMgc2FsZUNvbnRyaWJ1dGlvbnM7CiAgICB1aW50IHB1YmxpYyB0b2tlbnNQdXJjaGFzZWQ7CiAgICB1aW50IHB1YmxpYyBhbGxvd2VkR2FzUHJpY2UgPSAyMDAwMDAwMDAwMCB3ZWk7CiAgICB1aW50IHB1YmxpYyB0b2tlblByaWNlV2VpOwoKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50KSBwdWJsaWMgcGFydGljaXBhbnRDb250cmlidXRpb247CiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gYm9vbCkgcHVibGljIHdoaXRlbGlzdDsKCiAgICBldmVudCBDb250cmlidXRlZChhZGRyZXNzIHJlY2VpdmVyLCB1aW50IGNvbnRyaWJ1dGlvbiwgdWludCByZXdhcmQpOwogICAgZXZlbnQgV2hpdGVsaXN0VXBkYXRlZChhZGRyZXNzIHBhcnRpY2lwYW50LCBib29sIGlzV2hpdGVsaXN0ZWQpOwogICAgZXZlbnQgQWxsb3dlZEdhc1ByaWNlVXBkYXRlZCh1aW50IGdhc1ByaWNlKTsKICAgIGV2ZW50IFRva2VuUHJpY2VVcGRhdGVkKHVpbnQgdG9rZW5QcmljZVdlaSk7CiAgICBldmVudCBFcnJvcihzdHJpbmcgbWVzc2FnZSk7CgogICAgZnVuY3Rpb24gUkVNTUVTYWxlKHVpbnQgX2V0aFVzZFByaWNlKSB7CiAgICAgICAgdG9rZW5QcmljZVdlaSA9IDAuMDQgZXRoZXIgLyBfZXRoVXNkUHJpY2U7CiAgICB9CgogICAgZnVuY3Rpb24gY29udHJpYnV0ZSgpIHBheWFibGUgcmV0dXJucyhib29sKSB7CiAgICAgICAgcmV0dXJuIGNvbnRyaWJ1dGVGb3IobXNnLnNlbmRlcik7CiAgICB9CgogICAgZnVuY3Rpb24gY29udHJpYnV0ZUZvcihhZGRyZXNzIF9wYXJ0aWNpcGFudCkgcGF5YWJsZSByZXR1cm5zKGJvb2wpIHsKICAgICAgICByZXF1aXJlKG5vdyA+PSBTQUxFU19TVEFSVCk7CiAgICAgICAgcmVxdWlyZShub3cgPCBTQUxFU19ERUFETElORSk7CiAgICAgICAgcmVxdWlyZSgocGFydGljaXBhbnRDb250cmlidXRpb25bX3BhcnRpY2lwYW50XSArIG1zZy52YWx1ZSkgPj0gTUlOSU1BTF9QQVJUSUNJUEFUSU9OKTsKICAgICAgICAvLyBPbmx5IHRoZSB3aGl0ZWxpc3RlZCBhZGRyZXNzZXMgY2FuIHBhcnRpY2lwYXRlLgogICAgICAgIHJlcXVpcmUod2hpdGVsaXN0W19wYXJ0aWNpcGFudF0pOwoKICAgICAgICAvL2NoZWNrIGZvciBNQVhJTUFMX1BBUlRJQ0lQQVRJT04gYW5kIGFsbG93ZWRHYXNQcmljZSBvbmx5IGF0IGZpcnN0IGRheQogICAgICAgIGlmIChub3cgPD0gRklSU1RfREFZX0VORCkgewogICAgICAgICAgICByZXF1aXJlKChwYXJ0aWNpcGFudENvbnRyaWJ1dGlvbltfcGFydGljaXBhbnRdICsgbXNnLnZhbHVlKSA8PSBNQVhJTUFMX1BBUlRJQ0lQQVRJT04pOwogICAgICAgICAgICByZXF1aXJlKHR4Lmdhc3ByaWNlIDw9IGFsbG93ZWRHYXNQcmljZSk7CiAgICAgICAgfQoKICAgICAgICAvLyBJZiB0aGVyZSBpcyBzb21lIGRpdmlzaW9uIHJlbWluZGVyLCB3ZSBqdXN0IGNvbGxlY3QgaXQgdG9vLgogICAgICAgIHVpbnQgdG9rZW5zQW1vdW50ID0gKG1zZy52YWx1ZSAqIFRPS0VOX0NFTlRTKSAvIHRva2VuUHJpY2VXZWk7CiAgICAgICAgcmVxdWlyZSh0b2tlbnNBbW91bnQgPiAwKTsKICAgICAgICB1aW50IGJvbnVzVG9rZW5zID0gKHRva2Vuc0Ftb3VudCAqIEJPTlVTKSAvIDEwMDsKICAgICAgICB1aW50IHRvdGFsVG9rZW5zID0gdG9rZW5zQW1vdW50ICsgYm9udXNUb2tlbnM7CgogICAgICAgIHRva2Vuc1B1cmNoYXNlZCArPSB0b3RhbFRva2VuczsKICAgICAgICByZXF1aXJlKHRva2Vuc1B1cmNoYXNlZCA8PSBTQUxFX01BWF9DQVApOwogICAgICAgIHJlcXVpcmUoRVJDMjAoVE9LRU4pLnRyYW5zZmVyRnJvbShBU1NFVF9NQU5BR0VSX1dBTExFVCwgX3BhcnRpY2lwYW50LCB0b3RhbFRva2VucykpOwogICAgICAgIHNhbGVDb250cmlidXRpb25zICs9IG1zZy52YWx1ZTsKICAgICAgICBwYXJ0aWNpcGFudENvbnRyaWJ1dGlvbltfcGFydGljaXBhbnRdICs9IG1zZy52YWx1ZTsKICAgICAgICBBU1NFVF9NQU5BR0VSX1dBTExFVC50cmFuc2Zlcihtc2cudmFsdWUpOwoKICAgICAgICBDb250cmlidXRlZChfcGFydGljaXBhbnQsIG1zZy52YWx1ZSwgdG90YWxUb2tlbnMpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIG1vZGlmaWVyIG9ubHlXaGl0ZWxpc3RTdXBwbGllcigpIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gV0hJVEVMSVNUX1NVUFBMSUVSIHx8IG1zZy5zZW5kZXIgPT0gQVNTRVRfTUFOQUdFUl9XQUxMRVQpOwogICAgICAgIF87CiAgICB9CgogICAgbW9kaWZpZXIgb25seUFkbWluKCkgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBBU1NFVF9NQU5BR0VSX1dBTExFVCk7CiAgICAgICAgXzsKICAgIH0KCiAgICBmdW5jdGlvbiBhZGRUb1doaXRlbGlzdChhZGRyZXNzIF9wYXJ0aWNpcGFudCkgb25seVdoaXRlbGlzdFN1cHBsaWVyKCkgcmV0dXJucyhib29sKSB7CiAgICAgICAgaWYgKHdoaXRlbGlzdFtfcGFydGljaXBhbnRdKSB7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0KICAgICAgICB3aGl0ZWxpc3RbX3BhcnRpY2lwYW50XSA9IHRydWU7CiAgICAgICAgV2hpdGVsaXN0VXBkYXRlZChfcGFydGljaXBhbnQsIHRydWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIHJlbW92ZUZyb21XaGl0ZWxpc3QoYWRkcmVzcyBfcGFydGljaXBhbnQpIG9ubHlXaGl0ZWxpc3RTdXBwbGllcigpIHJldHVybnMoYm9vbCkgewogICAgICAgIGlmICghd2hpdGVsaXN0W19wYXJ0aWNpcGFudF0pIHsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfQogICAgICAgIHdoaXRlbGlzdFtfcGFydGljaXBhbnRdID0gZmFsc2U7CiAgICAgICAgV2hpdGVsaXN0VXBkYXRlZChfcGFydGljaXBhbnQsIGZhbHNlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBzZXRHYXNQcmljZSh1aW50IF9hbGxvd2VkR2FzUHJpY2UpIG9ubHlBZG1pbigpIHJldHVybnMoYm9vbCkgewogICAgICAgIGFsbG93ZWRHYXNQcmljZSA9IF9hbGxvd2VkR2FzUHJpY2U7CiAgICAgICAgQWxsb3dlZEdhc1ByaWNlVXBkYXRlZChhbGxvd2VkR2FzUHJpY2UpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIHNldEV0aFByaWNlKHVpbnQgX2V0aFVzZFByaWNlKSBvbmx5QWRtaW4oKSByZXR1cm5zKGJvb2wpIHsKICAgICAgICB0b2tlblByaWNlV2VpID0gMC4wNCBldGhlciAvIF9ldGhVc2RQcmljZTsKICAgICAgICBUb2tlblByaWNlVXBkYXRlZCh0b2tlblByaWNlV2VpKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiAoKSBwYXlhYmxlIHsKICAgICAgICBjb250cmlidXRlKCk7CiAgICB9Cn0='.
	

]
