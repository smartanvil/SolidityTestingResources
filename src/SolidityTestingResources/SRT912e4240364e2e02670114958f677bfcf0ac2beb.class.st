Class {
	#name : #SRT912e4240364e2e02670114958f677bfcf0ac2beb,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT912e4240364e2e02670114958f677bfcf0ac2beb >> base64 [
	^ ''.
	

]
