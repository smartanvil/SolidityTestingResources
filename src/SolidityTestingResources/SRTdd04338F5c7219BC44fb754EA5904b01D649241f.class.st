Class {
	#name : #SRTdd04338F5c7219BC44fb754EA5904b01D649241f,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTdd04338F5c7219BC44fb754EA5904b01D649241f >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7CgoKLy8vIEB0aXRsZSAgTmV1cm9Ub2tlbiBjb2luIHByZXNhbGUgLSBuZXVyb21hdGlvbi5pbyAoTlRLKSAtIGNyb3dkZnVuZGluZyBjb2RlCi8vLyBXaGl0ZXBhcGVyOgovLy8gICBodHRwczovL25ldXJvbWF0aW9uLmlvL2ZpbGVzL05ldXJvbWF0aW9uX3doaXRlX3BhcGVyX3J1LnBkZgovLy8gICBodHRwczovL25ldXJvbWF0aW9uLmlvL2ZpbGVzL05ldXJvbWF0aW9uX3doaXRlX3BhcGVyLnBkZgoKY29udHJhY3QgTmV1cm9Ub2tlbiB7CiAgICBzdHJpbmcgcHVibGljIG5hbWUgPSAiTmV1cm90b2tlbiI7CiAgICBzdHJpbmcgcHVibGljIHN5bWJvbCA9ICJOVEsiOwogICAgdWludDggcHVibGljIGNvbnN0YW50IGRlY2ltYWxzID0gOTsgIAogICAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CgogICAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgdG9rZW5zUGVyRXRoID0gMTsKICAgIHVpbnQyNTYgcHVibGljIGNvbnN0YW50IGhvd01hbnlFdGhlcnNUb0JlY29tZU93bmVyID0gMTAwMCBldGhlcjsKICAgIHVpbnQyNTYgcHVibGljIGNvbnN0YW50IGhvd01hbnlFdGhlcnNUb0tpbGxDb250cmFjdCA9IDUwMCBldGhlcjsKICAgIHVpbnQyNTYgcHVibGljIGNvbnN0YW50IGhvd01hbnlFdGhlcnNUb0NoYW5nZVN5bWJvbE5hbWUgPSA0MDAgZXRoZXI7CiAgICAKICAgIGJvb2wgcHVibGljIGZ1bmRpbmcgPSB0cnVlOwoKICAgIC8vIFRoZSBjdXJyZW50IHRvdGFsIHRva2VuIHN1cHBseS4KICAgIHVpbnQyNTYgdG90YWxUb2tlbnMgPSAxMDAwOwoKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgYmFsYW5jZXM7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikpIGFsbG93ZWQ7CgogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50MjU2IF92YWx1ZSk7CiAgICBldmVudCBNaWdyYXRlKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwogICAgZXZlbnQgUmVmdW5kKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgdWludDI1NiBfdmFsdWUpOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7CgogICAgZnVuY3Rpb24gTmV1cm9Ub2tlbigpIHB1YmxpYyB7CiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgfQoKICAgIGZ1bmN0aW9uIGNoYW5nZU5hbWVTeW1ib2woc3RyaW5nIF9uYW1lLCBzdHJpbmcgX3N5bWJvbCkgcGF5YWJsZSBleHRlcm5hbAogICAgewogICAgICAgIGlmIChtc2cuc2VuZGVyPT1vd25lciB8fCBtc2cudmFsdWUgPj1ob3dNYW55RXRoZXJzVG9DaGFuZ2VTeW1ib2xOYW1lKQogICAgICAgIHsKICAgICAgICAgICAgbmFtZSA9IF9uYW1lOwogICAgICAgICAgICBzeW1ib2wgPSBfc3ltYm9sOwogICAgICAgIH0KICAgIH0KICAgIAogICAgCiAgICBmdW5jdGlvbiBjaGFuZ2VPd25lciAoYWRkcmVzcyBfbmV3b3duZXIpIHBheWFibGUgZXh0ZXJuYWwKICAgIHsKICAgICAgICBpZiAobXNnLnZhbHVlPj1ob3dNYW55RXRoZXJzVG9CZWNvbWVPd25lcikKICAgICAgICB7CiAgICAgICAgICAgIG93bmVyLnRyYW5zZmVyKG1zZy52YWx1ZSk7CiAgICAgICAgICAgIG93bmVyLnRyYW5zZmVyKHRoaXMuYmFsYW5jZSk7CiAgICAgICAgICAgIG93bmVyPV9uZXdvd25lcjsKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24ga2lsbENvbnRyYWN0ICgpIHBheWFibGUgZXh0ZXJuYWwKICAgIHsKICAgICAgICBpZiAobXNnLnNlbmRlcj09b3duZXIgfHwgbXNnLnZhbHVlID49aG93TWFueUV0aGVyc1RvS2lsbENvbnRyYWN0KQogICAgICAgIHsKICAgICAgICAgICAgc2VsZmRlc3RydWN0KG93bmVyKTsKICAgICAgICB9CiAgICB9CiAgICAvLy8gQG5vdGljZSBUcmFuc2ZlciBgX3ZhbHVlYCB0b2tlbnMgZnJvbSBzZW5kZXIncyBhY2NvdW50CiAgICAvLy8gYG1zZy5zZW5kZXJgIHRvIHByb3ZpZGVkIGFjY291bnQgYWRkcmVzcyBgX3RvYC4KICAgIC8vLyBAbm90aWNlIFRoaXMgZnVuY3Rpb24gaXMgZGlzYWJsZWQgZHVyaW5nIHRoZSBmdW5kaW5nLgogICAgLy8vIEBkZXYgUmVxdWlyZWQgc3RhdGU6IE9wZXJhdGlvbmFsCiAgICAvLy8gQHBhcmFtIF90byBUaGUgYWRkcmVzcyBvZiB0aGUgdG9rZW5zIHJlY2lwaWVudAogICAgLy8vIEBwYXJhbSBfdmFsdWUgVGhlIGFtb3VudCBvZiB0b2tlbiB0byBiZSB0cmFuc2ZlcnJlZAogICAgLy8vIEByZXR1cm4gV2hldGhlciB0aGUgdHJhbnNmZXIgd2FzIHN1Y2Nlc3NmdWwgb3Igbm90CiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICAgICAgLy8gQWJvcnQgaWYgbm90IGluIE9wZXJhdGlvbmFsIHN0YXRlLgogICAgICAgIAogICAgICAgIHZhciBzZW5kZXJCYWxhbmNlID0gYmFsYW5jZXNbbXNnLnNlbmRlcl07CiAgICAgICAgaWYgKHNlbmRlckJhbGFuY2UgPj0gX3ZhbHVlICYmIF92YWx1ZSA+IDApIHsKICAgICAgICAgICAgc2VuZGVyQmFsYW5jZSAtPSBfdmFsdWU7CiAgICAgICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gc2VuZGVyQmFsYW5jZTsKICAgICAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfdmFsdWU7CiAgICAgICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfQogICAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KCiAgICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIGV4dGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICByZXR1cm4gdG90YWxUb2tlbnM7CiAgICB9CgogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBleHRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgcmV0dXJuIGJhbGFuY2VzW19vd25lcl07CiAgICB9CgoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbSgKICAgICAgICAgYWRkcmVzcyBfZnJvbSwKICAgICAgICAgYWRkcmVzcyBfdG8sCiAgICAgICAgIHVpbnQyNTYgX2Ftb3VudAogICAgICkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgICBpZiAoYmFsYW5jZXNbX2Zyb21dID49IF9hbW91bnQKICAgICAgICAgICAgICYmIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID49IF9hbW91bnQKICAgICAgICAgICAgICYmIF9hbW91bnQgPiAwCiAgICAgICAgICAgICAmJiBiYWxhbmNlc1tfdG9dICsgX2Ftb3VudCA+IGJhbGFuY2VzW190b10pIHsKICAgICAgICAgICAgIGJhbGFuY2VzW19mcm9tXSAtPSBfYW1vdW50OwogICAgICAgICAgICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gLT0gX2Ftb3VudDsKICAgICAgICAgICAgIGJhbGFuY2VzW190b10gKz0gX2Ftb3VudDsKICAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICB9CiAgfQoKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfYW1vdW50KSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX2Ftb3VudDsKICAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF9hbW91bnQpOwogICAgICAgICAKICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgfQovLyBDcm93ZGZ1bmRpbmc6CgogICAgZnVuY3Rpb24gKCkgcGF5YWJsZSBleHRlcm5hbCB7CiAgICAgICAgLy8gQWJvcnQgaWYgbm90IGluIEZ1bmRpbmcgQWN0aXZlIHN0YXRlLgogICAgICAgIC8vIFRoZSBjaGVja3MgYXJlIHNwbGl0IChpbnN0ZWFkIG9mIHVzaW5nIG9yIG9wZXJhdG9yKSBiZWNhdXNlIGl0IGlzCiAgICAgICAgLy8gY2hlYXBlciB0aGlzIHdheS4KICAgICAgICBpZiAoIWZ1bmRpbmcpIHJldmVydCgpOwogICAgICAgIAogICAgICAgIC8vIERvIG5vdCBhbGxvdyBjcmVhdGluZyAwIG9yIG1vcmUgdGhhbiB0aGUgY2FwIHRva2Vucy4KICAgICAgICBpZiAobXNnLnZhbHVlID09IDApIHJldmVydCgpOwogICAgICAgIAogICAgICAgIHZhciBudW1Ub2tlbnMgPSBtc2cudmFsdWUgKiAoMTAwMC4wL3RvdGFsVG9rZW5zKTsKICAgICAgICB0b3RhbFRva2VucyArPSBudW1Ub2tlbnM7CgogICAgICAgIC8vIEFzc2lnbiBuZXcgdG9rZW5zIHRvIHRoZSBzZW5kZXIKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSArPSBudW1Ub2tlbnM7CgogICAgICAgIC8vIExvZyB0b2tlbiBjcmVhdGlvbiBldmVudAogICAgICAgIFRyYW5zZmVyKDAsIG1zZy5zZW5kZXIsIG51bVRva2Vucyk7CiAgICB9Cn0='.
	

]
