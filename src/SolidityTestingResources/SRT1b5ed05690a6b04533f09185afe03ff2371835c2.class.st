Class {
	#name : #SRT1b5ed05690a6b04533f09185afe03ff2371835c2,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT1b5ed05690a6b04533f09185afe03ff2371835c2 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7Cgpjb250cmFjdCBGb3JlaWduVG9rZW4gewogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KTsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCk7Cn0KCmNvbnRyYWN0IFJhaW5ib3dVbmljb2luIHsKICAgIGFkZHJlc3Mgb3duZXIgPSBtc2cuc2VuZGVyOwoKICAgIGJvb2wgcHVibGljIHB1cmNoYXNpbmdBbGxvd2VkID0gdHJ1ZTsKCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIGJhbGFuY2VzOwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBhbGxvd2VkOwoKICAgIHVpbnQyNTYgcHVibGljIHRvdGFsQ29udHJpYnV0aW9uID0gMDsKICAgIHVpbnQyNTYgcHVibGljIHRvdGFsQm9udXNUb2tlbnNJc3N1ZWQgPSAwOwogICAgdWludDI1NiBwdWJsaWMgbmV4dEJvbnVzUGF5b3V0ID0gMDsKCiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseSA9IDA7CgogICAgZnVuY3Rpb24gbmFtZSgpIGNvbnN0YW50IHJldHVybnMgKHN0cmluZykgeyByZXR1cm4gIlJhaW5ib3cgVW5pY29pbiI7IH0KICAgIGZ1bmN0aW9uIHN5bWJvbCgpIGNvbnN0YW50IHJldHVybnMgKHN0cmluZykgeyByZXR1cm4gIlJVQyI7IH0KICAgIGZ1bmN0aW9uIGRlY2ltYWxzKCkgY29uc3RhbnQgcmV0dXJucyAodWludDgpIHsgcmV0dXJuIDE4OyB9CiAgICAKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgeyByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsgfQogICAgCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIC8vIG1pdGlnYXRlcyB0aGUgRVJDMjAgc2hvcnQgYWRkcmVzcyBhdHRhY2sKICAgICAgICBpZihtc2cuZGF0YS5sZW5ndGggPCAoMiAqIDMyKSArIDQpIHsgdGhyb3c7IH0KCiAgICAgICAgaWYgKF92YWx1ZSA9PSAwKSB7IHJldHVybiBmYWxzZTsgfQoKICAgICAgICB1aW50MjU2IGZyb21CYWxhbmNlID0gYmFsYW5jZXNbbXNnLnNlbmRlcl07CgogICAgICAgIGJvb2wgc3VmZmljaWVudEZ1bmRzID0gZnJvbUJhbGFuY2UgPj0gX3ZhbHVlOwogICAgICAgIGJvb2wgb3ZlcmZsb3dlZCA9IGJhbGFuY2VzW190b10gKyBfdmFsdWUgPCBiYWxhbmNlc1tfdG9dOwogICAgICAgIAogICAgICAgIGlmIChzdWZmaWNpZW50RnVuZHMgJiYgIW92ZXJmbG93ZWQpIHsKICAgICAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOwogICAgICAgICAgICBiYWxhbmNlc1tfdG9dICs9IF92YWx1ZTsKICAgICAgICAgICAgCiAgICAgICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfSBlbHNlIHsgcmV0dXJuIGZhbHNlOyB9CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIC8vIG1pdGlnYXRlcyB0aGUgRVJDMjAgc2hvcnQgYWRkcmVzcyBhdHRhY2sKICAgICAgICBpZihtc2cuZGF0YS5sZW5ndGggPCAoMyAqIDMyKSArIDQpIHsgdGhyb3c7IH0KCiAgICAgICAgaWYgKF92YWx1ZSA9PSAwKSB7IHJldHVybiBmYWxzZTsgfQogICAgICAgIAogICAgICAgIHVpbnQyNTYgZnJvbUJhbGFuY2UgPSBiYWxhbmNlc1tfZnJvbV07CiAgICAgICAgdWludDI1NiBhbGxvd2FuY2UgPSBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXTsKCiAgICAgICAgYm9vbCBzdWZmaWNpZW50RnVuZHMgPSBmcm9tQmFsYW5jZSA8PSBfdmFsdWU7CiAgICAgICAgYm9vbCBzdWZmaWNpZW50QWxsb3dhbmNlID0gYWxsb3dhbmNlIDw9IF92YWx1ZTsKICAgICAgICBib29sIG92ZXJmbG93ZWQgPSBiYWxhbmNlc1tfdG9dICsgX3ZhbHVlID4gYmFsYW5jZXNbX3RvXTsKCiAgICAgICAgaWYgKHN1ZmZpY2llbnRGdW5kcyAmJiBzdWZmaWNpZW50QWxsb3dhbmNlICYmICFvdmVyZmxvd2VkKSB7CiAgICAgICAgICAgIGJhbGFuY2VzW190b10gKz0gX3ZhbHVlOwogICAgICAgICAgICBiYWxhbmNlc1tfZnJvbV0gLT0gX3ZhbHVlOwogICAgICAgICAgICAKICAgICAgICAgICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOwogICAgICAgICAgICAKICAgICAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfSBlbHNlIHsgcmV0dXJuIGZhbHNlOyB9CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIC8vIG1pdGlnYXRlcyB0aGUgRVJDMjAgc3BlbmQvYXBwcm92YWwgcmFjZSBjb25kaXRpb24KICAgICAgICBpZiAoX3ZhbHVlICE9IDAgJiYgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gIT0gMCkgeyByZXR1cm4gZmFsc2U7IH0KICAgICAgICAKICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsKICAgICAgICAKICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07CiAgICB9CgogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50MjU2IF92YWx1ZSk7CiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKTsKCiAgICBmdW5jdGlvbiBlbmFibGVQdXJjaGFzaW5nKCkgewogICAgICAgIGlmIChtc2cuc2VuZGVyICE9IG93bmVyKSB7IHRocm93OyB9CgogICAgICAgIHB1cmNoYXNpbmdBbGxvd2VkID0gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBkaXNhYmxlUHVyY2hhc2luZygpIHsKICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lcikgeyB0aHJvdzsgfQoKICAgICAgICBwdXJjaGFzaW5nQWxsb3dlZCA9IGZhbHNlOwogICAgfQoKICAgIGZ1bmN0aW9uIHdpdGhkcmF3Rm9yZWlnblRva2VucyhhZGRyZXNzIF90b2tlbkNvbnRyYWN0KSByZXR1cm5zIChib29sKSB7CiAgICAgICAgaWYgKG1zZy5zZW5kZXIgIT0gb3duZXIpIHsgdGhyb3c7IH0KCiAgICAgICAgRm9yZWlnblRva2VuIHRva2VuID0gRm9yZWlnblRva2VuKF90b2tlbkNvbnRyYWN0KTsKCiAgICAgICAgdWludDI1NiBhbW91bnQgPSB0b2tlbi5iYWxhbmNlT2YoYWRkcmVzcyh0aGlzKSk7CiAgICAgICAgcmV0dXJuIHRva2VuLnRyYW5zZmVyKG93bmVyLCBhbW91bnQpOwogICAgfQoKICAgIGZ1bmN0aW9uIGdldFN0YXRzKCkgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiwgdWludDI1NiwgdWludDI1NiwgYm9vbCkgewogICAgICAgIHJldHVybiAodG90YWxDb250cmlidXRpb24sIHRvdGFsU3VwcGx5LCB0b3RhbEJvbnVzVG9rZW5zSXNzdWVkLCBwdXJjaGFzaW5nQWxsb3dlZCk7CiAgICB9CgogICAgZnVuY3Rpb24oKSBwYXlhYmxlIHsKICAgICAgICBpZiAoIXB1cmNoYXNpbmdBbGxvd2VkKSB7IHRocm93OyB9CiAgICAgICAgCiAgICAgICAgaWYgKG1zZy52YWx1ZSA9PSAwKSB7IHJldHVybjsgfQoKICAgICAgICBvd25lci50cmFuc2Zlcihtc2cudmFsdWUpOwogICAgICAgIHRvdGFsQ29udHJpYnV0aW9uICs9IG1zZy52YWx1ZTsKCiAgICAgICAgdWludDI1NiB0b2tlbnNJc3N1ZWQgPSAobXNnLnZhbHVlICogMTAwMCkgKyBuZXh0Qm9udXNQYXlvdXQ7CiAgICAgICAgdG90YWxCb251c1Rva2Vuc0lzc3VlZCArPSBuZXh0Qm9udXNQYXlvdXQ7CiAgICAgICAgbmV4dEJvbnVzUGF5b3V0ID0gdG9rZW5zSXNzdWVkIC8gMjsKCiAgICAgICAgdG90YWxTdXBwbHkgKz0gdG9rZW5zSXNzdWVkOwogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdICs9IHRva2Vuc0lzc3VlZDsKICAgICAgICAKICAgICAgICBUcmFuc2ZlcihhZGRyZXNzKHRoaXMpLCBtc2cuc2VuZGVyLCB0b2tlbnNJc3N1ZWQpOwogICAgfQp9'.
	

]
