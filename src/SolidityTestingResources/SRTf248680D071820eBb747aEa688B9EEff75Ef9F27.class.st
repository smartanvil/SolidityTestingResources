Class {
	#name : #SRTf248680D071820eBb747aEa688B9EEff75Ef9F27,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTf248680D071820eBb747aEa688B9EEff75Ef9F27 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTc7CgppbnRlcmZhY2UgRVJDMjBUb2tlbiB7CglmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyB0b2tlbk93bmVyKQoJCXB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQgYmFsYW5jZSk7CiAJZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyB0bywgdWludCB0b2tlbnMpCgkJcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CglmdW5jdGlvbiBzeW1ib2woKSBwdWJsaWMgdmlldyByZXR1cm5zIChzdHJpbmcpOwoJZnVuY3Rpb24gbmFtZSgpIHB1YmxpYyB2aWV3IHJldHVybnMgKHN0cmluZyk7CglmdW5jdGlvbiBkZWNpbWFscygpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQ4KTsKfQoKY29udHJhY3QgTXVsdGlLZXlEYWlseUxpbWl0V2FsbGV0IHsKCXVpbnQgY29uc3RhbnQgTElNSVRfUFJFQ0lTSU9OID0gMTAwMDAwMDsKCS8vIEZyYWN0aW9uYWwgZGFpbHkgbGltaXRzIHBlciBrZXkuIEluIHVuaXRzIG9mIDEvTElNSVRfUFJFQ0lTSU9OLgoJbWFwcGluZyhhZGRyZXNzPT51aW50KSBwdWJsaWMgY3JlZGVudGlhbHM7CgkvLyBUaW1lc3RhbXAgb2YgbGFzdCB3aXRoZHJhd2FsLCBieSB0b2tlbiAoMHgwIGlzIGV0aGVyKS4KCW1hcHBpbmcoYWRkcmVzcz0+dWludCkgcHVibGljIGxhc3RXaXRoZHJhd2FsVGltZTsKCS8vIFRvdGFsIHdpdGhkcmF3biBpbiBsYXN0IDI0LWhvdXJzLCBieSB0b2tlbiAoMHgwIGlzIGV0aGVyKS4KCS8vIFJlc2V0cyBpZiAyNCBob3VycyBwYXNzZXMgd2l0aCBubyBhY3Rpdml0eS4KCW1hcHBpbmcoYWRkcmVzcz0+dWludCkgcHVibGljIGRhaWx5Q291bnQ7Cgl1aW50IHB1YmxpYyBub25jZTsKCglldmVudCBPbldpdGhkcmF3VG8oCgkJYWRkcmVzcyBpbmRleGVkIHRva2VuLAoJCWFkZHJlc3MgaW5kZXhlZCBmcm9tLAoJCWFkZHJlc3MgaW5kZXhlZCB0bywKCQl1aW50IGFtb3VudCwKCQl1aW50NjQgdGltZXN0YW1wKTsKCglmdW5jdGlvbiBNdWx0aUtleURhaWx5TGltaXRXYWxsZXQoYWRkcmVzc1tdIGtleXMsIHVpbnRbXSBsaW1pdHMpIHB1YmxpYyB7CgkJcmVxdWlyZShrZXlzLmxlbmd0aCA9PSBsaW1pdHMubGVuZ3RoKTsKCQlmb3IgKHVpbnQgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7CgkJCXZhciBsaW1pdCA9IGxpbWl0c1tpXTsKCQkJLy8gbGltaXQgc2hvdWxkIGJlIGluIHJhbmdlIDEtTElNSVRfUFJFQ0lTSU9OCgkJCXJlcXVpcmUgKGxpbWl0ID4gMCAmJiBsaW1pdCA8PSBMSU1JVF9QUkVDSVNJT04pOwoJCQljcmVkZW50aWFsc1trZXlzW2ldXSA9IGxpbWl0OwoJCX0KCX0KCgkvKiAjSUYgVEVTVElORwoJZnVuY3Rpb24gc2V0TGFzdFdpdGhkcmF3YWxUaW1lKGFkZHJlc3MgdG9rZW4sIHVpbnQgdGltZSkgZXh0ZXJuYWwgewoJCWxhc3RXaXRoZHJhd2FsVGltZVt0b2tlbl0gPSB0aW1lOwoJfQoJZnVuY3Rpb24gc2V0RGFpbHlDb3VudChhZGRyZXNzIHRva2VuLCB1aW50IGNvdW50KSBleHRlcm5hbCB7CgkJZGFpbHlDb3VudFt0b2tlbl0gPSBjb3VudDsKCX0KCSAjRkkgKi8KCglmdW5jdGlvbiBnZXRBZGp1c3RlZERhaWx5Q291bnQoYWRkcmVzcyB0b2tlbikKCQkJcHJpdmF0ZSB2aWV3IHJldHVybnMgKHVpbnQpIHsKCgkJdmFyIF9kYWlseUNvdW50ID0gZGFpbHlDb3VudFt0b2tlbl07CgkJaWYgKChibG9jay50aW1lc3RhbXAgLSBsYXN0V2l0aGRyYXdhbFRpbWVbdG9rZW5dKSA+PSAxIGRheXMpCgkJCV9kYWlseUNvdW50ID0gMDsKCQlyZXR1cm4gX2RhaWx5Q291bnQ7Cgl9CgoJZnVuY3Rpb24gZ2V0UmVtYWluaW5nTGltaXQoYWRkcmVzcyB0b2tlbiwgYWRkcmVzcyBrZXkpCgkJCXB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQpIHsKCgkJdmFyIHBjdCA9IGNyZWRlbnRpYWxzW2tleV07CgkJaWYgKHBjdCA9PSAwKQoJCQlyZXR1cm4gMDsKCgkJdmFyIF9kYWlseUNvdW50ID0gZ2V0QWRqdXN0ZWREYWlseUNvdW50KHRva2VuKTsKCQl2YXIgYmFsYW5jZSA9IGdldEJhbGFuY2UodG9rZW4pOwoJCXZhciBhbXQgPSAoKGJhbGFuY2UgKyBfZGFpbHlDb3VudCkgKiBwY3QpIC8gTElNSVRfUFJFQ0lTSU9OOwoJCWlmIChhbXQgPT0gMCAmJiBiYWxhbmNlID4gMCkKCQkJYW10ID0gMTsKCQlpZiAoX2RhaWx5Q291bnQgPj0gYW10KQoJCQlyZXR1cm4gMDsKCQlyZXR1cm4gYW10IC0gX2RhaWx5Q291bnQ7Cgl9CgoJZnVuY3Rpb24gd2l0aGRyYXdUbygKCQkJYWRkcmVzcyB0b2tlbiwKCQkJdWludCBhbW91bnQsCgkJCWFkZHJlc3MgdG8sCgkJCWJ5dGVzIHNpZ25hdHVyZSkgZXh0ZXJuYWwgewoKCQlyZXF1aXJlKGFtb3VudCA+IDAgJiYgdG8gIT0gYWRkcmVzcyh0aGlzKSk7CgkJYXNzZXJ0KGJsb2NrLnRpbWVzdGFtcCA+PSBsYXN0V2l0aGRyYXdhbFRpbWVbdG9rZW5dKTsKCgkJdmFyIGxpbWl0ID0gZ2V0U2lnbmF0dXJlUmVtYWluaW5nTGltaXQoCgkJCXNpZ25hdHVyZSwKCQkJa2VjY2FrMjU2KGFkZHJlc3ModGhpcyksIHRva2VuLCBub25jZSwgYW1vdW50LCB0byksCgkJCXRva2VuKTsKCgkJcmVxdWlyZShsaW1pdCA+PSBhbW91bnQpOwoJCXJlcXVpcmUoZ2V0QmFsYW5jZSh0b2tlbikgPj0gYW1vdW50KTsKCgkJZGFpbHlDb3VudFt0b2tlbl0gPSBnZXRBZGp1c3RlZERhaWx5Q291bnQodG9rZW4pICsgYW1vdW50OwoJCWxhc3RXaXRoZHJhd2FsVGltZVt0b2tlbl0gPSBibG9jay50aW1lc3RhbXA7CgkJbm9uY2UrKzsKCQlfdHJhbnNmZXIodG9rZW4sIHRvLCBhbW91bnQpOwoJCU9uV2l0aGRyYXdUbyh0b2tlbiwgbXNnLnNlbmRlciwgdG8sIGFtb3VudCwgdWludDY0KGJsb2NrLnRpbWVzdGFtcCkpOwoJfQoKCWZ1bmN0aW9uIGdldEJhbGFuY2UoYWRkcmVzcyB0b2tlbikgcHVibGljIHZpZXcgcmV0dXJucyAodWludCkgewoJCWlmICh0b2tlbiAhPSAweDApIHsKCQkJLy8gVG9rZW4uCgkJCXJldHVybiBFUkMyMFRva2VuKHRva2VuKS5iYWxhbmNlT2YoYWRkcmVzcyh0aGlzKSk7CgkJfQoJCXJldHVybiB0aGlzLmJhbGFuY2U7Cgl9CgoJZnVuY3Rpb24gX3RyYW5zZmVyKGFkZHJlc3MgdG9rZW4sIGFkZHJlc3MgdG8sIHVpbnQgYW1vdW50KQoJIAkJcHJpdmF0ZSB7CgoJCWlmICh0b2tlbiAhPSAweDApIHsKCQkJLy8gVHJhbnNmZXJpbmcgYSB0b2tlbi4KCQkJcmVxdWlyZShFUkMyMFRva2VuKHRva2VuKS50cmFuc2Zlcih0bywgYW1vdW50KSk7CgkJCXJldHVybjsKCQl9CgkJdG8udHJhbnNmZXIoYW1vdW50KTsKCX0KCglmdW5jdGlvbiBnZXRTaWduYXR1cmVSZW1haW5pbmdMaW1pdCgKCQkJYnl0ZXMgc2lnbmF0dXJlLAoJCQlieXRlczMyIHBheWxvYWQsCgkJCWFkZHJlc3MgdG9rZW4pCgkJCXByaXZhdGUgdmlldyByZXR1cm5zICh1aW50KSB7CgoJCXZhciBhZGRyID0gZXh0cmFjdFNpZ25hdHVyZUFkZHJlc3Moc2lnbmF0dXJlLCBwYXlsb2FkKTsKCQlyZXR1cm4gZ2V0UmVtYWluaW5nTGltaXQodG9rZW4sIGFkZHIpOwoJfQoKCWZ1bmN0aW9uIGV4dHJhY3RTaWduYXR1cmVBZGRyZXNzKGJ5dGVzIHNpZ25hdHVyZSwgYnl0ZXMzMiBwYXlsb2FkKQoJCQlwcml2YXRlIHB1cmUgcmV0dXJucyAoYWRkcmVzcykgewoKCQlwYXlsb2FkID0ga2VjY2FrMjU2KCJceDE5RXRoZXJldW0gU2lnbmVkIE1lc3NhZ2U6XG4zMiIsIHBheWxvYWQpOwoJCWJ5dGVzMzIgcjsKCQlieXRlczMyIHM7CgkJdWludDggdjsKCQlhc3NlbWJseSB7CgkJCXIgOj0gbWxvYWQoYWRkKHNpZ25hdHVyZSwgMzIpKQoJCQlzIDo9IG1sb2FkKGFkZChzaWduYXR1cmUsIDY0KSkKCQkJdiA6PSBhbmQobWxvYWQoYWRkKHNpZ25hdHVyZSwgNjUpKSwgMjU1KQoJCX0KCQlpZiAodiA8IDI3KQoJCQl2ICs9IDI3OwoJCXJlcXVpcmUodiA9PSAyNyB8fCB2ID09IDI4KTsKCQlyZXR1cm4gZWNyZWNvdmVyKHBheWxvYWQsIHYsIHIsIHMpOwoJfQoKCWZ1bmN0aW9uKCkgcHVibGljIHBheWFibGUge30KfQ=='.
	

]
