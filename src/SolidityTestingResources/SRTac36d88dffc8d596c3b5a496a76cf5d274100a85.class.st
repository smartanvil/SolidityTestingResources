Class {
	#name : #SRTac36d88dffc8d596c3b5a496a76cf5d274100a85,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTac36d88dffc8d596c3b5a496a76cf5d274100a85 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7CgovKioKICogQHRpdGxlIFNhZmVNYXRoCiAqIEBkZXYgTWF0aCBvcGVyYXRpb25zIHdpdGggc2FmZXR5IGNoZWNrcyB0aGF0IHRocm93IG9uIGVycm9yCiAqLwpsaWJyYXJ5IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAgdWludDI1NiBjID0gYSAvIGI7CiAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgIC8vIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOyAvLyBUaGVyZSBpcyBubyBjYXNlIGluIHdoaWNoIHRoaXMgZG9lc24ndCBob2xkCiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgYXNzZXJ0KGMgPj0gYSk7CiAgICByZXR1cm4gYzsKICB9Cn0KCi8qKgogKiBAdGl0bGUgQ3Jvd2RzYWxlCiAqIEBkZXYgQ3Jvd2RzYWxlIGlzIGEgYmFzZSBjb250cmFjdCBmb3IgbWFuYWdpbmcgYSB0b2tlbiBjcm93ZHNhbGUuCiAqIENyb3dkc2FsZXMgaGF2ZSBhIHN0YXJ0IGFuZCBlbmQgdGltZXN0YW1wcywgd2hlcmUgaW52ZXN0b3JzIGNhbiBtYWtlCiAqIHRva2VuIHB1cmNoYXNlcyBhbmQgdGhlIGNyb3dkc2FsZSB3aWxsIGFzc2lnbiB0aGVtIHRva2VucyBiYXNlZAogKiBvbiBhIHRva2VuIHBlciBFVEggcmF0ZS4gRnVuZHMgY29sbGVjdGVkIGFyZSBmb3J3YXJkZWQgCiB0byBhIHdhbGxldAogKiBhcyB0aGV5IGFycml2ZS4KICovCmNvbnRyYWN0IHRva2VuIHsgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyByZWNlaXZlciwgdWludCBhbW91bnQpeyAgfSB9CmNvbnRyYWN0IENyb3dkc2FsZSB7CiAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQyNTY7CgogIC8vIHVpbnQyNTYgZHVyYXRpb25Jbk1pbnV0ZXM7CiAgLy8gYWRkcmVzcyB3aGVyZSBmdW5kcyBhcmUgY29sbGVjdGVkCiAgYWRkcmVzcyBwdWJsaWMgd2FsbGV0OwogIC8vIHRva2VuIGFkZHJlc3MKICBhZGRyZXNzIHB1YmxpYyBhZGRyZXNzT2ZUb2tlblVzZWRBc1Jld2FyZDsKCiAgLy8gdWludDI1NiBwdWJsaWMgcHJpY2UgPSAxODAwMDsKCiAgdG9rZW4gdG9rZW5SZXdhcmQ7CgogIC8vIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludCkgcHVibGljIGNvbnRyaWJ1dGlvbnM7CiAgbWFwcGluZyhhZGRyZXNzID0+IGJvb2wpIHB1YmxpYyB3aGl0ZWxpc3Q7CgoKICAvLyBzdGFydCBhbmQgZW5kIHRpbWVzdGFtcHMgd2hlcmUgaW52ZXN0bWVudHMgYXJlIGFsbG93ZWQgKGJvdGggaW5jbHVzaXZlKQogIHVpbnQyNTYgcHVibGljIHN0YXJ0VGltZTsKICB1aW50MjU2IHB1YmxpYyBlbmRUaW1lOwogIC8vIGFtb3VudCBvZiByYWlzZWQgbW9uZXkgaW4gd2VpCiAgdWludDI1NiBwdWJsaWMgd2VpUmFpc2VkOwogIHVpbnQyNTYgcHVibGljIHRva2Vuc1NvbGQ7CgogIC8qKgogICAqIGV2ZW50IGZvciB0b2tlbiBwdXJjaGFzZSBsb2dnaW5nCiAgICogQHBhcmFtIHB1cmNoYXNlciB3aG8gcGFpZCBmb3IgdGhlIHRva2VucwogICAqIEBwYXJhbSBiZW5lZmljaWFyeSB3aG8gZ290IHRoZSB0b2tlbnMKICAgKiBAcGFyYW0gdmFsdWUgd2VpcyBwYWlkIGZvciBwdXJjaGFzZQogICAqIEBwYXJhbSBhbW91bnQgYW1vdW50IG9mIHRva2VucyBwdXJjaGFzZWQKICAgKi8KICBldmVudCBUb2tlblB1cmNoYXNlKGFkZHJlc3MgaW5kZXhlZCBwdXJjaGFzZXIsIGFkZHJlc3MgaW5kZXhlZCBiZW5lZmljaWFyeSwgdWludDI1NiB2YWx1ZSwgdWludDI1NiBhbW91bnQpOwoKCiAgZnVuY3Rpb24gQ3Jvd2RzYWxlKCkgewogICAgLy8gaG93IG1hbnkgbWludXRlcwogICAgc3RhcnRUaW1lID0gbm93ICsgODA3MTUgKiAxIG1pbnV0ZXM7CiAgICBlbmRUaW1lID0gc3RhcnRUaW1lICsgMzEqMjQqNjAqMSBtaW51dGVzOwoKICAgIC8vWW91IHdpbGwgY2hhbmdlIHRoaXMgdG8geW91ciB3YWxsZXQgd2hlcmUgeW91IG5lZWQgdGhlIEVUSCAKICAgIHdhbGxldCA9IDB4ZTY1YjZlRUFmRTM0YWRiMmUxOWU4YjJBRTljNTE3Njg4NzcxNTQ4RTsKICAgIC8vIGR1cmF0aW9uSW5NaW51dGVzID0gX2R1cmF0aW9uSW5NaW51dGVzOwogICAgLy9IZXJlIHdpbGwgY29tZSB0aGUgY2hlY2tzdW0gYWRkcmVzcyB3ZSBnb3QKICAgIGFkZHJlc3NPZlRva2VuVXNlZEFzUmV3YXJkID0gMHhBMDI0RTgwNTdFRUM0NzRhOWIyMzU2ODMzNzA3RGQwNTc5RTI2ZUYzOwoKCiAgICB0b2tlblJld2FyZCA9IHRva2VuKGFkZHJlc3NPZlRva2VuVXNlZEFzUmV3YXJkKTsKICB9CgogIC8vIGJvb2wgcHVibGljIHN0YXJ0ZWQgPSB0cnVlOwoKICAvLyBmdW5jdGlvbiBzdGFydFNhbGUoKXsKICAvLyAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSB3YWxsZXQpOwogIC8vICAgc3RhcnRlZCA9IHRydWU7CiAgLy8gfQoKICAvLyBmdW5jdGlvbiBzdG9wU2FsZSgpewogIC8vICAgcmVxdWlyZShtc2cuc2VuZGVyID09IHdhbGxldCk7CiAgLy8gICBzdGFydGVkID0gZmFsc2U7CiAgLy8gfQoKICAvLyBmdW5jdGlvbiBzZXRQcmljZSh1aW50MjU2IF9wcmljZSl7CiAgLy8gICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gd2FsbGV0KTsKICAvLyAgIHByaWNlID0gX3ByaWNlOwogIC8vIH0KCiAgZnVuY3Rpb24gY2hhbmdlV2FsbGV0KGFkZHJlc3MgX3dhbGxldCl7CiAgCXJlcXVpcmUobXNnLnNlbmRlciA9PSB3YWxsZXQpOwogIAl3YWxsZXQgPSBfd2FsbGV0OwogIH0KCiAgLy8gZnVuY3Rpb24gY2hhbmdlVG9rZW5SZXdhcmQoYWRkcmVzcyBfdG9rZW4pewogIC8vICAgcmVxdWlyZShtc2cuc2VuZGVyPT13YWxsZXQpOwogIC8vICAgdG9rZW5SZXdhcmQgPSB0b2tlbihfdG9rZW4pOwogIC8vICAgYWRkcmVzc09mVG9rZW5Vc2VkQXNSZXdhcmQgPSBfdG9rZW47CiAgLy8gfQoKICBmdW5jdGlvbiB3aGl0ZWxpc3RBZGRyZXNzZXMoYWRkcmVzc1tdIF9hZGRycyl7CiAgICByZXF1aXJlKG1zZy5zZW5kZXI9PXdhbGxldCk7CiAgICBmb3IodWludCBpID0gMDsgaSA8IF9hZGRycy5sZW5ndGg7ICsraSkKICAgICAgd2hpdGVsaXN0W19hZGRyc1tpXV0gPSB0cnVlOwogIH0KCiAgZnVuY3Rpb24gcmVtb3ZlQWRkcmVzc2VzRnJvbVdoaXRlbGlzdChhZGRyZXNzW10gX2FkZHJzKXsKICAgIHJlcXVpcmUobXNnLnNlbmRlcj09d2FsbGV0KTsKICAgIGZvcih1aW50IGkgPSAwO2kgPCBfYWRkcnMubGVuZ3RoOysraSkKICAgICAgd2hpdGVsaXN0W19hZGRyc1tpXV0gPSBmYWxzZTsKICB9CgogIC8vIGZhbGxiYWNrIGZ1bmN0aW9uIGNhbiBiZSB1c2VkIHRvIGJ1eSB0b2tlbnMKICBmdW5jdGlvbiAoKSBwYXlhYmxlIHsKICAgIGJ1eVRva2Vucyhtc2cuc2VuZGVyKTsKICB9CgogIC8vIGxvdyBsZXZlbCB0b2tlbiBwdXJjaGFzZSBmdW5jdGlvbgogIGZ1bmN0aW9uIGJ1eVRva2VucyhhZGRyZXNzIGJlbmVmaWNpYXJ5KSBwYXlhYmxlIHsKICAgIHJlcXVpcmUoYmVuZWZpY2lhcnkgIT0gMHgwKTsKICAgIHJlcXVpcmUodmFsaWRQdXJjaGFzZSgpKTsKICAgIHJlcXVpcmUod2hpdGVsaXN0W2JlbmVmaWNpYXJ5XSk7CgogICAgdWludDI1NiB3ZWlBbW91bnQgPSBtc2cudmFsdWU7CgogICAgLy8gaWYod2VpQW1vdW50IDwgMTAqKjE2KSB0aHJvdzsKICAgIC8vIGlmKHdlaUFtb3VudCA+IDUwKjEwKioxOCkgdGhyb3c7CgogICAgLy8gY2FsY3VsYXRlIHRva2VuIGFtb3VudCB0byBiZSBzZW50CiAgICB1aW50MjU2IHRva2VucyA9ICh3ZWlBbW91bnQpICogNTAwMDsvL3dlaWFtb3VudCAqIHByaWNlIAogICAgLy8gdWludDI1NiB0b2tlbnMgPSAod2VpQW1vdW50LzEwKiooMTgtZGVjaW1hbHMpKSAqIHByaWNlOy8vd2VpYW1vdW50ICogcHJpY2UgCgogICAgLy9ib251cyBzY2hlZHVsZQoKICAgIC8qCiAgICAgIFBSRS1JQ08uICgxRVRIPSA3MDAwIEZYWSkKICAgICAgU3RhcnQgMS41LjIwMTgKICAgICAgRW5kIDkuNS4yMDE4CiAgICAgIFRvdGFsIGNvaW5zIHdpdGggNDAlIGJvbnVzIDE0LjAwMC4wMDAgRlhZCiAgICAgIElDTyBMRVZFTCAxICgxRVRIPTYwMDAgRlhZKQogICAgICBTdGFydCAxNi41LjIwMTgKICAgICAgRW5kIDIzLjUuMjAxOAogICAgICBUb3RhbCBjb2lucyA1NC4wMDAuMDAwIEZYWSB3aXRoIDIwJSBib251cwogICAgICBJQ08gTEVWRUwgMiAoMUVUSD01MDAwRlhZKQogICAgICBTdGFydCAyNS41LjIwMTgKICAgICAgRW5kIDMxLjUuMjAxOAogICAgICBUb3RhbCBjb2lucyDigJQ+IGlmIG9uIElDTyBMZXZlbCAxIG5vdCBzb2xkIG91dCwgaXQgd2lsbCBiZSBkcm9wIGhlcmUuCiAgICAqLwogICAgaWYobm93IDwgc3RhcnRUaW1lICsgOSoyNCo2MCogMSBtaW51dGVzKXsKICAgICAgdG9rZW5zICs9ICh0b2tlbnMgKiA0MCkgLyAxMDA7Ly80MCUKICAgICAgaWYodG9rZW5zU29sZD4xNDAwMDAwMCoxMCoqMTgpIHRocm93OwogICAgfWVsc2UgaWYobm93IDwgc3RhcnRUaW1lICsgMTYqMjQqNjAqIDEgbWludXRlcyl7CiAgICAgIHRocm93OwogICAgfWVsc2UgaWYobm93IDwgc3RhcnRUaW1lICsgMjMqMjQqNjAqIDEgbWludXRlcyl7CiAgICAgIHRva2VucyArPSAodG9rZW5zICogMjApIC8gMTAwOwogICAgfWVsc2UgaWYobm93IDwgc3RhcnRUaW1lICsgMjUqMjQqNjAqIDEgbWludXRlcyl7CiAgICAgIHRocm93OwogICAgfQoKICAgIC8vIHVwZGF0ZSBzdGF0ZQogICAgd2VpUmFpc2VkID0gd2VpUmFpc2VkLmFkZCh3ZWlBbW91bnQpOwogICAgCiAgICAvLyBpZihjb250cmlidXRpb25zW21zZy5zZW5kZXJdLmFkZCh3ZWlBbW91bnQpPjEwKjEwKioxOCkgdGhyb3c7CiAgICAvLyBjb250cmlidXRpb25zW21zZy5zZW5kZXJdID0gY29udHJpYnV0aW9uc1ttc2cuc2VuZGVyXS5hZGQod2VpQW1vdW50KTsKCiAgICB0b2tlblJld2FyZC50cmFuc2ZlcihiZW5lZmljaWFyeSwgdG9rZW5zKTsKICAgIHRva2Vuc1NvbGQgPSB0b2tlbnNTb2xkLmFkZCh0b2tlbnMpOwogICAgVG9rZW5QdXJjaGFzZShtc2cuc2VuZGVyLCBiZW5lZmljaWFyeSwgd2VpQW1vdW50LCB0b2tlbnMpOwogICAgZm9yd2FyZEZ1bmRzKCk7CiAgfQoKICAvLyBzZW5kIGV0aGVyIHRvIHRoZSBmdW5kIGNvbGxlY3Rpb24gd2FsbGV0CiAgLy8gb3ZlcnJpZGUgdG8gY3JlYXRlIGN1c3RvbSBmdW5kIGZvcndhcmRpbmcgbWVjaGFuaXNtcwogIGZ1bmN0aW9uIGZvcndhcmRGdW5kcygpIGludGVybmFsIHsKICAgIHdhbGxldC50cmFuc2Zlcihtc2cudmFsdWUpOwogIH0KCiAgLy8gQHJldHVybiB0cnVlIGlmIHRoZSB0cmFuc2FjdGlvbiBjYW4gYnV5IHRva2VucwogIGZ1bmN0aW9uIHZhbGlkUHVyY2hhc2UoKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zIChib29sKSB7CiAgICBib29sIHdpdGhpblBlcmlvZCA9IG5vdyA+PSBzdGFydFRpbWUgJiYgbm93IDw9IGVuZFRpbWU7CiAgICBib29sIG5vblplcm9QdXJjaGFzZSA9IG1zZy52YWx1ZSAhPSAwOwogICAgcmV0dXJuIHdpdGhpblBlcmlvZCAmJiBub25aZXJvUHVyY2hhc2U7CiAgfQoKICBmdW5jdGlvbiB3aXRoZHJhd1Rva2Vucyh1aW50MjU2IF9hbW91bnQpIHsKICAgIHJlcXVpcmUobXNnLnNlbmRlcj09d2FsbGV0KTsKICAgIHRva2VuUmV3YXJkLnRyYW5zZmVyKHdhbGxldCxfYW1vdW50KTsKICB9Cn0='.
	

]
