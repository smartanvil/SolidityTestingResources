Class {
	#name : #SRTd5906d707e223679395ceb6098dd1da8878b6919,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTd5906d707e223679395ceb6098dd1da8878b6919 >> base64 [
	^ ''.
	

]
