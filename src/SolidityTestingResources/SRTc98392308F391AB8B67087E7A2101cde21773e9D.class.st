Class {
	#name : #SRTc98392308F391AB8B67087E7A2101cde21773e9D,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTc98392308F391AB8B67087E7A2101cde21773e9D >> base64 [
	^ ''.
	

]
