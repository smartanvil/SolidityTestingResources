Class {
	#name : #SRT175a60D43604BcD2152755Bd69f98CA2a3838172,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT175a60D43604BcD2152755Bd69f98CA2a3838172 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuNDsKCmNvbnRyYWN0IFNhZmVNYXRoIAp7CiAgICAgZnVuY3Rpb24gc2FmZU11bCh1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgCiAgICAgewogICAgICAgICAgdWludCBjID0gYSAqIGI7CiAgICAgICAgICBhc3NlcnQoYSA9PSAwIHx8IGMgLyBhID09IGIpOwogICAgICAgICAgcmV0dXJuIGM7CiAgICAgfQoKICAgICBmdW5jdGlvbiBzYWZlU3ViKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSAKICAgICB7CiAgICAgICAgICBhc3NlcnQoYiA8PSBhKTsKICAgICAgICAgIHJldHVybiBhIC0gYjsKICAgICB9CgogICAgIGZ1bmN0aW9uIHNhZmVBZGQodWludCBhLCB1aW50IGIpIGludGVybmFsIHJldHVybnMgKHVpbnQpIAogICAgIHsKICAgICAgICAgIHVpbnQgYyA9IGEgKyBiOwogICAgICAgICAgYXNzZXJ0KGM+PWEgJiYgYz49Yik7CiAgICAgICAgICByZXR1cm4gYzsKICAgICB9CgogICAgIGZ1bmN0aW9uIGFzc2VydChib29sIGFzc2VydGlvbikgaW50ZXJuYWwgCiAgICAgewogICAgICAgICAgaWYgKCFhc3NlcnRpb24pIHRocm93OwogICAgIH0KfQoKLy8gU3RhbmRhcmQgdG9rZW4gaW50ZXJmYWNlIChFUkMgMjApCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8yMApjb250cmFjdCBUb2tlbiAKewovLyBGdW5jdGlvbnM6CiAgICAvLy8gQHJldHVybiB0b3RhbCBhbW91bnQgb2YgdG9rZW5zCiAgICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgc3VwcGx5KSB7fQoKICAgIC8vLyBAcGFyYW0gX293bmVyIFRoZSBhZGRyZXNzIGZyb20gd2hpY2ggdGhlIGJhbGFuY2Ugd2lsbCBiZSByZXRyaWV2ZWQKICAgIC8vLyBAcmV0dXJuIFRoZSBiYWxhbmNlCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkge30KCiAgICAvLy8gQG5vdGljZSBzZW5kIGBfdmFsdWVgIHRva2VuIHRvIGBfdG9gIGZyb20gYG1zZy5zZW5kZXJgCiAgICAvLy8gQHBhcmFtIF90byBUaGUgYWRkcmVzcyBvZiB0aGUgcmVjaXBpZW50CiAgICAvLy8gQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IG9mIHRva2VuIHRvIGJlIHRyYW5zZmVycmVkCiAgICAvLy8gQHJldHVybiBXaGV0aGVyIHRoZSB0cmFuc2ZlciB3YXMgc3VjY2Vzc2Z1bCBvciBub3QKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7fQoKICAgIC8vLyBAbm90aWNlIHNlbmQgYF92YWx1ZWAgdG9rZW4gdG8gYF90b2AgZnJvbSBgX2Zyb21gIG9uIHRoZSBjb25kaXRpb24gaXQgaXMgYXBwcm92ZWQgYnkgYF9mcm9tYAogICAgLy8vIEBwYXJhbSBfZnJvbSBUaGUgYWRkcmVzcyBvZiB0aGUgc2VuZGVyCiAgICAvLy8gQHBhcmFtIF90byBUaGUgYWRkcmVzcyBvZiB0aGUgcmVjaXBpZW50CiAgICAvLy8gQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IG9mIHRva2VuIHRvIGJlIHRyYW5zZmVycmVkCiAgICAvLy8gQHJldHVybiBXaGV0aGVyIHRoZSB0cmFuc2ZlciB3YXMgc3VjY2Vzc2Z1bCBvciBub3QKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcykge30KCiAgICAvLy8gQG5vdGljZSBgbXNnLnNlbmRlcmAgYXBwcm92ZXMgYF9hZGRyYCB0byBzcGVuZCBgX3ZhbHVlYCB0b2tlbnMKICAgIC8vLyBAcGFyYW0gX3NwZW5kZXIgVGhlIGFkZHJlc3Mgb2YgdGhlIGFjY291bnQgYWJsZSB0byB0cmFuc2ZlciB0aGUgdG9rZW5zCiAgICAvLy8gQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IG9mIHdlaSB0byBiZSBhcHByb3ZlZCBmb3IgdHJhbnNmZXIKICAgIC8vLyBAcmV0dXJuIFdoZXRoZXIgdGhlIGFwcHJvdmFsIHdhcyBzdWNjZXNzZnVsIG9yIG5vdAogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7fQoKICAgIC8vLyBAcGFyYW0gX293bmVyIFRoZSBhZGRyZXNzIG9mIHRoZSBhY2NvdW50IG93bmluZyB0b2tlbnMKICAgIC8vLyBAcGFyYW0gX3NwZW5kZXIgVGhlIGFkZHJlc3Mgb2YgdGhlIGFjY291bnQgYWJsZSB0byB0cmFuc2ZlciB0aGUgdG9rZW5zCiAgICAvLy8gQHJldHVybiBBbW91bnQgb2YgcmVtYWluaW5nIHRva2VucyBhbGxvd2VkIHRvIHNwZW50CiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKSB7fQoKLy8gRXZlbnRzOgogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50MjU2IF92YWx1ZSk7CiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKTsKfQoKY29udHJhY3QgU3RkVG9rZW4gaXMgVG9rZW4gCnsKLy8gRmllbGRzOgogICAgIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsKICAgICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikpIGFsbG93ZWQ7CgogICAgIHVpbnQyNTYgcHVibGljIGFsbFN1cHBseSA9IDA7CgovLyBGdW5jdGlvbnM6CiAgICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIAogICAgIHsKICAgICAgICAgIGlmKChiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfdmFsdWUpICYmIChiYWxhbmNlc1tfdG9dICsgX3ZhbHVlID4gYmFsYW5jZXNbX3RvXSkpIAogICAgICAgICAgewogICAgICAgICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgICAgICAgIGJhbGFuY2VzW190b10gKz0gX3ZhbHVlOwoKICAgICAgICAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgIH0gCiAgICAgICAgICBlbHNlIAogICAgICAgICAgeyAKICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOyAKICAgICAgICAgIH0KICAgICB9CgogICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgCiAgICAgewogICAgICAgICAgaWYoKGJhbGFuY2VzW19mcm9tXSA+PSBfdmFsdWUpICYmIChhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA+PSBfdmFsdWUpICYmIChiYWxhbmNlc1tfdG9dICsgX3ZhbHVlID4gYmFsYW5jZXNbX3RvXSkpIAogICAgICAgICAgewogICAgICAgICAgICAgICBiYWxhbmNlc1tfdG9dICs9IF92YWx1ZTsKICAgICAgICAgICAgICAgYmFsYW5jZXNbX2Zyb21dIC09IF92YWx1ZTsKICAgICAgICAgICAgICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOwoKICAgICAgICAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICB9IAogICAgICAgICAgZWxzZSAKICAgICAgICAgIHsgCiAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsgCiAgICAgICAgICB9CiAgICAgfQoKICAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgCiAgICAgewogICAgICAgICAgcmV0dXJuIGJhbGFuY2VzW19vd25lcl07CiAgICAgfQoKICAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIAogICAgIHsKICAgICAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CgogICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgfQoKICAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKSAKICAgICB7CiAgICAgICAgICByZXR1cm4gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsKICAgICB9CgogICAgIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBzdXBwbHlPdXQpIAogICAgIHsKICAgICAgICAgIHN1cHBseU91dCA9IGFsbFN1cHBseTsKICAgICAgICAgIHJldHVybjsKICAgICB9Cn0KCmNvbnRyYWN0IFppbGxlcml1bVRva2VuIGlzIFN0ZFRva2VuCnsKICAgICBzdHJpbmcgcHVibGljIG5hbWUgPSAiWmlsbGVyaXVtIFRva2VuIjsKICAgICB1aW50IHB1YmxpYyBkZWNpbWFscyA9IDE4OwogICAgIHN0cmluZyBwdWJsaWMgc3ltYm9sID0gIlpUSyI7CgogICAgIGFkZHJlc3MgcHVibGljIGNyZWF0b3IgPSAweDA7CiAgICAgYWRkcmVzcyBwdWJsaWMgdG9rZW5DbGllbnQgPSAweDA7IC8vIHdobyBjYW4gaXNzdWUgbW9yZSB0b2tlbnMKCiAgICAgYm9vbCBsb2NrZWQgPSBmYWxzZTsKCiAgICAgZnVuY3Rpb24gWmlsbGVyaXVtVG9rZW4oKQogICAgIHsKICAgICAgICAgIGNyZWF0b3IgPSBtc2cuc2VuZGVyOwogICAgICAgICAgdG9rZW5DbGllbnQgPSBtc2cuc2VuZGVyOwogICAgIH0KCiAgICAgZnVuY3Rpb24gY2hhbmdlQ2xpZW50KGFkZHJlc3MgbmV3QWRkcmVzcykKICAgICB7CiAgICAgICAgICBpZihtc2cuc2VuZGVyIT1jcmVhdG9yKXRocm93OwoKICAgICAgICAgIHRva2VuQ2xpZW50ID0gbmV3QWRkcmVzczsKICAgICB9CgogICAgIGZ1bmN0aW9uIGxvY2soYm9vbCB2YWx1ZSkKICAgICB7CiAgICAgICAgICBpZihtc2cuc2VuZGVyIT1jcmVhdG9yKSB0aHJvdzsKCiAgICAgICAgICBsb2NrZWQgPSB2YWx1ZTsKICAgICB9CgogICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sIHVpbnQyNTYgdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykKICAgICB7CiAgICAgICAgICBpZihsb2NrZWQpdGhyb3c7CgogICAgICAgICAgc3VjY2VzcyA9IHN1cGVyLnRyYW5zZmVyKHRvLCB2YWx1ZSk7CiAgICAgICAgICByZXR1cm47CiAgICAgfQoKICAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvLCB1aW50MjU2IHZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpCiAgICAgewogICAgICAgICAgaWYobG9ja2VkKXRocm93OwoKICAgICAgICAgIHN1Y2Nlc3MgPSBzdXBlci50cmFuc2ZlckZyb20oZnJvbSwgdG8sIHZhbHVlKTsKICAgICAgICAgIHJldHVybjsKICAgICB9CgogICAgIGZ1bmN0aW9uIGlzc3VlVG9rZW5zKGFkZHJlc3MgZm9yQWRkcmVzcywgdWludCB0b2tlbkNvdW50KSByZXR1cm5zIChib29sIHN1Y2Nlc3MpCiAgICAgewogICAgICAgICAgaWYobXNnLnNlbmRlciE9dG9rZW5DbGllbnQpdGhyb3c7CiAgICAgICAgICAKICAgICAgICAgIGlmKHRva2VuQ291bnQ9PTApIHsKICAgICAgICAgICAgICAgc3VjY2VzcyA9IGZhbHNlOwogICAgICAgICAgICAgICByZXR1cm4gOwogICAgICAgICAgfQoKICAgICAgICAgIGJhbGFuY2VzW2ZvckFkZHJlc3NdKz10b2tlbkNvdW50OwogICAgICAgICAgYWxsU3VwcGx5Kz10b2tlbkNvdW50OwoKICAgICAgICAgIHN1Y2Nlc3MgPSB0cnVlOwogICAgICAgICAgcmV0dXJuOwogICAgIH0KfQ=='.
	

]
