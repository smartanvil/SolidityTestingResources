Class {
	#name : #SRT8ec06aa74c9c1cc8b7cd5ec730bcc726d35eb3bf,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT8ec06aa74c9c1cc8b7cd5ec730bcc726d35eb3bf >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgoKY29udHJhY3QgRHJhZ29uIHsKICAgIAogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyByZWNlaXZlciwgdWludCBhbW91bnQpcmV0dXJucyhib29sIG9rKTsKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZiggYWRkcmVzcyBfYWRkcmVzcyApcmV0dXJucyh1aW50MjU2KTsKCiAgICAKfQoKY29udHJhY3QgT3duYWJsZSB7CiAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CgoKICBldmVudCBPd25lcnNoaXBUcmFuc2ZlcnJlZChhZGRyZXNzIGluZGV4ZWQgcHJldmlvdXNPd25lciwgYWRkcmVzcyBpbmRleGVkIG5ld093bmVyKTsKCgogIC8qKgogICAqIEBkZXYgVGhlIE93bmFibGUgY29uc3RydWN0b3Igc2V0cyB0aGUgb3JpZ2luYWwgYG93bmVyYCBvZiB0aGUgY29udHJhY3QgdG8gdGhlIHNlbmRlcgogICAqIGFjY291bnQuCiAgICovCiAgZnVuY3Rpb24gT3duYWJsZSgpIHB1YmxpYyB7CiAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgfQoKCiAgLyoqCiAgICogQGRldiBUaHJvd3MgaWYgY2FsbGVkIGJ5IGFueSBhY2NvdW50IG90aGVyIHRoYW4gdGhlIG93bmVyLgogICAqLwogIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICBfOwogIH0KCgogIC8qKgogICAqIEBkZXYgQWxsb3dzIHRoZSBjdXJyZW50IG93bmVyIHRvIHRyYW5zZmVyIGNvbnRyb2wgb2YgdGhlIGNvbnRyYWN0IHRvIGEgbmV3T3duZXIuCiAgICogQHBhcmFtIG5ld093bmVyIFRoZSBhZGRyZXNzIHRvIHRyYW5zZmVyIG93bmVyc2hpcCB0by4KICAgKi8KICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld093bmVyKSBwdWJsaWMgb25seU93bmVyIHsKICAgIHJlcXVpcmUobmV3T3duZXIgIT0gYWRkcmVzcygwKSk7CiAgICBPd25lcnNoaXBUcmFuc2ZlcnJlZChvd25lciwgbmV3T3duZXIpOwogICAgb3duZXIgPSBuZXdPd25lcjsKICB9Cgp9CgpsaWJyYXJ5IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgaWYgKGEgPT0gMCkgewogICAgICByZXR1cm4gMDsKICAgIH0KICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGMgLyBhID09IGIpOwogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBkaXYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgLy8gYXNzZXJ0KGIgPiAwKTsgLy8gU29saWRpdHkgYXV0b21hdGljYWxseSB0aHJvd3Mgd2hlbiBkaXZpZGluZyBieSAwCiAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgIC8vIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOyAvLyBUaGVyZSBpcyBubyBjYXNlIGluIHdoaWNoIHRoaXMgZG9lc24ndCBob2xkCiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhICsgYjsKICAgIGFzc2VydChjID49IGEpOwogICAgcmV0dXJuIGM7CiAgfQp9CgoKCgpjb250cmFjdCBEcmFnb25Mb2NrIGlzIE93bmFibGUgewogICAgCiAgICB1c2luZyBTYWZlTWF0aCBmb3IgdWludDsKICAgCiAgICBhZGRyZXNzIHB1YmxpYyBkYXRhZW50cnljbGVyazsKICAgIERyYWdvbiBwdWJsaWMgdG9rZW5yZXdhcmQ7IAogICAgCiAgICAKICAgIG1hcHBpbmcgKCBhZGRyZXNzID0+IHVpbnQgKSBwdWJsaWMgZHJhZ29uQmFsYW5jZTsKICAgCiAgICAKICAgIHVpbnQgcHVibGljIFRpbWVMb2NrOwogCiAgICAKICAgIAogICAgCiAgICAgbW9kaWZpZXIgb25seURhdGFFbnRyeUNsZXJrICgpIHsKICAgICAgICByZXF1aXJlICggbXNnLnNlbmRlciA9PSBkYXRhZW50cnljbGVyayApOwogICAgICAgIF87CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIERyYWdvbkxvY2sgKCl7CiAgICAgICAgCiAgICAgICAgdG9rZW5yZXdhcmQgPSBEcmFnb24gKCAgMHg4MTRmNjdmYTI4NmY3NTcyYjA0MWQwNDFiMWQ5OWI0MzJjOTE1NWVlICk7IC8vIGRyYWdvbiB0b2tlbiBhZGRyZXNzCiAgICAgICAgVGltZUxvY2sgPSBub3cgKyA5MCBkYXlzOwogICAgICAgCiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgICAgIGRhdGFlbnRyeWNsZXJrID0gbXNnLnNlbmRlcjsKICAgICAgICAKICAgIH0KICAgIAogICAgCiAgICAvL2FsbG93cyB0b2tlbiBob2xkZXJzIHRvIHdpdGhkYXIgdGhlaXIgZHJhZ29ucyBhZnRlciB0aW1lbG9jayBleHBpcmVzCiAgICBmdW5jdGlvbiB3aXRoZHJhd0RyYWdvbnMoKXsKICAgICAgICAKICAgICAgICByZXF1aXJlICggbm93ID4gVGltZUxvY2sgKTsKICAgICAgICB1aW50IGJhbCA9IGRyYWdvbkJhbGFuY2UgWyBtc2cuc2VuZGVyIF07CiAgICAgICAgZHJhZ29uQmFsYW5jZSBbIG1zZy5zZW5kZXIgXSA9IDA7CiAgICAgICAgdG9rZW5yZXdhcmQudHJhbnNmZXIgKCBtc2cuc2VuZGVyICwgYmFsICk7CiAgICAgICAgCiAgICB9CiAgICAKICAgIAogICAgLy8gbWFudWFsbHkgZW50ZXIgZHJhZ29uIGNyZWRpdCB0byBkcmFnb24gbG9jayAgLSByZW1lbWJlciB0byBhZGQgOCBleHRyYSB6ZXJvcyB0byBjb21wZW5zYXRlIGZvciA4IGRyYWdvbiBkZWNpbWFscwogICAgZnVuY3Rpb24gY3JlZGl0RHJhZ29uICggYWRkcmVzcyB0b2tlbmhvbGRlciwgdWludCBhbW91bnQgKSBvbmx5RGF0YUVudHJ5Q2xlcmsgewogICAgICAgIAogICAgICAgIHJlcXVpcmUgKCB0b2tlbmhvbGRlciAhPSAweDAwICk7CiAgICAgICAgZHJhZ29uQmFsYW5jZSBbIHRva2VuaG9sZGVyIF0gPSBkcmFnb25CYWxhbmNlIFsgdG9rZW5ob2xkZXIgXS5hZGQoYW1vdW50KTsKICAgICAgICAKICAgIH0KICAgIAogICAgLy9Vc2VkIGluIGNhc2UgZGF0YSBlbnRyeSBjbGVyayBtYWtlcyBhbiBlcnJvciBjcmVkaXRpbmcgYWRkcmVzcwogICAgZnVuY3Rpb24gcmVzZXREcmFnb25CYWxhbmNlICggYWRkcmVzcyB0b2tlbmhvbGRlciwgdWludCBhbW91bnQgKSBvbmx5T3duZXIgewogICAgICAgIAogICAgICAgIHJlcXVpcmUgKCB0b2tlbmhvbGRlciAhPSAweDAwICk7CiAgICAgICAgZHJhZ29uQmFsYW5jZSBbIHRva2VuaG9sZGVyIF0gPSAwOwogICAgICAgIAogICAgfQogICAKICAgIC8vIHRyYW5zZmVyIG93bmVyc2hpcCBvZiB0aGlzIGNvbnRyYWN0CiAgICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcCAoIGFkZHJlc3MgX25ld293bmVyICkgb25seU93bmVyIHsKICAgICAgICAKICAgICAgICByZXF1aXJlICggX25ld293bmVyICE9IDB4MDAgKTsKICAgICAgICBvd25lciA9IF9uZXdvd25lcjsKICAgICAgICAKICAgIH0KICAgIAogICAgCiAgICBmdW5jdGlvbiB0cmFuc2ZlckRhdGFFbnRyeUNsZXJrICggYWRkcmVzcyBfZGF0YWVudHJ5Y2xlcmsgKSBvbmx5T3duZXIgewogICAgICAgIAogICAgICAgIHJlcXVpcmUgKCBfZGF0YWVudHJ5Y2xlcmsgIT0gMHgwMCApOwogICAgICAgIGRhdGFlbnRyeWNsZXJrID0gX2RhdGFlbnRyeWNsZXJrOwogICAgICAgIAogICAgfQogICAgCiAgIAp9'.
	

]
