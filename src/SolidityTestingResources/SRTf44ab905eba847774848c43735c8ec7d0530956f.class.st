Class {
	#name : #SRTf44ab905eba847774848c43735c8ec7d0530956f,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTf44ab905eba847774848c43735c8ec7d0530956f >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7CgovKioKICogQHRpdGxlIEFycmF5IFV0aWxpdGllcyBMaWJyYXJ5CiAqIEBhdXRob3IgTWFqb29sci5pbwogKgogKiB2ZXJzaW9uIDEuMC4wCiAqIENvcHlyaWdodCAoYykgMjAxNyBNYWpvb2xyLCBMTEMKICogVGhlIE1JVCBMaWNlbnNlIChNSVQpCiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9NYWpvb2xyL2V0aGVyZXVtLWxpYnJhcmllcy9ibG9iL21hc3Rlci9MSUNFTlNFCiAqCiAqIFRoZSBBcnJheSBVdGlsaXRpZXMgTGlicmFyeSBwcm92aWRlcyBhIGZldyB1dGlsaXR5IGZ1bmN0aW9ucyB0byB3b3JrIHdpdGgKICogc3RvcmFnZSBhcnJheXMgaW4gcGxhY2UuIE1ham9vbHIgd29ya3Mgb24gb3BlbiBzb3VyY2UgcHJvamVjdHMgaW4gdGhlIEV0aGVyZXVtCiAqIGNvbW11bml0eSB3aXRoIHRoZSBwdXJwb3NlIG9mIHRlc3RpbmcsIGRvY3VtZW50aW5nLCBhbmQgZGVwbG95aW5nIHJldXNhYmxlCiAqIGNvZGUgb250byB0aGUgYmxvY2tjaGFpbiB0byBpbXByb3ZlIHNlY3VyaXR5IGFuZCB1c2FiaWxpdHkgb2Ygc21hcnQKICogY29udHJhY3RzLiBNYWpvb2xyIGFsc28gc3RyaXZlcyB0byBlZHVjYXRlIG5vbi1wcm9maXRzLCBzY2hvb2xzLCBhbmQgb3RoZXIKICogY29tbXVuaXR5IG1lbWJlcnMgYWJvdXQgdGhlIGFwcGxpY2F0aW9uIG9mIGJsb2NrY2hhaW4gdGVjaG5vbG9neS4KICogRm9yIGZ1cnRoZXIgaW5mb3JtYXRpb246IG1ham9vbHIuaW8KICoKICogVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MKICogT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRgogKiBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuCiAqIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZCiAqIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsCiAqIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFCiAqIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLgogKi8KCmxpYnJhcnkgQXJyYXlVdGlsc0xpYiB7CgogIC8vLyBAZGV2IFN1bSB2ZWN0b3IKICAvLy8gQHBhcmFtIHNlbGYgU3RvcmFnZSBhcnJheSBjb250YWluaW5nIHVpbnQyNTYgdHlwZSB2YXJpYWJsZXMKICAvLy8gQHJldHVybiBzdW0gVGhlIHN1bSBvZiBhbGwgZWxlbWVudHMsIGRvZXMgbm90IGNoZWNrIGZvciBvdmVyZmxvdwogIGZ1bmN0aW9uIHN1bUVsZW1lbnRzKHVpbnQyNTZbXSBzdG9yYWdlIHNlbGYpIGNvbnN0YW50IHJldHVybnModWludDI1NiBzdW0pewogICAgYXNzZW1ibHkgeyBtc3RvcmUoMHg2MCxzZWxmX3Nsb3QpIH0KCiAgICBmb3IgKHVpbnQyNTYgaSA9IDA7IGkgPCBzZWxmLmxlbmd0aDsgaSsrKSB7CiAgICAgIGFzc2VtYmx5IHsKICAgICAgICBzdW0gOj0gYWRkKHNsb2FkKGFkZChzaGEzKDB4NjAsMHgyMCksaSkpLHN1bSkKICAgICAgfQogICAgfQogIH0KCiAgLy8vIEBkZXYgUmV0dXJucyB0aGUgbWF4IHZhbHVlIGluIGFuIGFycmF5LgogIC8vLyBAcGFyYW0gc2VsZiBTdG9yYWdlIGFycmF5IGNvbnRhaW5pbmcgdWludDI1NiB0eXBlIHZhcmlhYmxlcwogIC8vLyBAcmV0dXJuIG1heFZhbHVlIFRoZSBoaWdoZXN0IHZhbHVlIGluIHRoZSBhcnJheQogIGZ1bmN0aW9uIGdldE1heCh1aW50MjU2W10gc3RvcmFnZSBzZWxmKSBjb25zdGFudCByZXR1cm5zKHVpbnQyNTYgbWF4VmFsdWUpIHsKICAgIGFzc2VtYmx5IHsgbXN0b3JlKDB4NjAsc2VsZl9zbG90KSB9CgogICAgZm9yICh1aW50MjU2IGkgPSAxOyBpIDwgc2VsZi5sZW5ndGg7IGkrKykgewogICAgICBhc3NlbWJseSB7CiAgICAgICAgbWF4VmFsdWUgOj0gc2xvYWQoc2hhMygweDYwLDB4MjApKQogICAgICAgIGp1bXBpKHNraXAsIGx0KHNsb2FkKGFkZChzaGEzKDB4NjAsMHgyMCksaSkpLCBtYXhWYWx1ZSkpCiAgICAgICAgbWF4VmFsdWUgOj0gc2xvYWQoYWRkKHNoYTMoMHg2MCwweDIwKSxpKSkKICAgICAgICBza2lwOgogICAgICB9CiAgICB9CiAgfQoKICAvLy8gQGRldiBGaW5kcyB0aGUgaW5kZXggb2YgYSBnaXZlbiB2YWx1ZSBpbiBhbiBhcnJheQogIC8vLyBAcGFyYW0gc2VsZiBTdG9yYWdlIGFycmF5IGNvbnRhaW5pbmcgdWludDI1NiB0eXBlIHZhcmlhYmxlcwogIC8vLyBAcGFyYW0gdmFsdWUgVGhlIHZhbHVlIHRvIHNlYXJjaCBmb3IKICAvLy8gQHBhcmFtIGlzU29ydGVkIFRydWUgaWYgdGhlIGFycmF5IGlzIHNvcnRlZCwgZmFsc2Ugb3RoZXJ3aXNlCiAgLy8vIEByZXR1cm4gZm91bmQgVHJ1ZSBpZiB0aGUgdmFsdWUgd2FzIGZvdW5kLCBmYWxzZSBvdGhlcndpc2UKICAvLy8gQHJldHVybiBpbmRleCBUaGUgaW5kZXggb2YgdGhlIGdpdmVuIHZhbHVlLCByZXR1cm5zIDAgaWYgZm91bmQgaXMgZmFsc2UKICBmdW5jdGlvbiBpbmRleE9mKHVpbnQyNTZbXSBzdG9yYWdlIHNlbGYsIHVpbnQyNTYgdmFsdWUsIGJvb2wgaXNTb3J0ZWQpIGNvbnN0YW50CiAgICAgICAgICAgcmV0dXJucyhib29sIGZvdW5kLCB1aW50MjU2IGluZGV4KSB7CiAgICBhc3NlbWJseXsKICAgICAgbXN0b3JlKDB4NjAsc2VsZl9zbG90KQogICAgICBsZXQgbG93IDo9IDAKICAgICAgbGV0IGhpZ2ggOj0gc3ViKHNsb2FkKHNlbGZfc2xvdCksMSkKICAgICAgbGV0IG1pZCA6PSAwCiAgICAgIGp1bXBpKHVuc29ydGVkLCBpc3plcm8oaXNTb3J0ZWQpKQogICAgICBzb3J0ZWQ6CiAgICAgICAganVtcGkoZG9uZSwgZ3QobG93LGhpZ2gpKQogICAgICAgIG1pZCA6PSBkaXYoYWRkKGxvdyxoaWdoKSwyKQogICAgICAgIGp1bXBpKHNldEgsIGx0KHZhbHVlLHNsb2FkKGFkZChzaGEzKDB4NjAsMHgyMCksbWlkKSkpKQogICAgICAgIGp1bXBpKHNldEwsIGd0KHZhbHVlLHNsb2FkKGFkZChzaGEzKDB4NjAsMHgyMCksbWlkKSkpKQogICAgICAgIGZvdW5kIDo9IDEKICAgICAgICBpbmRleCA6PSBtaWQKICAgICAgICBqdW1wKGRvbmUpCiAgICAgICAgc2V0SDoKICAgICAgICAgIGhpZ2ggOj0gc3ViKG1pZCwxKQogICAgICAgICAganVtcChzb3J0ZWQpCiAgICAgICAgc2V0TDoKICAgICAgICAgIGxvdyA6PSBhZGQobWlkLDEpCiAgICAgICAgICBqdW1wKHNvcnRlZCkKICAgICAgdW5zb3J0ZWQ6CiAgICAgICAganVtcGkobG9vcCwgaXN6ZXJvKGVxKHNsb2FkKGFkZChzaGEzKDB4NjAsMHgyMCksbG93KSksIHZhbHVlKSkpCiAgICAgICAgZm91bmQgOj0gMQogICAgICAgIGluZGV4IDo9IGxvdwogICAgICAgIGp1bXAoZG9uZSkKICAgICAgICBsb29wOgogICAgICAgICAgbG93IDo9IGFkZChsb3csMSkKICAgICAgICAgIGp1bXBpKHVuc29ydGVkLCBsdChsb3csIHNsb2FkKHNlbGZfc2xvdCkpKQogICAgICBkb25lOgogICAgfQogIH0KCiAgLy8vIEBkZXYgVXRpbGl0eSBmdW5jdGlvbiBmb3IgaGVhcFNvcnQKICAvLy8gQHBhcmFtIGluZGV4IFRoZSBpbmRleCBvZiBjaGlsZCBub2RlCiAgLy8vIEByZXR1cm4gcEkgVGhlIHBhcmVudCBub2RlIGluZGV4CiAgZnVuY3Rpb24gZ2V0UGFyZW50SSh1aW50MjU2IGluZGV4KSBjb25zdGFudCBwcml2YXRlIHJldHVybnMgKHVpbnQyNTYgcEkpIHsKICAgIHVpbnQyNTYgaSA9IGluZGV4IC0gMTsKICAgIHBJID0gaS8yOwogIH0KCiAgLy8vIEBkZXYgVXRpbGl0eSBmdW5jdGlvbiBmb3IgaGVhcFNvcnQKICAvLy8gQHBhcmFtIGluZGV4IFRoZSBpbmRleCBvZiBwYXJlbnQgbm9kZQogIC8vLyBAcmV0dXJuIGxjSSBUaGUgaW5kZXggb2YgbGVmdCBjaGlsZAogIGZ1bmN0aW9uIGdldExlZnRDaGlsZEkodWludDI1NiBpbmRleCkgY29uc3RhbnQgcHJpdmF0ZSByZXR1cm5zICh1aW50MjU2IGxjSSkgewogICAgdWludDI1NiBpID0gaW5kZXggKiAyOwogICAgbGNJID0gaSArIDE7CiAgfQoKICAvLy8gQGRldiBTb3J0cyBnaXZlbiBhcnJheSBpbiBwbGFjZQogIC8vLyBAcGFyYW0gc2VsZiBTdG9yYWdlIGFycmF5IGNvbnRhaW5pbmcgdWludDI1NiB0eXBlIHZhcmlhYmxlcwogIGZ1bmN0aW9uIGhlYXBTb3J0KHVpbnQyNTZbXSBzdG9yYWdlIHNlbGYpIHsKICAgIHVpbnQyNTYgZW5kID0gc2VsZi5sZW5ndGggLSAxOwogICAgdWludDI1NiBzdGFydCA9IGdldFBhcmVudEkoZW5kKTsKICAgIHVpbnQyNTYgcm9vdCA9IHN0YXJ0OwogICAgdWludDI1NiBsQ2hpbGQ7CiAgICB1aW50MjU2IHJDaGlsZDsKICAgIHVpbnQyNTYgc3dhcDsKICAgIHVpbnQyNTYgdGVtcDsKICAgIHdoaWxlKHN0YXJ0ID49IDApewogICAgICByb290ID0gc3RhcnQ7CiAgICAgIGxDaGlsZCA9IGdldExlZnRDaGlsZEkoc3RhcnQpOwogICAgICB3aGlsZShsQ2hpbGQgPD0gZW5kKXsKICAgICAgICByQ2hpbGQgPSBsQ2hpbGQgKyAxOwogICAgICAgIHN3YXAgPSByb290OwogICAgICAgIGlmKHNlbGZbc3dhcF0gPCBzZWxmW2xDaGlsZF0pCiAgICAgICAgICBzd2FwID0gbENoaWxkOwogICAgICAgIGlmKChyQ2hpbGQgPD0gZW5kKSAmJiAoc2VsZltzd2FwXTxzZWxmW3JDaGlsZF0pKQogICAgICAgICAgc3dhcCA9IHJDaGlsZDsKICAgICAgICBpZihzd2FwID09IHJvb3QpCiAgICAgICAgICBsQ2hpbGQgPSBlbmQrMTsKICAgICAgICBlbHNlIHsKICAgICAgICAgIHRlbXAgPSBzZWxmW3N3YXBdOwogICAgICAgICAgc2VsZltzd2FwXSA9IHNlbGZbcm9vdF07CiAgICAgICAgICBzZWxmW3Jvb3RdID0gdGVtcDsKICAgICAgICAgIHJvb3QgPSBzd2FwOwogICAgICAgICAgbENoaWxkID0gZ2V0TGVmdENoaWxkSShyb290KTsKICAgICAgICB9CiAgICAgIH0KICAgICAgaWYoc3RhcnQgPT0gMCkKICAgICAgICBicmVhazsKICAgICAgZWxzZQogICAgICAgIHN0YXJ0ID0gc3RhcnQgLSAxOwogICAgfQogICAgd2hpbGUoZW5kID4gMCl7CiAgICAgIHRlbXAgPSBzZWxmW2VuZF07CiAgICAgIHNlbGZbZW5kXSA9IHNlbGZbMF07CiAgICAgIHNlbGZbMF0gPSB0ZW1wOwogICAgICBlbmQgPSBlbmQgLSAxOwogICAgICByb290ID0gMDsKICAgICAgbENoaWxkID0gZ2V0TGVmdENoaWxkSSgwKTsKICAgICAgd2hpbGUobENoaWxkIDw9IGVuZCl7CiAgICAgICAgckNoaWxkID0gbENoaWxkICsgMTsKICAgICAgICBzd2FwID0gcm9vdDsKICAgICAgICBpZihzZWxmW3N3YXBdIDwgc2VsZltsQ2hpbGRdKQogICAgICAgICAgc3dhcCA9IGxDaGlsZDsKICAgICAgICBpZigockNoaWxkIDw9IGVuZCkgJiYgKHNlbGZbc3dhcF08c2VsZltyQ2hpbGRdKSkKICAgICAgICAgIHN3YXAgPSByQ2hpbGQ7CiAgICAgICAgaWYoc3dhcCA9PSByb290KQogICAgICAgICAgbENoaWxkID0gZW5kICsgMTsKICAgICAgICBlbHNlIHsKICAgICAgICAgIHRlbXAgPSBzZWxmW3N3YXBdOwogICAgICAgICAgc2VsZltzd2FwXSA9IHNlbGZbcm9vdF07CiAgICAgICAgICBzZWxmW3Jvb3RdID0gdGVtcDsKICAgICAgICAgIHJvb3QgPSBzd2FwOwogICAgICAgICAgbENoaWxkID0gZ2V0TGVmdENoaWxkSShyb290KTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9Cn0='.
	

]
