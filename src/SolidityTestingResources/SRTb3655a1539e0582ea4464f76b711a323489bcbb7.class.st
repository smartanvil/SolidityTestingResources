Class {
	#name : #SRTb3655a1539e0582ea4464f76b711a323489bcbb7,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTb3655a1539e0582ea4464f76b711a323489bcbb7 >> base64 [
	^ ''.
	

]
