Class {
	#name : #SRT9cacf0f744fccbeb5930ffbf933750255a96b441,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT9cacf0f744fccbeb5930ffbf933750255a96b441 >> base64 [
	^ ''.
	

]
