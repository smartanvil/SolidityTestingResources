Class {
	#name : #SRTe4889fa16ba797a8a51196ec9389e4764576deae,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTe4889fa16ba797a8a51196ec9389e4764576deae >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMjA7CgoKLyoqCiAqIEB0aXRsZSBPd25hYmxlCiAqIEBkZXYgVGhlIE93bmFibGUgY29udHJhY3QgaGFzIGFuIG93bmVyIGFkZHJlc3MsIGFuZCBwcm92aWRlcyBiYXNpYyBhdXRob3JpemF0aW9uIGNvbnRyb2wKICogZnVuY3Rpb25zLCB0aGlzIHNpbXBsaWZpZXMgdGhlIGltcGxlbWVudGF0aW9uIG9mICJ1c2VyIHBlcm1pc3Npb25zIi4KICovCmNvbnRyYWN0IE93bmFibGUgewogIGFkZHJlc3MgcHVibGljIG93bmVyOwoKCiAgZXZlbnQgT3duZXJzaGlwVHJhbnNmZXJyZWQoYWRkcmVzcyBpbmRleGVkIHByZXZpb3VzT3duZXIsIGFkZHJlc3MgaW5kZXhlZCBuZXdPd25lcik7CgoKICAvKioKICAgKiBAZGV2IFRoZSBPd25hYmxlIGNvbnN0cnVjdG9yIHNldHMgdGhlIG9yaWdpbmFsIGBvd25lcmAgb2YgdGhlIGNvbnRyYWN0IHRvIHRoZSBzZW5kZXIKICAgKiBhY2NvdW50LgogICAqLwogIGZ1bmN0aW9uIE93bmFibGUoKSBwdWJsaWMgewogICAgb3duZXIgPSBtc2cuc2VuZGVyOwogIH0KCiAgLyoqCiAgICogQGRldiBUaHJvd3MgaWYgY2FsbGVkIGJ5IGFueSBhY2NvdW50IG90aGVyIHRoYW4gdGhlIG93bmVyLgogICAqLwogIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICBfOwogIH0KCiAgLyoqCiAgICogQGRldiBBbGxvd3MgdGhlIGN1cnJlbnQgb3duZXIgdG8gdHJhbnNmZXIgY29udHJvbCBvZiB0aGUgY29udHJhY3QgdG8gYSBuZXdPd25lci4KICAgKiBAcGFyYW0gbmV3T3duZXIgVGhlIGFkZHJlc3MgdG8gdHJhbnNmZXIgb3duZXJzaGlwIHRvLgogICAqLwogIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpIHB1YmxpYyBvbmx5T3duZXIgewogICAgcmVxdWlyZShuZXdPd25lciAhPSBhZGRyZXNzKDApKTsKICAgIGVtaXQgT3duZXJzaGlwVHJhbnNmZXJyZWQob3duZXIsIG5ld093bmVyKTsKICAgIG93bmVyID0gbmV3T3duZXI7CiAgfQoKfQoKCgovKioKICogQHRpdGxlIFBhdXNhYmxlCiAqIEBkZXYgQmFzZSBjb250cmFjdCB3aGljaCBhbGxvd3MgY2hpbGRyZW4gdG8gaW1wbGVtZW50IGFuIGVtZXJnZW5jeSBzdG9wIG1lY2hhbmlzbS4KICovCmNvbnRyYWN0IFBhdXNhYmxlIGlzIE93bmFibGUgewogIGV2ZW50IFBhdXNlKCk7CiAgZXZlbnQgVW5wYXVzZSgpOwoKICBib29sIHB1YmxpYyBwYXVzZWQgPSBmYWxzZTsKCgogIC8qKgogICAqIEBkZXYgTW9kaWZpZXIgdG8gbWFrZSBhIGZ1bmN0aW9uIGNhbGxhYmxlIG9ubHkgd2hlbiB0aGUgY29udHJhY3QgaXMgbm90IHBhdXNlZC4KICAgKi8KICBtb2RpZmllciB3aGVuTm90UGF1c2VkKCkgewogICAgcmVxdWlyZSghcGF1c2VkKTsKICAgIF87CiAgfQoKICAvKioKICAgKiBAZGV2IE1vZGlmaWVyIHRvIG1ha2UgYSBmdW5jdGlvbiBjYWxsYWJsZSBvbmx5IHdoZW4gdGhlIGNvbnRyYWN0IGlzIHBhdXNlZC4KICAgKi8KICBtb2RpZmllciB3aGVuUGF1c2VkKCkgewogICAgcmVxdWlyZShwYXVzZWQpOwogICAgXzsKICB9CgogIC8qKgogICAqIEBkZXYgY2FsbGVkIGJ5IHRoZSBvd25lciB0byBwYXVzZSwgdHJpZ2dlcnMgc3RvcHBlZCBzdGF0ZQogICAqLwogIGZ1bmN0aW9uIHBhdXNlKCkgb25seU93bmVyIHdoZW5Ob3RQYXVzZWQgcHVibGljIHsKICAgIHBhdXNlZCA9IHRydWU7CiAgICBlbWl0IFBhdXNlKCk7CiAgfQoKICAvKioKICAgKiBAZGV2IGNhbGxlZCBieSB0aGUgb3duZXIgdG8gdW5wYXVzZSwgcmV0dXJucyB0byBub3JtYWwgc3RhdGUKICAgKi8KICBmdW5jdGlvbiB1bnBhdXNlKCkgb25seU93bmVyIHdoZW5QYXVzZWQgcHVibGljIHsKICAgIHBhdXNlZCA9IGZhbHNlOwogICAgZW1pdCBVbnBhdXNlKCk7CiAgfQp9CgoKLy8vIEB0aXRsZSBCbG9ja2NoYWluQ3V0aWVzIFByZXNhbGUKY29udHJhY3QgQmxvY2tjaGFpbkN1dGllc1ByZXNhbGUgaXMgUGF1c2FibGUKewogICAgc3RydWN0IFB1cmNoYXNlCiAgICB7CiAgICAgICAgYWRkcmVzcyBvd25lcjsKICAgICAgICB1aW50MzIgY3V0aWVLaW5kOwogICAgICAgIHVpbnQxMjggcHJpY2U7CiAgICB9CiAgICBQdXJjaGFzZVtdIHB1YmxpYyBwdXJjaGFzZXM7CgogICAgc3RydWN0IEN1dGllCiAgICB7CiAgICAgICAgdWludDEyOCBwcmljZTsKICAgICAgICB1aW50MTI4IGxlZnRDb3VudDsKICAgICAgICB1aW50MTI4IHByaWNlTXVsOwogICAgICAgIHVpbnQxMjggcHJpY2VBZGQ7CiAgICB9CgogICAgbWFwcGluZyAodWludDMyID0+IEN1dGllKSBwdWJsaWMgY3V0aWU7CgogICAgZXZlbnQgQmlkKHVpbnQyNTYgaW5kZXhlZCBwdXJjaGFzZUlkKTsKCiAgICBmdW5jdGlvbiBhZGRDdXRpZSh1aW50MzIgaWQsIHVpbnQxMjggcHJpY2UsIHVpbnQxMjggY291bnQsIHVpbnQxMjggcHJpY2VNdWwsIHVpbnQxMjggcHJpY2VBZGQpIHB1YmxpYyBvbmx5T3duZXIKICAgIHsKICAgICAgICBjdXRpZVtpZF0gPSBDdXRpZShwcmljZSwgY291bnQsIHByaWNlTXVsLCBwcmljZUFkZCk7CiAgICB9CgogICAgZnVuY3Rpb24gaXNBdmFpbGFibGUodWludDMyIGN1dGllS2luZCkgcHVibGljIHZpZXcgcmV0dXJucyAoYm9vbCkKICAgIHsKICAgICAgICByZXR1cm4gY3V0aWVbY3V0aWVLaW5kXS5sZWZ0Q291bnQgPiAwOwogICAgfQoKICAgIGZ1bmN0aW9uIGdldFByaWNlKHVpbnQzMiBjdXRpZUtpbmQpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYgcHJpY2UsIHVpbnQyNTYgbGVmdCkKICAgIHsKICAgICAgICBwcmljZSA9IGN1dGllW2N1dGllS2luZF0ucHJpY2U7CiAgICAgICAgbGVmdCA9IGN1dGllW2N1dGllS2luZF0ubGVmdENvdW50OwogICAgfQoKICAgIGZ1bmN0aW9uIGJpZCh1aW50MzIgY3V0aWVLaW5kKSBwdWJsaWMgcGF5YWJsZSB3aGVuTm90UGF1c2VkCiAgICB7CiAgICAgICAgQ3V0aWUgc3RvcmFnZSBwID0gY3V0aWVbY3V0aWVLaW5kXTsKICAgICAgICByZXF1aXJlKGlzQXZhaWxhYmxlKGN1dGllS2luZCkpOwogICAgICAgIHJlcXVpcmUocC5wcmljZSA8PSBtc2cudmFsdWUpOwoKICAgICAgICB1aW50MjU2IGxlbmd0aCA9IHB1cmNoYXNlcy5wdXNoKFB1cmNoYXNlKG1zZy5zZW5kZXIsIGN1dGllS2luZCwgdWludDEyOChtc2cudmFsdWUpKSk7CgogICAgICAgIGVtaXQgQmlkKGxlbmd0aCAtIDEpOwoKICAgICAgICBwLmxlZnRDb3VudC0tOwogICAgICAgIHAucHJpY2UgPSB1aW50MTI4KHVpbnQyNTYocC5wcmljZSkqcC5wcmljZU11bCAvIDEwMDAwMDAwMDAwMDAwMDAwMDAgKyBwLnByaWNlQWRkKTsKICAgIH0KCiAgICBmdW5jdGlvbiBwdXJjaGFzZXNDb3VudCgpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYpCiAgICB7CiAgICAgICAgcmV0dXJuIHB1cmNoYXNlcy5sZW5ndGg7CiAgICB9CgogICAgZnVuY3Rpb24gZGVzdHJveUNvbnRyYWN0KCkgcHVibGljIG9ubHlPd25lciB7CiAgICAgICAgcmVxdWlyZShhZGRyZXNzKHRoaXMpLmJhbGFuY2UgPT0gMCk7CiAgICAgICAgc2VsZmRlc3RydWN0KG1zZy5zZW5kZXIpOwogICAgfQoKICAgIGFkZHJlc3MgcGFydHkxYWRkcmVzczsKICAgIGFkZHJlc3MgcGFydHkyYWRkcmVzczsKICAgIGFkZHJlc3MgcGFydHkzYWRkcmVzczsKICAgIGFkZHJlc3MgcGFydHk0YWRkcmVzczsKICAgIGFkZHJlc3MgcGFydHk1YWRkcmVzczsKCiAgICAvLy8gQGRldiBTZXR1cCBwcm9qZWN0IG93bmVycwogICAgZnVuY3Rpb24gc2V0UGFydGllcyhhZGRyZXNzIF9wYXJ0eTEsIGFkZHJlc3MgX3BhcnR5MiwgYWRkcmVzcyBfcGFydHkzLCBhZGRyZXNzIF9wYXJ0eTQsIGFkZHJlc3MgX3BhcnR5NSkgcHVibGljIG9ubHlPd25lcgogICAgewogICAgICAgIHJlcXVpcmUoX3BhcnR5MSAhPSBhZGRyZXNzKDApKTsKICAgICAgICByZXF1aXJlKF9wYXJ0eTIgIT0gYWRkcmVzcygwKSk7CiAgICAgICAgcmVxdWlyZShfcGFydHkzICE9IGFkZHJlc3MoMCkpOwogICAgICAgIHJlcXVpcmUoX3BhcnR5NCAhPSBhZGRyZXNzKDApKTsKICAgICAgICByZXF1aXJlKF9wYXJ0eTUgIT0gYWRkcmVzcygwKSk7CgogICAgICAgIHBhcnR5MWFkZHJlc3MgPSBfcGFydHkxOwogICAgICAgIHBhcnR5MmFkZHJlc3MgPSBfcGFydHkyOwogICAgICAgIHBhcnR5M2FkZHJlc3MgPSBfcGFydHkzOwogICAgICAgIHBhcnR5NGFkZHJlc3MgPSBfcGFydHk0OwogICAgICAgIHBhcnR5NWFkZHJlc3MgPSBfcGFydHk1OwogICAgfQoKICAgIC8vLyBAZGV2IFJlamVjdCBhbGwgRXRoZXIKICAgIGZ1bmN0aW9uKCkgZXh0ZXJuYWwgcGF5YWJsZSB7CiAgICAgICAgcmV2ZXJ0KCk7CiAgICB9CgogICAgLy8vIEBkZXYgVGhlIGJhbGFuY2UgdHJhbnNmZXIgdG8gcHJvamVjdCBvd25lcnMKICAgIGZ1bmN0aW9uIHdpdGhkcmF3RXRoRnJvbUJhbGFuY2UoKSBleHRlcm5hbAogICAgewogICAgICAgIHJlcXVpcmUoCiAgICAgICAgICAgIG1zZy5zZW5kZXIgPT0gcGFydHkxYWRkcmVzcyB8fAogICAgICAgICAgICBtc2cuc2VuZGVyID09IHBhcnR5MmFkZHJlc3MgfHwKICAgICAgICAgICAgbXNnLnNlbmRlciA9PSBwYXJ0eTNhZGRyZXNzIHx8CiAgICAgICAgICAgIG1zZy5zZW5kZXIgPT0gcGFydHk0YWRkcmVzcyB8fAogICAgICAgICAgICBtc2cuc2VuZGVyID09IHBhcnR5NWFkZHJlc3MgfHwKICAgICAgICAgICAgbXNnLnNlbmRlciA9PSBvd25lcik7CgogICAgICAgIHJlcXVpcmUocGFydHkxYWRkcmVzcyAhPSAwKTsKICAgICAgICByZXF1aXJlKHBhcnR5MmFkZHJlc3MgIT0gMCk7CiAgICAgICAgcmVxdWlyZShwYXJ0eTNhZGRyZXNzICE9IDApOwogICAgICAgIHJlcXVpcmUocGFydHk0YWRkcmVzcyAhPSAwKTsKICAgICAgICByZXF1aXJlKHBhcnR5NWFkZHJlc3MgIT0gMCk7CgogICAgICAgIHVpbnQyNTYgdG90YWwgPSBhZGRyZXNzKHRoaXMpLmJhbGFuY2U7CgogICAgICAgIHBhcnR5MWFkZHJlc3MudHJhbnNmZXIodG90YWwqMTA1LzEwMDApOwogICAgICAgIHBhcnR5MmFkZHJlc3MudHJhbnNmZXIodG90YWwqMTA1LzEwMDApOwogICAgICAgIHBhcnR5M2FkZHJlc3MudHJhbnNmZXIodG90YWwqMTQwLzEwMDApOwogICAgICAgIHBhcnR5NGFkZHJlc3MudHJhbnNmZXIodG90YWwqMTQwLzEwMDApOwogICAgICAgIHBhcnR5NWFkZHJlc3MudHJhbnNmZXIodG90YWwqNTEwLzEwMDApOwogICAgfSAgICAKfQ=='.
	

]
