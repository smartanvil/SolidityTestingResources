Class {
	#name : #SRT280d90f4610a0d04427a14906aa9095e62c91cc0,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT280d90f4610a0d04427a14906aa9095e62c91cc0 >> base64 [
	^ ''.
	

]
