Class {
	#name : #SRT8c65898CcEaA73209F579653fa5523b7B13972bd,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT8c65898CcEaA73209F579653fa5523b7B13972bd >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuODsKCmNvbnRyYWN0IG93bmVkIHsKICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKICBmdW5jdGlvbiBvd25lZCgpIHsKICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICB9CiAgbW9kaWZpZXIgb25seU93bmVyIHsKICAgIGlmKG1zZy5zZW5kZXIgIT0gb3duZXIpIHRocm93OwogICAgXzsKICB9CiAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBuZXdPd25lcikgb25seU93bmVyIHsKICAgIG93bmVyID0gbmV3T3duZXI7CiAgfQp9Cgpjb250cmFjdCB0b2tlblJlY2lwaWVudCB7IGZ1bmN0aW9uIHJlY2VpdmVBcHByb3ZhbChhZGRyZXNzIF9mcm9tLCB1aW50MjU2IF92YWx1ZSwgYWRkcmVzcyBfdG9rZW4sIGJ5dGVzIF9leHRyYURhdGEpOyB9Cgpjb250cmFjdCBSVG9rZW5CYXNlIHsKICAvKiBjb250cmFjdCBpbmZvICovCiAgc3RyaW5nIHB1YmxpYyBzdGFuZGFyZCA9ICdUb2tlbiAwLjEnOwogIHN0cmluZyBwdWJsaWMgbmFtZTsKICBzdHJpbmcgcHVibGljIHN5bWJvbDsKICB1aW50OCBwdWJsaWMgZGVjaW1hbHM7CiAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7CgogIC8qIG1haW50YWluIGEgYmFsYW5jZSBtYXBwaW5nIG9mIFIgdG9rZW5zICovCiAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBiYWxhbmNlTWFwOwogIG1hcHBpbmcoYWRkcmVzcyA9PiBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikpIHB1YmxpYyBhbGxvd2FuY2U7CgogIC8qIHdoYXQgdG8gZG8gb24gdHJhbnNmZXJzICovCiAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiB2YWx1ZSk7CgogIC8qIENvbnN0cnVjdG9yICovCiAgZnVuY3Rpb24gUlRva2VuQmFzZSh1aW50MjU2IGluaXRpYWxBbXQsIHN0cmluZyB0b2tlbk5hbWUsIHN0cmluZyB0b2tlblN5bWJvbCwgdWludDggZGVjaW1hbFVuaXRzKSBwYXlhYmxlIHsKICAgIGJhbGFuY2VNYXBbbXNnLnNlbmRlcl0gPSBpbml0aWFsQW10OwogICAgdG90YWxTdXBwbHkgPSBpbml0aWFsQW10OwogICAgbmFtZSA9IHRva2VuTmFtZTsKICAgIHN5bWJvbCA9IHRva2VuU3ltYm9sOwogICAgZGVjaW1hbHMgPSBkZWNpbWFsVW5pdHM7CiAgfQoKICAvKiBzZW5kIHRva2VucyAqLwogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcGF5YWJsZSB7CiAgICBpZigKICAgICAgICAoYmFsYW5jZU1hcFttc2cuc2VuZGVyXSA8IF92YWx1ZSkgfHwKICAgICAgICAoYmFsYW5jZU1hcFtfdG9dICsgX3ZhbHVlIDwgYmFsYW5jZU1hcFtfdG9dKQogICAgICApCiAgICAgIHRocm93OwogICAgYmFsYW5jZU1hcFttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICBiYWxhbmNlTWFwW190b10gKz0gX3ZhbHVlOwogICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogIH0KCiAgLyogYWxsb3cgb3RoZXIgY29udHJhY3RzIHRvIHNwZW5kIHRva2VucyAqLwogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgYWxsb3dhbmNlW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsKICAgIHRva2VuUmVjaXBpZW50IHNwZW5kZXIgPSB0b2tlblJlY2lwaWVudChfc3BlbmRlcik7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIC8qIGFwcHJvdmUgYW5kIG5vdGlmeSAqLwogIGZ1bmN0aW9uIGFwcHJvdmVBbmRDYWxsKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlLCBieXRlcyBfc3R1ZmYpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgdG9rZW5SZWNpcGllbnQgc3BlbmRlciA9IHRva2VuUmVjaXBpZW50KF9zcGVuZGVyKTsKICAgIGlmKGFwcHJvdmUoX3NwZW5kZXIsIF92YWx1ZSkpIHsKICAgICAgc3BlbmRlci5yZWNlaXZlQXBwcm92YWwobXNnLnNlbmRlciwgX3ZhbHVlLCB0aGlzLCBfc3R1ZmYpOwogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICB9CgogIC8qIGRvIGEgdHJhbnNmZXIgKi8KICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwYXlhYmxlIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgaWYoCiAgICAgICAgKGJhbGFuY2VNYXBbX2Zyb21dIDwgX3ZhbHVlKSB8fAogICAgICAgIChiYWxhbmNlTWFwW190b10gKyBfdmFsdWUgPCBiYWxhbmNlTWFwW190b10pIHx8CiAgICAgICAgKF92YWx1ZSA+IGFsbG93YW5jZVtfZnJvbV1bbXNnLnNlbmRlcl0pCiAgICAgICkKICAgICAgdGhyb3c7CiAgICBiYWxhbmNlTWFwW19mcm9tXSAtPSBfdmFsdWU7CiAgICBiYWxhbmNlTWFwW190b10gKz0gX3ZhbHVlOwogICAgYWxsb3dhbmNlW19mcm9tXVttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwogICAgcmV0dXJuIHRydWU7CiAgfQoKICAvKiB0cmFwIGJhZCBzZW5kcyAqLwogIGZ1bmN0aW9uICgpIHsKICAgIHRocm93OwogIH0KfQoKY29udHJhY3QgUlRva2VuTWFpbiBpcyBvd25lZCwgUlRva2VuQmFzZSB7CiAgdWludDI1NiBwdWJsaWMgc2VsbFByaWNlOwogIHVpbnQyNTYgcHVibGljIGJ1eVByaWNlOwogIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5OwoKICBtYXBwaW5nKGFkZHJlc3MgPT4gYm9vbCkgcHVibGljIGZyb3plbkFjY291bnQ7CgogIGV2ZW50IEZyb3plbkZ1bmRzKGFkZHJlc3MgdGFyZ2V0LCBib29sIGZyb3plbik7CgogIGZ1bmN0aW9uIFJUb2tlbk1haW4odWludDI1NiBpbml0aWFsQW10LCBzdHJpbmcgdG9rZW5OYW1lLCBzdHJpbmcgdG9rZW5TeW1ib2wsIHVpbnQ4IGRlY2ltYWxzLCBhZGRyZXNzIGNlbnRyYWxNaW50ZXIpCiAgICBSVG9rZW5CYXNlKGluaXRpYWxBbXQsIHRva2VuTmFtZSwgdG9rZW5TeW1ib2wsIGRlY2ltYWxzKSB7CiAgICAgIGlmKGNlbnRyYWxNaW50ZXIgIT0gMCkKICAgICAgICBvd25lciA9IGNlbnRyYWxNaW50ZXI7CiAgICAgIGJhbGFuY2VNYXBbb3duZXJdID0gaW5pdGlhbEFtdDsKICAgIH0KCiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwYXlhYmxlIHsKICAgIGlmKAogICAgICAgIChiYWxhbmNlTWFwW21zZy5zZW5kZXJdIDwgX3ZhbHVlKSB8fAogICAgICAgIChiYWxhbmNlTWFwW190b10gKyBfdmFsdWUgPCBiYWxhbmNlTWFwW190b10pIHx8CiAgICAgICAgKGZyb3plbkFjY291bnRbbXNnLnNlbmRlcl0pCiAgICAgICkKICAgICAgdGhyb3c7CiAgICBiYWxhbmNlTWFwW21zZy5zZW5kZXJdIC09IF92YWx1ZTsKICAgIGJhbGFuY2VNYXBbX3RvXSArPSBfdmFsdWU7CiAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgfQoKICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwYXlhYmxlIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgaWYoCiAgICAgICAgKGZyb3plbkFjY291bnRbX2Zyb21dKSB8fAogICAgICAgIChiYWxhbmNlTWFwW19mcm9tXSA8IF92YWx1ZSkgfHwKICAgICAgICAoYmFsYW5jZU1hcFtfdG9dICsgX3ZhbHVlIDwgYmFsYW5jZU1hcFtfdG9dKSB8fAogICAgICAgIChfdmFsdWUgPiBhbGxvd2FuY2VbX2Zyb21dW21zZy5zZW5kZXJdKQogICAgICApCiAgICAgIHRocm93OwogICAgYmFsYW5jZU1hcFtfZnJvbV0gLT0gX3ZhbHVlOwogICAgYmFsYW5jZU1hcFtfdG9dICs9IF92YWx1ZTsKICAgIGFsbG93YW5jZVtfZnJvbV1bbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOwogICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgZnVuY3Rpb24gbWludFRva2VuKGFkZHJlc3MgdGFyZ2V0LCB1aW50MjU2IG1pbnRlZEFtb3VudCkgb25seU93bmVyIHsKICAgIGJhbGFuY2VNYXBbdGFyZ2V0XSArPSBtaW50ZWRBbW91bnQ7CiAgICB0b3RhbFN1cHBseSArPSBtaW50ZWRBbW91bnQ7CiAgICBUcmFuc2ZlcigwLCB0aGlzLCBtaW50ZWRBbW91bnQpOwogICAgVHJhbnNmZXIodGhpcywgdGFyZ2V0LCBtaW50ZWRBbW91bnQpOwogIH0KCiAgZnVuY3Rpb24gZnJlZXplQWNjb3VudChhZGRyZXNzIHRhcmdldCwgYm9vbCBmcmVlemUpIG9ubHlPd25lciB7CiAgICBmcm96ZW5BY2NvdW50W3RhcmdldF0gPSBmcmVlemU7CiAgICBGcm96ZW5GdW5kcyh0YXJnZXQsIGZyZWV6ZSk7CiAgfQoKICBmdW5jdGlvbiBzZXRQcmljZXModWludDI1NiBuZXdTZWxsUHJpY2UsIHVpbnQyNTYgbmV3QnV5UHJpY2UpIG9ubHlPd25lciB7CiAgICBzZWxsUHJpY2UgPSBuZXdTZWxsUHJpY2U7CiAgICBidXlQcmljZSA9IG5ld0J1eVByaWNlOwogIH0KCiAgZnVuY3Rpb24gYnV5KCkgcGF5YWJsZSB7CiAgICB1aW50IGFtb3VudCA9IG1zZy52YWx1ZS9idXlQcmljZTsKICAgIGlmKGJhbGFuY2VNYXBbdGhpc10gPCBhbW91bnQpCiAgICAgIHRocm93OwogICAgYmFsYW5jZU1hcFttc2cuc2VuZGVyXSArPSBhbW91bnQ7CiAgICBiYWxhbmNlTWFwW3RoaXNdIC09IGFtb3VudDsKICAgIFRyYW5zZmVyKHRoaXMsIG1zZy5zZW5kZXIsIGFtb3VudCk7CiAgfQoKICBmdW5jdGlvbiBzZWxsKHVpbnQyNTYgYW1vdW50KSB7CiAgICBpZihiYWxhbmNlTWFwW21zZy5zZW5kZXJdIDwgYW1vdW50KQogICAgICB0aHJvdzsKICAgIGJhbGFuY2VNYXBbbXNnLnNlbmRlcl0gLT0gYW1vdW50OwogICAgYmFsYW5jZU1hcFt0aGlzXSArPSBhbW91bnQ7CiAgICBpZighbXNnLnNlbmRlci5zZW5kKGFtb3VudCpzZWxsUHJpY2UpKQogICAgICB0aHJvdzsKICAgIGVsc2UKICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgdGhpcywgYW1vdW50KTsKICB9Cn0='.
	

]
