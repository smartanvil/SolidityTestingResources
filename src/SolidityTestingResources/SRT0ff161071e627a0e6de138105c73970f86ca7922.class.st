Class {
	#name : #SRT0ff161071e627a0e6de138105c73970f86ca7922,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT0ff161071e627a0e6de138105c73970f86ca7922 >> base64 [
	^ ''.
	

]
