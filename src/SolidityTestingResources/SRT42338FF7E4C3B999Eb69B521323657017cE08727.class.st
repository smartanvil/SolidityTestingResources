Class {
	#name : #SRT42338FF7E4C3B999Eb69B521323657017cE08727,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT42338FF7E4C3B999Eb69B521323657017cE08727 >> base64 [
	^ ''.
	

]
