Class {
	#name : #SRT4ce6b8c58df45b2d3976737ffb98d942f82300b4,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT4ce6b8c58df45b2d3976737ffb98d942f82300b4 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTU7CgpsaWJyYXJ5IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAKICAgIHVpbnQyNTYgYyA9IGEgLyBiOwogICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KfQoKY29udHJhY3QgQmFzZSB7CiAgICBtb2RpZmllciBvbmx5KGFkZHJlc3MgYWxsb3dlZCkgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBhbGxvd2VkKTsKICAgICAgICBfOwogICAgfQoKICAgIC8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKICAgIC8vICogICAgICAgICAgcmVlbnRyYW5jeSBoYW5kbGluZyAgICAgICAgICAgICAgICAgICoKICAgIC8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKCiAgICB1aW50IGNvbnN0YW50IGludGVybmFsIEwwMCA9IDIgKiogMDsKICAgIHVpbnQgY29uc3RhbnQgaW50ZXJuYWwgTDAxID0gMiAqKiAxOwogICAgdWludCBjb25zdGFudCBpbnRlcm5hbCBMMDIgPSAyICoqIDI7CiAgICB1aW50IGNvbnN0YW50IGludGVybmFsIEwwMyA9IDIgKiogMzsKICAgIHVpbnQgY29uc3RhbnQgaW50ZXJuYWwgTDA0ID0gMiAqKiA0OwogICAgdWludCBjb25zdGFudCBpbnRlcm5hbCBMMDUgPSAyICoqIDU7CgogICAgdWludCBwcml2YXRlIGJpdGxvY2tzID0gMDsKCiAgICBtb2RpZmllciBub0FueVJlZW50cmFuY3kgewogICAgICAgIHZhciBfbG9ja3MgPSBiaXRsb2NrczsKICAgICAgICByZXF1aXJlKF9sb2NrcyA9PSAwKTsKICAgICAgICBiaXRsb2NrcyA9IHVpbnQoLTEpOwogICAgICAgIF87CiAgICAgICAgYml0bG9ja3MgPSBfbG9ja3M7CiAgICB9Cgp9Cgpjb250cmFjdCBPd25lZCBpcyBCYXNlIHsKCiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKICAgIGFkZHJlc3MgbmV3T3duZXI7CgogICAgZnVuY3Rpb24gT3duZWQoKSB7CiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgX25ld093bmVyKSBvbmx5KG93bmVyKSB7CiAgICAgICAgbmV3T3duZXIgPSBfbmV3T3duZXI7CiAgICB9CgogICAgZnVuY3Rpb24gYWNjZXB0T3duZXJzaGlwKCkgb25seShuZXdPd25lcikgewogICAgICAgIE93bmVyc2hpcFRyYW5zZmVycmVkKG93bmVyLCBuZXdPd25lcik7CiAgICAgICAgb3duZXIgPSBuZXdPd25lcjsKICAgIH0KCiAgICBldmVudCBPd25lcnNoaXBUcmFuc2ZlcnJlZChhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8pOwoKfQoKY29udHJhY3QgRVJDMjAgaXMgT3duZWQgewoKICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludCBfdmFsdWUpOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50IF92YWx1ZSk7CgogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQgX3ZhbHVlKSBpc1N0YXJ0ZWRPbmx5IHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGlmIChiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfdmFsdWUgJiYgYmFsYW5jZXNbX3RvXSArIF92YWx1ZSA+IGJhbGFuY2VzW190b10pIHsKICAgICAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOwogICAgICAgICAgICBiYWxhbmNlc1tfdG9dICs9IF92YWx1ZTsKICAgICAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9IGVsc2UgeyByZXR1cm4gZmFsc2U7IH0KICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQgX3ZhbHVlKSBpc1N0YXJ0ZWRPbmx5IHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGlmIChiYWxhbmNlc1tfZnJvbV0gPj0gX3ZhbHVlICYmIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID49IF92YWx1ZSAmJiBiYWxhbmNlc1tfdG9dICsgX3ZhbHVlID4gYmFsYW5jZXNbX3RvXSkgewogICAgICAgICAgICBiYWxhbmNlc1tfdG9dICs9IF92YWx1ZTsKICAgICAgICAgICAgYmFsYW5jZXNbX2Zyb21dIC09IF92YWx1ZTsKICAgICAgICAgICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOwogICAgICAgICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9IGVsc2UgeyByZXR1cm4gZmFsc2U7IH0KICAgIH0KCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQgYmFsYW5jZSkgewogICAgICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogICAgfQoKICAgIGZ1bmN0aW9uIGFwcHJvdmVfZml4ZWQoYWRkcmVzcyBfc3BlbmRlciwgdWludCBfY3VycmVudFZhbHVlLCB1aW50IF92YWx1ZSkgaXNTdGFydGVkT25seSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBpZihhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9PSBfY3VycmVudFZhbHVlKXsKICAgICAgICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CiAgICAgICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludCBfdmFsdWUpIGlzU3RhcnRlZE9ubHkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBjb25zdGFudCByZXR1cm5zICh1aW50IHJlbWFpbmluZykgewogICAgICAgIHJldHVybiBhbGxvd2VkW19vd25lcl1bX3NwZW5kZXJdOwogICAgfQoKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludCkgYmFsYW5jZXM7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludCkpIGFsbG93ZWQ7CgogICAgdWludCBwdWJsaWMgdG90YWxTdXBwbHk7CiAgICBib29sICAgIHB1YmxpYyBpc1N0YXJ0ZWQgPSBmYWxzZTsKCiAgICBtb2RpZmllciBpc1N0YXJ0ZWRPbmx5KCkgewogICAgICAgIHJlcXVpcmUoaXNTdGFydGVkKTsKICAgICAgICBfOwogICAgfQoKfQoKY29udHJhY3QgVG9rZW4gaXMgRVJDMjAgewogICAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQ7CgogICAgc3RyaW5nIHB1YmxpYyBuYW1lID0gIkNyb3dkV2l6VG9rZW4iOwogICAgc3RyaW5nIHB1YmxpYyBzeW1ib2wgPSAiV0laIjsKICAgIHVpbnQ4IHB1YmxpYyBkZWNpbWFscyA9IDE4OwoKICAgIGFkZHJlc3MgcHVibGljIGNyb3dkc2FsZU1pbnRlcjsKCiAgICBtb2RpZmllciBvbmx5Q3Jvd2RzYWxlTWludGVyKCl7CiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyID09IGNyb3dkc2FsZU1pbnRlcik7CiAgICAgICAgXzsKICAgIH0KCiAgICBtb2RpZmllciBpc05vdFN0YXJ0ZWRPbmx5KCkgewogICAgICAgIHJlcXVpcmUoIWlzU3RhcnRlZCk7CiAgICAgICAgXzsKICAgIH0KCiAgICBmdW5jdGlvbiBUb2tlbigpewogICAgICAgIGNyb3dkc2FsZU1pbnRlciA9IDB4NDU0NGU1NzQ3MGY3MjExYTY1YzA1MGMyNTk5MjJjODllMGI0MTI0MDsKICAgIH0KCiAgICBmdW5jdGlvbiBnZXRUb3RhbFN1cHBseSgpCiAgICBwdWJsaWMKICAgIGNvbnN0YW50CiAgICByZXR1cm5zKHVpbnQpCiAgICB7CiAgICAgICAgcmV0dXJuIHRvdGFsU3VwcGx5OwogICAgfQoKICAgIGZ1bmN0aW9uIHN0YXJ0KCkKICAgIHB1YmxpYwogICAgb25seUNyb3dkc2FsZU1pbnRlcgogICAgaXNOb3RTdGFydGVkT25seQogICAgewogICAgICAgIGlzU3RhcnRlZCA9IHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gZW1lcmdlbmN5U3RvcCgpCiAgICBwdWJsaWMKICAgIG9ubHkob3duZXIpCiAgICB7CiAgICAgICAgaXNTdGFydGVkID0gZmFsc2U7CiAgICB9CgogICAgLy89PT09PT09PT09PT09PT09PSBDcm93ZHNhbGUgT25seSA9PT09PT09PT09PT09PT09PQogICAgZnVuY3Rpb24gbWludChhZGRyZXNzIF90bywgdWludCBfYW1vdW50KSBwdWJsaWMKICAgIG9ubHlDcm93ZHNhbGVNaW50ZXIKICAgIGlzTm90U3RhcnRlZE9ubHkKICAgIHJldHVybnMoYm9vbCkKICAgIHsKICAgICAgICB0b3RhbFN1cHBseSA9IHRvdGFsU3VwcGx5LmFkZChfYW1vdW50KTsKICAgICAgICBiYWxhbmNlc1tfdG9dID0gYmFsYW5jZXNbX3RvXS5hZGQoX2Ftb3VudCk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9Cn0='.
	

]
