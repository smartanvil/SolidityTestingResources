Class {
	#name : #SRT741fC999F5B62c80831cF659AED04c64AC8eF24e,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT741fC999F5B62c80831cF659AED04c64AC8eF24e >> base64 [
	^ 'LyoqCiAqICBDcm93ZHNhbGUgZm9yIE1vbmV0aGEgVG9rZW5zLgogKiAgUmFpc2VkIEV0aGVyIHdpbGwgYmUgc3RvcmVkIHNhZmVseSBhdCB0aGUgd2FsbGV0IGFuZCByZXR1cm5lZCB0byB0aGUgSUNPIGluIGNhc2UgdGhlIGZ1bmRpbmcgZ29hbCBpcyBub3QgcmVhY2hlZCwKICogIGFsbG93aW5nIHRoZSBpbnZlc3RvcnMgdG8gd2l0aGRyYXcgdGhlaXIgZnVuZHMuCiAqICBBdXRob3I6IEp1bGlhIEFsdGVucmllZAogKiAgSW50ZXJuYWwgYXVkaXQ6IEFsZXggQmF6aGFuYXUsIEFuZHJlaiBSdWNraWoKICogIEF1ZGl0OiBCbG9ja2NoYWluICYgU21hcnQgQ29udHJhY3QgU2VjdXJpdHkgR3JvdXAKICoqLwoKcHJhZ21hIHNvbGlkaXR5IF4wLjQuMTU7Cgpjb250cmFjdCB0b2tlbiB7CglmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBzZW5kZXIsIGFkZHJlc3MgcmVjZWl2ZXIsIHVpbnQgYW1vdW50KSByZXR1cm5zKGJvb2wgc3VjY2Vzcykge30KCglmdW5jdGlvbiBidXJuKCkge30KCQoJZnVuY3Rpb24gc2V0U3RhcnQodWludCBuZXdTdGFydCkge30KfQoKY29udHJhY3QgU2FmZU1hdGggewoJLy9pbnRlcm5hbHMKCglmdW5jdGlvbiBzYWZlTXVsKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zKHVpbnQpIHsKCQl1aW50IGMgPSBhICogYjsKCQlhc3NlcnQoYSA9PSAwIHx8IGMgLyBhID09IGIpOwoJCXJldHVybiBjOwoJfQoKCWZ1bmN0aW9uIHNhZmVTdWIodWludCBhLCB1aW50IGIpIGludGVybmFsIHJldHVybnModWludCkgewoJCWFzc2VydChiIDw9IGEpOwoJCXJldHVybiBhIC0gYjsKCX0KCglmdW5jdGlvbiBzYWZlQWRkKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zKHVpbnQpIHsKCQl1aW50IGMgPSBhICsgYjsKCQlhc3NlcnQoYyA+PSBhICYmIGMgPj0gYik7CgkJcmV0dXJuIGM7Cgl9Cgp9CgoKY29udHJhY3QgQ3Jvd2RzYWxlIGlzIFNhZmVNYXRoIHsKCS8qIHRva2VucyB3aWxsIGJlIHRyYW5zZmVyZWQgZnJvbSB0aGlzIGFkZHJlc3MgKi8KCWFkZHJlc3MgcHVibGljIHRva2VuT3duZXI7CgkvKiBpZiB0aGUgZnVuZGluZyBnb2FsIGlzIG5vdCByZWFjaGVkLCBpbnZlc3RvcnMgbWF5IHdpdGhkcmF3IHRoZWlyIGZ1bmRzICovCgl1aW50IGNvbnN0YW50IHB1YmxpYyBmdW5kaW5nR29hbCA9IDY3MjAwMDAwMDAwMDsKCS8qIHdoZW4gdGhlIHNvZnQgY2FwIGlzIHJlYWNoZWQsIHRoZSBwcmljZSBmb3IgbW9uZXRoYSB0b2tlbnMgd2lsbCByaXNlICovCgl1aW50IGNvbnN0YW50IHB1YmxpYyBzb2Z0Q2FwID0gNjcyMDAwMDAwMDAwMDsKCS8qIHRoZSBtYXhpbXVtIGFtb3VudCBvZiB0b2tlbnMgdG8gYmUgc29sZCAqLwoJdWludCBjb25zdGFudCBwdWJsaWMgbWF4R29hbCA9IDIwMTIwMDAwMDAwMDAwOwoJLyogaG93IG11Y2ggaGFzIGJlZW4gcmFpc2VkIGJ5IGNyb3dkYWxlIChpbiBFVEgpICovCgl1aW50IHB1YmxpYyBhbW91bnRSYWlzZWQ7CgkvKiB0aGUgc3RhcnQgZGF0ZSBvZiB0aGUgY3Jvd2RzYWxlICovCgl1aW50IHB1YmxpYyBzdGFydDsKCS8qIHRoZSBlbmQgZGF0ZSBvZiB0aGUgY3Jvd2RzYWxlKi8KCXVpbnQgcHVibGljIGVuZDsKCS8qIHRpbWUgYWZ0ZXIgcmVhY2hpbmcgdGhlIHNvZnQgY2FwLCB3aGlsZSB0aGUgY3Jvd2RzYWxlIHdpbGwgYmUgc3RpbGwgYXZhaWxhYmxlKi8KCXVpbnQgcHVibGljIHRpbWVBZnRlclNvZnRDYXA7CgkvKiB0aGUgbnVtYmVyIG9mIHRva2VucyBhbHJlYWR5IHNvbGQgKi8KCXVpbnQgcHVibGljIHRva2Vuc1NvbGQgPSAwOwoJLyogdGhlIHJhdGVzIGJlZm9yZSBhbmQgYWZ0ZXIgdGhlIHNvZnQgY2FwIGlzIHJlYWNoZWQgKi8KCXVpbnQgY29uc3RhbnQgcHVibGljIHJhdGVTb2Z0ID0gMjQ7Cgl1aW50IGNvbnN0YW50IHB1YmxpYyByYXRlSGFyZCA9IDIwOwoKCXVpbnQgY29uc3RhbnQgcHVibGljIHJhdGVDb2VmZmljaWVudCA9IDEwMDAwMDAwMDAwMDsKCS8qIHRoZSBhZGRyZXNzIG9mIHRoZSB0b2tlbiBjb250cmFjdCAqLwoJdG9rZW4gcHVibGljIHRva2VuUmV3YXJkOwoJLyogdGhlIGJhbGFuY2VzIChpbiBFVEgpIG9mIGFsbCBpbnZlc3RvcnMgKi8KCW1hcHBpbmcoYWRkcmVzcyA9PiB1aW50KSBwdWJsaWMgYmFsYW5jZU9mOwoJLyogaW5kaWNhdGVzIGlmIHRoZSBjcm93ZHNhbGUgaGFzIGJlZW4gY2xvc2VkIGFscmVhZHkgKi8KCWJvb2wgcHVibGljIGNyb3dkc2FsZUNsb3NlZCA9IGZhbHNlOwoJLyogdGhlIHdhbGxldCBvbiB3aGljaCB0aGUgZnVuZHMgd2lsbCBiZSBzdG9yZWQgKi8KCWFkZHJlc3MgbXNXYWxsZXQ7CgkvKiBub3RpZnlpbmcgdHJhbnNmZXJzIGFuZCB0aGUgc3VjY2VzcyBvZiB0aGUgY3Jvd2RzYWxlKi8KCWV2ZW50IEdvYWxSZWFjaGVkKGFkZHJlc3MgX3Rva2VuT3duZXIsIHVpbnQgX2Ftb3VudFJhaXNlZCk7CglldmVudCBGdW5kVHJhbnNmZXIoYWRkcmVzcyBiYWNrZXIsIHVpbnQgYW1vdW50LCBib29sIGlzQ29udHJpYnV0aW9uLCB1aW50IF9hbW91bnRSYWlzZWQpOwoKCgoJLyogIGluaXRpYWxpemF0aW9uLCBzZXQgdGhlIHRva2VuIGFkZHJlc3MgKi8KCWZ1bmN0aW9uIENyb3dkc2FsZSgKCQlhZGRyZXNzIF90b2tlbkFkZHIsIAoJCWFkZHJlc3MgX3dhbGxldEFkZHIsIAoJCWFkZHJlc3MgX3Rva2VuT3duZXIsIAoJCXVpbnQgX3N0YXJ0LCAKCQl1aW50IF9lbmQsCgkJdWludCBfdGltZUFmdGVyU29mdENhcCkgewoJCXRva2VuUmV3YXJkID0gdG9rZW4oX3Rva2VuQWRkcik7CgkJbXNXYWxsZXQgPSBfd2FsbGV0QWRkcjsKCQl0b2tlbk93bmVyID0gX3Rva2VuT3duZXI7CgoJCXJlcXVpcmUoX3N0YXJ0IDwgX2VuZCk7CgkJc3RhcnQgPSBfc3RhcnQ7CgkJZW5kID0gX2VuZDsKCQl0aW1lQWZ0ZXJTb2Z0Q2FwID0gX3RpbWVBZnRlclNvZnRDYXA7Cgl9CgoJLyogaW52ZXN0IGJ5IHNlbmRpbmcgZXRoZXIgdG8gdGhlIGNvbnRyYWN0LiAqLwoJZnVuY3Rpb24oKSBwYXlhYmxlIHsKCQlpZiAobXNnLnNlbmRlciAhPSBtc1dhbGxldCkgLy9kbyBub3QgdHJpZ2dlciBpbnZlc3RtZW50IGlmIHRoZSB3YWxsZXQgaXMgcmV0dXJuaW5nIHRoZSBmdW5kcwoJCQlpbnZlc3QobXNnLnNlbmRlcik7Cgl9CgoJLyogbWFrZSBhbiBpbnZlc3RtZW50CgkgKiAgb25seSBjYWxsYWJsZSBpZiB0aGUgY3Jvd2RzYWxlIHN0YXJ0ZWQgYW5kIGhhc24ndCBiZWVuIGNsb3NlZCBhbHJlYWR5IGFuZCB0aGUgbWF4R29hbCB3YXNuJ3QgcmVhY2hlZCB5ZXQuCgkgKiAgdGhlIGN1cnJlbnQgdG9rZW4gcHJpY2UgaXMgbG9va2VkIHVwIGFuZCB0aGUgY29ycmVzcG9uZGluZyBudW1iZXIgb2YgdG9rZW5zIGlzIHRyYW5zZmVyZWQgdG8gdGhlIHJlY2VpdmVyLgoJICogIHRoZSBzZW50IHZhbHVlIGlzIGRpcmVjdGx5IGZvcndhcmRlZCB0byBhIHNhZmUgd2FsbGV0LgoJICogIHRoaXMgbWV0aG9kIGFsbG93cyB0byBwdXJjaGFzZSB0b2tlbnMgaW4gYmVoYWxmIG9mIGFub3RoZXIgYWRkcmVzcy4qLwoJZnVuY3Rpb24gaW52ZXN0KGFkZHJlc3MgX3JlY2VpdmVyKSBwYXlhYmxlIHsKCQl1aW50IGFtb3VudCA9IG1zZy52YWx1ZTsKCQl2YXIgKG51bVRva2VucywgcmVhY2hlZFNvZnRDYXApID0gZ2V0TnVtVG9rZW5zKGFtb3VudCk7CgkJcmVxdWlyZShudW1Ub2tlbnM+MCk7CgkJcmVxdWlyZSghY3Jvd2RzYWxlQ2xvc2VkICYmIG5vdyA+PSBzdGFydCAmJiBub3cgPD0gZW5kICYmIHNhZmVBZGQodG9rZW5zU29sZCwgbnVtVG9rZW5zKSA8PSBtYXhHb2FsKTsKCQltc1dhbGxldC50cmFuc2ZlcihhbW91bnQpOwoJCWJhbGFuY2VPZltfcmVjZWl2ZXJdID0gc2FmZUFkZChiYWxhbmNlT2ZbX3JlY2VpdmVyXSwgYW1vdW50KTsKCQlhbW91bnRSYWlzZWQgPSBzYWZlQWRkKGFtb3VudFJhaXNlZCwgYW1vdW50KTsKCQl0b2tlbnNTb2xkICs9IG51bVRva2VuczsKCQlhc3NlcnQodG9rZW5SZXdhcmQudHJhbnNmZXJGcm9tKHRva2VuT3duZXIsIF9yZWNlaXZlciwgbnVtVG9rZW5zKSk7CgkJRnVuZFRyYW5zZmVyKF9yZWNlaXZlciwgYW1vdW50LCB0cnVlLCBhbW91bnRSYWlzZWQpOwoJCWlmIChyZWFjaGVkU29mdENhcCkgewoJCQl1aW50IG5ld0VuZCA9IG5vdyArIHRpbWVBZnRlclNvZnRDYXA7CgkJCWlmIChuZXdFbmQgPCBlbmQpIHsKCQkJCWVuZCA9IG5ld0VuZDsKCQkJCXRva2VuUmV3YXJkLnNldFN0YXJ0KG5ld0VuZCk7CgkJCX0gCgkJfQoJfQoJCglmdW5jdGlvbiBnZXROdW1Ub2tlbnModWludCBfdmFsdWUpIGNvbnN0YW50IHJldHVybnModWludCBudW1Ub2tlbnMsIGJvb2wgcmVhY2hlZFNvZnRDYXApIHsKCQlpZiAodG9rZW5zU29sZCA8IHNvZnRDYXApIHsKCQkJbnVtVG9rZW5zID0gc2FmZU11bChfdmFsdWUscmF0ZVNvZnQpL3JhdGVDb2VmZmljaWVudDsKCQkJaWYgKHNhZmVBZGQodG9rZW5zU29sZCxudW1Ub2tlbnMpIDwgc29mdENhcCkgCgkJCQlyZXR1cm4gKG51bVRva2VucywgZmFsc2UpOwoJCQllbHNlIGlmIChzYWZlQWRkKHRva2Vuc1NvbGQsbnVtVG9rZW5zKSA9PSBzb2Z0Q2FwKSAKCQkJCXJldHVybiAobnVtVG9rZW5zLCB0cnVlKTsKCQkJZWxzZSB7CgkJCQludW1Ub2tlbnMgPSBzYWZlU3ViKHNvZnRDYXAsIHRva2Vuc1NvbGQpOwoJCQkJdWludCBtaXNzaW5nID0gc2FmZVN1YihfdmFsdWUsIHNhZmVNdWwobnVtVG9rZW5zLHJhdGVDb2VmZmljaWVudCkvcmF0ZVNvZnQpOwoJCQkJcmV0dXJuIChzYWZlQWRkKG51bVRva2Vucywgc2FmZU11bChtaXNzaW5nLHJhdGVIYXJkKS9yYXRlQ29lZmZpY2llbnQpLCB0cnVlKTsKCQkJfQoJCX0gCgkJZWxzZSAKCQkJcmV0dXJuIChzYWZlTXVsKF92YWx1ZSxyYXRlSGFyZCkvcmF0ZUNvZWZmaWNpZW50LCBmYWxzZSk7Cgl9CgoJbW9kaWZpZXIgYWZ0ZXJEZWFkbGluZSgpIHsKCQlpZiAobm93ID4gZW5kKSAKCQkJXzsKCX0KCgkvKiBjaGVja3MgaWYgdGhlIGdvYWwgb3IgdGltZSBsaW1pdCBoYXMgYmVlbiByZWFjaGVkIGFuZCBlbmRzIHRoZSBjYW1wYWlnbiAqLwoJZnVuY3Rpb24gY2hlY2tHb2FsUmVhY2hlZCgpIGFmdGVyRGVhZGxpbmUgewoJCXJlcXVpcmUobXNnLnNlbmRlciA9PSB0b2tlbk93bmVyKTsKCgkJaWYgKHRva2Vuc1NvbGQgPj0gZnVuZGluZ0dvYWwpIHsKCQkJdG9rZW5SZXdhcmQuYnVybigpOyAvL2J1cm4gcmVtYWluaW5nIHRva2VucyBidXQgdGhlIHJlc2VydmVkIG9uZXMKCQkJR29hbFJlYWNoZWQodG9rZW5Pd25lciwgYW1vdW50UmFpc2VkKTsKCQl9CgkJY3Jvd2RzYWxlQ2xvc2VkID0gdHJ1ZTsKCX0KCgkvKiBhbGxvd3MgdGhlIGZ1bmRlcnMgdG8gd2l0aGRyYXcgdGhlaXIgZnVuZHMgaWYgdGhlIGdvYWwgaGFzIG5vdCBiZWVuIHJlYWNoZWQuCgkgKiAgb25seSB3b3JrcyBhZnRlciBmdW5kcyBoYXZlIGJlZW4gcmV0dXJuZWQgZnJvbSB0aGUgd2FsbGV0LiAqLwoJZnVuY3Rpb24gc2FmZVdpdGhkcmF3YWwoKSBhZnRlckRlYWRsaW5lIHsKCQl1aW50IGFtb3VudCA9IGJhbGFuY2VPZlttc2cuc2VuZGVyXTsKCQlpZiAoYWRkcmVzcyh0aGlzKS5iYWxhbmNlID49IGFtb3VudCkgewoJCQliYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPSAwOwoJCQlpZiAoYW1vdW50ID4gMCkgewoJCQkJbXNnLnNlbmRlci50cmFuc2ZlcihhbW91bnQpOwoJCQkJRnVuZFRyYW5zZmVyKG1zZy5zZW5kZXIsIGFtb3VudCwgZmFsc2UsIGFtb3VudFJhaXNlZCk7CgkJCX0KCQl9Cgl9Cgp9'.
	

]
