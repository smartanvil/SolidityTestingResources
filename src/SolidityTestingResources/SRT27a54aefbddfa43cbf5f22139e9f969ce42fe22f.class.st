Class {
	#name : #SRT27a54aefbddfa43cbf5f22139e9f969ce42fe22f,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT27a54aefbddfa43cbf5f22139e9f969ce42fe22f >> base64 [
	^ 'Ly9HbGFkaWF0ZQoKcHJhZ21hIHNvbGlkaXR5IF4wLjQuMjE7CgpsaWJyYXJ5IGdsYWRpYXRlIHsKICAgIGVudW0gV2VhcG9uIHtOb25lLCBLbmlmZSwgU3dvcmQsIFNwZWFyfQogICAgZW51bSBHbGFkaWF0b3JTdGF0ZSB7TnVsbCwgSW5jb21pbmcsIEFjdGl2ZSwgT3V0Z29pbmd9CiAgICAKICAgIHN0cnVjdCBHbGFkaWF0b3IgewogICAgICAgIEdsYWRpYXRvclN0YXRlIHN0YXRlOwogICAgICAgIHVpbnQgc3RhdGVUcmFuc2l0aW9uQmxvY2s7CiAgICAgICAgdWludDggeDsKICAgICAgICB1aW50OCB5OwogICAgICAgIFdlYXBvbiB3ZWFwb247CiAgICAgICAgdWludDggY29pbnM7CiAgICB9Cn0KCmNvbnRyYWN0IEFyZW5hIHsKICAgIHVpbnQ4IHBzZXVkb1JhbmRvbU5vbmNlOwogICAgZnVuY3Rpb24gcHNldWRvUmFuZG9tVWludDgodWludDggbGltaXQpCiAgICBpbnRlcm5hbAogICAgcmV0dXJucyAodWludDgpIHsKICAgICAgICByZXR1cm4gdWludDgoa2VjY2FrMjU2KGJsb2NrLmJsb2NraGFzaChibG9jay5udW1iZXItMSksIHBzZXVkb1JhbmRvbU5vbmNlKSkgJSBsaW1pdDsKICAgICAgICBwc2V1ZG9SYW5kb21Ob25jZSsrOwogICAgfQogICAgCiAgICB1aW50IGNvbnN0YW50IHB1YmxpYyBjb2luVmFsdWUgPSA1MDAwMDAwMDAwMDAwMDAwMDsgLy8gMC4wNSBFVEgKICAgIAogICAgdWludCBjb25zdGFudCBzcGF3blRpbWUgPSAzOwogICAgdWludCBjb25zdGFudCBkZXNwYXduVGltZSA9IDI7CiAgICAKICAgIGFkZHJlc3MgcHVibGljIGVtcGVyb3I7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IGdsYWRpYXRlLkdsYWRpYXRvcikgcHVibGljIGdsYWRpYXRvcnM7CiAgICAKICAgIHN0cnVjdCBUaWxlIHsKICAgICAgICB1aW50IGNvaW5zOwogICAgICAgIGdsYWRpYXRlLldlYXBvbiB3ZWFwb247CiAgICAgICAgYWRkcmVzcyBnbGFkaWF0b3I7CiAgICB9CiAgICAKICAgIFRpbGVbMTBdWzEwXSB0aWxlczsKICAgIAogICAgZnVuY3Rpb24gQXJlbmEoKQogICAgcHVibGljIHsKICAgICAgICBlbXBlcm9yID0gbXNnLnNlbmRlcjsKICAgIH0KICAgIAogICAgbW9kaWZpZXIgb25seUVtcG9yZXIoKSAKICAgICAgICB7cmVxdWlyZShtc2cuc2VuZGVyID09IGVtcGVyb3IpOyBfO30KICAgIG1vZGlmaWVyIGdsYWRpYXRvckV4aXN0cyhhZGRyZXNzIG93bmVyKSAKICAgICAgICB7cmVxdWlyZShnbGFkaWF0b3JzW293bmVyXS5zdGF0ZSAhPSBnbGFkaWF0ZS5HbGFkaWF0b3JTdGF0ZS5OdWxsKTsgXzt9CiAgICBtb2RpZmllciBnbGFkaWF0b3JJblN0YXRlKGFkZHJlc3Mgb3duZXIsIGdsYWRpYXRlLkdsYWRpYXRvclN0YXRlIHMpIAogICAgICAgIHtyZXF1aXJlKGdsYWRpYXRvcnNbb3duZXJdLnN0YXRlID09IHMpOyBfO30KICAgIAogICAgZnVuY3Rpb24gc3RhcnRHbGFkaWF0b3JXaXRoQ29pbih1aW50OCB4LCB1aW50OCB5LCBhZGRyZXNzIG93bmVyKQogICAgaW50ZXJuYWwgewogICAgICAgIGdsYWRpYXRvcnNbb3duZXJdLnN0YXRlID0gZ2xhZGlhdGUuR2xhZGlhdG9yU3RhdGUuSW5jb21pbmc7CiAgICAgICAgZ2xhZGlhdG9yc1tvd25lcl0uc3RhdGVUcmFuc2l0aW9uQmxvY2sgPSBibG9jay5udW1iZXIgKyBzcGF3blRpbWU7CiAgICAgICAgZ2xhZGlhdG9yc1tvd25lcl0ueCA9IHg7CiAgICAgICAgZ2xhZGlhdG9yc1tvd25lcl0ueSA9IHk7CiAgICAgICAgZ2xhZGlhdG9yc1tvd25lcl0uY29pbnMgPSAxOwogICAgICAgIAogICAgICAgIHRpbGVzW3hdW3ldLmdsYWRpYXRvciA9IG93bmVyOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBkZXNwYXduR2xhZGlhdG9yQW5kQXdhcmRDb2lucyhhZGRyZXNzIG93bmVyKQogICAgaW50ZXJuYWwgewogICAgICAgIG93bmVyLnRyYW5zZmVyKGdsYWRpYXRvcnNbb3duZXJdLmNvaW5zICogY29pblZhbHVlKTsKICAgICAgICAKICAgICAgICBnbGFkaWF0b3JzW293bmVyXS5zdGF0ZSA9IGdsYWRpYXRlLkdsYWRpYXRvclN0YXRlLk51bGw7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGFkZENvaW5zKHVpbnQ4IHgsIHVpbnQ4IHksIHVpbnQgYW1vdW50KQogICAgaW50ZXJuYWwgewogICAgICAgIHRpbGVzW3hdW3ldLmNvaW5zICs9IGFtb3VudDsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gdGhyb3dJbigpCiAgICBleHRlcm5hbAogICAgcGF5YWJsZSAKICAgIHJldHVybnMgKGJvb2wpIHsKICAgICAgICByZXF1aXJlKGdsYWRpYXRvcnNbbXNnLnNlbmRlcl0uc3RhdGUgPT0gZ2xhZGlhdGUuR2xhZGlhdG9yU3RhdGUuTnVsbCk7CiAgICAgICAgcmVxdWlyZShtc2cudmFsdWUgPT0gY29pblZhbHVlKTsKICAgICAgICAKICAgICAgICB1aW50OCBsYXN0WDsKICAgICAgICB1aW50OCBsYXN0WTsKICAgICAgICBmb3IgKHVpbnQ4IGk9MDsgaTwzOyBpKyspIHsKICAgICAgICAgICAgdWludDggeCA9IHBzZXVkb1JhbmRvbVVpbnQ4KDEwKTsKICAgICAgICAgICAgdWludDggeSA9IHBzZXVkb1JhbmRvbVVpbnQ4KDEwKTsKICAgICAgICAgICAgbGFzdFggPSB4OwogICAgICAgICAgICBsYXN0WSA9IHk7CiAgICAgICAgICAgIAogICAgICAgICAgICBpZiAodGlsZXNbeF1beV0uZ2xhZGlhdG9yID09IDB4MCkgewogICAgICAgICAgICAgICAgc3RhcnRHbGFkaWF0b3JXaXRoQ29pbih4LCB5LCBtc2cuc2VuZGVyKTsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIC8vQ291bGRuJ3QgZmluZCBhIHBsYWNlIGZvciB0aGUgZ2xhZGlhdG9yLiBMZXQncyB0YWtlIHRoZSBtb25leSBhbnl3YXkgYW5kIHB1dCBpdCBpbiB0aGUgQXJlbmEuCiAgICAgICAgLy9FdGhlciBpcyBhbHJlYWR5IGluIHRoZSBjb250cmFjdCB1bmxlc3Mgd2UgcmV2ZXJ0LCBzbyBqdXN0IGhhdmUgdG8gcHV0IGEgY29pbiBzb21ld2hlcmUKICAgICAgICBhZGRDb2lucyhsYXN0WCwgbGFzdFksIDEpOwogICAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gYWN0aXZhdGVHbGFkaWF0b3IoYWRkcmVzcyB3aG8pCiAgICBleHRlcm5hbAogICAgZ2xhZGlhdG9yRXhpc3RzKHdobykKICAgIGdsYWRpYXRvckluU3RhdGUod2hvLCBnbGFkaWF0ZS5HbGFkaWF0b3JTdGF0ZS5JbmNvbWluZykgewogICAgICAgIHJlcXVpcmUoZ2xhZGlhdG9yc1t3aG9dLnN0YXRlVHJhbnNpdGlvbkJsb2NrIDw9IGJsb2NrLm51bWJlcik7CiAgICAgICAgCiAgICAgICAgZ2xhZGlhdG9yc1t3aG9dLnN0YXRlID0gZ2xhZGlhdGUuR2xhZGlhdG9yU3RhdGUuQWN0aXZlOwogICAgICAgIGdsYWRpYXRvcnNbd2hvXS5zdGF0ZVRyYW5zaXRpb25CbG9jayA9ICh1aW50KDApIC0gMSk7Ly9tYXggaW50CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGltT3V0KCkKICAgIGV4dGVybmFsCiAgICBnbGFkaWF0b3JJblN0YXRlKG1zZy5zZW5kZXIsIGdsYWRpYXRlLkdsYWRpYXRvclN0YXRlLkFjdGl2ZSkgewogICAgICAgIGdsYWRpYXRvcnNbbXNnLnNlbmRlcl0uc3RhdGUgPSBnbGFkaWF0ZS5HbGFkaWF0b3JTdGF0ZS5PdXRnb2luZzsKICAgICAgICBnbGFkaWF0b3JzW21zZy5zZW5kZXJdLnN0YXRlVHJhbnNpdGlvbkJsb2NrID0gYmxvY2subnVtYmVyICsgZGVzcGF3blRpbWU7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGdldE91dCgpCiAgICBleHRlcm5hbAogICAgZ2xhZGlhdG9ySW5TdGF0ZShtc2cuc2VuZGVyLCBnbGFkaWF0ZS5HbGFkaWF0b3JTdGF0ZS5PdXRnb2luZykgewogICAgICAgIHJlcXVpcmUoZ2xhZGlhdG9yc1ttc2cuc2VuZGVyXS5zdGF0ZVRyYW5zaXRpb25CbG9jayA8PSBibG9jay5udW1iZXIpOwogICAgICAgIAogICAgICAgIGRlc3Bhd25HbGFkaWF0b3JBbmRBd2FyZENvaW5zKG1zZy5zZW5kZXIpOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBuZXh0QmxvY2soKSAKICAgIHB1YmxpYyB7CiAgICAgICAgZ2xhZGlhdG9yc1sweDBdLmNvaW5zICsrOwogICAgfQp9'.
	

]
