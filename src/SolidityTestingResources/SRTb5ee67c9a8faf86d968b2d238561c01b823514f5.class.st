Class {
	#name : #SRTb5ee67c9a8faf86d968b2d238561c01b823514f5,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTb5ee67c9a8faf86d968b2d238561c01b823514f5 >> base64 [
	^ ''.
	

]
