Class {
	#name : #SRT60366bcc5257c8688c62e637169038e3530536f8,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT60366bcc5257c8688c62e637169038e3530536f8 >> base64 [
	^ ''.
	

]
