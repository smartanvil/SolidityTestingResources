Class {
	#name : #SRTa2388330BcB4b3D5F6395a3f5999Fecb73960Af3,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTa2388330BcB4b3D5F6395a3f5999Fecb73960Af3 >> base64 [
	^ ''.
	

]
