Class {
	#name : #SRT903db1bf91cc22964cccfbe1a1875eb3b989f32a,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT903db1bf91cc22964cccfbe1a1875eb3b989f32a >> base64 [
	^ ''.
	

]
