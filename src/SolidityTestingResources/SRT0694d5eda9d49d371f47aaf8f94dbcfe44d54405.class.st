Class {
	#name : #SRT0694d5eda9d49d371f47aaf8f94dbcfe44d54405,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT0694d5eda9d49d371f47aaf8f94dbcfe44d54405 >> base64 [
	^ ''.
	

]
