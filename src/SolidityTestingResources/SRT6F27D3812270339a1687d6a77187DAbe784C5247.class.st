Class {
	#name : #SRT6F27D3812270339a1687d6a77187DAbe784C5247,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT6F27D3812270339a1687d6a77187DAbe784C5247 >> base64 [
	^ ''.
	

]
