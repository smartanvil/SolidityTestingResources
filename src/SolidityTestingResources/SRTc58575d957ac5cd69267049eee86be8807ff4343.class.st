Class {
	#name : #SRTc58575d957ac5cd69267049eee86be8807ff4343,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTc58575d957ac5cd69267049eee86be8807ff4343 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTY7CgovKioKICogUG9yblRva2VuVjIgUFQgVXBncmFkZXIgb24gRXRoZXJldW0gTmV0d29yazogUm9wc3RlbiBUZXN0bmV0CiAqIENvbnZlcnRzIFBUIHRvIFBUV08gb24gYSA0OjEgcmV2ZXJzZSBzcGxpdCBiYXNpcwogKgogKiBUaGUgUFQgdXNlciB0cmFuc2ZlcnJpbmcgdG8gUFRXTyBtdXN0IGNhbGwKICogVGhlIGFwcHJvdmUoX2FkZHJlc3Nfb2ZfdGhpc19jb250cmFjdCwgdWludDI1NiBfdmFsdWUpIGZ1bmN0aW9uCiAqIGZyb20gb3JpZ2luYWwgdG9rZW4gY29udHJhY3Q6IDB4NjY0OTdBMjgzRTBhMDA3YkEzOTc0ZTgzNzc4NEM2QUUzMjM0NDdkZQogKgogKiBOT1RFOiBfdmFsdWUgbXVzdCBiZSBleHByZXNzZWQgaW4gdGhlIG51bWJlciBvZiBQVCB5b3Ugd2FudCB0byBjb252ZXJ0ICsgMTggemVyb3MKICogdG8gcmVwcmVzZW50IGl0J3MgMTggZGVjaW1hbCBwbGFjZXMuCiAqIFNvIGlmIHlvdSB3YW50IHRvIHNlbmQgMSBQVCwgZG8gYXBwcm92ZShfYWRkcmVzc19vZl90aGlzX2NvbnRyYWN0LCAxMDAwMDAwMDAwMDAwMDAwMDAwKQogKgogKiAuLi53aXRoIHRoZSBhZGRyZXNzIG9mIHRoaXMgQ29udHJhY3QgYXMgdGhlIGZpcnN0IGFyZ3VtZW50CiAqIGFuZCB0aGUgYW1vdW50IG9mIFBUIHRvIGNvbnZlcnQgdG8gUFRXTyBhcyB0aGUgMm5kIGFyZ3VtZW50CiAqCiAqIFRoZW4gdGhleSBtdXN0IGNhbGwgdGhlIHB0VG9QdHdvKCkgbWV0aG9kIGluIHRoaXMgY29udHJhY3QKICogYW5kIHRoZXkgd2lsbCByZWNlaXZlIGEgNDoxIHJldmVyc2Ugc3BsaXQgYW1vdW50IG9mIFBUV08KICogbWVhbmluZyA0IHRpbWVzIGxlc3MgUFRXTyB0aGFuIFBUCiAqLwoKaW50ZXJmYWNlIHRva2VuIHsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgcmVjZWl2ZXIsIHVpbnQgYW1vdW50KTsKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludCByZW1haW5pbmcpOwogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKfQoKY29udHJhY3QgUG9yblRva2VuVjJVcGdyYWRlciB7CiAgICBhZGRyZXNzIHB1YmxpYyBleGNoYW5nZXI7CiAgICB0b2tlbiBwdWJsaWMgdG9rZW5FeGNoYW5nZTsKICAgIHRva2VuIHB1YmxpYyB0b2tlblB0eDsKCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQgX3ZhbHVlKTsKCiAgICAvKioKICAgICAqIENvbnN0cnVjdG9yIGZ1bmN0aW9uCiAgICAgKgogICAgICogU2V0dXAgdGhlIG93bmVyCiAgICAgKi8KICAgIGZ1bmN0aW9uIFBvcm5Ub2tlblYyVXBncmFkZXIoCiAgICAgICAgYWRkcmVzcyBzZW5kVG8sCiAgICAgICAgYWRkcmVzcyBhZGRyZXNzT2ZQdCwKICAgICAgICBhZGRyZXNzIGFkZHJlc3NPZlB0d28KICAgICkgewogICAgICAgIGV4Y2hhbmdlciA9IHNlbmRUbzsKICAgICAgICAvLyBhZGRyZXNzIG9mIFBUIENvbnRyYWN0CiAgICAgICAgdG9rZW5QdHggPSB0b2tlbihhZGRyZXNzT2ZQdCk7CiAgICAgICAgLy8gYWRkcmVzcyBvZiBQVFdPIENvbnRyYWN0CiAgICAgICAgdG9rZW5FeGNoYW5nZSA9IHRva2VuKGFkZHJlc3NPZlB0d28pOwogICAgfQoKICAgIC8qKgogICAgICogVHJhbnNmZXIgdG9rZW5zIGZyb20gb3RoZXIgYWRkcmVzcwogICAgICogRWZmZWN0aXZlbHkgYSA0OjEgdHJhZGUgZnJvbSBQVCB0byBQVFdPCiAgICAgKi8KICAgIGZ1bmN0aW9uIHB0VG9QdHdvKCkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIAogICAgICAgIHVpbnQgdG9rZW5BbW91bnQgPSB0b2tlblB0eC5hbGxvd2FuY2UobXNnLnNlbmRlciwgdGhpcyk7CiAgICAgICAgcmVxdWlyZSh0b2tlbkFtb3VudCA+IDApOyAKICAgICAgICB1aW50IHRva2VuQW1vdW50UmV2ZXJzZVNwbGl0QWRqdXN0ZWQgPSB0b2tlbkFtb3VudCAvIDQ7CiAgICAgICAgcmVxdWlyZSh0b2tlbkFtb3VudFJldmVyc2VTcGxpdEFkanVzdGVkID4gMCk7IAogICAgICAgIHJlcXVpcmUodG9rZW5QdHgudHJhbnNmZXJGcm9tKG1zZy5zZW5kZXIsIHRoaXMsIHRva2VuQW1vdW50KSk7CiAgICAgICAgdG9rZW5FeGNoYW5nZS50cmFuc2Zlcihtc2cuc2VuZGVyLCB0b2tlbkFtb3VudFJldmVyc2VTcGxpdEFkanVzdGVkKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICAvKioKICAgICAqIEZhbGxiYWNrIGZ1bmN0aW9uCiAgICAgKgogICAgICogRmFpbCBpZiBFdGhlciBpcyBzZW50IHRvIHByZXZlbnQgcGVvcGxlIGZyb20gc2VuZGluZyBFVEggYnkgYWNjaWRlbnQKICAgICAqLwogICAgZnVuY3Rpb24gKCkgcGF5YWJsZSB7CiAgICAgICAgcmVxdWlyZShleGNoYW5nZXIgPT0gbXNnLnNlbmRlcik7CiAgICB9CiAgICAKICAgIC8qIFBUV08gV0lUSERSQVcgRlVOQ1RJT05TICovCiAgICAKICAgIC8qKgogICAgICogV2l0aGRyYXcgdW50cmFkZWQgdG9rZW5zIDEwSyBhdCBhIHRpbWUKICAgICAqCiAgICAgKiBEZXBvc2l0IHVudHJhZGVkIHRva2VucyB0byBQb3JuVG9rZW4gQWNjb3VudCAxMDBrIFNhZmUKICAgICAqLwogICAgZnVuY3Rpb24gcmV0dXJuVW5zb2xkU2FmZVNtYWxsKCkgcHVibGljIHsKICAgICAgICBpZiAoZXhjaGFuZ2VyID09IG1zZy5zZW5kZXIpIHsKICAgICAgICAgICAgdWludCB0b2tlbkFtb3VudCA9IDEwMDAwOwogICAgICAgICAgICB0b2tlbkV4Y2hhbmdlLnRyYW5zZmVyKGV4Y2hhbmdlciwgdG9rZW5BbW91bnQgKiAxIGV0aGVyKTsKICAgICAgICB9CiAgICB9CiAgICAKICAgIC8qKgogICAgICogV2l0aGRyYXcgdW50cmFkZWQgdG9rZW5zIDEwMEsgYXQgYSB0aW1lCiAgICAgKgogICAgICogRGVwb3NpdCB1bnRyYWRlZCB0b2tlbnMgdG8gUG9yblRva2VuIEFjY291bnQgMTAwayBTYWZlCiAgICAgKi8KICAgIGZ1bmN0aW9uIHJldHVyblVuc29sZFNhZmVNZWRpdW0oKSBwdWJsaWMgewogICAgICAgIGlmIChleGNoYW5nZXIgPT0gbXNnLnNlbmRlcikgewogICAgICAgICAgICB1aW50IHRva2VuQW1vdW50ID0gMTAwMDAwOwogICAgICAgICAgICB0b2tlbkV4Y2hhbmdlLnRyYW5zZmVyKGV4Y2hhbmdlciwgdG9rZW5BbW91bnQgKiAxIGV0aGVyKTsKICAgICAgICB9CiAgICB9CiAgICAKICAgIC8qKgogICAgICogV2l0aGRyYXcgdW50cmFkZWQgdG9rZW5zIDFNIGF0IGEgdGltZQogICAgICoKICAgICAqIERlcG9zaXQgdW50cmFkZWQgdG9rZW5zIHRvIFBvcm5Ub2tlbiBBY2NvdW50IDEwMGsgU2FmZQogICAgICovCiAgICBmdW5jdGlvbiByZXR1cm5VbnNvbGRTYWZlTGFyZ2UoKSBwdWJsaWMgewogICAgICAgIGlmIChleGNoYW5nZXIgPT0gbXNnLnNlbmRlcikgewogICAgICAgICAgICB1aW50IHRva2VuQW1vdW50ID0gMTAwMDAwMDsKICAgICAgICAgICAgdG9rZW5FeGNoYW5nZS50cmFuc2ZlcihleGNoYW5nZXIsIHRva2VuQW1vdW50ICogMSBldGhlcik7CiAgICAgICAgfQogICAgfQogICAgCiAgICAvKioKICAgICAqIFdpdGhkcmF3IHVudHJhZGVkIHRva2VucyAxME0gYXQgYSB0aW1lCiAgICAgKgogICAgICogRGVwb3NpdCB1bnRyYWRlZCB0b2tlbnMgdG8gUG9yblRva2VuIEFjY291bnQgMTAwayBTYWZlCiAgICAgKi8KICAgIGZ1bmN0aW9uIHJldHVyblVuc29sZFNhZmVYTGFyZ2UoKSBwdWJsaWMgewogICAgICAgIGlmIChleGNoYW5nZXIgPT0gbXNnLnNlbmRlcikgewogICAgICAgICAgICB1aW50IHRva2VuQW1vdW50ID0gMTAwMDAwMDA7CiAgICAgICAgICAgIHRva2VuRXhjaGFuZ2UudHJhbnNmZXIoZXhjaGFuZ2VyLCB0b2tlbkFtb3VudCAqIDEgZXRoZXIpOwogICAgICAgIH0KICAgIH0KICAgIAogICAgLyogUFQgV0lUSERSQVcgRlVOQ1RJT05TICovCiAgICAKICAgIC8qKgogICAgICogV2l0aGRyYXcgdHJhZGVkIHRva2VucyAxMEsgYXQgYSB0aW1lCiAgICAgKgogICAgICogRGVwb3NpdCB0cmFkZWQgdG9rZW5zIHRvIFBvcm5Ub2tlbiBBY2NvdW50IDEwMGsgU2FmZQogICAgICovCiAgICBmdW5jdGlvbiByZXR1cm5QdFNhZmVTbWFsbCgpIHB1YmxpYyB7CiAgICAgICAgaWYgKGV4Y2hhbmdlciA9PSBtc2cuc2VuZGVyKSB7CiAgICAgICAgICAgIHVpbnQgdG9rZW5BbW91bnQgPSAxMDAwMDsKICAgICAgICAgICAgdG9rZW5QdHgudHJhbnNmZXIoZXhjaGFuZ2VyLCB0b2tlbkFtb3VudCAqIDEgZXRoZXIpOwogICAgICAgIH0KICAgIH0KICAgIAogICAgLyoqCiAgICAgKiBXaXRoZHJhdyB0cmFkZWQgdG9rZW5zIDEwMEsgYXQgYSB0aW1lCiAgICAgKgogICAgICogRGVwb3NpdCB0cmFkZWQgdG9rZW5zIHRvIFBvcm5Ub2tlbiBBY2NvdW50IDEwMGsgU2FmZQogICAgICovCiAgICBmdW5jdGlvbiByZXR1cm5QdFNhZmVNZWRpdW0oKSBwdWJsaWMgewogICAgICAgIGlmIChleGNoYW5nZXIgPT0gbXNnLnNlbmRlcikgewogICAgICAgICAgICB1aW50IHRva2VuQW1vdW50ID0gMTAwMDAwOwogICAgICAgICAgICB0b2tlblB0eC50cmFuc2ZlcihleGNoYW5nZXIsIHRva2VuQW1vdW50ICogMSBldGhlcik7CiAgICAgICAgfQogICAgfQogICAgCiAgICAvKioKICAgICAqIFdpdGhkcmF3IHRyYWRlZCB0b2tlbnMgMU0gYXQgYSB0aW1lCiAgICAgKgogICAgICogRGVwb3NpdCB0cmFkZWQgdG9rZW5zIHRvIFBvcm5Ub2tlbiBBY2NvdW50IDEwMGsgU2FmZQogICAgICovCiAgICBmdW5jdGlvbiByZXR1cm5QdFNhZmVMYXJnZSgpIHB1YmxpYyB7CiAgICAgICAgaWYgKGV4Y2hhbmdlciA9PSBtc2cuc2VuZGVyKSB7CiAgICAgICAgICAgIHVpbnQgdG9rZW5BbW91bnQgPSAxMDAwMDAwOwogICAgICAgICAgICB0b2tlblB0eC50cmFuc2ZlcihleGNoYW5nZXIsIHRva2VuQW1vdW50ICogMSBldGhlcik7CiAgICAgICAgfQogICAgfQogICAgCiAgICAvKioKICAgICAqIFdpdGhkcmF3IHRyYWRlZCB0b2tlbnMgMTBNIGF0IGEgdGltZQogICAgICoKICAgICAqIERlcG9zaXQgdHJhZGVkIHRva2VucyB0byBQb3JuVG9rZW4gQWNjb3VudCAxMDBrIFNhZmUKICAgICAqLwogICAgZnVuY3Rpb24gcmV0dXJuUHRTYWZlWExhcmdlKCkgcHVibGljIHsKICAgICAgICBpZiAoZXhjaGFuZ2VyID09IG1zZy5zZW5kZXIpIHsKICAgICAgICAgICAgdWludCB0b2tlbkFtb3VudCA9IDEwMDAwMDAwOwogICAgICAgICAgICB0b2tlblB0eC50cmFuc2ZlcihleGNoYW5nZXIsIHRva2VuQW1vdW50ICogMSBldGhlcik7CiAgICAgICAgfQogICAgfQp9'.
	

]
