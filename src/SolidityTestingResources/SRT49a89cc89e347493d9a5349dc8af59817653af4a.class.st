Class {
	#name : #SRT49a89cc89e347493d9a5349dc8af59817653af4a,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT49a89cc89e347493d9a5349dc8af59817653af4a >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7Ci8qKgogKiBAdGl0bGUgU2FmZU1hdGgKICogQGRldiBNYXRoIG9wZXJhdGlvbnMgd2l0aCBzYWZldHkgY2hlY2tzIHRoYXQgdGhyb3cgb24gZXJyb3IKICovCmxpYnJhcnkgU2FmZU1hdGggewogICAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICB1aW50MjU2IGMgPSBhICogYjsKICAgICAgICBhc3NlcnQoYSA9PSAwIHx8IGMgLyBhID09IGIpOwogICAgICAgIHJldHVybiBjOwogICAgfQoKICAgIGZ1bmN0aW9uIGRpdih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgLy8gYXNzZXJ0KGIgPiAwKTsgLy8gU29saWRpdHkgYXV0b21hdGljYWxseSB0aHJvd3Mgd2hlbiBkaXZpZGluZyBieSAwCiAgICAgICAgdWludDI1NiBjID0gYSAvIGI7CiAgICAgICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICAgICAgICByZXR1cm4gYzsKICAgIH0KCiAgICBmdW5jdGlvbiBzdWIodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgICAgIGFzc2VydChiIDw9IGEpOwogICAgICAgIHJldHVybiBhIC0gYjsKICAgIH0KCiAgICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgICAgIGFzc2VydChjID49IGEpOwogICAgICAgIHJldHVybiBjOwogICAgfQp9Ci8qKgogKiBAdGl0bGUgT3duYWJsZQogKiBAZGV2IFRoZSBPd25hYmxlIGNvbnRyYWN0IGhhcyBhbiBvd25lciBhZGRyZXNzLCBhbmQgcHJvdmlkZXMgYmFzaWMgYXV0aG9yaXphdGlvbiBjb250cm9sCiAqIGZ1bmN0aW9ucywgdGhpcyBzaW1wbGlmaWVzIHRoZSBpbXBsZW1lbnRhdGlvbiBvZiAidXNlciBwZXJtaXNzaW9ucyIuCiAqLwpjb250cmFjdCBPd25hYmxlIHsKICAgIGFkZHJlc3MgcHVibGljIG93bmVyOwoKCiAgICBmdW5jdGlvbiBPd25hYmxlKCkgcHVibGljIHsKICAgIH0KCgogICAgLyoqCiAgICAgKiBAZGV2IFRocm93cyBpZiBjYWxsZWQgYnkgYW55IGFjY291bnQgb3RoZXIgdGhhbiB0aGUgb3duZXIuCiAgICAgKi8KICAgIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgICAgIF87CiAgICB9CiAgICAvKioKICAgICAqIEBkZXYgQWxsb3dzIHRoZSBjdXJyZW50IG93bmVyIHRvIHRyYW5zZmVyIGNvbnRyb2wgb2YgdGhlIGNvbnRyYWN0IHRvIGEgbmV3T3duZXIuCiAgICAgKiBAcGFyYW0gbmV3T3duZXIgVGhlIGFkZHJlc3MgdG8gdHJhbnNmZXIgb3duZXJzaGlwIHRvLgogICAgICovCiAgICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld093bmVyKSBpbnRlcm5hbCBvbmx5T3duZXIgewogICAgICAgIHJlcXVpcmUobmV3T3duZXIgIT0gYWRkcmVzcygwKSk7CiAgICAgICAgb3duZXIgPSBuZXdPd25lcjsKICAgIH0KCn0KLyoqCiAqIEB0aXRsZSBFUkMyMEJhc2ljCiAqIEBkZXYgU2ltcGxlciB2ZXJzaW9uIG9mIEVSQzIwIGludGVyZmFjZQogKiBAZGV2IHNlZSBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9pc3N1ZXMvMTc5CiAqLwpjb250cmFjdCBFUkMyMEJhc2ljIHsKICAgIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5OwogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3Mgd2hvKSBwdWJsaWMgcmV0dXJucyAodWludDI1Nik7CiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIHRvLCB1aW50MjU2IHZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHZhbHVlKTsKfQovKioKICogQHRpdGxlIEVSQzIwIGludGVyZmFjZQogKiBAZGV2IHNlZSBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9pc3N1ZXMvMjAKICovCmNvbnRyYWN0IEVSQzIwIGlzIEVSQzIwQmFzaWMgewogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3Mgb3duZXIsIGFkZHJlc3Mgc3BlbmRlcikgcHVibGljIHJldHVybnMgKHVpbnQyNTYpOwogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgZnJvbSwgYWRkcmVzcyB0bywgdWludDI1NiB2YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpOwogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIHNwZW5kZXIsIHVpbnQyNTYgdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKTsKICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBvd25lciwgYWRkcmVzcyBpbmRleGVkIHNwZW5kZXIsIHVpbnQyNTYgdmFsdWUpOwp9Ci8qKgogKiBAdGl0bGUgUG9TVG9rZW5TdGFuZGFyZAogKiBAZGV2IHRoZSBpbnRlcmZhY2Ugb2YgUG9TVG9rZW5TdGFuZGFyZAogKi8KY29udHJhY3QgUG9TVG9rZW5TdGFuZGFyZCB7CiAgICB1aW50MjU2IHB1YmxpYyBzdGFrZVN0YXJ0VGltZTsKICAgIHVpbnQyNTYgcHVibGljIHN0YWtlTWluQWdlOwogICAgdWludDI1NiBwdWJsaWMgc3Rha2VNYXhBZ2U7CiAgICBmdW5jdGlvbiBtaW5lKCkgcHVibGljICByZXR1cm5zIChib29sKTsKICAgIGZ1bmN0aW9uIGNvaW5BZ2UoYWRkcmVzcyB3aG8pIHB1YmxpYyAgcmV0dXJucyAodWludDI1Nik7CiAgICBmdW5jdGlvbiBhbm51YWxJbnRlcmVzdCgpIHB1YmxpYyAgcmV0dXJucyAodWludDI1Nik7CiAgICBldmVudCBNaW5lKGFkZHJlc3MgaW5kZXhlZCBfYWRkcmVzcywgdWludCBfcmV3YXJkKTsKfQoKY29udHJhY3QgQ29pblZpbGEgaXMgRVJDMjAsUG9TVG9rZW5TdGFuZGFyZCxPd25hYmxlIHsKICAgIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwogICAgc3RyaW5nIHB1YmxpYyBuYW1lID0gIkNvaW5WaWxhIjsKICAgIHN0cmluZyBwdWJsaWMgc3ltYm9sID0gIlZJTEEiOwogICAgdWludCBwdWJsaWMgZGVjaW1hbHMgPSAxODsKCiAgICB1aW50IHB1YmxpYyBjaGFpblN0YXJ0VGltZTsgLy9jaGFpbiBzdGFydCB0aW1lCiAgICB1aW50IHB1YmxpYyBjaGFpblN0YXJ0QmxvY2tOdW1iZXI7IC8vY2hhaW4gc3RhcnQgYmxvY2sgbnVtYmVyCiAgICB1aW50IHB1YmxpYyBzdGFrZVN0YXJ0VGltZTsgLy9zdGFrZSBzdGFydCB0aW1lCiAgICB1aW50IHB1YmxpYyBzdGFrZU1pbkFnZSA9IDMgZGF5czsgLy8gbWluaW11bSBhZ2UgZm9yIGNvaW4gYWdlOiAzRAogICAgdWludCBwdWJsaWMgc3Rha2VNYXhBZ2UgPSA5MCBkYXlzOyAvLyBzdGFrZSBhZ2Ugb2YgZnVsbCB3ZWlnaHQ6IDkwRAogICAgdWludCBwdWJsaWMgbWF4TWludFByb29mT2ZTdGFrZSA9IDEwKioxNzsgLy8gZGVmYXVsdCAxMCUgYW5udWFsIGludGVyZXN0CgogICAgdWludCBwdWJsaWMgdG90YWxTdXBwbHk7CiAgICB1aW50IHB1YmxpYyBtYXhUb3RhbFN1cHBseSA9IDI3ICogKDEwKio2KSAqICgxMCoqdWludDI1NihkZWNpbWFscykpOyAvLyA3IE1pbC47CiAgICB1aW50IHB1YmxpYyB0b3RhbEluaXRpYWxTdXBwbHkgPSAyNTAgKiAoMTAqKjMpICogKDEwKip1aW50MjU2KGRlY2ltYWxzKSk7CiAgICB1aW50MjU2IHB1YmxpYyBJTklUSUFMX1NVUFBMWSA9IDI1MCAqICgxMCoqMykgKiAoMTAgKiogdWludDI1NihkZWNpbWFscykpOwoKICAgIGFkZHJlc3MgcHVibGljIGFkZHJlc3NGdW5kVGVhbSA9IDB4NDU3YjRjNjRGNEZlMjg1NENEMjAzOWQ0NTk1QUExMzBGQUYxMDlGZTsKICAgIGFkZHJlc3MgcHVibGljIGFkZHJlc3NGdW5kQWlyZHJvcCA9IDB4QzE2OTk0ZTYzRTFBMjQ1MTFBNWExZjdCQTg0MmYzNzM4ZmEwMDNmNTsKICAgIGFkZHJlc3MgcHVibGljIGFkZHJlc3NGdW5kQm91bnR5ID0gMHhiQ0NDZDM0ZGE5YjVFNzMwMzZBZEVCRWQyNTQ2MEYwYzI5ZjE2RUM5OwogICAgYWRkcmVzcyBwdWJsaWMgYWRkcmVzc0Z1bmRQbGF0Zm9ybSA9IDB4NDg1M0U2NjU4MkJkNGMwNzg3Nzg1RmMzMTU4NGExNENCNDNjNURDMzsKICAgIGFkZHJlc3MgcHVibGljIGFkZHJlc3NGdW5kSG9sZGVyID0gMHg3NzE1ODIxMDQzNzlCYjVDNkFGZjM5MDIzODQzRjE5YUYwNDZBREU4OwoKICAgIHVpbnQyNTYgcHVibGljIGFtb3VudEZ1bmRUZWFtID0gMjUgKiAoMTAqKjMpICogKDEwKip1aW50MjU2KGRlY2ltYWxzKSk7CiAgICB1aW50MjU2IHB1YmxpYyBhbW91bnRGdW5kQWlyZHJvcCA9IDEzMCAqICgxMCoqMykgKiAoMTAqKnVpbnQyNTYoZGVjaW1hbHMpKTsKICAgIHVpbnQyNTYgcHVibGljIGFtb3VudEZ1bmRCb3VudHkgPSAyMCAqICgxMCoqMykgKiAoMTAqKnVpbnQyNTYoZGVjaW1hbHMpKTsKICAgIHVpbnQyNTYgcHVibGljIGFtb3VudEZ1bmRQbGF0Zm9ybSA9IDUwICogKDEwKiozKSAqICgxMCoqdWludDI1NihkZWNpbWFscykpOwogICAgdWludDI1NiBwdWJsaWMgYW1vdW50RnVuZEhvbGRlciA9IDI1ICogKDEwKiozKSAqICgxMCoqdWludDI1NihkZWNpbWFscykpOwoKICAgIHN0cnVjdCB0cmFuc2ZlckluU3RydWN0ewogICAgICAgIHVpbnQxMjggYW1vdW50OwogICAgICAgIHVpbnQ2NCB0aW1lOwogICAgfQoKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBhbGxvd2VkOwogICAgbWFwcGluZyhhZGRyZXNzID0+IHRyYW5zZmVySW5TdHJ1Y3RbXSkgdHJhbnNmZXJJbnM7CgogICAgLyoqCiAgICAgKiBAZGV2IEZpeCBmb3IgdGhlIEVSQzIwIHNob3J0IGFkZHJlc3MgYXR0YWNrLgogICAgICovCiAgICBtb2RpZmllciBvbmx5UGF5bG9hZFNpemUodWludCBzaXplKSB7CiAgICAgICAgcmVxdWlyZShtc2cuZGF0YS5sZW5ndGggPj0gc2l6ZSArIDQpOwogICAgICAgIF87CiAgICB9CgogICAgbW9kaWZpZXIgY2FuUG9TTWludCgpIHsKICAgICAgICByZXF1aXJlKHRvdGFsU3VwcGx5IDwgbWF4VG90YWxTdXBwbHkpOwogICAgICAgIF87CiAgICB9CgogICAgZnVuY3Rpb24gQ29pblZpbGEoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyB7CiAgICAgICAgcmVxdWlyZShfb3duZXIgIT0gYWRkcmVzcygwKSk7CiAgICAgICAgb3duZXIgPSBfb3duZXI7CiAgICAgICAgQ29pblZpbGFTdGFydCgpOwogICAgfQoKICAgIGZ1bmN0aW9uIENvaW5WaWxhU3RhcnQoKSBwcml2YXRlIHsKICAgICAgICB1aW50NjQgX25vdyA9IHVpbnQ2NChub3cpOwogICAgICAgIHRvdGFsU3VwcGx5ID0gdG90YWxJbml0aWFsU3VwcGx5OwoKICAgICAgICBjaGFpblN0YXJ0VGltZSA9IG5vdzsKICAgICAgICBjaGFpblN0YXJ0QmxvY2tOdW1iZXIgPSBibG9jay5udW1iZXI7CgogICAgICAgIGJhbGFuY2VzW2FkZHJlc3NGdW5kVGVhbV0gPSBhbW91bnRGdW5kVGVhbTsKICAgICAgICB0cmFuc2Zlckluc1thZGRyZXNzRnVuZFRlYW1dLnB1c2godHJhbnNmZXJJblN0cnVjdCh1aW50MTI4KGFtb3VudEZ1bmRUZWFtKSxfbm93KSk7CgogICAgICAgIGJhbGFuY2VzW2FkZHJlc3NGdW5kSG9sZGVyXSA9IGFtb3VudEZ1bmRIb2xkZXI7CiAgICAgICAgdHJhbnNmZXJJbnNbYWRkcmVzc0Z1bmRIb2xkZXJdLnB1c2godHJhbnNmZXJJblN0cnVjdCh1aW50MTI4KGFtb3VudEZ1bmRIb2xkZXIpLF9ub3cpKTsKCiAgICAgICAgYmFsYW5jZXNbYWRkcmVzc0Z1bmRBaXJkcm9wXSA9IGFtb3VudEZ1bmRBaXJkcm9wOwogICAgICAgIHRyYW5zZmVySW5zW2FkZHJlc3NGdW5kQWlyZHJvcF0ucHVzaCh0cmFuc2ZlckluU3RydWN0KHVpbnQxMjgoYW1vdW50RnVuZEFpcmRyb3ApLF9ub3cpKTsKCiAgICAgICAgYmFsYW5jZXNbYWRkcmVzc0Z1bmRCb3VudHldID0gYW1vdW50RnVuZEJvdW50eTsKICAgICAgICB0cmFuc2Zlckluc1thZGRyZXNzRnVuZEJvdW50eV0ucHVzaCh0cmFuc2ZlckluU3RydWN0KHVpbnQxMjgoYW1vdW50RnVuZEJvdW50eSksX25vdykpOwoKICAgICAgICBiYWxhbmNlc1thZGRyZXNzRnVuZFBsYXRmb3JtXSA9IGFtb3VudEZ1bmRQbGF0Zm9ybTsKICAgICAgICB0cmFuc2Zlckluc1thZGRyZXNzRnVuZFBsYXRmb3JtXS5wdXNoKHRyYW5zZmVySW5TdHJ1Y3QodWludDEyOChhbW91bnRGdW5kUGxhdGZvcm0pLF9ub3cpKTsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIG9ubHlQYXlsb2FkU2l6ZSgyICogMzIpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICAgICAgaWYobXNnLnNlbmRlciA9PSBfdG8pIHJldHVybiBtaW5lKCk7CiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBiYWxhbmNlc1ttc2cuc2VuZGVyXS5zdWIoX3ZhbHVlKTsKICAgICAgICBiYWxhbmNlc1tfdG9dID0gYmFsYW5jZXNbX3RvXS5hZGQoX3ZhbHVlKTsKICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgaWYodHJhbnNmZXJJbnNbbXNnLnNlbmRlcl0ubGVuZ3RoID4gMCkgZGVsZXRlIHRyYW5zZmVySW5zW21zZy5zZW5kZXJdOwogICAgICAgIHVpbnQ2NCBfbm93ID0gdWludDY0KG5vdyk7CiAgICAgICAgdHJhbnNmZXJJbnNbbXNnLnNlbmRlcl0ucHVzaCh0cmFuc2ZlckluU3RydWN0KHVpbnQxMjgoYmFsYW5jZXNbbXNnLnNlbmRlcl0pLF9ub3cpKTsKICAgICAgICB0cmFuc2Zlckluc1tfdG9dLnB1c2godHJhbnNmZXJJblN0cnVjdCh1aW50MTI4KF92YWx1ZSksX25vdykpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgcHVibGljIHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgewogICAgICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIG9ubHlQYXlsb2FkU2l6ZSgzICogMzIpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICAgICAgcmVxdWlyZShfdG8gIT0gYWRkcmVzcygwKSk7CgogICAgICAgIHZhciBfYWxsb3dhbmNlID0gYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl07CgogICAgICAgIC8vIENoZWNrIGlzIG5vdCBuZWVkZWQgYmVjYXVzZSBzdWIoX2FsbG93YW5jZSwgX3ZhbHVlKSB3aWxsIGFscmVhZHkgdGhyb3cgaWYgdGhpcyBjb25kaXRpb24gaXMgbm90IG1ldAogICAgICAgIC8vIHJlcXVpcmUgKF92YWx1ZSA8PSBfYWxsb3dhbmNlKTsKCiAgICAgICAgYmFsYW5jZXNbX2Zyb21dID0gYmFsYW5jZXNbX2Zyb21dLnN1YihfdmFsdWUpOwogICAgICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfdmFsdWUpOwogICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID0gX2FsbG93YW5jZS5zdWIoX3ZhbHVlKTsKICAgICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwogICAgICAgIGlmKHRyYW5zZmVySW5zW19mcm9tXS5sZW5ndGggPiAwKSBkZWxldGUgdHJhbnNmZXJJbnNbX2Zyb21dOwogICAgICAgIHVpbnQ2NCBfbm93ID0gdWludDY0KG5vdyk7CiAgICAgICAgdHJhbnNmZXJJbnNbX2Zyb21dLnB1c2godHJhbnNmZXJJblN0cnVjdCh1aW50MTI4KGJhbGFuY2VzW19mcm9tXSksX25vdykpOwogICAgICAgIHRyYW5zZmVySW5zW190b10ucHVzaCh0cmFuc2ZlckluU3RydWN0KHVpbnQxMjgoX3ZhbHVlKSxfbm93KSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgICAgICByZXF1aXJlKChfdmFsdWUgPT0gMCkgfHwgKGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID09IDApKTsKCiAgICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBwdWJsaWMgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpIHsKICAgICAgICByZXR1cm4gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsKICAgIH0KCiAgICBmdW5jdGlvbiBtaW5lKCkgY2FuUG9TTWludCBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgICAgIGlmKGJhbGFuY2VzW21zZy5zZW5kZXJdIDw9IDApIHJldHVybiBmYWxzZTsKICAgICAgICBpZih0cmFuc2Zlckluc1ttc2cuc2VuZGVyXS5sZW5ndGggPD0gMCkgcmV0dXJuIGZhbHNlOwoKICAgICAgICB1aW50IHJld2FyZCA9IGdldFByb29mT2ZTdGFrZVJld2FyZChtc2cuc2VuZGVyKTsKICAgICAgICBpZihyZXdhcmQgPD0gMCkgcmV0dXJuIGZhbHNlOwoKICAgICAgICB0b3RhbFN1cHBseSA9IHRvdGFsU3VwcGx5LmFkZChyZXdhcmQpOwogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gYmFsYW5jZXNbbXNnLnNlbmRlcl0uYWRkKHJld2FyZCk7CiAgICAgICAgZGVsZXRlIHRyYW5zZmVySW5zW21zZy5zZW5kZXJdOwogICAgICAgIHRyYW5zZmVySW5zW21zZy5zZW5kZXJdLnB1c2godHJhbnNmZXJJblN0cnVjdCh1aW50MTI4KGJhbGFuY2VzW21zZy5zZW5kZXJdKSx1aW50NjQobm93KSkpOwogICAgICAgIE1pbmUobXNnLnNlbmRlciwgcmV3YXJkKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBnZXRCbG9ja051bWJlcigpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQgYmxvY2tOdW1iZXIpIHsKICAgICAgICBibG9ja051bWJlciA9IGJsb2NrLm51bWJlci5zdWIoY2hhaW5TdGFydEJsb2NrTnVtYmVyKTsKICAgIH0KCiAgICBmdW5jdGlvbiBjb2luQWdlKGFkZHJlc3Mgd2hvKSBwdWJsaWMgcmV0dXJucyAodWludCBteUNvaW5BZ2UpIHsKICAgICAgICBteUNvaW5BZ2UgPSBnZXRDb2luQWdlKHdobyxub3cpOwogICAgfQoKICAgIC8vIFllYXIgMQkzMDAlCTEsMDAwLDAwMAogICAgLy8gWWVhciAyCTEwMCUJMiwwMDAsMDAwCiAgICAvLyBZZWFyIDMJMTAwJQk0LDAwMCwwMDAKICAgIC8vIFllYXIgNAkxMDAlCTgsMDAwLDAwMAogICAgLy8gWWVhciA1CTUwJQkgICAgMTIsMDAwLDAwMAogICAgLy8gWWVhciA2CTUwJQkgICAgMTgsMDAwLDAwMAogICAgLy8gWWVhciA3CTUwJQkgICAgMjcsMDAwLDAwMAogICAgZnVuY3Rpb24gYW5udWFsSW50ZXJlc3QoKSBwdWJsaWMgcmV0dXJucyh1aW50IGludGVyZXN0KSB7CiAgICAgICAgdWludCBfbm93ID0gbm93OwogICAgICAgIGludGVyZXN0ID0gbWF4TWludFByb29mT2ZTdGFrZTsKICAgICAgICBpZigoX25vdy5zdWIoc3Rha2VTdGFydFRpbWUpKS5kaXYoMSB5ZWFycykgPT0gMCkgewogICAgICAgICAgICBpbnRlcmVzdCA9ICgxNjUwICogbWF4TWludFByb29mT2ZTdGFrZSkuZGl2KDEwMCk7CiAgICAgICAgfSBlbHNlIGlmKChfbm93LnN1YihzdGFrZVN0YXJ0VGltZSkuZGl2KDEgeWVhcnMpID09IDEpIHx8IChfbm93LnN1YihzdGFrZVN0YXJ0VGltZSkuZGl2KDEgeWVhcnMpID09IDIpIHx8CiAgICAgICAgICAgICAgICAgICAgKF9ub3cuc3ViKHN0YWtlU3RhcnRUaW1lKS5kaXYoMSB5ZWFycykgPT0gMykpewogICAgICAgICAgICBpbnRlcmVzdCA9ICg3NzAgKiBtYXhNaW50UHJvb2ZPZlN0YWtlKS5kaXYoMTAwKTsKICAgICAgICB9IGVsc2UgaWYoKF9ub3cuc3ViKHN0YWtlU3RhcnRUaW1lKS5kaXYoMSB5ZWFycykgPT0gNCkgfHwgKF9ub3cuc3ViKHN0YWtlU3RhcnRUaW1lKS5kaXYoMSB5ZWFycykgPT0gNSkgfHwKICAgICAgICAgICAgICAgICAgICAoX25vdy5zdWIoc3Rha2VTdGFydFRpbWUpLmRpdigxIHllYXJzKSA9PSA2KSl7CiAgICAgICAgICAgIGludGVyZXN0ID0gKDQzNSAqIG1heE1pbnRQcm9vZk9mU3Rha2UpLmRpdigxMDApOwogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBnZXRQcm9vZk9mU3Rha2VSZXdhcmQoYWRkcmVzcyBfYWRkcmVzcykgaW50ZXJuYWwgdmlldyByZXR1cm5zICh1aW50KSB7CiAgICAgICAgcmVxdWlyZSggKG5vdyA+PSBzdGFrZVN0YXJ0VGltZSkgJiYgKHN0YWtlU3RhcnRUaW1lID4gMCkgKTsKCiAgICAgICAgdWludCBfbm93ID0gbm93OwogICAgICAgIHVpbnQgX2NvaW5BZ2UgPSBnZXRDb2luQWdlKF9hZGRyZXNzLCBfbm93KTsKICAgICAgICBpZihfY29pbkFnZSA8PSAwKSByZXR1cm4gMDsKCiAgICAgICAgdWludCBpbnRlcmVzdCA9IG1heE1pbnRQcm9vZk9mU3Rha2U7CiAgICAgICAgLy8gRHVlIHRvIHRoZSBoaWdoIGludGVyZXN0IHJhdGUgZm9yIHRoZSBmaXJzdCB0d28geWVhcnMsIGNvbXBvdW5kaW5nIHNob3VsZCBiZSB0YWtlbiBpbnRvIGFjY291bnQuCiAgICAgICAgLy8gRWZmZWN0aXZlIGFubnVhbCBpbnRlcmVzdCByYXRlID0gKDEgKyAobm9taW5hbCByYXRlIC8gbnVtYmVyIG9mIGNvbXBvdW5kaW5nIHBlcmlvZHMpKSBeIChudW1iZXIgb2YgY29tcG91bmRpbmcgcGVyaW9kcykgLSAxCiAgICAgICAgLy8gTW9kaWZpZWQgaW5pdGlhbCBpbnRlcmVzdCByYXRlIHRvIDMwMCUKICAgICAgICBpZigoX25vdy5zdWIoc3Rha2VTdGFydFRpbWUpKS5kaXYoMSB5ZWFycykgPT0gMCkgewogICAgICAgICAgICAvLyAxc3QgeWVhciBlZmZlY3RpdmUgYW5udWFsIGludGVyZXN0IHJhdGUgaXMgMzAwJSB3aGVuIHdlIHNlbGVjdCB0aGUgc3Rha2VNYXhBZ2UgKDkwIGRheXMpIGFzIHRoZSBjb21wb3VuZGluZyBwZXJpb2QuCiAgICAgICAgICAgIGludGVyZXN0ID0gKDE2NTAgKiBtYXhNaW50UHJvb2ZPZlN0YWtlKS5kaXYoMTAwKTsKICAgICAgICB9IGVsc2UgaWYoKF9ub3cuc3ViKHN0YWtlU3RhcnRUaW1lKS5kaXYoMSB5ZWFycykgPT0gMSkgfHwgKF9ub3cuc3ViKHN0YWtlU3RhcnRUaW1lKS5kaXYoMSB5ZWFycykgPT0gMikgfHwKICAgICAgICAgICAgICAgICAgICAoX25vdy5zdWIoc3Rha2VTdGFydFRpbWUpLmRpdigxIHllYXJzKSA9PSAzKSkgewogICAgICAgICAgICAvLyAybmQsIDNuZCwgNG5kIHllYXIgZWZmZWN0aXZlIGFubnVhbCBpbnRlcmVzdCByYXRlIGlzIDEwMCUgd2hlbiB3ZSBzZWxlY3QgdGhlIHN0YWtlTWF4QWdlICg5MCBkYXlzKSBhcyB0aGUgY29tcG91bmRpbmcgcGVyaW9kLgogICAgICAgICAgICBpbnRlcmVzdCA9ICg3NzAgKiBtYXhNaW50UHJvb2ZPZlN0YWtlKS5kaXYoMTAwKTsKICAgICAgICB9IGVsc2UgaWYoKF9ub3cuc3ViKHN0YWtlU3RhcnRUaW1lKS5kaXYoMSB5ZWFycykgPT0gNCkgfHwgKF9ub3cuc3ViKHN0YWtlU3RhcnRUaW1lKS5kaXYoMSB5ZWFycykgPT0gNSkgfHwKICAgICAgICAgICAgICAgICAgICAoX25vdy5zdWIoc3Rha2VTdGFydFRpbWUpLmRpdigxIHllYXJzKSA9PSA2KSkgewogICAgICAgICAgICAvLyA1bmQsIDZuZCwgN25kIHllYXIgZWZmZWN0aXZlIGFubnVhbCBpbnRlcmVzdCByYXRlIGlzIDUwJQogICAgICAgICAgICBpbnRlcmVzdCA9ICg0MzUgKiBtYXhNaW50UHJvb2ZPZlN0YWtlKS5kaXYoMTAwKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiAoX2NvaW5BZ2UgKiBpbnRlcmVzdCkuZGl2KDM2NSAqICgxMCoqZGVjaW1hbHMpKTsKICAgIH0KCiAgICBmdW5jdGlvbiBnZXRDb2luQWdlKGFkZHJlc3MgX2FkZHJlc3MsIHVpbnQgX25vdykgaW50ZXJuYWwgdmlldyByZXR1cm5zICh1aW50IF9jb2luQWdlKSB7CiAgICAgICAgaWYodHJhbnNmZXJJbnNbX2FkZHJlc3NdLmxlbmd0aCA8PSAwKSByZXR1cm4gMDsKCiAgICAgICAgZm9yICh1aW50IGkgPSAwOyBpIDwgdHJhbnNmZXJJbnNbX2FkZHJlc3NdLmxlbmd0aDsgaSsrKXsKICAgICAgICAgICAgaWYoIF9ub3cgPCB1aW50KHRyYW5zZmVySW5zW19hZGRyZXNzXVtpXS50aW1lKS5hZGQoc3Rha2VNaW5BZ2UpICkgY29udGludWU7CgogICAgICAgICAgICB1aW50IG5Db2luU2Vjb25kcyA9IF9ub3cuc3ViKHVpbnQodHJhbnNmZXJJbnNbX2FkZHJlc3NdW2ldLnRpbWUpKTsKICAgICAgICAgICAgaWYoIG5Db2luU2Vjb25kcyA+IHN0YWtlTWF4QWdlICkgbkNvaW5TZWNvbmRzID0gc3Rha2VNYXhBZ2U7CgogICAgICAgICAgICBfY29pbkFnZSA9IF9jb2luQWdlLmFkZCh1aW50KHRyYW5zZmVySW5zW19hZGRyZXNzXVtpXS5hbW91bnQpICogbkNvaW5TZWNvbmRzLmRpdigxIGRheXMpKTsKICAgICAgICB9CiAgICB9CgogICAgLy9mdW5jdGlvbiBvd25lclNldFN0YWtlU3RhcnRUaW1lKHVpbnQgdGltZXN0YW1wKSBwdWJsaWMgewogICAgZnVuY3Rpb24gb3duZXJTZXRTdGFrZVN0YXJ0VGltZSh1aW50IHRpbWVzdGFtcCkgcHVibGljIG9ubHlPd25lciB7CiAgICAgICAgcmVxdWlyZSgoc3Rha2VTdGFydFRpbWUgPD0gMCkgJiYgKHRpbWVzdGFtcCA+PSBjaGFpblN0YXJ0VGltZSkpOwogICAgICAgIHN0YWtlU3RhcnRUaW1lID0gdGltZXN0YW1wOwogICAgfQoKICAgIC8qKgogICAgKiBQZXRlcnNvbidzIExhdyBQcm90ZWN0aW9uCiAgICAqIENsYWltIHRva2VucwogICAgKi8KICAgIGZ1bmN0aW9uIGNsYWltVG9rZW5zKCkgcHVibGljIG9ubHlPd25lciB7CiAgICAgICAgdWludDI1NiBiYWxhbmNlID0gYmFsYW5jZU9mKHRoaXMpOwogICAgICAgIHRyYW5zZmVyKG93bmVyLCBiYWxhbmNlKTsKICAgICAgICBUcmFuc2Zlcih0aGlzLCBvd25lciwgYmFsYW5jZSk7CiAgICAgICAgb3duZXIudHJhbnNmZXIodGhpcy5iYWxhbmNlKTsKICAgIH0KfQ=='.
	

]
