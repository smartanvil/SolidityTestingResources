Class {
	#name : #SRT876a11639ce3d2bba1712fc9f47bd6faee575ad4,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT876a11639ce3d2bba1712fc9f47bd6faee575ad4 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTY7CgpsaWJyYXJ5IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAKICAgIHVpbnQyNTYgYyA9IGEgLyBiOwogICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KCn0KCmNvbnRyYWN0IE93bmFibGUgewogIGFkZHJlc3MgcHVibGljIG93bmVyOwoKICAvKioKICAgKiBAZGV2IFRoZSBPd25hYmxlIGNvbnN0cnVjdG9yIHNldHMgdGhlIG9yaWdpbmFsIGBvd25lcmAgb2YgdGhlIGNvbnRyYWN0IHRvIHRoZSBzZW5kZXIKICAgKiBhY2NvdW50LgogICAqLwogIGZ1bmN0aW9uIE93bmFibGUoKSB7CiAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgfQoKICAvKioKICAgKiBAZGV2IFRocm93cyBpZiBjYWxsZWQgYnkgYW55IGFjY291bnQgb3RoZXIgdGhhbiB0aGUgb3duZXIuCiAgICovCiAgbW9kaWZpZXIgb25seU93bmVyKCkgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyKTsKICAgIF87CiAgfQoKICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld093bmVyKSBvbmx5T3duZXIgewogICAgaWYgKG5ld093bmVyICE9IGFkZHJlc3MoMCkpIHsKICAgICAgb3duZXIgPSBuZXdPd25lcjsKICAgIH0KICB9Cgp9Cgpjb250cmFjdCBQYXVzYWJsZSBpcyBPd25hYmxlIHsKICBldmVudCBQYXVzZSgpOwogIGV2ZW50IFVucGF1c2UoKTsKCiAgYm9vbCBwdWJsaWMgcGF1c2VkID0gZmFsc2U7CiAgLyoqCiAgICogQGRldiBNb2RpZmllciB0byBtYWtlIGEgZnVuY3Rpb24gY2FsbGFibGUgb25seSB3aGVuIHRoZSBjb250cmFjdCBpcyBub3QgcGF1c2VkLgogICAqLwogIG1vZGlmaWVyIHdoZW5Ob3RQYXVzZWQoKSB7CiAgICByZXF1aXJlKCFwYXVzZWQpOwogICAgXzsKICB9CgogIC8qKgogICAqIEBkZXYgTW9kaWZpZXIgdG8gbWFrZSBhIGZ1bmN0aW9uIGNhbGxhYmxlIG9ubHkgd2hlbiB0aGUgY29udHJhY3QgaXMgcGF1c2VkLgogICAqLwogIG1vZGlmaWVyIHdoZW5QYXVzZWQoKSB7CiAgICByZXF1aXJlKHBhdXNlZCk7CiAgICBfOwogIH0KCiAgLyoqCiAgICogQGRldiBjYWxsZWQgYnkgdGhlIG93bmVyIHRvIHBhdXNlLCB0cmlnZ2VycyBzdG9wcGVkIHN0YXRlCiAgICovCiAgZnVuY3Rpb24gcGF1c2UoKSBvbmx5T3duZXIgd2hlbk5vdFBhdXNlZCBwdWJsaWMgewogICAgcGF1c2VkID0gdHJ1ZTsKICAgIFBhdXNlKCk7CiAgfQoKICAvKioKICAgKiBAZGV2IGNhbGxlZCBieSB0aGUgb3duZXIgdG8gdW5wYXVzZSwgcmV0dXJucyB0byBub3JtYWwgc3RhdGUKICAgKi8KICBmdW5jdGlvbiB1bnBhdXNlKCkgb25seU93bmVyIHdoZW5QYXVzZWQgcHVibGljIHsKICAgIHBhdXNlZCA9IGZhbHNlOwogICAgVW5wYXVzZSgpOwogIH0KfQoKY29udHJhY3QgRVJDMjBCYXNpYyBpcyBQYXVzYWJsZSB7CiAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7CiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3Mgd2hvKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KTsKICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIHRvLCB1aW50MjU2IHZhbHVlKSByZXR1cm5zIChib29sKTsKICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHRva2Vucyk7Cn0KCmNvbnRyYWN0IEJhc2ljVG9rZW4gaXMgRVJDMjBCYXNpYyB7CiAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQyNTY7CgogIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsKICBhZGRyZXNzIHB1YmxpYyBydWJ1c09yYW5nZUFkZHJlc3M7CiAgdWludDI1NiBub0V0aGVyID0gMDsKCiAgc3RyaW5nIHB1YmxpYyBuYW1lID0gIlJ1YnVzIEZ1bmQgT3JhbmdlIFRva2VuIjsKICB1aW50OCBwdWJsaWMgZGVjaW1hbHMgPSAxODsKICBzdHJpbmcgcHVibGljIHN5bWJvbCA9ICJSVE8iOwoKICBhZGRyZXNzIHB1YmxpYyBlbnRlcldhbGxldCA9IDB4NzNENWYwMzVCOENCNThiNGFGMDY1ZDZjRTQ5ZkM4RTcyODg1MzZGMzsKICBhZGRyZXNzIHB1YmxpYyBpbnZlc3RXYWxsZXQgPSAweEQwNzRCNjM2Q2NiZjFBMzQ4MmUyMGI1NGJGMDEzYzFEMGMxMDQ1YjA7CiAgYWRkcmVzcyBwdWJsaWMgZXhpdFdhbGxldCA9IDB4ZWMwOTdkMDFBNmIyQzZkNDE1RDQzMEIwRDRlOTJmNzBDQUNCOTQ4RDsKICB1aW50MjU2IHB1YmxpYyBwcmljZUV0aFBlclRva2VuID0gMzMzMzM7CiAgCiAgdWludDI1NiBwdWJsaWMgZGVwb3NpdENvbW1pc3Npb24gPSA5NTsKICB1aW50MjU2IHB1YmxpYyBpbnZlc3RDb21taXNzaW9uID0gNzA7CiAgdWludDI1NiBwdWJsaWMgd2l0aGRyYXdDb21taXNzaW9uID0gOTc7CiAgCiAgZXZlbnQgTW9yZURhdGEodWludDI1NiBldGhBbW91bnQsIHVpbnQyNTYgcHJpY2UpOwoKICAvKioKICAqIEBkZXYgdHJhbnNmZXIgdG9rZW4gZm9yIGEgc3BlY2lmaWVkIGFkZHJlc3MKICAqIEBwYXJhbSBfdG8gVGhlIGFkZHJlc3MgdG8gdHJhbnNmZXIgdG8uCiAgKiBAcGFyYW0gX3ZhbHVlIFRoZSBhbW91bnQgdG8gYmUgdHJhbnNmZXJyZWQuCiAgKi8KICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHdoZW5Ob3RQYXVzZWQgcmV0dXJucyAoYm9vbCkgewogICAgCiAgICByZXF1aXJlKF90byAhPSBhZGRyZXNzKDApKTsKICAgIHJlcXVpcmUoX3ZhbHVlIDw9IGJhbGFuY2VzW21zZy5zZW5kZXJdKTsKCiAgICBpZiAoX3RvID09IHJ1YnVzT3JhbmdlQWRkcmVzcykgewoKICAgICAgdWludDI1NiB3ZWlBbW91bnQgPSBfdmFsdWUubXVsKHdpdGhkcmF3Q29tbWlzc2lvbikuZGl2KHByaWNlRXRoUGVyVG9rZW4pOwoKICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBiYWxhbmNlc1ttc2cuc2VuZGVyXS5zdWIoX3ZhbHVlKTsKICAgICAgdG90YWxTdXBwbHkgPSB0b3RhbFN1cHBseS5zdWIoX3ZhbHVlKTsKCiAgICAgIG1zZy5zZW5kZXIudHJhbnNmZXIod2VpQW1vdW50KTsKICAgICAgZXhpdFdhbGxldC50cmFuc2Zlcih3ZWlBbW91bnQuZGl2KDEwMCkubXVsKHVpbnQyNTYoMTAwKS5zdWIod2l0aGRyYXdDb21taXNzaW9uKSkpOwoKICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgcnVidXNPcmFuZ2VBZGRyZXNzLCBfdmFsdWUpOwogICAgICBNb3JlRGF0YSh3ZWlBbW91bnQsIHByaWNlRXRoUGVyVG9rZW4pOwogICAgICByZXR1cm4gdHJ1ZTsKCiAgICB9IGVsc2UgewogICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IGJhbGFuY2VzW21zZy5zZW5kZXJdLnN1YihfdmFsdWUpOwogICAgICBiYWxhbmNlc1tfdG9dID0gYmFsYW5jZXNbX3RvXS5hZGQoX3ZhbHVlKTsKICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgICBNb3JlRGF0YSgwLCBwcmljZUV0aFBlclRva2VuKTsKICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgfQoKICAvKioKICAqIEBkZXYgR2V0cyB0aGUgYmFsYW5jZSBvZiB0aGUgc3BlY2lmaWVkIGFkZHJlc3MuCiAgKiBAcGFyYW0gX293bmVyIFRoZSBhZGRyZXNzIHRvIHF1ZXJ5IHRoZSB0aGUgYmFsYW5jZSBvZi4gCiAgKiBAcmV0dXJuIEFuIHVpbnQyNTYgcmVwcmVzZW50aW5nIHRoZSBhbW91bnQgb3duZWQgYnkgdGhlIHBhc3NlZCBhZGRyZXNzLgogICovCiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpIHsKICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogIH0KCn0KCmNvbnRyYWN0IEVSQzIwIGlzIEVSQzIwQmFzaWMgewogIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIG93bmVyLCBhZGRyZXNzIHNwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpOwogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIGZyb20sIGFkZHJlc3MgdG8sIHVpbnQyNTYgdmFsdWUpIHJldHVybnMgKGJvb2wpOwogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBzcGVuZGVyLCB1aW50MjU2IHZhbHVlKSByZXR1cm5zIChib29sKTsKICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBzcGVuZGVyLCB1aW50MjU2IHZhbHVlKTsKfQoKY29udHJhY3QgU3RhbmRhcmRUb2tlbiBpcyBFUkMyMCwgQmFzaWNUb2tlbiB7CgogIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsKCiAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgd2hlbk5vdFBhdXNlZCByZXR1cm5zIChib29sKSB7CiAgICAKICAgIHJlcXVpcmUoX3RvICE9IGFkZHJlc3MoMCkpOwogICAgcmVxdWlyZShfdmFsdWUgPD0gYmFsYW5jZXNbX2Zyb21dKTsKICAgIHJlcXVpcmUoX3ZhbHVlIDw9IGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdKTsKCiAgICBpZiAoX3RvID09IHJ1YnVzT3JhbmdlQWRkcmVzcykgewoKICAgICAgdWludDI1NiB3ZWlBbW91bnQgPSBfdmFsdWUubXVsKHdpdGhkcmF3Q29tbWlzc2lvbikuZGl2KHByaWNlRXRoUGVyVG9rZW4pOwoKICAgICAgYmFsYW5jZXNbX2Zyb21dID0gYmFsYW5jZXNbX2Zyb21dLnN1YihfdmFsdWUpOwogICAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA9IGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdLnN1YihfdmFsdWUpOwoKICAgICAgbXNnLnNlbmRlci50cmFuc2Zlcih3ZWlBbW91bnQpOwogICAgICBleGl0V2FsbGV0LnRyYW5zZmVyKHdlaUFtb3VudC5kaXYoMTAwKS5tdWwodWludDI1NigxMDApLnN1Yih3aXRoZHJhd0NvbW1pc3Npb24pKSk7CgogICAgICBUcmFuc2ZlcihfZnJvbSwgcnVidXNPcmFuZ2VBZGRyZXNzLCBfdmFsdWUpOwogICAgICBNb3JlRGF0YSh3ZWlBbW91bnQsIHByaWNlRXRoUGVyVG9rZW4pOwogICAgICByZXR1cm4gdHJ1ZTsKCiAgICB9IGVsc2UgewogICAgICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfdmFsdWUpOwogICAgICAgIGJhbGFuY2VzW19mcm9tXSA9IGJhbGFuY2VzW19mcm9tXS5zdWIoX3ZhbHVlKTsKICAgICAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA9IGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdLnN1YihfdmFsdWUpOwogICAgICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgTW9yZURhdGEoMCwgcHJpY2VFdGhQZXJUb2tlbik7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgfQoKICAvKioKICAgKiBAZGV2IEFwcm92ZSB0aGUgcGFzc2VkIGFkZHJlc3MgdG8gc3BlbmQgdGhlIHNwZWNpZmllZCBhbW91bnQgb2YgdG9rZW5zIG9uIGJlaGFsZiBvZiBtc2cuc2VuZGVyLgogICAqIEBwYXJhbSBfc3BlbmRlciBUaGUgYWRkcmVzcyB3aGljaCB3aWxsIHNwZW5kIHRoZSBmdW5kcy4KICAgKiBAcGFyYW0gX3ZhbHVlIFRoZSBhbW91bnQgb2YgdG9rZW5zIHRvIGJlIHNwZW50LgogICAqLwogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wpIHsKCiAgICAvLyBUbyBjaGFuZ2UgdGhlIGFwcHJvdmUgYW1vdW50IHlvdSBmaXJzdCBoYXZlIHRvIHJlZHVjZSB0aGUgYWRkcmVzc2VzYAogICAgLy8gIGFsbG93YW5jZSB0byB6ZXJvIGJ5IGNhbGxpbmcgYGFwcHJvdmUoX3NwZW5kZXIsIDApYCBpZiBpdCBpcyBub3QKICAgIC8vICBhbHJlYWR5IDAgdG8gbWl0aWdhdGUgdGhlIHJhY2UgY29uZGl0aW9uIGRlc2NyaWJlZCBoZXJlOgogICAgLy8gIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8yMCNpc3N1ZWNvbW1lbnQtMjYzNTI0NzI5CiAgICByZXF1aXJlKChfdmFsdWUgPT0gMCkgfHwgKGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID09IDApKTsKCiAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsKICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgcmV0dXJuIHRydWU7CiAgfQoKICAvKioKICAgKiBAZGV2IEZ1bmN0aW9uIHRvIGNoZWNrIHRoZSBhbW91bnQgb2YgdG9rZW5zIHRoYXQgYW4gb3duZXIgYWxsb3dlZCB0byBhIHNwZW5kZXIuCiAgICogQHBhcmFtIF9vd25lciBhZGRyZXNzIFRoZSBhZGRyZXNzIHdoaWNoIG93bnMgdGhlIGZ1bmRzLgogICAqIEBwYXJhbSBfc3BlbmRlciBhZGRyZXNzIFRoZSBhZGRyZXNzIHdoaWNoIHdpbGwgc3BlbmQgdGhlIGZ1bmRzLgogICAqIEByZXR1cm4gQSB1aW50MjU2IHNwZWNpZmluZyB0aGUgYW1vdW50IG9mIHRva2VucyBzdGlsbCBhdmFpYmxlIGZvciB0aGUgc3BlbmRlci4KICAgKi8KICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKSB7CiAgICByZXR1cm4gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsKICB9Cgp9Cgpjb250cmFjdCBSdWJ1c0Z1bmRPcmFuZ2VUb2tlbiBpcyBTdGFuZGFyZFRva2VuIHsKICAgIAogIGZ1bmN0aW9uICgpIHBheWFibGUgd2hlbk5vdFBhdXNlZCB7CiAgICAKICAgIHVpbnQyNTYgYW1vdW50ID0gbXNnLnZhbHVlOwogICAgYWRkcmVzcyBpbnZlc3RvciA9IG1zZy5zZW5kZXI7CiAgICAKICAgIHVpbnQyNTYgdG9rZW5zID0gYW1vdW50Lm11bChkZXBvc2l0Q29tbWlzc2lvbikubXVsKHByaWNlRXRoUGVyVG9rZW4pLmRpdigxMDAwMCk7CiAgICAKICAgIHRvdGFsU3VwcGx5ID0gdG90YWxTdXBwbHkuYWRkKHRva2Vucyk7CiAgICBiYWxhbmNlc1tpbnZlc3Rvcl0gPSBiYWxhbmNlc1tpbnZlc3Rvcl0uYWRkKHRva2Vucyk7CgogICAgaW52ZXN0V2FsbGV0LnRyYW5zZmVyKGFtb3VudC5kaXYoMTAwKS5tdWwoaW52ZXN0Q29tbWlzc2lvbikpOwogICAgZW50ZXJXYWxsZXQudHJhbnNmZXIoYW1vdW50LmRpdigxMDApLm11bCh1aW50MjU2KDEwMCkuc3ViKGRlcG9zaXRDb21taXNzaW9uKSkpOwogICAgCiAgICBUcmFuc2ZlcihydWJ1c09yYW5nZUFkZHJlc3MsIGludmVzdG9yLCB0b2tlbnMpOwogICAgTW9yZURhdGEoYW1vdW50LCBwcmljZUV0aFBlclRva2VuKTsKICAgIAogIH0KCiAgZnVuY3Rpb24gc2V0UnVidXNPcmFuZ2VBZGRyZXNzKGFkZHJlc3MgX2FkZHJlc3MpIG9ubHlPd25lciB7CiAgICBydWJ1c09yYW5nZUFkZHJlc3MgPSBfYWRkcmVzczsKICB9CgogIGZ1bmN0aW9uIGFkZEV0aGVyKCkgcGF5YWJsZSBvbmx5T3duZXIge30KCiAgZnVuY3Rpb24gZGVsZXRlSW52ZXN0b3JUb2tlbnMoYWRkcmVzcyBpbnZlc3RvciwgdWludDI1NiB0b2tlbnMpIG9ubHlPd25lciB7CiAgICByZXF1aXJlKHRva2VucyA8PSBiYWxhbmNlc1tpbnZlc3Rvcl0pOwoKICAgIGJhbGFuY2VzW2ludmVzdG9yXSA9IGJhbGFuY2VzW2ludmVzdG9yXS5zdWIodG9rZW5zKTsKICAgIHRvdGFsU3VwcGx5ID0gdG90YWxTdXBwbHkuc3ViKHRva2Vucyk7CiAgICBUcmFuc2ZlcihpbnZlc3RvciwgcnVidXNPcmFuZ2VBZGRyZXNzLCB0b2tlbnMpOwogICAgTW9yZURhdGEoMCwgcHJpY2VFdGhQZXJUb2tlbik7CiAgfQoKICBmdW5jdGlvbiBzZXROZXdQcmljZSh1aW50MjU2IF9ldGhQZXJUb2tlbikgb25seU93bmVyIHsKICAgIHByaWNlRXRoUGVyVG9rZW4gPSBfZXRoUGVyVG9rZW47CiAgfQoKICBmdW5jdGlvbiBnZXRXZWkodWludDI1NiB3ZWlBbW91bnQpIG9ubHlPd25lciB7CiAgICBvd25lci50cmFuc2Zlcih3ZWlBbW91bnQpOwogIH0KCiAgZnVuY3Rpb24gYWlyZHJvcChhZGRyZXNzW10gX2FycmF5MSwgdWludDI1NltdIF9hcnJheTIpIG9ubHlPd25lciB7CiAgICBhZGRyZXNzW10gbWVtb3J5IGFycmF5QWRkcmVzcyA9IF9hcnJheTE7CiAgICB1aW50MjU2W10gbWVtb3J5IGFycmF5QW1vdW50ID0gX2FycmF5MjsKICAgIHVpbnQyNTYgYXJyYXlMZW5ndGggPSBhcnJheUFkZHJlc3MubGVuZ3RoLnN1YigxKTsKICAgIHVpbnQyNTYgaSA9IDA7CiAgICAgCiAgICB3aGlsZSAoaSA8PSBhcnJheUxlbmd0aCkgewogICAgICAgIHRvdGFsU3VwcGx5ID0gdG90YWxTdXBwbHkuYWRkKGFycmF5QW1vdW50W2ldKTsKICAgICAgICBiYWxhbmNlc1thcnJheUFkZHJlc3NbaV1dID0gYmFsYW5jZXNbYXJyYXlBZGRyZXNzW2ldXS5hZGQoYXJyYXlBbW91bnRbaV0pOwogICAgICAgIFRyYW5zZmVyKHJ1YnVzT3JhbmdlQWRkcmVzcywgYXJyYXlBZGRyZXNzW2ldLCBhcnJheUFtb3VudFtpXSk7CiAgICAgICAgTW9yZURhdGEoMCwgcHJpY2VFdGhQZXJUb2tlbik7CiAgICAgICAgaSA9IGkuYWRkKDEpOwogICAgfSAgCiAgfQogIAogIGZ1bmN0aW9uIHNldE5ld0RlcG9zaXRDb21taXNzaW9uKHVpbnQyNTYgX25ld0RlcG9zaXRDb21taXNzaW9uKSBvbmx5T3duZXIgewogICAgZGVwb3NpdENvbW1pc3Npb24gPSBfbmV3RGVwb3NpdENvbW1pc3Npb247CiAgfQogIAogIGZ1bmN0aW9uIHNldE5ld0ludmVzdENvbW1pc3Npb24odWludDI1NiBfbmV3SW52ZXN0Q29tbWlzc2lvbikgb25seU93bmVyIHsKICAgIGludmVzdENvbW1pc3Npb24gPSBfbmV3SW52ZXN0Q29tbWlzc2lvbjsKICB9CiAgCiAgZnVuY3Rpb24gc2V0TmV3V2l0aGRyYXdDb21taXNzaW9uKHVpbnQyNTYgX25ld1dpdGhkcmF3Q29tbWlzc2lvbikgb25seU93bmVyIHsKICAgIHdpdGhkcmF3Q29tbWlzc2lvbiA9IF9uZXdXaXRoZHJhd0NvbW1pc3Npb247CiAgfQogIAogIGZ1bmN0aW9uIG5ld0VudGVyV2FsbGV0KGFkZHJlc3MgX2VudGVyV2FsbGV0KSBvbmx5T3duZXIgewogICAgZW50ZXJXYWxsZXQgPSBfZW50ZXJXYWxsZXQ7CiAgfQogIAogIGZ1bmN0aW9uIG5ld0ludmVzdFdhbGxldChhZGRyZXNzIF9pbnZlc3RXYWxsZXQpIG9ubHlPd25lciB7CiAgICBpbnZlc3RXYWxsZXQgPSBfaW52ZXN0V2FsbGV0OwogIH0KICAKICBmdW5jdGlvbiBuZXdFeGl0V2FsbGV0KGFkZHJlc3MgX2V4aXRXYWxsZXQpIG9ubHlPd25lciB7CiAgICBleGl0V2FsbGV0ID0gX2V4aXRXYWxsZXQ7CiAgfQogIAp9'.
	

]
