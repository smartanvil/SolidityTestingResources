Class {
	#name : #SRT26436e73fdd02adde8ae7ab61fa660d6f7926e6f,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT26436e73fdd02adde8ae7ab61fa660d6f7926e6f >> base64 [
	^ ''.
	

]
