Class {
	#name : #SRT9e2b209afc38b74b3278b4e3e2e61dcefc752bb2,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT9e2b209afc38b74b3278b4e3e2e61dcefc752bb2 >> base64 [
	^ ''.
	

]
