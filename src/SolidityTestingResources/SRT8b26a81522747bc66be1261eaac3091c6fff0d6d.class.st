Class {
	#name : #SRT8b26a81522747bc66be1261eaac3091c6fff0d6d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT8b26a81522747bc66be1261eaac3091c6fff0d6d >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTM7Cgpjb250cmFjdCBPd25hYmxlIHsKICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKCgogIGV2ZW50IE93bmVyc2hpcFRyYW5zZmVycmVkKGFkZHJlc3MgaW5kZXhlZCBwcmV2aW91c093bmVyLCBhZGRyZXNzIGluZGV4ZWQgbmV3T3duZXIpOwoKCiAgLyoqCiAgICogQGRldiBUaGUgT3duYWJsZSBjb25zdHJ1Y3RvciBzZXRzIHRoZSBvcmlnaW5hbCBgb3duZXJgIG9mIHRoZSBjb250cmFjdCB0byB0aGUgc2VuZGVyCiAgICogYWNjb3VudC4KICAgKi8KICBmdW5jdGlvbiBPd25hYmxlKCkgcHVibGljIHsKICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICB9CgogIC8qKgogICAqIEBkZXYgVGhyb3dzIGlmIGNhbGxlZCBieSBhbnkgYWNjb3VudCBvdGhlciB0aGFuIHRoZSBvd25lci4KICAgKi8KICBtb2RpZmllciBvbmx5T3duZXIoKSB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgXzsKICB9CgogIC8qKgogICAqIEBkZXYgQWxsb3dzIHRoZSBjdXJyZW50IG93bmVyIHRvIHRyYW5zZmVyIGNvbnRyb2wgb2YgdGhlIGNvbnRyYWN0IHRvIGEgbmV3T3duZXIuCiAgICogQHBhcmFtIG5ld093bmVyIFRoZSBhZGRyZXNzIHRvIHRyYW5zZmVyIG93bmVyc2hpcCB0by4KICAgKi8KICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld093bmVyKSBwdWJsaWMgb25seU93bmVyIHsKICAgIHJlcXVpcmUobmV3T3duZXIgIT0gYWRkcmVzcygwKSk7CiAgICBlbWl0IE93bmVyc2hpcFRyYW5zZmVycmVkKG93bmVyLCBuZXdPd25lcik7CiAgICBvd25lciA9IG5ld093bmVyOwogIH0KCn0KCmxpYnJhcnkgU2FmZU1hdGggewoKICAvKioKICAqIEBkZXYgTXVsdGlwbGllcyB0d28gbnVtYmVycywgdGhyb3dzIG9uIG92ZXJmbG93LgogICovCiAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIGlmIChhID09IDApIHsKICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICB1aW50MjU2IGMgPSBhICogYjsKICAgIGFzc2VydChjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgLyoqCiAgKiBAZGV2IEludGVnZXIgZGl2aXNpb24gb2YgdHdvIG51bWJlcnMsIHRydW5jYXRpbmcgdGhlIHF1b3RpZW50LgogICovCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIC8vIGFzc2VydChiID4gMCk7IC8vIFNvbGlkaXR5IGF1dG9tYXRpY2FsbHkgdGhyb3dzIHdoZW4gZGl2aWRpbmcgYnkgMAogICAgdWludDI1NiBjID0gYSAvIGI7CiAgICAvLyBhc3NlcnQoYSA9PSBiICogYyArIGEgJSBiKTsgLy8gVGhlcmUgaXMgbm8gY2FzZSBpbiB3aGljaCB0aGlzIGRvZXNuJ3QgaG9sZAogICAgcmV0dXJuIGM7CiAgfQoKICAvKioKICAqIEBkZXYgU3Vic3RyYWN0cyB0d28gbnVtYmVycywgdGhyb3dzIG9uIG92ZXJmbG93IChpLmUuIGlmIHN1YnRyYWhlbmQgaXMgZ3JlYXRlciB0aGFuIG1pbnVlbmQpLgogICovCiAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIGFzc2VydChiIDw9IGEpOwogICAgcmV0dXJuIGEgLSBiOwogIH0KCiAgLyoqCiAgKiBAZGV2IEFkZHMgdHdvIG51bWJlcnMsIHRocm93cyBvbiBvdmVyZmxvdy4KICAqLwogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhICsgYjsKICAgIGFzc2VydChjID49IGEpOwogICAgcmV0dXJuIGM7CiAgfQp9Cgpjb250cmFjdCBEaXN0cmlidXRpb24gaXMgT3duYWJsZSB7CiAgICB1c2luZyBTYWZlTWF0aCBmb3IgdWludDI1NjsKCiAgICBzdHJ1Y3QgUmVjaXBpZW50IHsKICAgICAgICBhZGRyZXNzIGFkZHI7CiAgICAgICAgdWludDI1NiBzaGFyZTsKICAgICAgICB1aW50MjU2IGJhbGFuY2U7CiAgICAgICAgdWludDI1NiByZWNlaXZlZDsKICAgIH0KCiAgICB1aW50MjU2IHNoYXJlc1N1bTsKICAgIHVpbnQ4IGNvbnN0YW50IG1heFJlY3NBbW91bnQgPSAxMjsKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiBSZWNpcGllbnQpIHB1YmxpYyByZWNzOwogICAgYWRkcmVzc1ttYXhSZWNzQW1vdW50XSBwdWJsaWMgcmVjc0xvb2tVcFRhYmxlOyAvL3RvIGl0ZXJhdGUKCiAgICBldmVudCBQYXltZW50KGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiB2YWx1ZSk7CiAgICBldmVudCBBZGRTaGFyZShhZGRyZXNzIHRvLCB1aW50MjU2IHZhbHVlKTsKICAgIGV2ZW50IENoYW5nZVNoYXJlKGFkZHJlc3MgdG8sIHVpbnQyNTYgdmFsdWUpOwogICAgZXZlbnQgRGVsZXRlU2hhcmUoYWRkcmVzcyB0byk7CiAgICBldmVudCBDaGFuZ2VBZGRlc3NTaGFyZShhZGRyZXNzIG5ld0FkZHJlc3MpOwogICAgZXZlbnQgRm91bmRzUmVjZWl2ZWQodWludDI1NiB2YWx1ZSk7CgogICAgZnVuY3Rpb24gRGlzdHJpYnV0aW9uKCkgcHVibGljIHsKICAgICAgICBzaGFyZXNTdW0gPSAwOwogICAgfQoKICAgIGZ1bmN0aW9uIHJlY2VpdmVGdW5kcygpIHB1YmxpYyBwYXlhYmxlIHsKICAgICAgICBlbWl0IEZvdW5kc1JlY2VpdmVkKG1zZy52YWx1ZSk7CiAgICAgICAgZm9yICh1aW50OCBpID0gMDsgaSA8IG1heFJlY3NBbW91bnQ7IGkrKykgewogICAgICAgICAgICBSZWNpcGllbnQgc3RvcmFnZSByZWMgPSByZWNzW3JlY3NMb29rVXBUYWJsZVtpXV07CiAgICAgICAgICAgIHVpbnQgZXRoQW1vdW50ID0gKHJlYy5zaGFyZS5tdWwobXNnLnZhbHVlKSkuZGl2KHNoYXJlc1N1bSk7CiAgICAgICAgICAgIHJlYy5iYWxhbmNlID0gcmVjLmJhbGFuY2UgKyBldGhBbW91bnQ7CiAgICAgICAgfQogICAgfQoKICAgIG1vZGlmaWVyIG9ubHlNZW1iZXJzKCl7CiAgICAgICAgcmVxdWlyZShyZWNzW21zZy5zZW5kZXJdLmFkZHIgIT0gYWRkcmVzcygwKSk7CiAgICAgICAgXzsKICAgIH0KCiAgICBmdW5jdGlvbiBkb1BheW1lbnRzKCkgcHVibGljIHsKICAgICAgICBSZWNpcGllbnQgc3RvcmFnZSByZWMgPSByZWNzW21zZy5zZW5kZXJdOwogICAgICAgIHJlcXVpcmUocmVjLmJhbGFuY2UgPj0gMWUxMik7CiAgICAgICAgcmVjLmFkZHIudHJhbnNmZXIocmVjLmJhbGFuY2UpOwogICAgICAgIGVtaXQgUGF5bWVudChyZWMuYWRkciwgcmVjLmJhbGFuY2UpOwogICAgICAgIHJlYy5yZWNlaXZlZCA9IChyZWMucmVjZWl2ZWQpLmFkZChyZWMuYmFsYW5jZSk7CiAgICAgICAgcmVjLmJhbGFuY2UgPSAwOwogICAgfQoKICAgIGZ1bmN0aW9uIGFkZFNoYXJlKGFkZHJlc3MgX3JlYywgdWludDI1NiBzaGFyZSkgcHVibGljIG9ubHlPd25lciB7CiAgICAgICAgcmVxdWlyZShfcmVjICE9IGFkZHJlc3MoMCkpOwogICAgICAgIHJlcXVpcmUoc2hhcmUgPiAwKTsKICAgICAgICByZXF1aXJlKHJlY3NbX3JlY10uYWRkciA9PSBhZGRyZXNzKDApKTsKICAgICAgICByZWNzW19yZWNdLmFkZHIgPSBfcmVjOwogICAgICAgIHJlY3NbX3JlY10uc2hhcmUgPSBzaGFyZTsKICAgICAgICByZWNzW19yZWNdLnJlY2VpdmVkID0gMDsKICAgICAgICBmb3IodWludDggaSA9IDA7IGkgPCBtYXhSZWNzQW1vdW50OyBpKysgKSB7CiAgICAgICAgICAgIGlmIChyZWNzTG9va1VwVGFibGVbaV0gPT0gYWRkcmVzcygwKSkgewogICAgICAgICAgICAgICAgcmVjc0xvb2tVcFRhYmxlW2ldID0gX3JlYzsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHNoYXJlc1N1bSA9IHNoYXJlc1N1bS5hZGQoc2hhcmUpOwogICAgICAgIGVtaXQgQWRkU2hhcmUoX3JlYywgc2hhcmUpOwogICAgfQoKICAgIGZ1bmN0aW9uIGNoYW5nZVNoYXJlKGFkZHJlc3MgX3JlYywgdWludCBzaGFyZSkgcHVibGljIG9ubHlPd25lciB7CiAgICAgICAgcmVxdWlyZShfcmVjICE9IGFkZHJlc3MoMCkpOwogICAgICAgIHJlcXVpcmUoc2hhcmUgPiAwKTsKICAgICAgICByZXF1aXJlKHJlY3NbX3JlY10uYWRkciAhPSBhZGRyZXNzKDApKTsKICAgICAgICBSZWNpcGllbnQgc3RvcmFnZSByZWMgPSByZWNzW19yZWNdOwogICAgICAgIHNoYXJlc1N1bSA9IHNoYXJlc1N1bS5zdWIocmVjLnNoYXJlKS5hZGQoc2hhcmUpOwogICAgICAgIHJlYy5zaGFyZSA9IHNoYXJlOwogICAgICAgIGVtaXQgQ2hhbmdlU2hhcmUoX3JlYywgc2hhcmUpOwogICAgfQoKICAgIGZ1bmN0aW9uIGRlbGV0ZVNoYXJlKGFkZHJlc3MgX3JlYykgcHVibGljIG9ubHlPd25lciB7CiAgICAgICAgcmVxdWlyZShfcmVjICE9IGFkZHJlc3MoMCkpOwogICAgICAgIHJlcXVpcmUocmVjc1tfcmVjXS5hZGRyICE9IGFkZHJlc3MoMCkpOwogICAgICAgIHNoYXJlc1N1bSA9IHNoYXJlc1N1bS5zdWIocmVjc1tfcmVjXS5zaGFyZSk7CiAgICAgICAgZm9yKHVpbnQ4IGkgPSAwOyBpIDwgbWF4UmVjc0Ftb3VudDsgaSsrICkgewogICAgICAgICAgICBpZiAocmVjc0xvb2tVcFRhYmxlW2ldID09IHJlY3NbX3JlY10uYWRkcikgewogICAgICAgICAgICAgICAgcmVjc0xvb2tVcFRhYmxlW2ldID0gYWRkcmVzcygwKTsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGRlbGV0ZSByZWNzW19yZWNdOwogICAgICAgIGVtaXQgRGVsZXRlU2hhcmUobXNnLnNlbmRlcik7CiAgICB9CgogICAgZnVuY3Rpb24gY2hhbmdlUmVjaXBpZW50QWRkcmVzcyhhZGRyZXNzIF9uZXdSZWMpIHB1YmxpYyB7CiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyICE9IGFkZHJlc3MoMCkpOwogICAgICAgIHJlcXVpcmUoX25ld1JlYyAhPSBhZGRyZXNzKDApKTsKICAgICAgICByZXF1aXJlKHJlY3NbbXNnLnNlbmRlcl0uYWRkciAhPSBhZGRyZXNzKDApKTsKICAgICAgICByZXF1aXJlKHJlY3NbX25ld1JlY10uYWRkciA9PSBhZGRyZXNzKDApKTsKICAgICAgICByZXF1aXJlKHJlY3NbbXNnLnNlbmRlcl0uYWRkciAhPSBfbmV3UmVjKTsKCiAgICAgICAgUmVjaXBpZW50IHN0b3JhZ2UgcmVjID0gcmVjc1ttc2cuc2VuZGVyXTsKICAgICAgICB1aW50MjU2IHByZXZCYWxhbmNlID0gcmVjLmJhbGFuY2U7CiAgICAgICAgYWRkU2hhcmUoX25ld1JlYywgcmVjLnNoYXJlKTsKICAgICAgICBlbWl0IENoYW5nZUFkZGVzc1NoYXJlKF9uZXdSZWMpOwogICAgICAgIGRlbGV0ZVNoYXJlKG1zZy5zZW5kZXIpOwogICAgICAgIHJlY3NbX25ld1JlY10uYmFsYW5jZSA9IHByZXZCYWxhbmNlOwogICAgICAgIGVtaXQgRGVsZXRlU2hhcmUobXNnLnNlbmRlcik7CgogICAgfQoKICAgIGZ1bmN0aW9uIGdldE15QmFsYW5jZSgpIHB1YmxpYyB2aWV3IHJldHVybnModWludDI1NikgewogICAgICAgIHJldHVybiByZWNzW21zZy5zZW5kZXJdLmJhbGFuY2U7CiAgICB9Cn0='.
	

]
