Class {
	#name : #SRTb6bbf89c3dbba20cb4d5cabaa4a386acbbab455e,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTb6bbf89c3dbba20cb4d5cabaa4a386acbbab455e >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7Cgpjb250cmFjdCBFVEhNYXAgewoKICAgIC8vLyBJbml0aWFsIHByaWNlIHpvbmUgKD0gTFVYKQogICAgLy8vIHNldCBhdCAwLjAwMSBFdGgKICAgIHVpbnQgaW5pdGlhbFpvbmVQcmljZSA9IDEwMDAwMDAwMDAwMDAwMDAgd2VpOwoKICAgIC8vLyBjb250cmFjdE93bmVyIGFkZHJlc3MKICAgIGFkZHJlc3MgY29udHJhY3RPd25lcjsKCiAgICAvLy8gVXNlcnMgcGVuZGluZyB3aXRoZHJhd2FscwogICAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQpIHBlbmRpbmdXaXRoZHJhd2FsczsKCiAgICAvLy8gWm9uZSBzdHJ1Y3R1cmVzIG1hcHBpbmcKICAgIG1hcHBpbmcodWludCA9PiBab25lKSB6b25lU3RydWN0czsKICAgIHVpbnRbXSB6b25lTGlzdDsKCiAgICBzdHJ1Y3QgWm9uZSB7CiAgICAgICAgdWludCBpZDsKICAgICAgICBhZGRyZXNzIG93bmVyOwogICAgICAgIHVpbnQgc2VsbFByaWNlOwogICAgfQoKICAgIC8vLyBDb25zdHJ1Y3RvcgogICAgZnVuY3Rpb24gRVRITWFwKCkgcHVibGljIHsKICAgICAgY29udHJhY3RPd25lciA9IG1zZy5zZW5kZXI7CiAgICB9CgogICAgbW9kaWZpZXIgb25seUNvbnRyYWN0T3duZXIoKQogICAgewogICAgICAgLy8gVGhyb3dzIGlmIGNhbGxlZCBieSBhbnkgYWNjb3VudCBvdGhlciB0aGFuIHRoZSBjb250cmFjdCBvd25lcgogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBjb250cmFjdE93bmVyKTsKICAgICAgICBfOwogICAgfQoKICAgIG1vZGlmaWVyIG9ubHlWYWxpZFpvbmUodWludCB6b25lSWQpCiAgICB7CiAgICAgICAvLyBUaHJvd3MgaWYgem9uZSBpZCBpcyBub3QgdmFsaWQKICAgICAgICByZXF1aXJlKHpvbmVJZCA+PSAxICYmIHpvbmVJZCA8PSAxNzgpOwogICAgICAgIF87CiAgICB9CgogICAgbW9kaWZpZXIgb25seVpvbmVPd25lcih1aW50IHpvbmVJZCkKICAgIHsKICAgICAgIC8vIFRocm93cyBpZiBjYWxsZWQgYnkgYW55IGFjY291bnQgb3RoZXIgdGhhbiB0aGUgem9uZSBvd25lcgogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSB6b25lU3RydWN0c1t6b25lSWRdLm93bmVyKTsKICAgICAgICBfOwogICAgfQoKICAgIGZ1bmN0aW9uIGJ1eVpvbmUodWludCB6b25lSWQpIHB1YmxpYwogICAgICBvbmx5VmFsaWRab25lKHpvbmVJZCkKICAgICAgcGF5YWJsZQogICAgcmV0dXJucyAoYm9vbCBzdWNjZXNzKQogICAgewogICAgICAgIC8vIFRocm93IGlmIHpvbmUgaXMgbm90IG9uIHNhbGUKICAgICAgICBpZiAoem9uZVN0cnVjdHNbem9uZUlkXS5vd25lciAhPSBhZGRyZXNzKDApKSB7CiAgICAgICAgICByZXF1aXJlKHpvbmVTdHJ1Y3RzW3pvbmVJZF0uc2VsbFByaWNlICE9IDApOwogICAgICAgIH0KICAgICAgICAvLyBUaHJvdyBpZiBhbW91bnQgc2VudCBpcyBub3Qgc3VmZmljaWVudAogICAgICAgIHVpbnQgbWluUHJpY2UgPSAoem9uZVN0cnVjdHNbem9uZUlkXS5vd25lciA9PSBhZGRyZXNzKDApKSA/IGNvbXB1dGVJbml0aWFsUHJpY2Uoem9uZUlkKSA6IHpvbmVTdHJ1Y3RzW3pvbmVJZF0uc2VsbFByaWNlOwogICAgICAgIHJlcXVpcmUobXNnLnZhbHVlID49IG1pblByaWNlKTsKICAgICAgICAvLyBJZiBpbml0aWFsIHNhbGUKICAgICAgICBpZiAoem9uZVN0cnVjdHNbem9uZUlkXS5vd25lciA9PSBhZGRyZXNzKDApKSB7CiAgICAgICAgICAgIC8vIE5vIGN1cnJlbnQgb3duZXJzLCBjcmVkaXQgY29udHJhY3Qgb3duZXIgYmFsYW5jZQogICAgICAgICAgICBwZW5kaW5nV2l0aGRyYXdhbHNbY29udHJhY3RPd25lcl0gKz0gbXNnLnZhbHVlOwogICAgICAgICAgICAvLyBJbml0IHpvbmUKICAgICAgICAgICAgem9uZVN0cnVjdHNbem9uZUlkXS5pZCA9IHpvbmVJZDsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgLy8gQ29udHJhY3Qgb3duZXIgdGFrZSAyJSBjdXQgb24gdHJhbnNhY3Rpb24KICAgICAgICAgIHVpbnQyNTYgY29udHJhY3RPd25lckN1dCA9IChtc2cudmFsdWUgKiAyMDApIC8gMTAwMDA7CiAgICAgICAgICB1aW50MjU2IG93bmVyc1NoYXJlID0gbXNnLnZhbHVlIC0gY29udHJhY3RPd25lckN1dDsKICAgICAgICAgIC8vIENyZWRpdCBjb250cmFjdCBvd25lcgogICAgICAgICAgcGVuZGluZ1dpdGhkcmF3YWxzW2NvbnRyYWN0T3duZXJdICs9IGNvbnRyYWN0T3duZXJDdXQ7CiAgICAgICAgICAvLyBDcmVkaXQgem9uZSBvd25lcgogICAgICAgICAgYWRkcmVzcyBvd25lckFkZHJlc3MgPSB6b25lU3RydWN0c1t6b25lSWRdLm93bmVyOwogICAgICAgICAgcGVuZGluZ1dpdGhkcmF3YWxzW293bmVyQWRkcmVzc10gKz0gb3duZXJzU2hhcmU7CiAgICAgICAgfQoKICAgICAgICB6b25lU3RydWN0c1t6b25lSWRdLm93bmVyID0gbXNnLnNlbmRlcjsKICAgICAgICB6b25lU3RydWN0c1t6b25lSWRdLnNlbGxQcmljZSA9IDA7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgLy8vIEFsbG93IG93bmVyIHRvIHNlbGwgaGlzIHpvbmUKICAgIGZ1bmN0aW9uIHNlbGxab25lKHVpbnQgem9uZUlkLCB1aW50IGFtb3VudCkgcHVibGljCiAgICAgICAgb25seVZhbGlkWm9uZSh6b25lSWQpCiAgICAgICAgb25seVpvbmVPd25lcih6b25lSWQpCiAgICAgICAgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSAKICAgIHsKICAgICAgICB6b25lU3RydWN0c1t6b25lSWRdLnNlbGxQcmljZSA9IGFtb3VudDsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICAvLy8gQWxsb3cgb3duZXIgdG8gdHJhbnNmZXIgaGlzIHpvbmUKICAgIGZ1bmN0aW9uIHRyYW5zZmVyWm9uZSh1aW50IHpvbmVJZCwgYWRkcmVzcyByZWNpcGllbnQpIHB1YmxpYwogICAgICAgIG9ubHlWYWxpZFpvbmUoem9uZUlkKQogICAgICAgIG9ubHlab25lT3duZXIoem9uZUlkKQogICAgICAgIHJldHVybnMgKGJvb2wgc3VjY2VzcykgCiAgICB7CiAgICAgICAgem9uZVN0cnVjdHNbem9uZUlkXS5vd25lciA9IHJlY2lwaWVudDsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICAvLy8gQ29tcHV0ZSBpbml0aWFsIHpvbmUgcHJpY2UKICAgIGZ1bmN0aW9uIGNvbXB1dGVJbml0aWFsUHJpY2UodWludCB6b25lSWQpIHB1YmxpYyB2aWV3CiAgICAgICAgb25seVZhbGlkWm9uZSh6b25lSWQpCiAgICAgICAgcmV0dXJucyAodWludCBwcmljZSkKICAgIHsKICAgICAgICByZXR1cm4gaW5pdGlhbFpvbmVQcmljZSArICgoem9uZUlkIC0gMSkgKiAoaW5pdGlhbFpvbmVQcmljZSAvIDIpKTsKICAgIH0KCiAgICAvLy8gUmV0dXJuIHpvbmUgZGV0YWlscwogICAgZnVuY3Rpb24gZ2V0Wm9uZSh1aW50IHpvbmVJZCkgcHVibGljIGNvbnN0YW50CiAgICAgICAgb25seVZhbGlkWm9uZSh6b25lSWQpCiAgICAgICAgcmV0dXJucyh1aW50IGlkLCBhZGRyZXNzIG93bmVyLCB1aW50IHNlbGxQcmljZSkKICAgIHsKICAgICAgICByZXR1cm4gKAogICAgICAgICAgem9uZVN0cnVjdHNbem9uZUlkXS5pZCwKICAgICAgICAgIHpvbmVTdHJ1Y3RzW3pvbmVJZF0ub3duZXIsCiAgICAgICAgICB6b25lU3RydWN0c1t6b25lSWRdLnNlbGxQcmljZQogICAgICAgICk7CiAgICB9CgogICAgLy8vIFJldHVybiBiYWxhbmNlIGZyb20gc2VuZGVyCiAgICBmdW5jdGlvbiBnZXRCYWxhbmNlKCkgcHVibGljIHZpZXcKICAgICAgcmV0dXJucyAodWludCBhbW91bnQpCiAgICB7CiAgICAgICAgcmV0dXJuIHBlbmRpbmdXaXRoZHJhd2Fsc1ttc2cuc2VuZGVyXTsKICAgIH0KCiAgICAvLy8gQWxsb3cgYWRkcmVzcyB0byB3aXRoZHJhdyB0aGVpciBiYWxhbmNlCiAgICBmdW5jdGlvbiB3aXRoZHJhdygpIHB1YmxpYwogICAgICAgIHJldHVybnMgKGJvb2wgc3VjY2VzcykgCiAgICB7CiAgICAgICAgdWludCBhbW91bnQgPSBwZW5kaW5nV2l0aGRyYXdhbHNbbXNnLnNlbmRlcl07CiAgICAgICAgcGVuZGluZ1dpdGhkcmF3YWxzW21zZy5zZW5kZXJdID0gMDsKICAgICAgICBtc2cuc2VuZGVyLnRyYW5zZmVyKGFtb3VudCk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgLy8vIEFsbG93IGNvbnRyYWN0IG93bmVyIHRvIGNoYW5nZSBhZGRyZXNzCiAgICBmdW5jdGlvbiB0cmFuc2ZlckNvbnRyYWN0T3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpIHB1YmxpYwogICAgICAgIG9ubHlDb250cmFjdE93bmVyKCkKICAgICAgICByZXR1cm5zIChib29sIHN1Y2Nlc3MpIAogICAgewogICAgICAgIGNvbnRyYWN0T3duZXIgPSBuZXdPd25lcjsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCn0='.
	

]
