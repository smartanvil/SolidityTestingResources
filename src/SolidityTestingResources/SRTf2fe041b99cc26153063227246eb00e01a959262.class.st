Class {
	#name : #SRTf2fe041b99cc26153063227246eb00e01a959262,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTf2fe041b99cc26153063227246eb00e01a959262 >> base64 [
	^ ''.
	

]
