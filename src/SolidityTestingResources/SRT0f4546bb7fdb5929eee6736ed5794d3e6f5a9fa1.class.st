Class {
	#name : #SRT0f4546bb7fdb5929eee6736ed5794d3e6f5a9fa1,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT0f4546bb7fdb5929eee6736ed5794d3e6f5a9fa1 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTA7Cgpjb250cmFjdCBUb2tlbiB7CiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsKCQogICAgLy8vIEBwYXJhbSBfb3duZXIgVGhlIGFkZHJlc3MgZnJvbSB3aGljaCB0aGUgYmFsYW5jZSB3aWxsIGJlIHJldHJpZXZlZAogICAgLy8vIEByZXR1cm4gVGhlIGJhbGFuY2UJCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSk7CgkKICAgIC8vLyBAbm90aWNlIHNlbmQgYF92YWx1ZWAgdG9rZW4gdG8gYF90b2AgZnJvbSBgbXNnLnNlbmRlcmAKICAgIC8vLyBAcGFyYW0gX3RvIFRoZSBhZGRyZXNzIG9mIHRoZSByZWNpcGllbnQKICAgIC8vLyBAcGFyYW0gX3ZhbHVlIFRoZSBhbW91bnQgb2YgdG9rZW4gdG8gYmUgdHJhbnNmZXJyZWQKICAgIC8vLyBAcmV0dXJuIFdoZXRoZXIgdGhlIHRyYW5zZmVyIHdhcyBzdWNjZXNzZnVsIG9yIG5vdAkKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKCQogICAgLy8vIEBub3RpY2Ugc2VuZCBgX3ZhbHVlYCB0b2tlbiB0byBgX3RvYCBmcm9tIGBfZnJvbWAgb24gdGhlIGNvbmRpdGlvbiBpdCBpcyBhcHByb3ZlZCBieSBgX2Zyb21gCiAgICAvLy8gQHBhcmFtIF9mcm9tIFRoZSBhZGRyZXNzIG9mIHRoZSBzZW5kZXIKICAgIC8vLyBAcGFyYW0gX3RvIFRoZSBhZGRyZXNzIG9mIHRoZSByZWNpcGllbnQKICAgIC8vLyBAcGFyYW0gX3ZhbHVlIFRoZSBhbW91bnQgb2YgdG9rZW4gdG8gYmUgdHJhbnNmZXJyZWQKICAgIC8vLyBAcmV0dXJuIFdoZXRoZXIgdGhlIHRyYW5zZmVyIHdhcyBzdWNjZXNzZnVsIG9yIG5vdAkKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CgkKICAgIC8vLyBAbm90aWNlIGBtc2cuc2VuZGVyYCBhcHByb3ZlcyBgX3NwZW5kZXJgIHRvIHNwZW5kIGBfdmFsdWVgIHRva2VucwogICAgLy8vIEBwYXJhbSBfc3BlbmRlciBUaGUgYWRkcmVzcyBvZiB0aGUgYWNjb3VudCBhYmxlIHRvIHRyYW5zZmVyIHRoZSB0b2tlbnMKICAgIC8vLyBAcGFyYW0gX3ZhbHVlIFRoZSBhbW91bnQgb2YgdG9rZW5zIHRvIGJlIGFwcHJvdmVkIGZvciB0cmFuc2ZlcgogICAgLy8vIEByZXR1cm4gV2hldGhlciB0aGUgYXBwcm92YWwgd2FzIHN1Y2Nlc3NmdWwgb3Igbm90CQogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKCQogICAgLy8vIEBwYXJhbSBfb3duZXIgVGhlIGFkZHJlc3Mgb2YgdGhlIGFjY291bnQgb3duaW5nIHRva2VucwogICAgLy8vIEBwYXJhbSBfc3BlbmRlciBUaGUgYWRkcmVzcyBvZiB0aGUgYWNjb3VudCBhYmxlIHRvIHRyYW5zZmVyIHRoZSB0b2tlbnMKICAgIC8vLyBAcmV0dXJuIEFtb3VudCBvZiByZW1haW5pbmcgdG9rZW5zIGFsbG93ZWQgdG8gc3BlbnQJCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKTsKCQogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50MjU2IF92YWx1ZSk7CiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKTsKfQoKY29udHJhY3QgSU1pZ3JhdGlvbkNvbnRyYWN0IHsKICAgIGZ1bmN0aW9uIG1pZ3JhdGUoYWRkcmVzcyBhZGRyLCB1aW50MjU2IHVpcCkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKfQoKY29udHJhY3QgU2FmZU1hdGggewoKICAgIGZ1bmN0aW9uIHNhZmVBZGQodWludDI1NiB4LCB1aW50MjU2IHkpIGludGVybmFsIHJldHVybnModWludDI1NikgewogICAgICB1aW50MjU2IHogPSB4ICsgeTsKICAgICAgYXNzZXJ0KCh6ID49IHgpICYmICh6ID49IHkpKTsKICAgICAgcmV0dXJuIHo7CiAgICB9CgogICAgZnVuY3Rpb24gc2FmZVN1YnRyYWN0KHVpbnQyNTYgeCwgdWludDI1NiB5KSBpbnRlcm5hbCByZXR1cm5zKHVpbnQyNTYpIHsKICAgICAgYXNzZXJ0KHggPj0geSk7CiAgICAgIHVpbnQyNTYgeiA9IHggLSB5OwogICAgICByZXR1cm4gejsKICAgIH0KCiAgICBmdW5jdGlvbiBzYWZlTXVsdCh1aW50MjU2IHgsIHVpbnQyNTYgeSkgaW50ZXJuYWwgcmV0dXJucyh1aW50MjU2KSB7CiAgICAgIHVpbnQyNTYgeiA9IHggKiB5OwogICAgICBhc3NlcnQoKHggPT0gMCl8fCh6L3ggPT0geSkpOwogICAgICByZXR1cm4gejsKICAgIH0KCn0KCi8qICBFUkMgMjAgdG9rZW4gKi8KY29udHJhY3QgU3RhbmRhcmRUb2tlbiBpcyBUb2tlbiB7CgogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgaWYgKGJhbGFuY2VzW21zZy5zZW5kZXJdID49IF92YWx1ZSAmJiBfdmFsdWUgPiAwKSB7CiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOwogICAgICAgIGJhbGFuY2VzW190b10gKz0gX3ZhbHVlOwogICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgaWYgKGJhbGFuY2VzW19mcm9tXSA+PSBfdmFsdWUgJiYgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gPj0gX3ZhbHVlICYmIF92YWx1ZSA+IDApIHsKICAgICAgICBiYWxhbmNlc1tfdG9dICs9IF92YWx1ZTsKICAgICAgICBiYWxhbmNlc1tfZnJvbV0gLT0gX3ZhbHVlOwogICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdIC09IF92YWx1ZTsKICAgICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7CiAgICAgICAgcmV0dXJuIGJhbGFuY2VzW19vd25lcl07CiAgICB9CgogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHJlbWFpbmluZykgewogICAgICByZXR1cm4gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsKICAgIH0KCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIGJhbGFuY2VzOwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBhbGxvd2VkOwp9Cgpjb250cmFjdCBIb3VzZUNvdXBvblRva2VuIGlzIFN0YW5kYXJkVG9rZW4sIFNhZmVNYXRoIHsKCiAgICAvLyBtZXRhZGF0YQogICAgc3RyaW5nICBwdWJsaWMgY29uc3RhbnQgbmFtZSA9ICJIb3VzZSBDb3Vwb24gVG9rZW4iOwogICAgc3RyaW5nICBwdWJsaWMgY29uc3RhbnQgc3ltYm9sID0gIkhDVCI7CiAgICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCBkZWNpbWFscyA9IDE4OwogICAgc3RyaW5nICBwdWJsaWMgdmVyc2lvbiA9ICIxLjAiOwoKICAgIC8vIGNvbnRyYWN0cwogICAgYWRkcmVzcyBwdWJsaWMgZXRoRnVuZERlcG9zaXQ7ICAgICAgICAgIC8vIGRlcG9zaXQgYWRkcmVzcyBmb3IgRVRIIGZvciBVbmxpbWl0ZWRJUCBUZWFtLgogICAgYWRkcmVzcyBwdWJsaWMgbmV3Q29udHJhY3RBZGRyOyAgICAgICAgIC8vIHRoZSBuZXcgY29udHJhY3QgZm9yIFVubGltaXRlZElQIHRva2VuIHVwZGF0ZXM7CgogICAgLy8gY3Jvd2RzYWxlIHBhcmFtZXRlcnMKICAgIGJvb2wgICAgcHVibGljIGlzRnVuZGluZzsgICAgICAgICAgICAgICAgLy8gc3dpdGNoZWQgdG8gdHJ1ZSBpbiBvcGVyYXRpb25hbCBzdGF0ZQogICAgdWludDI1NiBwdWJsaWMgZnVuZGluZ1N0YXJ0QmxvY2s7CiAgICB1aW50MjU2IHB1YmxpYyBmdW5kaW5nU3RvcEJsb2NrOwoKICAgIHVpbnQyNTYgcHVibGljIGN1cnJlbnRTdXBwbHk7ICAgICAgICAgICAvLyBjdXJyZW50IHN1cHBseSB0b2tlbnMgZm9yIHNlbGwKICAgIHVpbnQyNTYgcHVibGljIHRva2VuUmFpc2VkID0gMDsgICAgICAgICAvLyB0aGUgbnVtYmVyIG9mIHRvdGFsIHNvbGQgdG9rZW4KICAgIHVpbnQyNTYgcHVibGljIHRva2VuTWlncmF0ZWQgPSAwOyAgICAgLy8gdGhlIG51bWJlciBvZiB0b3RhbCB0cmFuc2ZlcnRlZCB0b2tlbgogICAgdWludDI1NiBwdWJsaWMgdG9rZW5FeGNoYW5nZVJhdGUgPSAxMDAwOyAgICAgICAgICAgICAvLyAxMDAwIEhDVCB0b2tlbnMgcGVyIDEgRVRICgogICAgLy8gZXZlbnRzCiAgICBldmVudCBJc3N1ZVRva2VuKGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsgICAgICAvLyBpc3N1ZSB0b2tlbiBmb3IgcHVibGljIHNhbGU7CiAgICBldmVudCBJbmNyZWFzZVN1cHBseSh1aW50MjU2IF92YWx1ZSk7CiAgICBldmVudCBEZWNyZWFzZVN1cHBseSh1aW50MjU2IF92YWx1ZSk7CiAgICBldmVudCBNaWdyYXRlKGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsKICAgIGV2ZW50IEJ1cm4oYWRkcmVzcyBpbmRleGVkIGZyb20sIHVpbnQyNTYgX3ZhbHVlKTsKICAgIC8vIGZvcm1hdCBkZWNpbWFscy4KICAgIGZ1bmN0aW9uIGZvcm1hdERlY2ltYWxzKHVpbnQyNTYgX3ZhbHVlKSBpbnRlcm5hbCByZXR1cm5zICh1aW50MjU2ICkgewogICAgICAgIHJldHVybiBfdmFsdWUgKiAxMCAqKiBkZWNpbWFsczsKICAgIH0KCiAgICAvLyBjb25zdHJ1Y3RvcgogICAgZnVuY3Rpb24gSG91c2VDb3Vwb25Ub2tlbigpCiAgICB7CiAgICAgICAgZXRoRnVuZERlcG9zaXQgPSAweDk4OTVkMmZBY2U3MzcxODkzNzhFYjI3MDU4NEYxQ0IzRjA0NTE4OTg7CgogICAgICAgIGlzRnVuZGluZyA9IGZhbHNlOyAvL2NvbnRyb2xzIHByZSB0aHJvdWdoIGNyb3dkc2FsZSBzdGF0ZQogICAgICAgIGZ1bmRpbmdTdGFydEJsb2NrID0gMDsKICAgICAgICBmdW5kaW5nU3RvcEJsb2NrID0gMDsKCiAgICAgICAgY3VycmVudFN1cHBseSA9IGZvcm1hdERlY2ltYWxzKDApOwogICAgICAgIHRvdGFsU3VwcGx5ID0gZm9ybWF0RGVjaW1hbHMoMjAwMDAwMDApOwogICAgICAgIHJlcXVpcmUoY3VycmVudFN1cHBseSA8PSB0b3RhbFN1cHBseSk7CiAgICAgICAgYmFsYW5jZXNbZXRoRnVuZERlcG9zaXRdID0gdG90YWxTdXBwbHktY3VycmVudFN1cHBseTsKICAgIH0KCiAgICBtb2RpZmllciBpc093bmVyKCkgIHsgcmVxdWlyZShtc2cuc2VuZGVyID09IGV0aEZ1bmREZXBvc2l0KTsgXzsgfQoKICAgIC8vLyBAZGV2IHNldCB0aGUgdG9rZW4ncyB0b2tlbkV4Y2hhbmdlUmF0ZSwKICAgIGZ1bmN0aW9uIHNldFRva2VuRXhjaGFuZ2VSYXRlKHVpbnQyNTYgX3Rva2VuRXhjaGFuZ2VSYXRlKSBpc093bmVyIGV4dGVybmFsIHsKICAgICAgICByZXF1aXJlKF90b2tlbkV4Y2hhbmdlUmF0ZSA+IDApOwogICAgICAgIHJlcXVpcmUoX3Rva2VuRXhjaGFuZ2VSYXRlICE9IHRva2VuRXhjaGFuZ2VSYXRlKTsKICAgICAgICB0b2tlbkV4Y2hhbmdlUmF0ZSA9IF90b2tlbkV4Y2hhbmdlUmF0ZTsKICAgIH0KCiAgICAvLy8gQGRldiBpbmNyZWFzZSB0aGUgdG9rZW4ncyBzdXBwbHkKICAgIGZ1bmN0aW9uIGluY3JlYXNlU3VwcGx5ICh1aW50MjU2IF92YWx1ZSkgaXNPd25lciBleHRlcm5hbCB7CiAgICAgICAgdWludDI1NiB2YWx1ZSA9IGZvcm1hdERlY2ltYWxzKF92YWx1ZSk7CiAgICAgICAgcmVxdWlyZSAodmFsdWUgKyBjdXJyZW50U3VwcGx5IDw9IHRvdGFsU3VwcGx5KTsKICAgICAgICByZXF1aXJlIChiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSB2YWx1ZSAmJiB2YWx1ZT4wKTsKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtPSB2YWx1ZTsKICAgICAgICBjdXJyZW50U3VwcGx5ID0gc2FmZUFkZChjdXJyZW50U3VwcGx5LCB2YWx1ZSk7CiAgICAgICAgSW5jcmVhc2VTdXBwbHkodmFsdWUpOwogICAgfQoKICAgIC8vLyBAZGV2IGRlY3JlYXNlIHRoZSB0b2tlbidzIHN1cHBseQogICAgZnVuY3Rpb24gZGVjcmVhc2VTdXBwbHkgKHVpbnQyNTYgX3ZhbHVlKSBpc093bmVyIGV4dGVybmFsIHsKICAgICAgICB1aW50MjU2IHZhbHVlID0gZm9ybWF0RGVjaW1hbHMoX3ZhbHVlKTsKICAgICAgICByZXF1aXJlICh2YWx1ZSArIHRva2VuUmFpc2VkIDw9IGN1cnJlbnRTdXBwbHkpOwogICAgICAgIGN1cnJlbnRTdXBwbHkgPSBzYWZlU3VidHJhY3QoY3VycmVudFN1cHBseSwgdmFsdWUpOwogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdICs9IHZhbHVlOwogICAgICAgIERlY3JlYXNlU3VwcGx5KHZhbHVlKTsKICAgIH0KCiAgICAvLy8gQGRldiB0dXJuIG9uIHRoZSBmdW5kaW5nIHN0YXRlCiAgICBmdW5jdGlvbiBzdGFydEZ1bmRpbmcgKHVpbnQyNTYgX2Z1bmRpbmdTdGFydEJsb2NrLCB1aW50MjU2IF9mdW5kaW5nU3RvcEJsb2NrKSBpc093bmVyIGV4dGVybmFsIHsKICAgICAgICByZXF1aXJlKCFpc0Z1bmRpbmcpOwogICAgICAgIHJlcXVpcmUoX2Z1bmRpbmdTdGFydEJsb2NrIDwgX2Z1bmRpbmdTdG9wQmxvY2spOwogICAgICAgIHJlcXVpcmUoYmxvY2subnVtYmVyIDwgX2Z1bmRpbmdTdGFydEJsb2NrKSA7CiAgICAgICAgZnVuZGluZ1N0YXJ0QmxvY2sgPSBfZnVuZGluZ1N0YXJ0QmxvY2s7CiAgICAgICAgZnVuZGluZ1N0b3BCbG9jayA9IF9mdW5kaW5nU3RvcEJsb2NrOwogICAgICAgIGlzRnVuZGluZyA9IHRydWU7CiAgICB9CgogICAgLy8vIEBkZXYgdHVybiBvZmYgdGhlIGZ1bmRpbmcgc3RhdGUKICAgIGZ1bmN0aW9uIHN0b3BGdW5kaW5nKCkgaXNPd25lciBleHRlcm5hbCB7CiAgICAgICAgcmVxdWlyZShpc0Z1bmRpbmcpOwogICAgICAgIGlzRnVuZGluZyA9IGZhbHNlOwogICAgfQoKICAgIC8vLyBAZGV2IHNldCBhIG5ldyBjb250cmFjdCBmb3IgcmVjaWV2ZSB0aGUgdG9rZW5zIChmb3IgdXBkYXRlIGNvbnRyYWN0KQogICAgZnVuY3Rpb24gc2V0TWlncmF0ZUNvbnRyYWN0KGFkZHJlc3MgX25ld0NvbnRyYWN0QWRkcikgaXNPd25lciBleHRlcm5hbCB7CiAgICAgICAgcmVxdWlyZShfbmV3Q29udHJhY3RBZGRyICE9IG5ld0NvbnRyYWN0QWRkcik7CiAgICAgICAgbmV3Q29udHJhY3RBZGRyID0gX25ld0NvbnRyYWN0QWRkcjsKICAgIH0KCiAgICAvLy8gQGRldiBzZXQgYSBuZXcgb3duZXIuCiAgICBmdW5jdGlvbiBjaGFuZ2VPd25lcihhZGRyZXNzIF9uZXdGdW5kRGVwb3NpdCkgaXNPd25lcigpIGV4dGVybmFsIHsKICAgICAgICByZXF1aXJlKF9uZXdGdW5kRGVwb3NpdCAhPSBhZGRyZXNzKDB4MCkpOwogICAgICAgIGV0aEZ1bmREZXBvc2l0ID0gX25ld0Z1bmREZXBvc2l0OwogICAgfQoKICAgIC8vLyBzZW5kcyB0aGUgdG9rZW5zIHRvIG5ldyBjb250cmFjdAogICAgZnVuY3Rpb24gbWlncmF0ZSgpIGV4dGVybmFsIHsKICAgICAgICByZXF1aXJlKCFpc0Z1bmRpbmcpOwogICAgICAgIHJlcXVpcmUobmV3Q29udHJhY3RBZGRyICE9IGFkZHJlc3MoMHgwKSk7CgogICAgICAgIHVpbnQyNTYgdG9rZW5zID0gYmFsYW5jZXNbbXNnLnNlbmRlcl07CiAgICAgICAgcmVxdWlyZSAodG9rZW5zID4gMCk7CgogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gMDsKICAgICAgICB0b2tlbk1pZ3JhdGVkID0gc2FmZUFkZCh0b2tlbk1pZ3JhdGVkLCB0b2tlbnMpOwoKICAgICAgICBJTWlncmF0aW9uQ29udHJhY3QgbmV3Q29udHJhY3QgPSBJTWlncmF0aW9uQ29udHJhY3QobmV3Q29udHJhY3RBZGRyKTsKICAgICAgICByZXF1aXJlKG5ld0NvbnRyYWN0Lm1pZ3JhdGUobXNnLnNlbmRlciwgdG9rZW5zKSk7CgogICAgICAgIE1pZ3JhdGUobXNnLnNlbmRlciwgdG9rZW5zKTsgICAgICAgICAgICAgICAvLyBsb2cgaXQKICAgIH0KCiAgICAvLy8gQGRldiB3aXRoZHJhdyBFVEggZnJvbSBjb250cmFjdCB0byBVbmxpbWl0ZWRJUCB0ZWFtIGFkZHJlc3MKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRVRIKCkgaXNPd25lciBleHRlcm5hbCB7CiAgICAgICAgcmVxdWlyZSh0aGlzLmJhbGFuY2UgPiAwKTsKICAgICAgICByZXF1aXJlKGV0aEZ1bmREZXBvc2l0LnNlbmQodGhpcy5iYWxhbmNlKSk7CiAgICB9CgogICAgZnVuY3Rpb24gYnVybih1aW50MjU2IF92YWx1ZSkgaXNPd25lciByZXR1cm5zIChib29sIHN1Y2Nlc3MpewogICAgICAgIHVpbnQyNTYgdmFsdWUgPSBmb3JtYXREZWNpbWFscyhfdmFsdWUpOwogICAgICAgIHJlcXVpcmUoYmFsYW5jZXNbbXNnLnNlbmRlcl0gPj0gdmFsdWUgJiYgdmFsdWU+MCk7CiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gLT0gdmFsdWU7CiAgICAgICAgdG90YWxTdXBwbHkgLT0gdmFsdWU7CiAgICAgICAgQnVybihtc2cuc2VuZGVyLHZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICAvLy8gYnV5cyB0aGUgdG9rZW5zCiAgICBmdW5jdGlvbiAoKSBwYXlhYmxlIHsKICAgICAgICByZXF1aXJlIChpc0Z1bmRpbmcpOwogICAgICAgIHJlcXVpcmUobXNnLnZhbHVlID4gMCk7CgogICAgICAgIHJlcXVpcmUoYmxvY2subnVtYmVyID49IGZ1bmRpbmdTdGFydEJsb2NrKTsKICAgICAgICByZXF1aXJlKGJsb2NrLm51bWJlciA8PSBmdW5kaW5nU3RvcEJsb2NrKTsKCiAgICAgICAgdWludDI1NiB0b2tlbnMgPSBzYWZlTXVsdChtc2cudmFsdWUsIHRva2VuRXhjaGFuZ2VSYXRlKTsKICAgICAgICByZXF1aXJlKHRva2VucyArIHRva2VuUmFpc2VkIDw9IGN1cnJlbnRTdXBwbHkpOwoKICAgICAgICB0b2tlblJhaXNlZCA9IHNhZmVBZGQodG9rZW5SYWlzZWQsIHRva2Vucyk7CiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gKz0gdG9rZW5zOwoKICAgICAgICBJc3N1ZVRva2VuKG1zZy5zZW5kZXIsIHRva2Vucyk7ICAvLyBsb2dzIHRva2VuIGlzc3VlZAogICAgfQp9'.
	

]
