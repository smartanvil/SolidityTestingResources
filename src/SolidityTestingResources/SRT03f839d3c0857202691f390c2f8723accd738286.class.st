Class {
	#name : #SRT03f839d3c0857202691f390c2f8723accd738286,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT03f839d3c0857202691f390c2f8723accd738286 >> base64 [
	^ ''.
	

]
