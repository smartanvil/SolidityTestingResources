Class {
	#name : #SRTfc5772c279bb3a0bed4219c0de484deff3ed2241,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTfc5772c279bb3a0bed4219c0de484deff3ed2241 >> base64 [
	^ ''.
	

]
