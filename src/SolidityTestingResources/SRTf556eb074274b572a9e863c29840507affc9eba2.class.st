Class {
	#name : #SRTf556eb074274b572a9e863c29840507affc9eba2,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTf556eb074274b572a9e863c29840507affc9eba2 >> base64 [
	^ ''.
	

]
