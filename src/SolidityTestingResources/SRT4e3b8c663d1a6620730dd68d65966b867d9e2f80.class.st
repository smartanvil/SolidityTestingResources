Class {
	#name : #SRT4e3b8c663d1a6620730dd68d65966b867d9e2f80,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT4e3b8c663d1a6620730dd68d65966b867d9e2f80 >> base64 [
	^ ''.
	

]
