Class {
	#name : #SRT3cd4048167142120a796b446a2a45d1b856c5ef7,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT3cd4048167142120a796b446a2a45d1b856c5ef7 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTM7Cgpjb250cmFjdCBUb2tlbiB7CiAKICAvLy8gdG90YWwgYW1vdW50IG9mIHRva2VucwogIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5OwoKICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSk7CgogIAogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKCiAKICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwoKICAKICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwoKICAKICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKTsKCiAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50MjU2IF92YWx1ZSk7CiAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7Cn0KCmNvbnRyYWN0IFN0YW5kYXJkVG9rZW4gaXMgVG9rZW4gewoKICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgCiAgICAvL2lmIChiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfdmFsdWUgJiYgYmFsYW5jZXNbX3RvXSArIF92YWx1ZSA+IGJhbGFuY2VzW190b10pIHsKICAgIGlmIChiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfdmFsdWUgJiYgX3ZhbHVlID4gMCkgewogICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgIGJhbGFuY2VzW190b10gKz0gX3ZhbHVlOwogICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICAgIHJldHVybiB0cnVlOwogICAgfSBlbHNlIHsgcmV0dXJuIGZhbHNlOyB9CiAgfQoKICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgCiAgICAvL2lmIChiYWxhbmNlc1tfZnJvbV0gPj0gX3ZhbHVlICYmIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID49IF92YWx1ZSAmJiBiYWxhbmNlc1tfdG9dICsgX3ZhbHVlID4gYmFsYW5jZXNbX3RvXSkgewogICAgaWYgKGJhbGFuY2VzW19mcm9tXSA+PSBfdmFsdWUgJiYgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gPj0gX3ZhbHVlICYmIF92YWx1ZSA+IDApIHsKICAgICAgYmFsYW5jZXNbX3RvXSArPSBfdmFsdWU7CiAgICAgIGJhbGFuY2VzW19mcm9tXSAtPSBfdmFsdWU7CiAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdIC09IF92YWx1ZTsKICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgcmV0dXJuIHRydWU7CiAgICB9IGVsc2UgeyByZXR1cm4gZmFsc2U7IH0KICB9CgogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7CiAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsKICB9CgogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CiAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHJlbWFpbmluZykgewogICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07CiAgfQoKICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIGJhbGFuY2VzOwogIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsKfQoKY29udHJhY3QgREFGWk9Ub2tlbiBpcyBTdGFuZGFyZFRva2VuIHsKCiAgc3RyaW5nIHB1YmxpYyBjb25zdGFudCBuYW1lID0gIkRBRlpPIjsKICBzdHJpbmcgcHVibGljIGNvbnN0YW50IHN5bWJvbCA9ICJERloiOwogIHVpbnQ4IHB1YmxpYyBjb25zdGFudCBkZWNpbWFscyA9IDE4OwoKICBmdW5jdGlvbiBEQUZaT1Rva2VuKGFkZHJlc3MgX2ljb0FkZHJlc3MsCiAgICAgICAgICAgICAgICAgICAgICAgICBhZGRyZXNzIF9wcmVJY29BZGRyZXNzLAogICAgICAgICAgICAgICAgICAgICAgICAgYWRkcmVzcyBfZGFmem9XYWxsZXRBZGRyZXNzLAogICAgICAgICAgICAgICAgICAgICAgICAgYWRkcmVzcyBfYm91bnR5V2FsbGV0QWRkcmVzcykgewogICAgcmVxdWlyZShfaWNvQWRkcmVzcyAhPSAweDApOwogICAgcmVxdWlyZShfcHJlSWNvQWRkcmVzcyAhPSAweDApOwogICAgcmVxdWlyZShfZGFmem9XYWxsZXRBZGRyZXNzICE9IDB4MCk7CiAgICByZXF1aXJlKF9ib3VudHlXYWxsZXRBZGRyZXNzICE9IDB4MCk7CgogICAgdG90YWxTdXBwbHkgPSA3MDAwMDAwMCAqIDEwKioxODsgICAgICAgICAgICAgICAgICAgICAvLyA3MDAwMDAwMCBERloKCiAgICB1aW50MjU2IGljb1Rva2VucyA9IDE4OTU2MDAwICAqIDEwKioxODsgICAgICAgICAgICAgICAKCiAgICB1aW50MjU2IHByZUljb1Rva2VucyA9IDI4NDM0MDAwICogMTAqKjE4OwogICAgCiAgICAgdWludDI1NiBib3VudHlUb2tlbnMgPSAxNjEwMDAwICogMTAqKjE4OwoKICAgIHVpbnQyNTYgREFGWk9Ub2tlbnMgPSAyMTAwMDAwMCAqIDEwKioxODsgICAgICAgICAgICAvLyBEYWZ6byBGdW5kcyAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICBhc3NlcnQoaWNvVG9rZW5zICsgcHJlSWNvVG9rZW5zICsgREFGWk9Ub2tlbnMgKyBib3VudHlUb2tlbnMgPT0gdG90YWxTdXBwbHkpOwoKICAgIGJhbGFuY2VzW19pY29BZGRyZXNzXSA9IGljb1Rva2VuczsKICAgIFRyYW5zZmVyKDAsIF9pY29BZGRyZXNzLCBpY29Ub2tlbnMpOwoKICAgIGJhbGFuY2VzW19wcmVJY29BZGRyZXNzXSA9IHByZUljb1Rva2VuczsKICAgIFRyYW5zZmVyKDAsIF9wcmVJY29BZGRyZXNzLCBwcmVJY29Ub2tlbnMpOwoKICAgIGJhbGFuY2VzW19kYWZ6b1dhbGxldEFkZHJlc3NdID0gREFGWk9Ub2tlbnM7CiAgICBUcmFuc2ZlcigwLCBfZGFmem9XYWxsZXRBZGRyZXNzLCBEQUZaT1Rva2Vucyk7CgogICAgYmFsYW5jZXNbX2JvdW50eVdhbGxldEFkZHJlc3NdID0gYm91bnR5VG9rZW5zOwogICAgVHJhbnNmZXIoMCwgX2JvdW50eVdhbGxldEFkZHJlc3MsIGJvdW50eVRva2Vucyk7CiAgfQoKICBmdW5jdGlvbiBidXJuKHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgIGlmIChiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfdmFsdWUgJiYgX3ZhbHVlID4gMCkgewogICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgIHRvdGFsU3VwcGx5IC09IF92YWx1ZTsKICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgMHgwLCBfdmFsdWUpOwogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0gZWxzZSB7CiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KICB9Cn0='.
	

]
