Class {
	#name : #SRTcb5bdded57c7e560fcea2cf8f6c14a3267b89909,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTcb5bdded57c7e560fcea2cf8f6c14a3267b89909 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7CgovKgpUaGlzIGlzIE1BVUNPSU4gdGhlIE9mZmljaWFsIENyeXB0b2N1cnJlbmN5IG9mIE1VIENyeXB0by4KTWFkZSBkdXJpbmcgYSB2ZXJ5IGJvcmluZyBldmVuaW5nIGJ5IEBIb3l0aWNvCgooXChcCigg4oCTIC0pCigo4oCYKSAo4oCZKQoKSm9pbiB1cyBvbiBUZWxlZ3JhbSBodHRwczovL3QubWUvam9pbmNoYXQvSGczUG1CTUdaN1dydDZqSkQ3N0Q1UQoqLwoKY29udHJhY3QgTUFVVG9rZW4gewoKICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwoKICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpOwoKICAgIGV2ZW50IEJ1cm4oYWRkcmVzcyBpbmRleGVkIGZyb20sIHVpbnQyNTYgdmFsdWUpOwogICAgCiAgICBzdHJpbmcgcHVibGljIGNvbnN0YW50IHN5bWJvbCA9ICJNQVUiOwogICAgc3RyaW5nIHB1YmxpYyBjb25zdGFudCBuYW1lID0gIk1hdWNvaW4iOwogICAgdWludDggcHVibGljIGNvbnN0YW50IGRlY2ltYWxzID0gMTg7CiAgICB1aW50MjU2IF90b3RhbFN1cHBseSA9IDg4ODg4ODg4MDAwMDAwMDAwMDAwMDAwMDAwOwogICAgdWludDI1NiBfdG90YWxCdXJuZWQgPSAwOwogICAgIAogICAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CiAgCiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikgYmFsYW5jZXM7CiAgCiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsKICAKICAgIG1vZGlmaWVyIG9ubHlPd25lcigpIAogICAgIHsKICAgICAgICAgaWYgKG1zZy5zZW5kZXIgIT0gb3duZXIpIAogICAgICAgICB7CiAgICAgICAgICAgICB0aHJvdzsKICAgICAgICAgfQogICAgICAgICBfOwogICAgIH0KICAKICAgICBmdW5jdGlvbiBNQVVUb2tlbigpIAogICAgIHsKICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgICAgICAgYmFsYW5jZXNbb3duZXJdID0gX3RvdGFsU3VwcGx5OwogICAgIH0KICAKICAgICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgbF90b3RhbFN1cHBseSkgCiAgICAgewogICAgICAgIGxfdG90YWxTdXBwbHkgPSBfdG90YWxTdXBwbHk7CiAgICAgfQoKICAgICBmdW5jdGlvbiB0b3RhbEJ1cm5lZCgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgbF90b3RhbEJ1cm5lZCkKICAgICB7CiAgICAgICAgbF90b3RhbEJ1cm5lZCA9IF90b3RhbEJ1cm5lZDsKICAgICB9CiAgCiAgICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpIAogICAgIHsKICAgICAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsKICAgICB9CiAgCiAgICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX2Ftb3VudCkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSAKICAgICB7CiAgICAgICAgaWYgKF90byA9PSAweDApIHRocm93OwoKICAgICAgICBpZiAoYmFsYW5jZXNbbXNnLnNlbmRlcl0gPj0gX2Ftb3VudCAmJiBfYW1vdW50ID4gMCAmJiBiYWxhbmNlc1tfdG9dICsgX2Ftb3VudCA+IGJhbGFuY2VzW190b10pIAogICAgICAgIHsKICAgICAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gLT0gX2Ftb3VudDsKICAgICAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfYW1vdW50OwogICAgICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF9hbW91bnQpOwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgfSAKICAgICAgICAgZWxzZSAKICAgICAgICAgewogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgIH0KICAgICB9CgogICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfYW1vdW50KSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIAogICAgIHsKICAgICAgICBpZiAoX3RvID09IDB4MCkgdGhyb3c7CgogICAgICAgIGlmIChiYWxhbmNlc1tfZnJvbV0gPj0gX2Ftb3VudCAmJiBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA+PSBfYW1vdW50ICYmIF9hbW91bnQgPiAwICYmIGJhbGFuY2VzW190b10gKyBfYW1vdW50ID4gYmFsYW5jZXNbX3RvXSkgCiAgICAgICAgewogICAgICAgICAgICBiYWxhbmNlc1tfZnJvbV0gLT0gX2Ftb3VudDsKICAgICAgICAgICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gLT0gX2Ftb3VudDsKICAgICAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfYW1vdW50OwogICAgICAgICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfYW1vdW50KTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgIH0gCiAgICAgICAgIGVsc2UgCiAgICAgICAgIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICB9CiAgICAgfQogIAogICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfYW1vdW50KSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIAogICAgIHsKICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF9hbW91bnQ7CiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF9hbW91bnQpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgIH0KICAKICAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKSAKICAgICB7CiAgICAgICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07CiAgICAgfQoKICAgIGZ1bmN0aW9uIGJ1cm4odWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgCiAgICB7CiAgICAgICAgaWYgKGJhbGFuY2VzW21zZy5zZW5kZXJdIDwgX3ZhbHVlKSB0aHJvdzsKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgX3RvdGFsU3VwcGx5IC09IF92YWx1ZTsgICAgICAgICAgCiAgICAgICAgX3RvdGFsQnVybmVkICs9IF92YWx1ZTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIEJ1cm4obXNnLnNlbmRlciwgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBidXJuRnJvbShhZGRyZXNzIF9mcm9tLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSAKICAgIHsKICAgICAgICBpZiAoYmFsYW5jZXNbX2Zyb21dIDwgX3ZhbHVlKSB0aHJvdzsKICAgICAgICBpZiAoX3ZhbHVlID4gYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0pIHRocm93OwogICAgICAgIGJhbGFuY2VzW19mcm9tXSAtPSBfdmFsdWU7CiAgICAgICAgX3RvdGFsU3VwcGx5IC09IF92YWx1ZTsgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICBfdG90YWxCdXJuZWQgKz0gX3ZhbHVlOwogICAgICAgIEJ1cm4oX2Zyb20sIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiB9'.
	

]
