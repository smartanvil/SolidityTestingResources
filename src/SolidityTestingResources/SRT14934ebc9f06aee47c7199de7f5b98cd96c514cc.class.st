Class {
	#name : #SRT14934ebc9f06aee47c7199de7f5b98cd96c514cc,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT14934ebc9f06aee47c7199de7f5b98cd96c514cc >> base64 [
	^ ''.
	

]
