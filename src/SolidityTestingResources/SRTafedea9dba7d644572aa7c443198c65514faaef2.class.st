Class {
	#name : #SRTafedea9dba7d644572aa7c443198c65514faaef2,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTafedea9dba7d644572aa7c443198c65514faaef2 >> base64 [
	^ ''.
	

]
