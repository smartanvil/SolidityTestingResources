Class {
	#name : #SRT507d37ea5fe6bd334d0c50db12f35ddfcb1b6a3f,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT507d37ea5fe6bd334d0c50db12f35ddfcb1b6a3f >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTY7CgppbnRlcmZhY2UgdG9rZW5SZWNpcGllbnQgeyBmdW5jdGlvbiByZWNlaXZlQXBwcm92YWwoYWRkcmVzcyBfZnJvbSwgdWludDI1NiBfdmFsdWUsIGFkZHJlc3MgX3Rva2VuLCBieXRlcyBfZXh0cmFEYXRhKSBwdWJsaWM7IH0KCmNvbnRyYWN0IEthbGlUb2tlbiB7CiAgICAvLyBQdWJsaWMgdmFyaWFibGVzIG9mIHRoZSB0b2tlbgogICAgc3RyaW5nIHB1YmxpYyBuYW1lID0gIktBTEkgVE9LRU4iOwogICAgc3RyaW5nIHB1YmxpYyBzeW1ib2wgPSAiS0FMIjsKICAgIHVpbnQ4IHB1YmxpYyBkZWNpbWFscyA9IDA7CiAgICAvLyAxOCBkZWNpbWFscyBpcyB0aGUgc3Ryb25nbHkgc3VnZ2VzdGVkIGRlZmF1bHQKICAgIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5OwogICAgdWludDI1NiBwdWJsaWMga2FsaVN1cHBseSA9IDIwMDAwMDAwOwogICAgdWludDI1NiBwdWJsaWMgcHJpY2UgOwogICAgYWRkcmVzcyBwdWJsaWMgY3JlYXRvcjsKICAgIC8vIFRoaXMgY3JlYXRlcyBhbiBhcnJheSB3aXRoIGFsbCBiYWxhbmNlcwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBwdWJsaWMgYmFsYW5jZU9mOwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBwdWJsaWMgYWxsb3dhbmNlOwoKICAgIC8vIFRoaXMgZ2VuZXJhdGVzIGEgcHVibGljIGV2ZW50IG9uIHRoZSBibG9ja2NoYWluIHRoYXQgd2lsbCBub3RpZnkgY2xpZW50cwogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiB2YWx1ZSk7CiAgICBldmVudCBGdW5kVHJhbnNmZXIoYWRkcmVzcyBiYWNrZXIsIHVpbnQgYW1vdW50LCBib29sIGlzQ29udHJpYnV0aW9uKTsKICAgIAogICAgCiAgICAvKioKICAgICAqIENvbnN0cmN0b3IgZnVuY3Rpb24KICAgICAqCiAgICAgKiBJbml0aWFsaXplcyBjb250cmFjdCB3aXRoIGluaXRpYWwgc3VwcGx5IHRva2VucyB0byB0aGUgY3JlYXRvciBvZiB0aGUgY29udHJhY3QKICAgICAqLwogICAgZnVuY3Rpb24gS2FsaVRva2VuKCkgcHVibGljIHsKICAgICAgICB0b3RhbFN1cHBseSA9IGthbGlTdXBwbHkgKiAxMCAqKiB1aW50MjU2KGRlY2ltYWxzKTsgIC8vIFVwZGF0ZSB0b3RhbCBzdXBwbHkgd2l0aCB0aGUgZGVjaW1hbCBhbW91bnQKICAgICAgICBiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPSB0b3RhbFN1cHBseTsgICAgLy8gR2l2ZSBLYWxpVG9rZW4gTWludCB0aGUgdG90YWwgY3JlYXRlZCB0b2tlbnMKICAgICAgICBjcmVhdG9yID0gbXNnLnNlbmRlcjsKICAgIH0KICAgIC8qKgogICAgICogSW50ZXJuYWwgdHJhbnNmZXIsIG9ubHkgY2FuIGJlIGNhbGxlZCBieSB0aGlzIGNvbnRyYWN0CiAgICAgKi8KICAgIGZ1bmN0aW9uIF90cmFuc2ZlcihhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludCBfdmFsdWUpIGludGVybmFsIHsKICAgICAgICAvLyBQcmV2ZW50IHRyYW5zZmVyIHRvIDB4MCBhZGRyZXNzLiBVc2UgYnVybigpIGluc3RlYWQKICAgICAgICByZXF1aXJlKF90byAhPSAweDApOwogICAgICAgIC8vIENoZWNrIGlmIHRoZSBzZW5kZXIgaGFzIGVub3VnaAogICAgICAgIHJlcXVpcmUoYmFsYW5jZU9mW19mcm9tXSA+PSBfdmFsdWUpOwogICAgICAgIC8vIENoZWNrIGZvciBvdmVyZmxvd3MKICAgICAgICByZXF1aXJlKGJhbGFuY2VPZltfdG9dICsgX3ZhbHVlID49IGJhbGFuY2VPZltfdG9dKTsKICAgICAgICAvLyBTdWJ0cmFjdCBmcm9tIHRoZSBzZW5kZXIKICAgICAgICBiYWxhbmNlT2ZbX2Zyb21dIC09IF92YWx1ZTsKICAgICAgICAvLyBBZGQgdGhlIHNhbWUgdG8gdGhlIHJlY2lwaWVudAogICAgICAgIGJhbGFuY2VPZltfdG9dICs9IF92YWx1ZTsKICAgICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwogICAgICAKICAgIH0KCiAgICAvKioKICAgICAqIFRyYW5zZmVyIHRva2VucwogICAgICoKICAgICAqIFNlbmQgYF92YWx1ZWAgdG9rZW5zIHRvIGBfdG9gIGZyb20geW91ciBhY2NvdW50CiAgICAgKgogICAgICogQHBhcmFtIF90byBUaGUgYWRkcmVzcyBvZiB0aGUgcmVjaXBpZW50CiAgICAgKiBAcGFyYW0gX3ZhbHVlIHRoZSBhbW91bnQgdG8gc2VuZAogICAgICovCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyB7CiAgICAgICAgX3RyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgIH0KCiAgICAKICAgIAogICAgLy8vIEBub3RpY2UgQnV5IHRva2VucyBmcm9tIGNvbnRyYWN0IGJ5IHNlbmRpbmcgZXRoZXIKICAgIGZ1bmN0aW9uICgpIHBheWFibGUgaW50ZXJuYWwgewogICAgICAgIAogICAgICAgIGlmIChwcmljZSA+PSAwIGV0aGVyICYmIHByaWNlIDwgMC4wMDUgZXRoZXIpewogICAgICAgIHVpbnQgYW1tb3VudCA9IDIwMDA7ICAgICAgICAgICAgICAgICAgLy8gY2FsY3VsYXRlcyB0aGUgYW1vdW50LCBtYWRlIGl0IHNvIHlvdSBjYW4gZ2V0IG1hbnkgS2FsaVRva2VuIGJ1dCB0byBnZXQgTUFOWSBLYWxpVG9rZW4geW91IGhhdmUgdG8gc3BlbmQgRVRIIGFuZCBub3QgV0VJCiAgICAgICAgdWludCBhbW1vdW50UmFpc2VkOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICBhbW91bnRSYWlzZWQgKz0gbXNnLnZhbHVlOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL21hbnkgdGhhbmtzIGthbGksIGNvdWxkbnQgZG8gaXQgd2l0aG91dCByL21lX2lybAogICAgICAgIHJlcXVpcmUoYmFsYW5jZU9mW2NyZWF0b3JdID49IGFtbW91bnQpOyAgICAgICAgICAgICAgIC8vIGNoZWNrcyBpZiBpdCBoYXMgZW5vdWdoIHRvIHNlbGwKICAgICAgICByZXF1aXJlKG1zZy52YWx1ZSA8IDAuMSBldGhlcik7ICAgICAgICAgICAgICAgICAgICAgICAgLy8gc28gYW55IHBlcnNvbiB3aG8gd2FudHMgdG8gcHV0IG1vcmUgdGhlbiAwLjEgRVRIIGhhcyB0aW1lIHRvIHRoaW5rIGFib3V0IHdoYXQgdGhleSBhcmUgZG9pbmcKICAgICAgICBiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gKz0gYW1tb3VudDsgICAgICAgICAgICAgICAgICAvLyBhZGRzIHRoZSBhbW91bnQgdG8gYnV5ZXIncyBiYWxhbmNlCiAgICAgICAgYmFsYW5jZU9mW2NyZWF0b3JdIC09IGFtbW91bnQ7ICAgICAgICAgICAgICAgICAgICAgICAgLy8gc2VuZHMgRVRIIHRvIEthbGlYTWludGgKICAgICAgICBUcmFuc2ZlcihjcmVhdG9yLCBtc2cuc2VuZGVyLCBhbW1vdW50KTsgICAgICAgICAgICAgICAvLyBleGVjdXRlIGFuIGV2ZW50IHJlZmxlY3RpbmcgdGhlIGNoYW5nZQogICAgICAgIGNyZWF0b3IudHJhbnNmZXIoYW1tb3VudFJhaXNlZCk7CiAgICAgICAgfQogICAgICAgIGlmIChwcmljZSA+PSAwLjAwNSBldGhlciAmJiBwcmljZSA8IDAuMDMgZXRoZXIpewogICAgICAgIHVpbnQgYW1vdW50ID0gMjAwMDsgICAgICAgICAgICAgICAgICAvLyBjYWxjdWxhdGVzIHRoZSBhbW91bnQsIG1hZGUgaXQgc28geW91IGNhbiBnZXQgbWFueSBLYWxpVG9rZW4gYnV0IHRvIGdldCBNQU5ZIEthbGlUb2tlbiB5b3UgaGF2ZSB0byBzcGVuZCBFVEggYW5kIG5vdCBXRUkKICAgICAgICB1aW50IGFtb3VudFJhaXNlZDsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgYW1vdW50UmFpc2VkICs9IG1zZy52YWx1ZTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9tYW55IHRoYW5rcyBrYWxpLCBjb3VsZG50IGRvIGl0IHdpdGhvdXQgci9tZV9pcmwKICAgICAgICByZXF1aXJlKGJhbGFuY2VPZltjcmVhdG9yXSA+PSBhbW91bnQpOyAgICAgICAgICAgICAgIC8vIGNoZWNrcyBpZiBpdCBoYXMgZW5vdWdoIHRvIHNlbGwKICAgICAgICByZXF1aXJlKG1zZy52YWx1ZSA8IDAuMSBldGhlcik7ICAgICAgICAgICAgICAgICAgICAgICAgLy8gc28gYW55IHBlcnNvbiB3aG8gd2FudHMgdG8gcHV0IG1vcmUgdGhlbiAwLjEgRVRIIGhhcyB0aW1lIHRvIHRoaW5rIGFib3V0IHdoYXQgdGhleSBhcmUgZG9pbmcKICAgICAgICBiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gKz0gYW1vdW50OyAgICAgICAgICAgICAgICAgIC8vIGFkZHMgdGhlIGFtb3VudCB0byBidXllcidzIGJhbGFuY2UKICAgICAgICBiYWxhbmNlT2ZbY3JlYXRvcl0gLT0gYW1vdW50OyAgICAgICAgICAgICAgICAgICAgICAgIC8vIHNlbmRzIEVUSCB0byBLYWxpWE1pbnRoCiAgICAgICAgVHJhbnNmZXIoY3JlYXRvciwgbXNnLnNlbmRlciwgYW1vdW50KTsgICAgICAgICAgICAgICAvLyBleGVjdXRlIGFuIGV2ZW50IHJlZmxlY3RpbmcgdGhlIGNoYW5nZQogICAgICAgIGNyZWF0b3IudHJhbnNmZXIoYW1tb3VudFJhaXNlZCk7CiAgICAgICAgfQogICAgICAgICBpZiAocHJpY2UgPj0gMC4wMyBldGhlcil7CiAgICAgICAgdWludCBhbW5vdW50ID0gMTAwMDA7ICAgICAgICAgICAgICAgICAgLy8gY2FsY3VsYXRlcyB0aGUgYW1vdW50LCBtYWRlIGl0IHNvIHlvdSBjYW4gZ2V0IG1hbnkgS2FsaVRva2VuIGJ1dCB0byBnZXQgTUFOWSAgeW91IGhhdmUgdG8gc3BlbmQgRVRIIGFuZCBub3QgV0VJCiAgICAgICAgdWludCBhbW5vdW50UmFpc2VkOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICBhbW91bnRSYWlzZWQgKz0gbXNnLnZhbHVlOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL21hbnkgdGhhbmtzIGthbGl4LCBjb3VsZG50IGRvIGl0IHdpdGhvdXQgci9tZV9pcmwKICAgICAgICByZXF1aXJlKGJhbGFuY2VPZltjcmVhdG9yXSA+PSBhbW5vdW50KTsgICAgICAgICAgICAgICAvLyBjaGVja3MgaWYgaXQgaGFzIGVub3VnaCB0byBzZWxsCiAgICAgICAgcmVxdWlyZShtc2cudmFsdWUgPCAwLjEgZXRoZXIpOyAgICAgICAgICAgICAgICAgICAgICAgIC8vIHNvIGFueSBwZXJzb24gd2hvIHdhbnRzIHRvIHB1dCBtb3JlIHRoZW4gMC4xIEVUSCBoYXMgdGltZSB0byB0aGluayBhYm91dCB3aGF0IHRoZXkgYXJlIGRvaW5nCiAgICAgICAgYmFsYW5jZU9mW21zZy5zZW5kZXJdICs9IGFtbm91bnQ7ICAgICAgICAgICAgICAgICAgLy8gYWRkcyB0aGUgYW1vdW50IHRvIGJ1eWVyJ3MgYmFsYW5jZQogICAgICAgIGJhbGFuY2VPZltjcmVhdG9yXSAtPSBhbW5vdW50OyAgICAgICAgICAgICAgICAgICAgICAgIC8vIHNlbmRzIEVUSCB0byBLYWxpWE1pbnRoCiAgICAgICAgVHJhbnNmZXIoY3JlYXRvciwgbXNnLnNlbmRlciwgYW1ub3VudCk7ICAgICAgICAgICAgICAgLy8gZXhlY3V0ZSBhbiBldmVudCByZWZsZWN0aW5nIHRoZSBjaGFuZ2UKICAgICAgICBjcmVhdG9yLnRyYW5zZmVyKGFtbm91bnRSYWlzZWQpOwogICAgICAgIH0KICAgIH0KCiB9'.
	

]
