Class {
	#name : #SRTb83f661c04890bcf171757fa41e37d94139b0780,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTb83f661c04890bcf171757fa41e37d94139b0780 >> base64 [
	^ ''.
	

]
