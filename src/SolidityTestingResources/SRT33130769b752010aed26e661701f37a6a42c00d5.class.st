Class {
	#name : #SRT33130769b752010aed26e661701f37a6a42c00d5,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT33130769b752010aed26e661701f37a6a42c00d5 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTM7CgppbnRlcmZhY2UgSUVSQzIwIHsKICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQgdG90YWxTdXBwbHkpOwogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludCBiYWxhbmNlKTsKICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludCBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludCByZW1haW5pbmcpOwogIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludCBfdmFsdWUpOwogIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludCBfdmFsdWUpOwp9CgovKioKKiBAdGl0bGUgU2FmZU1hdGgKKiBAZGV2IE1hdGggb3BlcmF0aW9ucyB3aXRoIHNhZmV0eSBjaGVja3MgdGhhdCB0aHJvdyBvbiBlcnJvcgoqLwpsaWJyYXJ5IFNhZmVNYXRoIHsKZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgdWludDI1NiBjID0gYSAqIGI7CiAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICByZXR1cm4gYzsKfQoKZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgLy8gYXNzZXJ0KGIgPiAwKTsgLy8gU29saWRpdHkgYXV0b21hdGljYWxseSB0aHJvd3Mgd2hlbiBkaXZpZGluZyBieSAwCiAgdWludDI1NiBjID0gYSAvIGI7CiAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICByZXR1cm4gYzsKfQoKZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgYXNzZXJ0KGIgPD0gYSk7CiAgcmV0dXJuIGEgLSBiOwp9CgpmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICB1aW50MjU2IGMgPSBhICsgYjsKICBhc3NlcnQoYyA+PSBhKTsKICByZXR1cm4gYzsKfQp9Cgpjb250cmFjdCBCaXRDbGVtbSBpcyBJRVJDMjB7CiB1c2luZyBTYWZlTWF0aCBmb3IgdWludDI1NjsKIAogdWludDI1NiBwdWJsaWMgX3RvdGFsU3VwcGx5ID0gMDsKIAogCiBzdHJpbmcgcHVibGljIHN5bWJvbCA9ICJCQ00iOy8vU2ltYm9sbyBkZWwgdG9rZW4gZXMuIEVUSAogc3RyaW5nIHB1YmxpYyBjb25zdGFudCBuYW1lID0gIkJpdENsZW1tIjsgLy9Ob21lIGRlbCB0b2tlbiBlcy4gRXRoZXJldW0KIHVpbnQyNTYgcHVibGljIGNvbnN0YW50IGRlY2ltYWxzID0gMzsgLy9OdW1lcm8gZGkgZGVjaW1hbGkgZGVsIHRva2VuLCBpbCBiaXRjb2luIG5lIGhhIDgsIGV0aGVyZXVtIDE4CiAKIHVpbnQyNTYgcHVibGljIE1BWF9TVVBQTFkgPSAxODAwMDAwMDAgKiAxMCoqZGVjaW1hbHM7IC8vTnVtZXJvIG1hc3NpbW8gZGkgdG9rZW4gZGEgZW1ldHRlcmUgKCAxMDAwICkKIHVpbnQyNTYgcHVibGljIFRPS0VOX1RPX0NSRUFUT1IgPSA5MDAwMDAwICogMTAqKmRlY2ltYWxzOyAvL1Rva2VuIGRhIGludmlhcmUgYWwgY3JlYXRvcmUgZGVsIGNvbnRyYXR0bwoKIHVpbnQyNTYgcHVibGljIGNvbnN0YW50IFJBVEUgPSAxMDAwOyAvL1F1YW50aSB0b2tlbiBpbnZpYXJlIHBlciBvZ25pIGV0aGVyIHJpY2V2dXRvCiBhZGRyZXNzIHB1YmxpYyBvd25lcjsKIAogbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpIGJhbGFuY2VzOwogbWFwcGluZyhhZGRyZXNzID0+IG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsKIAogLy9GdW56aW9uZSBjaGUgcGVybWV0dGUgZGkgcmljZXZlcmUgdG9rZW4gc29sbyBzcGVjaWZpY2FuZG8gbCdpbmRpcml6em8KIGZ1bmN0aW9uKCkgcGF5YWJsZXsKICAgICBjcmVhdGVUb2tlbnMoKTsKIH0KIAogLy9TYWx2aWFtbyBsJ2luZGlyaXp6byBkZWwgY3JlYXRvcmUgZGVsIGNvbnRyYXR0byBwZXIgaW52aWFyZSBnbGkgZXRoZXIgcmljZXZ1dGkKIGZ1bmN0aW9uIEJpdENsZW1tKCl7CiAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gVE9LRU5fVE9fQ1JFQVRPUjsKICAgICBfdG90YWxTdXBwbHkgPSBfdG90YWxTdXBwbHkuYWRkKFRPS0VOX1RPX0NSRUFUT1IpOwogfQogCiAvL0NyZWF6aW9uZSBkZWkgdG9rZW4KIGZ1bmN0aW9uIGNyZWF0ZVRva2VucygpIHBheWFibGV7CiAgICAgLy9Db250cm9sbGlhbW8gY2hlIGdsaSBldGhlciByaWNldnV0aSBzaWFubyBtYWdnaW9yaSBkaSAwCiAgICAgcmVxdWlyZShtc2cudmFsdWUgPj0gMCk7CiAgICAgCiAgICAgLy9DcmVpYW1vIHVuYSB2YXJpYWJpbGUgY2hlIGNvbnRpZW5lIGdsaSBldGhlciByaWNldnV0aSBtb2x0aXBsaWNhdGkgcGVyIGlsIFJBVEUKICAgICB1aW50MjU2IHRva2VucyA9IG1zZy52YWx1ZS5tdWwoMTAgKiogZGVjaW1hbHMpOwogICAgIHRva2VucyA9IHRva2Vucy5tdWwoUkFURSk7CiAgICAgdG9rZW5zID0gdG9rZW5zLmRpdigxMCAqKiAxOCk7CgogICAgIHVpbnQyNTYgc3VtID0gX3RvdGFsU3VwcGx5LmFkZCh0b2tlbnMpOwogICAgIHJlcXVpcmUoc3VtIDw9IE1BWF9TVVBQTFkpOwogICAgIC8vQWdnaXVuZ2lhbW8gaSB0b2tlbiBhbCBiaWxhbmNpbyBkaSBjaGkgY2kgaGEgaW52aWF0byBnbGkgZXRoZXIgZWQgYXVtZW50aWFtbyBsYSB2YXJpYWJpbGUgdG90YWxTdXBwbHkKICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IGJhbGFuY2VzW21zZy5zZW5kZXJdLmFkZCh0b2tlbnMpOwogICAgIF90b3RhbFN1cHBseSA9IHN1bTsKICAgICAKICAgICAvL0ludmlhbW8gZ2xpIGV0aGVyIGEgY2hpIGhhIGNyZWF0byBpbCBjb250cmF0dG8KICAgICBvd25lci50cmFuc2Zlcihtc2cudmFsdWUpOwogfQoKIAogLy9SaXRvcm5hIGlsIG51bWVybyB0b3RhbGUgZGkgdG9rZW4KIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgY29uc3RhbnQgcmV0dXJucyAodWludCB0b3RhbFN1cHBseSl7CiAgICAgcmV0dXJuIF90b3RhbFN1cHBseTsKIH0KIAogLy9SaXRvcm5hIGlsIGJpbGFuY2lvIGRlbGwndXRlbnRlIGRpIHVuIGluZGlyaXp6bwogZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50IGJhbGFuY2UpewogICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogfQogCiAvL1BlciBpbnZpYXJlIGkgVG9rZW4KIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKXsKICAgICAvL0NvbnRyb2xsaWFtbyBjaGUgY2hpIHZvZ2xpYSBpbnZpYXJlIGkgdG9rZW4gbmUgYWJiaWEgYSBzdWZmaWNpZW56YSBlIGNoZSBuZSB2b2dsaWEgaW52aWFyZSBwaSYjMjQ5OyBkaSAwCiAgICAgcmVxdWlyZSgKICAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPj0gX3ZhbHVlCiAgICAgICAgICYmIF92YWx1ZSA+IDAKICAgICApOwogICAgIC8vVG9nbGlhbW8gaSB0b2tlbiBpbnZpYXRpIGRhbCBzdW8gYmlsYW5jaW8KICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IGJhbGFuY2VzW21zZy5zZW5kZXJdLnN1YihfdmFsdWUpOwogICAgIC8vTGkgYWdnaXVuZ2lhbW8gYWwgYmlsYW5jaW8gZGVsIHJpY2V2ZW50ZQogICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfdmFsdWUpOwogICAgIC8vQ2hpYW1pYW1vIGwgZXZlbnRvIHRyYW5zZmVyCiAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgIHJldHVybiB0cnVlOwogfQogCiAvL0ludmlvIGRlaSB0b2tlbiBjb24gZGVsZWdhCiBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpewogICAgIC8vQ29udHJvbGxpYW1vIGNoZSBjaGkgdm9nbGlhIGludmlhcmUgdG9rZW4gZGEgdW4gaW5kaXJpenpvIG5vbiBzdW8gYWJiaWEgbGEgZGVsZWdhIHBlciBmYXJsbywgY2hlCiAgICAgLy9sJ2FjY291bnQgZGEgZG92ZSB2bmdvbm8gaW52aWF0aSBpIHRva2VuIGFiYmlhIHRva2VuIGEgc3VmZmljaWVuemEgZQogICAgIC8vY2hlIGkgdG9rZW4gaW52aWF0aSBzaWFubyBtYWdnaW9yaSBkaSAwCiAgICAgcmVxdWlyZSgKICAgICAgICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gPj0gX3ZhbHVlCiAgICAgICAgICYmIGJhbGFuY2VzW21zZy5zZW5kZXJdID49IF92YWx1ZQogICAgICAgICAmJiBfdmFsdWUgPiAwCiAgICAgKTsKICAgICAvL3RvZ2xpYW1vIGkgdG9rZW4gZGEgY2hpIGxpIGludmlhCiAgICAgYmFsYW5jZXNbX2Zyb21dID0gYmFsYW5jZXNbX2Zyb21dLnN1YihfdmFsdWUpOwogICAgIC8vQWdnaXVuZ2lhbW9saSBhbCByY2V2ZW50ZQogICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfdmFsdWUpOwogICAgIC8vRGltaW51aWFtbyBpbCB2YWxvcmUgZGVpIHRva2VuIGNoZSBpbCBkZWxlZ2F0byBwdSYjMjQyOyBpbnZpYXJlIGluIGZhdm9yZSBkZWwgZGVsZWdhbnRlCiAgICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gPSBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXS5zdWIoX3ZhbHVlKTsKICAgICAvL0NoaWFtYWlhbW8gbCdldmVudG8gdHJhbnNmZXIKICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwogICAgIHJldHVybiB0cnVlOwogfQogCiAvL0RlbGVnYXJlIHF1YWxjdW5vIGFsbCdpbnZpbyBkaSB0b2tlbgogZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKXsKICAgICAvL0luc2VyaWFtbyBsJ2luZGlyaXp6byBkZWwgZGVsZWdhdG8gZSBpbCBtYXNzaW1vIGNoZSBwdSYjMjQyOyBpbnZpYXJlCiAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CiAgICAgLy9DaGlhbWlhbW8gbCdldmVudG8gYXBwcm92YWwKICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsKICAgICByZXR1cm4gdHJ1ZTsKIH0KIAogLy9SaXRvcm5hIGlsIG51bWVybyBkaSB0b2tlbiBjaGUgdW4gZGVsZWdhdG8gcHUmIzI0MjsgYW5jb3JhIGludmlhcmUKIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludCByZW1haW5pbmcpewogICAgIHJldHVybiBhbGxvd2VkW19vd25lcl1bX3NwZW5kZXJdOwogfQoKIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludCBfdmFsdWUpOwogZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50IF92YWx1ZSk7CiAKfQ=='.
	

]
