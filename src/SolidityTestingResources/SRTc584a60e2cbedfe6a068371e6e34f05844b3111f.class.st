Class {
	#name : #SRTc584a60e2cbedfe6a068371e6e34f05844b3111f,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTc584a60e2cbedfe6a068371e6e34f05844b3111f >> base64 [
	^ ''.
	

]
