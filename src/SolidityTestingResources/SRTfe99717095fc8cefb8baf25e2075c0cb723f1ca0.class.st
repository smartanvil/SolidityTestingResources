Class {
	#name : #SRTfe99717095fc8cefb8baf25e2075c0cb723f1ca0,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTfe99717095fc8cefb8baf25e2075c0cb723f1ca0 >> base64 [
	^ ''.
	

]
