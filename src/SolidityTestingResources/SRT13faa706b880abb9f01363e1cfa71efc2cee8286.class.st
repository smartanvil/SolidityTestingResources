Class {
	#name : #SRT13faa706b880abb9f01363e1cfa71efc2cee8286,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT13faa706b880abb9f01363e1cfa71efc2cee8286 >> base64 [
	^ ''.
	

]
