Class {
	#name : #SRT7f9fa692e1b65d2b6d670feebd3e6bcc29606f14,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT7f9fa692e1b65d2b6d670feebd3e6bcc29606f14 >> base64 [
	^ 'LyoqCiAqIFRoaXMgc21hcnQgY29udHJhY3QgY29kZSBpcyBDb3B5cmlnaHQgMjAxNyBUb2tlbk1hcmtldCBMdGQuIEZvciBtb3JlIGluZm9ybWF0aW9uIHNlZSBodHRwczovL3Rva2VubWFya2V0Lm5ldAogKgogKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIHZlcnNpb24gMi4wOiBodHRwczovL2dpdGh1Yi5jb20vVG9rZW5NYXJrZXROZXQvaWNvL2Jsb2IvbWFzdGVyL0xJQ0VOU0UudHh0CiAqLwoKCi8qKgogKiBUaGlzIHNtYXJ0IGNvbnRyYWN0IGNvZGUgaXMgQ29weXJpZ2h0IDIwMTcgVG9rZW5NYXJrZXQgTHRkLiBGb3IgbW9yZSBpbmZvcm1hdGlvbiBzZWUgaHR0cHM6Ly90b2tlbm1hcmtldC5uZXQKICoKICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCB2ZXJzaW9uIDIuMDogaHR0cHM6Ly9naXRodWIuY29tL1Rva2VuTWFya2V0TmV0L2ljby9ibG9iL21hc3Rlci9MSUNFTlNFLnR4dAogKi8KCgoKCi8qKgogKiBAdGl0bGUgT3duYWJsZQogKiBAZGV2IFRoZSBPd25hYmxlIGNvbnRyYWN0IGhhcyBhbiBvd25lciBhZGRyZXNzLCBhbmQgcHJvdmlkZXMgYmFzaWMgYXV0aG9yaXphdGlvbiBjb250cm9sCiAqIGZ1bmN0aW9ucywgdGhpcyBzaW1wbGlmaWVzIHRoZSBpbXBsZW1lbnRhdGlvbiBvZiAidXNlciBwZXJtaXNzaW9ucyIuCiAqLwpjb250cmFjdCBPd25hYmxlIHsKICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKCgogIC8qKgogICAqIEBkZXYgVGhlIE93bmFibGUgY29uc3RydWN0b3Igc2V0cyB0aGUgb3JpZ2luYWwgYG93bmVyYCBvZiB0aGUgY29udHJhY3QgdG8gdGhlIHNlbmRlcgogICAqIGFjY291bnQuCiAgICovCiAgZnVuY3Rpb24gT3duYWJsZSgpIHsKICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICB9CgoKICAvKioKICAgKiBAZGV2IFRocm93cyBpZiBjYWxsZWQgYnkgYW55IGFjY291bnQgb3RoZXIgdGhhbiB0aGUgb3duZXIuCiAgICovCiAgbW9kaWZpZXIgb25seU93bmVyKCkgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyKTsKICAgIF87CiAgfQoKCiAgLyoqCiAgICogQGRldiBBbGxvd3MgdGhlIGN1cnJlbnQgb3duZXIgdG8gdHJhbnNmZXIgY29udHJvbCBvZiB0aGUgY29udHJhY3QgdG8gYSBuZXdPd25lci4KICAgKiBAcGFyYW0gbmV3T3duZXIgVGhlIGFkZHJlc3MgdG8gdHJhbnNmZXIgb3duZXJzaGlwIHRvLgogICAqLwogIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpIG9ubHlPd25lciB7CiAgICByZXF1aXJlKG5ld093bmVyICE9IGFkZHJlc3MoMCkpOyAgICAgIAogICAgb3duZXIgPSBuZXdPd25lcjsKICB9Cgp9CgoKLyoKICogSGFsdGFibGUKICoKICogQWJzdHJhY3QgY29udHJhY3QgdGhhdCBhbGxvd3MgY2hpbGRyZW4gdG8gaW1wbGVtZW50IGFuCiAqIGVtZXJnZW5jeSBzdG9wIG1lY2hhbmlzbS4gRGlmZmVycyBmcm9tIFBhdXNhYmxlIGJ5IGNhdXNpbmcgYSB0aHJvdyB3aGVuIGluIGhhbHQgbW9kZS4KICoKICoKICogT3JpZ2luYWxseSBlbnZpc2lvbmVkIGluIEZpcnN0Qmxvb2QgSUNPIGNvbnRyYWN0LgogKi8KY29udHJhY3QgSGFsdGFibGUgaXMgT3duYWJsZSB7CiAgYm9vbCBwdWJsaWMgaGFsdGVkOwoKICBtb2RpZmllciBzdG9wSW5FbWVyZ2VuY3kgewogICAgaWYgKGhhbHRlZCkgdGhyb3c7CiAgICBfOwogIH0KCiAgbW9kaWZpZXIgc3RvcE5vbk93bmVyc0luRW1lcmdlbmN5IHsKICAgIGlmIChoYWx0ZWQgJiYgbXNnLnNlbmRlciAhPSBvd25lcikgdGhyb3c7CiAgICBfOwogIH0KCiAgbW9kaWZpZXIgb25seUluRW1lcmdlbmN5IHsKICAgIGlmICghaGFsdGVkKSB0aHJvdzsKICAgIF87CiAgfQoKICAvLyBjYWxsZWQgYnkgdGhlIG93bmVyIG9uIGVtZXJnZW5jeSwgdHJpZ2dlcnMgc3RvcHBlZCBzdGF0ZQogIGZ1bmN0aW9uIGhhbHQoKSBleHRlcm5hbCBvbmx5T3duZXIgewogICAgaGFsdGVkID0gdHJ1ZTsKICB9CgogIC8vIGNhbGxlZCBieSB0aGUgb3duZXIgb24gZW5kIG9mIGVtZXJnZW5jeSwgcmV0dXJucyB0byBub3JtYWwgc3RhdGUKICBmdW5jdGlvbiB1bmhhbHQoKSBleHRlcm5hbCBvbmx5T3duZXIgb25seUluRW1lcmdlbmN5IHsKICAgIGhhbHRlZCA9IGZhbHNlOwogIH0KCn0KCgovKioKICogRm9yd2FyZCBFdGhlcmV1bSBwYXltZW50cyB0byBhbm90aGVyIHdhbGxldCBhbmQgdHJhY2sgdGhlbSB3aXRoIGFuIGV2ZW50LgogKgogKiBBbGxvd3MgdG8gaWRlbnRpZnkgY3VzdG9tZXJzIHdobyBtYWRlIEV0aGVyZXVtIHBheW1lbnQgZm9yIGEgY2VudHJhbCB0b2tlbiBpc3N1YW5jZS4KICogRnVydGhlcm1vcmUgYWxsb3cgbWFraW5nIGEgcGF5bWVudCBvbiBiZWhhbGYgb2YgYW5vdGhlciBhZGRyZXNzLgogKgogKiBBbGxvdyBwYXVzaW5nIHRvIHNpZ25hbCB0aGUgZW5kIG9mIHRoZSBjcm93ZHNhbGUuCiAqLwpjb250cmFjdCBQYXltZW50Rm9yd2FyZGVyIGlzIEhhbHRhYmxlIHsKCiAgLyoqIFdobyB3aWxsIGdldCBhbGwgRVRIIGluIHRoZSBlbmQgKi8KICBhZGRyZXNzIHB1YmxpYyB0ZWFtTXVsdGlzaWc7CgogIC8qKiBUb3RhbCBpbmNvbWluZyBtb25leSAqLwogIHVpbnQgcHVibGljIHRvdGFsVHJhbnNmZXJyZWQ7CgogIC8qKiBIb3cgbWFueSBkaXN0aW5jdCBjdXN0b21lcnMgd2UgaGF2ZSB0aGF0IGhhdmUgbWFkZSBhIHBheW1lbnQgKi8KICB1aW50IHB1YmxpYyBjdXN0b21lckNvdW50OwoKICAvKiogVG90YWwgaW5jb21pbmcgbW9uZXkgcGVyIGNlbnRyYWxseSB0cmFja2VkIGN1c3RvbWVyIGlkICovCiAgbWFwcGluZyh1aW50MTI4ID0+IHVpbnQpIHB1YmxpYyBwYXltZW50c0J5Q3VzdG9tZXI7CgogIC8qKiBUb3RhbCBpbmNvbWluZyBtb25leSBwZXIgYmVuZWZhY3RvciBhZGRyZXNzICovCiAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQpIHB1YmxpYyBwYXltZW50c0J5QmVuZWZhY3RvcjsKCiAgLyoqIEEgY3VzdG9tZXIgaGFzIG1hZGUgYSBwYXltZW50LiBCZW5lZmFjdG9yIGlzIHRoZSBhZGRyZXNzIHdoZXJlIHRoZSB0b2tlbnMgd2lsbCBiZSB1bHRpbWF0ZWx5IGlzc3VlZC4qLwogIGV2ZW50IFBheW1lbnRGb3J3YXJkZWQoYWRkcmVzcyBzb3VyY2UsIHVpbnQgYW1vdW50LCB1aW50MTI4IGN1c3RvbWVySWQsIGFkZHJlc3MgYmVuZWZhY3Rvcik7CgogIGZ1bmN0aW9uIFBheW1lbnRGb3J3YXJkZXIoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3RlYW1NdWx0aXNpZykgewogICAgdGVhbU11bHRpc2lnID0gX3RlYW1NdWx0aXNpZzsKICAgIG93bmVyID0gX293bmVyOwogIH0KCiAgZnVuY3Rpb24gcGF5V2l0aG91dENoZWNrc3VtKHVpbnQxMjggY3VzdG9tZXJJZCwgYWRkcmVzcyBiZW5lZmFjdG9yKSBwdWJsaWMgc3RvcEluRW1lcmdlbmN5IHBheWFibGUgewoKICAgIHVpbnQgd2VpQW1vdW50ID0gbXNnLnZhbHVlOwoKICAgIFBheW1lbnRGb3J3YXJkZWQobXNnLnNlbmRlciwgd2VpQW1vdW50LCBjdXN0b21lcklkLCBiZW5lZmFjdG9yKTsKCiAgICAvLyBXZSB0cnVzdCBFdGhlcmV1bSBhbW91bnRzIGNhbm5vdCBvdmVyZmxvdyB1aW50MjU2CiAgICB0b3RhbFRyYW5zZmVycmVkICs9IHdlaUFtb3VudDsKCiAgICBpZihwYXltZW50c0J5Q3VzdG9tZXJbY3VzdG9tZXJJZF0gPT0gMCkgewogICAgICBjdXN0b21lckNvdW50Kys7CiAgICB9CgogICAgcGF5bWVudHNCeUN1c3RvbWVyW2N1c3RvbWVySWRdICs9IHdlaUFtb3VudDsKCiAgICAvLyBXZSB0cmFjayBiZW5lZmFjdG9yIGFkZHJlc3NlcyBmb3IgZXh0cmEgc2FmZXR5OwogICAgLy8gSW4gdGhlIGNhc2Ugb2YgY2VudHJhbCBFVEggaXNzdWFuY2UgdHJhY2tpbmcgaGFzIHByb2JsZW1zIHdlIGNhbgogICAgLy8gY29uc3RydWN0IEVUSCBjb250cmlidXRpb25zIHNvbGVseSBiYXNlZCBvbiBibG9ja2NoYWluIGRhdGEKICAgIHBheW1lbnRzQnlCZW5lZmFjdG9yW2JlbmVmYWN0b3JdICs9IHdlaUFtb3VudDsKCiAgICAvLyBNYXkgcnVuIG91dCBvZiBnYXMKICAgIGlmKCF0ZWFtTXVsdGlzaWcuc2VuZCh3ZWlBbW91bnQpKSB0aHJvdzsKICB9CgogIC8qKgogICAqIFBheSBvbiBhIGJlaGFsZiBvZiBhbiBhZGRyZXNzLgogICAqCiAgICogQHBhcmFtIGN1c3RvbWVySWQgSWRlbnRpZmllciBpbiB0aGUgY2VudHJhbCBkYXRhYmFzZSwgVVVJRCB2NAogICAqCiAgICovCiAgIGZ1bmN0aW9uIHBheSh1aW50MTI4IGN1c3RvbWVySWQsIGFkZHJlc3MgYmVuZWZhY3RvciwgYnl0ZXMxIGNoZWNrc3VtKSBwdWJsaWMgc3RvcEluRW1lcmdlbmN5IHBheWFibGUgewogICAgLy8gc2VlIGN1c3RvbWVyaWQucHkKICAgICBpZiAoYnl0ZXMxKHNoYTMoY3VzdG9tZXJJZCwgYmVuZWZhY3RvcikpICE9IGNoZWNrc3VtKSB0aHJvdzsKICAgICBwYXlXaXRob3V0Q2hlY2tzdW0oY3VzdG9tZXJJZCwgYmVuZWZhY3Rvcik7CiAgIH0KCiAgLyoqCiAgICogUGF5IG9uIGEgYmVoYWxmIG9mIHRoZSBzZW5kZXIuCiAgICoKICAgKiBAcGFyYW0gY3VzdG9tZXJJZCBJZGVudGlmaWVyIGluIHRoZSBjZW50cmFsIGRhdGFiYXNlLCBVVUlEIHY0CiAgICoKICAgKi8KICBmdW5jdGlvbiBwYXlGb3JNeXNlbGZXaXRoQ2hlY2tzdW0odWludDEyOCBjdXN0b21lcklkLCBieXRlczEgY2hlY2tzdW0pIHB1YmxpYyBwYXlhYmxlIHsKICAgIC8vIHNlZSBjdXN0b21lcmlkLnB5CiAgICBpZiAoYnl0ZXMxKHNoYTMoY3VzdG9tZXJJZCkpICE9IGNoZWNrc3VtKSB0aHJvdzsKICAgIHBheVdpdGhvdXRDaGVja3N1bShjdXN0b21lcklkLCBtc2cuc2VuZGVyKTsKICB9CgogIC8qKgogICAqIExlZ2FjeSBBUEkgc2lnbmF0dXJlLgogICAqLwogIGZ1bmN0aW9uIHBheUZvck15c2VsZih1aW50MTI4IGN1c3RvbWVySWQpIHB1YmxpYyBwYXlhYmxlIHsKICAgIHBheVdpdGhvdXRDaGVja3N1bShjdXN0b21lcklkLCBtc2cuc2VuZGVyKTsKICB9Cgp9'.
	

]
