Class {
	#name : #SRTd9ec750a0aac025f0075413c68502ecf8a9ab64e,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTd9ec750a0aac025f0075413c68502ecf8a9ab64e >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMDsKCmNvbnRyYWN0IE93bmVkCnsKICAgIGFkZHJlc3MgY3JlYXRvciA9IG1zZy5zZW5kZXI7CiAgICBhZGRyZXNzIG93bmVyMDEgPSBtc2cuc2VuZGVyOwogICAgYWRkcmVzcyBvd25lcjAyOwogICAgYWRkcmVzcyBvd25lcjAzOwogICAgCiAgICBmdW5jdGlvbgogICAgaXNDcmVhdG9yKCkKICAgIGludGVybmFsCiAgICByZXR1cm5zIChib29sKQogICAgewogICAgICAgcmV0dXJuKG1zZy5zZW5kZXIgPT0gY3JlYXRvcik7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uCiAgICBpc093bmVyKCkKICAgIGludGVybmFsCiAgICByZXR1cm5zIChib29sKQogICAgewogICAgICAgIHJldHVybihtc2cuc2VuZGVyID09IG93bmVyMDEgfHwgbXNnLnNlbmRlciA9PSBvd25lcjAyIHx8IG1zZy5zZW5kZXIgPT0gb3duZXIwMyk7CiAgICB9CgogICAgZXZlbnQgTmV3T3duZXIoYWRkcmVzcyBpbmRleGVkIG9sZCwgYWRkcmVzcyBpbmRleGVkIGN1cnJlbnQpOwogICAgCiAgICBmdW5jdGlvbgogICAgc2V0T3duZXIodWludCBvd25lciwgYWRkcmVzcyBfYWRkcikKICAgIGludGVybmFsCiAgICB7CiAgICAgICAgaWYgKGFkZHJlc3MoMHgwKSAhPSBfYWRkcikKICAgICAgICB7CiAgICAgICAgICAgIGlmIChpc093bmVyKCkgfHwgaXNDcmVhdG9yKCkpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGlmICgwID09IG93bmVyKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIE5ld093bmVyKG93bmVyMDEsIF9hZGRyKTsKICAgICAgICAgICAgICAgICAgICBvd25lcjAxID0gX2FkZHI7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlIGlmICgxID09IG93bmVyKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIE5ld093bmVyKG93bmVyMDIsIF9hZGRyKTsKICAgICAgICAgICAgICAgICAgICBvd25lcjAyID0gX2FkZHI7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBOZXdPd25lcihvd25lcjAzLCBfYWRkcik7CiAgICAgICAgICAgICAgICAgICAgb3duZXIwMyA9IF9hZGRyOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQogICAgCiAgICBmdW5jdGlvbgogICAgc2V0T3duZXJPbmUoYWRkcmVzcyBfbmV3KQogICAgcHVibGljCiAgICB7CiAgICAgICAgc2V0T3duZXIoMCwgX25ldyk7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uCiAgICBzZXRPd25lclR3byhhZGRyZXNzIF9uZXcpCiAgICBwdWJsaWMKICAgIHsKICAgICAgICBzZXRPd25lcigxLCBfbmV3KTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24KICAgIHNldE93bmVyVGhyZWUoYWRkcmVzcyBfbmV3KQogICAgcHVibGljCiAgICB7CiAgICAgICAgc2V0T3duZXIoMiwgX25ldyk7CiAgICB9Cn0KCmNvbnRyYWN0IEJhbmsgaXMgT3duZWQKewogICAgc3RydWN0IERlcG9zaXRvciB7CiAgICAgICAgdWludCBhbW91bnQ7CiAgICAgICAgdWludCB0aW1lOwogICAgfQoKICAgIGV2ZW50IERlcG9zaXQoYWRkcmVzcyBpbmRleGVkIGRlcG9zaXRvciwgdWludCBhbW91bnQpOwogICAgCiAgICBldmVudCBEb25hdGlvbihhZGRyZXNzIGluZGV4ZWQgZG9uYXRvciwgdWludCBhbW91bnQpOwogICAgCiAgICBldmVudCBXaXRoZHJhd2FsKGFkZHJlc3MgaW5kZXhlZCB0bywgdWludCBhbW91bnQpOwogICAgCiAgICBldmVudCBEZXBvc2l0UmV0dXJuKGFkZHJlc3MgaW5kZXhlZCBkZXBvc2l0b3IsIHVpbnQgYW1vdW50KTsKICAgIAogICAgYWRkcmVzcyBvd25lcjBsOwogICAgdWludCBudW1EZXBvc2l0czsKICAgIHVpbnQgcmVsZWFzZURhdGU7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IERlcG9zaXRvcikgcHVibGljIERlcG9zaXRzOwogICAgYWRkcmVzc1tdIHB1YmxpYyBEZXBvc2l0b3JzOwogICAgCiAgICBmdW5jdGlvbgogICAgaW5pdEJhbmsodWludCBkYXlzVW50aWxSZWxlYXNlKQogICAgcHVibGljCiAgICB7CiAgICAgICAgbnVtRGVwb3NpdHMgPSAwOwogICAgICAgIG93bmVyMGwgPSBtc2cuc2VuZGVyOwogICAgICAgIHJlbGVhc2VEYXRlID0gbm93OwogICAgICAgIGlmIChkYXlzVW50aWxSZWxlYXNlID4gMCAmJiBkYXlzVW50aWxSZWxlYXNlIDwgKDEgeWVhcnMgKiA1KSkKICAgICAgICB7CiAgICAgICAgICAgIHJlbGVhc2VEYXRlICs9IGRheXNVbnRpbFJlbGVhc2UgKiAxIGRheXM7CiAgICAgICAgfQogICAgICAgIGVsc2UKICAgICAgICB7CiAgICAgICAgICAgIC8vIGRlZmF1bHQgMSBkYXkKICAgICAgICAgICAgcmVsZWFzZURhdGUgKz0gMSBkYXlzOwogICAgICAgIH0KICAgIH0KCiAgICAvLyBBY2NlcHQgZG9uYXRpb25zIGFuZCBkZXBvc2l0cwogICAgZnVuY3Rpb24KICAgICgpCiAgICBwdWJsaWMKICAgIHBheWFibGUKICAgIHsKICAgICAgICBpZiAobXNnLnZhbHVlID4gMCkKICAgICAgICB7CiAgICAgICAgICAgIGlmIChtc2cudmFsdWUgPCAxIGV0aGVyKQogICAgICAgICAgICAgICAgRG9uYXRpb24obXNnLnNlbmRlciwgbXNnLnZhbHVlKTsKICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgZGVwb3NpdCgpOwogICAgICAgIH0KICAgIH0KICAgIAogICAgLy8gQWNjZXB0IGRlcG9zaXQgYW5kIGNyZWF0ZSBEZXBvc2l0b3IgcmVjb3JkCiAgICBmdW5jdGlvbgogICAgZGVwb3NpdCgpCiAgICBwdWJsaWMKICAgIHBheWFibGUKICAgIHJldHVybnMgKHVpbnQpCiAgICB7CiAgICAgICAgaWYgKG1zZy52YWx1ZSA+IDApCiAgICAgICAgICAgIGFkZERlcG9zaXQoKTsKICAgICAgICByZXR1cm4gZ2V0TnVtYmVyT2ZEZXBvc2l0cygpOwogICAgfQogICAgCiAgICAvLyBUcmFjayBkZXBvc2l0cwogICAgZnVuY3Rpb24KICAgIGFkZERlcG9zaXQoKQogICAgcHJpdmF0ZQogICAgewogICAgICAgIERlcG9zaXRvcnMucHVzaChtc2cuc2VuZGVyKTsKICAgICAgICBEZXBvc2l0c1ttc2cuc2VuZGVyXS5hbW91bnQgPSBtc2cudmFsdWU7CiAgICAgICAgRGVwb3NpdHNbbXNnLnNlbmRlcl0udGltZSA9IG5vdzsKICAgICAgICBudW1EZXBvc2l0cysrOwogICAgICAgIERlcG9zaXQobXNnLnNlbmRlciwgbXNnLnZhbHVlKTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24KICAgIHJldHVybkRlcG9zaXQoKQogICAgcHVibGljCiAgICB7CiAgICAgICAgaWYgKG5vdyA+IHJlbGVhc2VEYXRlKQogICAgICAgIHsKICAgICAgICAgICAgaWYgKERlcG9zaXRzW21zZy5zZW5kZXJdLmFtb3VudCA+IDEpIHsKICAgICAgICAgICAgICAgIHVpbnQgX3dlaSA9IERlcG9zaXRzW21zZy5zZW5kZXJdLmFtb3VudDsKICAgICAgICAgICAgICAgIERlcG9zaXRzW21zZy5zZW5kZXJdLmFtb3VudCA9IDA7CiAgICAgICAgICAgICAgICBtc2cuc2VuZGVyLnNlbmQoX3dlaSk7CiAgICAgICAgICAgICAgICBEZXBvc2l0UmV0dXJuKG1zZy5zZW5kZXIsIF93ZWkpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKICAgIC8vIERlcG9zaXRvciBmdW5kcyB0byBiZSB3aXRoZHJhd24gYWZ0ZXIgcmVsZWFzZSBwZXJpb2QKICAgIGZ1bmN0aW9uCiAgICB3aXRoZHJhd0RlcG9zaXRvckZ1bmRzKGFkZHJlc3MgX3RvLCB1aW50IF93ZWkpCiAgICBwdWJsaWMKICAgIHJldHVybnMgKGJvb2wpCiAgICB7CiAgICAgICAgaWYgKF93ZWkgPiAwKQogICAgICAgIHsKICAgICAgICAgICAgaWYgKGlzT3duZXIoKSAmJiBEZXBvc2l0c1tfdG9dLmFtb3VudCA+IDApCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIFdpdGhkcmF3YWwoX3RvLCBfd2VpKTsKICAgICAgICAgICAgICAgIHJldHVybiBfdG8uc2VuZChfd2VpKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbgogICAgd2l0aGRyYXcoKQogICAgcHVibGljCiAgICB7CiAgICAgICAgaWYgKGlzQ3JlYXRvcigpICYmIG5vdyA+PSByZWxlYXNlRGF0ZSkKICAgICAgICB7CiAgICAgICAgICAgIFdpdGhkcmF3YWwoY3JlYXRvciwgdGhpcy5iYWxhbmNlKTsKICAgICAgICAgICAgY3JlYXRvci5zZW5kKHRoaXMuYmFsYW5jZSk7CiAgICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uCiAgICBnZXROdW1iZXJPZkRlcG9zaXRzKCkKICAgIHB1YmxpYwogICAgY29uc3RhbnQKICAgIHJldHVybnMgKHVpbnQpCiAgICB7CiAgICAgICAgcmV0dXJuIG51bURlcG9zaXRzOwogICAgfQoKICAgIGZ1bmN0aW9uCiAgICBraWxsKCkKICAgIHB1YmxpYwogICAgewogICAgICAgIGlmIChpc093bmVyKCkgfHwgaXNDcmVhdG9yKCkpCiAgICAgICAgICAgIHNlbGZkZXN0cnVjdChjcmVhdG9yKTsKICAgIH0KfQ=='.
	

]
