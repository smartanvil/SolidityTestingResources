Class {
	#name : #SRT5bdf79f1e7431edb75537d23d3b404ef86f44316,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT5bdf79f1e7431edb75537d23d3b404ef86f44316 >> base64 [
	^ ''.
	

]
