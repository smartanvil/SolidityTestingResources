Class {
	#name : #SRT3034c8171ebb1bd3211183d6e1249e19ab7fcd09,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT3034c8171ebb1bd3211183d6e1249e19ab7fcd09 >> base64 [
	^ ''.
	

]
