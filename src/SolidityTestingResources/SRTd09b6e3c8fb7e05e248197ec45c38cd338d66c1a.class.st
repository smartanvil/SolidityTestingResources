Class {
	#name : #SRTd09b6e3c8fb7e05e248197ec45c38cd338d66c1a,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTd09b6e3c8fb7e05e248197ec45c38cd338d66c1a >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTY7CgovLy8gQGF1dGhvciBKb3JkaSBCYXlsaW5hCi8vLyBBdWRpdG9yczogR3JpZmYgR3JlZW4gJiBwc2RldgovLy8gQG5vdGljZSBCYXNlZCBvbiBodHRwOi8vaHVkc29uamFtZXNvbi5jb20vZXRoZXJldW1tYXJyaWFnZS8KLy8vIExpY2Vuc2U6IEdOVS0zCgovLy8gQGRldiBgT3duZWRgIGlzIGEgYmFzZSBsZXZlbCBjb250cmFjdCB0aGF0IGFzc2lnbnMgYW4gYG93bmVyYCB0aGF0IGNhbiBiZQovLy8gIGxhdGVyIGNoYW5nZWQKY29udHJhY3QgT3duZWQgewoKICAgIC8vLyBAZGV2IGBvd25lcmAgaXMgdGhlIG9ubHkgYWRkcmVzcyB0aGF0IGNhbiBjYWxsIGEgZnVuY3Rpb24gd2l0aCB0aGlzCiAgICAvLy8gbW9kaWZpZXIKICAgIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgICAgIF87CiAgICB9CgogICAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CgogICAgLy8vIEBub3RpY2UgVGhlIENvbnN0cnVjdG9yIGFzc2lnbnMgdGhlIG1lc3NhZ2Ugc2VuZGVyIHRvIGJlIGBvd25lcmAKICAgIGZ1bmN0aW9uIE93bmVkKCkgewogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgIH0KCiAgICBhZGRyZXNzIHB1YmxpYyBuZXdPd25lcjsKCiAgICAvLy8gQG5vdGljZSBgb3duZXJgIGNhbiBzdGVwIGRvd24gYW5kIGFzc2lnbiBzb21lIG90aGVyIGFkZHJlc3MgdG8gdGhpcyByb2xlCiAgICAvLy8gQHBhcmFtIF9uZXdPd25lciBUaGUgYWRkcmVzcyBvZiB0aGUgbmV3IG93bmVyCiAgICAvLy8gIGFuIHVub3duZWQgbmV1dHJhbCB2YXVsdCwgaG93ZXZlciB0aGF0IGNhbm5vdCBiZSB1bmRvbmUKICAgIGZ1bmN0aW9uIGNoYW5nZU93bmVyKGFkZHJlc3MgX25ld093bmVyKSBvbmx5T3duZXIgewogICAgICAgIG5ld093bmVyID0gX25ld093bmVyOwogICAgfQogICAgLy8vIEBub3RpY2UgYG5ld093bmVyYCBoYXMgdG8gYWNjZXB0IHRoZSBvd25lcnNoaXAgYmVmb3JlIGl0IGlzIHRyYW5zZmVycmVkCiAgICAvLy8gIEFueSBhY2NvdW50IG9yIGFueSBjb250cmFjdCB3aXRoIHRoZSBhYmlsaXR5IHRvIGNhbGwgYGFjY2VwdE93bmVyc2hpcGAKICAgIC8vLyAgY2FuIGJlIHVzZWQgdG8gYWNjZXB0IG93bmVyc2hpcCBvZiB0aGlzIGNvbnRyYWN0LCBpbmNsdWRpbmcgYSBjb250cmFjdAogICAgLy8vICB3aXRoIG5vIG90aGVyIGZ1bmN0aW9ucwogICAgZnVuY3Rpb24gYWNjZXB0T3duZXJzaGlwKCkgewogICAgICAgIGlmIChtc2cuc2VuZGVyID09IG5ld093bmVyKSB7CiAgICAgICAgICAgIG93bmVyID0gbmV3T3duZXI7CiAgICAgICAgfQogICAgfQoKICAgIC8vIFRoaXMgaXMgYSBnZW5lcmFsIHNhZnR5IGZ1bmN0aW9uIHRoYXQgYWxsb3dzIHRoZSBvd25lciB0byBkbyBhIGxvdAogICAgLy8gIG9mIHRoaW5ncyBpbiB0aGUgdW5saWtlbHkgZXZlbnQgdGhhdCBzb21ldGhpbmcgZ29lcyB3cm9uZwogICAgLy8gX2RzdCBpcyB0aGUgY29udHJhY3QgYmVpbmcgY2FsbGVkIG1ha2luZyB0aGlzIGxpa2UgYSAxLzEgbXVsdGlzaWcKICAgIGZ1bmN0aW9uIGV4ZWN1dGUoYWRkcmVzcyBfZHN0LCB1aW50IF92YWx1ZSwgYnl0ZXMgX2RhdGEpIG9ubHlPd25lciB7CiAgICAgICAgX2RzdC5jYWxsLnZhbHVlKF92YWx1ZSkoX2RhdGEpOwogICAgfQp9CgoKY29udHJhY3QgTWFycmlhZ2UgaXMgT3duZWQKewogICAgLy8gTWFycmlhZ2UgZGF0YSB2YXJpYWJsZXMKICAgIHN0cmluZyBwdWJsaWMgcGFydG5lcjE7CiAgICBzdHJpbmcgcHVibGljIHBhcnRuZXIyOwogICAgdWludCBwdWJsaWMgbWFycmlhZ2VEYXRlOwogICAgc3RyaW5nIHB1YmxpYyBtYXJyaWFnZVN0YXR1czsKICAgIHN0cmluZyBwdWJsaWMgdm93czsKCiAgICBFdmVudFtdIHB1YmxpYyBtYWpvckV2ZW50czsKICAgIE1lc3NhZ2VbXSBwdWJsaWMgbWVzc2FnZXM7CgogICAgc3RydWN0IEV2ZW50IHsKICAgICAgICB1aW50IGRhdGU7CiAgICAgICAgc3RyaW5nIG5hbWU7CiAgICAgICAgc3RyaW5nIGRlc2NyaXB0aW9uOwogICAgICAgIHN0cmluZyB1cmw7CiAgICB9CgogICAgc3RydWN0IE1lc3NhZ2UgewogICAgICAgIHVpbnQgZGF0ZTsKICAgICAgICBzdHJpbmcgbmFtZUZyb207CiAgICAgICAgc3RyaW5nIHRleHQ7CiAgICAgICAgc3RyaW5nIHVybDsKICAgICAgICB1aW50IHZhbHVlOwogICAgfQoKICAgIG1vZGlmaWVyIGFyZU1hcnJpZWQgewogICAgICAgIHJlcXVpcmUoc2hhMyhtYXJyaWFnZVN0YXR1cykgPT0gc2hhMygiTWFycmllZCIpKTsKICAgICAgICBfOwogICAgfQoKICAgIC8vU2V0IE93bmVyCiAgICBmdW5jdGlvbiBNYXJyaWFnZShhZGRyZXNzIF9vd25lcikgewogICAgICAgIG93bmVyID0gX293bmVyOwogICAgfQoKICAgIGZ1bmN0aW9uIG51bWJlck9mTWFqb3JFdmVudHMoKSBjb25zdGFudCBwdWJsaWMgcmV0dXJucyAodWludCkgewogICAgICAgIHJldHVybiBtYWpvckV2ZW50cy5sZW5ndGg7CiAgICB9CgogICAgZnVuY3Rpb24gbnVtYmVyT2ZNZXNzYWdlcygpIGNvbnN0YW50IHB1YmxpYyByZXR1cm5zICh1aW50KSB7CiAgICAgICAgcmV0dXJuIG1lc3NhZ2VzLmxlbmd0aDsKICAgIH0KCiAgICAvLyBDcmVhdGUgaW5pdGlhbCBtYXJyaWFnZSBjb250cmFjdAogICAgZnVuY3Rpb24gY3JlYXRlTWFycmlhZ2UoCiAgICAgICAgc3RyaW5nIF9wYXJ0bmVyMSwKICAgICAgICBzdHJpbmcgX3BhcnRuZXIyLAogICAgICAgIHN0cmluZyBfdm93cywKICAgICAgICBzdHJpbmcgdXJsKSBvbmx5T3duZXIKICAgIHsKICAgICAgICByZXF1aXJlKG1ham9yRXZlbnRzLmxlbmd0aCA9PSAwKTsKICAgICAgICBwYXJ0bmVyMSA9IF9wYXJ0bmVyMTsKICAgICAgICBwYXJ0bmVyMiA9IF9wYXJ0bmVyMjsKICAgICAgICBtYXJyaWFnZURhdGUgPSBub3c7CiAgICAgICAgdm93cyA9IF92b3dzOwogICAgICAgIG1hcnJpYWdlU3RhdHVzID0gIk1hcnJpZWQiOwogICAgICAgIG1ham9yRXZlbnRzLnB1c2goRXZlbnQobm93LCAiTWFycmlhZ2UiLCB2b3dzLCB1cmwpKTsKICAgICAgICBNYWpvckV2ZW50KCJNYXJyaWdhZ2UiLCB2b3dzLCB1cmwpOwogICAgfQoKICAgIC8vIFNldCB0aGUgbWFycmlhZ2Ugc3RhdHVzIGlmIGl0IGNoYW5nZXMKICAgIGZ1bmN0aW9uIHNldFN0YXR1cyhzdHJpbmcgc3RhdHVzLCBzdHJpbmcgdXJsKSBvbmx5T3duZXIKICAgIHsKICAgICAgICBtYXJyaWFnZVN0YXR1cyA9IHN0YXR1czsKICAgICAgICBzZXRNYWpvckV2ZW50KCJDaGFuZ2VkIFN0YXR1cyIsIHN0YXR1cywgdXJsKTsKICAgIH0KCiAgICAvLyBTZXQgdGhlIElQRlMgaGFzaCBvZiB0aGUgaW1hZ2Ugb2YgdGhlIGNvdXBsZQogICAgZnVuY3Rpb24gc2V0TWFqb3JFdmVudChzdHJpbmcgbmFtZSwgc3RyaW5nIGRlc2NyaXB0aW9uLCBzdHJpbmcgdXJsKSBvbmx5T3duZXIgYXJlTWFycmllZAogICAgewogICAgICAgIG1ham9yRXZlbnRzLnB1c2goRXZlbnQobm93LCBuYW1lLCBkZXNjcmlwdGlvbiwgdXJsKSk7CiAgICAgICAgTWFqb3JFdmVudChuYW1lLCBkZXNjcmlwdGlvbiwgdXJsKTsKICAgIH0KCiAgICBmdW5jdGlvbiBzZW5kTWVzc2FnZShzdHJpbmcgbmFtZUZyb20sIHN0cmluZyB0ZXh0LCBzdHJpbmcgdXJsKSBwYXlhYmxlIGFyZU1hcnJpZWQgewogICAgICAgIGlmIChtc2cudmFsdWUgPiAwKSB7CiAgICAgICAgICAgIG93bmVyLnRyYW5zZmVyKHRoaXMuYmFsYW5jZSk7CiAgICAgICAgfQogICAgICAgIG1lc3NhZ2VzLnB1c2goTWVzc2FnZShub3csIG5hbWVGcm9tLCB0ZXh0LCB1cmwsIG1zZy52YWx1ZSkpOwogICAgICAgIE1lc3NhZ2VTZW50KG5hbWVGcm9tLCB0ZXh0LCB1cmwsIG1zZy52YWx1ZSk7CiAgICB9CgoKICAgIC8vIERlY2xhcmUgZXZlbnQgc3RydWN0dXJlCiAgICBldmVudCBNYWpvckV2ZW50KHN0cmluZyBuYW1lLCBzdHJpbmcgZGVzY3JpcHRpb24sIHN0cmluZyB1cmwpOwogICAgZXZlbnQgTWVzc2FnZVNlbnQoc3RyaW5nIG5hbWUsIHN0cmluZyBkZXNjcmlwdGlvbiwgc3RyaW5nIHVybCwgdWludCB2YWx1ZSk7Cn0='.
	

]
