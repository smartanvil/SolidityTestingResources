Class {
	#name : #SRTedb2675b05d3c89cd2800b8f23567bb77a990fe4,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTedb2675b05d3c89cd2800b8f23567bb77a990fe4 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7CgovKioKICogQHRpdGxlIFNhZmVNYXRoCiAqIEBkZXYgTWF0aCBvcGVyYXRpb25zIHdpdGggc2FmZXR5IGNoZWNrcyB0aGF0IHRocm93IG9uIGVycm9yCiAqLwpsaWJyYXJ5IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAgdWludDI1NiBjID0gYSAvIGI7CiAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgIC8vIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOyAvLyBUaGVyZSBpcyBubyBjYXNlIGluIHdoaWNoIHRoaXMgZG9lc24ndCBob2xkCiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgYXNzZXJ0KGMgPj0gYSk7CiAgICByZXR1cm4gYzsKICB9Cn0KCi8qKgogKiBAdGl0bGUgQ3Jvd2RzYWxlCiAqIEBkZXYgQ3Jvd2RzYWxlIGlzIGEgYmFzZSBjb250cmFjdCBmb3IgbWFuYWdpbmcgYSB0b2tlbiBjcm93ZHNhbGUuCiAqIENyb3dkc2FsZXMgaGF2ZSBhIHN0YXJ0IGFuZCBlbmQgdGltZXN0YW1wcywgd2hlcmUgaW52ZXN0b3JzIGNhbiBtYWtlCiAqIHRva2VuIHB1cmNoYXNlcyBhbmQgdGhlIGNyb3dkc2FsZSB3aWxsIGFzc2lnbiB0aGVtIHRva2VucyBiYXNlZAogKiBvbiBhIHRva2VuIHBlciBFVEggcmF0ZS4gRnVuZHMgY29sbGVjdGVkIGFyZSBmb3J3YXJkZWQgdG8gYSB3YWxsZXQKICogYXMgdGhleSBhcnJpdmUuCiAqLwpjb250cmFjdCB0b2tlbiB7IGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgcmVjZWl2ZXIsIHVpbnQgYW1vdW50KXsgIH0gfQpjb250cmFjdCBDcm93ZHNhbGUgewogIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwoKICAvLyB1aW50MjU2IGR1cmF0aW9uSW5NaW51dGVzOwogIC8vIGFkZHJlc3Mgd2hlcmUgZnVuZHMgYXJlIGNvbGxlY3RlZAogIGFkZHJlc3MgcHVibGljIHdhbGxldDsKICAvLyB0b2tlbiBhZGRyZXNzCiAgYWRkcmVzcyBwdWJsaWMgYWRkcmVzc09mVG9rZW5Vc2VkQXNSZXdhcmQ7CgogIHVpbnQyNTYgcHVibGljIHByaWNlID0gMzAwOwogIHVpbnQyNTYgcHVibGljIG1pbkJ1eTsKICB1aW50MjU2IHB1YmxpYyBtYXhCdXk7CgogIHRva2VuIHRva2VuUmV3YXJkOwoKICAvLyBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQpIHB1YmxpYyBjb250cmlidXRpb25zOwogIAoKCiAgLy8gc3RhcnQgYW5kIGVuZCB0aW1lc3RhbXBzIHdoZXJlIGludmVzdG1lbnRzIGFyZSBhbGxvd2VkIChib3RoIGluY2x1c2l2ZSkKICB1aW50MjU2IHB1YmxpYyBzdGFydFRpbWU7CiAgLy8gdWludDI1NiBwdWJsaWMgZW5kVGltZTsKICAvLyBhbW91bnQgb2YgcmFpc2VkIG1vbmV5IGluIHdlaQogIHVpbnQyNTYgcHVibGljIHdlaVJhaXNlZDsKCiAgLyoqCiAgICogZXZlbnQgZm9yIHRva2VuIHB1cmNoYXNlIGxvZ2dpbmcKICAgKiBAcGFyYW0gcHVyY2hhc2VyIHdobyBwYWlkIGZvciB0aGUgdG9rZW5zCiAgICogQHBhcmFtIGJlbmVmaWNpYXJ5IHdobyBnb3QgdGhlIHRva2VucwogICAqIEBwYXJhbSB2YWx1ZSB3ZWlzIHBhaWQgZm9yIHB1cmNoYXNlCiAgICogQHBhcmFtIGFtb3VudCBhbW91bnQgb2YgdG9rZW5zIHB1cmNoYXNlZAogICAqLwogIGV2ZW50IFRva2VuUHVyY2hhc2UoYWRkcmVzcyBpbmRleGVkIHB1cmNoYXNlciwgYWRkcmVzcyBpbmRleGVkIGJlbmVmaWNpYXJ5LCB1aW50MjU2IHZhbHVlLCB1aW50MjU2IGFtb3VudCk7CgoKICBmdW5jdGlvbiBDcm93ZHNhbGUoKSB7CiAgICAvL1lvdSB3aWxsIGNoYW5nZSB0aGlzIHRvIHlvdXIgd2FsbGV0IHdoZXJlIHlvdSBuZWVkIHRoZSBFVEggCiAgICB3YWxsZXQgPSAweGMwNzZiMDU0RUY2MmFDQ0U3NDcxNzVGNjk4RkMzRGJlYzlCN0EzNkY7CiAgICAvLyBkdXJhdGlvbkluTWludXRlcyA9IF9kdXJhdGlvbkluTWludXRlczsKICAgIC8vSGVyZSB3aWxsIGNvbWUgdGhlIGNoZWNrc3VtIGFkZHJlc3Mgd2UgZ290CiAgICBhZGRyZXNzT2ZUb2tlblVzZWRBc1Jld2FyZCA9IDB4ZDYyZTkyNTJGMTYxNUY1YzExMzNGMDYwQ0YwOTFhQ2I0YjBmYWEyYjsKCgogICAgdG9rZW5SZXdhcmQgPSB0b2tlbihhZGRyZXNzT2ZUb2tlblVzZWRBc1Jld2FyZCk7CiAgfQoKICBib29sIHB1YmxpYyBzdGFydGVkID0gZmFsc2U7CgogIGZ1bmN0aW9uIHN0YXJ0U2FsZSh1aW50MjU2IF9kZWxheUluTWludXRlcyl7CiAgICBpZiAobXNnLnNlbmRlciAhPSB3YWxsZXQpIHRocm93OwogICAgc3RhcnRUaW1lID0gbm93ICsgX2RlbGF5SW5NaW51dGVzKjEgbWludXRlczsKICAgIHN0YXJ0ZWQgPSB0cnVlOwogIH0KCiAgZnVuY3Rpb24gc3RvcFNhbGUoKXsKICAgIGlmKG1zZy5zZW5kZXIgIT0gd2FsbGV0KSB0aHJvdzsKICAgIHN0YXJ0ZWQgPSBmYWxzZTsKICB9CgogIGZ1bmN0aW9uIHNldFByaWNlKHVpbnQyNTYgX3ByaWNlKXsKICAgIGlmKG1zZy5zZW5kZXIgIT0gd2FsbGV0KSB0aHJvdzsKICAgIHByaWNlID0gX3ByaWNlOwogIH0KCiAgZnVuY3Rpb24gc2V0TWluQnV5KHVpbnQyNTYgX21pbkJ1eSl7CiAgICBpZihtc2cuc2VuZGVyIT13YWxsZXQpIHRocm93OwogICAgbWluQnV5ID0gX21pbkJ1eTsKICB9CgogIGZ1bmN0aW9uIHNldE1heEJ1eSh1aW50MjU2IF9tYXhCdXkpewogICAgaWYobXNnLnNlbmRlciAhPSB3YWxsZXQpIHRocm93OwogICAgbWF4QnV5ID0gX21heEJ1eTsKICB9CgogIGZ1bmN0aW9uIGNoYW5nZVdhbGxldChhZGRyZXNzIF93YWxsZXQpewogICAgaWYobXNnLnNlbmRlciAhPSB3YWxsZXQpIHRocm93OwogICAgd2FsbGV0ID0gX3dhbGxldDsKICB9CgogIGZ1bmN0aW9uIGNoYW5nZVRva2VuUmV3YXJkKGFkZHJlc3MgX3Rva2VuKXsKICAgIGlmKG1zZy5zZW5kZXIhPXdhbGxldCkgdGhyb3c7CiAgICB0b2tlblJld2FyZCA9IHRva2VuKF90b2tlbik7CiAgfQoKICAvLyBmYWxsYmFjayBmdW5jdGlvbiBjYW4gYmUgdXNlZCB0byBidXkgdG9rZW5zCiAgZnVuY3Rpb24gKCkgcGF5YWJsZSB7CiAgICBidXlUb2tlbnMobXNnLnNlbmRlcik7CiAgfQoKICAvLyBsb3cgbGV2ZWwgdG9rZW4gcHVyY2hhc2UgZnVuY3Rpb24KICBmdW5jdGlvbiBidXlUb2tlbnMoYWRkcmVzcyBiZW5lZmljaWFyeSkgcGF5YWJsZSB7CiAgICByZXF1aXJlKGJlbmVmaWNpYXJ5ICE9IDB4MCk7CiAgICByZXF1aXJlKHZhbGlkUHVyY2hhc2UoKSk7CgogICAgdWludDI1NiB3ZWlBbW91bnQgPSBtc2cudmFsdWU7CgogICAgLy8gY2FsY3VsYXRlIHRva2VuIGFtb3VudCB0byBiZSBzZW50CiAgICB1aW50MjU2IHRva2VucyA9ICh3ZWlBbW91bnQpICogcHJpY2U7Ly93ZWlhbW91bnQgKiBwcmljZSAKCiAgICBpZihtaW5CdXkhPTApewogICAgICBpZih0b2tlbnMgPCBtaW5CdXkqMTAqKjE4KSB0aHJvdzsKICAgIH0KCiAgICBpZihtYXhCdXkhPTApewogICAgICBpZih0b2tlbnMgPiBtYXhCdXkqMTAqKjE4KSB0aHJvdzsKICAgIH0KCiAgICAvLyB1cGRhdGUgc3RhdGUKICAgIHdlaVJhaXNlZCA9IHdlaVJhaXNlZC5hZGQod2VpQW1vdW50KTsKICAgIAogICAgLy8gaWYoY29udHJpYnV0aW9uc1ttc2cuc2VuZGVyXS5hZGQod2VpQW1vdW50KT4xMCoxMCoqMTgpIHRocm93OwogICAgLy8gY29udHJpYnV0aW9uc1ttc2cuc2VuZGVyXSA9IGNvbnRyaWJ1dGlvbnNbbXNnLnNlbmRlcl0uYWRkKHdlaUFtb3VudCk7CgogICAgdG9rZW5SZXdhcmQudHJhbnNmZXIoYmVuZWZpY2lhcnksIHRva2Vucyk7CiAgICBUb2tlblB1cmNoYXNlKG1zZy5zZW5kZXIsIGJlbmVmaWNpYXJ5LCB3ZWlBbW91bnQsIHRva2Vucyk7CiAgICBmb3J3YXJkRnVuZHMoKTsKICB9CgogIC8vIHNlbmQgZXRoZXIgdG8gdGhlIGZ1bmQgY29sbGVjdGlvbiB3YWxsZXQKICAvLyBvdmVycmlkZSB0byBjcmVhdGUgY3VzdG9tIGZ1bmQgZm9yd2FyZGluZyBtZWNoYW5pc21zCiAgZnVuY3Rpb24gZm9yd2FyZEZ1bmRzKCkgaW50ZXJuYWwgewogICAgLy8gd2FsbGV0LnRyYW5zZmVyKG1zZy52YWx1ZSk7CiAgICBpZiAoIXdhbGxldC5zZW5kKG1zZy52YWx1ZSkpIHsKICAgICAgdGhyb3c7CiAgICB9CiAgfQoKICAvLyBAcmV0dXJuIHRydWUgaWYgdGhlIHRyYW5zYWN0aW9uIGNhbiBidXkgdG9rZW5zCiAgZnVuY3Rpb24gdmFsaWRQdXJjaGFzZSgpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKGJvb2wpIHsKICAgIGJvb2wgd2l0aGluUGVyaW9kID0gc3RhcnRlZCYmKG5vdz49c3RhcnRUaW1lKTsKICAgIGJvb2wgbm9uWmVyb1B1cmNoYXNlID0gbXNnLnZhbHVlICE9IDA7CiAgICByZXR1cm4gd2l0aGluUGVyaW9kICYmIG5vblplcm9QdXJjaGFzZTsKICB9CgogIGZ1bmN0aW9uIHdpdGhkcmF3VG9rZW5zKHVpbnQyNTYgX2Ftb3VudCkgewogICAgaWYobXNnLnNlbmRlciE9d2FsbGV0KSB0aHJvdzsKICAgIHRva2VuUmV3YXJkLnRyYW5zZmVyKHdhbGxldCxfYW1vdW50KTsKICB9Cn0='.
	

]
