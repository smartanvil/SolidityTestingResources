Class {
	#name : #SRTd013b100aa17fbc70be8ced563a49feaacc5fd1d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTd013b100aa17fbc70be8ced563a49feaacc5fd1d >> base64 [
	^ ''.
	

]
