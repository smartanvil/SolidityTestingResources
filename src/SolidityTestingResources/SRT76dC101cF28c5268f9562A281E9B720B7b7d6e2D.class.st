Class {
	#name : #SRT76dC101cF28c5268f9562A281E9B720B7b7d6e2D,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT76dC101cF28c5268f9562A281E9B720B7b7d6e2D >> base64 [
	^ ''.
	

]
