Class {
	#name : #SRT30f9fa2a99abba8091e681299a739d5a4aae39c0,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT30f9fa2a99abba8091e681299a739d5a4aae39c0 >> base64 [
	^ ''.
	

]
