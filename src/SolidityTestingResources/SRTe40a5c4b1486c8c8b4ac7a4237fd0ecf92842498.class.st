Class {
	#name : #SRTe40a5c4b1486c8c8b4ac7a4237fd0ecf92842498,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTe40a5c4b1486c8c8b4ac7a4237fd0ecf92842498 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgoKLyoqCiAqIEB0aXRsZSBTYWZlTWF0aAogKiBAZGV2IE1hdGggb3BlcmF0aW9ucyB3aXRoIHNhZmV0eSBjaGVja3MgdGhhdCB0aHJvdyBvbiBlcnJvcgogKi8KbGlicmFyeSBTYWZlTWF0aCB7CgogIC8qKgogICogQGRldiBNdWx0aXBsaWVzIHR3byBudW1iZXJzLCB0aHJvd3Mgb24gb3ZlcmZsb3cuCiAgKi8KICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgaWYgKGEgPT0gMCkgewogICAgICByZXR1cm4gMDsKICAgIH0KICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGMgLyBhID09IGIpOwogICAgcmV0dXJuIGM7CiAgfQoKICAvKioKICAqIEBkZXYgSW50ZWdlciBkaXZpc2lvbiBvZiB0d28gbnVtYmVycywgdHJ1bmNhdGluZyB0aGUgcXVvdGllbnQuCiAgKi8KICBmdW5jdGlvbiBkaXYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgLy8gYXNzZXJ0KGIgPiAwKTsgLy8gU29saWRpdHkgYXV0b21hdGljYWxseSB0aHJvd3Mgd2hlbiBkaXZpZGluZyBieSAwCiAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgIC8vIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOyAvLyBUaGVyZSBpcyBubyBjYXNlIGluIHdoaWNoIHRoaXMgZG9lc24ndCBob2xkCiAgICByZXR1cm4gYzsKICB9CgogIC8qKgogICogQGRldiBTdWJ0cmFjdHMgdHdvIG51bWJlcnMsIHRocm93cyBvbiBvdmVyZmxvdyAoaS5lLiBpZiBzdWJ0cmFoZW5kIGlzIGdyZWF0ZXIgdGhhbiBtaW51ZW5kKS4KICAqLwogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIC8qKgogICogQGRldiBBZGRzIHR3byBudW1iZXJzLCB0aHJvd3Mgb24gb3ZlcmZsb3cuCiAgKi8KICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KfQoKaW50ZXJmYWNlIEVSQzIwIHsKICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyB3aG8pIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYpOwogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sIHVpbnQyNTYgdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKTsKICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBvd25lciwgYWRkcmVzcyBzcGVuZGVyKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2KTsKICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvLCB1aW50MjU2IHZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CiAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIHNwZW5kZXIsIHVpbnQyNTYgdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKTsKICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHZhbHVlKTsKICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBzcGVuZGVyLCB1aW50MjU2IHZhbHVlKTsKfQoKaW50ZXJmYWNlIEVSQzIyMyB7CiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIHRvLCB1aW50IHZhbHVlLCBieXRlcyBkYXRhKSBwdWJsaWM7CiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50IHZhbHVlLCBieXRlcyBpbmRleGVkIGRhdGEpOwp9Cgpjb250cmFjdCBFUkMyMjNSZWNlaXZpbmdDb250cmFjdCB7IAogICAgZnVuY3Rpb24gdG9rZW5GYWxsYmFjayhhZGRyZXNzIF9mcm9tLCB1aW50IF92YWx1ZSwgYnl0ZXMgX2RhdGEpIHB1YmxpYzsKfQoKY29udHJhY3QgQWxpY2lhVG9rZW4gaXMgRVJDMjAsIEVSQzIyMyB7CiAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQ7CiAgICAgCiAgICBzdHJpbmcgaW50ZXJuYWwgX25hbWU7CiAgICBzdHJpbmcgaW50ZXJuYWwgX3N5bWJvbDsKICAgIHVpbnQ4IGludGVybmFsIF9kZWNpbWFsczsKICAgIHVpbnQyNTYgaW50ZXJuYWwgX3RvdGFsU3VwcGx5OwoKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgaW50ZXJuYWwgYmFsYW5jZXM7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikpIGludGVybmFsIGFsbG93ZWQ7CgogICAgZnVuY3Rpb24gQWxpY2lhVG9rZW4oc3RyaW5nIG5hbWUsIHN0cmluZyBzeW1ib2wsIHVpbnQ4IGRlY2ltYWxzLCB1aW50MjU2IHRvdGFsU3VwcGx5KSBwdWJsaWMgewogICAgICAgIF9zeW1ib2wgPSBzeW1ib2w7CiAgICAgICAgX25hbWUgPSBuYW1lOwogICAgICAgIF9kZWNpbWFscyA9IGRlY2ltYWxzOwogICAgICAgIF90b3RhbFN1cHBseSA9IHRvdGFsU3VwcGx5OwogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gdG90YWxTdXBwbHk7CiAgICB9CgogICAgZnVuY3Rpb24gbmFtZSgpCiAgICAgICAgcHVibGljCiAgICAgICAgdmlldwogICAgICAgIHJldHVybnMgKHN0cmluZykgewogICAgICAgIHJldHVybiBfbmFtZTsKICAgIH0KCiAgICBmdW5jdGlvbiBzeW1ib2woKQogICAgICAgIHB1YmxpYwogICAgICAgIHZpZXcKICAgICAgICByZXR1cm5zIChzdHJpbmcpIHsKICAgICAgICByZXR1cm4gX3N5bWJvbDsKICAgIH0KCiAgICBmdW5jdGlvbiBkZWNpbWFscygpCiAgICAgICAgcHVibGljCiAgICAgICAgdmlldwogICAgICAgIHJldHVybnMgKHVpbnQ4KSB7CiAgICAgICAgcmV0dXJuIF9kZWNpbWFsczsKICAgIH0KCiAgICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpCiAgICAgICAgcHVibGljCiAgICAgICAgdmlldwogICAgICAgIHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICByZXR1cm4gX3RvdGFsU3VwcGx5OwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgICByZXF1aXJlKF90byAhPSBhZGRyZXNzKDApKTsKICAgICByZXF1aXJlKF92YWx1ZSA8PSBiYWxhbmNlc1ttc2cuc2VuZGVyXSk7CiAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBTYWZlTWF0aC5zdWIoYmFsYW5jZXNbbXNnLnNlbmRlcl0sIF92YWx1ZSk7CiAgICAgYmFsYW5jZXNbX3RvXSA9IFNhZmVNYXRoLmFkZChiYWxhbmNlc1tfdG9dLCBfdmFsdWUpOwogICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgICByZXR1cm4gdHJ1ZTsKICAgfQoKICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpIHsKICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogICB9CgogICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgcmVxdWlyZShfdG8gIT0gYWRkcmVzcygwKSk7CiAgICAgcmVxdWlyZShfdmFsdWUgPD0gYmFsYW5jZXNbX2Zyb21dKTsKICAgICByZXF1aXJlKF92YWx1ZSA8PSBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSk7CgogICAgYmFsYW5jZXNbX2Zyb21dID0gU2FmZU1hdGguc3ViKGJhbGFuY2VzW19mcm9tXSwgX3ZhbHVlKTsKICAgICBiYWxhbmNlc1tfdG9dID0gU2FmZU1hdGguYWRkKGJhbGFuY2VzW190b10sIF92YWx1ZSk7CiAgICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gPSBTYWZlTWF0aC5zdWIoYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0sIF92YWx1ZSk7CiAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwogICAgIHJldHVybiB0cnVlOwogICB9CgogICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgIHJldHVybiB0cnVlOwogICB9CgogICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYpIHsKICAgICByZXR1cm4gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsKICAgfQoKICAgZnVuY3Rpb24gaW5jcmVhc2VBcHByb3ZhbChhZGRyZXNzIF9zcGVuZGVyLCB1aW50IF9hZGRlZFZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gU2FmZU1hdGguYWRkKGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdLCBfYWRkZWRWYWx1ZSk7CiAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdKTsKICAgICByZXR1cm4gdHJ1ZTsKICAgfQoKICAgIGZ1bmN0aW9uIGRlY3JlYXNlQXBwcm92YWwoYWRkcmVzcyBfc3BlbmRlciwgdWludCBfc3VidHJhY3RlZFZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgIHVpbnQgb2xkVmFsdWUgPSBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXTsKICAgICBpZiAoX3N1YnRyYWN0ZWRWYWx1ZSA+IG9sZFZhbHVlKSB7CiAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IDA7CiAgICAgfSBlbHNlIHsKICAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gU2FmZU1hdGguc3ViKG9sZFZhbHVlLCBfc3VidHJhY3RlZFZhbHVlKTsKICAgIH0KICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0pOwogICAgIHJldHVybiB0cnVlOwogICB9CiAgIAogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQgX3ZhbHVlLCBieXRlcyBfZGF0YSkgcHVibGljIHsKICAgIHJlcXVpcmUoX3ZhbHVlID4gMCApOwogICAgaWYoaXNDb250cmFjdChfdG8pKSB7CiAgICAgICAgRVJDMjIzUmVjZWl2aW5nQ29udHJhY3QgcmVjZWl2ZXIgPSAgICAgICAgIEVSQzIyM1JlY2VpdmluZ0NvbnRyYWN0KF90byk7CiAgICAgICAgcmVjZWl2ZXIudG9rZW5GYWxsYmFjayhtc2cuc2VuZGVyLCBfdmFsdWUsIF9kYXRhKTsKICAgIH0KICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IGJhbGFuY2VzW21zZy5zZW5kZXJdLnN1YihfdmFsdWUpOwogICAgICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfdmFsdWUpOwogICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlLCBfZGF0YSk7CiAgICB9CgogICAgZnVuY3Rpb24gaXNDb250cmFjdChhZGRyZXNzIF9hZGRyKSBwcml2YXRlIHJldHVybnMgKGJvb2wgaXNfY29udHJhY3QpIHsKICAgICAgdWludCBsZW5ndGg7CiAgICAgIGFzc2VtYmx5IHsKICAgICAgICAgICAgLy9yZXRyaWV2ZSB0aGUgc2l6ZSBvZiB0aGUgY29kZSBvbiB0YXJnZXQgYWRkcmVzcywgdGhpcyBuZWVkcyBhc3NlbWJseQogICAgICAgICAgICBsZW5ndGggOj0gZXh0Y29kZXNpemUoX2FkZHIpCiAgICAgIH0KICAgICAgcmV0dXJuIChsZW5ndGg+MCk7CiAgICB9Cgp9'.
	

]
