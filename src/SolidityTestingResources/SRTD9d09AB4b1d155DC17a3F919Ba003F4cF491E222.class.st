Class {
	#name : #SRTD9d09AB4b1d155DC17a3F919Ba003F4cF491E222,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTD9d09AB4b1d155DC17a3F919Ba003F4cF491E222 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7Cgpjb250cmFjdCBUb2tlbiB7CgogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpOwp9Cgpjb250cmFjdCBDcm93ZHNhbGUgewoKICAgIGFkZHJlc3MgcHVibGljIGNyb3dkc2FsZU93bmVyOwogICAgYWRkcmVzcyBwdWJsaWMgY3Jvd2RzYWxlQmVuZWZpY2lhcnk7CiAgICBhZGRyZXNzIHB1YmxpYyBjcm93ZHNhbGVXYWxsZXQ7CgogICAgdWludCBwdWJsaWMgYW1vdW50UmFpc2VkOwogICAgdWludCBwdWJsaWMgZGVhZGxpbmU7CiAgICB1aW50IHB1YmxpYyBwZXJpb2Q7CiAgICB1aW50IHB1YmxpYyBldGhlckNvc3QgPSA0NzA7CiAgICB1aW50IHB1YmxpYyBzdGFydGVkOwoKICAgIFRva2VuIHB1YmxpYyByZXdhcmRUb2tlbjsKCiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIGJhbGFuY2VPZjsKCiAgICBib29sIHB1YmxpYyBmdW5kaW5nR29hbFJlYWNoZWQgPSBmYWxzZTsKICAgIGJvb2wgcHVibGljIGNyb3dkc2FsZUNsb3NlZCA9IGZhbHNlOwoKICAgIGV2ZW50IEdvYWxSZWFjaGVkKGFkZHJlc3MgcmVjaXBpZW50LCB1aW50IHRvdGFsQW1vdW50UmFpc2VkKTsKICAgIGV2ZW50IEZ1bmRUcmFuc2ZlcihhZGRyZXNzIGJhY2tlciwgdWludCBhbW91bnQsIGJvb2wgaXNDb250cmlidXRpb24pOwoKICAgIGZ1bmN0aW9uIENyb3dkc2FsZSgKICAgICAgICBhZGRyZXNzIF9iZW5lZmljaWFyeVRoYXRPd25zVG9rZW5zLAogICAgICAgIHVpbnQgX2R1cmF0aW9uSW5EYXlzLAogICAgICAgIGFkZHJlc3MgX2FkZHJlc3NPZlRva2VuVXNlZEFzUmV3YXJkLAogICAgICAgIGFkZHJlc3MgX2Nyb3dkc2FsZVdhbGxldAogICAgKSBwdWJsaWMgewogICAgICAgIGNyb3dkc2FsZU93bmVyID0gbXNnLnNlbmRlcjsKICAgICAgICBjcm93ZHNhbGVCZW5lZmljaWFyeSA9IF9iZW5lZmljaWFyeVRoYXRPd25zVG9rZW5zOwogICAgICAgIGRlYWRsaW5lID0gbm93ICsgX2R1cmF0aW9uSW5EYXlzICogMSBkYXlzOwogICAgICAgIHBlcmlvZCA9IF9kdXJhdGlvbkluRGF5cyAqIDEgZGF5cyAvIDM7CiAgICAgICAgcmV3YXJkVG9rZW4gPSBUb2tlbihfYWRkcmVzc09mVG9rZW5Vc2VkQXNSZXdhcmQpOwogICAgICAgIGNyb3dkc2FsZVdhbGxldCA9IF9jcm93ZHNhbGVXYWxsZXQ7CiAgICAgICAgc3RhcnRlZCA9IG5vdzsKICAgIH0KCiAgICBmdW5jdGlvbiBzdGFnZU51bWJlcigpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50IHN0YWdlKSB7CiAgICAgICAgcmVxdWlyZShub3cgPj0gc3RhcnRlZCk7CiAgICAgICAgdWludCByZXN1bHQgPSAxICArIChub3cgLSBzdGFydGVkKSAvIHBlcmlvZDsKICAgICAgICBpZiAocmVzdWx0ID4gMykgewogICAgICAgICAgICByZXN1bHQgPSAzOwogICAgICAgIH0KICAgICAgICBzdGFnZSA9IHJlc3VsdDsKICAgIH0KCiAgICBmdW5jdGlvbiBjYWxjVG9rZW5Db3N0KCkgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQgdG9rZW5Db3N0KSB7CiAgICAgICAgLyogSG93IG1hbnkgV0VJcyBpbiBoYWxmIGRvbGxhciAqLwogICAgICAgIHVpbnQgaGFsZkRvbGxhciA9IDEgZXRoZXIgLyBldGhlckNvc3QgLyAyOwogICAgICAgIC8qIEdldCBjdXJyZW50IHN0YWdlIGZvciBkaXNjb3VudCBjYWxjdWxhdGlvbiAqLwogICAgICAgIHVpbnQgc3RhZ2UgPSBzdGFnZU51bWJlcigpOwogICAgICAgIC8qIEZvciBmaXJzdCBzdGFnZSBwcmljZSBpcyAyIGRvbGxhcnMsIGZvciBzZWNvbmQgc3RhZ2UgaXMgMi41IGRvbGxhcnMgJiAzIGRvbGxhcnMgZm9yIG90aGVycyAqLwogICAgICAgIGlmIChzdGFnZSA9PSAxKSB7CiAgICAgICAgICAgIHRva2VuQ29zdCA9IGhhbGZEb2xsYXIgKiA0OwogICAgICAgIH0gZWxzZSBpZiAoc3RhZ2UgPT0gMikgewogICAgICAgICAgICB0b2tlbkNvc3QgPSBoYWxmRG9sbGFyICogNTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0b2tlbkNvc3QgPSBoYWxmRG9sbGFyICogNjsKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gKCkgcHVibGljIHBheWFibGUgewogICAgICAgIC8qIENyb3dkc2FsZSBzaG91bGRuJ3QgYmUgY2xvc2VkICovCiAgICAgICAgcmVxdWlyZSghY3Jvd2RzYWxlQ2xvc2VkKTsKICAgICAgICAvKiBDYWxjdWxhdGUgJiBjaGVjayBudW1iZXIgb2YgdG9rZW5zIGZvciB0aGF0IGFtb3VudCAqLwogICAgICAgIHVpbnQgYW1vdW50ID0gbXNnLnZhbHVlOwogICAgICAgIHVpbnQgdG9rZW5zID0gYW1vdW50IC8gY2FsY1Rva2VuQ29zdCgpOwogICAgICAgIHJlcXVpcmUodG9rZW5zID4gMCk7CiAgICAgICAgLyogSW5jcmVhc2UgdXNlcidzIGFtb3VudCBvZiBXRUkgaW4gY3Jvd2RzYWxlICovCiAgICAgICAgYmFsYW5jZU9mW21zZy5zZW5kZXJdICs9IGFtb3VudDsKICAgICAgICBhbW91bnRSYWlzZWQgKz0gYW1vdW50OwogICAgICAgIC8qIFRyYW5zZmVyIGFsbG93ZWQgdG9rZW5zIGZyb20gY3Jvd2RzYWxlIG93bmVyIHRvIHNlbmRlciAqLwogICAgICAgIHJld2FyZFRva2VuLnRyYW5zZmVyRnJvbShjcm93ZHNhbGVXYWxsZXQsIG1zZy5zZW5kZXIsIHRva2Vucyk7CiAgICAgICAgRnVuZFRyYW5zZmVyKG1zZy5zZW5kZXIsIGFtb3VudCwgdHJ1ZSk7CiAgICAgICAgLyogQ2hlY2sgaGFzIGdvYWwgYmVlbiByZWFjaGVkICovCiAgICAgICAgY2hlY2tHb2FsUmVhY2hlZCgpOwogICAgfQoKICAgIGZ1bmN0aW9uIGNoZWNrR29hbFJlYWNoZWQoKSBwdWJsaWMgewogICAgICAgIHVpbnQyNTYgdG9rZW5zTGVmdCA9IHJld2FyZFRva2VuLmJhbGFuY2VPZihjcm93ZHNhbGVXYWxsZXQpOwogICAgICAgIGlmICh0b2tlbnNMZWZ0ID09IDApIHsKICAgICAgICAgICAgZnVuZGluZ0dvYWxSZWFjaGVkID0gdHJ1ZTsKICAgICAgICAgICAgY3Jvd2RzYWxlQ2xvc2VkID0gdHJ1ZTsKICAgICAgICAgICAgR29hbFJlYWNoZWQoY3Jvd2RzYWxlQmVuZWZpY2lhcnksIGFtb3VudFJhaXNlZCk7CiAgICAgICAgfSBlbHNlIGlmIChub3cgPj0gZGVhZGxpbmUpIHsKICAgICAgICAgICAgY3Jvd2RzYWxlQ2xvc2VkID0gdHJ1ZTsKICAgICAgICAgICAgR29hbFJlYWNoZWQoY3Jvd2RzYWxlQmVuZWZpY2lhcnksIGFtb3VudFJhaXNlZCk7CiAgICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIHdpdGhkcmF3KCkgcHVibGljIHsKICAgICAgICByZXF1aXJlKGNyb3dkc2FsZUJlbmVmaWNpYXJ5ID09IG1zZy5zZW5kZXIpOwogICAgICAgIGlmIChjcm93ZHNhbGVCZW5lZmljaWFyeS5zZW5kKGFtb3VudFJhaXNlZCkpIHsKICAgICAgICAgICAgRnVuZFRyYW5zZmVyKGNyb3dkc2FsZUJlbmVmaWNpYXJ5LCBhbW91bnRSYWlzZWQsIGZhbHNlKTsKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gdXBkYXRlRXRoZXJDb3N0KHVpbnQgX2V0aGVyQ29zdCkgcHVibGljIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gY3Jvd2RzYWxlT3duZXIpOwogICAgICAgIGV0aGVyQ29zdCA9IF9ldGhlckNvc3Q7CiAgICB9Cn0='.
	

]
