Class {
	#name : #SRTf28a521cc13f6698DDCF9B197608052632fC3ea3,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTf28a521cc13f6698DDCF9B197608052632fC3ea3 >> base64 [
	^ ''.
	

]
