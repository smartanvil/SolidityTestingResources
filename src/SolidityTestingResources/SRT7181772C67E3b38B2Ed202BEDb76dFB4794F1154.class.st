Class {
	#name : #SRT7181772C67E3b38B2Ed202BEDb76dFB4794F1154,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT7181772C67E3b38B2Ed202BEDb76dFB4794F1154 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMDsKCmxpYnJhcnkgU2FmZUVSQzIwIHsKICBmdW5jdGlvbiBzYWZlVHJhbnNmZXIoRVJDMjBCYXNpYyB0b2tlbiwgYWRkcmVzcyB0bywgdWludDI1NiB2YWx1ZSkgaW50ZXJuYWwgewogICAgYXNzZXJ0KHRva2VuLnRyYW5zZmVyKHRvLCB2YWx1ZSkpOwogIH0KCiAgZnVuY3Rpb24gc2FmZVRyYW5zZmVyRnJvbShFUkMyMCB0b2tlbiwgYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvLCB1aW50MjU2IHZhbHVlKSBpbnRlcm5hbCB7CiAgICBhc3NlcnQodG9rZW4udHJhbnNmZXJGcm9tKGZyb20sIHRvLCB2YWx1ZSkpOwogIH0KCiAgZnVuY3Rpb24gc2FmZUFwcHJvdmUoRVJDMjAgdG9rZW4sIGFkZHJlc3Mgc3BlbmRlciwgdWludDI1NiB2YWx1ZSkgaW50ZXJuYWwgewogICAgYXNzZXJ0KHRva2VuLmFwcHJvdmUoc3BlbmRlciwgdmFsdWUpKTsKICB9Cn0KCgpjb250cmFjdCBPd25hYmxlIHsKICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKCgogIGV2ZW50IE93bmVyc2hpcFRyYW5zZmVycmVkKGFkZHJlc3MgaW5kZXhlZCBwcmV2aW91c093bmVyLCBhZGRyZXNzIGluZGV4ZWQgbmV3T3duZXIpOwoKCiAgLyoqCiAgICogQGRldiBUaGUgT3duYWJsZSBjb25zdHJ1Y3RvciBzZXRzIHRoZSBvcmlnaW5hbCBgb3duZXJgIG9mIHRoZSBjb250cmFjdCB0byB0aGUgc2VuZGVyCiAgICogYWNjb3VudC4KICAgKi8KICBmdW5jdGlvbiBPd25hYmxlKCkgewogICAgb3duZXIgPSBtc2cuc2VuZGVyOwogIH0KCgogIC8qKgogICAqIEBkZXYgVGhyb3dzIGlmIGNhbGxlZCBieSBhbnkgYWNjb3VudCBvdGhlciB0aGFuIHRoZSBvd25lci4KICAgKi8KICBtb2RpZmllciBvbmx5T3duZXIoKSB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgXzsKICB9CgoKICAvKioKICAgKiBAZGV2IEFsbG93cyB0aGUgY3VycmVudCBvd25lciB0byB0cmFuc2ZlciBjb250cm9sIG9mIHRoZSBjb250cmFjdCB0byBhIG5ld093bmVyLgogICAqIEBwYXJhbSBuZXdPd25lciBUaGUgYWRkcmVzcyB0byB0cmFuc2ZlciBvd25lcnNoaXAgdG8uCiAgICovCiAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBuZXdPd25lcikgb25seU93bmVyIHB1YmxpYyB7CiAgICByZXF1aXJlKG5ld093bmVyICE9IGFkZHJlc3MoMCkpOwogICAgT3duZXJzaGlwVHJhbnNmZXJyZWQob3duZXIsIG5ld093bmVyKTsKICAgIG93bmVyID0gbmV3T3duZXI7CiAgfQoKfQoKCmNvbnRyYWN0IEVSQzIwQmFzaWMgewogIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5OwogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIHdobykgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpOwogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sIHVpbnQyNTYgdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKTsKICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHZhbHVlKTsKfQoKY29udHJhY3QgRVJDMjAgaXMgRVJDMjBCYXNpYyB7CiAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3Mgb3duZXIsIGFkZHJlc3Mgc3BlbmRlcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpOwogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIGZyb20sIGFkZHJlc3MgdG8sIHVpbnQyNTYgdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKTsKICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3Mgc3BlbmRlciwgdWludDI1NiB2YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpOwogIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBvd25lciwgYWRkcmVzcyBpbmRleGVkIHNwZW5kZXIsIHVpbnQyNTYgdmFsdWUpOwp9CgoKCmNvbnRyYWN0IENhblJlY2xhaW1Ub2tlbiBpcyBPd25hYmxlIHsKICB1c2luZyBTYWZlRVJDMjAgZm9yIEVSQzIwQmFzaWM7CgogIC8qKgogICAqIEBkZXYgUmVjbGFpbSBhbGwgRVJDMjBCYXNpYyBjb21wYXRpYmxlIHRva2VucwogICAqIEBwYXJhbSB0b2tlbiBFUkMyMEJhc2ljIFRoZSBhZGRyZXNzIG9mIHRoZSB0b2tlbiBjb250cmFjdAogICAqLwogIGZ1bmN0aW9uIHJlY2xhaW1Ub2tlbihFUkMyMEJhc2ljIHRva2VuKSBleHRlcm5hbCBvbmx5T3duZXIgewogICAgdWludDI1NiBiYWxhbmNlID0gdG9rZW4uYmFsYW5jZU9mKHRoaXMpOwogICAgdG9rZW4uc2FmZVRyYW5zZmVyKG93bmVyLCBiYWxhbmNlKTsKICB9Cgp9Cgpjb250cmFjdCBIYXNOb1Rva2VucyBpcyBDYW5SZWNsYWltVG9rZW4gewoKIC8qKgogICogQGRldiBSZWplY3QgYWxsIEVSQzIzIGNvbXBhdGlibGUgdG9rZW5zCiAgKiBAcGFyYW0gZnJvbV8gYWRkcmVzcyBUaGUgYWRkcmVzcyB0aGF0IGlzIHRyYW5zZmVycmluZyB0aGUgdG9rZW5zCiAgKiBAcGFyYW0gdmFsdWVfIHVpbnQyNTYgdGhlIGFtb3VudCBvZiB0aGUgc3BlY2lmaWVkIHRva2VuCiAgKiBAcGFyYW0gZGF0YV8gQnl0ZXMgVGhlIGRhdGEgcGFzc2VkIGZyb20gdGhlIGNhbGxlci4KICAqLwogIGZ1bmN0aW9uIHRva2VuRmFsbGJhY2soYWRkcmVzcyBmcm9tXywgdWludDI1NiB2YWx1ZV8sIGJ5dGVzIGRhdGFfKSBleHRlcm5hbCB7CiAgICByZXZlcnQoKTsKICB9Cgp9Cgpjb250cmFjdCBIYXNOb0V0aGVyIGlzIE93bmFibGUgewoKICAvKioKICAqIEBkZXYgQ29uc3RydWN0b3IgdGhhdCByZWplY3RzIGluY29taW5nIEV0aGVyCiAgKiBAZGV2IFRoZSBgcGF5YWJsZWAgZmxhZyBpcyBhZGRlZCBzbyB3ZSBjYW4gYWNjZXNzIGBtc2cudmFsdWVgIHdpdGhvdXQgY29tcGlsZXIgd2FybmluZy4gSWYgd2UKICAqIGxlYXZlIG91dCBwYXlhYmxlLCB0aGVuIFNvbGlkaXR5IHdpbGwgYWxsb3cgaW5oZXJpdGluZyBjb250cmFjdHMgdG8gaW1wbGVtZW50IGEgcGF5YWJsZQogICogY29uc3RydWN0b3IuIEJ5IGRvaW5nIGl0IHRoaXMgd2F5IHdlIHByZXZlbnQgYSBwYXlhYmxlIGNvbnN0cnVjdG9yIGZyb20gd29ya2luZy4gQWx0ZXJuYXRpdmVseQogICogd2UgY291bGQgdXNlIGFzc2VtYmx5IHRvIGFjY2VzcyBtc2cudmFsdWUuCiAgKi8KICBmdW5jdGlvbiBIYXNOb0V0aGVyKCkgcGF5YWJsZSB7CiAgICByZXF1aXJlKG1zZy52YWx1ZSA9PSAwKTsKICB9CgogIC8qKgogICAqIEBkZXYgRGlzYWxsb3dzIGRpcmVjdCBzZW5kIGJ5IHNldHRpbmdzIGEgZGVmYXVsdCBmdW5jdGlvbiB3aXRob3V0IHRoZSBgcGF5YWJsZWAgZmxhZy4KICAgKi8KICBmdW5jdGlvbigpIGV4dGVybmFsIHsKICB9CgogIC8qKgogICAqIEBkZXYgVHJhbnNmZXIgYWxsIEV0aGVyIGhlbGQgYnkgdGhlIGNvbnRyYWN0IHRvIHRoZSBvd25lci4KICAgKi8KICBmdW5jdGlvbiByZWNsYWltRXRoZXIoKSBleHRlcm5hbCBvbmx5T3duZXIgewogICAgYXNzZXJ0KG93bmVyLnNlbmQodGhpcy5iYWxhbmNlKSk7CiAgfQp9CgoKY29udHJhY3QgQ2xhaW1hYmxlIGlzIE93bmFibGUgewogIGFkZHJlc3MgcHVibGljIHBlbmRpbmdPd25lcjsKCiAgLyoqCiAgICogQGRldiBNb2RpZmllciB0aHJvd3MgaWYgY2FsbGVkIGJ5IGFueSBhY2NvdW50IG90aGVyIHRoYW4gdGhlIHBlbmRpbmdPd25lci4KICAgKi8KICBtb2RpZmllciBvbmx5UGVuZGluZ093bmVyKCkgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IHBlbmRpbmdPd25lcik7CiAgICBfOwogIH0KCiAgLyoqCiAgICogQGRldiBBbGxvd3MgdGhlIGN1cnJlbnQgb3duZXIgdG8gc2V0IHRoZSBwZW5kaW5nT3duZXIgYWRkcmVzcy4KICAgKiBAcGFyYW0gbmV3T3duZXIgVGhlIGFkZHJlc3MgdG8gdHJhbnNmZXIgb3duZXJzaGlwIHRvLgogICAqLwogIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpIG9ubHlPd25lciBwdWJsaWMgewogICAgcGVuZGluZ093bmVyID0gbmV3T3duZXI7CiAgfQoKICAvKioKICAgKiBAZGV2IEFsbG93cyB0aGUgcGVuZGluZ093bmVyIGFkZHJlc3MgdG8gZmluYWxpemUgdGhlIHRyYW5zZmVyLgogICAqLwogIGZ1bmN0aW9uIGNsYWltT3duZXJzaGlwKCkgb25seVBlbmRpbmdPd25lciBwdWJsaWMgewogICAgT3duZXJzaGlwVHJhbnNmZXJyZWQob3duZXIsIHBlbmRpbmdPd25lcik7CiAgICBvd25lciA9IHBlbmRpbmdPd25lcjsKICAgIHBlbmRpbmdPd25lciA9IDB4MDsKICB9Cn0KCgpjb250cmFjdCBBdXRob3JpemVkVXNlcnMgaXMgQ2xhaW1hYmxlLCBIYXNOb0V0aGVyLCBIYXNOb1Rva2VucyB7CiAgLy8gYWNjb3VudCA9PiB1c2VyCiAgbWFwcGluZyhhZGRyZXNzID0+IGFkZHJlc3MpIHB1YmxpYyBhdXRob3JpemVkVXNlcnM7CgogIC8vIGFjY291bnQgPT4gdG9rZW4gPT4gdXNlcgogIG1hcHBpbmcoYWRkcmVzcyA9PiBtYXBwaW5nKGFkZHJlc3MgPT4gYWRkcmVzcykpIHB1YmxpYyBhdXRob3JpemVkVG9rZW5Vc2VyczsKCiAgZnVuY3Rpb24gQXV0aG9yaXplZFVzZXJzKCkKICAgIHB1YmxpYwogIHsKCiAgfQoKCiAgZXZlbnQgVXNlckF1dGhvcml6ZWRGb3JUb2tlbihhZGRyZXNzIGFjY291bnQsIGFkZHJlc3MgdXNlciwgYWRkcmVzcyB0b2tlbik7CiBldmVudCBVc2VyQXV0aG9yaXplZChhZGRyZXNzIGFjY291bnQsIGFkZHJlc3MgdXNlcik7CgogIGZ1bmN0aW9uIGF1dGhvcml6ZUZvclRva2VuKGFkZHJlc3MgdXNlciwgYWRkcmVzcyB0b2tlbikKICAgIHB1YmxpYwogIHsKICAgIGF1dGhvcml6ZWRUb2tlblVzZXJzW21zZy5zZW5kZXJdW3Rva2VuXSA9IHVzZXI7CiAgICBVc2VyQXV0aG9yaXplZEZvclRva2VuKG1zZy5zZW5kZXIsIHVzZXIsIHRva2VuKTsKICB9CgogIC8qKgogICAqIEF1dGhvcml6ZXMgdGhlIGdpdmVuIHVzZXIgdG8gY2xhaW0gY3JlZGl0IGZvciB0aGUgY2FsbGVycyB0b2tlbnMuICBGb3IgRVRILCB1c2UgdG9rZW4gPSAweDAKICAgKi8KICBmdW5jdGlvbiBhdXRob3JpemUoYWRkcmVzcyB1c2VyKQogICAgcHVibGljCiAgewogICAgYXV0aG9yaXplZFVzZXJzW21zZy5zZW5kZXJdID0gdXNlcjsKICAgIFVzZXJBdXRob3JpemVkKG1zZy5zZW5kZXIsIHVzZXIpOwogIH0KCgogIGZ1bmN0aW9uIGlzQXV0aG9yaXplZEZvclRva2VuKGFkZHJlc3MgYWNjb3VudCwgYWRkcmVzcyB1c2VyLCBhZGRyZXNzIHRva2VuKQogICAgcHVibGljCiAgICBjb25zdGFudAogICAgcmV0dXJucyAoYm9vbCkKICB7CiAgICByZXR1cm4gYXV0aG9yaXplZFRva2VuVXNlcnNbYWNjb3VudF1bdG9rZW5dID09IHVzZXIgfHwgYXV0aG9yaXplZFVzZXJzW2FjY291bnRdID09IHVzZXI7CiAgfQp9'.
	

]
