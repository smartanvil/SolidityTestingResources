Class {
	#name : #SRT31305680244131824224819256fb9cc851684b98,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT31305680244131824224819256fb9cc851684b98 >> base64 [
	^ ''.
	

]
