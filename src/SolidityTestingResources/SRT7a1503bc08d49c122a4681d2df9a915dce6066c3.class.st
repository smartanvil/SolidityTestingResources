Class {
	#name : #SRT7a1503bc08d49c122a4681d2df9a915dce6066c3,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT7a1503bc08d49c122a4681d2df9a915dce6066c3 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgoKbGlicmFyeSBTYWZlTWF0aCB7CiAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIGlmIChhID09IDApIHsKICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICB1aW50MjU2IGMgPSBhICogYjsKICAgIGFzc2VydChjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIC8vIGFzc2VydChiID4gMCk7IC8vIFNvbGlkaXR5IGF1dG9tYXRpY2FsbHkgdGhyb3dzIHdoZW4gZGl2aWRpbmcgYnkgMAogICAgdWludDI1NiBjID0gYSAvIGI7CiAgICAvLyBhc3NlcnQoYSA9PSBiICogYyArIGEgJSBiKTsgLy8gVGhlcmUgaXMgbm8gY2FzZSBpbiB3aGljaCB0aGlzIGRvZXNuJ3QgaG9sZAogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBzdWIodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KfQoKY29udHJhY3QgRVJDNzIxIHsKICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3Rva2VuSWQpOwogIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfYXBwcm92ZWQsIHVpbnQyNTYgX3Rva2VuSWQpOwoKICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYgX2JhbGFuY2UpOwogIGZ1bmN0aW9uIG93bmVyT2YodWludDI1NiBfdG9rZW5JZCkgcHVibGljIHZpZXcgcmV0dXJucyAoYWRkcmVzcyBfb3duZXIpOwogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF90b2tlbklkKSBwdWJsaWM7CiAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF90bywgdWludDI1NiBfdG9rZW5JZCkgcHVibGljOwogIGZ1bmN0aW9uIHRha2VPd25lcnNoaXAodWludDI1NiBfdG9rZW5JZCkgcHVibGljOwp9Cgpjb250cmFjdCBFUkM3MjFUb2tlbiBpcyBFUkM3MjEgewogIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwoKICAvLyBUb3RhbCBhbW91bnQgb2YgdG9rZW5zCiAgdWludDI1NiBwcml2YXRlIHRvdGFsVG9rZW5zOwoKICAvLyBNYXBwaW5nIGZyb20gdG9rZW4gSUQgdG8gb3duZXIKICBtYXBwaW5nICh1aW50MjU2ID0+IGFkZHJlc3MpIHByaXZhdGUgdG9rZW5Pd25lcjsKCiAgLy8gTWFwcGluZyBmcm9tIHRva2VuIElEIHRvIGFwcHJvdmVkIGFkZHJlc3MKICBtYXBwaW5nICh1aW50MjU2ID0+IGFkZHJlc3MpIHByaXZhdGUgdG9rZW5BcHByb3ZhbHM7CgogIC8vIE1hcHBpbmcgZnJvbSBvd25lciB0byBsaXN0IG9mIG93bmVkIHRva2VuIElEcwogIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NltdKSBwcml2YXRlIG93bmVkVG9rZW5zOwoKICAvLyBNYXBwaW5nIGZyb20gdG9rZW4gSUQgdG8gaW5kZXggb2YgdGhlIG93bmVyIHRva2VucyBsaXN0CiAgbWFwcGluZyh1aW50MjU2ID0+IHVpbnQyNTYpIHByaXZhdGUgb3duZWRUb2tlbnNJbmRleDsKCiAgLyoqCiAgKiBAZGV2IEd1YXJhbnRlZXMgbXNnLnNlbmRlciBpcyBvd25lciBvZiB0aGUgZ2l2ZW4gdG9rZW4KICAqIEBwYXJhbSBfdG9rZW5JZCB1aW50MjU2IElEIG9mIHRoZSB0b2tlbiB0byB2YWxpZGF0ZSBpdHMgb3duZXJzaGlwIGJlbG9uZ3MgdG8gbXNnLnNlbmRlcgogICovCiAgbW9kaWZpZXIgb25seU93bmVyT2YodWludDI1NiBfdG9rZW5JZCkgewogICAgcmVxdWlyZShvd25lck9mKF90b2tlbklkKSA9PSBtc2cuc2VuZGVyKTsKICAgIF87CiAgfQoKICAvKioKICAqIEBkZXYgR2V0cyB0aGUgdG90YWwgYW1vdW50IG9mIHRva2VucyBzdG9yZWQgYnkgdGhlIGNvbnRyYWN0CiAgKiBAcmV0dXJuIHVpbnQyNTYgcmVwcmVzZW50aW5nIHRoZSB0b3RhbCBhbW91bnQgb2YgdG9rZW5zCiAgKi8KICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHJldHVybiB0b3RhbFRva2VuczsKICB9CgogIC8qKgogICogQGRldiBHZXRzIHRoZSBiYWxhbmNlIG9mIHRoZSBzcGVjaWZpZWQgYWRkcmVzcwogICogQHBhcmFtIF9vd25lciBhZGRyZXNzIHRvIHF1ZXJ5IHRoZSBiYWxhbmNlIG9mCiAgKiBAcmV0dXJuIHVpbnQyNTYgcmVwcmVzZW50aW5nIHRoZSBhbW91bnQgb3duZWQgYnkgdGhlIHBhc3NlZCBhZGRyZXNzCiAgKi8KICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHJldHVybiBvd25lZFRva2Vuc1tfb3duZXJdLmxlbmd0aDsKICB9CgogIC8qKgogICogQGRldiBHZXRzIHRoZSBsaXN0IG9mIHRva2VucyBvd25lZCBieSBhIGdpdmVuIGFkZHJlc3MKICAqIEBwYXJhbSBfb3duZXIgYWRkcmVzcyB0byBxdWVyeSB0aGUgdG9rZW5zIG9mCiAgKiBAcmV0dXJuIHVpbnQyNTZbXSByZXByZXNlbnRpbmcgdGhlIGxpc3Qgb2YgdG9rZW5zIG93bmVkIGJ5IHRoZSBwYXNzZWQgYWRkcmVzcwogICovCiAgZnVuY3Rpb24gdG9rZW5zT2YoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTZbXSkgewogICAgcmV0dXJuIG93bmVkVG9rZW5zW19vd25lcl07CiAgfQoKICAvKioKICAqIEBkZXYgR2V0cyB0aGUgb3duZXIgb2YgdGhlIHNwZWNpZmllZCB0b2tlbiBJRAogICogQHBhcmFtIF90b2tlbklkIHVpbnQyNTYgSUQgb2YgdGhlIHRva2VuIHRvIHF1ZXJ5IHRoZSBvd25lciBvZgogICogQHJldHVybiBvd25lciBhZGRyZXNzIGN1cnJlbnRseSBtYXJrZWQgYXMgdGhlIG93bmVyIG9mIHRoZSBnaXZlbiB0b2tlbiBJRAogICovCiAgZnVuY3Rpb24gb3duZXJPZih1aW50MjU2IF90b2tlbklkKSBwdWJsaWMgdmlldyByZXR1cm5zIChhZGRyZXNzKSB7CiAgICBhZGRyZXNzIG93bmVyID0gdG9rZW5Pd25lcltfdG9rZW5JZF07CiAgICByZXF1aXJlKG93bmVyICE9IGFkZHJlc3MoMCkpOwogICAgcmV0dXJuIG93bmVyOwogIH0KCiAgLyoqCiAgICogQGRldiBHZXRzIHRoZSBhcHByb3ZlZCBhZGRyZXNzIHRvIHRha2Ugb3duZXJzaGlwIG9mIGEgZ2l2ZW4gdG9rZW4gSUQKICAgKiBAcGFyYW0gX3Rva2VuSWQgdWludDI1NiBJRCBvZiB0aGUgdG9rZW4gdG8gcXVlcnkgdGhlIGFwcHJvdmFsIG9mCiAgICogQHJldHVybiBhZGRyZXNzIGN1cnJlbnRseSBhcHByb3ZlZCB0byB0YWtlIG93bmVyc2hpcCBvZiB0aGUgZ2l2ZW4gdG9rZW4gSUQKICAgKi8KICBmdW5jdGlvbiBhcHByb3ZlZEZvcih1aW50MjU2IF90b2tlbklkKSBwdWJsaWMgdmlldyByZXR1cm5zIChhZGRyZXNzKSB7CiAgICByZXR1cm4gdG9rZW5BcHByb3ZhbHNbX3Rva2VuSWRdOwogIH0KCiAgLyoqCiAgKiBAZGV2IFRyYW5zZmVycyB0aGUgb3duZXJzaGlwIG9mIGEgZ2l2ZW4gdG9rZW4gSUQgdG8gYW5vdGhlciBhZGRyZXNzCiAgKiBAcGFyYW0gX3RvIGFkZHJlc3MgdG8gcmVjZWl2ZSB0aGUgb3duZXJzaGlwIG9mIHRoZSBnaXZlbiB0b2tlbiBJRAogICogQHBhcmFtIF90b2tlbklkIHVpbnQyNTYgSUQgb2YgdGhlIHRva2VuIHRvIGJlIHRyYW5zZmVycmVkCiAgKi8KICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdG9rZW5JZCkgcHVibGljIG9ubHlPd25lck9mKF90b2tlbklkKSB7CiAgICBjbGVhckFwcHJvdmFsQW5kVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdG9rZW5JZCk7CiAgfQoKICAvKioKICAqIEBkZXYgQXBwcm92ZXMgYW5vdGhlciBhZGRyZXNzIHRvIGNsYWltIGZvciB0aGUgb3duZXJzaGlwIG9mIHRoZSBnaXZlbiB0b2tlbiBJRAogICogQHBhcmFtIF90byBhZGRyZXNzIHRvIGJlIGFwcHJvdmVkIGZvciB0aGUgZ2l2ZW4gdG9rZW4gSUQKICAqIEBwYXJhbSBfdG9rZW5JZCB1aW50MjU2IElEIG9mIHRoZSB0b2tlbiB0byBiZSBhcHByb3ZlZAogICovCiAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF90bywgdWludDI1NiBfdG9rZW5JZCkgcHVibGljIG9ubHlPd25lck9mKF90b2tlbklkKSB7CiAgICBhZGRyZXNzIG93bmVyID0gb3duZXJPZihfdG9rZW5JZCk7CiAgICByZXF1aXJlKF90byAhPSBvd25lcik7CiAgICBpZiAoYXBwcm92ZWRGb3IoX3Rva2VuSWQpICE9IDAgfHwgX3RvICE9IDApIHsKICAgICAgdG9rZW5BcHByb3ZhbHNbX3Rva2VuSWRdID0gX3RvOwogICAgICBBcHByb3ZhbChvd25lciwgX3RvLCBfdG9rZW5JZCk7CiAgICB9CiAgfQoKICAvKioKICAqIEBkZXYgQ2xhaW1zIHRoZSBvd25lcnNoaXAgb2YgYSBnaXZlbiB0b2tlbiBJRAogICogQHBhcmFtIF90b2tlbklkIHVpbnQyNTYgSUQgb2YgdGhlIHRva2VuIGJlaW5nIGNsYWltZWQgYnkgdGhlIG1zZy5zZW5kZXIKICAqLwogIGZ1bmN0aW9uIHRha2VPd25lcnNoaXAodWludDI1NiBfdG9rZW5JZCkgcHVibGljIHsKICAgIHJlcXVpcmUoaXNBcHByb3ZlZEZvcihtc2cuc2VuZGVyLCBfdG9rZW5JZCkpOwogICAgY2xlYXJBcHByb3ZhbEFuZFRyYW5zZmVyKG93bmVyT2YoX3Rva2VuSWQpLCBtc2cuc2VuZGVyLCBfdG9rZW5JZCk7CiAgfQoKICAvKioKICAqIEBkZXYgTWludCB0b2tlbiBmdW5jdGlvbgogICogQHBhcmFtIF90byBUaGUgYWRkcmVzcyB0aGF0IHdpbGwgb3duIHRoZSBtaW50ZWQgdG9rZW4KICAqIEBwYXJhbSBfdG9rZW5JZCB1aW50MjU2IElEIG9mIHRoZSB0b2tlbiB0byBiZSBtaW50ZWQgYnkgdGhlIG1zZy5zZW5kZXIKICAqLwogIGZ1bmN0aW9uIF9taW50KGFkZHJlc3MgX3RvLCB1aW50MjU2IF90b2tlbklkKSBpbnRlcm5hbCB7CiAgICByZXF1aXJlKF90byAhPSBhZGRyZXNzKDApKTsKICAgIGFkZFRva2VuKF90bywgX3Rva2VuSWQpOwogICAgVHJhbnNmZXIoMHgwLCBfdG8sIF90b2tlbklkKTsKICB9CgogIC8qKgogICogQGRldiBCdXJucyBhIHNwZWNpZmljIHRva2VuCiAgKiBAcGFyYW0gX3Rva2VuSWQgdWludDI1NiBJRCBvZiB0aGUgdG9rZW4gYmVpbmcgYnVybmVkIGJ5IHRoZSBtc2cuc2VuZGVyCiAgKi8KICBmdW5jdGlvbiBfYnVybih1aW50MjU2IF90b2tlbklkKSBvbmx5T3duZXJPZihfdG9rZW5JZCkgaW50ZXJuYWwgewogICAgaWYgKGFwcHJvdmVkRm9yKF90b2tlbklkKSAhPSAwKSB7CiAgICAgIGNsZWFyQXBwcm92YWwobXNnLnNlbmRlciwgX3Rva2VuSWQpOwogICAgfQogICAgcmVtb3ZlVG9rZW4obXNnLnNlbmRlciwgX3Rva2VuSWQpOwogICAgVHJhbnNmZXIobXNnLnNlbmRlciwgMHgwLCBfdG9rZW5JZCk7CiAgfQoKICAvKioKICAgKiBAZGV2IFRlbGxzIHdoZXRoZXIgdGhlIG1zZy5zZW5kZXIgaXMgYXBwcm92ZWQgZm9yIHRoZSBnaXZlbiB0b2tlbiBJRCBvciBub3QKICAgKiBUaGlzIGZ1bmN0aW9uIGlzIG5vdCBwcml2YXRlIHNvIGl0IGNhbiBiZSBleHRlbmRlZCBpbiBmdXJ0aGVyIGltcGxlbWVudGF0aW9ucyBsaWtlIHRoZSBvcGVyYXRhYmxlIEVSQzcyMQogICAqIEBwYXJhbSBfb3duZXIgYWRkcmVzcyBvZiB0aGUgb3duZXIgdG8gcXVlcnkgdGhlIGFwcHJvdmFsIG9mCiAgICogQHBhcmFtIF90b2tlbklkIHVpbnQyNTYgSUQgb2YgdGhlIHRva2VuIHRvIHF1ZXJ5IHRoZSBhcHByb3ZhbCBvZgogICAqIEByZXR1cm4gYm9vbCB3aGV0aGVyIHRoZSBtc2cuc2VuZGVyIGlzIGFwcHJvdmVkIGZvciB0aGUgZ2l2ZW4gdG9rZW4gSUQgb3Igbm90CiAgICovCiAgZnVuY3Rpb24gaXNBcHByb3ZlZEZvcihhZGRyZXNzIF9vd25lciwgdWludDI1NiBfdG9rZW5JZCkgaW50ZXJuYWwgdmlldyByZXR1cm5zIChib29sKSB7CiAgICByZXR1cm4gYXBwcm92ZWRGb3IoX3Rva2VuSWQpID09IF9vd25lcjsKICB9CgogIC8qKgogICogQGRldiBJbnRlcm5hbCBmdW5jdGlvbiB0byBjbGVhciBjdXJyZW50IGFwcHJvdmFsIGFuZCB0cmFuc2ZlciB0aGUgb3duZXJzaGlwIG9mIGEgZ2l2ZW4gdG9rZW4gSUQKICAqIEBwYXJhbSBfZnJvbSBhZGRyZXNzIHdoaWNoIHlvdSB3YW50IHRvIHNlbmQgdG9rZW5zIGZyb20KICAqIEBwYXJhbSBfdG8gYWRkcmVzcyB3aGljaCB5b3Ugd2FudCB0byB0cmFuc2ZlciB0aGUgdG9rZW4gdG8KICAqIEBwYXJhbSBfdG9rZW5JZCB1aW50MjU2IElEIG9mIHRoZSB0b2tlbiB0byBiZSB0cmFuc2ZlcnJlZAogICovCiAgZnVuY3Rpb24gY2xlYXJBcHByb3ZhbEFuZFRyYW5zZmVyKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF90b2tlbklkKSBpbnRlcm5hbCB7CiAgICByZXF1aXJlKF90byAhPSBhZGRyZXNzKDApKTsKICAgIHJlcXVpcmUoX3RvICE9IG93bmVyT2YoX3Rva2VuSWQpKTsKICAgIHJlcXVpcmUob3duZXJPZihfdG9rZW5JZCkgPT0gX2Zyb20pOwoKICAgIGNsZWFyQXBwcm92YWwoX2Zyb20sIF90b2tlbklkKTsKICAgIHJlbW92ZVRva2VuKF9mcm9tLCBfdG9rZW5JZCk7CiAgICBhZGRUb2tlbihfdG8sIF90b2tlbklkKTsKICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF90b2tlbklkKTsKICB9CgogIC8qKgogICogQGRldiBJbnRlcm5hbCBmdW5jdGlvbiB0byBjbGVhciBjdXJyZW50IGFwcHJvdmFsIG9mIGEgZ2l2ZW4gdG9rZW4gSUQKICAqIEBwYXJhbSBfdG9rZW5JZCB1aW50MjU2IElEIG9mIHRoZSB0b2tlbiB0byBiZSB0cmFuc2ZlcnJlZAogICovCiAgZnVuY3Rpb24gY2xlYXJBcHByb3ZhbChhZGRyZXNzIF9vd25lciwgdWludDI1NiBfdG9rZW5JZCkgcHJpdmF0ZSB7CiAgICByZXF1aXJlKG93bmVyT2YoX3Rva2VuSWQpID09IF9vd25lcik7CiAgICB0b2tlbkFwcHJvdmFsc1tfdG9rZW5JZF0gPSAwOwogICAgQXBwcm92YWwoX293bmVyLCAwLCBfdG9rZW5JZCk7CiAgfQoKICAvKioKICAqIEBkZXYgSW50ZXJuYWwgZnVuY3Rpb24gdG8gYWRkIGEgdG9rZW4gSUQgdG8gdGhlIGxpc3Qgb2YgYSBnaXZlbiBhZGRyZXNzCiAgKiBAcGFyYW0gX3RvIGFkZHJlc3MgcmVwcmVzZW50aW5nIHRoZSBuZXcgb3duZXIgb2YgdGhlIGdpdmVuIHRva2VuIElECiAgKiBAcGFyYW0gX3Rva2VuSWQgdWludDI1NiBJRCBvZiB0aGUgdG9rZW4gdG8gYmUgYWRkZWQgdG8gdGhlIHRva2VucyBsaXN0IG9mIHRoZSBnaXZlbiBhZGRyZXNzCiAgKi8KICBmdW5jdGlvbiBhZGRUb2tlbihhZGRyZXNzIF90bywgdWludDI1NiBfdG9rZW5JZCkgcHJpdmF0ZSB7CiAgICByZXF1aXJlKHRva2VuT3duZXJbX3Rva2VuSWRdID09IGFkZHJlc3MoMCkpOwogICAgdG9rZW5Pd25lcltfdG9rZW5JZF0gPSBfdG87CiAgICB1aW50MjU2IGxlbmd0aCA9IGJhbGFuY2VPZihfdG8pOwogICAgb3duZWRUb2tlbnNbX3RvXS5wdXNoKF90b2tlbklkKTsKICAgIG93bmVkVG9rZW5zSW5kZXhbX3Rva2VuSWRdID0gbGVuZ3RoOwogICAgdG90YWxUb2tlbnMgPSB0b3RhbFRva2Vucy5hZGQoMSk7CiAgfQoKICAvKioKICAqIEBkZXYgSW50ZXJuYWwgZnVuY3Rpb24gdG8gcmVtb3ZlIGEgdG9rZW4gSUQgZnJvbSB0aGUgbGlzdCBvZiBhIGdpdmVuIGFkZHJlc3MKICAqIEBwYXJhbSBfZnJvbSBhZGRyZXNzIHJlcHJlc2VudGluZyB0aGUgcHJldmlvdXMgb3duZXIgb2YgdGhlIGdpdmVuIHRva2VuIElECiAgKiBAcGFyYW0gX3Rva2VuSWQgdWludDI1NiBJRCBvZiB0aGUgdG9rZW4gdG8gYmUgcmVtb3ZlZCBmcm9tIHRoZSB0b2tlbnMgbGlzdCBvZiB0aGUgZ2l2ZW4gYWRkcmVzcwogICovCiAgZnVuY3Rpb24gcmVtb3ZlVG9rZW4oYWRkcmVzcyBfZnJvbSwgdWludDI1NiBfdG9rZW5JZCkgcHJpdmF0ZSB7CiAgICByZXF1aXJlKG93bmVyT2YoX3Rva2VuSWQpID09IF9mcm9tKTsKCiAgICB1aW50MjU2IHRva2VuSW5kZXggPSBvd25lZFRva2Vuc0luZGV4W190b2tlbklkXTsKICAgIHVpbnQyNTYgbGFzdFRva2VuSW5kZXggPSBiYWxhbmNlT2YoX2Zyb20pLnN1YigxKTsKICAgIHVpbnQyNTYgbGFzdFRva2VuID0gb3duZWRUb2tlbnNbX2Zyb21dW2xhc3RUb2tlbkluZGV4XTsKCiAgICB0b2tlbk93bmVyW190b2tlbklkXSA9IDA7CiAgICBvd25lZFRva2Vuc1tfZnJvbV1bdG9rZW5JbmRleF0gPSBsYXN0VG9rZW47CiAgICBvd25lZFRva2Vuc1tfZnJvbV1bbGFzdFRva2VuSW5kZXhdID0gMDsKICAgIC8vIE5vdGUgdGhhdCB0aGlzIHdpbGwgaGFuZGxlIHNpbmdsZS1lbGVtZW50IGFycmF5cy4gSW4gdGhhdCBjYXNlLCBib3RoIHRva2VuSW5kZXggYW5kIGxhc3RUb2tlbkluZGV4IGFyZSBnb2luZyB0bwogICAgLy8gYmUgemVyby4gVGhlbiB3ZSBjYW4gbWFrZSBzdXJlIHRoYXQgd2Ugd2lsbCByZW1vdmUgX3Rva2VuSWQgZnJvbSB0aGUgb3duZWRUb2tlbnMgbGlzdCBzaW5jZSB3ZSBhcmUgZmlyc3Qgc3dhcHBpbmcKICAgIC8vIHRoZSBsYXN0VG9rZW4gdG8gdGhlIGZpcnN0IHBvc2l0aW9uLCBhbmQgdGhlbiBkcm9wcGluZyB0aGUgZWxlbWVudCBwbGFjZWQgaW4gdGhlIGxhc3QgcG9zaXRpb24gb2YgdGhlIGxpc3QKCiAgICBvd25lZFRva2Vuc1tfZnJvbV0ubGVuZ3RoLS07CiAgICBvd25lZFRva2Vuc0luZGV4W190b2tlbklkXSA9IDA7CiAgICBvd25lZFRva2Vuc0luZGV4W2xhc3RUb2tlbl0gPSB0b2tlbkluZGV4OwogICAgdG90YWxUb2tlbnMgPSB0b3RhbFRva2Vucy5zdWIoMSk7CiAgfQp9Cgpjb250cmFjdCBPd25hYmxlIHsKICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKCiAgZnVuY3Rpb24gT3duYWJsZSgpIHB1YmxpYyB7CiAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgfQoKICBtb2RpZmllciBvbmx5T3duZXIoKSB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgXzsKICB9CgogIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpIHB1YmxpYyBvbmx5T3duZXIgewogICAgaWYgKG5ld093bmVyICE9IGFkZHJlc3MoMCkpIHsKICAgICAgb3duZXIgPSBuZXdPd25lcjsKICAgIH0KICB9Cn0KCmNvbnRyYWN0IEhhcm1Ub2tlbiBpcyBFUkM3MjFUb2tlbiwgT3duYWJsZSB7CiAgbWFwcGluZyh1aW50MjU2ID0+IHN0cmluZykgbWV0YWRhdGFVcmk7CiAgbWFwcGluZyhzdHJpbmcgPT4gdWludDI1NikgdG9rZW5CeU1ldGFkYXRhVXJpOwogIG1hcHBpbmcoc3RyaW5nID0+IHVpbnQyNTYpIHByaWNlczsKCiAgc3RyaW5nIHB1YmxpYyBuYW1lID0gIkhBUk0gQ09JTiI7CiAgc3RyaW5nIHB1YmxpYyBzeW1ib2wgPSAiUVFRIjsKICB1aW50MjU2IHB1YmxpYyBuZXdUb2tlblByaWNlID0gODUwMDsKICB1aW50MjU2IHB1YmxpYyBwcmljZU11bHRpcGxpZXIgPSAxMDAwOwoKICBtb2RpZmllciB0b2tlbkV4aXN0cyh1aW50MjU2IF90b2tlbklkKSB7CiAgICByZXF1aXJlKF90b2tlbklkID4gMCk7CiAgICByZXF1aXJlKF90b2tlbklkIDwgdG90YWxTdXBwbHkoKSArIDEpOwogICAgXzsKICB9CgogIGZ1bmN0aW9uIGNyZWF0ZUVtcHR5VG9rZW4oKSBwcml2YXRlIHJldHVybnMgKHVpbnQyNTYpewogICAgdWludDI1NiB0b2tlbklkID0gdG90YWxTdXBwbHkoKSArIDE7CiAgICByZXF1aXJlKHRva2VuSWQgPD0gNjQpOwogICAgX21pbnQob3duZXIsIHRva2VuSWQpOwogICAgcmV0dXJuIHRva2VuSWQ7CiAgfQoKICBmdW5jdGlvbiB0b2tlbk1ldGFkYXRhKHVpbnQyNTYgX3Rva2VuSWQpIGV4dGVybmFsIHZpZXcgdG9rZW5FeGlzdHMoX3Rva2VuSWQpCiAgcmV0dXJucyAoc3RyaW5nIGluZm9VcmwpIHsKICAgIHJldHVybiBtZXRhZGF0YVVyaVtfdG9rZW5JZF07CiAgfQoKICBmdW5jdGlvbiBsb29rdXBUb2tlbihzdHJpbmcgX21ldGFkYXRhVXJpKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2KSB7CiAgICByZXR1cm4gdG9rZW5CeU1ldGFkYXRhVXJpW19tZXRhZGF0YVVyaV07CiAgfQoKICBmdW5jdGlvbiBzdHJpbmdFbXB0eShzdHJpbmcgcykgcHVyZSBwcml2YXRlIHJldHVybnMgKGJvb2wpewogICAgYnl0ZXMgbWVtb3J5IHRlc3RFbXB0eVN0cmluZyA9IGJ5dGVzKHMpOwogICAgcmV0dXJuIHRlc3RFbXB0eVN0cmluZy5sZW5ndGggPT0gMDsKICB9CgogIGZ1bmN0aW9uIHNldFRva2VuTWV0YWRhdGEodWludDI1NiBfdG9rZW5JZCwgc3RyaW5nIF9tZXRhZGF0YVVyaSkgcHJpdmF0ZSB0b2tlbkV4aXN0cyhfdG9rZW5JZCkgewogICAgcmVxdWlyZShzdHJpbmdFbXB0eShtZXRhZGF0YVVyaVtfdG9rZW5JZF0pKTsKICAgIG1ldGFkYXRhVXJpW190b2tlbklkXSA9IF9tZXRhZGF0YVVyaTsKICAgIHRva2VuQnlNZXRhZGF0YVVyaVtfbWV0YWRhdGFVcmldID0gX3Rva2VuSWQ7CiAgfQoKICBmdW5jdGlvbiBtYWtlV2VpUHJpY2UodWludDI1NiBfcHJpY2UpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHJldHVybiBfcHJpY2UgKiBwcmljZU11bHRpcGxpZXIgKiAxMDAwICogMTAwMCAqIDEwMDAgKiAxMDAwOwogIH0KCiAgZnVuY3Rpb24gc2V0UHJpY2VCeU1ldGFkYXRhVXJpKHN0cmluZyBfbWV0YWRhdGFVcmksIHVpbnQyNTYgX3ByaWNlKSBleHRlcm5hbCBvbmx5T3duZXIgewogICAgcHJpY2VzW19tZXRhZGF0YVVyaV0gPSBfcHJpY2U7CiAgfQoKICBmdW5jdGlvbiBnZXRQcmljZUJ5TWV0YWRhdGFVcmkoc3RyaW5nIF9tZXRhZGF0YVVyaSkgdmlldyBleHRlcm5hbCByZXR1cm5zICh1aW50MjU2KSB7CiAgICByZXF1aXJlKHByaWNlc1tfbWV0YWRhdGFVcmldID4gMCk7CiAgICByZXR1cm4gcHJpY2VzW19tZXRhZGF0YVVyaV07CiAgfQoKICBmdW5jdGlvbiBnZXRXZWlQcmljZUJ5TWV0YWRhdGFVcmkoc3RyaW5nIF9tZXRhZGF0YVVyaSkgdmlldyBleHRlcm5hbCByZXR1cm5zICh1aW50MjU2KSB7CiAgICByZXF1aXJlKHByaWNlc1tfbWV0YWRhdGFVcmldID4gMCk7CiAgICByZXR1cm4gbWFrZVdlaVByaWNlKHByaWNlc1tfbWV0YWRhdGFVcmldKTsKICB9CgogIGZ1bmN0aW9uIG5ld1Rva2VuV2VpUHJpY2UoKSB2aWV3IHB1YmxpYyByZXR1cm5zICh1aW50MjU2KSB7CiAgICByZXR1cm4gbWFrZVdlaVByaWNlKG5ld1Rva2VuUHJpY2UpOwogIH0KCiAgZnVuY3Rpb24gYnV5V2lsZGNhcmRUb2tlbigpIHBheWFibGUgZXh0ZXJuYWwgcmV0dXJucyAodWludDI1NikgewogICAgcmVxdWlyZShtc2cudmFsdWUgPj0gbmV3VG9rZW5XZWlQcmljZSgpKTsKCiAgICB1aW50MjU2IHRva2VuSWQgPSBjcmVhdGVFbXB0eVRva2VuKCk7CiAgICBjbGVhckFwcHJvdmFsQW5kVHJhbnNmZXIob3duZXIsIG1zZy5zZW5kZXIsIHRva2VuSWQpOwogICAgcmV0dXJuIHRva2VuSWQ7CiAgfQoKICBmdW5jdGlvbiB0b2tlbml6ZUFuZEJ1eVdvcmsoc3RyaW5nIF9tZXRhZGF0YVVyaSkgcGF5YWJsZSBleHRlcm5hbCByZXR1cm5zICh1aW50MjU2KSB7CiAgICByZXF1aXJlKHByaWNlc1tfbWV0YWRhdGFVcmldID4gMCk7CiAgICByZXF1aXJlKG1zZy52YWx1ZSA+PSBtYWtlV2VpUHJpY2UocHJpY2VzW19tZXRhZGF0YVVyaV0pKTsKICAgIHJlcXVpcmUod29ya0Fkb3B0ZWQoX21ldGFkYXRhVXJpKSA9PSBmYWxzZSk7CgogICAgdWludDI1NiB0b2tlbklkID0gY3JlYXRlRW1wdHlUb2tlbigpOwogICAgc2V0VG9rZW5NZXRhZGF0YSh0b2tlbklkLCBfbWV0YWRhdGFVcmkpOwogICAgY2xlYXJBcHByb3ZhbEFuZFRyYW5zZmVyKG93bmVyLCBtc2cuc2VuZGVyLCB0b2tlbklkKTsKICAgIHJldHVybiB0b2tlbklkOwogIH0KCiAgZnVuY3Rpb24gYnV5V29ya1dpdGhUb2tlbihzdHJpbmcgX21ldGFkYXRhVXJpLCB1aW50MjU2IF90b2tlbklkKSBleHRlcm5hbCB7CiAgICByZXF1aXJlKG93bmVyT2YoX3Rva2VuSWQpID09IG1zZy5zZW5kZXIpOwogICAgcmVxdWlyZSh3b3JrQWRvcHRlZChfbWV0YWRhdGFVcmkpID09IGZhbHNlKTsKCiAgICBzZXRUb2tlbk1ldGFkYXRhKF90b2tlbklkLCBfbWV0YWRhdGFVcmkpOwogIH0KCiAgZnVuY3Rpb24gc2V0TmV3VG9rZW5QcmljZSh1aW50MjU2IF9wcmljZSkgb25seU93bmVyIGV4dGVybmFsIHsKICAgIG5ld1Rva2VuUHJpY2UgPSBfcHJpY2U7IC8vIGluIGV1cm8KICB9CgogIGZ1bmN0aW9uICgpIHBheWFibGUgcHVibGljIHsgfQoKICBmdW5jdGlvbiBwYXlPdXQoYWRkcmVzcyBkZXN0aW5hdGlvbikgZXh0ZXJuYWwgb25seU93bmVyIHsKICAgIGRlc3RpbmF0aW9uLnRyYW5zZmVyKHRoaXMuYmFsYW5jZSk7CiAgfQoKICBmdW5jdGlvbiB3b3JrQWRvcHRlZChzdHJpbmcgX21ldGFkYXRhVXJpKSBwdWJsaWMgdmlldyByZXR1cm5zIChib29sKSB7CiAgICByZXR1cm4gbG9va3VwVG9rZW4oX21ldGFkYXRhVXJpKSAhPSAwOwogIH0KCiAgZnVuY3Rpb24gZ2V0QmFsYW5jZSgpIGV4dGVybmFsIHZpZXcgb25seU93bmVyIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHJldHVybiB0aGlzLmJhbGFuY2U7CiAgfQoKICBmdW5jdGlvbiBzZXRQcmljZU11bHRpcGxpZXIodWludDI1NiBfcHJpY2VNdWx0aXBsaWVyKSBleHRlcm5hbCBvbmx5T3duZXIgewogICAgcmVxdWlyZShfcHJpY2VNdWx0aXBsaWVyID4gMCk7CiAgICBwcmljZU11bHRpcGxpZXIgPSBfcHJpY2VNdWx0aXBsaWVyOwogIH0KfQ=='.
	

]
