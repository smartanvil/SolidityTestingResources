Class {
	#name : #SRT74ea2438157d8bb836cad8419be38f7bba799d30,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT74ea2438157d8bb836cad8419be38f7bba799d30 >> base64 [
	^ 'Ly8gY29tcGlsZXI6IDAuNC4xOStjb21taXQuYzRjYmJiMDUuRW1zY3JpcHRlbi5jbGFuZwpwcmFnbWEgc29saWRpdHkgXjAuNC4xOTsKCi8vIGh0dHBzOi8vd3d3LmV0aGVyZXVtLm9yZy90b2tlbgppbnRlcmZhY2UgdG9rZW5SZWNpcGllbnQgewogIGZ1bmN0aW9uIHJlY2VpdmVBcHByb3ZhbCggYWRkcmVzcyBmcm9tLCB1aW50MjU2IHZhbHVlLCBieXRlcyBkYXRhICkgcHVibGljOwp9CgovLyBFUkMyMjMKaW50ZXJmYWNlIENvbnRyYWN0UmVjZWl2ZXIgewogIGZ1bmN0aW9uIHRva2VuRmFsbGJhY2soIGFkZHJlc3MgZnJvbSwgdWludCB2YWx1ZSwgYnl0ZXMgZGF0YSApIHB1YmxpYzsKfQoKLy8gRVJDMjAgdG9rZW4gd2l0aCBhZGRlZCBFUkMyMjMgYW5kIEV0aGVyZXVtLVRva2VuIHN1cHBvcnQKLy8KLy8gQmxlbmQgb2YgbXVsdGlwbGUgaW50ZXJmYWNlczoKLy8gLSBodHRwczovL3RoZWV0aGVyZXVtLndpa2kvdy9pbmRleC5waHAvRVJDMjBfVG9rZW5fU3RhbmRhcmQKLy8gLSBodHRwczovL3d3dy5ldGhlcmV1bS5vcmcvdG9rZW4gKHVuY29udHJvbGxlZCwgbm9uLXN0YW5kYXJkKQovLyAtIGh0dHBzOi8vZ2l0aHViLmNvbS9EZXhhcmFuL0VSQzIzLXRva2Vucy9ibG9iL1JlY29tbWVuZGVkL0VSQzIyM19Ub2tlbi5zb2wKCmNvbnRyYWN0IEVSQzIyM1Rva2VuCnsKICBzdHJpbmcgIHB1YmxpYyBuYW1lOyAgICAgICAgLy8gRVJDMjAKICBzdHJpbmcgIHB1YmxpYyBzeW1ib2w7ICAgICAgLy8gRVJDMjAKICB1aW50OCAgIHB1YmxpYyBkZWNpbWFsczsgICAgLy8gRVJDMjAKICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsgLy8gRVJDMjAKCiAgbWFwcGluZyggYWRkcmVzcyA9PiB1aW50MjU2ICkgYmFsYW5jZXNfOwogIG1hcHBpbmcoIGFkZHJlc3MgPT4gbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpICkgYWxsb3dhbmNlc187CgogIC8vIEVSQzIwCiAgZXZlbnQgQXBwcm92YWwoIGFkZHJlc3MgaW5kZXhlZCBvd25lciwKICAgICAgICAgICAgICAgICAgYWRkcmVzcyBpbmRleGVkIHNwZW5kZXIsCiAgICAgICAgICAgICAgICAgIHVpbnQgdmFsdWUgKTsKCiAgLy8gRVJDMjIzLCBFUkMyMC1jb21wYXRpYmxlCiAgZXZlbnQgVHJhbnNmZXIoIGFkZHJlc3MgaW5kZXhlZCBmcm9tLAogICAgICAgICAgICAgICAgICBhZGRyZXNzIGluZGV4ZWQgdG8sCiAgICAgICAgICAgICAgICAgIHVpbnQyNTYgdmFsdWUsCiAgICAgICAgICAgICAgICAgIGJ5dGVzICAgIGRhdGEgKTsKCiAgLy8gRXRoZXJldW0gVG9rZW4KICBldmVudCBCdXJuKCBhZGRyZXNzIGluZGV4ZWQgZnJvbSwgdWludDI1NiB2YWx1ZSApOwoKICBmdW5jdGlvbiBFUkMyMjNUb2tlbiggdWludDI1NiBpbml0aWFsU3VwcGx5LAogICAgICAgICAgICAgICAgICAgICAgICBzdHJpbmcgdG9rZW5OYW1lLAogICAgICAgICAgICAgICAgICAgICAgICB1aW50OCBkZWNpbWFsVW5pdHMsCiAgICAgICAgICAgICAgICAgICAgICAgIHN0cmluZyB0b2tlblN5bWJvbCApIHB1YmxpYwogIHsKICAgIHRvdGFsU3VwcGx5ID0gaW5pdGlhbFN1cHBseSAqIDEwICoqIHVpbnQyNTYoZGVjaW1hbFVuaXRzKTsKICAgIGJhbGFuY2VzX1ttc2cuc2VuZGVyXSA9IHRvdGFsU3VwcGx5OwogICAgbmFtZSA9IHRva2VuTmFtZTsKICAgIGRlY2ltYWxzID0gZGVjaW1hbFVuaXRzOwogICAgc3ltYm9sID0gdG9rZW5TeW1ib2w7CiAgfQoKICBmdW5jdGlvbigpIHB1YmxpYyBwYXlhYmxlIHsgcmV2ZXJ0KCk7IH0gLy8gZG9lcyBub3QgYWNjZXB0IG1vbmV5CgogIC8vIEVSQzIwCiAgZnVuY3Rpb24gYmFsYW5jZU9mKCBhZGRyZXNzIG93bmVyICkgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQpIHsKICAgIHJldHVybiBiYWxhbmNlc19bb3duZXJdOwogIH0KCiAgLy8gRVJDMjAKICBmdW5jdGlvbiBhcHByb3ZlKCBhZGRyZXNzIHNwZW5kZXIsIHVpbnQyNTYgdmFsdWUgKSBwdWJsaWMKICByZXR1cm5zIChib29sIHN1Y2Nlc3MpCiAgewogICAgYWxsb3dhbmNlc19bbXNnLnNlbmRlcl1bc3BlbmRlcl0gPSB2YWx1ZTsKICAgIEFwcHJvdmFsKCBtc2cuc2VuZGVyLCBzcGVuZGVyLCB2YWx1ZSApOwogICAgcmV0dXJuIHRydWU7CiAgfQogCiAgLy8gRVJDMjAKICBmdW5jdGlvbiBhbGxvd2FuY2UoIGFkZHJlc3Mgb3duZXIsIGFkZHJlc3Mgc3BlbmRlciApIHB1YmxpYyBjb25zdGFudAogIHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKQogIHsKICAgIHJldHVybiBhbGxvd2FuY2VzX1tvd25lcl1bc3BlbmRlcl07CiAgfQoKICAvLyBFUkMyMAogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sIHVpbnQyNTYgdmFsdWUpIHB1YmxpYwogIHsKICAgIGJ5dGVzIG1lbW9yeSBlbXB0eTsgLy8gbnVsbAogICAgX3RyYW5zZmVyKCBtc2cuc2VuZGVyLCB0bywgdmFsdWUsIGVtcHR5ICk7CiAgfQoKICAvLyBFUkMyMAogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbSggYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvLCB1aW50MjU2IHZhbHVlICkgcHVibGljCiAgcmV0dXJucyAoYm9vbCBzdWNjZXNzKQogIHsKICAgIHJlcXVpcmUoIHZhbHVlIDw9IGFsbG93YW5jZXNfW2Zyb21dW21zZy5zZW5kZXJdICk7CgogICAgYWxsb3dhbmNlc19bZnJvbV1bbXNnLnNlbmRlcl0gLT0gdmFsdWU7CiAgICBieXRlcyBtZW1vcnkgZW1wdHk7CiAgICBfdHJhbnNmZXIoIGZyb20sIHRvLCB2YWx1ZSwgZW1wdHkgKTsKCiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIC8vIEV0aGVyZXVtIFRva2VuCiAgZnVuY3Rpb24gYXBwcm92ZUFuZENhbGwoIGFkZHJlc3Mgc3BlbmRlciwKICAgICAgICAgICAgICAgICAgICAgICAgICAgdWludDI1NiB2YWx1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgYnl0ZXMgY29udGV4dCApIHB1YmxpYwogIHJldHVybnMgKGJvb2wgc3VjY2VzcykKICB7CiAgICBpZiAoIGFwcHJvdmUoc3BlbmRlciwgdmFsdWUpICkKICAgIHsKICAgICAgdG9rZW5SZWNpcGllbnQgcmVjaXAgPSB0b2tlblJlY2lwaWVudCggc3BlbmRlciApOwogICAgICByZWNpcC5yZWNlaXZlQXBwcm92YWwoIG1zZy5zZW5kZXIsIHZhbHVlLCBjb250ZXh0ICk7CiAgICAgIHJldHVybiB0cnVlOwogICAgfQogICAgcmV0dXJuIGZhbHNlOwogIH0gICAgICAgIAoKICAvLyBFdGhlcmV1bSBUb2tlbgogIGZ1bmN0aW9uIGJ1cm4oIHVpbnQyNTYgdmFsdWUgKSBwdWJsaWMKICByZXR1cm5zIChib29sIHN1Y2Nlc3MpCiAgewogICAgcmVxdWlyZSggYmFsYW5jZXNfW21zZy5zZW5kZXJdID49IHZhbHVlICk7CiAgICBiYWxhbmNlc19bbXNnLnNlbmRlcl0gLT0gdmFsdWU7CiAgICB0b3RhbFN1cHBseSAtPSB2YWx1ZTsKCiAgICBCdXJuKCBtc2cuc2VuZGVyLCB2YWx1ZSApOwogICAgcmV0dXJuIHRydWU7CiAgfQoKICAvLyBFdGhlcmV1bSBUb2tlbgogIGZ1bmN0aW9uIGJ1cm5Gcm9tKCBhZGRyZXNzIGZyb20sIHVpbnQyNTYgdmFsdWUgKSBwdWJsaWMKICByZXR1cm5zIChib29sIHN1Y2Nlc3MpCiAgewogICAgcmVxdWlyZSggYmFsYW5jZXNfW2Zyb21dID49IHZhbHVlICk7CiAgICByZXF1aXJlKCB2YWx1ZSA8PSBhbGxvd2FuY2VzX1tmcm9tXVttc2cuc2VuZGVyXSApOwoKICAgIGJhbGFuY2VzX1tmcm9tXSAtPSB2YWx1ZTsKICAgIGFsbG93YW5jZXNfW2Zyb21dW21zZy5zZW5kZXJdIC09IHZhbHVlOwogICAgdG90YWxTdXBwbHkgLT0gdmFsdWU7CgogICAgQnVybiggZnJvbSwgdmFsdWUgKTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgLy8gRVJDMjIzIFRyYW5zZmVyIGFuZCBpbnZva2Ugc3BlY2lmaWVkIGNhbGxiYWNrCiAgZnVuY3Rpb24gdHJhbnNmZXIoIGFkZHJlc3MgdG8sCiAgICAgICAgICAgICAgICAgICAgIHVpbnQgdmFsdWUsCiAgICAgICAgICAgICAgICAgICAgIGJ5dGVzIGRhdGEsCiAgICAgICAgICAgICAgICAgICAgIHN0cmluZyBjdXN0b21fZmFsbGJhY2sgKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKQogIHsKICAgIF90cmFuc2ZlciggbXNnLnNlbmRlciwgdG8sIHZhbHVlLCBkYXRhICk7CgogICAgaWYgKCBpc0NvbnRyYWN0KHRvKSApCiAgICB7CiAgICAgIENvbnRyYWN0UmVjZWl2ZXIgcnggPSBDb250cmFjdFJlY2VpdmVyKCB0byApOwogICAgICByZXF1aXJlKCByeC5jYWxsLnZhbHVlKDApKGJ5dGVzNChrZWNjYWsyNTYoY3VzdG9tX2ZhbGxiYWNrKSksCiAgICAgICAgICAgICAgIG1zZy5zZW5kZXIsCiAgICAgICAgICAgICAgIHZhbHVlLAogICAgICAgICAgICAgICBkYXRhKSApOwogICAgfQoKICAgIHJldHVybiB0cnVlOwogIH0KCiAgLy8gRVJDMjIzIFRyYW5zZmVyIHRvIGEgY29udHJhY3Qgb3IgZXh0ZXJuYWxseS1vd25lZCBhY2NvdW50CiAgZnVuY3Rpb24gdHJhbnNmZXIoIGFkZHJlc3MgdG8sIHVpbnQgdmFsdWUsIGJ5dGVzIGRhdGEgKSBwdWJsaWMKICByZXR1cm5zIChib29sIHN1Y2Nlc3MpCiAgewogICAgaWYgKGlzQ29udHJhY3QodG8pKSB7CiAgICAgIHJldHVybiB0cmFuc2ZlclRvQ29udHJhY3QoIHRvLCB2YWx1ZSwgZGF0YSApOwogICAgfQoKICAgIF90cmFuc2ZlciggbXNnLnNlbmRlciwgdG8sIHZhbHVlLCBkYXRhICk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIC8vIEVSQzIyMyBUcmFuc2ZlciB0byBjb250cmFjdCBhbmQgaW52b2tlIHRva2VuRmFsbGJhY2soKSBtZXRob2QKICBmdW5jdGlvbiB0cmFuc2ZlclRvQ29udHJhY3QoIGFkZHJlc3MgdG8sIHVpbnQgdmFsdWUsIGJ5dGVzIGRhdGEgKSBwcml2YXRlCiAgcmV0dXJucyAoYm9vbCBzdWNjZXNzKQogIHsKICAgIF90cmFuc2ZlciggbXNnLnNlbmRlciwgdG8sIHZhbHVlLCBkYXRhICk7CgogICAgQ29udHJhY3RSZWNlaXZlciByeCA9IENvbnRyYWN0UmVjZWl2ZXIodG8pOwogICAgcngudG9rZW5GYWxsYmFjayggbXNnLnNlbmRlciwgdmFsdWUsIGRhdGEgKTsKCiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIC8vIEVSQzIyMyBmZXRjaCBjb250cmFjdCBzaXplIChtdXN0IGJlIG5vbnplcm8gdG8gYmUgYSBjb250cmFjdCkKICBmdW5jdGlvbiBpc0NvbnRyYWN0KCBhZGRyZXNzIF9hZGRyICkgcHJpdmF0ZSBjb25zdGFudCByZXR1cm5zIChib29sKQogIHsKICAgIHVpbnQgbGVuZ3RoOwogICAgYXNzZW1ibHkgeyBsZW5ndGggOj0gZXh0Y29kZXNpemUoX2FkZHIpIH0KICAgIHJldHVybiAobGVuZ3RoID4gMCk7CiAgfQoKICBmdW5jdGlvbiBfdHJhbnNmZXIoIGFkZHJlc3MgZnJvbSwKICAgICAgICAgICAgICAgICAgICAgIGFkZHJlc3MgdG8sCiAgICAgICAgICAgICAgICAgICAgICB1aW50IHZhbHVlLAogICAgICAgICAgICAgICAgICAgICAgYnl0ZXMgZGF0YSApIGludGVybmFsCiAgewogICAgcmVxdWlyZSggdG8gIT0gMHgwICk7CiAgICByZXF1aXJlKCBiYWxhbmNlc19bZnJvbV0gPj0gdmFsdWUgKTsKICAgIHJlcXVpcmUoIGJhbGFuY2VzX1t0b10gKyB2YWx1ZSA+IGJhbGFuY2VzX1t0b10gKTsgLy8gY2F0Y2ggb3ZlcmZsb3cKCiAgICBiYWxhbmNlc19bZnJvbV0gLT0gdmFsdWU7CiAgICBiYWxhbmNlc19bdG9dICs9IHZhbHVlOwoKICAgIFRyYW5zZmVyKCBmcm9tLCB0bywgdmFsdWUsIGRhdGEgKTsKICB9Cn0='.
	

]
