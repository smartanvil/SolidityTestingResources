Class {
	#name : #SRT2eb9cc28c34c6d427aac9f259ee5c4b33f1c4448,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT2eb9cc28c34c6d427aac9f259ee5c4b33f1c4448 >> base64 [
	^ ''.
	

]
