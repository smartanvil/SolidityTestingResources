Class {
	#name : #SRTb17d9e106d5b30ab6c62e1373ce2167ccfa08da4,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTb17d9e106d5b30ab6c62e1373ce2167ccfa08da4 >> base64 [
	^ ''.
	

]
