Class {
	#name : #SRTb8e861e1e1c8155831bc5f1026a18c645bc59754,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTb8e861e1e1c8155831bc5f1026a18c645bc59754 >> base64 [
	^ ''.
	

]
