Class {
	#name : #SRT36cda1038a9556ebe626bcd7bab4e46f38d896ec,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT36cda1038a9556ebe626bcd7bab4e46f38d896ec >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7CgoKLyoqCiAqIEB0aXRsZSBTYWZlTWF0aAogKiBAZGV2IE1hdGggb3BlcmF0aW9ucyB3aXRoIHNhZmV0eSBjaGVja3MgdGhhdCB0aHJvdyBvbiBlcnJvcgogKi8KbGlicmFyeSBTYWZlTWF0aCB7CiAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhICogYjsKICAgIGFzc2VydChhID09IDAgfHwgYyAvIGEgPT0gYik7CiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIGRpdih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcmV0dXJucyAodWludDI1NikgewogICAgLy8gYXNzZXJ0KGIgPiAwKTsgLy8gU29saWRpdHkgYXV0b21hdGljYWxseSB0aHJvd3Mgd2hlbiBkaXZpZGluZyBieSAwCiAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgIC8vIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOyAvLyBUaGVyZSBpcyBubyBjYXNlIGluIHdoaWNoIHRoaXMgZG9lc24ndCBob2xkCiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgYXNzZXJ0KGMgPj0gYSk7CiAgICByZXR1cm4gYzsKICB9Cn0KLyoqCiAqIEB0aXRsZSBPd25hYmxlCiAqIEBkZXYgVGhlIE93bmFibGUgY29udHJhY3QgaGFzIGFuIG93bmVyIGFkZHJlc3MsIGFuZCBwcm92aWRlcyBiYXNpYyBhdXRob3JpemF0aW9uIGNvbnRyb2wKICogZnVuY3Rpb25zLCB0aGlzIHNpbXBsaWZpZXMgdGhlIGltcGxlbWVudGF0aW9uIG9mICJ1c2VyIHBlcm1pc3Npb25zIi4KICovCmNvbnRyYWN0IE93bmFibGUgewogIGFkZHJlc3MgcHVibGljIG93bmVyOwoKCiAgLyoqCiAgICogQGRldiBUaGUgT3duYWJsZSBjb25zdHJ1Y3RvciBzZXRzIHRoZSBvcmlnaW5hbCBgb3duZXJgIG9mIHRoZSBjb250cmFjdCB0byB0aGUgc2VuZGVyCiAgICogYWNjb3VudC4KICAgKi8KICBmdW5jdGlvbiBPd25hYmxlKCkgewogICAgb3duZXIgPSBtc2cuc2VuZGVyOwogIH0KCgogIC8qKgogICAqIEBkZXYgVGhyb3dzIGlmIGNhbGxlZCBieSBhbnkgYWNjb3VudCBvdGhlciB0aGFuIHRoZSBvd25lci4KICAgKi8KICBtb2RpZmllciBvbmx5T3duZXIoKSB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgXzsKICB9CgoKICAvKioKICAgKiBAZGV2IEFsbG93cyB0aGUgY3VycmVudCBvd25lciB0byB0cmFuc2ZlciBjb250cm9sIG9mIHRoZSBjb250cmFjdCB0byBhIG5ld093bmVyLgogICAqIEBwYXJhbSBuZXdPd25lciBUaGUgYWRkcmVzcyB0byB0cmFuc2ZlciBvd25lcnNoaXAgdG8uCiAgICovCiAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBuZXdPd25lcikgb25seU93bmVyIHsKICAgIHJlcXVpcmUobmV3T3duZXIgIT0gYWRkcmVzcygwKSk7ICAgICAgCiAgICBvd25lciA9IG5ld093bmVyOwogIH0KCn0KY29udHJhY3QgQ29udHJvbGxlckludGVyZmFjZSB7CgoKICAvLyBTdGF0ZSBWYXJpYWJsZXMKICBib29sIHB1YmxpYyBwYXVzZWQ7CgogIC8vIE51dHogZnVuY3Rpb25zCiAgZnVuY3Rpb24gYmFiekJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nik7CiAgZnVuY3Rpb24gYWN0aXZlU3VwcGx5KCkgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nik7CiAgZnVuY3Rpb24gYnVyblBvb2woKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KTsKICBmdW5jdGlvbiBwb3dlclBvb2woKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KTsKICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpOwogIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nik7CgogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX2Ftb3VudEJhYnopIHB1YmxpYzsKICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfYW1vdW50QmFieiwgYnl0ZXMgX2RhdGEpIHB1YmxpYyByZXR1cm5zIChib29sKTsKICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfc2VuZGVyLCBhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfYW1vdW50QmFieiwgYnl0ZXMgX2RhdGEpIHB1YmxpYyByZXR1cm5zIChib29sKTsKCiAgLy8gTWFya2V0IGZ1bmN0aW9ucwogIGZ1bmN0aW9uIGZsb29yKCkgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nik7CiAgZnVuY3Rpb24gY2VpbGluZygpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpOwoKICBmdW5jdGlvbiBwdXJjaGFzZShhZGRyZXNzIF9zZW5kZXIsIHVpbnQyNTYgX3ByaWNlKSBwdWJsaWMgcGF5YWJsZSByZXR1cm5zICh1aW50MjU2LCBib29sKTsKICBmdW5jdGlvbiBzZWxsKGFkZHJlc3MgX2Zyb20sIHVpbnQyNTYgX3ByaWNlLCB1aW50MjU2IF9hbW91bnRCYWJ6KSBwdWJsaWM7CgogIC8vIFBvd2VyIGZ1bmN0aW9ucwogIGZ1bmN0aW9uIHBvd2VyQmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KTsKICBmdW5jdGlvbiBvdXRzdGFuZGluZ1Bvd2VyKCkgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nik7CiAgZnVuY3Rpb24gYXV0aG9yaXplZFBvd2VyKCkgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nik7CiAgZnVuY3Rpb24gcG93ZXJUb3RhbFN1cHBseSgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpOwoKICBmdW5jdGlvbiBwb3dlclVwKGFkZHJlc3MgX3NlbmRlciwgYWRkcmVzcyBfZnJvbSwgdWludDI1NiBfYW1vdW50QmFieikgcHVibGljOwogIGZ1bmN0aW9uIGRvd25UaWNrKHVpbnQyNTYgX3BvcywgdWludDI1NiBfbm93KSBwdWJsaWM7CiAgZnVuY3Rpb24gY3JlYXRlRG93blJlcXVlc3QoYWRkcmVzcyBfb3duZXIsIHVpbnQyNTYgX2Ftb3VudFBvd2VyKSBwdWJsaWM7Cn0KCi8qKgogKiBAdGl0bGUgUHVsbFBheW1lbnQKICogQGRldiBCYXNlIGNvbnRyYWN0IHN1cHBvcnRpbmcgYXN5bmMgc2VuZCBmb3IgcHVsbCBwYXltZW50cy4KICovCmNvbnRyYWN0IFB1bGxQYXltZW50IGlzIE93bmFibGUgewogIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwoKICBzdHJ1Y3QgUGF5bWVudCB7CiAgICB1aW50MjU2IHZhbHVlOyAgLy8gVE9ETzogdXNlIGNvbXBhY3Qgc3RvcmFnZQogICAgdWludDI1NiBkYXRlOyAgIC8vCiAgfQoKICB1aW50IHB1YmxpYyBkYWlseUxpbWl0ID0gMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDsgIC8vIDEgRVRICiAgdWludCBwdWJsaWMgbGFzdERheTsKICB1aW50IHB1YmxpYyBzcGVudFRvZGF5OwoKICBtYXBwaW5nKGFkZHJlc3MgPT4gUGF5bWVudCkgaW50ZXJuYWwgcGF5bWVudHM7CgogIG1vZGlmaWVyIHdoZW5Ob3RQYXVzZWQgKCkgewogICAgcmVxdWlyZSghQ29udHJvbGxlckludGVyZmFjZShvd25lcikucGF1c2VkKCkpOwogICAgIF87CiAgfQogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiB2YWx1ZSkgewogICAgcmV0dXJuIHBheW1lbnRzW19vd25lcl0udmFsdWU7CiAgfQoKICBmdW5jdGlvbiBwYXltZW50T2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgdmFsdWUsIHVpbnQyNTYgZGF0ZSkgewogICAgdmFsdWUgPSBwYXltZW50c1tfb3duZXJdLnZhbHVlOwogICAgZGF0ZSA9IHBheW1lbnRzW19vd25lcl0uZGF0ZTsKICAgIHJldHVybjsKICB9CgogIC8vLyBAZGV2IEFsbG93cyB0byBjaGFuZ2UgdGhlIGRhaWx5IGxpbWl0LiBUcmFuc2FjdGlvbiBoYXMgdG8gYmUgc2VudCBieSB3YWxsZXQuCiAgLy8vIEBwYXJhbSBfZGFpbHlMaW1pdCBBbW91bnQgaW4gd2VpLgogIGZ1bmN0aW9uIGNoYW5nZURhaWx5TGltaXQodWludCBfZGFpbHlMaW1pdCkgcHVibGljIG9ubHlPd25lciB7CiAgICAgIGRhaWx5TGltaXQgPSBfZGFpbHlMaW1pdDsKICB9CgogIGZ1bmN0aW9uIGNoYW5nZVdpdGhkcmF3YWxEYXRlKGFkZHJlc3MgX293bmVyLCB1aW50MjU2IF9uZXdEYXRlKSAgcHVibGljIG9ubHlPd25lciB7CiAgICAvLyBhbGxvdyB0byB3aXRoZHJhdyBpbW1lZGlhdGVseQogICAgLy8gbW92ZSB3aXRkcmF3YWwgZGF0ZSBtb3JlIGRheXMgaW50byBmdXR1cmUKICAgIHBheW1lbnRzW19vd25lcl0uZGF0ZSA9IF9uZXdEYXRlOwogIH0KCiAgZnVuY3Rpb24gYXN5bmNTZW5kKGFkZHJlc3MgX2Rlc3QpIHB1YmxpYyBwYXlhYmxlIG9ubHlPd25lciB7CiAgICByZXF1aXJlKG1zZy52YWx1ZSA+IDApOwogICAgdWludDI1NiBuZXdWYWx1ZSA9IHBheW1lbnRzW19kZXN0XS52YWx1ZS5hZGQobXNnLnZhbHVlKTsKICAgIHVpbnQyNTYgbmV3RGF0ZTsKICAgIGlmIChpc1VuZGVyTGltaXQobXNnLnZhbHVlKSkgewogICAgICBuZXdEYXRlID0gKHBheW1lbnRzW19kZXN0XS5kYXRlID4gbm93KSA/IHBheW1lbnRzW19kZXN0XS5kYXRlIDogbm93OwogICAgfSBlbHNlIHsKICAgICAgbmV3RGF0ZSA9IG5vdy5hZGQoMyBkYXlzKTsKICAgIH0KICAgIHNwZW50VG9kYXkgPSBzcGVudFRvZGF5LmFkZChtc2cudmFsdWUpOwogICAgcGF5bWVudHNbX2Rlc3RdID0gUGF5bWVudChuZXdWYWx1ZSwgbmV3RGF0ZSk7CiAgfQoKCiAgZnVuY3Rpb24gd2l0aGRyYXcoKSBwdWJsaWMgd2hlbk5vdFBhdXNlZCB7CiAgICBhZGRyZXNzIHVudHJ1c3RlZFJlY2lwaWVudCA9IG1zZy5zZW5kZXI7CiAgICB1aW50MjU2IGFtb3VudFdlaSA9IHBheW1lbnRzW3VudHJ1c3RlZFJlY2lwaWVudF0udmFsdWU7CgogICAgcmVxdWlyZShhbW91bnRXZWkgIT0gMCk7CiAgICByZXF1aXJlKG5vdyA+PSBwYXltZW50c1t1bnRydXN0ZWRSZWNpcGllbnRdLmRhdGUpOwogICAgcmVxdWlyZSh0aGlzLmJhbGFuY2UgPj0gYW1vdW50V2VpKTsKCiAgICBwYXltZW50c1t1bnRydXN0ZWRSZWNpcGllbnRdLnZhbHVlID0gMDsKCiAgICB1bnRydXN0ZWRSZWNpcGllbnQudHJhbnNmZXIoYW1vdW50V2VpKTsKICB9CgogIC8qCiAgICogSW50ZXJuYWwgZnVuY3Rpb25zCiAgICovCiAgLy8vIEBkZXYgUmV0dXJucyBpZiBhbW91bnQgaXMgd2l0aGluIGRhaWx5IGxpbWl0IGFuZCByZXNldHMgc3BlbnRUb2RheSBhZnRlciBvbmUgZGF5LgogIC8vLyBAcGFyYW0gYW1vdW50IEFtb3VudCB0byB3aXRoZHJhdy4KICAvLy8gQHJldHVybiBSZXR1cm5zIGlmIGFtb3VudCBpcyB1bmRlciBkYWlseSBsaW1pdC4KICBmdW5jdGlvbiBpc1VuZGVyTGltaXQodWludCBhbW91bnQpIGludGVybmFsIHJldHVybnMgKGJvb2wpIHsKICAgIGlmIChub3cgPiBsYXN0RGF5LmFkZCgyNCBob3VycykpIHsKICAgICAgbGFzdERheSA9IG5vdzsKICAgICAgc3BlbnRUb2RheSA9IDA7CiAgICB9CiAgICAvLyBub3QgdXNpbmcgc2FmZSBtYXRoIGJlY2F1c2Ugd2UgZG9uJ3Qgd2FudCB0byB0aHJvdzsKICAgIGlmIChzcGVudFRvZGF5ICsgYW1vdW50ID4gZGFpbHlMaW1pdCB8fCBzcGVudFRvZGF5ICsgYW1vdW50IDwgc3BlbnRUb2RheSkgewogICAgICByZXR1cm4gZmFsc2U7CiAgICB9CiAgICByZXR1cm4gdHJ1ZTsKICB9Cgp9'.
	

]
