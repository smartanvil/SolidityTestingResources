Class {
	#name : #SRT2136bbba2edca21afdddee838fff19ea70d10f03,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT2136bbba2edca21afdddee838fff19ea70d10f03 >> base64 [
	^ ''.
	

]
