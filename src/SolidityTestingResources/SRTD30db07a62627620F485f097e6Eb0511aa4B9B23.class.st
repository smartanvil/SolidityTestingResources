Class {
	#name : #SRTD30db07a62627620F485f097e6Eb0511aa4B9B23,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTD30db07a62627620F485f097e6Eb0511aa4B9B23 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTM7CgpsaWJyYXJ5IFNhZmVNYXRoIHsKICAgIGZ1bmN0aW9uIG11bCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgICAgIGFzc2VydChhID09IDAgfHwgYyAvIGEgPT0gYik7CiAgICAgICAgcmV0dXJuIGM7CiAgICB9CiAgICBmdW5jdGlvbiBkaXYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgICAgICByZXR1cm4gYzsKICAgIH0KICAgIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgICAgIGFzc2VydChiIDw9IGEpOwogICAgICAgIHJldHVybiBhIC0gYjsKICAgIH0KICAgIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgICAgIGFzc2VydChjID49IGEpOwogICAgICAgIHJldHVybiBjOwogICAgfQp9Cgpjb250cmFjdCBFeHRGdWVsZFRva2VuIHsKICAgIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwovLyBvd25hYmxlCiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKICAgIGFkZHJlc3MgcHVibGljIG1haW5Db250cmFjdDsKCiAgICBtb2RpZmllciBvbmx5T3duZXIoKSB7CiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyKTsKICAgICAgICBfOwogICAgfQoKICAgIGV2ZW50IE93bmVyc2hpcFRyYW5zZmVycmVkKGFkZHJlc3MgaW5kZXhlZCBwcmV2aW91c093bmVyLCBhZGRyZXNzIGluZGV4ZWQgbmV3T3duZXIpOwogICAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBuZXdPd25lcikgb25seU93bmVyIHB1YmxpYyB7CiAgICAgICAgcmVxdWlyZShuZXdPd25lciAhPSBhZGRyZXNzKDApKTsKICAgICAgICBPd25lcnNoaXBUcmFuc2ZlcnJlZChvd25lciwgbmV3T3duZXIpOwogICAgICAgIG93bmVyID0gbmV3T3duZXI7CiAgICB9CgovLyBzZWxmIHRyYW5zZmVyCiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikgYmFsYW5jZXM7CiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHZhbHVlKTsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgICAgICByZXF1aXJlKF90byAhPSBhZGRyZXNzKDApKTsKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IGJhbGFuY2VzW21zZy5zZW5kZXJdLnN1YihfdmFsdWUpOwogICAgICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfdmFsdWUpOwogICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgewogICAgICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogICAgfQoKLy8gYWxsb3dlZCB0cmFuc2ZlcgogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBhbGxvd2VkOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIG93bmVyXywgYWRkcmVzcyBpbmRleGVkIHNwZW5kZXIsIHVpbnQyNTYgdmFsdWUpOwogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsKICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKSB7CiAgICAgICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07CiAgICB9CiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgICAgIHJlcXVpcmUoX3RvICE9IGFkZHJlc3MoMCkpOwogICAgICAgIHVpbnQyNTYgX2FsbG93YW5jZSA9IGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdOwogICAgICAgIGJhbGFuY2VzW19mcm9tXSA9IGJhbGFuY2VzW19mcm9tXS5zdWIoX3ZhbHVlKTsKICAgICAgICBiYWxhbmNlc1tfdG9dID0gYmFsYW5jZXNbX3RvXS5hZGQoX3ZhbHVlKTsKICAgICAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA9IF9hbGxvd2FuY2Uuc3ViKF92YWx1ZSk7CiAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIGZ1bmN0aW9uIGluY3JlYXNlQXBwcm92YWwgKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQgX2FkZGVkVmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdLmFkZChfYWRkZWRWYWx1ZSk7CiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIGZ1bmN0aW9uIGRlY3JlYXNlQXBwcm92YWwgKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQgX3N1YnRyYWN0ZWRWYWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIHVpbnQgb2xkVmFsdWUgPSBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXTsKICAgICAgICBpZiAoX3N1YnRyYWN0ZWRWYWx1ZSA+IG9sZFZhbHVlKSB7IGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gMDsgfSAKICAgICAgICBlbHNlIHthbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IG9sZFZhbHVlLnN1Yihfc3VidHJhY3RlZFZhbHVlKTsgfQogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgovLyBtaW50YWJsZQogICAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHkgPSAxMzUwMDAwMDsgLy8gbWludGluZyBpbiBjb25zdHJ1Y3RvcgovLyBzYWxlCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBwcml2YXRlUHJlSUNPZGVwb3NpdG9yczsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIHByZUlDT2RlcG9zaXRvcnM7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBJQ09kZXBvc2l0b3JzOwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBwdWJsaWMgSUNPYmFsYW5jZXM7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBkZXBvc2l0b3JDdXJyZW5jeTsKICAgIAogICAgdWludDI1NiBjb25zdGFudCBwdWJsaWMgbWF4UHJlSUNPU3VwcGx5ID0gMTM1MDAwMDA7IC8vIGluY2x1ZGluZyBmcmVlIGJvbnVzIHRva2VucwogICAgdWludDI1NiBjb25zdGFudCBwdWJsaWMgbWF4UHJlSUNPYW5kSUNPU3VwcGx5ID0gMTM1MDAwMDA7CiAgICB1aW50MjU2IHB1YmxpYyBzdGFydFRpbWVQcml2YXRlUHJlSUNPID0gMDsKICAgIHVpbnQyNTYgcHVibGljIHN0YXJ0VGltZVByZUlDTyA9IDA7CiAgICB1aW50MjU2IHB1YmxpYyBzdGFydFRpbWVJQ08gPSAwOwogICAgdWludDI1NiBwdWJsaWMgc29sZFRva2VuQ291bnQgPSAwOwogICAgdWludDI1NiBwdWJsaWMgY2FwID0gMDsKICAgIHVpbnQyNTYgcHVibGljIGNhcFByZUlDTyA9IDA7CiAgICB1aW50MjU2IHB1YmxpYyBjYXBQcmVJQ09UcmFzZmVycmVkID0gMDsKICAgIHVpbnQyNTYgcHVibGljIGNhcEVUSCA9IDA7CgogICAgLy8gc2FsZQogICAgZXZlbnQgU2FsZVN0YXR1cyhzdHJpbmcgaW5kZXhlZCBzdGF0dXMsIHVpbnQyNTYgaW5kZXhlZCBfZGF0ZSk7CgogICAgZnVuY3Rpb24gc3RhcnRQcml2YXRlUHJlSUNPKCkgb25seU93bmVyIHB1YmxpYyB7CiAgICAgICAgcmVxdWlyZShzdGFydFRpbWVJQ08gPT0gMCAmJiBzdGFydFRpbWVQcmVJQ08gPT0gMCk7CiAgICAgICAgc3RhcnRUaW1lUHJlSUNPID0gbm93OwogICAgICAgIHN0YXJ0VGltZVByaXZhdGVQcmVJQ08gPSBzdGFydFRpbWVQcmVJQ087CiAgICAgICAgU2FsZVN0YXR1cygnUHJpdmF0ZSBQcmUgSUNPIHN0YXJ0ZWQnLCBzdGFydFRpbWVQcmVJQ08pOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBzdGFydFByZUlDTygpIG9ubHlPd25lciBwdWJsaWMgewogICAgICAgIHJlcXVpcmUoc3RhcnRUaW1lSUNPID09IDAgJiYgc3RhcnRUaW1lUHJlSUNPID09IDApOwogICAgICAgIHN0YXJ0VGltZVByZUlDTyA9IG5vdzsKICAgICAgICBTYWxlU3RhdHVzKCdQdWJsaWMgUHJlIElDTyBzdGFydGVkJywgc3RhcnRUaW1lUHJlSUNPKTsKICAgIH0KCiAgICBmdW5jdGlvbiBzdGFydElDTygpIG9ubHlPd25lciBwdWJsaWMgewogICAgICAgIHJlcXVpcmUoc3RhcnRUaW1lSUNPID09IDAgJiYgc3RhcnRUaW1lUHJlSUNPID09IDApOwogICAgICAgIHN0YXJ0VGltZUlDTyA9IG5vdzsKICAgICAgICBTYWxlU3RhdHVzKCdzdGFydCBJQ08nLCBzdGFydFRpbWVQcmVJQ08pOwogICAgfQoKICAgIGZ1bmN0aW9uIHN0b3BTYWxlKCkgb25seU93bmVyIHB1YmxpYyB7CiAgICAgICAgcmVxdWlyZShzdGFydFRpbWVJQ08gPiAwIHx8IHN0YXJ0VGltZVByZUlDTyA+IDApOwogICAgICAgIGlmIChzdGFydFRpbWVJQ08gPiAwKXsKICAgICAgICAgICAgU2FsZVN0YXR1cygnSUNPIHN0b3BwZWQnLCBub3cpOwogICAgICAgIH0KICAgICAgICBlbHNlewogICAgICAgICAgICBjYXBQcmVJQ08gPSAwOwogICAgICAgICAgICBTYWxlU3RhdHVzKCdQcmUgSUNPIHN0b3BwZWQnLCBub3cpOwogICAgICAgIH0KICAgICAgICBzdGFydFRpbWVJQ08gPSAwOwogICAgICAgIHN0YXJ0VGltZVByZUlDTyA9IDA7CiAgICAgICAgc3RhcnRUaW1lUHJpdmF0ZVByZUlDTyA9IDA7CiAgICB9CgogICAgZXZlbnQgRXh0VG9rZW5QdXJjaGFzZShhZGRyZXNzIGluZGV4ZWQgcHVyY2hhc2VyLCBhZGRyZXNzIGluZGV4ZWQgYmVuZWZpY2lhcnksIHVpbnQyNTYgdmFsdWUsIHVpbnQyNTYgY3VycmVuY3lDb2RlLCB1aW50MjU2IGFtb3VudCk7CiAgICBmdW5jdGlvbiBidXlUb2tlbnMoYWRkcmVzcyBiZW5lZmljaWFyeV8sIHVpbnQyNTYgZmlhdEFtb3VudF8sIHVpbnQyNTYgY3VycmVuY3lDb2RlXywgdWludDI1NiBhbW91bnRFVEhfLCB1aW50MjU2IHRva2Vuc0Ftb3VudF8pIG9ubHlPd25lciBwdWJsaWMgeyAKICAgICAgICByZXF1aXJlKHN0YXJ0VGltZUlDTyA+IDAgfHwgc3RhcnRUaW1lUHJlSUNPID4gMCk7CiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyICE9IGFkZHJlc3MoMCkpOwogICAgICAgIAogICAgICAgIGFkZHJlc3MgZGVwb3NpdG9yID0gYmVuZWZpY2lhcnlfOwogICAgICAgIHVpbnQyNTYgZGVwb3NpdCA9IGZpYXRBbW91bnRfOwogICAgICAgIHVpbnQyNTYgY3VycmVuY3lDb2RlID0gY3VycmVuY3lDb2RlXzsKICAgICAgICB1aW50MjU2IGFtb3VudEVUSCA9IGFtb3VudEVUSF87CiAgICAgICAgdWludDI1NiB0b2tlbnMgPSB0b2tlbnNBbW91bnRfOwoKICAgICAgICBiYWxhbmNlc1tvd25lcl0gPSBiYWxhbmNlc1tvd25lcl0uc3ViKHRva2Vucyk7CiAgICAgICAgYmFsYW5jZXNbZGVwb3NpdG9yXSA9IGJhbGFuY2VzW2RlcG9zaXRvcl0uYWRkKHRva2Vucyk7CiAgICAgICAgZGVwb3NpdG9yQ3VycmVuY3lbZGVwb3NpdG9yXSA9IGN1cnJlbmN5Q29kZTsKICAgICAgICBzb2xkVG9rZW5Db3VudCA9IHNvbGRUb2tlbkNvdW50LmFkZCh0b2tlbnMpOwogICAgICAgIGNhcEVUSCA9IGNhcEVUSC5hZGQoYW1vdW50RVRIKTsKICAgICAgICBpZiAoc3RhcnRUaW1lSUNPID4gMCl7CiAgICAgICAgICAgIElDT2JhbGFuY2VzW2RlcG9zaXRvcl0gPSBJQ09iYWxhbmNlc1tkZXBvc2l0b3JdLmFkZCh0b2tlbnMpOwogICAgICAgIH0KCiAgICAgICAgaWYgKHN0YXJ0VGltZUlDTyA+IDApewogICAgICAgICAgICBJQ09kZXBvc2l0b3JzW2RlcG9zaXRvcl0gPSBJQ09kZXBvc2l0b3JzW2RlcG9zaXRvcl0uYWRkKGRlcG9zaXQpOwogICAgICAgIH0KICAgICAgICBlbHNlewogICAgICAgICAgICBpZihzdGFydFRpbWVQcml2YXRlUHJlSUNPID4gMCkgewogICAgICAgICAgICAgICAgcHJpdmF0ZVByZUlDT2RlcG9zaXRvcnNbZGVwb3NpdG9yXSA9IHByaXZhdGVQcmVJQ09kZXBvc2l0b3JzW2RlcG9zaXRvcl0uYWRkKGRlcG9zaXQpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgcHJlSUNPZGVwb3NpdG9yc1tkZXBvc2l0b3JdID0gcHJlSUNPZGVwb3NpdG9yc1tkZXBvc2l0b3JdLmFkZChkZXBvc2l0KTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBjYXAgPSBjYXAuYWRkKGRlcG9zaXQpOwogICAgICAgIGlmKHN0YXJ0VGltZVByZUlDTyA+IDApIHsKICAgICAgICAgICAgY2FwUHJlSUNPID0gY2FwUHJlSUNPLmFkZChkZXBvc2l0KTsKICAgICAgICB9CgogICAgICAgIEZ1ZWxkVG9rZW4gRnVlbGRUb2tlbkV4dCA9IEZ1ZWxkVG9rZW4obWFpbkNvbnRyYWN0KTsKICAgICAgICBGdWVsZFRva2VuRXh0LmV4dEJ1eVRva2VucyhkZXBvc2l0b3IsIHRva2VucywgYW1vdW50RVRIKTsgCiAgICAgICAgRXh0VG9rZW5QdXJjaGFzZShvd25lciwgZGVwb3NpdG9yLCBkZXBvc2l0LCBjdXJyZW5jeUNvZGUsIHRva2Vucyk7CiAgICB9CgogICAgZXZlbnQgRml4U2FsZSh1aW50MjU2IGZpeFRpbWUpOwogICAgYm9vbCBwdWJsaWMgZml4U2FsZUNvbXBsZXRlZCA9IGZhbHNlOwogICAgZnVuY3Rpb24gZml4U2FsZSgpIG9ubHlPd25lciBwdWJsaWMgewogICAgICAgIHJlcXVpcmUoc3RhcnRUaW1lSUNPID09IDAgJiYgc3RhcnRUaW1lUHJlSUNPID09IDApOwogICAgICAgIHVpbnQyNTYgY3VycmVudFRpbWUgPSBub3c7CiAgICAgICAgc29sZFRva2VuQ291bnQgPSAwOwogICAgICAgIGZpeFNhbGVDb21wbGV0ZWQgPSB0cnVlOwogICAgICAgIEZpeFNhbGUoY3VycmVudFRpbWUpOwogICAgfQoKLy8gYnVybmFibGUKICAgIGV2ZW50IEJ1cm4oYWRkcmVzcyBpbmRleGVkIGJ1cm5lciwgdWludCBpbmRleGVkIHZhbHVlKTsKICAgIGZ1bmN0aW9uIGJ1cm4odWludCBfdmFsdWUpIG9ubHlPd25lciBwdWJsaWMgewogICAgICAgIHJlcXVpcmUoZml4U2FsZUNvbXBsZXRlZCA9PSB0cnVlKTsKICAgICAgICByZXF1aXJlKF92YWx1ZSA+IDApOwogICAgICAgIGFkZHJlc3MgYnVybmVyID0gbXNnLnNlbmRlcjsKICAgICAgICBiYWxhbmNlc1tidXJuZXJdID0gYmFsYW5jZXNbYnVybmVyXS5zdWIoX3ZhbHVlKTsKICAgICAgICB0b3RhbFN1cHBseSA9IHRvdGFsU3VwcGx5LnN1YihfdmFsdWUpOwogICAgICAgIGZpeFNhbGVDb21wbGV0ZWQgPSBmYWxzZTsKICAgICAgICBCdXJuKGJ1cm5lciwgX3ZhbHVlKTsKICAgIH0KCi8vIGNvbnN0cnVjdG9yCiAgICBzdHJpbmcgY29uc3RhbnQgcHVibGljIG5hbWUgPSAiRVhURlVFTEQiOwogICAgc3RyaW5nIGNvbnN0YW50IHB1YmxpYyBzeW1ib2wgPSAiRUZMIjsKICAgIHVpbnQzMiBjb25zdGFudCBwdWJsaWMgZGVjaW1hbHMgPSAxODsKCiAgICBmdW5jdGlvbiBzZXRNYWluQ29udHJhY3RBZGRyZXNzKGFkZHJlc3MgbWFpbkNvbnRyYWN0Xykgb25seU93bmVyIHB1YmxpYyB7CiAgICAgICAgbWFpbkNvbnRyYWN0ID0gbWFpbkNvbnRyYWN0XzsKICAgIH0KCiAgICBmdW5jdGlvbiBFeHRGdWVsZFRva2VuKCkgcHVibGljIHsKICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgICAgICAgYmFsYW5jZXNbb3duZXJdID0gdG90YWxTdXBwbHk7CiAgICB9Cn0KCmNvbnRyYWN0IEZ1ZWxkVG9rZW57CiAgICBmdW5jdGlvbiBleHRCdXlUb2tlbnMoYWRkcmVzcyBiZW5lZmljaWFyeV8sIHVpbnQyNTYgdG9rZW5zQW1vdW50XywgdWludDI1NiBhbW91bnRFVEhfKSBwdWJsaWMgeyAKICAgICAgICByZXF1aXJlKGJlbmVmaWNpYXJ5XyAhPSBhZGRyZXNzKDApKTsKICAgICAgICByZXF1aXJlKHRva2Vuc0Ftb3VudF8gIT0gMCk7CiAgICAgICAgcmVxdWlyZShhbW91bnRFVEhfICE9IDApOwogICAgfQp9'.
	

]
