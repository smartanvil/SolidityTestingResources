Class {
	#name : #SRT7199C3fBc0832e8798d2514eEAa88f0CE597698D,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT7199C3fBc0832e8798d2514eEAa88f0CE597698D >> base64 [
	^ ''.
	

]
