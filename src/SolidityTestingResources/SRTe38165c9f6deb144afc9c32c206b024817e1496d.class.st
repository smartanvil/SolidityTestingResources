Class {
	#name : #SRTe38165c9f6deb144afc9c32c206b024817e1496d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTe38165c9f6deb144afc9c32c206b024817e1496d >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTY7CgoKY29udHJhY3QgT3duYWJsZSB7CiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKCiAgICBmdW5jdGlvbiBPd25hYmxlKCkgcHVibGljIHsKICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgICB9CgogICAgbW9kaWZpZXIgb25seU93bmVyKCkgIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgICAgIF87CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBuZXdPd25lcikgcHVibGljIG9ubHlPd25lciB7CiAgICAgICAgaWYgKG5ld093bmVyICE9IGFkZHJlc3MoMCkpIHsKICAgICAgICAgICAgb3duZXIgPSBuZXdPd25lcjsKICAgICAgICB9CiAgICB9Cgp9Cgpjb250cmFjdCBTYWZlTWF0aCB7CiAgICBmdW5jdGlvbiBzYWZlU3ViKHVpbnQgYSwgdWludCBiKSBwdXJlIGludGVybmFsIHJldHVybnMgKHVpbnQpIHsKICAgICAgICBzQXNzZXJ0KGIgPD0gYSk7CiAgICAgICAgcmV0dXJuIGEgLSBiOwogICAgfQoKICAgIGZ1bmN0aW9uIHNhZmVBZGQodWludCBhLCB1aW50IGIpIHB1cmUgaW50ZXJuYWwgcmV0dXJucyAodWludCkgewogICAgICAgIHVpbnQgYyA9IGEgKyBiOwogICAgICAgIHNBc3NlcnQoYz49YSAmJiBjPj1iKTsKICAgICAgICByZXR1cm4gYzsKICAgIH0KCiAgICBmdW5jdGlvbiBzQXNzZXJ0KGJvb2wgYXNzZXJ0aW9uKSBpbnRlcm5hbCBwdXJlIHsKICAgICAgICBpZiAoIWFzc2VydGlvbikgewogICAgICAgICAgICByZXZlcnQoKTsKICAgICAgICB9CiAgICB9Cn0KCgpjb250cmFjdCBFUkMyMCB7CiAgICB1aW50IHB1YmxpYyB0b3RhbFN1cHBseTsKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIHdobykgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQpOwogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3Mgb3duZXIsIGFkZHJlc3Mgc3BlbmRlcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQpOwoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG9BY2N0LCB1aW50IHZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBvayk7CiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBmcm9tQWNjdCwgYWRkcmVzcyB0b0FjY3QsIHVpbnQgdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIG9rKTsKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBzcGVuZGVyLCB1aW50IHZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBvayk7CiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbUFjY3QsIGFkZHJlc3MgaW5kZXhlZCB0b0FjY3QsIHVpbnQgdmFsdWUpOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIG93bmVyLCBhZGRyZXNzIGluZGV4ZWQgc3BlbmRlciwgdWludCB2YWx1ZSk7Cn0KCmNvbnRyYWN0IFN0YW5kYXJkVG9rZW4gaXMgRVJDMjAsIFNhZmVNYXRoIHsKCiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludCkgYmFsYW5jZXM7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludCkpIGFsbG93ZWQ7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IGJvb2wpIHB1YmxpYyBmcm96ZW5BY2NvdW50OwogICAgZXZlbnQgRnJvemVuRnVuZHMoYWRkcmVzcyB0YXJnZXQsIGJvb2wgZnJvemVuKTsKICAgIGV2ZW50IEJ1cm4oYWRkcmVzcyBpbmRleGVkIGZyb21BY2N0LCB1aW50MjU2IHZhbHVlKTsKCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90b0FjY3QsIHVpbnQgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBzYWZlU3ViKGJhbGFuY2VzW21zZy5zZW5kZXJdLCBfdmFsdWUpOwogICAgICAgIGJhbGFuY2VzW190b0FjY3RdID0gc2FmZUFkZChiYWxhbmNlc1tfdG9BY2N0XSwgX3ZhbHVlKTsKICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG9BY2N0LCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tQWNjdCwgYWRkcmVzcyBfdG9BY2N0LCB1aW50IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIHZhciBfYWxsb3dhbmNlID0gYWxsb3dlZFtfZnJvbUFjY3RdW21zZy5zZW5kZXJdOwogICAgICAgIGJhbGFuY2VzW190b0FjY3RdID0gc2FmZUFkZChiYWxhbmNlc1tfdG9BY2N0XSwgX3ZhbHVlKTsKICAgICAgICBiYWxhbmNlc1tfZnJvbUFjY3RdID0gc2FmZVN1YihiYWxhbmNlc1tfZnJvbUFjY3RdLCBfdmFsdWUpOwogICAgICAgIGFsbG93ZWRbX2Zyb21BY2N0XVttc2cuc2VuZGVyXSA9IHNhZmVTdWIoX2FsbG93YW5jZSwgX3ZhbHVlKTsKICAgICAgICBUcmFuc2ZlcihfZnJvbUFjY3QsIF90b0FjY3QsIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludCBiYWxhbmNlKSB7CiAgICAgICAgcmV0dXJuIGJhbGFuY2VzW19vd25lcl07CiAgICB9CgogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50IF92YWx1ZSkgcHVibGljICByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsKICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50IHJlbWFpbmluZykgewogICAgICAgIHJldHVybiBhbGxvd2VkW19vd25lcl1bX3NwZW5kZXJdOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBidXJuKHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBzYWZlU3ViKGJhbGFuY2VzW21zZy5zZW5kZXJdLCBfdmFsdWUpOyAvLyBTdWJ0cmFjdCBmcm9tIHRoZSBzZW5kZXIKICAgICAgICB0b3RhbFN1cHBseSA9IHNhZmVTdWIodG90YWxTdXBwbHksX3ZhbHVlKTsgLy8gVXBkYXRlcyB0b3RhbFN1cHBseQogICAgICAgIEJ1cm4obXNnLnNlbmRlciwgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIAogICAgCgp9Cgpjb250cmFjdCBVU0RYQ29pbiBpcyBPd25hYmxlLCBTdGFuZGFyZFRva2VuIHsKCiAgICBzdHJpbmcgcHVibGljIG5hbWU7CiAgICBzdHJpbmcgcHVibGljIHN5bWJvbDsKICAgIHVpbnQgcHVibGljIGRlY2ltYWxzOyAgICAgICAgICAgICAgICAgIAogICAgdWludCBwdWJsaWMgdG90YWxTdXBwbHk7ICAKCgogICAgLy8vIEBub3RpY2UgSW5pdGlhbGl6ZXMgdGhlIGNvbnRyYWN0IGFuZCBhbGxvY2F0ZXMgYWxsIGluaXRpYWwgdG9rZW5zIHRvIHRoZSBvd25lciBhbmQgYWdyZWVtZW50IGFjY291bnQKICAgIGZ1bmN0aW9uIFVTRFhDb2luKCkgcHVibGljIHsKICAgIHRvdGFsU3VwcGx5ID0gMTAgKiAoMTAqKjYpICogKDEwKio2KTsKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IHRvdGFsU3VwcGx5OwogICAgICAgIG5hbWUgPSAiVVNEWCI7CiAgICAgICAgc3ltYm9sID0gIlVTRFgiOwogICAgICAgIGRlY2ltYWxzID0gNjsKICAgIH0KCiAgICBmdW5jdGlvbiAoKSBwYXlhYmxlIHB1YmxpY3sKICAgIH0KCiAgICAvLy8gQG5vdGljZSBUbyB0cmFuc2ZlciB0b2tlbiBjb250cmFjdCBvd25lcnNoaXAKICAgIC8vLyBAcGFyYW0gX25ld093bmVyIFRoZSBhZGRyZXNzIG9mIHRoZSBuZXcgb3duZXIgb2YgdGhpcyBjb250cmFjdAogICAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBfbmV3T3duZXIpIHB1YmxpYyBvbmx5T3duZXIgewogICAgICAgIGJhbGFuY2VzW19uZXdPd25lcl0gPSBzYWZlQWRkKGJhbGFuY2VzW293bmVyXSwgYmFsYW5jZXNbX25ld093bmVyXSk7CiAgICAgICAgYmFsYW5jZXNbb3duZXJdID0gMDsKICAgICAgICBPd25hYmxlLnRyYW5zZmVyT3duZXJzaGlwKF9uZXdPd25lcik7CiAgICB9CgogICAgLy8gT3duZXIgY2FuIHRyYW5zZmVyIG91dCBhbnkgRVJDMjAgdG9rZW5zIHNlbnQgaW4gYnkgbWlzdGFrZQogICAgZnVuY3Rpb24gdHJhbnNmZXJBbnlFUkMyMFRva2VuKGFkZHJlc3MgdG9rZW5BZGRyZXNzLCB1aW50IGFtb3VudCkgcHVibGljIG9ubHlPd25lciByZXR1cm5zIChib29sIHN1Y2Nlc3MpCiAgICB7CiAgICAgICAgcmV0dXJuIEVSQzIwKHRva2VuQWRkcmVzcykudHJhbnNmZXIob3duZXIsIGFtb3VudCk7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGZyZWV6ZUFjY291bnQoYWRkcmVzcyB0YXJnZXQsIGJvb2wgZnJlZXplKSBwdWJsaWMgb25seU93bmVyICB7CiAgICAgICAgZnJvemVuQWNjb3VudFt0YXJnZXRdID0gZnJlZXplOwogICAgICAgIEZyb3plbkZ1bmRzKHRhcmdldCwgZnJlZXplKTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gbWludFRva2VuKGFkZHJlc3MgX3RvQWNjdCwgdWludDI1NiBfdmFsdWUpIHB1YmxpYyBvbmx5T3duZXIgIHsKICAgICAgICBiYWxhbmNlc1tfdG9BY2N0XSA9IHNhZmVBZGQoYmFsYW5jZXNbX3RvQWNjdF0sIF92YWx1ZSk7CiAgICAgICAgdG90YWxTdXBwbHkgPSBzYWZlQWRkKHRvdGFsU3VwcGx5LCBfdmFsdWUpOwogICAgICAgIFRyYW5zZmVyKDAsIHRoaXMsIF92YWx1ZSk7CiAgICAgICAgVHJhbnNmZXIodGhpcywgX3RvQWNjdCwgX3ZhbHVlKTsKICAgIH0KCn0='.
	

]
