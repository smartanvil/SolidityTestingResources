Class {
	#name : #SRT17064d2A00c19CfE73ABF47eaab4d8533D4f92c5,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT17064d2A00c19CfE73ABF47eaab4d8533D4f92c5 >> base64 [
	^ 'LyoKICBDb3B5cmlnaHQgMjAxNyBMb29wcmluZyBQcm9qZWN0IEx0ZCAoTG9vcHJpbmcgRm91bmRhdGlvbikuCiAgTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7CiAgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgogIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUKICBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAogIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgogIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQKICBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KKi8KcHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7Ci8vLyBAdGl0bGUgVXRpbGl0eSBGdW5jdGlvbnMgZm9yIHVpbnQ4Ci8vLyBAYXV0aG9yIEtvbmdsaWFuZyBaaG9uZyAtIDw8YSBocmVmPSIvY2RuLWNnaS9sL2VtYWlsLXByb3RlY3Rpb24iIGNsYXNzPSJfX2NmX2VtYWlsX18iIGRhdGEtY2ZlbWFpbD0iYzJhOWFkYWNhNWFlYWJhM2FjYTU4MmFlYWRhZGIyYjBhYmFjYTVlY2FkYjBhNSI+W2VtYWlsJiMxNjA7cHJvdGVjdGVkXTwvYT4+LAovLy8gQGF1dGhvciBEYW5pZWwgV2FuZyAtIDw8YSBocmVmPSIvY2RuLWNnaS9sL2VtYWlsLXByb3RlY3Rpb24iIGNsYXNzPSJfX2NmX2VtYWlsX18iIGRhdGEtY2ZlbWFpbD0iM2Y1YjVlNTE1NjVhNTM3ZjUzNTA1MDRmNGQ1NjUxNTgxMTUwNGQ1OCI+W2VtYWlsJiMxNjA7cHJvdGVjdGVkXTwvYT4+LgpsaWJyYXJ5IE1hdGhVaW50OCB7CiAgICBmdW5jdGlvbiB4b3JSZWR1Y2UoCiAgICAgICAgdWludDhbXSBhcnIsCiAgICAgICAgdWludCAgICBsZW4KICAgICAgICApCiAgICAgICAgaW50ZXJuYWwKICAgICAgICBwdXJlCiAgICAgICAgcmV0dXJucyAodWludDggcmVzKQogICAgewogICAgICAgIHJlcyA9IGFyclswXTsKICAgICAgICBmb3IgKHVpbnQgaSA9IDE7IGkgPCBsZW47IGkrKykgewogICAgICAgICAgICByZXMgXj0gYXJyW2ldOwogICAgICAgIH0KICAgIH0KfQovKgogIENvcHlyaWdodCAyMDE3IExvb3ByaW5nIFByb2plY3QgTHRkIChMb29wcmluZyBGb3VuZGF0aW9uKS4KICBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKICB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAgVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQogIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCiAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuCiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAogIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgoqLwovLy8gQHRpdGxlIFV0aWxpdHkgRnVuY3Rpb25zIGZvciBieXRlMzIKLy8vIEBhdXRob3IgS29uZ2xpYW5nIFpob25nIC0gPDxhIGhyZWY9Ii9jZG4tY2dpL2wvZW1haWwtcHJvdGVjdGlvbiIgY2xhc3M9Il9fY2ZfZW1haWxfXyIgZGF0YS1jZmVtYWlsPSJmMDliOWY5ZTk3OWM5OTkxOWU5N2IwOWM5ZjlmODA4Mjk5OWU5N2RlOWY4Mjk3Ij5bZW1haWwmIzE2MDtwcm90ZWN0ZWRdPC9hPj4sCi8vLyBAYXV0aG9yIERhbmllbCBXYW5nIC0gPDxhIGhyZWY9Ii9jZG4tY2dpL2wvZW1haWwtcHJvdGVjdGlvbiIgY2xhc3M9Il9fY2ZfZW1haWxfXyIgZGF0YS1jZmVtYWlsPSJkZWJhYmZiMGI3YmJiMjllYjJiMWIxYWVhY2I3YjBiOWYwYjFhY2I5Ij5bZW1haWwmIzE2MDtwcm90ZWN0ZWRdPC9hPj4uCmxpYnJhcnkgTWF0aEJ5dGVzMzIgewogICAgZnVuY3Rpb24geG9yUmVkdWNlKAogICAgICAgIGJ5dGVzMzJbXSAgIGFyciwKICAgICAgICB1aW50ICAgICAgICBsZW4KICAgICAgICApCiAgICAgICAgaW50ZXJuYWwKICAgICAgICBwdXJlCiAgICAgICAgcmV0dXJucyAoYnl0ZXMzMiByZXMpCiAgICB7CiAgICAgICAgcmVzID0gYXJyWzBdOwogICAgICAgIGZvciAodWludCBpID0gMTsgaSA8IGxlbjsgaSsrKSB7CiAgICAgICAgICAgIHJlcyBePSBhcnJbaV07CiAgICAgICAgfQogICAgfQp9Ci8qCiAgQ29weXJpZ2h0IDIwMTcgTG9vcHJpbmcgUHJvamVjdCBMdGQgKExvb3ByaW5nIEZvdW5kYXRpb24pLgogIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwogIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKICBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiAgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywKICBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kCiAgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuCiovCi8vLyBAdGl0bGUgUmluZyBIYXNoIFJlZ2lzdHJ5IENvbnRyYWN0Ci8vLyBAZGV2IFRoaXMgY29udHJhY3RzIGhlbHAgcmVzZXJ2ZSByaW5naGFzaGVzIGZvciBtaW5lcnMuCi8vLyBAYXV0aG9yIEtvbmdsaWFuZyBaaG9uZyAtIDw8YSBocmVmPSIvY2RuLWNnaS9sL2VtYWlsLXByb3RlY3Rpb24iIGNsYXNzPSJfX2NmX2VtYWlsX18iIGRhdGEtY2ZlbWFpbD0iNDUyZTJhMmIyMjI5MmMyNDJiMjIwNTI5MmEyYTM1MzcyYzJiMjI2YjJhMzcyMiI+W2VtYWlsJiMxNjA7cHJvdGVjdGVkXTwvYT4+LAovLy8gQGF1dGhvciBEYW5pZWwgV2FuZyAtIDw8YSBocmVmPSIvY2RuLWNnaS9sL2VtYWlsLXByb3RlY3Rpb24iIGNsYXNzPSJfX2NmX2VtYWlsX18iIGRhdGEtY2ZlbWFpbD0iZGRiOWJjYjNiNGI4YjE5ZGIxYjJiMmFkYWZiNGIzYmFmM2IyYWZiYSI+W2VtYWlsJiMxNjA7cHJvdGVjdGVkXTwvYT4+Lgpjb250cmFjdCBSaW5naGFzaFJlZ2lzdHJ5IHsKICAgIHVzaW5nIE1hdGhCeXRlczMyICAgZm9yIGJ5dGVzMzJbXTsKICAgIHVzaW5nIE1hdGhVaW50OCAgICAgZm9yIHVpbnQ4W107CiAgICB1aW50IHB1YmxpYyBibG9ja3NUb0xpdmU7CiAgICBzdHJ1Y3QgU3VibWlzc2lvbiB7CiAgICAgICAgYWRkcmVzcyByaW5nbWluZXI7CiAgICAgICAgdWludCBibG9jazsKICAgIH0KICAgIG1hcHBpbmcgKGJ5dGVzMzIgPT4gU3VibWlzc2lvbikgc3VibWlzc2lvbnM7CiAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCiAgICAvLy8gRXZlbnRzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8vCiAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCiAgICBldmVudCBSaW5naGFzaFN1Ym1pdHRlZCgKICAgICAgICBhZGRyZXNzIGluZGV4ZWQgX3JpbmdtaW5lciwKICAgICAgICBieXRlczMyIGluZGV4ZWQgX3JpbmdoYXNoCiAgICApOwogICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLwogICAgLy8vIENvbnN0cnVjdG9yICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vLwogICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLwogICAgZnVuY3Rpb24gUmluZ2hhc2hSZWdpc3RyeSh1aW50IF9ibG9ja3NUb0xpdmUpCiAgICAgICAgcHVibGljCiAgICB7CiAgICAgICAgcmVxdWlyZShfYmxvY2tzVG9MaXZlID4gMCk7CiAgICAgICAgYmxvY2tzVG9MaXZlID0gX2Jsb2Nrc1RvTGl2ZTsKICAgIH0KICAgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8KICAgIC8vLyBQdWJsaWMgRnVuY3Rpb25zICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLy8KICAgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8KICAgIGZ1bmN0aW9uIHN1Ym1pdFJpbmdoYXNoKAogICAgICAgIGFkZHJlc3MgICAgIHJpbmdtaW5lciwKICAgICAgICBieXRlczMyICAgICByaW5naGFzaAogICAgICAgICkKICAgICAgICBwdWJsaWMKICAgIHsKICAgICAgICByZXF1aXJlKGNhblN1Ym1pdChyaW5naGFzaCwgcmluZ21pbmVyKSk7IC8vLCAiUmluZ2hhc2ggc3VibWl0dGVkIik7CiAgICAgICAgc3VibWlzc2lvbnNbcmluZ2hhc2hdID0gU3VibWlzc2lvbihyaW5nbWluZXIsIGJsb2NrLm51bWJlcik7CiAgICAgICAgUmluZ2hhc2hTdWJtaXR0ZWQocmluZ21pbmVyLCByaW5naGFzaCk7CiAgICB9CiAgICBmdW5jdGlvbiBiYXRjaFN1Ym1pdFJpbmdoYXNoKAogICAgICAgIGFkZHJlc3NbXSAgICAgcmluZ21pbmVyTGlzdCwKICAgICAgICBieXRlczMyW10gICAgIHJpbmdoYXNoTGlzdAogICAgICAgICkKICAgICAgICBleHRlcm5hbAogICAgewogICAgICAgIHVpbnQgc2l6ZSA9IHJpbmdtaW5lckxpc3QubGVuZ3RoOwogICAgICAgIHJlcXVpcmUoc2l6ZSA+IDApOwogICAgICAgIHJlcXVpcmUoc2l6ZSA9PSByaW5naGFzaExpc3QubGVuZ3RoKTsKICAgICAgICBmb3IgKHVpbnQgaSA9IDA7IGkgPCBzaXplOyBpKyspIHsKICAgICAgICAgICAgc3VibWl0UmluZ2hhc2gocmluZ21pbmVyTGlzdFtpXSwgcmluZ2hhc2hMaXN0W2ldKTsKICAgICAgICB9CiAgICB9CiAgICAvLy8gQGRldiBDYWxjdWxhdGUgdGhlIGhhc2ggb2YgYSByaW5nLgogICAgZnVuY3Rpb24gY2FsY3VsYXRlUmluZ2hhc2goCiAgICAgICAgdWludCAgICAgICAgcmluZ1NpemUsCiAgICAgICAgdWludDhbXSAgICAgdkxpc3QsCiAgICAgICAgYnl0ZXMzMltdICAgckxpc3QsCiAgICAgICAgYnl0ZXMzMltdICAgc0xpc3QKICAgICAgICApCiAgICAgICAgcHJpdmF0ZQogICAgICAgIHB1cmUKICAgICAgICByZXR1cm5zIChieXRlczMyKQogICAgewogICAgICAgIHJlcXVpcmUoCiAgICAgICAgICAgIHJpbmdTaXplID09IHZMaXN0Lmxlbmd0aCAtIDEgJiYgKAogICAgICAgICAgICByaW5nU2l6ZSA9PSByTGlzdC5sZW5ndGggLSAxICYmICgKICAgICAgICAgICAgcmluZ1NpemUgPT0gc0xpc3QubGVuZ3RoIC0gMSkpCiAgICAgICAgKTsgLy8sICJpbnZhbGlkIHJpbmcgZGF0YSIpOwogICAgICAgIHJldHVybiBrZWNjYWsyNTYoCiAgICAgICAgICAgIHZMaXN0LnhvclJlZHVjZShyaW5nU2l6ZSksCiAgICAgICAgICAgIHJMaXN0LnhvclJlZHVjZShyaW5nU2l6ZSksCiAgICAgICAgICAgIHNMaXN0LnhvclJlZHVjZShyaW5nU2l6ZSkKICAgICAgICApOwogICAgfQogICAgIC8vLyByZXR1cm4gdmFsdWUgYXR0cmlidXRlc1syXSBjb250YWlucyB0aGUgZm9sbG93aW5nIHZhbHVlcyBpbiB0aGlzIG9yZGVyOgogICAgIC8vLyBjYW5TdWJtaXQsIGlzUmVzZXJ2ZWQuCiAgICBmdW5jdGlvbiBjb21wdXRlQW5kR2V0UmluZ2hhc2hJbmZvKAogICAgICAgIHVpbnQgICAgICAgIHJpbmdTaXplLAogICAgICAgIGFkZHJlc3MgICAgIHJpbmdtaW5lciwKICAgICAgICB1aW50OFtdICAgICB2TGlzdCwKICAgICAgICBieXRlczMyW10gICByTGlzdCwKICAgICAgICBieXRlczMyW10gICBzTGlzdAogICAgICAgICkKICAgICAgICBleHRlcm5hbAogICAgICAgIHZpZXcKICAgICAgICByZXR1cm5zIChieXRlczMyIHJpbmdoYXNoLCBib29sWzJdIGF0dHJpYnV0ZXMpCiAgICB7CiAgICAgICAgcmluZ2hhc2ggPSBjYWxjdWxhdGVSaW5naGFzaCgKICAgICAgICAgICAgcmluZ1NpemUsCiAgICAgICAgICAgIHZMaXN0LAogICAgICAgICAgICByTGlzdCwKICAgICAgICAgICAgc0xpc3QKICAgICAgICApOwogICAgICAgIGF0dHJpYnV0ZXNbMF0gPSBjYW5TdWJtaXQocmluZ2hhc2gsIHJpbmdtaW5lcik7CiAgICAgICAgYXR0cmlidXRlc1sxXSA9IGlzUmVzZXJ2ZWQocmluZ2hhc2gsIHJpbmdtaW5lcik7CiAgICB9CiAgICAvLy8gQHJldHVybiB0cnVlIGlmIGEgcmluZydzIGhhc2ggY2FuIGJlIHN1Ym1pdHRlZDsKICAgIC8vLyBmYWxzZSBvdGhlcndpc2UuCiAgICBmdW5jdGlvbiBjYW5TdWJtaXQoCiAgICAgICAgYnl0ZXMzMiByaW5naGFzaCwKICAgICAgICBhZGRyZXNzIHJpbmdtaW5lcikKICAgICAgICBwdWJsaWMKICAgICAgICB2aWV3CiAgICAgICAgcmV0dXJucyAoYm9vbCkKICAgIHsKICAgICAgICByZXF1aXJlKHJpbmdtaW5lciAhPSAweDApOwogICAgICAgIHZhciBzdWJtaXNzaW9uID0gc3VibWlzc2lvbnNbcmluZ2hhc2hdOwogICAgICAgIGFkZHJlc3MgbWluZXIgPSBzdWJtaXNzaW9uLnJpbmdtaW5lcjsKICAgICAgICByZXR1cm4gKAogICAgICAgICAgICBtaW5lciA9PSAweDAgfHwgKAogICAgICAgICAgICBzdWJtaXNzaW9uLmJsb2NrICsgYmxvY2tzVG9MaXZlIDwgYmxvY2subnVtYmVyKSB8fCAoCiAgICAgICAgICAgIG1pbmVyID09IHJpbmdtaW5lcikKICAgICAgICApOwogICAgfQogICAgLy8vIEByZXR1cm4gdHJ1ZSBpZiBhIHJpbmcncyBoYXNoIHdhcyBzdWJtaXR0ZWQgYW5kIHN0aWxsIHZhbGlkOwogICAgLy8vIGZhbHNlIG90aGVyd2lzZS4KICAgIGZ1bmN0aW9uIGlzUmVzZXJ2ZWQoCiAgICAgICAgYnl0ZXMzMiByaW5naGFzaCwKICAgICAgICBhZGRyZXNzIHJpbmdtaW5lcikKICAgICAgICBwdWJsaWMKICAgICAgICB2aWV3CiAgICAgICAgcmV0dXJucyAoYm9vbCkKICAgIHsKICAgICAgICB2YXIgc3VibWlzc2lvbiA9IHN1Ym1pc3Npb25zW3JpbmdoYXNoXTsKICAgICAgICByZXR1cm4gKAogICAgICAgICAgICBzdWJtaXNzaW9uLmJsb2NrICsgYmxvY2tzVG9MaXZlID49IGJsb2NrLm51bWJlciAmJiAoCiAgICAgICAgICAgIHN1Ym1pc3Npb24ucmluZ21pbmVyID09IHJpbmdtaW5lcikKICAgICAgICApOwogICAgfQp9'.
	

]
