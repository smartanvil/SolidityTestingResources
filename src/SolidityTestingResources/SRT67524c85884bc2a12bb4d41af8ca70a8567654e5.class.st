Class {
	#name : #SRT67524c85884bc2a12bb4d41af8ca70a8567654e5,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT67524c85884bc2a12bb4d41af8ca70a8567654e5 >> base64 [
	^ ''.
	

]
