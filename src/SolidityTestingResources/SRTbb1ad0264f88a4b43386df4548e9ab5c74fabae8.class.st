Class {
	#name : #SRTbb1ad0264f88a4b43386df4548e9ab5c74fabae8,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTbb1ad0264f88a4b43386df4548e9ab5c74fabae8 >> base64 [
	^ ''.
	

]
