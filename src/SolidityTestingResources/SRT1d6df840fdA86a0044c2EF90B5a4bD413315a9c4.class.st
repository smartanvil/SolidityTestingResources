Class {
	#name : #SRT1d6df840fdA86a0044c2EF90B5a4bD413315a9c4,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT1d6df840fdA86a0044c2EF90B5a4bD413315a9c4 >> base64 [
	^ ''.
	

]
