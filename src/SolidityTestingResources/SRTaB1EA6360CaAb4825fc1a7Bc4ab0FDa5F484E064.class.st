Class {
	#name : #SRTaB1EA6360CaAb4825fc1a7Bc4ab0FDa5F484E064,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTaB1EA6360CaAb4825fc1a7Bc4ab0FDa5F484E064 >> base64 [
	^ ''.
	

]
