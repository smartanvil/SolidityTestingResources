Class {
	#name : #SRTc931eac3b736f3a956b2973ddb4128c36c5c7add,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTc931eac3b736f3a956b2973ddb4128c36c5c7add >> base64 [
	^ ''.
	

]
