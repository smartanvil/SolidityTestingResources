Class {
	#name : #SRTB781954d19Aaa207A5996e430370dcdABb76047A,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTB781954d19Aaa207A5996e430370dcdABb76047A >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgpsaWJyYXJ5IFNhZmVPcHQgewogICAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICBpZiAoYSA9PSAwKSB7CiAgICAgICAgICAgIHJldHVybiAwOwogICAgICAgIH0KICAgICAgICB1aW50MjU2IGMgPSBhICogYjsKICAgICAgICBhc3NlcnQoYyAvIGEgPT0gYik7CiAgICAgICAgcmV0dXJuIGM7CiAgICB9CgogICAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICBhc3NlcnQoYiA+IDApOyAKICAgICAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgICAgICBhc3NlcnQoYSA9PSBiICogYyk7CiAgICAgICAgcmV0dXJuIGM7CiAgICB9CgogICAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICB1aW50MjU2IGMgPSBhIC0gYjsKICAgICAgICBhc3NlcnQoYiA8PSBhKTsKICAgICAgICBhc3NlcnQoYSA9PSBjICsgYik7CiAgICAgICAgcmV0dXJuIGM7CiAgICB9CgogICAgZnVuY3Rpb24gYWRkKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICB1aW50MjU2IGMgPSBhICsgYjsKICAgICAgICBhc3NlcnQoYyA+PSBhKTsKICAgICAgICBhc3NlcnQoYSA9PSBjIC0gYik7CiAgICAgICAgcmV0dXJuIGM7CiAgICB9Cn0KY29udHJhY3QgVFREVG9rZW5Jc3N1ZSB7CiAgICB1aW50MjU2IHB1YmxpYyBsYXN0WWVhclRvdGFsU3VwcGx5ID0gMTUgKiAxMCAqKiAyNjsgCiAgICB1aW50OCAgIHB1YmxpYyBhZmZlY3RlZENvdW50ID0gMDsKICAgIGJvb2wgICAgcHVibGljIGluaXRpYWxZZWFyID0gdHJ1ZTsgCgkvL3VpbnQxNiAgcHVibGljIGJsb2NrSGVpZ2h0ID0gMjEwMjQwMDsKCWFkZHJlc3MgcHVibGljIHRva2VuQ29udHJhY3RBZGRyZXNzOwogICAgdWludDE2ICBwdWJsaWMgcHJlUmF0ZSA9IDEwMDA7IAogICAgdWludDI1NiBwdWJsaWMgbGFzdEJsb2NrTnVtYmVyOwoKICAgIGZ1bmN0aW9uIFRURFRva2VuSXNzdWUgKGFkZHJlc3MgX3Rva2VuQ29udHJhY3RBZGRyZXNzKSBwdWJsaWN7CiAgICAgICAgdG9rZW5Db250cmFjdEFkZHJlc3MgPSBfdG9rZW5Db250cmFjdEFkZHJlc3M7CiAgICAgICAgbGFzdEJsb2NrTnVtYmVyID0gYmxvY2subnVtYmVyOwogICAgfQoKICAgIGZ1bmN0aW9uIHJldHVyblJhdGUoKSBpbnRlcm5hbCByZXR1cm5zICh1aW50MjU2KXsKICAgICAgICBpZihhZmZlY3RlZENvdW50ID09IDEwKXsKICAgICAgICAgICAgaWYocHJlUmF0ZSA+IDEwMCl7CiAgICAgICAgICAgICAgICBwcmVSYXRlIC09IDEwMDsKICAgICAgICAgICAgfQogICAgICAgICAgICBhZmZlY3RlZENvdW50ID0gMDsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIFNhZmVPcHQuZGl2KHByZVJhdGUsIDEwKTsKICAgIH0KCiAgICBmdW5jdGlvbiBpc3N1ZSgpIHB1YmxpYyAgewogICAgICAgIGlmKGluaXRpYWxZZWFyKXsKICAgICAgICAgICAgcmVxdWlyZShTYWZlT3B0LnN1YihibG9jay5udW1iZXIsIGxhc3RCbG9ja051bWJlcikgPiAyMTAyNDAwKTsKICAgICAgICAgICAgaW5pdGlhbFllYXIgPSBmYWxzZTsKICAgICAgICB9CiAgICAgICAgcmVxdWlyZShTYWZlT3B0LnN1YihibG9jay5udW1iZXIsIGxhc3RCbG9ja051bWJlcikgPiAyMTAyNDAwKTsKICAgICAgICBUVERUb2tlbiB0b2tlbkNvbnRyYWN0ID0gVFREVG9rZW4odG9rZW5Db250cmFjdEFkZHJlc3MpOwogICAgICAgIGlmKGFmZmVjdGVkQ291bnQgPT0gMTApewogICAgICAgICAgICBsYXN0WWVhclRvdGFsU3VwcGx5ID0gdG9rZW5Db250cmFjdC50b3RhbFN1cHBseSgpOwogICAgICAgIH0KICAgICAgICB1aW50MjU2IGFtb3VudCA9IFNhZmVPcHQuZGl2KFNhZmVPcHQubXVsKGxhc3RZZWFyVG90YWxTdXBwbHksIHJldHVyblJhdGUoKSksIDEwMDAwKTsKICAgICAgICByZXF1aXJlKGFtb3VudCA+IDApOwogICAgICAgIHRva2VuQ29udHJhY3QuaXNzdWUoYW1vdW50KTsKICAgICAgICBsYXN0QmxvY2tOdW1iZXIgPSBibG9jay5udW1iZXI7CiAgICAgICAgYWZmZWN0ZWRDb3VudCArPSAxOwogICAgfQp9CgoKaW50ZXJmYWNlIHRva2VuUmVjaXBpZW50IHsKICAgIGZ1bmN0aW9uIHJlY2VpdmVBcHByb3ZhbChhZGRyZXNzIF9mcm9tLCB1aW50MjU2IF92YWx1ZSwgYWRkcmVzcyBfdG9rZW4sIGJ5dGVzIF9leHRyYURhdGEpIHB1YmxpYzsKfQoKY29udHJhY3QgVFREVG9rZW4gewogICAgc3RyaW5nIHB1YmxpYyBuYW1lID0gJ1RURCBUb2tlbic7CiAgICBzdHJpbmcgcHVibGljIHN5bWJvbCA9ICdUVEQnOwogICAgdWludDggcHVibGljIGRlY2ltYWxzID0gMTg7CiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseSA9IDEwMCAqIDEwICoqIDI2OwoKICAgIGFkZHJlc3MgcHVibGljIGlzc3VlQ29udHJhY3RBZGRyZXNzOwogICAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CgogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBwdWJsaWMgYmFsYW5jZU9mOwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBwdWJsaWMgYWxsb3dhbmNlOwoKICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBmcm9tLCBhZGRyZXNzIGluZGV4ZWQgdG8sIHVpbnQyNTYgdmFsdWUpOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7CiAgICBldmVudCBCdXJuKGFkZHJlc3MgaW5kZXhlZCBmcm9tLCB1aW50MjU2IHZhbHVlKTsKICAgIGV2ZW50IElzc3VlKHVpbnQyNTYgYW1vdW50KTsKCiAgICBmdW5jdGlvbiBUVERUb2tlbigpIHB1YmxpYyB7CiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgICAgIGJhbGFuY2VPZltvd25lcl0gPSB0b3RhbFN1cHBseTsKICAgICAgICBpc3N1ZUNvbnRyYWN0QWRkcmVzcyA9IG5ldyBUVERUb2tlbklzc3VlKGFkZHJlc3ModGhpcykpOwogICAgfQoKICAgIGZ1bmN0aW9uIGlzc3VlKHVpbnQyNTYgYW1vdW50KSBwdWJsaWMgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBpc3N1ZUNvbnRyYWN0QWRkcmVzcyk7CiAgICAgICAgYmFsYW5jZU9mW293bmVyXSA9IFNhZmVPcHQuYWRkKGJhbGFuY2VPZltvd25lcl0sIGFtb3VudCk7CiAgICAgICAgdG90YWxTdXBwbHkgPSBTYWZlT3B0LmFkZCh0b3RhbFN1cHBseSwgYW1vdW50KTsKICAgICAgICBJc3N1ZShhbW91bnQpOwogICAgfQoKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7CiAgICAgICAgcmV0dXJuIGJhbGFuY2VPZltfb3duZXJdOwogICAgfQoKICAgIGZ1bmN0aW9uIF90cmFuc2ZlcihhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludCBfdmFsdWUpIGludGVybmFsIHsKICAgICAgICByZXF1aXJlKF90byAhPSAweDApOwogICAgICAgIHJlcXVpcmUoYmFsYW5jZU9mW19mcm9tXSA+PSBfdmFsdWUpOwogICAgICAgIHJlcXVpcmUoYmFsYW5jZU9mW190b10gKyBfdmFsdWUgPiBiYWxhbmNlT2ZbX3RvXSk7CiAgICAgICAgdWludCBwcmV2aW91c0JhbGFuY2VzID0gYmFsYW5jZU9mW19mcm9tXSArIGJhbGFuY2VPZltfdG9dOwogICAgICAgIGJhbGFuY2VPZltfZnJvbV0gLT0gX3ZhbHVlOwogICAgICAgIGJhbGFuY2VPZltfdG9dICs9IF92YWx1ZTsKICAgICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwogICAgICAgIGFzc2VydChiYWxhbmNlT2ZbX2Zyb21dICsgYmFsYW5jZU9mW190b10gPT0gcHJldmlvdXNCYWxhbmNlcyk7CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKXsKICAgICAgICBfdHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICByZXF1aXJlKF92YWx1ZSA8PSBhbGxvd2FuY2VbX2Zyb21dW21zZy5zZW5kZXJdKTsKICAgICAgICBhbGxvd2FuY2VbX2Zyb21dW21zZy5zZW5kZXJdIC09IF92YWx1ZTsKICAgICAgICBfdHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgcmVxdWlyZShfdmFsdWUgPD0gYmFsYW5jZU9mW21zZy5zZW5kZXJdKTsKICAgICAgICBhbGxvd2FuY2VbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGFwcHJvdmVBbmRDYWxsKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlLCBieXRlcyBfZXh0cmFEYXRhKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgdG9rZW5SZWNpcGllbnQgc3BlbmRlciA9IHRva2VuUmVjaXBpZW50KF9zcGVuZGVyKTsKICAgICAgICBpZiAoYXBwcm92ZShfc3BlbmRlciwgX3ZhbHVlKSkgewogICAgICAgICAgICBzcGVuZGVyLnJlY2VpdmVBcHByb3ZhbChtc2cuc2VuZGVyLCBfdmFsdWUsIHRoaXMsIF9leHRyYURhdGEpOwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSB2aWV3IHB1YmxpYyByZXR1cm5zICh1aW50MjU2IHJlbWFpbmluZykgewogICAgICAgIHJldHVybiBhbGxvd2FuY2VbX293bmVyXVtfc3BlbmRlcl07CiAgICB9CgogICAgZnVuY3Rpb24gYnVybih1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIHJlcXVpcmUoYmFsYW5jZU9mW21zZy5zZW5kZXJdID49IF92YWx1ZSk7CiAgICAgICAgYmFsYW5jZU9mW21zZy5zZW5kZXJdIC09IF92YWx1ZTsKICAgICAgICB0b3RhbFN1cHBseSAtPSBfdmFsdWU7CiAgICAgICAgQnVybihtc2cuc2VuZGVyLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGJ1cm5Gcm9tKGFkZHJlc3MgX2Zyb20sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgcmVxdWlyZShiYWxhbmNlT2ZbX2Zyb21dID49IF92YWx1ZSk7CiAgICAgICAgcmVxdWlyZShfdmFsdWUgPD0gYWxsb3dhbmNlW19mcm9tXVttc2cuc2VuZGVyXSk7CiAgICAgICAgYmFsYW5jZU9mW19mcm9tXSAtPSBfdmFsdWU7CiAgICAgICAgYWxsb3dhbmNlW19mcm9tXVttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgdG90YWxTdXBwbHkgLT0gX3ZhbHVlOwogICAgICAgIEJ1cm4oX2Zyb20sIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9Cgp9'.
	

]
