Class {
	#name : #SRT232be6f29201d06f516903ea92bd5e3b12c495da,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT232be6f29201d06f516903ea92bd5e3b12c495da >> base64 [
	^ ''.
	

]
