Class {
	#name : #SRTf180e0f0b8ae56f01427817c2627f1fc75202929,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTf180e0f0b8ae56f01427817c2627f1fc75202929 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMjsKCi8qINCg0L7QtNC40YLQtdC70YzRgdC60LjQuSDQutC+0L3RgtGA0LDQutGCICovCmNvbnRyYWN0IE93bmVkIHsKCiAgICAvKiDQkNC00YDQtdGBINCy0LvQsNC00LXQu9GM0YbQsCDQutC+0L3RgtGA0LDQutGC0LAqLwogICAgYWRkcmVzcyBvd25lcjsKCiAgICAvKiDQmtC+0L3RgdGC0YDRg9C60YLQvtGAINC60L7QvdGC0YDQsNC60YLQsCwg0LLRi9C30YvQstCw0LXRgtGB0Y8g0L/RgNC4INC/0LXRgNCy0L7QvCDQt9Cw0L/Rg9GB0LrQtSAqLwogICAgZnVuY3Rpb24gT3duZWQoKSB7CiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgfQoKICAgIC8qINCY0LfQvNC10L3QuNGC0Ywg0LLQu9Cw0LTQtdC70YzRhtCwINC60L7QvdGC0YDQsNC60YLQsCwgbmV3T3duZXIgLSDQsNC00YDQtdGBINC90L7QstC+0LPQviDQstC70LDQtNC10LvRjNGG0LAgKi8KICAgIGZ1bmN0aW9uIGNoYW5nZU93bmVyKGFkZHJlc3MgbmV3T3duZXIpIG9ubHlvd25lciB7CiAgICAgICAgb3duZXIgPSBuZXdPd25lcjsKICAgIH0KCiAgICAvKiDQnNC+0LTQuNGE0LjQutCw0YLQvtGAINC00LvRjyDQvtCz0YDQsNC90LjRh9C10L3QuNGPINC00L7RgdGC0YPQv9CwINC6INGE0YPQvdC60YbQuNGP0Lwg0YLQvtC70YzQutC+INC00LvRjyDQstC70LDQtNC10LvRjNGG0LAgKi8KICAgIG1vZGlmaWVyIG9ubHlvd25lcigpIHsKICAgICAgICBpZiAobXNnLnNlbmRlcj09b3duZXIpIF87CiAgICB9CgogICAgLyog0KPQtNCw0LvQuNGC0Ywg0LrQvtC90YLRgNCw0LrRgiAqLwogICAgZnVuY3Rpb24ga2lsbCgpIG9ubHlvd25lciB7CiAgICAgICAgaWYgKG1zZy5zZW5kZXIgPT0gb3duZXIpIHN1aWNpZGUob3duZXIpOwogICAgfQp9CgovKiDQntGB0L3QvtCy0L3QvtC5INC60L7QvdGC0YDQsNC60YIsINC90LDRgdC70LXQtNGD0LXRgiDQutC+0L3RgtGA0LDQutGCIE93bmVkICovCmNvbnRyYWN0IEdvZHMgaXMgT3duZWQgewoKICAgIC8qINCh0YLRgNGD0LrRgtGD0YDQsCDQv9GA0LXQtNGB0YLQsNCy0LvRj9GO0YnQsNGPINGD0YfQsNGB0YLQvdC40LrQsCAqLwogICAgc3RydWN0IE1lbWJlciB7CiAgICAgICAgYWRkcmVzcyBtZW1iZXI7CiAgICAgICAgc3RyaW5nIG5hbWU7CiAgICAgICAgc3RyaW5nIHN1cm5hbWU7CiAgICAgICAgc3RyaW5nIHBhdHJvbnltaWM7CiAgICAgICAgdWludCBiaXJ0aERhdGU7CiAgICAgICAgc3RyaW5nIGJpcnRoUGxhY2U7CiAgICAgICAgc3RyaW5nIGF2YXRhckhhc2g7CiAgICAgICAgdWludCBhdmF0YXJJRDsKICAgICAgICBib29sIGFwcHJvdmVkOwogICAgICAgIHVpbnQgbWVtYmVyU2luY2U7CiAgICB9CgogICAgLyog0JzQsNGB0YHQuNCyINGD0YfQsNGB0YLQvdC40LrQvtCyICovCiAgICBNZW1iZXJbXSBwdWJsaWMgbWVtYmVyczsKCiAgICAvKiDQnNCw0L/Qv9C40L3QsyDQsNC00YDQtdGBINGD0YfQsNGB0YLQvdC40LrQsCAtPiBpZCDRg9GH0LDRgdGC0L3QuNC60LAgKi8KICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludCkgcHVibGljIG1lbWJlcklkOwoKICAgIC8qINCc0LDQv9C/0LjQvdCzIGlkINGD0YfQsNGB0YLQvdC40LrQsCAtPiDQv9GA0LjQstCw0YLQvdGL0Lkg0LrQu9GO0Ycg0LrQvtGI0LXQu9GM0LrQsCAqLwogICAgbWFwcGluZyAodWludCA9PiBzdHJpbmcpIHB1YmxpYyBwa3M7CgogICAgLyog0JzQsNC/0L/QuNC90LMgaWQg0YPRh9Cw0YHRgtC90LjQutCwIC0+INC00L7Qv9C+0LvQvdC40YLQtdC70YzQvdGL0LUg0LTQsNC90L3Ri9C1INC90LAg0YPRh9Cw0YHRgtC90LjQutCwINCyINGE0L7RgNC80LDRgtC1IEpTT04gKi8KICAgIG1hcHBpbmcgKHVpbnQgPT4gc3RyaW5nKSBwdWJsaWMgbWVtYmVyRGF0YTsKCiAgICAvKiDQodC+0LHRi9GC0LjQtSDQv9GA0Lgg0LTQvtCx0LDQstC70LXQvdC40Lgg0YPRh9Cw0YHRgtC90LjQutCwLCDQv9Cw0YDQsNC80LXRgtGA0YsgLSDQsNC00YDQtdGBLCBJRCAqLwogICAgZXZlbnQgTWVtYmVyQWRkZWQoYWRkcmVzcyBtZW1iZXIsIHVpbnQgaWQpOwoKICAgIC8qINCh0L7QsdGL0YLQuNC1INC/0YDQuCDQuNC30LzQtdC90LXQvdC40Lgg0YPRh9Cw0YHRgtC90LjQutCwLCDQv9Cw0YDQsNC80LXRgtGA0YsgLSDQsNC00YDQtdGBLCBJRCAqLwogICAgZXZlbnQgTWVtYmVyQ2hhbmdlZChhZGRyZXNzIG1lbWJlciwgdWludCBpZCk7CgogICAgLyog0JrQvtC90YHRgtGA0YPQutGC0L7RgCDQutC+0L3RgtGA0LDQutGC0LAsINCy0YvQt9GL0LLQsNC10YLRgdGPINC/0YDQuCDQv9C10YDQstC+0Lwg0LfQsNC/0YPRgdC60LUgKi8KICAgIGZ1bmN0aW9uIEdvZHMoKSB7CiAgICAgICAgLyog0JTQvtCx0LDQstC70Y/QtdC8INC/0YPRgdGC0L7Qs9C+INGD0YfQsNGB0YLQvdC40LrQsCDQtNC70Y8g0LjQvdC40YbQuNCw0LvQuNC30LDRhtC40LggKi8KICAgICAgICBhZGRNZW1iZXIoJycsICcnLCAnJywgMCwgJycsICcnLCAwLCAnJyk7CiAgICB9CgogICAgLyog0YTRg9C90LrRhtC40Y8g0LTQvtCx0LDQstC70LXQvdC40Y8g0Lgg0L7QsdC90L7QstC70LXQvdC40Y8g0YPRh9Cw0YHRgtC90LjQutCwLCDQv9Cw0YDQsNC80LXRgtGA0YsgLSDQsNC00YDQtdGBLCDQuNC80Y8sINGE0LDQvNC40LvQuNGPLAogICAgINC+0YLRh9C10YHRgtCy0L4sINC00LDRgtCwINGA0L7QttC00LXQvdC40Y8gKGxpbnV4IHRpbWUpLCDQvNC10YHRgtC+INGA0L7QttC00LXQvdC40Y8sINGF0Y3RiCDQsNCy0LDRgtCw0YDQsCwgSUQg0LDQstCw0YLQsNGA0LAKICAgICDQtdGB0LvQuCDQv9C+0LvRjNC30L7QstCw0YLQtdC70Ywg0YEg0YLQsNC60LjQvCDQsNC00YDQtdGB0L7QvCDQvdC1INC90LDQudC00LXQvSwg0YLQviDQsdGD0LTQtdGCINGB0L7Qt9C00LDQvSDQvdC+0LLRi9C5LCDQsiDQutC+0L3RhtC1INCy0YvQt9C+0LLQtdGC0YHRjyDRgdC+0LHRi9GC0LjQtQogICAgIE1lbWJlckFkZGVkLCDQtdGB0LvQuCDQv9C+0LvRjNC30L7QstCw0YLQtdC70Ywg0L3QsNC50LTQtdC9LCDRgtC+INCx0YPQtNC10YIg0L/RgNC+0LjQt9Cy0LXQtNC10L3QviDQvtCx0L3QvtCy0LvQtdC90LjQtSDQv9C+0LvQtdC5INC4INC/0YDQvtGB0YLQsNCy0LvQtdC9INGE0LvQsNCzCiAgICAg0L/QvtC00YLQstC10YDQttC00LXQvdC40Y8gYXBwcm92ZWQgKi8KICAgIGZ1bmN0aW9uIGFkZE1lbWJlcihzdHJpbmcgbmFtZSwKICAgICAgICBzdHJpbmcgc3VybmFtZSwKICAgICAgICBzdHJpbmcgcGF0cm9ueW1pYywKICAgICAgICB1aW50IGJpcnRoRGF0ZSwKICAgICAgICBzdHJpbmcgYmlydGhQbGFjZSwKICAgICAgICBzdHJpbmcgYXZhdGFySGFzaCwKICAgICAgICB1aW50IGF2YXRhcklELAogICAgICAgIHN0cmluZyBkYXRhKSBvbmx5b3duZXIgewogICAgICAgIHVpbnQgaWQ7CiAgICAgICAgYWRkcmVzcyBtZW1iZXIgPSBtc2cuc2VuZGVyOwogICAgICAgIGlmIChtZW1iZXJJZFttZW1iZXJdID09IDApIHsKICAgICAgICAgICAgbWVtYmVySWRbbWVtYmVyXSA9IG1lbWJlcnMubGVuZ3RoOwogICAgICAgICAgICBpZCA9IG1lbWJlcnMubGVuZ3RoKys7CiAgICAgICAgICAgIG1lbWJlcnNbaWRdID0gTWVtYmVyKHsKICAgICAgICAgICAgICAgIG1lbWJlcjogbWVtYmVyLAogICAgICAgICAgICAgICAgbmFtZTogbmFtZSwKICAgICAgICAgICAgICAgIHN1cm5hbWU6IHN1cm5hbWUsCiAgICAgICAgICAgICAgICBwYXRyb255bWljOiBwYXRyb255bWljLAogICAgICAgICAgICAgICAgYmlydGhEYXRlOiBiaXJ0aERhdGUsCiAgICAgICAgICAgICAgICBiaXJ0aFBsYWNlOiBiaXJ0aFBsYWNlLAogICAgICAgICAgICAgICAgYXZhdGFySGFzaDogYXZhdGFySGFzaCwKICAgICAgICAgICAgICAgIGF2YXRhcklEOiBhdmF0YXJJRCwKICAgICAgICAgICAgICAgIGFwcHJvdmVkOiAob3duZXIgPT0gbWVtYmVyKSwKICAgICAgICAgICAgICAgIG1lbWJlclNpbmNlOiBub3cKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIG1lbWJlckRhdGFbaWRdID0gZGF0YTsKICAgICAgICAgICAgaWYgKG1lbWJlciAhPSAwKSB7CiAgICAgICAgICAgICAgICBNZW1iZXJBZGRlZChtZW1iZXIsIGlkKTsKICAgICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGlkID0gbWVtYmVySWRbbWVtYmVyXTsKICAgICAgICAgICAgTWVtYmVyIG0gPSBtZW1iZXJzW2lkXTsKICAgICAgICAgICAgbS5hcHByb3ZlZCA9IHRydWU7CiAgICAgICAgICAgIG0ubmFtZSA9IG5hbWU7CiAgICAgICAgICAgIG0uc3VybmFtZSA9IHN1cm5hbWU7CiAgICAgICAgICAgIG0ucGF0cm9ueW1pYyA9IHBhdHJvbnltaWM7CiAgICAgICAgICAgIG0uYmlydGhEYXRlID0gYmlydGhEYXRlOwogICAgICAgICAgICBtLmJpcnRoUGxhY2UgPSBiaXJ0aFBsYWNlOwogICAgICAgICAgICBtLmF2YXRhckhhc2ggPSBhdmF0YXJIYXNoOwogICAgICAgICAgICBtLmF2YXRhcklEID0gYXZhdGFySUQ7CiAgICAgICAgICAgIG1lbWJlckRhdGFbaWRdID0gZGF0YTsKICAgICAgICAgICAgTWVtYmVyQ2hhbmdlZChtZW1iZXIsIGlkKTsKICAgICAgICB9CiAgICB9CgogICAgLyog0KTRg9C90LrRhtC40Y8g0L/QvtC70YPRh9C10L3QuNGPINC/0YDQuNCy0LDRgtC90L7Qs9C+INC60LvRjtGH0LAg0L/QviBJRCDRjtC30LXRgNCwICovCiAgICBmdW5jdGlvbiBnZXRQSyh1aW50IGlkKSBvbmx5b3duZXIgY29uc3RhbnQgcmV0dXJucyAoc3RyaW5nKSB7CiAgICAgICAgcmV0dXJuIHBrc1tpZF07CiAgICB9CgogICAgLyog0KTRg9C90LrRhtC40Y8g0L/QvtC70YPRh9C10L3QuNGPINC60L7Qu9C40YfQtdGB0YLQstCwINGO0LfQtdGA0L7QsiAqLwogICAgZnVuY3Rpb24gZ2V0TWVtYmVyQ291bnQoKSBjb25zdGFudCByZXR1cm5zICh1aW50KSB7CiAgICAgICAgcmV0dXJuIG1lbWJlcnMubGVuZ3RoIC0gMTsKICAgIH0KCiAgICAvKiDQpNGD0L3QutGG0LjRjyDQv9C+0LvRg9GH0LXQvdC40Y8g0Y7Qt9C10YDQsCDQv9C+IGlkCiAgICAg0LLQvtC30LLRgNCw0YnQsNC10YIg0LzQsNGB0YHQuNCyINC40Lcg0L/QvtC70LXQuSBb0LjQvNGPLCDRhNCw0LzQuNC70LjRjywg0L7RgtGH0LXRgdGC0LLQviwg0LTQsNGC0LBf0YDQvtC20LTQtdC90LjRjywg0YXRjdGIINCw0LLQsNGC0LDRgNCwLCBpZCDQsNCy0LDRgtCw0YDQsF0gKi8KICAgIGZ1bmN0aW9uIGdldE1lbWJlcih1aW50IGlkKSBjb25zdGFudCByZXR1cm5zICgKICAgICAgICBzdHJpbmcgbmFtZSwKICAgICAgICBzdHJpbmcgc3VybmFtZSwKICAgICAgICBzdHJpbmcgcGF0cm9ueW1pYywKICAgICAgICB1aW50IGJpcnRoRGF0ZSwKICAgICAgICBzdHJpbmcgYmlydGhQbGFjZSwKICAgICAgICBzdHJpbmcgYXZhdGFySGFzaCwKICAgICAgICB1aW50IGF2YXRhcklELAogICAgICAgIHN0cmluZyBkYXRhKSB7CiAgICAgICAgTWVtYmVyIG0gPSBtZW1iZXJzW2lkXTsKICAgICAgICBuYW1lID0gbS5uYW1lOwogICAgICAgIHN1cm5hbWUgPSBtLnN1cm5hbWU7CiAgICAgICAgcGF0cm9ueW1pYyA9IG0ucGF0cm9ueW1pYzsKICAgICAgICBiaXJ0aERhdGUgPSBtLmJpcnRoRGF0ZTsKICAgICAgICBiaXJ0aFBsYWNlID0gbS5iaXJ0aFBsYWNlOwogICAgICAgIGF2YXRhckhhc2ggPSBtLmF2YXRhckhhc2g7CiAgICAgICAgYXZhdGFySUQgPSBtLmF2YXRhcklEOwogICAgICAgIGRhdGEgPSBtZW1iZXJEYXRhW2lkXTsKICAgIH0KfQ=='.
	

]
