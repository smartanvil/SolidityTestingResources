Class {
	#name : #SRT400c969095ebb8b053956105458ff033e58fc025,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT400c969095ebb8b053956105458ff033e58fc025 >> base64 [
	^ 'LyoqCiAqIEB0aXRsZSBTYWZlTWF0aAogKiBAZGV2IE1hdGggb3BlcmF0aW9ucyB3aXRoIHNhZmV0eSBjaGVja3MgdGhhdCB0aHJvdyBvbiBlcnJvcgogKi8KbGlicmFyeSBTYWZlTWF0aCB7CiAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhICogYjsKICAgIGFzc2VydChhID09IDAgfHwgYyAvIGEgPT0gYik7CiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIGRpdih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSAvIGI7CiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgYXNzZXJ0KGMgPj0gYSk7CiAgICByZXR1cm4gYzsKICB9Cn0KCmNvbnRyYWN0IEVSQzIwIHsKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKTsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIG93bmVyLCBhZGRyZXNzIHNwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpOwogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgZnJvbSwgYWRkcmVzcyB0bywgdWludDI1NiB2YWx1ZSkgcmV0dXJucyAoYm9vbCk7CiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3Mgc3BlbmRlciwgdWludDI1NiB2YWx1ZSkgcmV0dXJucyAoYm9vbCk7CgogICAgLy8gRGVjbGFyZSBFdmVudHMKICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7CiAgICAKICAgIC8vIE1haW50YWluIHRvdGFsIHN1cHBseQogICAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7Cn0KCmNvbnRyYWN0IEVhZ2xlIGlzIEVSQzIwIHsKICAgIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwoKICAgIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgbmFtZSA9ICJFYWdsZSI7CiAgICBzdHJpbmcgcHVibGljIGNvbnN0YW50IHN5bWJvbCA9ICJFR0wiOwogICAgCiAgICAvLyAxOCBkZWNpbWFsIHBsYWNlcywgdGhlIHNhbWUgYXMgRVRILgogICAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgZGVjaW1hbHMgPSAxODsKCiAgICAvL1RvdGFsIG9mIDEwME0gdG9rZW5zCiAgICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCBpbml0U3VwcGx5ID0gMTAwICogMTAqKjI0OwoKICAgIC8vIE93bmVyIG9mIHRoaXMgY29udHJhY3QKICAgIGFkZHJlc3MgcHVibGljIG93bmVyOwoKICAgICAvLyBNYWludGFpbiBiYWxhbmNlIGluIGEgbWFwcGluZwogICAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpICBiYWxhbmNlczsKCiAgICAvLyBBbGxvd2FuY2VzIGluZGV4LTEgPSBPd25lciBhY2NvdW50ICAgaW5kZXgtMiA9IHNwZW5kZXIgYWNjb3VudAogICAgbWFwcGluZyhhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikpIGFsbG93YW5jZXM7CgogICAgLy8gRnVuY3Rpb25zIHdpdGggdGhpcyBtb2RpZmllciBjYW4gb25seSBiZSBleGVjdXRlZCBieSB0aGUgb3duZXIKICAgIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lcikgewogICAgICAgICAgICB0aHJvdzsKICAgICAgICB9CiAgICAgICAgXzsKICAgIH0KCiAgICBmdW5jdGlvbiBFYWdsZSgpIHsKICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgICAgICAgdG90YWxTdXBwbHkgPSBpbml0U3VwcGx5OwogICAgICAgIGJhbGFuY2VzW293bmVyXSA9IGluaXRTdXBwbHk7CiAgICB9CgogICAgLyoqCiAgICAqIEBkZXYgdHJhbnNmZXIgdG9rZW4gZm9yIGEgc3BlY2lmaWVkIGFkZHJlc3MKICAgICogQHBhcmFtIF90byBUaGUgYWRkcmVzcyB0byB0cmFuc2ZlciB0by4KICAgICogQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IHRvIGJlIHRyYW5zZmVycmVkLgogICAgKi8KICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgLy8gUHJldmVudCB0cmFuc2ZlciB0byAweDAgYWRkcmVzcwogICAgICAgIHJlcXVpcmUoX3RvICE9IDB4MCk7CiAgICAKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IGJhbGFuY2VzW21zZy5zZW5kZXJdLnN1YihfdmFsdWUpOwogICAgICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfdmFsdWUpOwogICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKCiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgLyoqCiAgICAqIEBkZXYgVHJhbnNmZXIgdG9rZW5zIGZyb20gb25lIGFkZHJlc3MgdG8gYW5vdGhlcgogICAgKiBAcGFyYW0gX2Zyb20gYWRkcmVzcyBUaGUgYWRkcmVzcyB3aGljaCB5b3Ugd2FudCB0byBzZW5kIHRva2VucyBmcm9tCiAgICAqIEBwYXJhbSBfdG8gYWRkcmVzcyBUaGUgYWRkcmVzcyB3aGljaCB5b3Ugd2FudCB0byB0cmFuc2ZlciB0bwogICAgKiBAcGFyYW0gX3ZhbHVlIHVpbnQyNTYgdGhlIGFtb3V0IG9mIHRva2VucyB0byBiZSB0cmFuc2ZlcmVkCiAgICAqLwogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCkgewogICAgCiAgICAgICAgaWYoX3ZhbHVlIDw9IDApIHJldHVybiBmYWxzZTsKCiAgICAgICAgaWYoYWxsb3dhbmNlc1tfZnJvbV1bbXNnLnNlbmRlcl0gPCBfdmFsdWUpIHJldHVybiBmYWxzZTsKCiAgICAgICAgaWYoYmFsYW5jZXNbX2Zyb21dIDwgX3ZhbHVlKSByZXR1cm4gZmFsc2U7CgogICAgICAgIGJhbGFuY2VzW19mcm9tXSA9IGJhbGFuY2VzW19mcm9tXS5zdWIoX3ZhbHVlKTsKICAgICAgICBiYWxhbmNlc1tfdG9dID0gYmFsYW5jZXNbX3RvXS5hZGQoX3ZhbHVlKTsKICAgICAgICBhbGxvd2FuY2VzW19mcm9tXVttc2cuc2VuZGVyXSA9IGFsbG93YW5jZXNbX2Zyb21dW21zZy5zZW5kZXJdLnN1YihfdmFsdWUpOwogICAgICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7CgogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIC8qKgogICAgKiBAZGV2IEdldHMgdGhlIGJhbGFuY2Ugb2YgdGhlIHNwZWNpZmllZCBhZGRyZXNzLgogICAgKiBAcGFyYW0gX293bmVyIFRoZSBhZGRyZXNzIHRvIHF1ZXJ5IHRoZSB0aGUgYmFsYW5jZSBvZi4KICAgICogQHJldHVybiBBbiB1aW50MjU2IHJlcHJlc2VudGluZyB0aGUgYW1vdW50IG93bmVkIGJ5IHRoZSBwYXNzZWQgYWRkcmVzcy4KICAgICovCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgewogICAgICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogICAgfQoKICAgIC8qKgogICAgKiBAZGV2IEFwcm92ZSB0aGUgcGFzc2VkIGFkZHJlc3MgdG8gc3BlbmQgdGhlIHNwZWNpZmllZCBhbW91bnQgb2YgdG9rZW5zIG9uIGJlaGFsZiBvZiBtc2cuc2VuZGVyLgogICAgKiBAcGFyYW0gX3NwZW5kZXIgVGhlIGFkZHJlc3Mgd2hpY2ggd2lsbCBzcGVuZCB0aGUgZnVuZHMuCiAgICAqIEBwYXJhbSBfdmFsdWUgVGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gYmUgc3BlbnQuCiAgICAqLwogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCkgewoKICAgICAgICByZXF1aXJlKChfdmFsdWUgPT0gMCkgfHwgKGFsbG93YW5jZXNbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID09IDApKTsKCiAgICAgICAgYWxsb3dhbmNlc1ttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CgogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwoKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICAvKioKICAgICogQGRldiBGdW5jdGlvbiB0byBjaGVjayB0aGUgYW1vdW50IG9mIHRva2VucyB0aGF0IGFuIG93bmVyIGFsbG93ZWQgdG8gYSBzcGVuZGVyLgogICAgKiBAcGFyYW0gX293bmVyIGFkZHJlc3MgVGhlIGFkZHJlc3Mgd2hpY2ggb3ducyB0aGUgZnVuZHMuCiAgICAqIEBwYXJhbSBfc3BlbmRlciBhZGRyZXNzIFRoZSBhZGRyZXNzIHdoaWNoIHdpbGwgc3BlbmQgdGhlIGZ1bmRzLgogICAgKiBAcmV0dXJuIEEgdWludDI1NiBzcGVjaWZpbmcgdGhlIGFtb3VudCBvZiB0b2tlbnMgc3RpbGwgYXZhaWxhYmxlIGZvciB0aGUgc3BlbmRlci4KICAgICovCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQgcmVtYWluaW5nKXsKICAgICAgICAvLyBSZXR1cm4gdGhlIGFsbG93YW5jZSBmb3IgX3NwZW5kZXIgYXBwcm92ZWQgYnkgX293bmVyCiAgICAgICAgcmV0dXJuIGFsbG93YW5jZXNbX293bmVyXVtfc3BlbmRlcl07CiAgICB9CgogICAgLy8gRmFsbGJhY2sgZnVuY3Rpb24gRG9lcyBub3QgYWNjZXB0IGV0aGVycwogICAgZnVuY3Rpb24oKSB7CiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiAtIGluIGVmZmVjdCBubyBvbmUgY2FuIHB1cmNoYXNlIHRoZSBjb2luCiAgICAgICAgYXNzZXJ0KHRydWUgPT0gZmFsc2UpOwogICAgfQogICAgCn0='.
	

]
