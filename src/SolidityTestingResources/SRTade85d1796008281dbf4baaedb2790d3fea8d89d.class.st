Class {
	#name : #SRTade85d1796008281dbf4baaedb2790d3fea8d89d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTade85d1796008281dbf4baaedb2790d3fea8d89d >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuNDsKCmNvbnRyYWN0IERlc3RpbmF0aW9uIHsKICAgIGZ1bmN0aW9uIHJlY292ZXIoYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8pIHJldHVybnMoYm9vbCk7Cn0KCmNvbnRyYWN0IFJlY292ZXJ5V2l0aFRlbmFudCB7CiAgICBldmVudCBSZWNvdmVyeSh1aW50IGluZGV4ZWQgbm9uY2UsIGFkZHJlc3MgaW5kZXhlZCBmcm9tLCBhZGRyZXNzIGluZGV4ZWQgdG8pOwogICAgZXZlbnQgU2V0dXAodWludCBpbmRleGVkIG5vbmNlLCBhZGRyZXNzIGluZGV4ZWQgdXNlcik7CiAgICAKICAgIC8vMTogdXNlciBub3QgZXhpc3RpbmcKICAgIC8vMjogY29uZmxpY3QsIHVzZXIgZXhpc3RzIGFscmVhZHkKICAgIC8vMzogc2lnbmF0dXJlIG5vdCBieSB0ZW5hbnQKICAgIC8vNDogbm9uY2Uvc2lnbmF0dXJlIHVzZWQgYmVmb3JlCiAgICAvLzU6IGNvbnRyYWN0IGNhbGwgZmFpbGVkCiAgICAvLzY6IG9yYWNsZSBhY2Nlc3MgZGVuaWVkCiAgICAvLzg6IHJlcXVlc3RlZCB1c2VyIG5vdCBmb3VuZAogICAgZXZlbnQgRXJyb3IodWludCBpbmRleGVkIG5vbmNlLCB1aW50IGNvZGUpOwogICAgCiAgICBzdHJ1Y3QgVXNlciB7CiAgICAgICAgYWRkcmVzcyBhZGRyOwogICAgfQogICAgCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQpIHVzZXJJbmRleDsKICAgIFVzZXJbXSBwdWJsaWMgdXNlcnM7CgogICAgYWRkcmVzcyBwdWJsaWMgb3JhY2xlOwogICAgYWRkcmVzcyBwdWJsaWMgdGVuYW50OwogICAgbWFwcGluZyh1aW50ID0+IGJvb2wpIG5vbmNlVXNlZDsKICAgIGFkZHJlc3MgcHVibGljIGNhbGxEZXN0aW5hdGlvbjsKCgogICAgbW9kaWZpZXIgb25seU9yYWNsZSgpIHsKICAgICAgICBpZiAobXNnLnNlbmRlciA9PSBvcmFjbGUpIHsKICAgICAgICAgICAgXzsKICAgICAgICB9CiAgICAgICAgRXJyb3IoMCwgNik7CiAgICB9CiAgICAKICAgIG1vZGlmaWVyIG5vRXRoZXIoKSB7CiAgICAgICAgaWYgKG1zZy52YWx1ZSA+IDApIHRocm93OwogICAgICAgIF87CiAgICB9CgogICAgZnVuY3Rpb24gUmVjb3ZlcnlXaXRoVGVuYW50KCkgewogICAgICAgIG9yYWNsZSA9IG1zZy5zZW5kZXI7CiAgICAgICAgdGVuYW50ID0gbXNnLnNlbmRlcjsKICAgICAgICB1c2Vycy5sZW5ndGgrKzsKICAgIH0KICAgIAogICAgLy8jIyMjIyMjIyMjIyMjIElOVEVSTkFMIEZVTkNUSU9OUwogICAgCiAgICBmdW5jdGlvbiBfY2hlY2tTaWduZWQoYnl0ZXMzMiBfaGFzaCwgdWludCBfbm9uY2UsIHVpbnQ4IF92LCBieXRlczMyIF9yLCBieXRlczMyIF9zKSBpbnRlcm5hbCByZXR1cm5zIChib29sKSB7CiAgICAgICAgYWRkcmVzcyByZWNvdmVyZWQgPSBlY3JlY292ZXIoX2hhc2gsIF92LCBfciwgX3MpOwoKICAgICAgICBpZiAodGVuYW50ICE9IHJlY292ZXJlZCkgewogICAgICAgICAgICBFcnJvcihfbm9uY2UsIDMpOwogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICAgIGlmIChub25jZVVzZWRbX25vbmNlXSkgewogICAgICAgICAgICBFcnJvcihfbm9uY2UsIDQpOwogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICAgIG5vbmNlVXNlZFtfbm9uY2VdID0gdHJ1ZTsgCiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgICAKICAgIAogICAgLy8jIyMjIyMjIyMjIyMjIFBVQkxJQyBGVU5DVElPTlMKICAgIAogICAgZnVuY3Rpb24gc2V0T3JhY2xlKGFkZHJlc3MgX25ld09yYWNsZSkgbm9FdGhlciBvbmx5T3JhY2xlIHsKICAgICAgICBvcmFjbGUgPSBfbmV3T3JhY2xlOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBjb25maWd1cmUoYWRkcmVzcyBfdGVuYW50LCBhZGRyZXNzIF9jYWxsRGVzdGluYXRpb24sIHVpbnQgX25vbmNlLCB1aW50OCBfdiwgYnl0ZXMzMiBfciwgYnl0ZXMzMiBfcykgbm9FdGhlciBvbmx5T3JhY2xlIHJldHVybnMgKGJvb2wpIHsKICAgICAgICBpZih0ZW5hbnQgIT0gb3JhY2xlICYmICFfY2hlY2tTaWduZWQoc2hhMyh0ZW5hbnQsIF9jYWxsRGVzdGluYXRpb24sIF9ub25jZSksIF9ub25jZSwgX3YsIF9yLCBfcykpCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB0ZW5hbnQgPSBfdGVuYW50OwogICAgICAgIGNhbGxEZXN0aW5hdGlvbiA9IF9jYWxsRGVzdGluYXRpb247CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgICAKICAgIAogICAgZnVuY3Rpb24gYWRkVXNlcihhZGRyZXNzIF91c2VyQWRkciwgdWludCBfbm9uY2UsIHVpbnQ4IF92LCBieXRlczMyIF9yLCBieXRlczMyIF9zKSBub0V0aGVyIG9ubHlPcmFjbGUgcmV0dXJucyAoYm9vbCkgewogICAgICAgIGlmKHVzZXJJbmRleFtfdXNlckFkZHJdID4gMCkgewogICAgICAgICAgICBFcnJvcihfbm9uY2UsIDIpOwogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICAgIGlmKCFfY2hlY2tTaWduZWQoc2hhMyhfdXNlckFkZHIsIF9ub25jZSksIF9ub25jZSwgX3YsIF9yLCBfcykpCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB1aW50IHBvc1VzZXIgPSB1c2Vycy5sZW5ndGgrKzsKICAgICAgICB1c2VySW5kZXhbX3VzZXJBZGRyXSA9IHBvc1VzZXI7CiAgICAgICAgdXNlcnNbcG9zVXNlcl0gPSBVc2VyKF91c2VyQWRkcik7CiAgICAgICAgU2V0dXAoX25vbmNlLCBfdXNlckFkZHIpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQogICAgCiAgICBmdW5jdGlvbiByZWNvdmVyVXNlcihhZGRyZXNzIF9vbGRBZGRyLCBhZGRyZXNzIF9uZXdBZGRyLCB1aW50IF9ub25jZSwgdWludDggX3YsIGJ5dGVzMzIgX3IsIGJ5dGVzMzIgX3MpIG5vRXRoZXIgb25seU9yYWNsZSByZXR1cm5zIChib29sKSB7CiAgICAgICAgdWludCB1c2VyUG9zID0gdXNlckluZGV4W19vbGRBZGRyXTsKICAgICAgICBpZiAodXNlclBvcyA9PSAwKSB7CiAgICAgICAgICAgIEVycm9yKF9ub25jZSwgMSk7IC8vdXNlciBkb2Vzbid0IGV4c2l0CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgaWYgKCFfY2hlY2tTaWduZWQoc2hhMyhfb2xkQWRkciwgX25ld0FkZHIsIF9ub25jZSksIF9ub25jZSwgX3YsIF9yLCBfcykpCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICBib29sIHJlc3VsdCA9IERlc3RpbmF0aW9uKGNhbGxEZXN0aW5hdGlvbikucmVjb3Zlcihfb2xkQWRkciwgX25ld0FkZHIpOwogICAgICAgIGlmIChyZXN1bHQpIHsKICAgICAgICAgICAgdXNlcnNbdXNlclBvc10uYWRkciA9IF9uZXdBZGRyOwogICAgICAgICAgICBkZWxldGUgdXNlckluZGV4W19vbGRBZGRyXTsKICAgICAgICAgICAgdXNlckluZGV4W19uZXdBZGRyXSA9IHVzZXJQb3M7CiAgICAgICAgICAgIFJlY292ZXJ5KF9ub25jZSwgX29sZEFkZHIsIF9uZXdBZGRyKTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfQogICAgICAgIEVycm9yKF9ub25jZSwgNSk7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQoKICAgIGZ1bmN0aW9uICgpIG5vRXRoZXIgewogICAgICAgIHRocm93OwogICAgfQogICAgCiAgICAvLyMjIyMjIyMjIyMjIyMgU1RBVElDIEZVTkNUSU9OUwogICAgCiAgICBmdW5jdGlvbiBpc1VzZXIoYWRkcmVzcyBfdXNlckFkZHIpIGNvbnN0YW50IHJldHVybnMgKGJvb2wpIHsKICAgICAgICByZXR1cm4gKHVzZXJJbmRleFtfdXNlckFkZHJdID4gMCk7CiAgICB9Cgp9'.
	

]
