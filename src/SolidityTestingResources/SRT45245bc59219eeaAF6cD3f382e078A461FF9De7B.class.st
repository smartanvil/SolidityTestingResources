Class {
	#name : #SRT45245bc59219eeaAF6cD3f382e078A461FF9De7B,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT45245bc59219eeaAF6cD3f382e078A461FF9De7B >> base64 [
	^ ''.
	

]
