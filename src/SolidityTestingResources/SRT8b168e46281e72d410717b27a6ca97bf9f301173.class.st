Class {
	#name : #SRT8b168e46281e72d410717b27a6ca97bf9f301173,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT8b168e46281e72d410717b27a6ca97bf9f301173 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTM7CgovKgoKTElOSyBmdW5kcyBwb29sCj09PT09PT09PT09PT09PT09PT09PT09PQoKT3JpZ2luYWwgYnk6IC91L0NpbnRpeApNb2RpZmllZCBieTogbW9vbmxhbWJvcwoKKi8KCi8vIEVSQzIwIEludGVyZmFjZTogaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL0VJUHMvaXNzdWVzLzIwCmNvbnRyYWN0IEVSQzIwIHsKICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpOwp9Cgpjb250cmFjdCBMSU5LRnVuZCB7CiAgLy8gU3RvcmUgdGhlIGFtb3VudCBvZiBFVEggZGVwb3NpdGVkIGJ5IGVhY2ggYWNjb3VudC4KICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBiYWxhbmNlczsKICAKICAvLyBUcmFjayB3aGV0aGVyIHRoZSBjb250cmFjdCBoYXMgYm91Z2h0IHRoZSB0b2tlbnMgeWV0LgogIGJvb2wgcHVibGljIGJvdWdodF90b2tlbnM7CiAgCiAgLy8gUmVjb3JkIEVUSCB2YWx1ZSBvZiB0b2tlbnMgY3VycmVudGx5IGhlbGQgYnkgY29udHJhY3QuCiAgdWludDI1NiBwdWJsaWMgY29udHJhY3RfZXRoX3ZhbHVlOwogIAogIC8vIFRoZSBtaW5pbXVtIGFtb3VudCBvZiBFVEggdGhhdCBtdXN0IGJlIGRlcG9zaXRlZCBiZWZvcmUgdGhlIGJ1eS1pbiBjYW4gYmUgcGVyZm9ybWVkLgogIC8vIEluIHRoaXMgc3BlY2lhbCBjYXNlLCB0aGUgbWluaW11bSBoYXMgYWxyZWFkeSBiZWVuIG1ldCwgaGVuY2UgYSAxIEVUSCBtaW5pbXVtLgogIHVpbnQyNTYgY29uc3RhbnQgcHVibGljIG1pbl9yZXF1aXJlZF9hbW91bnQgPSAxIGV0aGVyOwogIAogIC8vIFRoZSBtYXhpbXVtIGFtb3VudCBvZiBFVEggdGhhdCBjYW4gYmUgZGVwb3NpdGVkIGludG8gdGhlIGNvbnRyYWN0LgogIC8vIFRoZSBvd25lciBpbiBxdWVzdGlvbiB3YXMgYWxsb3dlZCAxMDAwIEVUSCwgYnV0IDMwMCBoYXMgYWxyZWFkeSBiZWVuCiAgLy8gY29udHJpYnV0ZWQsIGxlYXZpbmcgb3BlbiBhbm90aGVyIDcwMCBFVEggZm9yIHRoaXMgY29udHJhY3QgdG8gdGFrZS4KICB1aW50MjU2IGNvbnN0YW50IHB1YmxpYyBtYXhfcmFpc2VkX2Ftb3VudCA9IDcwMCBldGhlcjsKICAKICAvLyBUaGUgZmlyc3QgYmxvY2sgYWZ0ZXIgd2hpY2ggYnV5LWluIGlzIGFsbG93ZWQuIFNldCBpbiB0aGUgY29udHJhY3QgY29uc3RydWN0b3IuCiAgdWludDI1NiBwdWJsaWMgbWluX2J1eV9ibG9jazsKICAKICAvLyBUaGUgZmlyc3QgYmxvY2sgYWZ0ZXIgd2hpY2ggYSByZWZ1bmQgaXMgYWxsb3dlZC4gU2V0IGluIHRoZSBjb250cmFjdCBjb25zdHJ1Y3Rvci4KICB1aW50MjU2IHB1YmxpYyBtaW5fcmVmdW5kX2Jsb2NrOwogIAogIC8vIFRoZSBjcm93ZHNhbGUgYWRkcmVzcy4gQWRkcmVzcyBjYW4gYmUgdmVyaWZpZWQgYXQ6IGh0dHBzOi8vbGluay5zbWFydGNvbnRyYWN0LmNvbS9wcmVzYWxlcy8zOWViMmIzNC0yZGJmLTQxMDQtODA3ZC0xMmI5ZTMxNzljYmEKICBhZGRyZXNzIGNvbnN0YW50IHB1YmxpYyBzYWxlID0gMHg3MDkzMTI4NjEyYTAyZTMyRjFDMWFhNDRjQ0Q3NDExZDg0RUUwOUFjOwogIAogIC8vIFRoZSBjb250cmFjdCBjcmVhdG9yLiBVc2VkIHRvIGZpbmFsaXplIHRoZSBidXlpbmcuCiAgYWRkcmVzcyBjb25zdGFudCBwdWJsaWMgY3JlYXRvciA9IDB4MGIxMUM3YWNiNjQ3ZUNhMTFkNTEwZUVjNGZiMGMxN0JmY2NkNjQ5ODsKICAKICAvLyBDb25zdHJ1Y3Rvci4gCiAgZnVuY3Rpb24gTElOS0Z1bmQoKSB7CiAgICAvLyBCdXktaW4gYWxsb3dlZCAzNDU2IGJsb2NrcyAoYXBwcm94LiAyNCBob3VycykgYWZ0ZXIgdGhlIGNvbnRyYWN0IGlzIGRlcGxveWVkLgogICAgbWluX2J1eV9ibG9jayA9IGJsb2NrLm51bWJlciArIDM0NTY7CiAgICAKICAgIC8vIEVUSCByZWZ1bmQgYWxsb3dlZCA4NjQwMDAgYmxvY2tzIChhcHByb3guIDI0IGRheXMpIGFmdGVyIHRoZSBjb250cmFjdCBpcyBkZXBsb3llZC4KICAgIG1pbl9yZWZ1bmRfYmxvY2sgPSBibG9jay5udW1iZXIgKyA4NjQwMDA7CiAgfQogIAogIC8vIEFsbG93cyBhbnkgdXNlciB0byB3aXRoZHJhdyBoaXMgdG9rZW5zLgogIC8vIFRha2VzIHRoZSB0b2tlbidzIEVSQzIwIGFkZHJlc3MgYXMgYXJndW1lbnQgYXMgaXQgaXMgdW5rbm93biBhdCB0aGUgdGltZSBvZiBjb250cmFjdCBkZXBsb3ltZW50LgogIGZ1bmN0aW9uIHBlcmZvcm1fd2l0aGRyYXcoYWRkcmVzcyB0b2tlbkFkZHJlc3MpIHsKICAgIC8vIERpc2FsbG93IHdpdGhkcmF3IGlmIHRva2VucyBoYXZlbid0IGJlZW4gYm91Z2h0IHlldC4KICAgIGlmICghYm91Z2h0X3Rva2VucykgdGhyb3c7CiAgICAKICAgIC8vIFJldHJpZXZlIGN1cnJlbnQgdG9rZW4gYmFsYW5jZSBvZiBjb250cmFjdC4KICAgIEVSQzIwIHRva2VuID0gRVJDMjAodG9rZW5BZGRyZXNzKTsKICAgIHVpbnQyNTYgY29udHJhY3RfdG9rZW5fYmFsYW5jZSA9IHRva2VuLmJhbGFuY2VPZihhZGRyZXNzKHRoaXMpKTsKICAgICAgCiAgICAvLyBEaXNhbGxvdyB0b2tlbiB3aXRoZHJhd2FscyBpZiB0aGVyZSBhcmUgbm8gdG9rZW5zIHRvIHdpdGhkcmF3LgogICAgaWYgKGNvbnRyYWN0X3Rva2VuX2JhbGFuY2UgPT0gMCkgdGhyb3c7CiAgICAgIAogICAgLy8gU3RvcmUgdGhlIHVzZXIncyB0b2tlbiBiYWxhbmNlIGluIGEgdGVtcG9yYXJ5IHZhcmlhYmxlLgogICAgdWludDI1NiB0b2tlbnNfdG9fd2l0aGRyYXcgPSAoYmFsYW5jZXNbbXNnLnNlbmRlcl0gKiBjb250cmFjdF90b2tlbl9iYWxhbmNlKSAvIGNvbnRyYWN0X2V0aF92YWx1ZTsKICAgICAgCiAgICAvLyBVcGRhdGUgdGhlIHZhbHVlIG9mIHRva2VucyBjdXJyZW50bHkgaGVsZCBieSB0aGUgY29udHJhY3QuCiAgICBjb250cmFjdF9ldGhfdmFsdWUgLT0gYmFsYW5jZXNbbXNnLnNlbmRlcl07CiAgICAgIAogICAgLy8gVXBkYXRlIHRoZSB1c2VyJ3MgYmFsYW5jZSBwcmlvciB0byBzZW5kaW5nIHRvIHByZXZlbnQgcmVjdXJzaXZlIGNhbGwuCiAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IDA7CgogICAgLy8gU2VuZCB0aGUgZnVuZHMuICBUaHJvd3Mgb24gZmFpbHVyZSB0byBwcmV2ZW50IGxvc3Mgb2YgZnVuZHMuCiAgICBpZighdG9rZW4udHJhbnNmZXIobXNnLnNlbmRlciwgdG9rZW5zX3RvX3dpdGhkcmF3KSkgdGhyb3c7CiAgfQogIAogIC8vIEFsbG93cyBhbnkgdXNlciB0byBnZXQgaGlzIGV0aCByZWZ1bmRlZCBiZWZvcmUgdGhlIHB1cmNoYXNlIGlzIG1hZGUgb3IgYWZ0ZXIgYXBwcm94LiAyMCBkYXlzIGluIGNhc2UgdGhlIGRldnMgcmVmdW5kIHRoZSBldGguCiAgZnVuY3Rpb24gcmVmdW5kX21lKCkgewogICAgaWYgKCFib3VnaHRfdG9rZW5zKSB7CiAgICAgIC8vIE9ubHkgYWxsb3cgcmVmdW5kcyB3aGVuIHRoZSB0b2tlbnMgaGF2ZSBiZWVuIGJvdWdodCBpZiB0aGUgbWluaW11bSByZWZ1bmQgYmxvY2sgaGFzIGJlZW4gcmVhY2hlZC4KICAgICAgaWYgKGJsb2NrLm51bWJlciA8IG1pbl9yZWZ1bmRfYmxvY2spIHRocm93OwogICAgfQogICAgCiAgICAvLyBTdG9yZSB0aGUgdXNlcidzIGJhbGFuY2UgcHJpb3IgdG8gd2l0aGRyYXdhbCBpbiBhIHRlbXBvcmFyeSB2YXJpYWJsZS4KICAgIHVpbnQyNTYgZXRoX3RvX3dpdGhkcmF3ID0gYmFsYW5jZXNbbXNnLnNlbmRlcl07CiAgICAgIAogICAgLy8gVXBkYXRlIHRoZSB1c2VyJ3MgYmFsYW5jZSBwcmlvciB0byBzZW5kaW5nIEVUSCB0byBwcmV2ZW50IHJlY3Vyc2l2ZSBjYWxsLgogICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSAwOwogICAgICAKICAgIC8vIFJldHVybiB0aGUgdXNlcidzIGZ1bmRzLiAgVGhyb3dzIG9uIGZhaWx1cmUgdG8gcHJldmVudCBsb3NzIG9mIGZ1bmRzLgogICAgbXNnLnNlbmRlci50cmFuc2ZlcihldGhfdG9fd2l0aGRyYXcpOwogIH0KICAKICAvLyBCdXkgdGhlIHRva2Vucy4gU2VuZHMgRVRIIHRvIHRoZSBwcmVzYWxlIHdhbGxldCBhbmQgcmVjb3JkcyB0aGUgRVRIIGFtb3VudCBoZWxkIGluIHRoZSBjb250cmFjdC4KICBmdW5jdGlvbiBidXlfdGhlX3Rva2VucygpIHsKICAgIC8vIFZlcmlmeSBpdCdzIHRoZSBjcmVhdG9yIGNhbGxpbmcuCglpZiAobXNnLnNlbmRlciAhPSBjcmVhdG9yKSB0aHJvdzsKCQogICAgLy8gU2hvcnQgY2lyY3VpdCB0byBzYXZlIGdhcyBpZiB0aGUgY29udHJhY3QgaGFzIGFscmVhZHkgYm91Z2h0IHRva2Vucy4KICAgIGlmIChib3VnaHRfdG9rZW5zKSByZXR1cm47CiAgICAKICAgIC8vIFRocm93IGlmIHRoZSBjb250cmFjdCBiYWxhbmNlIGlzIGxlc3MgdGhhbiB0aGUgbWluaW11bSByZXF1aXJlZCBhbW91bnQKICAgIGlmICh0aGlzLmJhbGFuY2UgPCBtaW5fcmVxdWlyZWRfYW1vdW50KSB0aHJvdzsKICAgIAogICAgLy8gVGhyb3cgaWYgdGhlIG1pbmltdW0gYnV5LWluIGJsb2NrIGhhc24ndCBiZWVuIHJlYWNoZWQKICAgIGlmIChibG9jay5udW1iZXIgPCBtaW5fYnV5X2Jsb2NrKSB0aHJvdzsKICAgIAogICAgLy8gUmVjb3JkIHRoYXQgdGhlIGNvbnRyYWN0IGhhcyBib3VnaHQgdGhlIHRva2Vucy4KICAgIGJvdWdodF90b2tlbnMgPSB0cnVlOwogICAgCiAgICAvLyBSZWNvcmQgdGhlIGFtb3VudCBvZiBFVEggc2VudCBhcyB0aGUgY29udHJhY3QncyBjdXJyZW50IHZhbHVlLgogICAgY29udHJhY3RfZXRoX3ZhbHVlID0gdGhpcy5iYWxhbmNlOwoKICAgIC8vIFRyYW5zZmVyIGFsbCB0aGUgZnVuZHMgdG8gdGhlIGNyb3dkc2FsZSBhZGRyZXNzLgogICAgY3JlYXRvci50cmFuc2Zlcihjb250cmFjdF9ldGhfdmFsdWUpOwogIH0KICAKICAvLyBBIGhlbHBlciBmdW5jdGlvbiBmb3IgdGhlIGRlZmF1bHQgZnVuY3Rpb24sIGFsbG93aW5nIGNvbnRyYWN0cyB0byBpbnRlcmFjdC4KICBmdW5jdGlvbiBkZWZhdWx0X2hlbHBlcigpIHBheWFibGUgewogICAgLy8gVGhyb3cgaWYgdGhlIGJhbGFuY2UgaXMgbGFyZ2VyIHRoYW4gdGhlIG1heGltdW0gYWxsb3dlZCBhbW91bnQuCiAgICBpZiAodGhpcy5iYWxhbmNlID4gbWF4X3JhaXNlZF9hbW91bnQpIHRocm93OwogICAgCiAgICAvLyBVcGRhdGUgcmVjb3JkcyBvZiBkZXBvc2l0ZWQgRVRIIHRvIGluY2x1ZGUgdGhlIHJlY2VpdmVkIGFtb3VudCBidXQgb25seSBpZiB0aGUgYnV5LWluIGhhc24ndCBiZWVuIGRvbmUgeWV0LgogICAgLy8gVGhpcyB3aWxsIGhhbmRsZSBhbiBldmVudHVhbCByZWZ1bmQgZnJvbSB0aGUgZGV2cyB3aGlsZSBkaXNhbGxvd2luZyBidXktaW5zIGFmdGVyIHRoZSBkZWFkbGluZS4KICAgIGlmICghYm91Z2h0X3Rva2VucykgewogICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSArPSBtc2cudmFsdWU7CiAgICB9CiAgfQogIAogIC8vIERlZmF1bHQgZnVuY3Rpb24uICBDYWxsZWQgd2hlbiBhIHVzZXIgc2VuZHMgRVRIIHRvIHRoZSBjb250cmFjdC4KICBmdW5jdGlvbiAoKSBwYXlhYmxlIHsKICAgIC8vIERlbGVnYXRlIHRvIHRoZSBoZWxwZXIgZnVuY3Rpb24uCiAgICBkZWZhdWx0X2hlbHBlcigpOwogIH0KfQ=='.
	

]
