Class {
	#name : #SRT3ca53621001e34786d63311691ace2203cab61e8,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT3ca53621001e34786d63311691ace2203cab61e8 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgovKgogIENvcHlyaWdodCAyMDE3LCBBbnRvbiBFZ29yb3YgKE1vdGhlcnNoaXAgRm91bmRhdGlvbikKICBDb3B5cmlnaHQgMjAxNywgQW4gSG9hbmcgUGhhbiBOZ28gKE1vdGhlcnNoaXAgRm91bmRhdGlvbikKCiAgVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkKICBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieQogIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yCiAgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi4KCiAgVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsCiAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YKICBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlCiAgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4KCiAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UKICBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi4KKi8KCi8vIEZpbGU6IGNvbnRyYWN0cy9pbnRlcmZhY2UvQ29udHJvbGxlZC5zb2wKCmNvbnRyYWN0IENvbnRyb2xsZWQgewogIC8vLyBAbm90aWNlIFRoZSBhZGRyZXNzIG9mIHRoZSBjb250cm9sbGVyIGlzIHRoZSBvbmx5IGFkZHJlc3MgdGhhdCBjYW4gY2FsbAogIC8vLyAgYSBmdW5jdGlvbiB3aXRoIHRoaXMgbW9kaWZpZXIKICBtb2RpZmllciBvbmx5Q29udHJvbGxlciB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gY29udHJvbGxlcik7CiAgICBfOwogIH0KCiAgYWRkcmVzcyBwdWJsaWMgY29udHJvbGxlcjsKCiAgZnVuY3Rpb24gQ29udHJvbGxlZCgpIHB1YmxpYyB7IGNvbnRyb2xsZXIgPSBtc2cuc2VuZGVyOyB9CgogIC8vLyBAbm90aWNlIENoYW5nZXMgdGhlIGNvbnRyb2xsZXIgb2YgdGhlIGNvbnRyYWN0CiAgLy8vIEBwYXJhbSBfbmV3Q29udHJvbGxlciBUaGUgbmV3IGNvbnRyb2xsZXIgb2YgdGhlIGNvbnRyYWN0CiAgZnVuY3Rpb24gY2hhbmdlQ29udHJvbGxlcihhZGRyZXNzIF9uZXdDb250cm9sbGVyKSBwdWJsaWMgb25seUNvbnRyb2xsZXIgewogICAgY29udHJvbGxlciA9IF9uZXdDb250cm9sbGVyOwogIH0KfQoKLy8gRmlsZTogY29udHJhY3RzL2ludGVyZmFjZS9CdXJuYWJsZS5zb2wKCi8vLyBAZGV2IEJ1cm5hYmxlIGludHJvZHVjZXMgYSBidXJuZXIgcm9sZSwgd2hpY2ggY291bGQgYmUgdXNlZCB0byBkZXN0cm95Ci8vLyAgdG9rZW5zLiBUaGUgYnVybmVyIGFkZHJlc3MgY291bGQgYmUgY2hhbmdlZCBieSBoaW1zZWxmLgpjb250cmFjdCBCdXJuYWJsZSBpcyBDb250cm9sbGVkIHsKICBhZGRyZXNzIHB1YmxpYyBidXJuZXI7CgogIC8vLyBAbm90aWNlIFRoZSBmdW5jdGlvbiB3aXRoIHRoaXMgbW9kaWZpZXIgY291bGQgYmUgY2FsbGVkIGJ5IGEgY29udHJvbGxlcgogIC8vLyBhcyB3ZWxsIGFzIGJ5IGEgYnVybmVyLiBCdXQgYnVybmVyIGNvdWxkIHVzZSB0aGUgb25sdCBoaXMvaGVyIGFkZHJlc3MgYXMKICAvLy8gYSB0YXJnZXQuCiAgbW9kaWZpZXIgb25seUNvbnRyb2xsZXJPckJ1cm5lcihhZGRyZXNzIHRhcmdldCkgewogICAgYXNzZXJ0KG1zZy5zZW5kZXIgPT0gY29udHJvbGxlciB8fCAobXNnLnNlbmRlciA9PSBidXJuZXIgJiYgbXNnLnNlbmRlciA9PSB0YXJnZXQpKTsKICAgIF87CiAgfQoKICBtb2RpZmllciBvbmx5QnVybmVyIHsKICAgIGFzc2VydChtc2cuc2VuZGVyID09IGJ1cm5lcik7CiAgICBfOwogIH0KCiAgLy8vIENvbnRyYWN0IGNyZWF0b3IgYmVjb21lIGEgYnVybmVyIGJ5IGRlZmF1bHQKICBmdW5jdGlvbiBCdXJuYWJsZSgpIHB1YmxpYyB7IGJ1cm5lciA9IG1zZy5zZW5kZXI7fQoKICAvLy8gQG5vdGljZSBDaGFuZ2UgYSBidXJuZXIgYWRkcmVzcwogIC8vLyBAcGFyYW0gX25ld0J1cm5lciBUaGUgbmV3IGJ1cm5lciBhZGRyZXNzCiAgZnVuY3Rpb24gY2hhbmdlQnVybmVyKGFkZHJlc3MgX25ld0J1cm5lcikgcHVibGljIG9ubHlCdXJuZXIgewogICAgYnVybmVyID0gX25ld0J1cm5lcjsKICB9Cn0KCi8vIEZpbGU6IGNvbnRyYWN0cy9pbnRlcmZhY2UvRVJDMjBUb2tlbi5zb2wKCi8vIEBkZXYgQWJzdHJhY3QgY29udHJhY3QgZm9yIHRoZSBmdWxsIEVSQyAyMCBUb2tlbiBzdGFuZGFyZAovLyAgaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL0VJUHMvaXNzdWVzLzIwCmNvbnRyYWN0IEVSQzIwVG9rZW4gewogIC8vLyB0b3RhbCBhbW91bnQgb2YgdG9rZW5zCiAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpOwoKICAvLy8gQHBhcmFtIF9vd25lciBUaGUgYWRkcmVzcyBmcm9tIHdoaWNoIHRoZSBiYWxhbmNlIHdpbGwgYmUgcmV0cmlldmVkCiAgLy8vIEByZXR1cm4gVGhlIGJhbGFuY2UKICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSk7CgogIC8vLyBAbm90aWNlIHNlbmQgYF92YWx1ZWAgdG9rZW4gdG8gYF90b2AgZnJvbSBgbXNnLnNlbmRlcmAKICAvLy8gQHBhcmFtIF90byBUaGUgYWRkcmVzcyBvZiB0aGUgcmVjaXBpZW50CiAgLy8vIEBwYXJhbSBfdmFsdWUgVGhlIGFtb3VudCBvZiB0b2tlbiB0byBiZSB0cmFuc2ZlcnJlZAogIC8vLyBAcmV0dXJuIFdoZXRoZXIgdGhlIHRyYW5zZmVyIHdhcyBzdWNjZXNzZnVsIG9yIG5vdAogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CgogIC8vLyBAbm90aWNlIHNlbmQgYF92YWx1ZWAgdG9rZW4gdG8gYF90b2AgZnJvbSBgX2Zyb21gIG9uIHRoZSBjb25kaXRpb24gaXQgaXMgYXBwcm92ZWQgYnkgYF9mcm9tYAogIC8vLyBAcGFyYW0gX2Zyb20gVGhlIGFkZHJlc3Mgb2YgdGhlIHNlbmRlcgogIC8vLyBAcGFyYW0gX3RvIFRoZSBhZGRyZXNzIG9mIHRoZSByZWNpcGllbnQKICAvLy8gQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IG9mIHRva2VuIHRvIGJlIHRyYW5zZmVycmVkCiAgLy8vIEByZXR1cm4gV2hldGhlciB0aGUgdHJhbnNmZXIgd2FzIHN1Y2Nlc3NmdWwgb3Igbm90CiAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CgogIC8vLyBAbm90aWNlIGBtc2cuc2VuZGVyYCBhcHByb3ZlcyBgX3NwZW5kZXJgIHRvIHNwZW5kIGBfdmFsdWVgIHRva2VucwogIC8vLyBAcGFyYW0gX3NwZW5kZXIgVGhlIGFkZHJlc3Mgb2YgdGhlIGFjY291bnQgYWJsZSB0byB0cmFuc2ZlciB0aGUgdG9rZW5zCiAgLy8vIEBwYXJhbSBfdmFsdWUgVGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gYmUgYXBwcm92ZWQgZm9yIHRyYW5zZmVyCiAgLy8vIEByZXR1cm4gV2hldGhlciB0aGUgYXBwcm92YWwgd2FzIHN1Y2Nlc3NmdWwgb3Igbm90CiAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CgogIC8vLyBAcGFyYW0gX293bmVyIFRoZSBhZGRyZXNzIG9mIHRoZSBhY2NvdW50IG93bmluZyB0b2tlbnMKICAvLy8gQHBhcmFtIF9zcGVuZGVyIFRoZSBhZGRyZXNzIG9mIHRoZSBhY2NvdW50IGFibGUgdG8gdHJhbnNmZXIgdGhlIHRva2VucwogIC8vLyBAcmV0dXJuIEFtb3VudCBvZiByZW1haW5pbmcgdG9rZW5zIGFsbG93ZWQgdG8gc3BlbnQKICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKTsKCiAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50MjU2IF92YWx1ZSk7CiAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7Cn0KCi8vIEZpbGU6IGNvbnRyYWN0cy9pbnRlcmZhY2UvTWluaU1lVG9rZW5JLnNvbAoKLy8vIEBkZXYgTWluaU1lVG9rZW4gaW50ZXJmYWNlLiBVc2luZyB0aGlzIGludGVyZmFjZSBpbnN0ZWFkIG9mIHdob2xlIGNvbnRyYWN0cwovLy8gIHdpbGwgcmVkdWNlIGNvbnRyYWN0IHNpc2UgYW5kIGdhcyBjb3N0CmNvbnRyYWN0IE1pbmlNZVRva2VuSSBpcyBFUkMyMFRva2VuLCBCdXJuYWJsZSB7CgogIHN0cmluZyBwdWJsaWMgbmFtZTsgICAgICAgICAgICAgICAgLy9UaGUgVG9rZW4ncyBuYW1lOiBlLmcuIERpZ2l4REFPIFRva2VucwogIHVpbnQ4IHB1YmxpYyBkZWNpbWFsczsgICAgICAgICAgICAgLy9OdW1iZXIgb2YgZGVjaW1hbHMgb2YgdGhlIHNtYWxsZXN0IHVuaXQKICBzdHJpbmcgcHVibGljIHN5bWJvbDsgICAgICAgICAgICAgIC8vQW4gaWRlbnRpZmllcjogZS5nLiBSRVAKICBzdHJpbmcgcHVibGljIHZlcnNpb24gPSAiTU1UXzAuMSI7IC8vQW4gYXJiaXRyYXJ5IHZlcnNpb25pbmcgc2NoZW1lCgovLy8vLy8vLy8vLy8vLy8vLy8vCi8vIEVSQzIwIE1ldGhvZHMKLy8vLy8vLy8vLy8vLy8vLy8vLwoKICAvLy8gQG5vdGljZSBgbXNnLnNlbmRlcmAgYXBwcm92ZXMgYF9zcGVuZGVyYCB0byBzZW5kIGBfYW1vdW50YCB0b2tlbnMgb24KICAvLy8gIGl0cyBiZWhhbGYsIGFuZCB0aGVuIGEgZnVuY3Rpb24gaXMgdHJpZ2dlcmVkIGluIHRoZSBjb250cmFjdCB0aGF0IGlzCiAgLy8vICBiZWluZyBhcHByb3ZlZCwgYF9zcGVuZGVyYC4gVGhpcyBhbGxvd3MgdXNlcnMgdG8gdXNlIHRoZWlyIHRva2VucyB0bwogIC8vLyAgaW50ZXJhY3Qgd2l0aCBjb250cmFjdHMgaW4gb25lIGZ1bmN0aW9uIGNhbGwgaW5zdGVhZCBvZiB0d28KICAvLy8gQHBhcmFtIF9zcGVuZGVyIFRoZSBhZGRyZXNzIG9mIHRoZSBjb250cmFjdCBhYmxlIHRvIHRyYW5zZmVyIHRoZSB0b2tlbnMKICAvLy8gQHBhcmFtIF9hbW91bnQgVGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gYmUgYXBwcm92ZWQgZm9yIHRyYW5zZmVyCiAgLy8vIEByZXR1cm4gVHJ1ZSBpZiB0aGUgZnVuY3Rpb24gY2FsbCB3YXMgc3VjY2Vzc2Z1bAogIGZ1bmN0aW9uIGFwcHJvdmVBbmRDYWxsKAogICAgYWRkcmVzcyBfc3BlbmRlciwKICAgIHVpbnQyNTYgX2Ftb3VudCwKICAgIGJ5dGVzIF9leHRyYURhdGEpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwoKLy8vLy8vLy8vLy8vLy8vLwovLyBRdWVyeSBiYWxhbmNlIGFuZCB0b3RhbFN1cHBseSBpbiBIaXN0b3J5Ci8vLy8vLy8vLy8vLy8vLy8KCiAgLy8vIEBkZXYgUXVlcmllcyB0aGUgYmFsYW5jZSBvZiBgX293bmVyYCBhdCBhIHNwZWNpZmljIGBfYmxvY2tOdW1iZXJgCiAgLy8vIEBwYXJhbSBfb3duZXIgVGhlIGFkZHJlc3MgZnJvbSB3aGljaCB0aGUgYmFsYW5jZSB3aWxsIGJlIHJldHJpZXZlZAogIC8vLyBAcGFyYW0gX2Jsb2NrTnVtYmVyIFRoZSBibG9jayBudW1iZXIgd2hlbiB0aGUgYmFsYW5jZSBpcyBxdWVyaWVkCiAgLy8vIEByZXR1cm4gVGhlIGJhbGFuY2UgYXQgYF9ibG9ja051bWJlcmAKICBmdW5jdGlvbiBiYWxhbmNlT2ZBdCgKICAgIGFkZHJlc3MgX293bmVyLAogICAgdWludCBfYmxvY2tOdW1iZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50KTsKCiAgLy8vIEBub3RpY2UgVG90YWwgYW1vdW50IG9mIHRva2VucyBhdCBhIHNwZWNpZmljIGBfYmxvY2tOdW1iZXJgLgogIC8vLyBAcGFyYW0gX2Jsb2NrTnVtYmVyIFRoZSBibG9jayBudW1iZXIgd2hlbiB0aGUgdG90YWxTdXBwbHkgaXMgcXVlcmllZAogIC8vLyBAcmV0dXJuIFRoZSB0b3RhbCBhbW91bnQgb2YgdG9rZW5zIGF0IGBfYmxvY2tOdW1iZXJgCiAgZnVuY3Rpb24gdG90YWxTdXBwbHlBdCh1aW50IF9ibG9ja051bWJlcikgcHVibGljIGNvbnN0YW50IHJldHVybnModWludCk7CgovLy8vLy8vLy8vLy8vLy8vCi8vIEdlbmVyYXRlIGFuZCBkZXN0cm95IHRva2VucwovLy8vLy8vLy8vLy8vLy8vCgogIC8vLyBAbm90aWNlIEdlbmVyYXRlcyBgX2Ftb3VudGAgdG9rZW5zIHRoYXQgYXJlIGFzc2lnbmVkIHRvIGBfb3duZXJgCiAgLy8vIEBwYXJhbSBfb3duZXIgVGhlIGFkZHJlc3MgdGhhdCB3aWxsIGJlIGFzc2lnbmVkIHRoZSBuZXcgdG9rZW5zCiAgLy8vIEBwYXJhbSBfYW1vdW50IFRoZSBxdWFudGl0eSBvZiB0b2tlbnMgZ2VuZXJhdGVkCiAgLy8vIEByZXR1cm4gVHJ1ZSBpZiB0aGUgdG9rZW5zIGFyZSBnZW5lcmF0ZWQgY29ycmVjdGx5CiAgZnVuY3Rpb24gbWludFRva2VucyhhZGRyZXNzIF9vd25lciwgdWludCBfYW1vdW50KSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CgoKICAvLy8gQG5vdGljZSBCdXJucyBgX2Ftb3VudGAgdG9rZW5zIGZyb20gYF9vd25lcmAKICAvLy8gQHBhcmFtIF9vd25lciBUaGUgYWRkcmVzcyB0aGF0IHdpbGwgbG9zZSB0aGUgdG9rZW5zCiAgLy8vIEBwYXJhbSBfYW1vdW50IFRoZSBxdWFudGl0eSBvZiB0b2tlbnMgdG8gYnVybgogIC8vLyBAcmV0dXJuIFRydWUgaWYgdGhlIHRva2VucyBhcmUgYnVybmVkIGNvcnJlY3RseQogIGZ1bmN0aW9uIGRlc3Ryb3lUb2tlbnMoYWRkcmVzcyBfb3duZXIsIHVpbnQgX2Ftb3VudCkgcHVibGljIHJldHVybnMgKGJvb2wpOwoKLy8vLy8vLy8vLy8vLy8vLy8KLy8gRmluYWxpemUgCi8vLy8vLy8vLy8vLy8vLy8KICBmdW5jdGlvbiBmaW5hbGl6ZSgpIHB1YmxpYzsKCi8vLy8vLy8vLy8KLy8gU2FmZXR5IE1ldGhvZHMKLy8vLy8vLy8vLwoKICAvLy8gQG5vdGljZSBUaGlzIG1ldGhvZCBjYW4gYmUgdXNlZCBieSB0aGUgY29udHJvbGxlciB0byBleHRyYWN0IG1pc3Rha2VubHkKICAvLy8gIHNlbnQgdG9rZW5zIHRvIHRoaXMgY29udHJhY3QuCiAgLy8vIEBwYXJhbSBfdG9rZW4gVGhlIGFkZHJlc3Mgb2YgdGhlIHRva2VuIGNvbnRyYWN0IHRoYXQgeW91IHdhbnQgdG8gcmVjb3ZlcgogIC8vLyAgc2V0IHRvIDAgaW4gY2FzZSB5b3Ugd2FudCB0byBleHRyYWN0IGV0aGVyLgogIGZ1bmN0aW9uIGNsYWltVG9rZW5zKGFkZHJlc3MgX3Rva2VuKSBwdWJsaWM7CgovLy8vLy8vLy8vLy8vLy8vCi8vIEV2ZW50cwovLy8vLy8vLy8vLy8vLy8vCgogIGV2ZW50IENsYWltZWRUb2tlbnMoYWRkcmVzcyBpbmRleGVkIF90b2tlbiwgYWRkcmVzcyBpbmRleGVkIF9jb250cm9sbGVyLCB1aW50IF9hbW91bnQpOwp9CgovLyBGaWxlOiBjb250cmFjdHMvaW50ZXJmYWNlL1Rva2VuQ29udHJvbGxlci5zb2wKCi8vLyBAZGV2IFRoZSB0b2tlbiBjb250cm9sbGVyIGNvbnRyYWN0IG11c3QgaW1wbGVtZW50IHRoZXNlIGZ1bmN0aW9ucwpjb250cmFjdCBUb2tlbkNvbnRyb2xsZXIgewogICAgLy8vIEBub3RpY2UgQ2FsbGVkIHdoZW4gYF9vd25lcmAgc2VuZHMgZXRoZXIgdG8gdGhlIE1pbmlNZSBUb2tlbiBjb250cmFjdAogICAgLy8vIEBwYXJhbSBfb3duZXIgVGhlIGFkZHJlc3MgdGhhdCBzZW50IHRoZSBldGhlciB0byBjcmVhdGUgdG9rZW5zCiAgICAvLy8gQHJldHVybiBUcnVlIGlmIHRoZSBldGhlciBpcyBhY2NlcHRlZCwgZmFsc2UgaWYgaXQgdGhyb3dzCiAgZnVuY3Rpb24gcHJveHlNaW50VG9rZW5zKAogICAgYWRkcmVzcyBfb3duZXIsIAogICAgdWludCBfYW1vdW50LAogICAgYnl0ZXMzMiBfcGFpZFR4SUQpIHB1YmxpYyByZXR1cm5zKGJvb2wpOwoKICAgIC8vLyBAbm90aWNlIE5vdGlmaWVzIHRoZSBjb250cm9sbGVyIGFib3V0IGEgdG9rZW4gdHJhbnNmZXIgYWxsb3dpbmcgdGhlCiAgICAvLy8gIGNvbnRyb2xsZXIgdG8gcmVhY3QgaWYgZGVzaXJlZAogICAgLy8vIEBwYXJhbSBfZnJvbSBUaGUgb3JpZ2luIG9mIHRoZSB0cmFuc2ZlcgogICAgLy8vIEBwYXJhbSBfdG8gVGhlIGRlc3RpbmF0aW9uIG9mIHRoZSB0cmFuc2ZlcgogICAgLy8vIEBwYXJhbSBfYW1vdW50IFRoZSBhbW91bnQgb2YgdGhlIHRyYW5zZmVyCiAgICAvLy8gQHJldHVybiBGYWxzZSBpZiB0aGUgY29udHJvbGxlciBkb2VzIG5vdCBhdXRob3JpemUgdGhlIHRyYW5zZmVyCiAgZnVuY3Rpb24gb25UcmFuc2ZlcihhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludCBfYW1vdW50KSBwdWJsaWMgcmV0dXJucyhib29sKTsKCiAgICAvLy8gQG5vdGljZSBOb3RpZmllcyB0aGUgY29udHJvbGxlciBhYm91dCBhbiBhcHByb3ZhbCBhbGxvd2luZyB0aGUKICAgIC8vLyAgY29udHJvbGxlciB0byByZWFjdCBpZiBkZXNpcmVkCiAgICAvLy8gQHBhcmFtIF9vd25lciBUaGUgYWRkcmVzcyB0aGF0IGNhbGxzIGBhcHByb3ZlKClgCiAgICAvLy8gQHBhcmFtIF9zcGVuZGVyIFRoZSBzcGVuZGVyIGluIHRoZSBgYXBwcm92ZSgpYCBjYWxsCiAgICAvLy8gQHBhcmFtIF9hbW91bnQgVGhlIGFtb3VudCBpbiB0aGUgYGFwcHJvdmUoKWAgY2FsbAogICAgLy8vIEByZXR1cm4gRmFsc2UgaWYgdGhlIGNvbnRyb2xsZXIgZG9lcyBub3QgYXV0aG9yaXplIHRoZSBhcHByb3ZhbAogIGZ1bmN0aW9uIG9uQXBwcm92ZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlciwgdWludCBfYW1vdW50KSBwdWJsaWMKICAgIHJldHVybnMoYm9vbCk7Cn0KCi8vIEZpbGU6IGNvbnRyYWN0cy9EaXN0cmlidXRpb24uc29sCgpjb250cmFjdCBEaXN0cmlidXRpb24gaXMgQ29udHJvbGxlZCwgVG9rZW5Db250cm9sbGVyIHsKCiAgLy8vIFJlY29yZCB0eCBkZXRhaWxzIGZvciBlYWNoIG1pbnRpbmcgb3BlcmF0aW9uCiAgc3RydWN0IFRyYW5zYWN0aW9uIHsKICAgIHVpbnQyNTYgYW1vdW50OwogICAgYnl0ZXMzMiBwYWlkVHhJRDsKICB9CgogIE1pbmlNZVRva2VuSSBwdWJsaWMgdG9rZW47CgogIGFkZHJlc3MgcHVibGljIHJlc2VydmVXYWxsZXQ7IC8vIFRlYW0ncyB3YWxsZXQgYWRkcmVzcwoKICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseUNhcDsgLy8gVG90YWwgVG9rZW4gc3VwcGx5IHRvIGJlIGdlbmVyYXRlZAogIHVpbnQyNTYgcHVibGljIHRvdGFsUmVzZXJ2ZTsgLy8gQSBudW1iZXIgb2YgdG9rZW5zIHRvIHJlc2VydmUgZm9yIHRoZSB0ZWFtL2JvbnVzZXMKCiAgdWludDI1NiBwdWJsaWMgZmluYWxpemVkQmxvY2s7CgogIC8vLyBSZWNvcmQgYWxsIHRyYW5zYWN0aW9uIGRldGFpbHMgZm9yIGFsbCBtaW50aW5nIG9wZXJhdGlvbnMKICBtYXBwaW5nIChhZGRyZXNzID0+IFRyYW5zYWN0aW9uW10pIGFsbFRyYW5zYWN0aW9uczsKCiAgLy8vIEBwYXJhbSBfdG9rZW4gQWRkcmVzcyBvZiB0aGUgU0VOIHRva2VuIGNvbnRyYWN0CiAgLy8vICB0aGUgY29udHJpYnV0aW9uIGZpbmFsaXplcy4KICAvLy8gQHBhcmFtIF9yZXNlcnZlV2FsbGV0IFRlYW0ncyB3YWxsZXQgYWRkcmVzcyB0byBkaXN0cmlidXRlIHJlc2VydmVkIHBvb2wKICAvLy8gQHBhcmFtIF90b3RhbFN1cHBseUNhcCBNYXhpbXVtIGFtb3VudCBvZiB0b2tlbnMgdG8gZ2VuZXJhdGUgZHVyaW5nIHRoZSBjb250cmlidXRpb24KICAvLy8gQHBhcmFtIF90b3RhbFJlc2VydmUgQSBudW1iZXIgb2YgdG9rZW5zIHRvIHJlc2VydmUgZm9yIHRoZSB0ZWFtL2JvbnVzZXMKICBmdW5jdGlvbiBEaXN0cmlidXRpb24oCiAgICBhZGRyZXNzIF90b2tlbiwKICAgIGFkZHJlc3MgX3Jlc2VydmVXYWxsZXQsCiAgICB1aW50MjU2IF90b3RhbFN1cHBseUNhcCwKICAgIHVpbnQyNTYgX3RvdGFsUmVzZXJ2ZQogICkgcHVibGljIG9ubHlDb250cm9sbGVyCiAgewogICAgLy8gSW5pdGlhbGl6ZSBvbmx5IG9uY2UKICAgIGFzc2VydChhZGRyZXNzKHRva2VuKSA9PSAweDApOwoKICAgIHRva2VuID0gTWluaU1lVG9rZW5JKF90b2tlbik7CiAgICByZXNlcnZlV2FsbGV0ID0gX3Jlc2VydmVXYWxsZXQ7CgogICAgcmVxdWlyZShfdG90YWxSZXNlcnZlIDwgX3RvdGFsU3VwcGx5Q2FwKTsKICAgIHRvdGFsU3VwcGx5Q2FwID0gX3RvdGFsU3VwcGx5Q2FwOwogICAgdG90YWxSZXNlcnZlID0gX3RvdGFsUmVzZXJ2ZTsKCiAgICBhc3NlcnQodG9rZW4udG90YWxTdXBwbHkoKSA9PSAwKTsKICAgIGFzc2VydCh0b2tlbi5kZWNpbWFscygpID09IDE4KTsgLy8gU2FtZSBhbW91bnQgb2YgZGVjaW1hbHMgYXMgRVRICiAgfQoKICBmdW5jdGlvbiBkaXN0cmlidXRpb25DYXAoKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgcmV0dXJuIHRvdGFsU3VwcGx5Q2FwIC0gdG90YWxSZXNlcnZlOwogIH0KCiAgLy8vIEBub3RpY2UgVGhpcyBtZXRob2QgY2FuIGJlIGNhbGxlZCB0aGUgZGlzdHJpYnV0aW9uIGNhcCBpcyByZWFjaGVkIG9ubHkKICBmdW5jdGlvbiBmaW5hbGl6ZSgpIHB1YmxpYyBvbmx5Q29udHJvbGxlciB7CiAgICBhc3NlcnQodG9rZW4udG90YWxTdXBwbHkoKSA+PSBkaXN0cmlidXRpb25DYXAoKSk7CgogICAgLy8gTWludCByZXNlcnZlIHBvb2wKICAgIGRvTWludChyZXNlcnZlV2FsbGV0LCB0b3RhbFJlc2VydmUpOwoKICAgIGZpbmFsaXplZEJsb2NrID0gZ2V0QmxvY2tOdW1iZXIoKTsKICAgIHRva2VuLmZpbmFsaXplKCk7IC8vIFRva2VuIGJlY29tZXMgdW5taW50YWJsZSBhZnRlciB0aGlzCgogICAgLy8gRGlzdHJpYnV0aW9uIGNvbnRyb2xsZXIgYmVjb21lcyBhIFRva2VuIGNvbnRyb2xsZXIKICAgIHRva2VuLmNoYW5nZUNvbnRyb2xsZXIoY29udHJvbGxlcik7CgogICAgRmluYWxpemVkKCk7CiAgfQoKLy8vLy8vLy8vLwovLyBUb2tlbkNvbnRyb2xsZXIgZnVuY3Rpb25zCi8vLy8vLy8vLy8KCiAgZnVuY3Rpb24gcHJveHlNaW50VG9rZW5zKAogICAgYWRkcmVzcyBfdGgsCiAgICB1aW50MjU2IF9hbW91bnQsCiAgICBieXRlczMyIF9wYWlkVHhJRAogICkgcHVibGljIG9ubHlDb250cm9sbGVyIHJldHVybnMgKGJvb2wpCiAgewogICAgcmVxdWlyZShfdGggIT0gMHgwKTsKCiAgICByZXF1aXJlKF9hbW91bnQgKyB0b2tlbi50b3RhbFN1cHBseSgpIDw9IGRpc3RyaWJ1dGlvbkNhcCgpKTsKCiAgICBkb01pbnQoX3RoLCBfYW1vdW50KTsKICAgIGFkZFRyYW5zYWN0aW9uKAogICAgICBhbGxUcmFuc2FjdGlvbnNbX3RoXSwKICAgICAgX2Ftb3VudCwKICAgICAgX3BhaWRUeElEKTsKCiAgICBQdXJjaGFzZSgKICAgICAgX3RoLAogICAgICBfYW1vdW50LAogICAgICBfcGFpZFR4SUQpOwoKICAgIHJldHVybiB0cnVlOwogIH0KCiAgZnVuY3Rpb24gb25UcmFuc2ZlcihhZGRyZXNzLCBhZGRyZXNzLCB1aW50MjU2KSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgcmV0dXJuIGZhbHNlOwogIH0KCiAgZnVuY3Rpb24gb25BcHByb3ZlKGFkZHJlc3MsIGFkZHJlc3MsIHVpbnQyNTYpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICByZXR1cm4gZmFsc2U7CiAgfQoKICAvLy8vLy8vLy8vCiAgLy8gU2FmZXR5IE1ldGhvZHMKICAvLy8vLy8vLy8vCgogIC8vLyBAbm90aWNlIFRoaXMgbWV0aG9kIGNhbiBiZSB1c2VkIGJ5IHRoZSBjb250cm9sbGVyIHRvIGV4dHJhY3QgbWlzdGFrZW5seQogIC8vLyAgc2VudCB0b2tlbnMgdG8gdGhpcyBjb250cmFjdC4KICAvLy8gQHBhcmFtIF90b2tlbiBUaGUgYWRkcmVzcyBvZiB0aGUgdG9rZW4gY29udHJhY3QgdGhhdCB5b3Ugd2FudCB0byByZWNvdmVyCiAgLy8vICBzZXQgdG8gMCBpbiBjYXNlIHlvdSB3YW50IHRvIGV4dHJhY3QgZXRoZXIuCiAgZnVuY3Rpb24gY2xhaW1Ub2tlbnMoYWRkcmVzcyBfdG9rZW4pIHB1YmxpYyBvbmx5Q29udHJvbGxlciB7CiAgICBpZiAodG9rZW4uY29udHJvbGxlcigpID09IGFkZHJlc3ModGhpcykpIHsKICAgICAgdG9rZW4uY2xhaW1Ub2tlbnMoX3Rva2VuKTsKICAgIH0KICAgIGlmIChfdG9rZW4gPT0gMHgwKSB7CiAgICAgIGNvbnRyb2xsZXIudHJhbnNmZXIodGhpcy5iYWxhbmNlKTsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIEVSQzIwVG9rZW4gb3RoZXJUb2tlbiA9IEVSQzIwVG9rZW4oX3Rva2VuKTsKICAgIHVpbnQyNTYgYmFsYW5jZSA9IG90aGVyVG9rZW4uYmFsYW5jZU9mKHRoaXMpOwogICAgb3RoZXJUb2tlbi50cmFuc2Zlcihjb250cm9sbGVyLCBiYWxhbmNlKTsKICAgIENsYWltZWRUb2tlbnMoX3Rva2VuLCBjb250cm9sbGVyLCBiYWxhbmNlKTsKICB9CgogIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8KICAvLyBNaW50aW5nIHRva2VucyBhbmQgb3JhY2xpemF0aW9uCiAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLwoKICAvLy8gVG90YWwgdHJhbnNhY3Rpb24gY291bnQgYmVsb25nIHRvIGFuIGFkZHJlc3MKICBmdW5jdGlvbiB0b3RhbFRyYW5zYWN0aW9uQ291bnQoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zKHVpbnQpIHsKICAgIHJldHVybiBhbGxUcmFuc2FjdGlvbnNbX293bmVyXS5sZW5ndGg7CiAgfQoKICAvLy8gUXVlcnkgYSB0cmFuc2FjdGlvbiBkZXRhaWxzIGJ5IGFkZHJlc3MgYW5kIGl0cyBpbmRleCBpbiB0cmFuc2FjdGlvbnMgYXJyYXkKICBmdW5jdGlvbiBnZXRUcmFuc2FjdGlvbkF0SW5kZXgoYWRkcmVzcyBfb3duZXIsIHVpbnQgaW5kZXgpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zKAogICAgdWludDI1NiBfYW1vdW50LAogICAgYnl0ZXMzMiBfcGFpZFR4SUQKICApIHsKICAgIF9hbW91bnQgPSBhbGxUcmFuc2FjdGlvbnNbX293bmVyXVtpbmRleF0uYW1vdW50OwogICAgX3BhaWRUeElEID0gYWxsVHJhbnNhY3Rpb25zW19vd25lcl1baW5kZXhdLnBhaWRUeElEOwogIH0KCiAgLy8vIFNhdmUgdHJhbnNhY3Rpb24gZGV0YWlscyBiZWxvbmcgdG8gYW4gYWRkcmVzcwogIC8vLyBAcGFyYW0gIHRyYW5zYWN0aW9ucyBhbGwgdHJhbnNhY3Rpb25zIGJlbG9uZyB0byBhbiBhZGRyZXNzCiAgLy8vIEBwYXJhbSBfYW1vdW50IGFtb3VudCBvZiB0b2tlbnMgaXNzdWVkIGluIHRoZSB0cmFuc2FjdGlvbgogIC8vLyBAcGFyYW0gX3BhaWRUeElEIGJsb2NrY2hhaW4gdHhfaGFzaAogIGZ1bmN0aW9uIGFkZFRyYW5zYWN0aW9uKAogICAgVHJhbnNhY3Rpb25bXSBzdG9yYWdlIHRyYW5zYWN0aW9ucywKICAgIHVpbnQgX2Ftb3VudCwKICAgIGJ5dGVzMzIgX3BhaWRUeElECiAgICApIGludGVybmFsCiAgewogICAgVHJhbnNhY3Rpb24gc3RvcmFnZSBuZXdUeCA9IHRyYW5zYWN0aW9uc1t0cmFuc2FjdGlvbnMubGVuZ3RoKytdOwogICAgbmV3VHguYW1vdW50ID0gX2Ftb3VudDsKICAgIG5ld1R4LnBhaWRUeElEID0gX3BhaWRUeElEOwogIH0KCiAgZnVuY3Rpb24gZG9NaW50KGFkZHJlc3MgX3RoLCB1aW50MjU2IF9hbW91bnQpIGludGVybmFsIHsKICAgIGFzc2VydCh0b2tlbi5taW50VG9rZW5zKF90aCwgX2Ftb3VudCkpOwogIH0KCi8vLy8vLy8vLy8KLy8gVGVzdGluZyBzcGVjaWZpYyBtZXRob2RzCi8vLy8vLy8vLy8KCiAgLy8vIEBub3RpY2UgVGhpcyBmdW5jdGlvbiBpcyBvdmVycmlkZGVuIGJ5IHRoZSB0ZXN0IE1vY2tzLgogIGZ1bmN0aW9uIGdldEJsb2NrTnVtYmVyKCkgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgeyByZXR1cm4gYmxvY2subnVtYmVyOyB9CgoKLy8vLy8vLy8vLy8vLy8vLwovLyBFdmVudHMKLy8vLy8vLy8vLy8vLy8vLwogIGV2ZW50IENsYWltZWRUb2tlbnMoYWRkcmVzcyBpbmRleGVkIF90b2tlbiwgYWRkcmVzcyBpbmRleGVkIF9jb250cm9sbGVyLCB1aW50MjU2IF9hbW91bnQpOwogIGV2ZW50IFB1cmNoYXNlKAogICAgYWRkcmVzcyBpbmRleGVkIF9vd25lciwKICAgIHVpbnQyNTYgX2Ftb3VudCwKICAgIGJ5dGVzMzIgX3BhaWRUeElECiAgKTsKICBldmVudCBGaW5hbGl6ZWQoKTsKfQ=='.
	

]
