Class {
	#name : #SRT003c9753ea43af93aedd18a959c853a58cc30fd6,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT003c9753ea43af93aedd18a959c853a58cc30fd6 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgpsaWJyYXJ5IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgaWYgKGEgPT0gMCkgewogICAgICByZXR1cm4gMDsKICAgIH0KICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGMgLyBhID09IGIpOwogICAgcmV0dXJuIGM7CiAgfQogIAogIGZ1bmN0aW9uIGRpdih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAKICAgIHVpbnQyNTYgYyA9IGEgLyBiOwogICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICAgIHJldHVybiBjOwogIH0KICAKICBmdW5jdGlvbiBzdWIodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQogIAogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhICsgYjsKICAgIGFzc2VydChjID49IGEpOwogICAgcmV0dXJuIGM7CiAgfQp9CgppbnRlcmZhY2UgdG9rZW4gewogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyByZWNlaXZlciwgdWludCBhbW91bnQpIHB1YmxpYzsKICAgIGZ1bmN0aW9uIGJ1cm4odWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwp9Cgpjb250cmFjdCBPd25hYmxlIHsKCiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKCiAgICBmdW5jdGlvbiBPd25hYmxlKCkgcHVibGljIHsKICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgICB9CgogICAgbW9kaWZpZXIgb25seU93bmVyKCkgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICAgICAgXzsKICAgIH0KICAgIAp9Cgpjb250cmFjdCBJUU5JQ08gaXMgT3duYWJsZSB7CiAgICAKICAgIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwogICAgCiAgICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCBFWENIQU5HRV9SQVRFID0gMzUwOwogICAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgU1RBUlQgPSAxNTE3MzEzNjAwOyAvLyBUdWVzZGF5LCAzMC1KYW4tMTggMTI6MDA6MDAgVVRDIGluIFJGQyAyODIyCgoKCiAgICB1aW50MjU2IGF2YWlsYWJsZVRva2VuczsKICAgIGFkZHJlc3MgYWRkcmVzc1RvU2VuZEV0aGVyZXVtOwogICAgCiAgICB1aW50IHB1YmxpYyBhbW91bnRSYWlzZWQ7CiAgICB1aW50IHB1YmxpYyBkZWFkbGluZTsKICAgIHVpbnQgcHVibGljIHByaWNlOwogICAgdG9rZW4gcHVibGljIHRva2VuUmV3YXJkOwogICAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBiYWxhbmNlT2Y7CgogICAgLyoqCiAgICAgKiBDb25zdHJjdG9yIGZ1bmN0aW9uCiAgICAgKgogICAgICogU2V0dXAgdGhlIG93bmVyCiAgICAgKi8KICAgIGZ1bmN0aW9uIElRTklDTyAoCiAgICAgICAgYWRkcmVzcyBhZGRyZXNzT2ZUb2tlblVzZWRBc1Jld2FyZCwKICAgICAgICBhZGRyZXNzIF9hZGRyZXNzVG9TZW5kRXRoZXJldW0KICAgICkgcHVibGljIHsKICAgICAgICBhdmFpbGFibGVUb2tlbnMgPSA3MDAgKiAxMCAqKiAxODsKICAgICAgICBhZGRyZXNzVG9TZW5kRXRoZXJldW0gPSBfYWRkcmVzc1RvU2VuZEV0aGVyZXVtOwogICAgICAgIGRlYWRsaW5lID0gU1RBUlQgKyA0MiBkYXlzOwogICAgICAgIHRva2VuUmV3YXJkID0gdG9rZW4oYWRkcmVzc09mVG9rZW5Vc2VkQXNSZXdhcmQpOwogICAgfQoKICAgIC8qKgogICAgICogRmFsbGJhY2sgZnVuY3Rpb24KICAgICAqCiAgICAgKiBUaGUgZnVuY3Rpb24gd2l0aG91dCBuYW1lIGlzIHRoZSBkZWZhdWx0IGZ1bmN0aW9uIHRoYXQgaXMgY2FsbGVkIHdoZW5ldmVyIGFueW9uZSBzZW5kcyBmdW5kcyB0byBhIGNvbnRyYWN0CiAgICAgKi8KICAgIGZ1bmN0aW9uICgpIHB1YmxpYyBwYXlhYmxlIHsKICAgICAgICByZXF1aXJlKG5vdyA8IGRlYWRsaW5lICYmIG5vdyA+PSBTVEFSVCk7CiAgICAgICAgdWludDI1NiBhbW91bnQgPSBtc2cudmFsdWU7CiAgICAgICAgdWludDI1NiB0b2tlbnMgPSBhbW91bnQgKiBFWENIQU5HRV9SQVRFOwogICAgICAgIHVpbnQyNTYgYm9udXMgPSBnZXRCb251cyh0b2tlbnMpOwogICAgICAgIHRva2VucyA9IHRva2Vucy5hZGQoYm9udXMpOwogICAgICAgIGJhbGFuY2VPZlttc2cuc2VuZGVyXSArPSB0b2tlbnM7CiAgICAgICAgYW1vdW50UmFpc2VkICs9IHRva2VuczsKICAgICAgICBhdmFpbGFibGVUb2tlbnMgLT0gdG9rZW5zOwogICAgICAgIHRva2VuUmV3YXJkLnRyYW5zZmVyKG1zZy5zZW5kZXIsIHRva2Vucyk7CiAgICAgICAgYWRkcmVzc1RvU2VuZEV0aGVyZXVtLnRyYW5zZmVyKGFtb3VudCk7CiAgICB9CiAgICAKICAgIAogICAgZnVuY3Rpb24gZ2V0Qm9udXModWludDI1NiBfdG9rZW5zKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewoKICAgICAgICByZXF1aXJlKF90b2tlbnMgPiAwKTsKICAgICAgICAKICAgICAgICBpZiAoU1RBUlQgPD0gbm93ICYmIG5vdyA8IFNUQVJUICsgMSBkYXlzKSB7CgogICAgICAgICAgICByZXR1cm4gX3Rva2Vucy5tdWwoMzApLmRpdigxMDApOyAvLyAzMCUgZmlyc3QgZGF5CgogICAgICAgIH0gZWxzZSBpZiAoU1RBUlQgPD0gbm93ICYmIG5vdyA8IFNUQVJUICsgMSB3ZWVrcykgewoKICAgICAgICAgICAgcmV0dXJuIF90b2tlbnMuZGl2KDQpOyAvLyAyNSUgZmlyc3Qgd2VlawoKICAgICAgICB9IGVsc2UgaWYgKFNUQVJUICsgMSB3ZWVrcyA8PSBub3cgJiYgbm93IDwgU1RBUlQgKyAyIHdlZWtzKSB7CgogICAgICAgICAgICByZXR1cm4gX3Rva2Vucy5kaXYoNSk7IC8vIDIwJSBzZWNvbmQgd2VlawoKICAgICAgICB9IGVsc2UgaWYgKFNUQVJUICsgMiB3ZWVrcyA8PSBub3cgJiYgbm93IDwgU1RBUlQgKyAzIHdlZWtzKSB7CgogICAgICAgICAgICByZXR1cm4gX3Rva2Vucy5tdWwoMTUpLmRpdigxMDApOyAvLyAxNSUgdGhpcmQgd2VlawoKICAgICAgICB9IGVsc2UgaWYgKFNUQVJUICsgMyB3ZWVrcyA8PSBub3cgJiYgbm93IDwgU1RBUlQgKyA0IHdlZWtzKSB7CgogICAgICAgICAgICByZXR1cm4gX3Rva2Vucy5kaXYoMTApOyAvLyAxMCUgZm91cnRoIHdlZWsKCiAgICAgICAgfSBlbHNlIGlmIChTVEFSVCArIDQgd2Vla3MgPD0gbm93ICYmIG5vdyA8IFNUQVJUICsgNSB3ZWVrcykgewoKICAgICAgICAgICAgcmV0dXJuIF90b2tlbnMuZGl2KDIwKTsgLy8gNSUgZmlmdGggd2VlawoKICAgICAgICB9IGVsc2UgewoKICAgICAgICAgICAgcmV0dXJuIDA7CgogICAgICAgIH0KICAgIH0KCiAgICBtb2RpZmllciBhZnRlckRlYWRsaW5lKCkgeyAKICAgICAgICByZXF1aXJlKG5vdyA+PSBkZWFkbGluZSk7CiAgICAgICAgXzsgCiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIHNlbGxGb3JPdGhlckNvaW5zKGFkZHJlc3MgX2FkZHJlc3MsdWludCBhbW91bnQpICBwdWJsaWMgcGF5YWJsZSBvbmx5T3duZXIKICAgIHsKICAgICAgICB1aW50MjU2IHRva2VucyA9IGFtb3VudDsKICAgICAgICB1aW50MjU2IGJvbnVzID0gZ2V0Qm9udXModG9rZW5zKTsKICAgICAgICB0b2tlbnMgPSB0b2tlbnMuYWRkKGJvbnVzKTsKICAgICAgICBhdmFpbGFibGVUb2tlbnMgLT0gdG9rZW5zOwogICAgICAgIHRva2VuUmV3YXJkLnRyYW5zZmVyKF9hZGRyZXNzLCB0b2tlbnMpOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBidXJuQWZ0ZXJJY28oKSBwdWJsaWMgb25seU93bmVyIHJldHVybnMgKGJvb2wgc3VjY2Vzcyl7CiAgICAgICAgdWludDI1NiBiYWxhbmNlID0gYXZhaWxhYmxlVG9rZW5zOwogICAgICAgIHRva2VuUmV3YXJkLmJ1cm4oYmFsYW5jZSk7CiAgICAgICAgYXZhaWxhYmxlVG9rZW5zID0gMDsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiB0b2tlbnNBdmFpbGFibGUoKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHJldHVybiBhdmFpbGFibGVUb2tlbnM7CiAgICB9Cgp9'.
	

]
