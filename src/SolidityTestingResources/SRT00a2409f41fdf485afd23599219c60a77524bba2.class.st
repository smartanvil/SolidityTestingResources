Class {
	#name : #SRT00a2409f41fdf485afd23599219c60a77524bba2,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT00a2409f41fdf485afd23599219c60a77524bba2 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTM7CgovLyBFbmppbiBJQ08gZ3JvdXAgYnV5ZXIKLy8gQXZ0b3I6IEphbmV6CgovLyBFUkMyMCBJbnRlcmZhY2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8yMApjb250cmFjdCBFUkMyMCB7CiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKTsKfQoKY29udHJhY3QgRW5qaW5CdXllciB7CiAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBwdWJsaWMgYmFsYW5jZXM7CiAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBwdWJsaWMgYmFsYW5jZXNfYWZ0ZXJfYnV5OwogIGJvb2wgcHVibGljIGJvdWdodF90b2tlbnM7CiAgYm9vbCBwdWJsaWMgdG9rZW5fc2V0OwogIGJvb2wgcHVibGljIHJlZnVuZGVkOwogIHVpbnQyNTYgcHVibGljIGNvbnRyYWN0X2V0aF92YWx1ZTsKICBib29sIHB1YmxpYyBraWxsX3N3aXRjaDsKICBieXRlczMyIHBhc3N3b3JkX2hhc2ggPSAweDhiZjA3MjBjNmU2MTBhYWNlODY3ZWJhNTFiMDNhYjhjYTkwOGI2NjU4OThiMTBmYWRkYzk1YTk2ZTgyOTUzOWQ7CiAgYWRkcmVzcyBwdWJsaWMgZGV2ZWxvcGVyID0gMHgwNjM5QzE2OUQ5MjY1Q2E0QjRERWNlNjkzNzY0Q2RBOGVhNUYzODgyOwogIGFkZHJlc3MgcHVibGljIHNhbGUgPSAweGM0NzQwZjcxMzIzMTI5NjY5NDI0ZDFBZTA2YzQyQUVFOTlkYTMwZTI7CiAgRVJDMjAgcHVibGljIHRva2VuOwogIHVpbnQyNTYgcHVibGljIGV0aF9taW5pbXVtID0gMzIzNSBldGhlcjsKCiAgZnVuY3Rpb24gc2V0X3Rva2VuKGFkZHJlc3MgX3Rva2VuKSB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gZGV2ZWxvcGVyKTsKICAgIHRva2VuID0gRVJDMjAoX3Rva2VuKTsKICAgIHRva2VuX3NldCA9IHRydWU7CiAgfQoKICAvLyBUaGlzIGZ1bmN0aW9uIHNob3VsZCBvbmx5IGJlIGNhbGxlZCBpbiB0aGUgdW5mb3J0dW5hdGUgY2FzZSB0aGF0IEVuamluIHNob3VsZCByZWZ1bmQgZnJvbSBhIGRpZmZlcmVudCBhZGRyZXNzLgogIGZ1bmN0aW9uIHNldF9yZWZ1bmRlZChib29sIF9yZWZ1bmRlZCkgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IGRldmVsb3Blcik7CiAgICByZWZ1bmRlZCA9IF9yZWZ1bmRlZDsKICB9CiAgCiAgZnVuY3Rpb24gYWN0aXZhdGVfa2lsbF9zd2l0Y2goc3RyaW5nIHBhc3N3b3JkKSB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gZGV2ZWxvcGVyIHx8IHNoYTMocGFzc3dvcmQpID09IHBhc3N3b3JkX2hhc2gpOwogICAga2lsbF9zd2l0Y2ggPSB0cnVlOwogIH0KICAKICBmdW5jdGlvbiBwZXJzb25hbF93aXRoZHJhdygpewogICAgaWYgKGJhbGFuY2VzX2FmdGVyX2J1eVttc2cuc2VuZGVyXT4wICYmIG1zZy5zZW5kZXIgIT0gc2FsZSkgewogICAgICAgIHVpbnQyNTYgZXRoX3RvX3dpdGhkcmF3X2FmdGVyX2J1eSA9IGJhbGFuY2VzX2FmdGVyX2J1eVttc2cuc2VuZGVyXTsKICAgICAgICBiYWxhbmNlc19hZnRlcl9idXlbbXNnLnNlbmRlcl0gPSAwOwogICAgICAgIG1zZy5zZW5kZXIudHJhbnNmZXIoZXRoX3RvX3dpdGhkcmF3X2FmdGVyX2J1eSk7CiAgICB9CiAgICBpZiAoYmFsYW5jZXNbbXNnLnNlbmRlcl0gPT0gMCkgcmV0dXJuOwogICAgcmVxdWlyZShtc2cuc2VuZGVyICE9IHNhbGUpOwogICAgaWYgKCFib3VnaHRfdG9rZW5zIHx8IHJlZnVuZGVkKSB7CiAgICAgIHVpbnQyNTYgZXRoX3RvX3dpdGhkcmF3ID0gYmFsYW5jZXNbbXNnLnNlbmRlcl07CiAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gMDsKICAgICAgbXNnLnNlbmRlci50cmFuc2ZlcihldGhfdG9fd2l0aGRyYXcpOwogICAgfQogICAgZWxzZSB7CiAgICAgIHJlcXVpcmUodG9rZW5fc2V0KTsKICAgICAgdWludDI1NiBjb250cmFjdF90b2tlbl9iYWxhbmNlID0gdG9rZW4uYmFsYW5jZU9mKGFkZHJlc3ModGhpcykpOwogICAgICByZXF1aXJlKGNvbnRyYWN0X3Rva2VuX2JhbGFuY2UgIT0gMCk7CiAgICAgIHVpbnQyNTYgdG9rZW5zX3RvX3dpdGhkcmF3ID0gKGJhbGFuY2VzW21zZy5zZW5kZXJdICogY29udHJhY3RfdG9rZW5fYmFsYW5jZSkgLyBjb250cmFjdF9ldGhfdmFsdWU7CiAgICAgIGNvbnRyYWN0X2V0aF92YWx1ZSAtPSBiYWxhbmNlc1ttc2cuc2VuZGVyXTsKICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSAwOwogICAgICB1aW50MjU2IGZlZSA9IHRva2Vuc190b193aXRoZHJhdyAvIDEwMDsKICAgICAgcmVxdWlyZSh0b2tlbi50cmFuc2ZlcihkZXZlbG9wZXIsIGZlZSkpOwogICAgICByZXF1aXJlKHRva2VuLnRyYW5zZmVyKG1zZy5zZW5kZXIsIHRva2Vuc190b193aXRoZHJhdyAtIGZlZSkpOwogICAgfQogIH0KCgogIC8vIFVzZSB3aXRoIGNhdXRpb24gLSB1c2UgdGhpcyB3aXRoZHJhdyBmdW5jdGlvbiBpZiB5b3UgZG8gbm90IHRydXN0IHRoZQogIC8vIGNvbnRyYWN0J3MgdG9rZW4gc2V0dGluZy4gWW91IGNhbiBvbmx5IHVzZSB0aGlzIG9uY2UsIHNvIGlmIHlvdQogIC8vIHB1dCBpbiB0aGUgd3JvbmcgdG9rZW4gYWRkcmVzcyB5b3Ugd2lsbCBidXJuIHRoZSBFbmppbiBvbiB0aGUgY29udHJhY3QuCiAgZnVuY3Rpb24gd2l0aGRyYXdfdG9rZW4oYWRkcmVzcyBfdG9rZW4pewogICAgRVJDMjAgbXlUb2tlbiA9IEVSQzIwKF90b2tlbik7CiAgICBpZiAoYmFsYW5jZXNfYWZ0ZXJfYnV5W21zZy5zZW5kZXJdPjAgJiYgbXNnLnNlbmRlciAhPSBzYWxlKSB7CiAgICAgICAgdWludDI1NiBldGhfdG9fd2l0aGRyYXdfYWZ0ZXJfYnV5ID0gYmFsYW5jZXNfYWZ0ZXJfYnV5W21zZy5zZW5kZXJdOwogICAgICAgIGJhbGFuY2VzX2FmdGVyX2J1eVttc2cuc2VuZGVyXSA9IDA7CiAgICAgICAgbXNnLnNlbmRlci50cmFuc2ZlcihldGhfdG9fd2l0aGRyYXdfYWZ0ZXJfYnV5KTsKICAgIH0KICAgIGlmIChiYWxhbmNlc1ttc2cuc2VuZGVyXSA9PSAwKSByZXR1cm47CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgIT0gc2FsZSk7CiAgICBpZiAoIWJvdWdodF90b2tlbnMgfHwgcmVmdW5kZWQpIHsKICAgICAgdWludDI1NiBldGhfdG9fd2l0aGRyYXcgPSBiYWxhbmNlc1ttc2cuc2VuZGVyXTsKICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSAwOwogICAgICBtc2cuc2VuZGVyLnRyYW5zZmVyKGV0aF90b193aXRoZHJhdyk7CiAgICB9CiAgICBlbHNlIHsKICAgICAgdWludDI1NiBjb250cmFjdF90b2tlbl9iYWxhbmNlID0gbXlUb2tlbi5iYWxhbmNlT2YoYWRkcmVzcyh0aGlzKSk7CiAgICAgIHJlcXVpcmUoY29udHJhY3RfdG9rZW5fYmFsYW5jZSAhPSAwKTsKICAgICAgdWludDI1NiB0b2tlbnNfdG9fd2l0aGRyYXcgPSAoYmFsYW5jZXNbbXNnLnNlbmRlcl0gKiBjb250cmFjdF90b2tlbl9iYWxhbmNlKSAvIGNvbnRyYWN0X2V0aF92YWx1ZTsKICAgICAgY29udHJhY3RfZXRoX3ZhbHVlIC09IGJhbGFuY2VzW21zZy5zZW5kZXJdOwogICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IDA7CiAgICAgIHVpbnQyNTYgZmVlID0gdG9rZW5zX3RvX3dpdGhkcmF3IC8gMTAwOwogICAgICByZXF1aXJlKG15VG9rZW4udHJhbnNmZXIoZGV2ZWxvcGVyLCBmZWUpKTsKICAgICAgcmVxdWlyZShteVRva2VuLnRyYW5zZmVyKG1zZy5zZW5kZXIsIHRva2Vuc190b193aXRoZHJhdyAtIGZlZSkpOwogICAgfQogIH0KCiAgZnVuY3Rpb24gcHVyY2hhc2VfdG9rZW5zKCkgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IGRldmVsb3Blcik7CiAgICBpZiAodGhpcy5iYWxhbmNlIDwgZXRoX21pbmltdW0pIHJldHVybjsKICAgIGlmIChraWxsX3N3aXRjaCkgcmV0dXJuOwogICAgcmVxdWlyZShzYWxlICE9IDB4MCk7CiAgICBib3VnaHRfdG9rZW5zID0gdHJ1ZTsKICAgIGNvbnRyYWN0X2V0aF92YWx1ZSA9IHRoaXMuYmFsYW5jZTsKICAgIHJlcXVpcmUoc2FsZS5jYWxsLnZhbHVlKGNvbnRyYWN0X2V0aF92YWx1ZSkoKSk7CiAgICByZXF1aXJlKHRoaXMuYmFsYW5jZT09MCk7CiAgfQogIAogIGZ1bmN0aW9uICgpIHBheWFibGUgewogICAgaWYgKCFib3VnaHRfdG9rZW5zKSB7CiAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdICs9IG1zZy52YWx1ZTsKICAgICAgaWYgKHRoaXMuYmFsYW5jZSA8IGV0aF9taW5pbXVtKSByZXR1cm47CiAgICAgIGlmIChraWxsX3N3aXRjaCkgcmV0dXJuOwogICAgICByZXF1aXJlKHNhbGUgIT0gMHgwKTsKICAgICAgYm91Z2h0X3Rva2VucyA9IHRydWU7CiAgICAgIGNvbnRyYWN0X2V0aF92YWx1ZSA9IHRoaXMuYmFsYW5jZTsKICAgICAgcmVxdWlyZShzYWxlLmNhbGwudmFsdWUoY29udHJhY3RfZXRoX3ZhbHVlKSgpKTsKICAgICAgcmVxdWlyZSh0aGlzLmJhbGFuY2U9PTApOwogICAgfSBlbHNlIHsKICAgICAgLy8gV2UgbWlnaHQgYmUgZ2V0dGluZyBhIHJlZnVuZCBmcm9tIEVuamluJ3MgbXVsdGlzaWcgd2FsbGV0LgogICAgICAvLyBJdCBjb3VsZCBhbHNvIGJlIHNvbWVvbmUgd2hvIGhhcyBtaXNzZWQgdGhlIGJ1eSwgc28gd2Uga2VlcAogICAgICAvLyB0cmFjayBvZiB0aGlzIGFzIHdlbGwgc28gdGhhdCBoZSBjYW4gc2FmZWx5IHdpdGhkcmF3LgogICAgICAvLyBXZSBtaWdodCBnZXQgdGhlIEVuamluIHJlZnVuZCBmcm9tIGFub3RoZXIgd2FsbGV0LCBzbyB0aGlzCiAgICAgIC8vIGlzIHdoeSB3ZSBhbGxvdyB0aGlzIGJlaGF2aW9yLgogICAgICBiYWxhbmNlc19hZnRlcl9idXlbbXNnLnNlbmRlcl0gKz0gbXNnLnZhbHVlOwogICAgICBpZiAobXNnLnNlbmRlciA9PSBzYWxlICYmIHRoaXMuYmFsYW5jZSA+PSBjb250cmFjdF9ldGhfdmFsdWUpIHsKICAgICAgICByZWZ1bmRlZCA9IHRydWU7CiAgICAgIH0KICAgIH0KICB9Cn0='.
	

]
