Class {
	#name : #SRT3A0cdeb95EF7E07c83b788dE3863ff04071435CC,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT3A0cdeb95EF7E07c83b788dE3863ff04071435CC >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgovKioKICogQHRpdGxlIFNhZmVNYXRoCiAqIEBkZXYgTWF0aCBvcGVyYXRpb25zIHdpdGggc2FmZXR5IGNoZWNrcyB0aGF0IHRocm93IG9uIGVycm9yCiAqLwpjb250cmFjdCBTYWZlTWF0aCB7CiAgICAvKioKICAgICogQGRldiBjb25zdHJ1Y3RvcgogICAgKi8KICAgIGZ1bmN0aW9uIFNhZmVNYXRoKCkgcHVibGljIHsKICAgIH0KCiAgICBmdW5jdGlvbiBzYWZlTXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICB1aW50MjU2IGMgPSBhICogYjsKICAgICAgICBhc3NlcnQoYSA9PSAwIHx8IGMgLyBhID09IGIpOwogICAgICAgIHJldHVybiBjOwogICAgfQoKICAgIGZ1bmN0aW9uIHNhZmVEaXYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHVpbnQyNTYgYyA9IGEgLyBiOwogICAgICAgIHJldHVybiBjOwogICAgfQoKICAgIGZ1bmN0aW9uIHNhZmVTdWIodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgICAgIGFzc2VydChhID49IGIpOwogICAgICAgIHJldHVybiBhIC0gYjsKICAgIH0KCiAgICBmdW5jdGlvbiBzYWZlQWRkKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICB1aW50MjU2IGMgPSBhICsgYjsKICAgICAgICBhc3NlcnQoYyA+PSBhKTsKICAgICAgICByZXR1cm4gYzsKICAgIH0KfQoKCi8qKgogKiBAdGl0bGUgT3duYWJsZQogKiBAZGV2IFRoZSBPd25hYmxlIGNvbnRyYWN0IGhhcyBhbiBvd25lciBhZGRyZXNzLCBhbmQgcHJvdmlkZXMgYmFzaWMgYXV0aG9yaXphdGlvbiBjb250cm9sCiAqIGZ1bmN0aW9ucywgdGhpcyBzaW1wbGlmaWVzIHRoZSBpbXBsZW1lbnRhdGlvbiBvZiAidXNlciBwZXJtaXNzaW9ucyIuCiAqLwpjb250cmFjdCBPd25hYmxlIHsKICAgIGFkZHJlc3MgcHVibGljIG93bmVyOwogICAgYWRkcmVzcyBwdWJsaWMgbmV3T3duZXI7CgogICAgZXZlbnQgT3duZXJzaGlwVHJhbnNmZXJyZWQoYWRkcmVzcyBpbmRleGVkIHByZXZpb3VzT3duZXIsIGFkZHJlc3MgaW5kZXhlZCBuZXdPd25lcik7CgogICAgLyoqCiAgICAqIEBkZXYgVGhlIE93bmFibGUgY29uc3RydWN0b3Igc2V0cyB0aGUgb3JpZ2luYWwgYG93bmVyYCBvZiB0aGUgY29udHJhY3QgdG8gdGhlIHNlbmRlcgogICAgKiBhY2NvdW50LgogICAgKi8KICAgIGZ1bmN0aW9uIE93bmFibGUoKSBwdWJsaWMgewogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgIH0KCiAgICAvKioKICAgICogQGRldiBUaHJvd3MgaWYgY2FsbGVkIGJ5IGFueSBhY2NvdW50IG90aGVyIHRoYW4gdGhlIG93bmVyLgogICAgKi8KICAgIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgICAgIF87CiAgICB9CgogICAgLyoqCiAgICAqIEBkZXYgQWxsb3dzIHRoZSBjdXJyZW50IG93bmVyIHRvIHRyYW5zZmVyIGNvbnRyb2wgb2YgdGhlIGNvbnRyYWN0IHRvIGEgbmV3T3duZXIuCiAgICAqIEBwYXJhbSBfbmV3T3duZXIgVGhlIGFkZHJlc3MgdG8gdHJhbnNmZXIgb3duZXJzaGlwIHRvLgogICAgKi8KICAgIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgX25ld093bmVyKSBwdWJsaWMgb25seU93bmVyIHsKICAgICAgICByZXF1aXJlKF9uZXdPd25lciAhPSBvd25lcik7CiAgICAgICAgbmV3T3duZXIgPSBfbmV3T3duZXI7CiAgICB9CgogICAgLyoqCiAgICAqIEBkZXYgY29uZmlybSBvd25lcnNoaXAgYnkgYSBuZXcgb3duZXIKICAgICovCiAgICBmdW5jdGlvbiBjb25maXJtT3duZXJzaGlwKCkgcHVibGljIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gbmV3T3duZXIpOwogICAgICAgIE93bmVyc2hpcFRyYW5zZmVycmVkKG93bmVyLCBuZXdPd25lcik7CiAgICAgICAgb3duZXIgPSBuZXdPd25lcjsKICAgICAgICBuZXdPd25lciA9IDB4MDsKICAgIH0KfQoKY29udHJhY3QgVGhlQWJ5c3NDcm93ZHNhbGUgaXMgT3duYWJsZSwgU2FmZU1hdGggewogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBwdWJsaWMgYmFsYW5jZXM7CgogICAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgVE9LRU5fUFJJQ0VfTlVNID0gMjUwMDsKICAgIHVpbnQyNTYgcHVibGljIGNvbnN0YW50IFRPS0VOX1BSSUNFX0RFTk9NID0gMTsKCiAgICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCBQUkVTQUxFX0VUSEVSX01JTl9DT05UUklCID0gNSBldGhlcjsKICAgIHVpbnQyNTYgcHVibGljIGNvbnN0YW50IFNBTEVfRVRIRVJfTUlOX0NPTlRSSUIgPSAwLjEgZXRoZXI7CgogICAgdWludDI1NiBwdWJsaWMgdG90YWxFdGhlckNvbnRyaWJ1dGVkID0gMDsKICAgIHVpbnQyNTYgcHVibGljIHRvdGFsVG9rZW5zVG9TdXBwbHkgPSAwOwogICAgYWRkcmVzcyBwdWJsaWMgd2FsbGV0ID0gMHgwOwoKICAgIHVpbnQyNTYgcHVibGljIHByZVNhbGVTdGFydFRpbWUgPSAwOwogICAgdWludDI1NiBwdWJsaWMgcHJlU2FsZUVuZFRpbWUgPSAwOwoKICAgIHVpbnQyNTYgcHVibGljIHNhbGVTdGFydFRpbWUgPSAwOwogICAgdWludDI1NiBwdWJsaWMgc2FsZUVuZFRpbWUgPSAwOwoKICAgIHVpbnQyNTYgcHVibGljIGJvbnVzV2luZG93MUVuZFRpbWUgPSAwOwogICAgdWludDI1NiBwdWJsaWMgYm9udXNXaW5kb3cyRW5kVGltZSA9IDA7CiAgICB1aW50MjU2IHB1YmxpYyBib251c1dpbmRvdzNFbmRUaW1lID0gMDsgIAoKICAgIGV2ZW50IExvZ0NvbnRyaWJ1dGlvbihhZGRyZXNzIGluZGV4ZWQgY29udHJpYnV0b3IsIHVpbnQyNTYgYW1vdW50V2VpLCB1aW50MjU2IHRva2VuQW1vdW50LCB1aW50MjU2IHRva2VuQm9udXMsIHVpbnQyNTYgdGltZXN0YW1wKTsKCiAgICBtb2RpZmllciBjaGVja0NvbnRyaWJ1dGlvbigpIHsKICAgICAgICByZXF1aXJlKChub3cgPj0gcHJlU2FsZVN0YXJ0VGltZSAmJiBub3cgPCBwcmVTYWxlRW5kVGltZSAmJiBtc2cudmFsdWUgPj0gUFJFU0FMRV9FVEhFUl9NSU5fQ09OVFJJQikgfHwgKG5vdyA+PSBzYWxlU3RhcnRUaW1lICYmIG5vdyA8IHNhbGVFbmRUaW1lICYmIG1zZy52YWx1ZSA+PSBTQUxFX0VUSEVSX01JTl9DT05UUklCKSk7CiAgICAgICAgXzsKICAgIH0KCiAgICBmdW5jdGlvbiBUaGVBYnlzc0Nyb3dkc2FsZShhZGRyZXNzIF93YWxsZXQsIHVpbnQyNTYgX3ByZVNhbGVTdGFydFRpbWUsIHVpbnQyNTYgX3ByZVNhbGVFbmRUaW1lLCB1aW50MjU2IF9zYWxlU3RhcnRUaW1lLCB1aW50MjU2IF9zYWxlRW5kVGltZSkgcHVibGljIHsKICAgICAgICByZXF1aXJlKF9wcmVTYWxlU3RhcnRUaW1lID49IG5vdyk7CiAgICAgICAgcmVxdWlyZShfcHJlU2FsZUVuZFRpbWUgPiBfcHJlU2FsZVN0YXJ0VGltZSk7CiAgICAgICAgcmVxdWlyZShfc2FsZVN0YXJ0VGltZSA+IF9wcmVTYWxlRW5kVGltZSk7CiAgICAgICAgcmVxdWlyZShfc2FsZUVuZFRpbWUgPiBfc2FsZVN0YXJ0VGltZSk7CiAgICAgICAgcmVxdWlyZShfd2FsbGV0ICE9IGFkZHJlc3MoMCkpOwoKICAgICAgICB3YWxsZXQgPSBfd2FsbGV0OwoKICAgICAgICBwcmVTYWxlU3RhcnRUaW1lID0gX3ByZVNhbGVTdGFydFRpbWU7CiAgICAgICAgcHJlU2FsZUVuZFRpbWUgPSBfcHJlU2FsZUVuZFRpbWU7CgogICAgICAgIHNhbGVTdGFydFRpbWUgPSBfc2FsZVN0YXJ0VGltZTsKICAgICAgICBzYWxlRW5kVGltZSA9IF9zYWxlRW5kVGltZTsKCiAgICAgICAgYm9udXNXaW5kb3cxRW5kVGltZSA9IHNhbGVTdGFydFRpbWUgKyAxIGRheXM7CiAgICAgICAgYm9udXNXaW5kb3cyRW5kVGltZSA9IHNhbGVTdGFydFRpbWUgKyA0IGRheXM7CiAgICAgICAgYm9udXNXaW5kb3czRW5kVGltZSA9IHNhbGVTdGFydFRpbWUgKyAyMCBkYXlzOwogICAgfQoKICAgIGZ1bmN0aW9uIGdldEJvbnVzKCkgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiwgdWludDI1NikgewogICAgICAgIHVpbnQyNTYgbnVtZXJhdG9yID0gMDsKICAgICAgICB1aW50MjU2IGRlbm9taW5hdG9yID0gMTAwOwoKICAgICAgICBpZihub3cgPj0gcHJlU2FsZVN0YXJ0VGltZSAmJiBub3cgPCBwcmVTYWxlRW5kVGltZSkgewogICAgICAgICAgICBudW1lcmF0b3IgPSAyNTsKICAgICAgICB9IGVsc2UgaWYobm93ID49IHNhbGVTdGFydFRpbWUgJiYgbm93IDwgc2FsZUVuZFRpbWUpIHsKICAgICAgICAgICAgaWYobm93IDwgYm9udXNXaW5kb3cxRW5kVGltZSkgewogICAgICAgICAgICAgICAgbnVtZXJhdG9yID0gMTU7CiAgICAgICAgICAgIH0gZWxzZSBpZihub3cgPCBib251c1dpbmRvdzJFbmRUaW1lKSB7CiAgICAgICAgICAgICAgICBudW1lcmF0b3IgPSAxMDsKICAgICAgICAgICAgfSBlbHNlIGlmKG5vdyA8IGJvbnVzV2luZG93M0VuZFRpbWUpIHsKICAgICAgICAgICAgICAgIG51bWVyYXRvciA9IDU7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBudW1lcmF0b3IgPSAwOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiAobnVtZXJhdG9yLCBkZW5vbWluYXRvcik7CiAgICB9CgogICAgZnVuY3Rpb24gKCkgcGF5YWJsZSBwdWJsaWMgewogICAgICAgIHByb2Nlc3NDb250cmlidXRpb24oKTsKICAgIH0KCiAgICBmdW5jdGlvbiBwcm9jZXNzQ29udHJpYnV0aW9uKCkgcHJpdmF0ZSBjaGVja0NvbnRyaWJ1dGlvbiB7CiAgICAgICAgdWludDI1NiBib251c051bSA9IDA7CiAgICAgICAgdWludDI1NiBib251c0Rlbm9tID0gMTAwOwogICAgICAgIChib251c051bSwgYm9udXNEZW5vbSkgPSBnZXRCb251cygpOwogICAgICAgIHVpbnQyNTYgdG9rZW5Cb251c0Ftb3VudCA9IDA7CiAgICAgICAgdWludDI1NiB0b2tlbkFtb3VudCA9IHNhZmVEaXYoc2FmZU11bChtc2cudmFsdWUsIFRPS0VOX1BSSUNFX05VTSksIFRPS0VOX1BSSUNFX0RFTk9NKTsKCiAgICAgICAgaWYoYm9udXNOdW0gPiAwKSB7CiAgICAgICAgICAgIHRva2VuQm9udXNBbW91bnQgPSBzYWZlRGl2KHNhZmVNdWwodG9rZW5BbW91bnQsIGJvbnVzTnVtKSwgYm9udXNEZW5vbSk7CiAgICAgICAgfQoKICAgICAgICB1aW50MjU2IHRva2VuVG90YWxBbW91bnQgPSBzYWZlQWRkKHRva2VuQW1vdW50LCB0b2tlbkJvbnVzQW1vdW50KTsKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IHNhZmVBZGQoYmFsYW5jZXNbbXNnLnNlbmRlcl0sIHRva2VuVG90YWxBbW91bnQpOwoKICAgICAgICB0b3RhbEV0aGVyQ29udHJpYnV0ZWQgPSBzYWZlQWRkKHRvdGFsRXRoZXJDb250cmlidXRlZCwgbXNnLnZhbHVlKTsKICAgICAgICB0b3RhbFRva2Vuc1RvU3VwcGx5ID0gc2FmZUFkZCh0b3RhbFRva2Vuc1RvU3VwcGx5LCB0b2tlblRvdGFsQW1vdW50KTsKICAgICAgICBMb2dDb250cmlidXRpb24obXNnLnNlbmRlciwgbXNnLnZhbHVlLCB0b2tlbkFtb3VudCwgdG9rZW5Cb251c0Ftb3VudCwgbm93KTsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZ1bmRzKCkgcHVibGljIG9ubHlPd25lciB7CiAgICAgICAgd2FsbGV0LnRyYW5zZmVyKHRoaXMuYmFsYW5jZSk7CiAgICB9Cn0='.
	

]
