Class {
	#name : #SRTa94c128a138504e1f81d727cc21bcb9ae6581015,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTa94c128a138504e1f81d727cc21bcb9ae6581015 >> base64 [
	^ ''.
	

]
