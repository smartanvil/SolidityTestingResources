Class {
	#name : #SRT4da8d3de333840e6580f3d86f5a2a4c382ef60fb,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT4da8d3de333840e6580f3d86f5a2a4c382ef60fb >> base64 [
	^ ''.
	

]
