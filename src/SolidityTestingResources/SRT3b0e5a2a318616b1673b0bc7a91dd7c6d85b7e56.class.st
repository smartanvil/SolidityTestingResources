Class {
	#name : #SRT3b0e5a2a318616b1673b0bc7a91dd7c6d85b7e56,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT3b0e5a2a318616b1673b0bc7a91dd7c6d85b7e56 >> base64 [
	^ ''.
	

]
