Class {
	#name : #SRT6fa3217293bb88ec6accecc368881c33df1248f5,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT6fa3217293bb88ec6accecc368881c33df1248f5 >> base64 [
	^ ''.
	

]
