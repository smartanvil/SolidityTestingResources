Class {
	#name : #SRT556699c754085943960b03ff65ccc80b06aaf1a5,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT556699c754085943960b03ff65ccc80b06aaf1a5 >> base64 [
	^ ''.
	

]
