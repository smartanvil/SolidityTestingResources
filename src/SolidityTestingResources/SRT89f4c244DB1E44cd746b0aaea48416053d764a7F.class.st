Class {
	#name : #SRT89f4c244DB1E44cd746b0aaea48416053d764a7F,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT89f4c244DB1E44cd746b0aaea48416053d764a7F >> base64 [
	^ ''.
	

]
