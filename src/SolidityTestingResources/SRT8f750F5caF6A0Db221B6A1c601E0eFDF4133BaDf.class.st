Class {
	#name : #SRT8f750F5caF6A0Db221B6A1c601E0eFDF4133BaDf,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT8f750F5caF6A0Db221B6A1c601E0eFDF4133BaDf >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTU7CgoKLyoqCiAqIEB0aXRsZSBPd25hYmxlCiAqIEBkZXYgVGhlIE93bmFibGUgY29udHJhY3QgaGFzIGFuIG93bmVyIGFkZHJlc3MsIGFuZCBwcm92aWRlcyBiYXNpYyBhdXRob3JpemF0aW9uIGNvbnRyb2wKICogZnVuY3Rpb25zLCB0aGlzIHNpbXBsaWZpZXMgdGhlIGltcGxlbWVudGF0aW9uIG9mICJ1c2VyIHBlcm1pc3Npb25zIi4KICovCmNvbnRyYWN0IE93bmFibGUgewogIGFkZHJlc3MgcHVibGljIG93bmVyOwoKCiAgZXZlbnQgT3duZXJzaGlwVHJhbnNmZXJyZWQoYWRkcmVzcyBpbmRleGVkIHByZXZpb3VzT3duZXIsIGFkZHJlc3MgaW5kZXhlZCBuZXdPd25lcik7CgoKICAvKioKICAgKiBAZGV2IFRoZSBPd25hYmxlIGNvbnN0cnVjdG9yIHNldHMgdGhlIG9yaWdpbmFsIGBvd25lcmAgb2YgdGhlIGNvbnRyYWN0IHRvIHRoZSBzZW5kZXIKICAgKiBhY2NvdW50LgogICAqLwogIGZ1bmN0aW9uIE93bmFibGUoKSB7CiAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgfQoKCiAgLyoqCiAgICogQGRldiBUaHJvd3MgaWYgY2FsbGVkIGJ5IGFueSBhY2NvdW50IG90aGVyIHRoYW4gdGhlIG93bmVyLgogICAqLwogIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICBfOwogIH0KCgogIC8qKgogICAqIEBkZXYgQWxsb3dzIHRoZSBjdXJyZW50IG93bmVyIHRvIHRyYW5zZmVyIGNvbnRyb2wgb2YgdGhlIGNvbnRyYWN0IHRvIGEgbmV3T3duZXIuCiAgICogQHBhcmFtIG5ld093bmVyIFRoZSBhZGRyZXNzIHRvIHRyYW5zZmVyIG93bmVyc2hpcCB0by4KICAgKi8KICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld093bmVyKSBvbmx5T3duZXIgcHVibGljIHsKICAgIHJlcXVpcmUobmV3T3duZXIgIT0gYWRkcmVzcygwKSk7CiAgICBPd25lcnNoaXBUcmFuc2ZlcnJlZChvd25lciwgbmV3T3duZXIpOwogICAgb3duZXIgPSBuZXdPd25lcjsKICB9Cgp9CgovKioKICogQHRpdGxlIFBhdXNhYmxlCiAqIEBkZXYgQmFzZSBjb250cmFjdCB3aGljaCBhbGxvd3MgY2hpbGRyZW4gdG8gaW1wbGVtZW50IGFuIGVtZXJnZW5jeSBzdG9wIG1lY2hhbmlzbS4KICovCmNvbnRyYWN0IFBhdXNhYmxlIGlzIE93bmFibGUgewogIGV2ZW50IFBhdXNlKCk7CiAgZXZlbnQgVW5wYXVzZSgpOwoKICBib29sIHB1YmxpYyBwYXVzZWQgPSBmYWxzZTsKCgogIC8qKgogICAqIEBkZXYgTW9kaWZpZXIgdG8gbWFrZSBhIGZ1bmN0aW9uIGNhbGxhYmxlIG9ubHkgd2hlbiB0aGUgY29udHJhY3QgaXMgbm90IHBhdXNlZC4KICAgKi8KICBtb2RpZmllciB3aGVuTm90UGF1c2VkKCkgewogICAgcmVxdWlyZSghcGF1c2VkKTsKICAgIF87CiAgfQoKICAvKioKICAgKiBAZGV2IE1vZGlmaWVyIHRvIG1ha2UgYSBmdW5jdGlvbiBjYWxsYWJsZSBvbmx5IHdoZW4gdGhlIGNvbnRyYWN0IGlzIHBhdXNlZC4KICAgKi8KICBtb2RpZmllciB3aGVuUGF1c2VkKCkgewogICAgcmVxdWlyZShwYXVzZWQpOwogICAgXzsKICB9CgogIC8qKgogICAqIEBkZXYgY2FsbGVkIGJ5IHRoZSBvd25lciB0byBwYXVzZSwgdHJpZ2dlcnMgc3RvcHBlZCBzdGF0ZQogICAqLwogIGZ1bmN0aW9uIHBhdXNlKCkgb25seU93bmVyIHdoZW5Ob3RQYXVzZWQgcHVibGljIHsKICAgIHBhdXNlZCA9IHRydWU7CiAgICBQYXVzZSgpOwogIH0KCiAgLyoqCiAgICogQGRldiBjYWxsZWQgYnkgdGhlIG93bmVyIHRvIHVucGF1c2UsIHJldHVybnMgdG8gbm9ybWFsIHN0YXRlCiAgICovCiAgZnVuY3Rpb24gdW5wYXVzZSgpIG9ubHlPd25lciB3aGVuUGF1c2VkIHB1YmxpYyB7CiAgICBwYXVzZWQgPSBmYWxzZTsKICAgIFVucGF1c2UoKTsKICB9Cn0KCi8qKgogKiBAdGl0bGUgU2FmZU1hdGgKICogQGRldiBNYXRoIG9wZXJhdGlvbnMgd2l0aCBzYWZldHkgY2hlY2tzIHRoYXQgdGhyb3cgb24gZXJyb3IKICovCmxpYnJhcnkgU2FmZU1hdGggewogIGZ1bmN0aW9uIG11bCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSAqIGI7CiAgICBhc3NlcnQoYSA9PSAwIHx8IGMgLyBhID09IGIpOwogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBkaXYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIC8vIGFzc2VydChiID4gMCk7IC8vIFNvbGlkaXR5IGF1dG9tYXRpY2FsbHkgdGhyb3dzIHdoZW4gZGl2aWRpbmcgYnkgMAogICAgdWludDI1NiBjID0gYSAvIGI7CiAgICAvLyBhc3NlcnQoYSA9PSBiICogYyArIGEgJSBiKTsgLy8gVGhlcmUgaXMgbm8gY2FzZSBpbiB3aGljaCB0aGlzIGRvZXNuJ3QgaG9sZAogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBzdWIodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIGFzc2VydChiIDw9IGEpOwogICAgcmV0dXJuIGEgLSBiOwogIH0KCiAgZnVuY3Rpb24gYWRkKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhICsgYjsKICAgIGFzc2VydChjID49IGEpOwogICAgcmV0dXJuIGM7CiAgfQp9CgovKioKICogQHRpdGxlIExpZlByZXNhbGUKICogQGRldiBDb250cmFjdCB0byByYWlzZSBhIG1heCBhbW91bnQgb2YgRXRoZXIgYmVmb3JlIFRHRQogKgogKiBUaGUgdG9rZW4gcmF0ZSBpcyAxMSBMaWYgcGVyIEV0aGVyLCBpZiB5b3Ugc2VuZCAxMCBFdGhlcnMgeW91IHdpbGwKICogcmVjZWl2ZSAxMTAgTGlmcyBhZnRlciBUR0UgZW5kcwogKiBUaGUgY29udHJhY3QgaXMgcGF1c2FibGUgYW5kIGl0IHN0YXJ0cyBpbiBwYXVzZWQgc3RhdGUKICovCgovKioKICogVEVSTVMgQU5EIENPTkRJVElPTlMKICoKICogQnkgc2VuZGluZyBFdGhlciB0byB0aGlzIGNvbnRyYWN0IEkgYWdyZWUgdG8gdGhlIGZvbGxvd2luZyB0ZXJtcwogKiBhbmQgY29uZGl0aW9uczoKICoKClNpbXBsZSBBZ3JlZW1lbnQgZm9yIEZ1dHVyZSBUb2tlbnMKVGhpcyBTaW1wbGUgQWdyZWVtZW50IGZvciBGdXR1cmUgVG9rZW5zICh0aGlzIOKAnEFncmVlbWVudOKAnSkgaXMgZW50ZXJlZCBpbnRvIG9uIGJldHdlZW4gV1QgTGltaXRlZCAodGhlIOKAnENvbXBhbnnigJ0pIGFuZCAodGhlIOKAnEJ1eWVy4oCdKSBpbiBjb25uZWN0aW9uIHdpdGggQ29tcGFueeKAmXMgY3JlYXRpb24gYW5kIGRpc3RyaWJ1dGlvbiBvZiB0aGUgTCYjMjM3O2YgYmxvY2tjaGFpbiB0b2tlbiAo4oCcUHJvamVjdCBUb2tlbuKAnSkgaW4gZnVydGhlcmFuY2Ugb2YgdGhlIGVzdGFibGlzaG1lbnQgYW5kIG9wZXJhdGlvbiBvZiBhIEIyQiBtYXJrZXRwbGFjZSBmb3IgdHJhdmVsIGludmVudG9yeSBjYWxsZWQgV2luZGluZyBUcmVlLCBhcyBkZXNjcmliZWQgaW4gdGhlIFdoaXRlIFBhcGVyLgpQbGVhc2Ugbm90ZSB0aGF0IHRoZSBhZ3JlZW1lbnQgYmVsb3cgb25seSBjb25jZXJucyB0aGUgcHJlLXNhbGUgdG9rZW4gYWxsb2NhdGlvbiBhbmQgbm90IHRoZSB0aGUgVG9rZW4gRGlzdHJpYnV0aW9uIEV2ZW50LCB3aGljaCB3aWxsIGhhdmUgaXRzIG93biBydWxlcywgZGVzY3JpYmVkIGluIEV4aGliaXQgQS4KTk9XLCBUSEVSRUZPUkUsIGluIGNvbnNpZGVyYXRpb24gb2YgdGhlIGFib3ZlLCBDb21wYW55IGFuZCBCdXllciBoZXJlYnkgYWdyZWUgYXMgZm9sbG93czoKRGVmaW5pdGlvbnMKRGVmaW5pdGlvbnMgb2YgQ2VydGFpbiBUZXJtcy4gVGhlIHRlcm1zIGRlZmluZWQgaW4gdGhpcyBzZWN0aW9uLCB3aGVuZXZlciB1c2VkIGluIHRoaXMgQWdyZWVtZW50IChpbmNsdWRpbmcgaW4gdGhlIEV4aGliaXRzKSwgc2hhbGwgaGF2ZSB0aGUgcmVzcGVjdGl2ZSBtZWFuaW5ncyBpbmRpY2F0ZWQgYmVsb3cuCkFmZmlsaWF0ZTogd2l0aCByZXNwZWN0IHRvIGFueSBQZXJzb24sIGFueSBvdGhlciBQZXJzb24gZGlyZWN0bHkgb3IgaW5kaXJlY3RseSBjb250cm9sbGluZywgY29udHJvbGxlZCBieSBvciB1bmRlciBjb21tb24gY29udHJvbCB3aXRoIHN1Y2ggUGVyc29uLgpCb251cyBSYXRlOiBzaGFsbCBlcXVhbCAxMCBwZXJjZW50ICglKS4KRVJDMjA6IHRoZSBFdGhlcmV1bSBSZXF1ZXN0IGZvciBDb21tZW50IE5vLiAyMCBzbWFydCBjb250cmFjdCBzdGFuZGFyZCBzZXR0aW5nIHRoZSBpbml0aWFsIGd1aWRlbGluZXMgZm9yIGEgYmxvY2tjaGFpbiB0b2tlbiB0aGF0IGNhbiBiZSBvZmZlcmVkIHRocm91Z2gsIGFuZCBhdmFpbGFibGUgb24sIHRoZSBFdGhlcmV1bSBuZXR3b3JrIGluIGEgc3RhbmRhcmRpemVkIGZvcm1hdCBpbiBvcmRlciB0byBiZSB0cmFkYWJsZSB3aXRoIG90aGVyIGJsb2NrY2hhaW4gdG9rZW5zIG9uIEV0aGVyZXVtIChodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9pc3N1ZXMvMjApLgpFVEg6IFRoZSBibG9ja2NoYWluIHRva2VuIG9mIEV0aGVyZXVtLgpFdGhlcmV1bTogbWVhbnMgdGhlIHNtYXJ0IGNvbnRyYWN0IHByb3RvY29sLCB2aXJ0dWFsIG1hY2hpbmUgYW5kIGRlY2VudHJhbGl6ZWQgY29uc2Vuc3VzIG1lY2hhbmlzbSBpbmNsdWRpbmcgYWxsIGl0cyByZWxhdGVkIGNvbXBvbmVudHMgYW5kIHByb3RvY29sLXJlbGF0ZWQgcHJvamVjdHMgYm90aCBwcmVzZW50IGFuZCBmdXR1cmUgdGhhdCBpcyBnb3Zlcm5lZCBieSB0aGUgRXRoZXJldW0gRm91bmRhdGlvbiBiYXNlZCBpbiBadWcsIFN3aXR6ZXJsYW5kLCB3aGljaCBiZWdhbiBvcGVyYXRpb24gKEdlbmVzaXMgQmxvY2spIG9uIEp1bHkgMzB0aCwgMjAxNS4KR292ZXJubWVudGFsIEF1dGhvcml0eTogYW55IG5hdGlvbiBvciBnb3Zlcm5tZW50LCBhbnkgc3RhdGUgb3Igb3RoZXIgcG9saXRpY2FsIHN1YmRpdmlzaW9uIHRoZXJlb2YsIGFueSBlbnRpdHkgZXhlcmNpc2luZyBsZWdpc2xhdGl2ZSwganVkaWNpYWwgb3IgYWRtaW5pc3RyYXRpdmUgZnVuY3Rpb25zIG9mIG9yIHBlcnRhaW5pbmcgdG8gZ292ZXJubWVudCwgaW5jbHVkaW5nLCB3aXRob3V0IGxpbWl0YXRpb24sIGFueSBnb3Zlcm5tZW50YWwgYXV0aG9yaXR5LCBhZ2VuY3ksIGRlcGFydG1lbnQsIGJvYXJkLCBjb21taXNzaW9uIG9yIGluc3RydW1lbnRhbGl0eSwgYW5kIGFueSBjb3VydCwgdHJpYnVuYWwgb3IgYXJiaXRyYXRvcihzKSBvZiBjb21wZXRlbnQganVyaXNkaWN0aW9uLCBhbmQgYW55IHNlbGYtcmVndWxhdG9yeSBvcmdhbml6YXRpb24uCkludGVsbGVjdHVhbCBQcm9wZXJ0eTogYWxsIG9mIHRoZSBmb2xsb3dpbmcgaW4gYW55IGp1cmlzZGljdGlvbiB0aHJvdWdob3V0IHRoZSB3b3JsZDogKGkpIGFsbCBpbnZlbnRpb25zICh3aGV0aGVyIHBhdGVudGFibGUgb3IgdW5wYXRlbnRhYmxlIGFuZCB3aGV0aGVyIG9yIG5vdCByZWR1Y2VkIHRvIHByYWN0aWNlKSwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgUHJvamVjdCB0ZWNobm9sb2d5LCBhbGwgaW1wcm92ZW1lbnRzIHRoZXJldG8sIGFuZCBhbGwgcGF0ZW50cywgcGF0ZW50IGFwcGxpY2F0aW9ucywgYW5kIHBhdGVudCBkaXNjbG9zdXJlcywgdG9nZXRoZXIgd2l0aCBhbGwgcmVpc3N1YW5jZXMsIGNvbnRpbnVhdGlvbnMsIGRpdmlzaW9ucywgY29udGludWF0aW9ucyBpbi1wYXJ0LCByZXZpc2lvbnMsIGFuZCBleHRlbnNpb25zOyAoaWkpIGFsbCB0cmFkZW1hcmtzLCBzZXJ2aWNlIG1hcmtzLCB0cmFkZSBuYW1lcywgdHJhZGUgZHJlc3MsIGxvZ29zLCBidXNpbmVzcyBhbmQgcHJvZHVjdCBuYW1lcywgY29ycG9yYXRlIG5hbWVzLCBJbnRlcm5ldCBkb21haW4gbmFtZXMsIHNsb2dhbnMsIG90aGVyIHNvdXJjZSBpZGVudGlmaWVycywgdG9nZXRoZXIgd2l0aCBhbGwgdHJhbnNsYXRpb25zLCBhZGFwdGF0aW9ucywgZGVyaXZhdGlvbnMsIGFuZCBjb21iaW5hdGlvbnMgdGhlcmVvZiBhbmQgaW5jbHVkaW5nIGFsbCBnb29kd2lsbCBhc3NvY2lhdGVkIHRoZXJld2l0aCwgYW5kIGFsbCBhcHBsaWNhdGlvbnMsIHJlZ2lzdHJhdGlvbnMgYW5kIHJlbmV3YWxzIGluIGNvbm5lY3Rpb24gdGhlcmV3aXRoOyAoaWlpKSBhbGwgY29weXJpZ2h0YWJsZSB3b3JrcywgYWxsIGNvcHlyaWdodHMgYW5kIGFsbCBhcHBsaWNhdGlvbnMsIHJlZ2lzdHJhdGlvbnMgYW5kIHJlbmV3YWxzIGluIGNvbm5lY3Rpb24gdGhlcmV3aXRoLCBhbmQgYWxsIG1vcmFsIHJpZ2h0cyAoYW5kIHNpbWlsYXIgbm9uLWFzc2lnbmFibGUgcmlnaHRzKSBhbmQgYWxsIGJlbmVmaXRzIG9mIHdhaXZlcnMgb2YgbW9yYWwgcmlnaHRzIChhbmQgc2ltaWxhciBub24tYXNzaWduYWJsZSByaWdodHMpIHRoZXJlaW47IChpdikgYWxsIHRyYWRlIHNlY3JldHMgYW5kIGNvbmZpZGVudGlhbCwgdGVjaG5pY2FsIGFuZCBidXNpbmVzcyBpbmZvcm1hdGlvbiAoaW5jbHVkaW5nIGJ1dCBub3QgbGltaXRlZCB0byBpZGVhcywgcmVzZWFyY2ggYW5kIGRldmVsb3BtZW50LCBhbGdvcml0aG1zLCBjb21wb3NpdGlvbnMsIHByb2Nlc3NlcywgZGVzaWducywgZHJhd2luZ3MsIGZvcm11bGFlLCB0cmFkZSBzZWNyZXRzLCBrbm93LWhvdywgaW5kdXN0cmlhbCBtb2RlbHMsIGJ1c2luZXNzIG1ldGhvZHMsIHRlY2huaWNhbCBkYXRhIGFuZCBpbmZvcm1hdGlvbiwgZW5naW5lZXJpbmcgYW5kIHRlY2huaWNhbCBkcmF3aW5ncywgcHJvZHVjdCBzcGVjaWZpY2F0aW9ucyBhbmQgY29uZmlkZW50aWFsIGJ1c2luZXNzIGluZm9ybWF0aW9uKTsgKHYpIG1hc2sgd29yayBhbmQgb3RoZXIgc2VtaWNvbmR1Y3RvciBjaGlwIHJpZ2h0cyBhbmQgYWxsIGFwcGxpY2F0aW9ucywgcmVnaXN0cmF0aW9ucyBhbmQgcmVuZXdhbHMgaW4gY29ubmVjdGlvbiB0aGVyZXdpdGg7ICh2aSkgc29mdHdhcmU7ICh2aWkpIGFsbCBvdGhlciBpbnRlbGxlY3R1YWwgcHJvcGVydHkgYW5kIHByb3ByaWV0YXJ5IHJpZ2h0czsgYW5kICh2aWlpKSBjb3BpZXMgYW5kIHRhbmdpYmxlIGVtYm9kaW1lbnRzIHRoZXJlb2YgKGluIHdoYXRldmVyIGZvcm0gb3IgbWVkaXVtLCBpbmNsdWRpbmcgZWxlY3Ryb25pYyBtZWRpYSkuCkxhd3M6IGxhd3MsIHN0YXR1dGVzLCBvcmRpbmFuY2VzLCBydWxlcywgcmVndWxhdGlvbnMsIGp1ZGdtZW50cywgaW5qdW5jdGlvbnMsIG9yZGVycyBhbmQgZGVjcmVlcy4KT3JnYW5pemF0aW9uYWwgRG9jdW1lbnRzOiB0aGUgYXJ0aWNsZXMgb2YgaW5jb3Jwb3JhdGlvbiwgY2VydGlmaWNhdGUgb2YgaW5jb3Jwb3JhdGlvbiwgY2hhcnRlciwgYnktbGF3cywgYXJ0aWNsZXMgb2YgZm9ybWF0aW9uLCBjZXJ0aWZpY2F0ZSBvZiBmb3JtYXRpb24sIHJlZ3VsYXRpb25zLCBvcGVyYXRpbmcgYWdyZWVtZW50LCBjZXJ0aWZpY2F0ZSBvZiBsaW1pdGVkIHBhcnRuZXJzaGlwLCBwYXJ0bmVyc2hpcCBhZ3JlZW1lbnQgYW5kIGFsbCBvdGhlciBzaW1pbGFyIGRvY3VtZW50cywgaW5zdHJ1bWVudHMgb3IgY2VydGlmaWNhdGVzIGV4ZWN1dGVkLCBhZG9wdGVkIG9yIGZpbGVkIGluIGNvbm5lY3Rpb24gd2l0aCB0aGUgY3JlYXRpb24sIGZvcm1hdGlvbiBvciBvcmdhbml6YXRpb24gb2YgYSBQZXJzb24sIGluY2x1ZGluZyBhbnkgYW1lbmRtZW50cyB0aGVyZXRvLgpQZXJzb246IGFuIGluZGl2aWR1YWwgb3IgbGVnYWwgZW50aXR5IG9yIHBlcnNvbiwgaW5jbHVkaW5nIGEgZ292ZXJubWVudCBvciBwb2xpdGljYWwgc3ViZGl2aXNpb24gb3IgYW4gYWdlbmN5IG9yIGluc3RydW1lbnRhbGl0eSB0aGVyZW9mLgpQcm9qZWN0OiB0aGUgYmxvY2tjaGFpbi1lbmFibGVkIG5ldHdvcmsgYW5kL29yIGRlY2VudHJhbGl6ZWQgY29uc2Vuc3VzIHByb2plY3QgYmVpbmcgZGV2ZWxvcGVkIGJ5IENvbXBhbnkgdGhhdCB3aWxsIHV0aWxpemUgdGhlIFByb2plY3QgVG9rZW4gYXMgbmF0aXZlIHRvIGl0cyBvcGVyYXRpb25zIGFuZC9vciBmdW5jdGlvbmluZy4KUHJvamVjdCBGb3VuZGVyczogTWFrc2ltIEl6bWF5bG92LCBKYWt1YiBWeXNva3ksIEF1Z3VzdG8gTGVtYmxlLCBQZWRybyBBbmRlcnNvbi4KUHJvamVjdCBQbGFuOiB0aGUgcGxhbiBjb250YWluaW5nIGEgZGV0YWlsZWQgb3ZlcnZpZXcgb2YgbWFqb3IgbWlsZXN0b25lcyB0byBiZSBhY2hpZXZlZCBhbmQgYXBwcm94aW1hdGUgZGF0ZXMgb2YgZXhlY3V0aW9uIGFuZCBsYXVuY2ggb2YgdGhlIGJsb2NrY2hhaW4tZW5hYmxlZCBuZXR3b3JrIG9mIHRoZSBQcm9qZWN0LgpQcm9qZWN0IFRva2VuOiBMJiMyMzc7ZiBibG9ja2NoYWluIHRva2VuLCBpLmUuIGFuIEVSQzIwIGJsb2NrY2hhaW4gdG9rZW4gY3JlYXRlZCBpbiBjb25uZWN0aW9uIHdpdGggYW5kIG5hdGl2ZSB0byB0aGUgUHJvamVjdCB3aXRoIHRoZSBjaGFyYWN0ZXJpc3RpY3MgZGVzY3JpYmVkIGluIHRoZSBUb2tlbiBDaGFyYWN0ZXJpc3RpY3MgRG9jdW1lbnQgYW5kIGRpc3RyaWJ1dGVkIHZpYSAoaSkgYSBUb2tlbiBEaXN0cmlidXRpb24gRXZlbnQgYW5kL29yIChpaSkgYSBtZXRob2RvbG9neSBkZXNjcmliZWQgaW4gdGhlIFRva2VuIERpc3RyaWJ1dGlvbiBQbGFuLgpQcm9qZWN0IFRva2VuIFByb3RvY29sOiBhIGJsb2NrY2hhaW4gYmFzZWQgcHJvdG9jb2wgYWltaW5nIGF0IHByb3ZpZGluZyBhIGRlY2VudHJhbGl6ZWQgQjJCIG1hcmtldHBsYWNlIGZvciB0cmF2ZWwgaW52ZW50b3J5IGNhbGxlZCBXaW5kaW5nIFRyZWUuClB1cmNoYXNlIFByaWNlOiBhcyBkZWZpbmVkIGluIFNlY3Rpb24gMi4KVEdFOiBUb2tlbiBHZW5lcmF0aW5nIEV2ZW50IHRha2luZyBwbGFjZSBvbiBOb3ZlbWJlciAxc3QsIDIwMTcuClRva2VuIENoYXJhY3RlcmlzdGljcyBEb2N1bWVudDogYXR0YWNoZWQgaGVyZXRvIGFzIEV4aGliaXQgQi4KVG9rZW4gRGlzdHJpYnV0aW9uIEV2ZW50OiB0aGUgaW50ZW5kZWQgb2ZmZXJpbmcgb2YgUHJvamVjdCBUb2tlbnMgdG8gdGhlIGdlbmVyYWwgcHVibGljIG9yIG90aGVyIHNwZWNpZmllZCBpbnZlc3RvcnMgYXMgdGhlIGNhc2UgbWF5IGJlLgpUb2tlbiBEaXN0cmlidXRpb24gUGxhbjogYXR0YWNoZWQgaGVyZXRvIGFzIEV4aGliaXQgQS4KVG9rZW4gUHJpY2U6IHByaWNlIG9mIG9uZSBQcm9qZWN0IFRva2VuLgpXaGl0ZSBQYXBlcjogdGhlIHRlY2huaWNhbCBkb2N1bWVudCBkcmFmdGVkIGFuZCBwdWJsaXNoZWQgYnkgQ29tcGFueSBleHBsYWluaW5nIHRoZSBQcm9qZWN0IGFuZCBpdHMgY29tcG9uZW50cywgaW5jbHVkaW5nIHRoZSBQcm9qZWN0IFBsYW4gYW5kIHRlY2huaWNhbCBjaGFyYWN0ZXJpc3RpY3Mgb2YgdGhlIFByb2plY3QuIEF0dGFjaGVkIGhlcmV0byBhcyBFeGhpYml0IEMuClB1cmNoYXNlLCBTYWxlIGFuZCBEaXN0cmlidXRpb24gb2YgVG9rZW5zCk9uIHRoZSBUb2tlbiBEaXN0cmlidXRpb24gRXZlbnQsIENvbXBhbnkgc2hhbGwgZGVsaXZlciB0byBCdXllciBhIG51bWJlciBvZiBQcm9qZWN0IFRva2VucyBjYWxjdWxhdGVkIGJ5IHRoZSBmb2xsb3dpbmcgZm9ybXVsYToKeD1QdOKIlygxK2IpCndoZXJlIOKAnHjigJ0gaXMgdGhlIG51bWJlciBvZiB0b2tlbnMgdGhhdCB0aGUgQnV5ZXIgd2lsbCByZWNlaXZlIGFmdGVyIHRoZSBUb2tlbiBEaXN0cmlidXRpb24gRXZlbnQsIOKAnFDigJ0gaXMgUHVyY2hhc2UgUHJpY2UsIOKAnHTigJ0gaXMgVG9rZW4gUHJpY2UgKGRldGVybWluZWQgYXQgdGhlIGVuZCBvZiB0aGUgVG9rZW4gRGlzdHJpYnV0aW9uIEV2ZW50KSBhbmQg4oCcYuKAnSBpcyBCb251cyBSYXRlIChlLmcuIDAuMSBmb3IgMTAlKS4KRXhhbXBsZTogMTAwIEVUSCAvIDEgRVRIICogKDEgKyAwLjEpID0gMTEwIHRva2Vucy4KVXNhZ2UgTGljZW5zZQpPd25lcnNoaXAgb2YgUHJvamVjdCBUb2tlbnMgY2FycmllcyBubyByaWdodHMsIHdoZXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLCBvdGhlciB0aGFuIGEgbGltaXRlZCByaWdodCAobGljZW5zZSkgdG8gdXNlIHRoZSBQcm9qZWN0IFRva2VuIFByb3RvY29sLCBpZiBhbmQgdG8gdGhlIGV4dGVudCB0aGUgUHJvamVjdCBUb2tlbiBQcm90b2NvbCBoYXMgYmVlbiBzdWNjZXNzZnVsbHkgY29tcGxldGVkIGFuZCBsYXVuY2hlZC4KSW4gcGFydGljdWxhciwgQnV5ZXIgdW5kZXJzdGFuZHMgYW5kIGFjY2VwdHMgdGhhdCBQcm9qZWN0IFRva2VucyBkbyBub3QgcmVwcmVzZW50IG9yIGNvbnN0aXR1dGUgYW55IG93bmVyc2hpcCByaWdodCBvciBzdGFrZSwgc2hhcmUgb3Igc2VjdXJpdHkgb3IgZXF1aXZhbGVudCByaWdodHMgbm9yIGFueSByaWdodCB0byByZWNlaXZlIGZ1dHVyZSByZXZlbnVlcywgc2hhcmVzIG9yIGFueSBvdGhlciBmb3JtIG9mIHBhcnRpY2lwYXRpb24gb3IgZ292ZXJuYW5jZSByaWdodCBpbiBvciByZWxhdGluZyB0byB0aGUgUHJvamVjdCBUb2tlbiBQcm90b2NvbCBhbmQvb3IgdGhlIFByb2plY3QgVG9rZW5zLgpCeSB0cmFuc2ZlcnJpbmcgRVRIIHRvIENvbXBhbnkgYW5kL29yIHJlY2VpdmluZyBQcm9qZWN0IFRva2Vucywgbm8gZm9ybSBvZiBwYXJ0bmVyc2hpcCwgam9pbnQgdmVudHVyZSBvciBhbnkgc2ltaWxhciByZWxhdGlvbnNoaXAgYmV0d2VlbiB0aGUgQnV5ZXIgYW5kIENvbXBhbnkgaXMgY3JlYXRlZC4KUmlza3MKVGhlIEJ1eWVyIHVuZGVyc3RhbmRzIGFuZCBhY2NlcHRzIHRoZSByaXNrcyBpbiBjb25uZWN0aW9uIHdpdGggbWFraW5nIGEgQ29udHJpYnV0aW9uIHRvIENvbXBhbnkgYW5kIGNyZWF0aW5nIFByb2plY3QgVG9rZW5zLiBJbiBwYXJ0aWN1bGFyLCBidXQgbm90IGNvbmNsdWRpbmcsIHRoZSBCdXllciB1bmRlcnN0YW5kcyB0aGUgaW5oZXJlbnQgcmlza3MgbGlzdGVkIGhlcmVpbmFmdGVyIGFzIHdlbGwgYXMgaW4gdGhlIENvbnRyaWJ1dGlvbiBUZXJtcywgd2hpY2ggd2lsbCBiZSBoYW5kZWQgb3ZlciB0byBCdXllcjoKUmlzayBvZiBzb2Z0d2FyZSB3ZWFrbmVzc2VzOiBUaGUgQnV5ZXIgdW5kZXJzdGFuZHMgYW5kIGFjY2VwdHMgdGhhdCB0aGUgU21hcnQgQ29udHJhY3QgU3lzdGVtIGNvbmNlcHQsIHRoZSB1bmRlcmx5aW5nIHNvZnR3YXJlIGFwcGxpY2F0aW9uIGFuZCBzb2Z0d2FyZSBwbGF0Zm9ybSAoaS5lLiB0aGUgRXRoZXJldW0gYmxvY2tjaGFpbikgaXMgc3RpbGwgaW4gYW4gZWFybHkgZGV2ZWxvcG1lbnQgc3RhZ2UgYW5kIHVucHJvdmVuLCB3aHkgdGhlcmUgaXMgbm8gd2FycmFudHkgdGhhdCB0aGUgcHJvY2VzcyBmb3IgY3JlYXRpbmcgUHJvamVjdCBUb2tlbnMgd2lsbCBiZSB1bmludGVycnVwdGVkIG9yIGVycm9yLWZyZWUgYW5kIHdoeSB0aGVyZSBpcyBhbiBpbmhlcmVudCByaXNrIHRoYXQgdGhlIHNvZnR3YXJlIGNvdWxkIGNvbnRhaW4gd2Vha25lc3NlcywgdnVsbmVyYWJpbGl0aWVzIG9yIGJ1Z3MgY2F1c2luZywgaW50ZXIgYWxpYSwgdGhlIGNvbXBsZXRlIGxvc3Mgb2YgRVRIIGFuZC9vciBQcm9qZWN0IFRva2Vucy4KUmVndWxhdG9yeSByaXNrOiBUaGUgQnV5ZXIgdW5kZXJzdGFuZHMgYW5kIGFjY2VwdHMgdGhhdCB0aGUgYmxvY2tjaGFpbiB0ZWNobm9sb2d5IGFsbG93cyBuZXcgZm9ybXMgb2YgaW50ZXJhY3Rpb24gYW5kIHRoYXQgaXQgaXMgcG9zc2libGUgdGhhdCBjZXJ0YWluIGp1cmlzZGljdGlvbnMgd2lsbCBhcHBseSBleGlzdGluZyByZWd1bGF0aW9ucyBvbiwgb3IgaW50cm9kdWNlIG5ldyByZWd1bGF0aW9ucyBhZGRyZXNzaW5nLCBibG9ja2NoYWluIHRlY2hub2xvZ3kgYmFzZWQgYXBwbGljYXRpb25zLCB3aGljaCBtYXkgYmUgY29udHJhcnkgdG8gdGhlIGN1cnJlbnQgc2V0dXAgb2YgdGhlIFNtYXJ0IENvbnRyYWN0IFN5c3RlbSBhbmQgd2hpY2ggbWF5LCBpbnRlciBhbGlhLCByZXN1bHQgaW4gc3Vic3RhbnRpYWwgbW9kaWZpY2F0aW9ucyBvZiB0aGUgU21hcnQgQ29udHJhY3QgU3lzdGVtIGFuZC9vciB0aGUgUHJvamVjdCBUb2tlbiBQcm90b2NvbCwgaW5jbHVkaW5nIGl0cyB0ZXJtaW5hdGlvbiBhbmQgdGhlIGxvc3Mgb2YgUHJvamVjdCBUb2tlbnMgZm9yIHRoZSBCdXllci4KUmlzayBvZiBhYmFuZG9ubWVudCAvIGxhY2sgb2Ygc3VjY2VzczogVGhlIEJ1eWVyIHVuZGVyc3RhbmRzIGFuZCBhY2NlcHRzIHRoYXQgdGhlIGNyZWF0aW9uIG9mIHRoZSBQcm9qZWN0IFRva2VucyBhbmQgdGhlIGRldmVsb3BtZW50IG9mIHRoZSBQcm9qZWN0IFRva2VuIFByb3RvY29sIG1heSBiZSBhYmFuZG9uZWQgZm9yIGEgbnVtYmVyIG9mIHJlYXNvbnMsIGluY2x1ZGluZyBsYWNrIG9mIGludGVyZXN0IGZyb20gdGhlIHB1YmxpYywgbGFjayBvZiBmdW5kaW5nLCBsYWNrIG9mIGNvbW1lcmNpYWwgc3VjY2VzcyBvciBwcm9zcGVjdHMgKGUuZy4gY2F1c2VkIGJ5IGNvbXBldGluZyBwcm9qZWN0cykuIFRoZSBCdXllciB0aGVyZWZvcmUgdW5kZXJzdGFuZHMgdGhhdCB0aGVyZSBpcyBubyBhc3N1cmFuY2UgdGhhdCwgZXZlbiBpZiB0aGUgUHJvamVjdCBUb2tlbiBQcm90b2NvbCBpcyBwYXJ0aWFsbHkgb3IgZnVsbHkgZGV2ZWxvcGVkIGFuZCBsYXVuY2hlZCwgdGhlIEJ1eWVyIHdpbGwgcmVjZWl2ZSBhbnkgYmVuZWZpdHMgdGhyb3VnaCB0aGUgUHJvamVjdCBUb2tlbnMgaGVsZCBieSBoaW0uClJpc2sgb2Ygd2l0aGRyYXdpbmcgcGFydG5lcnM6IFRoZSBCdXllciB1bmRlcnN0YW5kcyBhbmQgYWNjZXB0cyB0aGF0IHRoZSBUR0UgYW5kIHRoZSBmZWFzaWJpbGl0eSBvZiB0aGUgUHJvamVjdCBhcyBhIHdob2xlIGRlcGVuZHMgc3Ryb25nbHkgb24gdGhlIGNvbGxhYm9yYXRpb24gb2YgYmFua3MgYW5kIG90aGVyIGNydWNpYWwgcGFydG5lcnMgb2YgQ29tcGFueS4gVGhlIEJ1eWVyIHRoZXJlZm9yZSB1bmRlcnN0YW5kcyB0aGF0IHRoZXJlIGlzIG5vIGFzc3VyYW5jZSB0aGF0IFRHRSB3aWxsIHRha2UgcGxhY2UgYXMgZm9yZXNlZW4gb3IgdGhlIFByb2plY3QgYXMgYSB3aG9sZSB3aWxsIGJlIHN1Y2Nlc3NmdWxseSBleGVjdXRlZC4KUmlzayBhc3NvY2lhdGVkIHdpdGggb3RoZXIgYXBwbGljYXRpb25zOiBUaGUgQnV5ZXIgdW5kZXJzdGFuZHMgYW5kIGFjY2VwdHMgdGhhdCB0aGUgUHJvamVjdCBUb2tlbiBQcm90b2NvbCBtYXkgZ2l2ZSByaXNlIHRvIG90aGVyLCBhbHRlcm5hdGl2ZSBwcm9qZWN0cywgcHJvbW90ZWQgYnkgdW5hZmZpbGlhdGVkIHRoaXJkIHBhcnRpZXMsIHVuZGVyIHdoaWNoIFByb2plY3QgVG9rZW5zIHdpbGwgaGF2ZSBubyBpbnRyaW5zaWMgdmFsdWUuClJpc2sgb2YgbG9zcyBvZiBwcml2YXRlIGtleTogUHJvamVjdCBUb2tlbnMgY2FuIG9ubHkgYmUgYWNjZXNzZWQgYnkgdXNpbmcgYW4gRXRoZXJldW0gV2FsbGV0IHdpdGggYSBjb21iaW5hdGlvbiBvZiBCdXllcuKAmXMgYWNjb3VudCBpbmZvcm1hdGlvbiAoYWRkcmVzcyksIHByaXZhdGUga2V5IGFuZCBwYXNzd29yZC4gVGhlIHByaXZhdGUga2V5IGlzIGVuY3J5cHRlZCB3aXRoIGEgcGFzc3dvcmQuIFRoZSBCdXllciB1bmRlcnN0YW5kcyBhbmQgYWNjZXB0cyB0aGF0IGlmIGhpcyBwcml2YXRlIGtleSBmaWxlIG9yIHBhc3N3b3JkIHJlc3BlY3RpdmVseSBnb3QgbG9zdCBvciBzdG9sZW4sIHRoZSBvYnRhaW5lZCBQcm9qZWN0IFRva2VucyBhc3NvY2lhdGVkIHdpdGggdGhlIEJ1eWVyJ3MgYWNjb3VudCAoYWRkcmVzcykgb3IgcGFzc3dvcmQgd2lsbCBiZSB1bnJlY292ZXJhYmxlIGFuZCB3aWxsIGJlIHBlcm1hbmVudGx5IGxvc3QuClJpc2sgb2YgdGhlZnQ6IFRoZSBCdXllciB1bmRlcnN0YW5kcyBhbmQgYWNjZXB0cyB0aGF0IHRoZSBTbWFydCBDb250cmFjdCBTeXN0ZW0gY29uY2VwdCwgdGhlIHVuZGVybHlpbmcgc29mdHdhcmUgYXBwbGljYXRpb24gYW5kIHNvZnR3YXJlIHBsYXRmb3JtIChpLmUuIHRoZSBFdGhlcmV1bSBibG9ja2NoYWluKSBtYXkgYmUgZXhwb3NlZCB0byBhdHRhY2tzIGJ5IGhhY2tlcnMgb3Igb3RoZXIgaW5kaXZpZHVhbHMgdGhhdCBjb3VsZCByZXN1bHQgaW4gdGhlZnQgb3IgbG9zcyBvZiBQcm9qZWN0IFRva2VucyBvciBFVEguClJpc2sgb2YgRXRoZXJldW0gbWluaW5nIGF0dGFja3M6IFRoZSBCdXllciB1bmRlcnN0YW5kcyBhbmQgYWNjZXB0cyB0aGF0LCBhcyB3aXRoIG90aGVyIGNyeXB0b2N1cnJlbmNpZXMsIHRoZSBibG9ja2NoYWluIHVzZWQgZm9yIHRoZSBTbWFydCBDb250cmFjdCBTeXN0ZW0gaXMgc3VzY2VwdGlibGUgdG8gbWluaW5nIGF0dGFja3MsIGluY2x1ZGluZyBidXQgbm90IGxpbWl0ZWQgdG8gZG91YmxlLXNwZW5kIGF0dGFja3MsIG1ham9yaXR5IG1pbmluZyBwb3dlciBhdHRhY2tzLCDigJxzZWxmaXNoLW1pbmluZ+KAnSBhdHRhY2tzLCBhbmQgcmFjZSBjb25kaXRpb24gYXR0YWNrcy4gQW55IHN1Y2Nlc3NmdWwgYXR0YWNrcyBwcmVzZW50IGEgcmlzayB0byB0aGUgU21hcnQgQ29udHJhY3QgU3lzdGVtLCBleHBlY3RlZCBwcm9wZXIgZXhlY3V0aW9uIGFuZCBzZXF1ZW5jaW5nIG9mIFByb2plY3QgVG9rZW4gdHJhbnNhY3Rpb25zLCBhbmQgZXhwZWN0ZWQgcHJvcGVyIGV4ZWN1dGlvbiBhbmQgc2VxdWVuY2luZyBvZiBjb250cmFjdCBjb21wdXRhdGlvbnMuClRva2VuIExpcXVpZGl0eS4gQnV5ZXIgdW5kZXJzdGFuZHMgdGhhdCB3aXRoIHJlZ2FyZCB0byBQcm9qZWN0IFRva2VucyBubyBtYXJrZXQgbGlxdWlkaXR5IG1heSBiZSBndWFyYW50ZWVkIGFuZCB0aGF0IHRoZSB2YWx1ZSAoaWYgYW55KSBvZiBQcm9qZWN0IFRva2VucyBvdmVyIHRpbWUgbWF5IGV4cGVyaWVuY2UgZXh0cmVtZSB2b2xhdGlsaXR5IG9yIGRlcHJlY2lhdGUgcmVzdWx0aW5nIGluIGZ1bGwgYW5kIHRvdGFsIGxvc3MgdGhhdCB3aWxsIGJlIGJvcm5lIGV4Y2x1c2l2ZWx5IGJ5IEJ1eWVyIHdpdGggcmVzcGVjdCB0byB0aGUgUHJvamVjdCBUb2tlbnMgQnV5ZXIgcHVyY2hhc2VzIHVuZGVyIHRoaXMgQWdyZWVtZW50LgpSaXNrIG9mIGluY29tcGF0aWJsZSBXYWxsZXQgc2VydmljZTogVGhlIEJ1eWVyIHVuZGVyc3RhbmRzIGFuZCBhY2NlcHRzLCB0aGF0IHRoZSBXYWxsZXQgb3IgV2FsbGV0IHNlcnZpY2UgcHJvdmlkZXIgdXNlZCBmb3IgdGhlIGNvbnRyaWJ1dGlvbiwgaGFzIHRvIGJlIHRlY2huaWNhbGx5IGNvbXBhdGlibGUgd2l0aCB0aGUgUHJvamVjdCBUb2tlbi4gVGhlIGZhaWx1cmUgdG8gYXNzdXJlIHRoaXMgbWF5IGhhdmUgdGhlIHJlc3VsdCB0aGF0IEJ1eWVyIHdpbGwgbm90IGdhaW4gYWNjZXNzIHRvIGhpcyBQcm9qZWN0IFRva2VuLgpMaW1pdGVkIFdhcnJhbnRpZXMuIEV4Y2VwdCBhcyBvdGhlcndpc2Ugc2V0IGZvcnRoIGhlcmVpbiwgaW4gdGhlIFdoaXRlIFBhcGVyLCBUb2tlbiBDaGFyYWN0ZXJpc3RpY3MgRG9jdW1lbnQsIGFuZC9vciB0aGUgVG9rZW4gRGlzdHJpYnV0aW9uIFBsYW4sIEJ1eWVyIHVuZGVyc3RhbmRzIGFuZCBleHByZXNzbHkgYWNjZXB0cyB0aGF0IHRoZXJlIGlzIG5vIHdhcnJhbnR5IHdoYXRzb2V2ZXIgb2YgdGhlIFByb2plY3QgVG9rZW4gYW5kL29yIHRoZSBzdWNjZXNzIG9mIHRoZSBQcm9qZWN0LCBleHByZXNzZWQgb3IgaW1wbGllZCwgdG8gdGhlIGV4dGVudCBwZXJtaXR0ZWQgYnkgbGF3LCBhbmQgdGhhdCBQcm9qZWN0IFRva2VucyB3aWxsIGJlIGNyZWF0ZWQgYW5kIGRlbGl2ZXJlZCB0byBCdXllciBhdCB0aGUgc29sZSByaXNrIG9mIEJ1eWVyIG9uIGFuIOKAnGFzIGlz4oCdIGFuZCDigJx1bmRlciBkZXZlbG9wbWVudOKAnSBiYXNpcyBhbmQgd2l0aG91dCwgdG8gdGhlIGV4dGVudCBwZXJtaXR0ZWQgYnkgbGF3LCBhbnkgd2FycmFudGllcyBvZiBhbnkga2luZCwgaW5jbHVkaW5nLCBidXQgbm90IGxpbWl0ZWQgdG8sIGV4cHJlc3Mgb3IgaW1wbGllZCB3YXJyYW50aWVzIG9mIG1lcmNoYW50YWJpbGl0eSBvciBmaXRuZXNzIGZvciBhIHBhcnRpY3VsYXIgcHVycG9zZS4KTGltaXRhdGlvbnMgb24gUmVjb3ZlcnkuIEJ1eWVyIHVuZGVyc3RhbmRzIHRoYXQgQnV5ZXIgaGFzIG5vIHJpZ2h0IGFnYWluc3QgYW55IENvbXBhbnkgb3IgYW55IG90aGVyIFBlcnNvbiB0byByZXF1ZXN0IGFueSByZWZ1bmQgb3IgcmVkZW1wdGlvbiBvZiB0aGUgUHVyY2hhc2UgUHJpY2UgZXhjZXB0IGFzIG90aGVyd2lzZSBwcm92aWRlZCBoZXJlaW4gYW5kL29yIGFzIGEgcmVzdWx0IG9mLCBvciBpbiBjb25uZWN0aW9uIHdpdGgsIENvbXBhbnnigJlzIGJyZWFjaCBvZiB0aGlzIEFncmVlbWVudCwgbmVnbGlnZW5jZSBvciB3aWxsZnVsIG1pc2NvbmR1Y3QuClJlcHJlc2VudGF0aW9uIGFuZCBXYXJyYW50aWVzIG9mIENvbXBhbnkKQ29tcGFueSBoZXJlYnkgcmVwcmVzZW50cyBhbmQgd2FycmFudHMgdG8gQnV5ZXIsIGFzIG9mIHRoZSBkYXRlIGhlcmVvZiwgYXMgZm9sbG93czoKQ29ycG9yYXRlIFN0YXR1cy4gVGhlIENvbXBhbnkgaXMgYSBkdWx5IG9yZ2FuaXplZCwgdmFsaWRseSBleGlzdGluZyBhbmQgaW4gZ29vZCBzdGFuZGluZyB1bmRlciB0aGUgbGF3cyBvZiBCcml0aXNoIFZpcmdpbiBJc2xhbmRzIGFuZCBoYXMgYWxsIHJlcXVpc2l0ZSBjb3Jwb3JhdGUgcG93ZXIgYW5kIGF1dGhvcml0eSB0byBjYXJyeSBvbiBpdHMgYnVzaW5lc3MgYXMgbm93IGNvbmR1Y3RlZC4KTm8gQ29uZmxpY3QuIFRvIHRoZSBleHRlbnQgdGhhdCBjb3VsZCBiZSByZWFzb25hYmx5IGtub3duIHRvIHRoZSBDb21wYW55LCB0aGUgZXhlY3V0aW9uLCBkZWxpdmVyeSBhbmQgcGVyZm9ybWFuY2Ugb2YgdGhpcyBBZ3JlZW1lbnQgd2lsbCBub3QgcmVzdWx0IGluIChpKSBhbnkgdmlvbGF0aW9uIG9mLCBiZSBpbiBjb25mbGljdCB3aXRoIGluIGFueSBtYXRlcmlhbCByZXNwZWN0LCBvciBjb25zdGl0dXRlIGEgbWF0ZXJpYWwgZGVmYXVsdCB1bmRlciwgd2l0aCBvciB3aXRob3V0IHRoZSBwYXNzYWdlIG9mIHRpbWUgb3IgdGhlIGdpdmluZyBvZiBub3RpY2UgKEEpIGFueSBwcm92aXNpb24gb2YgQ29tcGFueeKAmXMgT3JnYW5pemF0aW9uYWwgRG9jdW1lbnRzOyAoQikgYW55IHByb3Zpc2lvbiBvZiBhbnkganVkZ21lbnQsIGRlY3JlZSBvciBvcmRlciB0byB3aGljaCBDb21wYW55IGlzIGEgcGFydHksIGJ5IHdoaWNoIGl0IGlzIGJvdW5kLCBvciB0byB3aGljaCBhbnkgb2YgaXRzIG1hdGVyaWFsIGFzc2V0cyBhcmUgc3ViamVjdDsgKEMpIGFueSBtYXRlcmlhbCBjb250cmFjdCwgb2JsaWdhdGlvbiwgb3IgY29tbWl0bWVudCB0byB3aGljaCBDb21wYW55IGlzIGEgcGFydHkgb3IgYnkgd2hpY2ggaXQgaXMgYm91bmQ7IG9yIChEKSBhbnkgTGF3cyBhcHBsaWNhYmxlIHRvIHRoZSBDb21wYW55IHRoYXQgdGhlIENvbXBhbnkgaXMgYXdhcmUgb2Ygb3Igc2hvdWxkIGJlIGF3YXJlIG9mIGFjdGluZyByZWFzb25hYmx5LCBvciAoaWkpIHRoZSBjcmVhdGlvbiBvZiBhbnkgbWF0ZXJpYWwgbGllbiwgY2hhcmdlIG9yIGVuY3VtYnJhbmNlIHVwb24gYW55IG1hdGVyaWFsIGFzc2V0cyBvZiB0aGUgQ29tcGFueS4gVGhlIEJ1eWVyIHVuZGVyc3RhbmRzIHRoYXQgdGhlIFByb2plY3QgVG9rZW5zIGFuZCBUb2tlbiBEaXN0cmlidXRpb24gRXZlbnQgbWF5IG5vdCBiZSB3ZWxsIGRlZmluZWQgdW5kZXIgbGF3LiBUaGUgQ29tcGFueSBoYXMgdGFrZW4gcmVhc29uYWJsZSBzdGVwcyB0byBlbnN1cmUgdGhlIGxlZ2l0aW1hY3kgb2YgaXRzIG9wZXJhdGlvbnMuCkludGVsbGVjdHVhbCBQcm9wZXJ0eS4gQ29tcGFueSBoYXMgZ29vZCBhbmQgdmFsaWQgdGlsZSB0byBhbGwgb3duZWQgSW50ZWxsZWN0dWFsIFByb3BlcnR5LiBUbyB0aGUgZXh0ZW50IHRoYXQgY291bGQgYmUgcmVhc29uYWJseSBrbm93biB0byB0aGUgQ29tcGFueSwgdGhlIENvbXBhbnkgZG9lcyBub3QgaW5mcmluZ2UsIGRpbHV0ZSwgbWlzYXBwcm9wcmlhdGUgb3Igb3RoZXJ3aXNlIHZpb2xhdGUgdGhlIHJpZ2h0cyBvZiBhbnkgdGhpcmQgcGFydHkgaW4gcmVzcGVjdCBvZiBhbnkgSW50ZWxsZWN0dWFsIFByb3BlcnR5LiBOb25lIG9mIENvbXBhbnnigJlzIEludGVsbGVjdHVhbCBQcm9wZXJ0eSBpcyBzdWJqZWN0IHRvIGFueSBvdXRzdGFuZGluZyBvcmRlciwgcnVsaW5nLCBkZWNyZWUsIGp1ZGdtZW50IG9yIHN0aXB1bGF0aW9uIGJ5IG9yIHdpdGggYW55IGNvdXJ0LCB0cmlidW5hbCwgYXJiaXRyYXRvciBvciBHb3Zlcm5tZW50YWwgQXV0aG9yaXR5LgpSZXByZXNlbnRhdGlvbnMgYW5kIFdhcnJhbnRpZXMgb2YgQnV5ZXIKQnV5ZXIgaGVyZWJ5IHJlcHJlc2VudHMgYW5kIHdhcnJhbnRzIHRvIENvbXBhbnksIGFzIG9mIHRoZSBkYXRlIGhlcmVvZiwgYXMgZm9sbG93czoKQnV5ZXIgUG93ZXIgYW5kIEF1dGhvcml0eS4gQnV5ZXIgaGFzIGFsbCByZXF1aXNpdGUgcG93ZXIgYW5kIGF1dGhvcml0eSB0byBleGVjdXRlLCBpc3N1ZSBhbmQgZGVsaXZlciB0aGlzIEFncmVlbWVudCBhbmQgcHVyY2hhc2UgdGhlIFByb2plY3QgVG9rZW5zLCBhbmQgdG8gY2Fycnkgb3V0IGFuZCBwZXJmb3JtIGl0cyBvYmxpZ2F0aW9ucyB1bmRlciB0aGlzIEFncmVlbWVudCBhbmQgYW55IHJlbGF0ZWQgYWdyZWVtZW50cy4gVGhlIEFncmVlbWVudCBjb25zdGl0dXRlcyBhIGxlZ2FsLCB2YWxpZCBhbmQgYmluZGluZyBvYmxpZ2F0aW9uIG9mIENvbXBhbnkgZW5mb3JjZWFibGUgYWdhaW5zdCBCdXllciBpbiBhY2NvcmRhbmNlIHdpdGggaXRzIHRlcm1zLgpCdXllciBTdGF0dXMgYW5kIFJpc2sgb2YgUHJvamVjdC4gQnV5ZXIgaGFzIHN1ZmZpY2llbnQga25vd2xlZGdlIGFuZCBleHBlcmllbmNlIGluIGJ1c2luZXNzLCBmaW5hbmNpYWwgbWF0dGVycyB0byBiZSBhYmxlIHRvIGV2YWx1YXRlIHRoZSByaXNrcyBhbmQgbWVyaXRzIG9mIGl0cyBwdXJjaGFzZSBvZiB0aGUgUHJvamVjdCBUb2tlbnMgYW5kIGlzIGFibGUgdG8gYmVhciB0aGUgcmlza3MgdGhlcmVvZi4gQnV5ZXIgdW5kZXJzdGFuZHMgdGhhdCB0aGUgUHJvamVjdCBhbmQgY3JlYXRpb24gYW5kIGRpc3RyaWJ1dGlvbiBvZiB0aGUgUHJvamVjdCBUb2tlbnMgaW52b2x2ZSByaXNrcywgaW5jbHVkaW5nLCBidXQgbm90IGxpbWl0ZWQgdG8sIHRoZSByaXNrIHRoYXQgKGkpIHRoZSB0ZWNobm9sb2d5IGFzc29jaWF0ZWQgd2l0aCB0aGUgUHJvamVjdCB3aWxsIG5vdCBmdW5jdGlvbiBhcyBpbnRlbmRlZDsgKGkpIHRoZSBQcm9qZWN0IGFuZCBUb2tlbiBEaXN0cmlidXRpb24gRXZlbnQgd2lsbCBub3QgYmUgY29tcGxldGVkOyAoaWkpIHRoZSBQcm9qZWN0IHdpbGwgZmFpbCB0byBhdHRyYWN0IHN1ZmZpY2llbnQgaW50ZXJlc3QgZnJvbSBrZXkgc3Rha2Vob2xkZXJzOyAoaWlpKSBDb21wYW55IHdpbGwgZmFpbCB0byBzZWN1cmUgc3VmZmljaWVudCBwdXJjaGFzZXJzIG9mIFByb2plY3QgVG9rZW5zOyAoaXYpIHRoZSBQcm9qZWN0IFRva2VucyBtYXkgZGVjcmVhc2UgaW4gdmFsdWUgb3ZlciB0aW1lIGFuZC9vciBsb3NlIGFsbCBtb25ldGFyeSB2YWx1ZTsgYW5kICh2KSBDb21wYW55IGFuZC9vciB0aGUgUHJvamVjdCBtYXkgYmUgc3ViamVjdCB0byBpbnZlc3RpZ2F0aW9uIGFuZCBwdW5pdGl2ZSBhY3Rpb25zIGZyb20gR292ZXJubWVudGFsIEF1dGhvcml0aWVzLgpDb3Jwb3JhdGUgU3RhdHVzLiBJZiBCdXllciBpcyBhIGxlZ2FsIGVudGl0eSwgQnV5ZXIgaXMgZHVseSBvcmdhbml6ZWQsIHZhbGlkbHkgZXhpc3RpbmcgYW5kIGluIGdvb2Qgc3RhbmRpbmcgdW5kZXIgdGhlIGxhd3Mgb2YgaXRzIGRvbWljaWxlIGFuZCBoYXMgYWxsIHJlcXVpc2l0ZSBjb3Jwb3JhdGUgcG93ZXIgYW5kIGF1dGhvcml0eSB0byBjYXJyeSBvbiBpdHMgYnVzaW5lc3MgYXMgbm93IGNvbmR1Y3RlZC4KTm8gT3duZXJzaGlwIEludGVyZXN0LiBCdXllciB1bmRlcnN0YW5kcyB0aGUgcHVyY2hhc2UgYW5kIHBvdGVudGlhbCByZWNlaXB0IG9mIFByb2plY3QgVG9rZW5zIGRvIG5vdCBpbnZvbHZlIHRoZSBwdXJjaGFzZSBvZiBzaGFyZXMgb3IgYW55IGVxdWl2YWxlbnQgaW4gYW55IGV4aXN0aW5nIG9yIGZ1dHVyZSBwdWJsaWMgb3IgcHJpdmF0ZSBjb21wYW55LCBjb3Jwb3JhdGlvbiBvciBvdGhlciBlbnRpdHkgaW4gYW55IGp1cmlzZGljdGlvbiBub3IgZG9lcyBpdCBjb25mZXIgYW55IHZvdGluZyByaWdodHMsIHNlYXRzIG9uIGFueSBib2FyZCBvZiBkaXJlY3RvcnMgb3IgZ292ZXJuYW5jZSByaWdodHMgYW5kIG9ibGlnYXRpb25zIHRvIEJ1eWVyLCBleGNlcHQgZm9yIHRoZSByaWdodHMgZGVzY3JpYmVkIGluIHRoZSBUb2tlbiBDaGFyYWN0ZXJpc3RpY3MgRG9jdW1lbnQgKEV4aGliaXQgQikuCkxpbWl0ZWQgV2FycmFudGllcy4gRXhjZXB0IGFzIG90aGVyd2lzZSBzZXQgZm9ydGggaGVyZWluLCBpbiB0aGUgV2hpdGUgUGFwZXIsIFRva2VuIENoYXJhY3RlcmlzdGljcyBEb2N1bWVudCwgYW5kL29yIHRoZSBUb2tlbiBEaXN0cmlidXRpb24gUGxhbiwgQnV5ZXIgdW5kZXJzdGFuZHMgYW5kIGV4cHJlc3NseSBhY2NlcHRzIHRoYXQgdGhlcmUgaXMgbm8gd2FycmFudHkgd2hhdHNvZXZlciBvZiB0aGUgUHJvamVjdCBUb2tlbiBhbmQvb3IgdGhlIHN1Y2Nlc3Mgb2YgdGhlIFByb2plY3QsIGV4cHJlc3NlZCBvciBpbXBsaWVkLCB0byB0aGUgZXh0ZW50IHBlcm1pdHRlZCBieSBsYXcsIGFuZCB0aGF0IFByb2plY3QgVG9rZW5zIHdpbGwgYmUgY3JlYXRlZCBhbmQgZGVsaXZlcmVkIHRvIEJ1eWVyIGF0IHRoZSBzb2xlIHJpc2sgb2YgQnV5ZXIgb24gYW4g4oCcYXMgaXPigJ0gYW5kIOKAnHVuZGVyIGRldmVsb3BtZW504oCdIGJhc2lzIGFuZCB3aXRob3V0LCB0byB0aGUgZXh0ZW50IHBlcm1pdHRlZCBieSBsYXcsIGFueSB3YXJyYW50aWVzIG9mIGFueSBraW5kLCBpbmNsdWRpbmcsIGJ1dCBub3QgbGltaXRlZCB0bywgZXhwcmVzcyBvciBpbXBsaWVkIHdhcnJhbnRpZXMgb2YgbWVyY2hhbnRhYmlsaXR5IG9yIGZpdG5lc3MgZm9yIGEgcGFydGljdWxhciBwdXJwb3NlLgpMaW1pdGF0aW9ucyBvbiBSZWNvdmVyeS4gQnV5ZXIgdW5kZXJzdGFuZHMgdGhhdCBCdXllciBoYXMgbm8gcmlnaHQgYWdhaW5zdCBhbnkgQ29tcGFueSBvciBhbnkgb3RoZXIgUGVyc29uIHRvIHJlcXVlc3QgYW55IHJlZnVuZCBvZiB0aGUgUHVyY2hhc2UgUHJpY2UgZXhjZXB0IGFzIG90aGVyd2lzZSBwcm92aWRlZCBoZXJlaW4gYW5kL29yIGFzIGEgcmVzdWx0IG9mLCBvciBpbiBjb25uZWN0aW9uIHdpdGgsIENvbXBhbnnigJlzIGJyZWFjaCBvZiB0aGlzIEFncmVlbWVudCwgbmVnbGlnZW5jZSBvciB3aWxsZnVsIG1pc2NvbmR1Y3QuClRva2VuIExpcXVpZGl0eS4gQnV5ZXIgdW5kZXJzdGFuZHMgdGhhdCB3aXRoIHJlZ2FyZCB0byBQcm9qZWN0IFRva2VucyBubyBtYXJrZXQgbGlxdWlkaXR5IG1heSBiZSBndWFyYW50ZWVkIGFuZCB0aGF0IHRoZSB2YWx1ZSAoaWYgYW55KSBvZiBQcm9qZWN0IFRva2VucyBvdmVyIHRpbWUgbWF5IGV4cGVyaWVuY2UgZXh0cmVtZSB2b2xhdGlsaXR5IG9yIGRlcHJlY2lhdGUgcmVzdWx0aW5nIGluIGZ1bGwgYW5kIHRvdGFsIGxvc3MgdGhhdCB3aWxsIGJlIGJvcm5lIGV4Y2x1c2l2ZWx5IGJ5IEJ1eWVyIHdpdGggcmVzcGVjdCB0byB0aGUgUHJvamVjdCBUb2tlbnMgQnV5ZXIgcHVyY2hhc2VzIHVuZGVyIHRoaXMgQWdyZWVtZW50LgpTb2xlIFJlc3BvbnNpYmlsaXR5IGZvciBUYXhlcy4gQnV5ZXIgdW5kZXJzdGFuZHMgdGhhdCBCdXllciBiZWFycyBzb2xlIHJlc3BvbnNpYmlsaXR5IGZvciBhbnkgdGF4ZXMgYXMgYSByZXN1bHQgb2YgdGhlIG1hdHRlcnMgYW5kIHRyYW5zYWN0aW9ucyB0aGUgc3ViamVjdCBvZiB0aGlzIEFncmVlbWVudCwgYW5kIGFueSBmdXR1cmUgdXNlLCBzYWxlIG9yIG90aGVyIGRpc3Bvc2l0aW9uIG9mIFByb2plY3QgVG9rZW5zIGhlbGQgYnkgQnV5ZXIuIFRvIHRoZSBleHRlbnQgcGVybWl0dGVkIGJ5IGxhdywgQnV5ZXIgYWdyZWVzIG5vdCB0byBob2xkIENvbXBhbnkgb3IgYW55IG9mIGl0cyBBZmZpbGlhdGVzLCBlbXBsb3llZXMgb3IgYWdlbnRzIChpbmNsdWRpbmcgZGV2ZWxvcGVycywgYXVkaXRvcnMsIGNvbnRyYWN0b3JzIG9yIGZvdW5kZXJzKSBsaWFibGUgZm9yIGFueSB0YXhlcyBhc3NvY2lhdGVkIHdpdGggb3IgYXJpc2luZyBmcm9tIEJ1eWVy4oCZcyBwdXJjaGFzZSBvZiBQcm9qZWN0IFRva2VucyBoZXJldW5kZXIsIG9yIHRoZSB1c2Ugb3Igb3duZXJzaGlwIG9mIFByb2plY3QgVG9rZW5zLgpDb3ZlbmFudHMKRnJvbSB0aGUgZGF0ZSBvZiB0aGlzIEFncmVlbWVudCwgQ29tcGFueSBtYXkgbm90IHBlcm1pdCB0aGUgYWx0ZXJhdGlvbiBvZiB0aGUgUHJvamVjdCBUb2tlbnMgdG8gZGlmZmVyIG1hdGVyaWFsbHkgZnJvbSB0aGUgVG9rZW4gQ2hhcmFjdGVyaXN0aWNzIERvY3VtZW50IG90aGVyIHRoYW4gdXBvbiB0aGUgbXV0dWFsIHdyaXR0ZW4gYWdyZWVtZW50IG9mIHRoZSBwYXJ0aWVzLgpGcm9tIHRoZSBkYXRlIG9mIHRoaXMgQWdyZWVtZW50LCBDb21wYW55IHNoYWxsOgpwcm92aWRlIEJ1eWVyIHdpdGggcGVyaW9kaWMgdXBkYXRlcyByZWdhcmRpbmcgdGhlIFByb2plY3QgYW5kIHRoZSBmdWxmaWxtZW50IG9mIHRoZSBQcm9qZWN0IFBsYW47CnRvIHRoZSBleHRlbnQgcHJhY3RpY2FsIGFuZCByZWFzb25hYmxlLCBmb2xsb3cgYmVzdCBwcmFjdGljZXMga25vd24gaW4gdGhlIGJsb2NrY2hhaW4gaW5kdXN0cnkgZm9yIHRoZSBkZXZlbG9wbWVudCBvZiB0b2tlbnMsIHNtYXJ0IGNvbnRyYWN0cywgZGVjZW50cmFsaXplZCBjb25zZW5zdXMgbmV0d29ya3MgYW5kIGJsb2NrY2hhaW4gdGVjaG5vbG9naWVzOyBhbmQKYWN0IGRpbGlnZW50bHkgYW5kIHBlcmZvcm0gYSBmdWxsIGluZGVwZW5kZW50IHNlY3VyaXR5IGF1ZGl0IG9uIGFueSBzbWFydCBjb250cmFjdHMgb3IgdmFuZ3VhcmQgdGVjaG5vbG9naWVzIGVtcGxveWVkIGJ5IHRoZSBDb21wYW55IGluIGNvbm5lY3Rpb24gd2l0aCB0aGUgUHJvamVjdC4KQ29uZGl0aW9ucyBQcmVjZWRlbnQKQ29uZGl0aW9ucyB0byBPYmxpZ2F0aW9ucyBvZiBCdXllci4gVGhlIG9ibGlnYXRpb25zIG9mIEJ1eWVyIHRvIGNvbnN1bW1hdGUgdGhlIHRyYW5zYWN0aW9uIGNvbnRlbXBsYXRlZCBoZXJlYnkgc2hhbGwgYmUgc3ViamVjdCB0byB0aGUgZnVsZmlsbWVudCBvbiBvciBwcmlvciB0byB0aGUgZGF0ZSBvZiBleGVjdXRpb24gb2YgdGhpcyBBZ3JlZW1lbnQgb2YgdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOgpDb21wYW55IGhhcyBwcm92aWRlZCBCdXllciB3aXRoIHRoZSBXaGl0ZSBQYXBlciBmb3IgQnV5ZXLigJlzIHJldmlldyBhbmQgZmVlZGJhY2suCkNvbXBhbnkgaGFzIHByb3ZpZGVkIEJ1eWVyIHdpdGggdGhlIFRva2VuIENoYXJhY3RlcmlzdGljcyBEb2N1bWVudC4KQ29tcGFueSBoYXMgcHJvdmlkZWQgQnV5ZXIgd2l0aCB0aGUgVG9rZW4gRGlzdHJpYnV0aW9uIFBsYW4sIHdoaWNoIGRlc2NyaWJlcyB0aGUgbnVtYmVyIG9mIFByb2plY3QgVG9rZW5zIHRvIGJlIGNyZWF0ZWQgYW5kIGRpc3RyaWJ1dGVkIGJ5IENvbXBhbnkuCkluZGVtbmlmaWNhdGlvbgpDb21wYW55IHNoYWxsIGRlZmVuZCwgaW5kZW1uaWZ5IGFuZCBob2xkIGhhcm1sZXNzIEJ1eWVyLCBpdHMgQWZmaWxpYXRlcyBhbmQgaXRzIG9mZmljZXJzLCBkaXJlY3RvcnMsIGVtcGxveWVlcywgYWdlbnRzLCBzdWNjZXNzb3JzIGFuZCBhc3NpZ25zIChjb2xsZWN0aXZlbHksIHRoZSDigJxCdXllciBJbmRlbW5pdGVlc+KAnSkgZnJvbSBhbmQgYWdhaW5zdCwgYW5kIHBheSBvciByZWltYnVyc2UgdGhlIEJ1eWVyIEluZGVtbml0ZWVzIGZvciwgYW55IGFuZCBhbGwgTG9zc2VzIHJlc3VsdGluZyBmcm9tIChhKSBhbnkgaW5hY2N1cmFjeSBpbiBvciBicmVhY2ggb2YgYW55IHJlcHJlc2VudGF0aW9uIG9yIHdhcnJhbnR5IHdoZW4gbWFkZSBvciBkZWVtZWQgbWFkZSBieSBDb21wYW55IGluIG9yIHB1cnN1YW50IHRvIHRoaXMgQWdyZWVtZW50LCAoYikgYW55IHdpbGxmdWwgb3IgbmVnbGlnZW50IGJyZWFjaCBvZiBvciBkZWZhdWx0IGluIHBlcmZvcm1hbmNlIGJ5IENvbXBhbnkgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgb3IgKGMpIGFueSBpbmZyaW5nZW1lbnQsIGRpbHV0aW9uLCBtaXNhcHByb3ByaWF0aW9uLCBvciB2aW9sYXRpb24gb2YgdGhlIHJpZ2h0cyBvZiBhbnkgdGhpcmQgcGFydHkgaW4gcmVzcGVjdCBvZiBhbnkgSW50ZWxsZWN0dWFsIFByb3BlcnR5IHdoZXJlIENvbXBhbnkgc2hvdWxkIGhhdmUgcmVhc29uYWJseSBrbm93biB0aGF0IGl0IHdhcyBpbiBicmVhY2ggb2YgSW50ZWxsZWN0dWFsIFByb3BlcnR5IG9mIGEgdGhpcmQgcGFydHkuCk1pc2NlbGxhbmVvdXMKR292ZXJuaW5nIExhdy4gVGhpcyBBZ3JlZW1lbnQgc2hhbGwgYmUgZ292ZXJuZWQgaW4gYWxsIHJlc3BlY3RzLCBpbmNsdWRpbmcgYXMgdG8gdmFsaWRpdHksIGludGVycHJldGF0aW9uIGFuZCBlZmZlY3QsIGJ5IHRoZSBsYXdzIG9mIFN3aXR6ZXJsYW5kLCB3aXRob3V0IGdpdmluZyBlZmZlY3QgdG8gaXRzIHByaW5jaXBsZXMgb3IgcnVsZXMgb2YgY29uZmxpY3Qgb2YgbGF3cywgdG8gdGhlIGV4dGVudCBzdWNoIHByaW5jaXBsZXMgb3IgcnVsZXMgYXJlIG5vdCBtYW5kYXRvcmlseSBhcHBsaWNhYmxlIGJ5IHN0YXR1dGUgYW5kIHdvdWxkIHBlcm1pdCBvciByZXF1aXJlIHRoZSBhcHBsaWNhdGlvbiBvZiB0aGUgbGF3cyBvZiBhbm90aGVyIGp1cmlzZGljdGlvbi4KU3VjY2Vzc29ycyBhbmQgQXNzaWducy4gVGhpcyBBZ3JlZW1lbnQgc2hhbGwgYmUgYmluZGluZyB1cG9uIGFuZCBpbnVyZSB0byB0aGUgYmVuZWZpdCBvZiB0aGUgcGFydGllcywgYW5kIHRoZWlyIHJlc3BlY3RpdmUgaGVpcnMsIHN1Y2Nlc3NvcnMgYW5kIHBlcm1pdHRlZCBhc3NpZ25zLiBUaGlzIEFncmVlbWVudCBzaGFsbCBub3QgYmUgYXNzaWduYWJsZSBvciBvdGhlcndpc2UgdHJhbnNmZXJhYmxlIHdpdGhvdXQgdGhlIHByaW9yIHdyaXR0ZW4gY29uc2VudCBvZiB0aGUgb3RoZXIgcGFydHksIGFuZCBhbnkgcHVycG9ydGVkIGFzc2lnbm1lbnQgaW4gdmlvbGF0aW9uIGhlcmVvZiBzaGFsbCBiZSB2b2lkLgpFbnRpcmUgQWdyZWVtZW50LiBUaGlzIEFncmVlbWVudCBjb25zdGl0dXRlcyB0aGUgZW50aXJlIGFncmVlbWVudCBiZXR3ZWVuIHRoZSBwYXJ0aWVzIGFuZCBzdXBlcnNlZGVzIGFsbCBwcmlvciBvciBjb250ZW1wb3JhbmVvdXMgYWdyZWVtZW50cyBhbmQgdW5kZXJzdGFuZGluZ3MsIGJvdGggd3JpdHRlbiBhbmQgb3JhbCwgYmV0d2VlbiB0aGUgcGFydGllcyB3aXRoIHJlc3BlY3QgdG8gdGhlIHN1YmplY3QgbWF0dGVyIGhlcmVvZi4KU2V2ZXJhYmlsaXR5LiBJZiBhbnkgcHJvdmlzaW9uIG9mIHRoaXMgQWdyZWVtZW50IGlzIGRldGVybWluZWQgYnkgYSBjb3VydCBvZiBjb21wZXRlbnQganVyaXNkaWN0aW9uIHRvIGJlIGludmFsaWQsIGlub3BlcmF0aXZlIG9yIHVuZW5mb3JjZWFibGUgZm9yIGFueSByZWFzb24sIHRoZSBwYXJ0aWVzIHNoYWxsIG5lZ290aWF0ZSBpbiBnb29kIGZhaXRoIHRvIG1vZGlmeSB0aGlzIEFncmVlbWVudCBzbyBhcyB0byBlZmZlY3QgdGhlIG9yaWdpbmFsIGludGVudCBvZiB0aGUgcGFydGllcyBhcyBjbG9zZWx5IGFzIHBvc3NpYmxlIGluIGFuIGFjY2VwdGFibGUgbWFubmVyIGluIG9yZGVyIHRoYXQgdGhlIHRyYW5zYWN0aW9ucyBjb250ZW1wbGF0ZWQgaGVyZWJ5IGJlIGNvbnN1bWVkIGFzIG9yaWdpbmFsbHkgY29udGVtcGxhdGVkIHRvIHRoZSBmdWxsZXN0IGV4dGVudCBwb3NzaWJsZS4KQ291bnRlcnBhcnRzLiBUaGlzIEFncmVlbWVudCBtYXkgYmUgZXhlY3V0ZWQgaW4gc2V2ZXJhbCBjb3VudGVycGFydHMsIGVhY2ggb2Ygd2hpY2ggc2hhbGwgYmUgZGVlbWVkIGFuIG9yaWdpbmFsIGFuZCBhbGwgb2Ygd2hpY2ggc2hhbGwgdG9nZXRoZXIgY29uc3RpdHV0ZSBvbmUgYW5kIHRoZSBzYW1lIGluc3RydW1lbnQuCk5vIFBhcnRuZXJzaGlwIGFuZCBObyBBZ2VuY3kuIE5vdGhpbmcgaW4gdGhpcyBBZ3JlZW1lbnQgYW5kIG5vIGFjdGlvbiB0YWtlbiBieSB0aGUgcGFydGllcyBwdXJzdWFudCB0byB0aGlzIEFncmVlbWVudCBzaGFsbCBjb25zdGl0dXRlLCBvciBiZSBkZWVtZWQgdG8gY29uc3RpdHV0ZSwgYSBwYXJ0bmVyc2hpcCwgYXNzb2NpYXRpb24sIGpvaW50IHZlbnR1cmUgb3Igb3RoZXIgY28tb3BlcmF0aXZlIGVudGl0eSBiZXR3ZWVuIGFueSBvZiB0aGUgcGFydGllcy4gTm90aGluZyBpbiB0aGlzIEFncmVlbWVudCBhbmQgbm8gYWN0aW9uIHRha2VuIGJ5IHRoZSBwYXJ0aWVzIHB1cnN1YW50IHRvIHRoaXMgQWdyZWVtZW50IHNoYWxsIGNvbnN0aXR1dGUsIG9yIGJlIGRlZW1lZCB0byBjb25zdGl0dXRlLCBlaXRoZXIgcGFydHkgdGhlIGFnZW50IG9mIHRoZSBvdGhlciBwYXJ0eSBmb3IgYW55IHB1cnBvc2UuIE5vIHBhcnR5IGhhcywgcHVyc3VhbnQgdG8gdGhpcyBBZ3JlZW1lbnQsIGFueSBhdXRob3JpdHkgb3IgcG93ZXIgdG8gYmluZCBvciB0byBjb250cmFjdCBpbiB0aGUgbmFtZSBvZiB0aGUgb3RoZXIgcGFydHkuCkRpc3B1dGUgUmVzb2x1dGlvbi4KQWxsIGRpc3B1dGVzIGFyaXNpbmcgb3V0IG9mIG9yIGluIGNvbm5lY3Rpb24gd2l0aCB0aGUgcHJlc2VudCBjb250cmFjdCBzaGFsbCBiZSBmaW5hbGx5IHNldHRsZWQgdW5kZXIgdGhlIFJ1bGVzIG9mIEFyYml0cmF0aW9uIG9mIHRoZSBJbnRlcm5hdGlvbmFsIENoYW1iZXIgb2YgQ29tbWVyY2UgYnkgb25lIG9yIG1vcmUgYXJiaXRyYXRvcnMgYXBwb2ludGVkIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgc2FpZCBSdWxlcy4gQXJiaXRyYXRpb24gc2hhbGwgYmUgY29uZHVjdGVkIGluIFp1cmljaC4gVGhlIG51bWJlciBvZiBhcmJpdHJhdG9ycyBzaGFsbCBiZSBbb25lL3RocmVlXS4gTGFuZ3VhZ2Ugb2YgdGhlIHByb2NlZWRpbmdzIHNoYWxsIGJlIEVuZ2xpc2guClB1YmxpY2F0aW9ucyBhbmQgTm90aWZpY2F0aW9ucywgRmVlcyBhbmQgRXhwZW5zZXMuIFRoZSBwYXJ0aWVzIHNoYWxsIGFncmVlIHRvIGFueSBwcmVzcyByZWxlYXNlIG9yIHB1YmxpY2F0aW9uIHRoYXQgam9pbnRseSBpbnZvbHZlcyB0aGUgbmFtZXMsIGJyYW5kcyBvciBvZmZpY2VycyBvZiBib3RoIHBhcnRpZXMuIFdyaXR0ZW4gY29ycmVzcG9uZGVuY2UgYW5kIG5vdGlmaWNhdGlvbnMgYmV0d2VlbiB0aGUgUGFydGllcywgd2hldGhlciBhcyBhIHJlc3VsdCBvZiBhIGRpc3B1dGUgb3Igb3RoZXJ3aXNlIGludGVuZGVkIHRvIGJlIG9mZmljaWFsIGNvcnJlc3BvbmRlbmNlLCBtYXkgYmUgZW1haWwgb3IgY29tbW9uIGZvcm1zIG9mIHNvY2lhbCBtZWRpYSAoU2t5cGUsIFNsYWNrLCBXaGF0c0FwcCkuIEVhY2ggcGFydHkgc2hhbGwgYmUgc29sZWx5IGxpYWJsZSBmb3IgYWxsIGl0cyBvd24gZmVlcywgY29zdHMgYW5kIG90aGVyd2lzZSBpbiBjb25uZWN0aW9uIHdpdGggbmVnb3RpYXRpb24gYW5kIGV4ZWN1dGlvbiBvZiB0aGlzIEFncmVlbWVudCBhbmQgYW55IGZ1dHVyZSBkZWFsaW5ncyBiZXR3ZWVuIHRoZSBwYXJ0aWVzIGFuZC9vciBmdXR1cmUgcHVibGljYXRpb25zIHJlZ2FyZGluZyB0aGUgcGFydGllcy4KQ29uZmlkZW50aWFsaXR5LiBUaGlzIEFncmVlbWVudCBzaGFsbCByZW1haW4gY29uZmlkZW50aWFsIGJldHdlZW4gdGhlIHBhcnRpZXMgaW4gcGVycGV0dWl0eSwgZXhjZXB0IHRvIHRoZSBleHRlbnQgcmVxdWlyZWQgdG8gYmUgZGlzY2xvc2VkIHB1cnN1YW50IHRvIGFwcGxpY2FibGUgTGF3cyBhbmQgYSBvbmUtdGltZSBkaXNjbG9zdXJlIGV2ZW50IHRvIHRoZSBnZW5lcmFsIHB1YmxpYy4gVGhlIGNvbnRlbnQgb2YgdGhlIG9uZS10aW1lIHB1YmxpYyBkaXNjbG9zdXJlIHdpbGwgYmUgYWdyZWVkIHRvIGJldHdlZW4gdGhlIHBhcnRpZXMuClRlcm1pbmF0aW9uLiBUaGlzIEFncmVlbWVudCBzaGFsbCB0ZXJtaW5hdGUgb24gdGhlIFRva2VuIERpc3RyaWJ1dGlvbiBEYXRlLCBwcm92aWRlZCB0aGF0IEFydGljbGVzIDkgYW5kIDEwIG9mIHRoaXMgQWdyZWVtZW50IHNoYWxsIHN1cnZpdmUgYW55IHRlcm1pbmF0aW9uIGhlcmVvZi4KCgogKi8KY29udHJhY3QgTGlmUHJlc2FsZSBpcyBPd25hYmxlLCBQYXVzYWJsZSB7CiAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQyNTY7CgogIC8vIFRoZSBhZGRyZXNzIHdoZXJlIGFsbCBmdW5kcyB3aWxsIGJlIGZvcndhcmRlZAogIGFkZHJlc3MgcHVibGljIHdhbGxldDsKCiAgLy8gVGhlIHRvdGFsIGFtb3VudCBvZiB3ZWkgcmFpc2VkCiAgdWludDI1NiBwdWJsaWMgd2VpUmFpc2VkOwoKICAvLyBUaGUgbWF4aW11biBhbW91bnQgb2Ygd2VpIHRvIGJlIHJhaXNlZAogIHVpbnQyNTYgcHVibGljIG1heENhcDsKCiAgLyoqCiAgICAgQGRldiBDb25zdHJ1Y3Rvci4gQ3JlYXRlcyB0aGUgTGlmUHJlc2FsZSBjb250cmFjdAogICAgIFRoZSBjb250cmFjdCBjYW4gc3RhcnQgd2l0aCBzb21lIHdlaSBhbHJlYWR5IHJhaXNlZCwgaXQgd2lsbAogICAgIGFsc28gaGF2ZSBhIG1heGltdW4gYW1vdW50IG9mIHdlaSB0byBiZSByYWlzZWQgYW5kIGEgd2FsbGV0CiAgICAgYWRkcmVzcyB3aGVyZSBhbGwgZnVuZHMgd2lsbCBiZSBmb3J3YXJkZWQgaW5tZWRpYXRseS4KCiAgICAgQHBhcmFtIF93ZWlSYWlzZWQgc2VlIGB3ZWlSYWlzZWRgCiAgICAgQHBhcmFtIF9tYXhDYXAgc2VlIGBtYXhDYXBgCiAgICAgQHBhcmFtIF93YWxsZXQgc2VlIGB3YWxsZXRgCiAgICovCiAgZnVuY3Rpb24gTGlmUHJlc2FsZSh1aW50MjU2IF93ZWlSYWlzZWQsIHVpbnQyNTYgX21heENhcCwgYWRkcmVzcyBfd2FsbGV0KSB7CiAgICByZXF1aXJlKF93ZWlSYWlzZWQgPCBfbWF4Q2FwKTsKCiAgICB3ZWlSYWlzZWQgPSBfd2VpUmFpc2VkOwogICAgbWF4Q2FwID0gX21heENhcDsKICAgIHdhbGxldCA9IF93YWxsZXQ7CiAgICBwYXVzZWQgPSB0cnVlOwogIH0KCiAgLyoqCiAgICAgQGRldiBGYWxsYmFjayBmdW5jdGlvbiB0aGF0IHdpbGwgYmUgZXhlY3V0ZWQgZXZlcnkgdGltZSB0aGUgY29udHJhY3QKICAgICByZWNlaXZlcyBldGhlciwgdGhlIGNvbnRyYWN0IHdpbGwgYWNjZXB0IGV0aGVycyB3aGVuIGlzIG5vdCBwYXVzZWQgYW5kCiAgICAgd2hlbiB0aGUgYW1vdW50IHNlbnQgcGx1cyB0aGUgd2VpIHJhaXNlZCBpcyBub3QgaGlnaGVyIHRoYW4gdGhlIG1heCBjYXAuCiAgICovCiAgZnVuY3Rpb24gKCkgd2hlbk5vdFBhdXNlZCBwYXlhYmxlIHsKICAgIHJlcXVpcmUod2VpUmFpc2VkLmFkZChtc2cudmFsdWUpIDw9IG1heENhcCk7CgogICAgd2VpUmFpc2VkID0gd2VpUmFpc2VkLmFkZChtc2cudmFsdWUpOwogICAgd2FsbGV0LnRyYW5zZmVyKG1zZy52YWx1ZSk7CiAgfQoKfQ=='.
	

]
