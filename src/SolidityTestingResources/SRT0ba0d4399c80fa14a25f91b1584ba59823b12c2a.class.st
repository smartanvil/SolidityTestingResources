Class {
	#name : #SRT0ba0d4399c80fa14a25f91b1584ba59823b12c2a,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT0ba0d4399c80fa14a25f91b1584ba59823b12c2a >> base64 [
	^ ''.
	

]
