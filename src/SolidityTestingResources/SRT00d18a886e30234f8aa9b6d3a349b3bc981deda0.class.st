Class {
	#name : #SRT00d18a886e30234f8aa9b6d3a349b3bc981deda0,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT00d18a886e30234f8aa9b6d3a349b3bc981deda0 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7CgovLyBXb2xmIENyeXB0byBwb29saW5nIGNvbnRyYWN0IGZvciBDb25zZW5zdXMKLy8gd3JpdHRlbiBieSBAaWFtZGVmaW5pdGVseWFodW1hbgoKbGlicmFyeSBTYWZlTWF0aCB7CiAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIGlmIChhID09IDApIHsKICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICB1aW50MjU2IGMgPSBhICogYjsKICAgIGFzc2VydChjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIGFzc2VydChiIDw9IGEpOwogICAgcmV0dXJuIGEgLSBiOwogIH0KCiAgZnVuY3Rpb24gYWRkKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgYXNzZXJ0KGMgPj0gYSk7CiAgICByZXR1cm4gYzsKICB9Cn0KCgpjb250cmFjdCBFUkMyMCB7CiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpIHt9CiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHt9Cn0KCgpjb250cmFjdCBXaGl0ZUxpc3QgewogICBmdW5jdGlvbiBjaGVja01lbWJlckxldmVsIChhZGRyZXNzIGFkZHIpIHZpZXcgcHVibGljIHJldHVybnMgKHVpbnQpIHt9Cn0KCgpjb250cmFjdCBQcmVzYWxlUG9vbCB7CgogIC8vIFNhZmVNYXRoIGlzIGEgbGlicmFyeSB0byBlbnN1cmUgdGhhdCBtYXRoIG9wZXJhdGlvbnMgZG8gbm90IGhhdmUgb3ZlcmZsb3cgZXJyb3JzCiAgLy8gaHR0cHM6Ly96ZXBwZWxpbi1zb2xpZGl0eS5yZWFkdGhlZG9jcy5pby9lbi9sYXRlc3Qvc2FmZW1hdGguaHRtbAogIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50OwogIAogIC8vIFRoZSBjb250cmFjdCBoYXMgMyBzdGFnZXM6CiAgLy8gMSAtIFRoZSBpbml0aWFsIHN0YXRlLiBUaGUgb3duZXIgaXMgYWJsZSB0byBhZGQgYWRkcmVzc2VzIHRvIHRoZSB3aGl0ZWxpc3QsIGFuZCBhbnkgd2hpdGVsaXN0ZWQgYWRkcmVzc2VzIGNhbiBkZXBvc2l0IG9yIHdpdGhkcmF3IGV0aCB0byB0aGUgY29udHJhY3QuCiAgLy8gMiAtIFRoZSBvd25lciBoYXMgY2xvc2VkIHRoZSBjb250cmFjdCBmb3IgZnVydGhlciBkZXBvc2l0cy4gV2hpdGVsaXN0ZWQgYWRkcmVzc2VzIGNhbiBzdGlsbCB3aXRoZHJhdyBldGggZnJvbSB0aGUgY29udHJhY3QuCiAgLy8gMyAtIFRoZSBldGggaXMgc2VudCBmcm9tIHRoZSBjb250cmFjdCB0byB0aGUgcmVjZWl2ZXIuIFVudXNlZCBldGggY2FuIGJlIGNsYWltZWQgYnkgY29udHJpYnV0b3JzIGltbWVkaWF0ZWx5LiBPbmNlIHRva2VucyBhcmUgc2VudCB0byB0aGUgY29udHJhY3QsCiAgLy8gICAgIHRoZSBvd25lciBlbmFibGVzIHdpdGhkcmF3YWxzIGFuZCBjb250cmlidXRvcnMgY2FuIHdpdGhkcmF3IHRoZWlyIHRva2Vucy4KICB1aW50OCBwdWJsaWMgY29udHJhY3RTdGFnZSA9IDE7CiAgCiAgLy8gVGhlc2UgdmFyaWFibGVzIGFyZSBzZXQgYXQgdGhlIHRpbWUgb2YgY29udHJhY3QgY3JlYXRpb24KICAvLyBhZGRyZXNzIHRoYXQgY3JlYXRlcyB0aGUgY29udHJhY3QKICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKICAvLyBtYXhpbXVtIGV0aCBhbW91bnQgKGluIHdlaSkgdGhhdCBjYW4gYmUgc2VudCBieSBhIHdoaXRlbGlzdGVkIGFkZHJlc3MKICB1aW50W10gcHVibGljIGNvbnRyaWJ1dGlvbkNhcHM7CiAgLy8gdGhlICUgb2YgdG9rZW5zIGtlcHQgYnkgdGhlIGNvbnRyYWN0IG93bmVyCiAgdWludCBwdWJsaWMgZmVlUGN0OwogIC8vIHRoZSBhZGRyZXNzIHRoYXQgdGhlIHBvb2wgd2lsbCBiZSBwYWlkIG91dCB0bwogIGFkZHJlc3MgcHVibGljIHJlY2VpdmVyQWRkcmVzczsKICAKICAvLyBUaGVzZSBjb25zdGFudCB2YXJpYWJsZXMgZG8gbm90IGNoYW5nZSB3aXRoIGVhY2ggY29udHJhY3QgZGVwbG95bWVudAogIC8vIG1pbmltdW0gZXRoIGFtb3VudCAoaW4gd2VpKSB0aGF0IGNhbiBiZSBzZW50IGJ5IGEgd2hpdGVsaXN0ZWQgYWRkcmVzcwogIHVpbnQgY29uc3RhbnQgcHVibGljIGNvbnRyaWJ1dGlvbk1pbiA9IDEwMDAwMDAwMDAwMDAwMDAwMDsKICAvLyBtYXhpbXVtIGdhcyBwcmljZSBhbGxvd2VkIGZvciBkZXBvc2l0cyBpbiBzdGFnZSAxCiAgdWludCBjb25zdGFudCBwdWJsaWMgbWF4R2FzUHJpY2UgPSA1MDAwMDAwMDAwMDsKICAvLyB3aGl0ZWxpc3RpbmcgY29udHJhY3QKICBXaGl0ZUxpc3QgY29uc3RhbnQgcHVibGljIHdoaXRlbGlzdENvbnRyYWN0ID0gV2hpdGVMaXN0KDB4OEQ5NUIwMzhjQTgwQTk4NjQyNUZBMjQwQzNDMTdGYjJCNmU5YmM2Myk7CiAgCiAgCiAgLy8gVGhlc2UgdmFyaWFibGVzIGFyZSBhbGwgaW5pdGlhbGx5IHNldCB0byAwIGFuZCB3aWxsIGJlIHNldCBhdCBzb21lIHBvaW50IGR1cmluZyB0aGUgY29udHJhY3QKICAvLyBlcG9jaCB0aW1lIHRoYXQgdGhlIG5leHQgY29udHJpYnV0aW9uIGNhcHMgYmVjb21lIGFjdGl2ZQogIHVpbnQgcHVibGljIG5leHRDYXBUaW1lOwogIC8vIHBlbmRpbmcgY29udHJpYnV0aW9uIGNhcHMKICB1aW50IFtdIHB1YmxpYyBuZXh0Q29udHJpYnV0aW9uQ2FwczsKICAvLyBibG9jayBudW1iZXIgb2YgdGhlIGxhc3QgY2hhbmdlIHRvIHRoZSByZWNlaXZpbmcgYWRkcmVzcyAoc2V0IGlmIHJlY2VpdmluZyBhZGRyZXNzIGlzIGNoYW5nZWQsIHN0YWdlIDEgb3IgMikKICB1aW50IHB1YmxpYyBhZGRyZXNzQ2hhbmdlQmxvY2s7CiAgLy8gYW1vdW50IG9mIGV0aCAoaW4gd2VpKSBwcmVzZW50IGluIHRoZSBjb250cmFjdCB3aGVuIGl0IHdhcyBzdWJtaXR0ZWQKICB1aW50IHB1YmxpYyBmaW5hbEJhbGFuY2U7CiAgLy8gYXJyYXkgY29udGFpbmluZyBldGggYW1vdW50cyB0byBiZSByZWZ1bmRlZCBpbiBzdGFnZSAzCiAgdWludFtdIHB1YmxpYyBldGhSZWZ1bmRBbW91bnQ7CiAgLy8gZGVmYXVsdCB0b2tlbiBjb250cmFjdCB0byBiZSB1c2VkIGZvciB3aXRoZHJhd2luZyB0b2tlbnMgaW4gc3RhZ2UgMwogIGFkZHJlc3MgcHVibGljIGFjdGl2ZVRva2VuOwogIAogIC8vIGRhdGEgc3RydWN0dXJlIGZvciBob2xkaW5nIHRoZSBjb250cmlidXRpb24gYW1vdW50LCBjYXAsIGV0aCByZWZ1bmQgc3RhdHVzLCBhbmQgdG9rZW4gd2l0aGRyYXdhbCBzdGF0dXMgZm9yIGVhY2ggd2hpdGVsaXN0ZWQgYWRkcmVzcwogIHN0cnVjdCBDb250cmlidXRvciB7CiAgICBib29sIGF1dGhvcml6ZWQ7CiAgICB1aW50IGV0aFJlZnVuZDsKICAgIHVpbnQgYmFsYW5jZTsKICAgIHVpbnQgY2FwOwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50KSB0b2tlbnNDbGFpbWVkOwogIH0KICAvLyBtYXBwaW5nIHRoYXQgaG9sZHMgdGhlIGNvbnRyaWJ1dG9yIHN0cnVjdCBmb3IgZWFjaCB3aGl0ZWxpc3RlZCBhZGRyZXNzCiAgbWFwcGluZyAoYWRkcmVzcyA9PiBDb250cmlidXRvcikgd2hpdGVsaXN0OwogIAogIC8vIGRhdGEgc3RydWN0dXJlIGZvciBob2xkaW5nIGluZm9ybWF0aW9uIHJlbGF0ZWQgdG8gdG9rZW4gd2l0aGRyYXdhbHMuCiAgc3RydWN0IFRva2VuQWxsb2NhdGlvbiB7CiAgICBFUkMyMCB0b2tlbjsKICAgIHVpbnRbXSBwY3Q7CiAgICB1aW50IGJhbGFuY2VSZW1haW5pbmc7CiAgfQogIC8vIG1hcHBpbmcgdGhhdCBob2xkcyB0aGUgdG9rZW4gYWxsb2NhdGlvbiBzdHJ1Y3QgZm9yIGVhY2ggdG9rZW4gYWRkcmVzcwogIG1hcHBpbmcgKGFkZHJlc3MgPT4gVG9rZW5BbGxvY2F0aW9uKSBkaXN0cmlidXRpb25NYXA7CiAgCiAgCiAgLy8gbW9kaWZpZXIgZm9yIGZ1bmN0aW9ucyB0aGF0IGNhbiBvbmx5IGJlIGFjY2Vzc2VkIGJ5IHRoZSBjb250cmFjdCBjcmVhdG9yCiAgbW9kaWZpZXIgb25seU93bmVyICgpIHsKICAgIHJlcXVpcmUgKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgXzsKICB9CiAgCiAgLy8gbW9kaWZpZXIgdG8gcHJldmVudCByZS1lbnRyYW5jeSBleHBsb2l0cyBkdXJpbmcgY29udHJhY3QgPiBjb250cmFjdCBpbnRlcmFjdGlvbgogIGJvb2wgbG9ja2VkOwogIG1vZGlmaWVyIG5vUmVlbnRyYW5jeSgpIHsKICAgIHJlcXVpcmUoIWxvY2tlZCk7CiAgICBsb2NrZWQgPSB0cnVlOwogICAgXzsKICAgIGxvY2tlZCA9IGZhbHNlOwogIH0KICAKICAvLyBFdmVudHMgdHJpZ2dlcmVkIHRocm91Z2hvdXQgY29udHJhY3QgZXhlY3V0aW9uCiAgLy8gVGhlc2UgY2FuIGJlIHdhdGNoZWQgdmlhIGdldGggZmlsdGVycyB0byBrZWVwIHVwLXRvLWRhdGUgd2l0aCB0aGUgY29udHJhY3QKICBldmVudCBDb250cmlidXRvckJhbGFuY2VDaGFuZ2VkIChhZGRyZXNzIGNvbnRyaWJ1dG9yLCB1aW50IHRvdGFsQmFsYW5jZSk7CiAgZXZlbnQgUmVjZWl2ZXJBZGRyZXNzU2V0ICggYWRkcmVzcyBfYWRkcik7CiAgZXZlbnQgUG9vbFN1Ym1pdHRlZCAoYWRkcmVzcyByZWNlaXZlciwgdWludCBhbW91bnQpOwogIGV2ZW50IFdpdGhkcmF3YWxzT3BlbiAoYWRkcmVzcyB0b2tlbkFkZHIpOwogIGV2ZW50IFRva2Vuc1dpdGhkcmF3biAoYWRkcmVzcyByZWNlaXZlciwgdWludCBhbW91bnQpOwogIGV2ZW50IEV0aFJlZnVuZFJlY2VpdmVkIChhZGRyZXNzIHNlbmRlciwgdWludCBhbW91bnQpOwogIGV2ZW50IEV0aFJlZnVuZGVkIChhZGRyZXNzIHJlY2VpdmVyLCB1aW50IGFtb3VudCk7CiAgZXZlbnQgRVJDMjIzUmVjZWl2ZWQgKGFkZHJlc3MgdG9rZW4sIHVpbnQgdmFsdWUpOwogICAKICAvLyBUaGVzZSBhcmUgaW50ZXJuYWwgZnVuY3Rpb25zIHVzZWQgZm9yIGNhbGN1bGF0aW5nIGZlZXMsIGV0aCBhbmQgdG9rZW4gYWxsb2NhdGlvbnMgYXMgJQogIC8vIHJldHVybnMgYSB2YWx1ZSBhcyBhICUgYWNjdXJhdGUgdG8gMjAgZGVjaW1hbCBwb2ludHMKICBmdW5jdGlvbiBfdG9QY3QgKHVpbnQgbnVtZXJhdG9yLCB1aW50IGRlbm9taW5hdG9yICkgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50KSB7CiAgICByZXR1cm4gbnVtZXJhdG9yLm11bCgxMCAqKiAyMCkgLyBkZW5vbWluYXRvcjsKICB9CiAgCiAgLy8gcmV0dXJucyAlIG9mIGFueSBudW1iZXIsIHdoZXJlICUgZ2l2ZW4gd2FzIGdlbmVyYXRlZCB3aXRoIHRvUGN0CiAgZnVuY3Rpb24gX2FwcGx5UGN0ICh1aW50IG51bWVyYXRvciwgdWludCBwY3QpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludCkgewogICAgcmV0dXJuIG51bWVyYXRvci5tdWwocGN0KSAvICgxMCAqKiAyMCk7CiAgfQogIAogIC8vIFRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkIGF0IHRoZSB0aW1lIG9mIGNvbnRyYWN0IGNyZWF0aW9uLAogIC8vIGl0IHNldHMgdGhlIGluaXRpYWwgdmFyaWFibGVzIGFuZCB3aGl0ZWxpc3RzIHRoZSBjb250cmFjdCBvd25lci4KICBmdW5jdGlvbiBQcmVzYWxlUG9vbChhZGRyZXNzIHJlY2VpdmVyQWRkciwgdWludFtdIGNhcEFtb3VudHMsIHVpbnQgZmVlKSBwdWJsaWMgewogICAgcmVxdWlyZSAoZmVlIDwgMTAwKTsKICAgIHJlcXVpcmUgKGNhcEFtb3VudHMubGVuZ3RoPjEgJiYgY2FwQW1vdW50cy5sZW5ndGg8MjU2KTsKICAgIGZvciAodWludDggaT0xOyBpPGNhcEFtb3VudHMubGVuZ3RoOyBpKyspIHsKICAgICAgcmVxdWlyZSAoY2FwQW1vdW50c1tpXSA8PSBjYXBBbW91bnRzWzBdKTsKICAgIH0KICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgIHJlY2VpdmVyQWRkcmVzcyA9IHJlY2VpdmVyQWRkcjsKICAgIGNvbnRyaWJ1dGlvbkNhcHMgPSBjYXBBbW91bnRzOwogICAgZmVlUGN0ID0gX3RvUGN0KGZlZSwxMDApOwogICAgd2hpdGVsaXN0W21zZy5zZW5kZXJdLmF1dGhvcml6ZWQgPSB0cnVlOwogIH0KICAKICAvLyBUaGlzIGZ1bmN0aW9uIGlzIGNhbGxlZCB3aGVuZXZlciBldGggaXMgc2VudCBpbnRvIHRoZSBjb250cmFjdC4KICAvLyBUaGUgc2VuZCB3aWxsIGZhaWwgdW5sZXNzIHRoZSBjb250cmFjdCBpcyBpbiBzdGFnZSBvbmUgYW5kIHRoZSBzZW5kZXIgaGFzIGJlZW4gd2hpdGVsaXN0ZWQuCiAgLy8gVGhlIGFtb3VudCBzZW50IGlzIGFkZGVkIHRvIHRoZSBiYWxhbmNlIGluIHRoZSBDb250cmlidXRvciBzdHJ1Y3QgYXNzb2NpYXRlZCB3aXRoIHRoZSBzZW5kaW5nIGFkZHJlc3MuCiAgZnVuY3Rpb24gKCkgcGF5YWJsZSBwdWJsaWMgewogICAgaWYgKGNvbnRyYWN0U3RhZ2UgPT0gMSkgewogICAgICBfZXRoRGVwb3NpdCgpOwogICAgfSBlbHNlIGlmIChjb250cmFjdFN0YWdlID09IDMpIHsKICAgICAgX2V0aFJlZnVuZCgpOwogICAgfSBlbHNlIHJldmVydCgpOwogIH0KICAKICAvLyBJbnRlcm5hbCBmdW5jdGlvbiBmb3IgaGFuZGxpbmcgZXRoIGRlcG9zaXRzIGR1cmluZyBjb250cmFjdCBzdGFnZSBvbmUuCiAgZnVuY3Rpb24gX2V0aERlcG9zaXQgKCkgaW50ZXJuYWwgewogICAgYXNzZXJ0IChjb250cmFjdFN0YWdlID09IDEpOwogICAgcmVxdWlyZSAodHguZ2FzcHJpY2UgPD0gbWF4R2FzUHJpY2UpOwogICAgcmVxdWlyZSAodGhpcy5iYWxhbmNlIDw9IGNvbnRyaWJ1dGlvbkNhcHNbMF0pOwogICAgdmFyIGMgPSB3aGl0ZWxpc3RbbXNnLnNlbmRlcl07CiAgICB1aW50IG5ld0JhbGFuY2UgPSBjLmJhbGFuY2UuYWRkKG1zZy52YWx1ZSk7CiAgICByZXF1aXJlIChuZXdCYWxhbmNlID49IGNvbnRyaWJ1dGlvbk1pbik7CiAgICByZXF1aXJlIChuZXdCYWxhbmNlIDw9IF9jaGVja0NhcChtc2cuc2VuZGVyKSk7CiAgICBjLmJhbGFuY2UgPSBuZXdCYWxhbmNlOwogICAgQ29udHJpYnV0b3JCYWxhbmNlQ2hhbmdlZChtc2cuc2VuZGVyLCBuZXdCYWxhbmNlKTsKICB9CiAgCiAgLy8gSW50ZXJuYWwgZnVuY3Rpb24gZm9yIGhhbmRsaW5nIGV0aCByZWZ1bmRzIGR1cmluZyBzdGFnZSB0aHJlZS4KICBmdW5jdGlvbiBfZXRoUmVmdW5kICgpIGludGVybmFsIHsKICAgIGFzc2VydCAoY29udHJhY3RTdGFnZSA9PSAzKTsKICAgIHJlcXVpcmUgKG1zZy5zZW5kZXIgPT0gb3duZXIgfHwgbXNnLnNlbmRlciA9PSByZWNlaXZlckFkZHJlc3MpOwogICAgcmVxdWlyZSAobXNnLnZhbHVlID49IGNvbnRyaWJ1dGlvbk1pbik7CiAgICBldGhSZWZ1bmRBbW91bnQucHVzaChtc2cudmFsdWUpOwogICAgRXRoUmVmdW5kUmVjZWl2ZWQobXNnLnNlbmRlciwgbXNnLnZhbHVlKTsKICB9CiAgCiAgLy8gVGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQgdG8gd2l0aGRyYXcgZXRoIG9yIHRva2VucyBmcm9tIHRoZSBjb250cmFjdC4KICAvLyBJdCBjYW4gb25seSBiZSBjYWxsZWQgYnkgYWRkcmVzc2VzIHRoYXQgYXJlIHdoaXRlbGlzdGVkIGFuZCBzaG93IGEgYmFsYW5jZSBncmVhdGVyIHRoYW4gMC4KICAvLyBJZiBjYWxsZWQgZHVyaW5nIHN0YWdlcyBvbmUgb3IgdHdvLCB0aGUgZnVsbCBldGggYmFsYW5jZSBkZXBvc2l0ZWQgaW50byB0aGUgY29udHJhY3QgaXMgcmV0dXJuZWQgYW5kIHRoZSBjb250cmlidXRvcidzIGJhbGFuY2UgcmVzZXQgdG8gMC4KICAvLyBJZiBjYWxsZWQgZHVyaW5nIHN0YWdlIHRocmVlLCB0aGUgY29udHJpYnV0b3IncyB1bnVzZWQgZXRoIHdpbGwgYmUgcmV0dXJuZWQsIGFzIHdlbGwgYXMgYW55IGF2YWlsYWJsZSB0b2tlbnMuCiAgLy8gVGhlIHRva2VuIGFkZHJlc3MgbWF5IGJlIHByb3ZpZGVkIG9wdGlvbmFsbHkgdG8gd2l0aGRyYXcgdG9rZW5zIHRoYXQgYXJlIG5vdCBjdXJyZW50bHkgdGhlIGRlZmF1bHQgdG9rZW4gKGFpcmRyb3BzKS4KICBmdW5jdGlvbiB3aXRoZHJhdyAoYWRkcmVzcyB0b2tlbkFkZHIpIHB1YmxpYyB7CiAgICB2YXIgYyA9IHdoaXRlbGlzdFttc2cuc2VuZGVyXTsKICAgIHJlcXVpcmUgKGMuYmFsYW5jZSA+IDApOwogICAgaWYgKGNvbnRyYWN0U3RhZ2UgPCAzKSB7CiAgICAgIHVpbnQgYW1vdW50VG9UcmFuc2ZlciA9IGMuYmFsYW5jZTsKICAgICAgYy5iYWxhbmNlID0gMDsKICAgICAgbXNnLnNlbmRlci50cmFuc2ZlcihhbW91bnRUb1RyYW5zZmVyKTsKICAgICAgQ29udHJpYnV0b3JCYWxhbmNlQ2hhbmdlZChtc2cuc2VuZGVyLCAwKTsKICAgIH0gZWxzZSB7CiAgICAgIF93aXRoZHJhdyhtc2cuc2VuZGVyLHRva2VuQWRkcik7CiAgICB9ICAKICB9CiAgCiAgLy8gVGhpcyBmdW5jdGlvbiBhbGxvd3MgdGhlIGNvbnRyYWN0IG93bmVyIHRvIGZvcmNlIGEgd2l0aGRyYXdhbCB0byBhbnkgY29udHJpYnV0b3IuCiAgZnVuY3Rpb24gd2l0aGRyYXdGb3IgKGFkZHJlc3MgY29udHJpYnV0b3IsIGFkZHJlc3MgdG9rZW5BZGRyKSBwdWJsaWMgb25seU93bmVyIHsKICAgIHJlcXVpcmUgKGNvbnRyYWN0U3RhZ2UgPT0gMyk7CiAgICByZXF1aXJlICh3aGl0ZWxpc3RbY29udHJpYnV0b3JdLmJhbGFuY2UgPiAwKTsKICAgIF93aXRoZHJhdyhjb250cmlidXRvcix0b2tlbkFkZHIpOwogIH0KICAKICAvLyBUaGlzIGludGVybmFsIGZ1bmN0aW9uIGhhbmRsZXMgd2l0aGRyYXdhbHMgZHVyaW5nIHN0YWdlIHRocmVlLgogIC8vIFRoZSBhc3NvY2lhdGVkIGV2ZW50cyB3aWxsIGZpcmUgdG8gbm90aWZ5IHdoZW4gYSByZWZ1bmQgb3IgdG9rZW4gYWxsb2NhdGlvbiBpcyBjbGFpbWVkLgogIGZ1bmN0aW9uIF93aXRoZHJhdyAoYWRkcmVzcyByZWNlaXZlciwgYWRkcmVzcyB0b2tlbkFkZHIpIGludGVybmFsIHsKICAgIGFzc2VydCAoY29udHJhY3RTdGFnZSA9PSAzKTsKICAgIHZhciBjID0gd2hpdGVsaXN0W3JlY2VpdmVyXTsKICAgIGlmICh0b2tlbkFkZHIgPT0gMHgwMCkgewogICAgICB0b2tlbkFkZHIgPSBhY3RpdmVUb2tlbjsKICAgIH0KICAgIHZhciBkID0gZGlzdHJpYnV0aW9uTWFwW3Rva2VuQWRkcl07CiAgICByZXF1aXJlICggKGV0aFJlZnVuZEFtb3VudC5sZW5ndGggPiBjLmV0aFJlZnVuZCkgfHwgZC5wY3QubGVuZ3RoID4gYy50b2tlbnNDbGFpbWVkW3Rva2VuQWRkcl0gKTsKICAgIGlmIChldGhSZWZ1bmRBbW91bnQubGVuZ3RoID4gYy5ldGhSZWZ1bmQpIHsKICAgICAgdWludCBwY3QgPSBfdG9QY3QoYy5iYWxhbmNlLGZpbmFsQmFsYW5jZSk7CiAgICAgIHVpbnQgZXRoQW1vdW50ID0gMDsKICAgICAgZm9yICh1aW50IGk9Yy5ldGhSZWZ1bmQ7IGk8ZXRoUmVmdW5kQW1vdW50Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgZXRoQW1vdW50ID0gZXRoQW1vdW50LmFkZChfYXBwbHlQY3QoZXRoUmVmdW5kQW1vdW50W2ldLHBjdCkpOwogICAgICB9CiAgICAgIGMuZXRoUmVmdW5kID0gZXRoUmVmdW5kQW1vdW50Lmxlbmd0aDsKICAgICAgaWYgKGV0aEFtb3VudCA+IDApIHsKICAgICAgICByZWNlaXZlci50cmFuc2ZlcihldGhBbW91bnQpOwogICAgICAgIEV0aFJlZnVuZGVkKHJlY2VpdmVyLGV0aEFtb3VudCk7CiAgICAgIH0KICAgIH0KICAgIGlmIChkLnBjdC5sZW5ndGggPiBjLnRva2Vuc0NsYWltZWRbdG9rZW5BZGRyXSkgewogICAgICB1aW50IHRva2VuQW1vdW50ID0gMDsKICAgICAgZm9yIChpPWMudG9rZW5zQ2xhaW1lZFt0b2tlbkFkZHJdOyBpPGQucGN0Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgdG9rZW5BbW91bnQgPSB0b2tlbkFtb3VudC5hZGQoX2FwcGx5UGN0KGMuYmFsYW5jZSxkLnBjdFtpXSkpOwogICAgICB9CiAgICAgIGMudG9rZW5zQ2xhaW1lZFt0b2tlbkFkZHJdID0gZC5wY3QubGVuZ3RoOwogICAgICBpZiAodG9rZW5BbW91bnQgPiAwKSB7CiAgICAgICAgcmVxdWlyZShkLnRva2VuLnRyYW5zZmVyKHJlY2VpdmVyLHRva2VuQW1vdW50KSk7CiAgICAgICAgZC5iYWxhbmNlUmVtYWluaW5nID0gZC5iYWxhbmNlUmVtYWluaW5nLnN1Yih0b2tlbkFtb3VudCk7CiAgICAgICAgVG9rZW5zV2l0aGRyYXduKHJlY2VpdmVyLHRva2VuQW1vdW50KTsKICAgICAgfSAgCiAgICB9CiAgICAKICB9CiAgCiAgLy8gVGhpcyBmdW5jdGlvbiBjYW4gb25seSBiZSBleGVjdXRlZCBieSB0aGUgb3duZXIsIGl0IGFkZHMgYW4gYWRkcmVzcyB0byB0aGUgd2hpdGVsaXN0LgogIC8vIFRvIGV4ZWN1dGUsIHRoZSBjb250cmFjdCBtdXN0IGJlIGluIHN0YWdlIDEsIHRoZSBhZGRyZXNzIGNhbm5vdCBhbHJlYWR5IGJlIHdoaXRlbGlzdGVkLCBhbmQgdGhlIGFkZHJlc3MgY2Fubm90IGJlIGEgY29udHJhY3QgaXRzZWxmLgogIC8vIEJsb2NraW5nIGNvbnRyYWN0cyBmcm9tIGJlaW5nIHdoaXRlbGlzdGVkIHByZXZlbnRzIGF0dGFja3MgZnJvbSB1bmV4cGVjdGVkIGNvbnRyYWN0IHRvIGNvbnRyYWN0IGludGVyYWN0aW9uIC0gdmVyeSBpbXBvcnRhbnQhCiAgZnVuY3Rpb24gYXV0aG9yaXplIChhZGRyZXNzIGFkZHIsIHVpbnQgY2FwKSBwdWJsaWMgb25seU93bmVyIHsKICAgIHJlcXVpcmUgKGNvbnRyYWN0U3RhZ2UgPT0gMSk7CiAgICBfY2hlY2tXaGl0ZWxpc3RDb250cmFjdChhZGRyKTsKICAgIHJlcXVpcmUgKCF3aGl0ZWxpc3RbYWRkcl0uYXV0aG9yaXplZCk7CiAgICByZXF1aXJlICgoY2FwID4gMCAmJiBjYXAgPCBjb250cmlidXRpb25DYXBzLmxlbmd0aCkgfHwgKGNhcCA+PSBjb250cmlidXRpb25NaW4gJiYgY2FwIDw9IGNvbnRyaWJ1dGlvbkNhcHNbMF0pICk7CiAgICB1aW50IHNpemU7CiAgICBhc3NlbWJseSB7IHNpemUgOj0gZXh0Y29kZXNpemUoYWRkcikgfQogICAgcmVxdWlyZSAoc2l6ZSA9PSAwKTsKICAgIHdoaXRlbGlzdFthZGRyXS5jYXAgPSBjYXA7CiAgICB3aGl0ZWxpc3RbYWRkcl0uYXV0aG9yaXplZCA9IHRydWU7CiAgfQogIAogIC8vIFRoaXMgZnVuY3Rpb24gaXMgdXNlZCBieSB0aGUgb3duZXIgdG8gYXV0aG9yaXplIG1hbnkgYWRkcmVzc2VzIGluIGEgc2luZ2xlIGNhbGwuCiAgLy8gRWFjaCBhZGRyZXNzIHdpbGwgYmUgZ2l2ZW4gdGhlIHNhbWUgY2FwLCBhbmQgdGhlIGNhcCBtdXN0IGJlIG9uZSBvZiB0aGUgc3RhbmRhcmQgbGV2ZWxzLgogIGZ1bmN0aW9uIGF1dGhvcml6ZU1hbnkgKGFkZHJlc3NbXSBhZGRyLCB1aW50IGNhcCkgcHVibGljIG9ubHlPd25lciB7CiAgICByZXF1aXJlIChhZGRyLmxlbmd0aCA8IDI1NSk7CiAgICByZXF1aXJlIChjYXAgPiAwICYmIGNhcCA8IGNvbnRyaWJ1dGlvbkNhcHMubGVuZ3RoKTsKICAgIGZvciAodWludDggaT0wOyBpPGFkZHIubGVuZ3RoOyBpKyspIHsKICAgICAgYXV0aG9yaXplKGFkZHJbaV0sIGNhcCk7CiAgICB9CiAgfQogIAogIC8vIFRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkIGJ5IHRoZSBvd25lciB0byByZW1vdmUgYW4gYWRkcmVzcyBmcm9tIHRoZSB3aGl0ZWxpc3QuCiAgLy8gSXQgbWF5IG9ubHkgYmUgZXhlY3V0ZWQgZHVyaW5nIHN0YWdlcyAxIGFuZCAyLiAgQW55IGV0aCBzZW50IGJ5IHRoZSBhZGRyZXNzIGlzIHJlZnVuZGVkIGFuZCB0aGVpciBwZXJzb25hbCBjYXAgaXMgc2V0IHRvIDAuCiAgLy8gSXQgd2lsbCB0aHJvdyBpZiB0aGUgYWRkcmVzcyBpcyBzdGlsbCBhdXRob3Jpc2VkIGluIHRoZSB3aGl0ZWxpc3QgY29udHJhY3QuCiAgZnVuY3Rpb24gcmV2b2tlIChhZGRyZXNzIGFkZHIpIHB1YmxpYyBvbmx5T3duZXIgewogICAgcmVxdWlyZSAoY29udHJhY3RTdGFnZSA8IDMpOwogICAgcmVxdWlyZSAod2hpdGVsaXN0W2FkZHJdLmF1dGhvcml6ZWQpOwogICAgcmVxdWlyZSAod2hpdGVsaXN0Q29udHJhY3QuY2hlY2tNZW1iZXJMZXZlbChhZGRyKSA9PSAwKTsKICAgIHdoaXRlbGlzdFthZGRyXS5hdXRob3JpemVkID0gZmFsc2U7CiAgICBpZiAod2hpdGVsaXN0W2FkZHJdLmJhbGFuY2UgPiAwKSB7CiAgICAgIHVpbnQgYW1vdW50VG9UcmFuc2ZlciA9IHdoaXRlbGlzdFthZGRyXS5iYWxhbmNlOwogICAgICB3aGl0ZWxpc3RbYWRkcl0uYmFsYW5jZSA9IDA7CiAgICAgIGFkZHIudHJhbnNmZXIoYW1vdW50VG9UcmFuc2Zlcik7CiAgICAgIENvbnRyaWJ1dG9yQmFsYW5jZUNoYW5nZWQoYWRkciwgMCk7CiAgICB9CiAgfQogIAogIC8vIFRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkIGJ5IHRoZSBvd25lciB0byBtb2RpZnkgdGhlIGNvbnRyaWJ1dGlvbiBjYXAgb2YgYSB3aGl0ZWxpc3RlZCBhZGRyZXNzLgogIC8vIElmIHRoZSBjdXJyZW50IGNvbnRyaWJ1dGlvbiBiYWxhbmNlIGV4Y2VlZHMgdGhlIG5ldyBjYXAsIHRoZSBleGNlc3MgYmFsYW5jZSBpcyByZWZ1bmRlZC4KICBmdW5jdGlvbiBtb2RpZnlJbmRpdmlkdWFsQ2FwIChhZGRyZXNzIGFkZHIsIHVpbnQgY2FwKSBwdWJsaWMgb25seU93bmVyIHsKICAgIHJlcXVpcmUgKGNvbnRyYWN0U3RhZ2UgPCAzKTsKICAgIHJlcXVpcmUgKGNhcCA8IGNvbnRyaWJ1dGlvbkNhcHMubGVuZ3RoIHx8IChjYXAgPj0gY29udHJpYnV0aW9uTWluICYmIGNhcCA8PSBjb250cmlidXRpb25DYXBzWzBdKSApOwogICAgX2NoZWNrV2hpdGVsaXN0Q29udHJhY3QoYWRkcik7CiAgICB2YXIgYyA9IHdoaXRlbGlzdFthZGRyXTsKICAgIHJlcXVpcmUgKGMuYXV0aG9yaXplZCk7CiAgICB1aW50IGFtb3VudCA9IGMuYmFsYW5jZTsKICAgIGMuY2FwID0gY2FwOwogICAgdWludCBjYXBBbW91bnQgPSBfY2hlY2tDYXAoYWRkcik7CiAgICBpZiAoYW1vdW50ID4gY2FwQW1vdW50KSB7CiAgICAgIGMuYmFsYW5jZSA9IGNhcEFtb3VudDsKICAgICAgYWRkci50cmFuc2ZlcihhbW91bnQuc3ViKGNhcEFtb3VudCkpOwogICAgICBDb250cmlidXRvckJhbGFuY2VDaGFuZ2VkKGFkZHIsIGNhcEFtb3VudCk7CiAgICB9CiAgfQogIAogIC8vIFRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkIGJ5IHRoZSBvd25lciB0byBtb2RpZnkgdGhlIGNhcCBmb3IgYSBjb250cmlidXRpb24gbGV2ZWwuCiAgLy8gVGhlIGNhcCBjYW5ub3QgYmUgZGVjcmVhc2VkIGJlbG93IHRoZSBjdXJyZW50IGJhbGFuY2Ugb3IgaW5jcmVhc2VkIHBhc3QgdGhlIGNvbnRyYWN0IGxpbWl0LgogIGZ1bmN0aW9uIG1vZGlmeUxldmVsQ2FwICh1aW50IGxldmVsLCB1aW50IGNhcCkgcHVibGljIG9ubHlPd25lciB7CiAgICByZXF1aXJlIChjb250cmFjdFN0YWdlIDwgMyk7CiAgICByZXF1aXJlIChsZXZlbCA+IDAgJiYgbGV2ZWwgPCBjb250cmlidXRpb25DYXBzLmxlbmd0aCk7CiAgICByZXF1aXJlICh0aGlzLmJhbGFuY2UgPD0gY2FwICYmIGNvbnRyaWJ1dGlvbkNhcHNbMF0gPj0gY2FwKTsKICAgIGNvbnRyaWJ1dGlvbkNhcHNbbGV2ZWxdID0gY2FwOwogICAgbmV4dENhcFRpbWUgPSAwOwogIH0KICAKICAvLyBUaGlzIGZ1bmN0aW9uIGNoYW5nZXMgZXZlcnkgbGV2ZWwgY2FwIGF0IG9uY2UsIHdpdGggYW4gb3B0aW9uYWwgZGVsYXkuCiAgLy8gTW9kaWZ5aW5nIHRoZSBjYXBzIGltbWVkaWF0ZWx5IHdpbGwgY2FuY2VsIGFueSBkZWxheWVkIGNhcCBjaGFuZ2UuCiAgZnVuY3Rpb24gbW9kaWZ5QWxsTGV2ZWxDYXBzICh1aW50W10gY2FwLCB1aW50IHRpbWUpIHB1YmxpYyBvbmx5T3duZXIgewogICAgcmVxdWlyZSAoY29udHJhY3RTdGFnZSA8IDMpOwogICAgcmVxdWlyZSAoY2FwLmxlbmd0aCA9PSBjb250cmlidXRpb25DYXBzLmxlbmd0aC0xKTsKICAgIHJlcXVpcmUgKHRpbWUgPT0gMCB8fCB0aW1lPmJsb2NrLnRpbWVzdGFtcCk7CiAgICBpZiAodGltZSA9PSAwKSB7CiAgICAgIGZvciAodWludDggaSA9IDA7IGkgPCBjYXAubGVuZ3RoOyBpKyspIHsKICAgICAgICBtb2RpZnlMZXZlbENhcChpKzEsIGNhcFtpXSk7CiAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgIG5leHRDb250cmlidXRpb25DYXBzID0gY29udHJpYnV0aW9uQ2FwczsKICAgICAgbmV4dENhcFRpbWUgPSB0aW1lOwogICAgICBmb3IgKGkgPSAwOyBpIDwgY2FwLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgcmVxdWlyZSAoY29udHJpYnV0aW9uQ2Fwc1tpKzFdIDw9IGNhcFtpXSAmJiBjb250cmlidXRpb25DYXBzWzBdID49IGNhcFtpXSk7CiAgICAgICAgbmV4dENvbnRyaWJ1dGlvbkNhcHNbaSsxXSA9IGNhcFtpXTsKICAgICAgfQogICAgfQogIH0KICAKICAvLyBUaGlzIGZ1bmN0aW9uIGNhbiBiZSBjYWxsZWQgZHVyaW5nIHN0YWdlcyBvbmUgb3IgdHdvIHRvIG1vZGlmeSB0aGUgbWF4aW11bSBiYWxhbmNlIG9mIHRoZSBjb250cmFjdC4KICAvLyBJdCBjYW4gb25seSBiZSBjYWxsZWQgYnkgdGhlIG93bmVyLiBUaGUgYW1vdW50IGNhbm5vdCBiZSBzZXQgdG8gbG93ZXIgdGhhbiB0aGUgY3VycmVudCBiYWxhbmNlIG9mIHRoZSBjb250cmFjdC4KICBmdW5jdGlvbiBtb2RpZnlNYXhDb250cmFjdEJhbGFuY2UgKHVpbnQgYW1vdW50KSBwdWJsaWMgb25seU93bmVyIHsKICAgIHJlcXVpcmUgKGNvbnRyYWN0U3RhZ2UgPCAzKTsKICAgIHJlcXVpcmUgKGFtb3VudCA+PSBjb250cmlidXRpb25NaW4pOwogICAgcmVxdWlyZSAoYW1vdW50ID49IHRoaXMuYmFsYW5jZSk7CiAgICBjb250cmlidXRpb25DYXBzWzBdID0gYW1vdW50OwogICAgbmV4dENhcFRpbWUgPSAwOwogICAgZm9yICh1aW50OCBpPTE7IGk8Y29udHJpYnV0aW9uQ2Fwcy5sZW5ndGg7IGkrKykgewogICAgICBpZiAoY29udHJpYnV0aW9uQ2Fwc1tpXT5hbW91bnQpIGNvbnRyaWJ1dGlvbkNhcHNbaV09YW1vdW50OwogICAgfQogIH0KICAKICAvLyBUaGlzIGludGVybmFsIGZ1bmN0aW9uIHJldHVybnMgdGhlIGNhcCBhbW91bnQgb2YgYSB3aGl0ZWxpc3RlZCBhZGRyZXNzLgogIGZ1bmN0aW9uIF9jaGVja0NhcCAoYWRkcmVzcyBhZGRyKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7CiAgICBfY2hlY2tXaGl0ZWxpc3RDb250cmFjdChhZGRyKTsKICAgIHZhciBjID0gd2hpdGVsaXN0W2FkZHJdOwogICAgaWYgKCFjLmF1dGhvcml6ZWQpIHJldHVybiAwOwogICAgaWYgKG5leHRDYXBUaW1lPjAgJiYgYmxvY2sudGltZXN0YW1wPm5leHRDYXBUaW1lKSB7CiAgICAgIGNvbnRyaWJ1dGlvbkNhcHMgPSBuZXh0Q29udHJpYnV0aW9uQ2FwczsKICAgICAgbmV4dENhcFRpbWUgPSAwOwogICAgfQogICAgaWYgKGMuY2FwPGNvbnRyaWJ1dGlvbkNhcHMubGVuZ3RoKSByZXR1cm4gY29udHJpYnV0aW9uQ2Fwc1tjLmNhcF07CiAgICByZXR1cm4gYy5jYXA7IAogIH0KICAKICAvLyBUaGlzIGludGVybmFsIGZ1bmN0aW9uIGNoZWNrcyBpZiBhbiBhZGRyZXNzIGlzIHdoaXRlbGlzdGVkIGluIHRoZSB3aGl0ZWxpc3QgY29udHJhY3QuCiAgZnVuY3Rpb24gX2NoZWNrV2hpdGVsaXN0Q29udHJhY3QgKGFkZHJlc3MgYWRkcikgaW50ZXJuYWwgewogICAgdmFyIGMgPSB3aGl0ZWxpc3RbYWRkcl07CiAgICBpZiAoIWMuYXV0aG9yaXplZCkgewogICAgICB2YXIgbGV2ZWwgPSB3aGl0ZWxpc3RDb250cmFjdC5jaGVja01lbWJlckxldmVsKGFkZHIpOwogICAgICBpZiAobGV2ZWwgPT0gMCB8fCBsZXZlbCA+PSBjb250cmlidXRpb25DYXBzLmxlbmd0aCkgcmV0dXJuOwogICAgICBjLmNhcCA9IGxldmVsOwogICAgICBjLmF1dGhvcml6ZWQgPSB0cnVlOwogICAgfQogIH0KICAKICAvLyBUaGlzIGNhbGxhYmxlIGZ1bmN0aW9uIHJldHVybnMgdGhlIHRvdGFsIHBvb2wgY2FwLCBjdXJyZW50IGJhbGFuY2UgYW5kIHJlbWFpbmluZyBiYWxhbmNlIHRvIGJlIGZpbGxlZC4KICBmdW5jdGlvbiBjaGVja1Bvb2xCYWxhbmNlICgpIHZpZXcgcHVibGljIHJldHVybnMgKHVpbnQgcG9vbENhcCwgdWludCBiYWxhbmNlLCB1aW50IHJlbWFpbmluZykgewogICAgaWYgKGNvbnRyYWN0U3RhZ2UgPT0gMSkgewogICAgICByZW1haW5pbmcgPSBjb250cmlidXRpb25DYXBzWzBdLnN1Yih0aGlzLmJhbGFuY2UpOwogICAgfSBlbHNlIHsKICAgICAgcmVtYWluaW5nID0gMDsKICAgIH0KICAgIHJldHVybiAoY29udHJpYnV0aW9uQ2Fwc1swXSx0aGlzLmJhbGFuY2UscmVtYWluaW5nKTsKICB9CiAgCiAgLy8gVGhpcyBjYWxsYWJsZSBmdW5jdGlvbiByZXR1cm5zIHRoZSBiYWxhbmNlLCBjb250cmlidXRpb24gY2FwLCBhbmQgcmVtYWluaW5nIGF2YWlsYWJsZSBiYWxhbmNlIG9mIGFueSBjb250cmlidXRvci4KICBmdW5jdGlvbiBjaGVja0NvbnRyaWJ1dG9yQmFsYW5jZSAoYWRkcmVzcyBhZGRyKSB2aWV3IHB1YmxpYyByZXR1cm5zICh1aW50IGJhbGFuY2UsIHVpbnQgY2FwLCB1aW50IHJlbWFpbmluZykgewogICAgdmFyIGMgPSB3aGl0ZWxpc3RbYWRkcl07CiAgICBpZiAoIWMuYXV0aG9yaXplZCkgewogICAgICBjYXAgPSB3aGl0ZWxpc3RDb250cmFjdC5jaGVja01lbWJlckxldmVsKGFkZHIpOwogICAgICBpZiAoY2FwID09IDApIHJldHVybiAoMCwwLDApOwogICAgfSBlbHNlIHsKICAgICAgY2FwID0gYy5jYXA7CiAgICB9CiAgICBiYWxhbmNlID0gYy5iYWxhbmNlOwogICAgaWYgKGNvbnRyYWN0U3RhZ2UgPT0gMSkgewogICAgICBpZiAoY2FwPGNvbnRyaWJ1dGlvbkNhcHMubGVuZ3RoKSB7IAogICAgICAgIGlmIChuZXh0Q2FwVGltZSA9PSAwIHx8IG5leHRDYXBUaW1lID4gYmxvY2sudGltZXN0YW1wKSB7CiAgICAgICAgICBjYXAgPSBjb250cmlidXRpb25DYXBzW2NhcF07CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGNhcCA9IG5leHRDb250cmlidXRpb25DYXBzW2NhcF07CiAgICAgICAgfQogICAgICB9CiAgICAgIHJlbWFpbmluZyA9IGNhcC5zdWIoYmFsYW5jZSk7CiAgICAgIGlmIChjb250cmlidXRpb25DYXBzWzBdLnN1Yih0aGlzLmJhbGFuY2UpIDwgcmVtYWluaW5nKSByZW1haW5pbmcgPSBjb250cmlidXRpb25DYXBzWzBdLnN1Yih0aGlzLmJhbGFuY2UpOwogICAgfSBlbHNlIHsKICAgICAgcmVtYWluaW5nID0gMDsKICAgIH0KICAgIHJldHVybiAoYmFsYW5jZSwgY2FwLCByZW1haW5pbmcpOwogIH0KICAKICAvLyBUaGlzIGNhbGxhYmxlIGZ1bmN0aW9uIHJldHVybnMgdGhlIHRva2VuIGJhbGFuY2UgdGhhdCBhIGNvbnRyaWJ1dG9yIGNhbiBjdXJyZW50bHkgY2xhaW0uCiAgZnVuY3Rpb24gY2hlY2tBdmFpbGFibGVUb2tlbnMgKGFkZHJlc3MgYWRkciwgYWRkcmVzcyB0b2tlbkFkZHIpIHZpZXcgcHVibGljIHJldHVybnMgKHVpbnQgdG9rZW5BbW91bnQpIHsKICAgIHZhciBjID0gd2hpdGVsaXN0W2FkZHJdOwogICAgdmFyIGQgPSBkaXN0cmlidXRpb25NYXBbdG9rZW5BZGRyXTsKICAgIGZvciAodWludCBpID0gYy50b2tlbnNDbGFpbWVkW3Rva2VuQWRkcl07IGkgPCBkLnBjdC5sZW5ndGg7IGkrKykgewogICAgICB0b2tlbkFtb3VudCA9IHRva2VuQW1vdW50LmFkZChfYXBwbHlQY3QoYy5iYWxhbmNlLCBkLnBjdFtpXSkpOwogICAgfQogICAgcmV0dXJuIHRva2VuQW1vdW50OwogIH0KICAKICAvLyBUaGlzIGZ1bmN0aW9uIGNsb3NlcyBmdXJ0aGVyIGNvbnRyaWJ1dGlvbnMgdG8gdGhlIGNvbnRyYWN0LCBhZHZhbmNpbmcgaXQgdG8gc3RhZ2UgdHdvLgogIC8vIEl0IGNhbiBvbmx5IGJlIGNhbGxlZCBieSB0aGUgb3duZXIuICBBZnRlciB0aGlzIGNhbGwgaGFzIGJlZW4gbWFkZSwgd2hpdGVsaXN0ZWQgYWRkcmVzc2VzCiAgLy8gY2FuIHN0aWxsIHJlbW92ZSB0aGVpciBldGggZnJvbSB0aGUgY29udHJhY3QgYnV0IGNhbm5vdCBjb250cmlidXRlIGFueSBtb3JlLgogIGZ1bmN0aW9uIGNsb3NlQ29udHJpYnV0aW9ucyAoKSBwdWJsaWMgb25seU93bmVyIHsKICAgIHJlcXVpcmUgKGNvbnRyYWN0U3RhZ2UgPT0gMSk7CiAgICBjb250cmFjdFN0YWdlID0gMjsKICB9CiAgCiAgLy8gVGhpcyBmdW5jdGlvbiByZW9wZW5zIHRoZSBjb250cmFjdCB0byBjb250cmlidXRpb25zIGFuZCBmdXJ0aGVyIHdoaXRlbGlzdGluZywgcmV0dXJuaW5nIGl0IHRvIHN0YWdlIG9uZS4KICAvLyBJdCBjYW4gb25seSBiZSBjYWxsZWQgYnkgdGhlIG93bmVyIGR1cmluZyBzdGFnZSB0d28uCiAgZnVuY3Rpb24gcmVvcGVuQ29udHJpYnV0aW9ucyAoKSBwdWJsaWMgb25seU93bmVyIHsKICAgIHJlcXVpcmUgKGNvbnRyYWN0U3RhZ2UgPT0gMik7CiAgICBjb250cmFjdFN0YWdlID0gMTsKICB9CiAgCiAgLy8gVGhpcyBmdW5jdGlvbiBzZXRzIHRoZSByZWNlaXZpbmcgYWRkcmVzcyB0aGF0IHRoZSBjb250cmFjdCB3aWxsIHNlbmQgdGhlIHBvb2xlZCBldGggdG8uCiAgLy8gSXQgY2FuIG9ubHkgYmUgY2FsbGVkIGJ5IHRoZSBjb250cmFjdCBvd25lciBpZiB0aGUgcmVjZWl2ZXIgYWRkcmVzcyBoYXMgbm90IGFscmVhZHkgYmVlbiBzZXQuCiAgLy8gQWZ0ZXIgbWFraW5nIHRoaXMgY2FsbCwgdGhlIGNvbnRyYWN0IHdpbGwgYmUgdW5hYmxlIHRvIHNlbmQgdGhlIHBvb2xlZCBldGggZm9yIDYwMDAgYmxvY2tzLgogIC8vIFRoaXMgbGltaXRhdGlvbiBpcyBzbyB0aGF0IGlmIHRoZSBvd25lciBhY3RzIG1hbGljaW91c2x5IGluIG1ha2luZyB0aGUgY2hhbmdlLCBhbGwgd2hpdGVsaXN0ZWQKICAvLyBhZGRyZXNzZXMgaGF2ZSB+MjQgaG91cnMgdG8gd2l0aGRyYXcgdGhlaXIgZXRoIGZyb20gdGhlIGNvbnRyYWN0LgogIGZ1bmN0aW9uIHNldFJlY2VpdmVyQWRkcmVzcyAoYWRkcmVzcyBhZGRyKSBwdWJsaWMgb25seU93bmVyIHsKICAgIHJlcXVpcmUgKGFkZHIgIT0gMHgwMCAmJiByZWNlaXZlckFkZHJlc3MgPT0gMHgwMCk7CiAgICByZXF1aXJlIChjb250cmFjdFN0YWdlIDwgMyk7CiAgICByZWNlaXZlckFkZHJlc3MgPSBhZGRyOwogICAgYWRkcmVzc0NoYW5nZUJsb2NrID0gYmxvY2subnVtYmVyOwogICAgUmVjZWl2ZXJBZGRyZXNzU2V0KGFkZHIpOwogIH0KCiAgLy8gVGhpcyBmdW5jdGlvbiBzZW5kcyB0aGUgcG9vbGVkIGV0aCB0byB0aGUgcmVjZWl2aW5nIGFkZHJlc3MsIGNhbGN1bGF0ZXMgdGhlICUgb2YgdW51c2VkIGV0aCB0byBiZSByZXR1cm5lZCwKICAvLyBhbmQgYWR2YW5jZXMgdGhlIGNvbnRyYWN0IHRvIHN0YWdlIHRocmVlLiBJdCBjYW4gb25seSBiZSBjYWxsZWQgYnkgdGhlIGNvbnRyYWN0IG93bmVyIGR1cmluZyBzdGFnZXMgb25lIG9yIHR3by4KICAvLyBUaGUgYW1vdW50IHRvIHNlbmQgKGdpdmVuIGluIHdlaSkgbXVzdCBiZSBzcGVjaWZpZWQgZHVyaW5nIHRoZSBjYWxsLiBBcyB0aGlzIGZ1bmN0aW9uIGNhbiBvbmx5IGJlIGV4ZWN1dGVkIG9uY2UsCiAgLy8gaXQgaXMgVkVSWSBJTVBPUlRBTlQgbm90IHRvIGdldCB0aGUgYW1vdW50IHdyb25nLgogIGZ1bmN0aW9uIHN1Ym1pdFBvb2wgKHVpbnQgYW1vdW50SW5XZWkpIHB1YmxpYyBvbmx5T3duZXIgbm9SZWVudHJhbmN5IHsKICAgIHJlcXVpcmUgKGNvbnRyYWN0U3RhZ2UgPCAzKTsKICAgIHJlcXVpcmUgKHJlY2VpdmVyQWRkcmVzcyAhPSAweDAwKTsKICAgIHJlcXVpcmUgKGJsb2NrLm51bWJlciA+PSBhZGRyZXNzQ2hhbmdlQmxvY2suYWRkKDYwMDApKTsKICAgIHJlcXVpcmUgKGNvbnRyaWJ1dGlvbk1pbiA8PSBhbW91bnRJbldlaSAmJiBhbW91bnRJbldlaSA8PSB0aGlzLmJhbGFuY2UpOwogICAgZmluYWxCYWxhbmNlID0gdGhpcy5iYWxhbmNlOwogICAgcmVxdWlyZSAocmVjZWl2ZXJBZGRyZXNzLmNhbGwudmFsdWUoYW1vdW50SW5XZWkpLmdhcyhtc2cuZ2FzLnN1Yig1MDAwKSkoKSk7CiAgICBldGhSZWZ1bmRBbW91bnQucHVzaCh0aGlzLmJhbGFuY2UpOwogICAgY29udHJhY3RTdGFnZSA9IDM7CiAgICBQb29sU3VibWl0dGVkKHJlY2VpdmVyQWRkcmVzcywgYW1vdW50SW5XZWkpOwogIH0KICAKICAvLyBUaGlzIGZ1bmN0aW9uIG9wZW5zIHRoZSBjb250cmFjdCB1cCBmb3IgdG9rZW4gd2l0aGRyYXdhbHMuCiAgLy8gSXQgY2FuIG9ubHkgYmUgY2FsbGVkIGJ5IHRoZSBvd25lciBkdXJpbmcgc3RhZ2UgMy4gIFRoZSBvd25lciBzcGVjaWZpZXMgdGhlIGFkZHJlc3Mgb2YgYW4gRVJDMjAgdG9rZW4KICAvLyBjb250cmFjdCB0aGF0IHRoaXMgY29udHJhY3QgaGFzIGEgYmFsYW5jZSBpbiwgYW5kIG9wdGlvbmFsbHkgYSBib29sIHRvIHByZXZlbnQgdGhpcyB0b2tlbiBmcm9tIGJlaW5nCiAgLy8gdGhlIGRlZmF1bHQgd2l0aGRyYXdhbCAoaW4gdGhlIGV2ZW50IG9mIGFuIGFpcmRyb3AsIGZvciBleGFtcGxlKS4KICBmdW5jdGlvbiBlbmFibGVUb2tlbldpdGhkcmF3YWxzIChhZGRyZXNzIHRva2VuQWRkciwgYm9vbCBub3REZWZhdWx0KSBwdWJsaWMgb25seU93bmVyIG5vUmVlbnRyYW5jeSB7CiAgICByZXF1aXJlIChjb250cmFjdFN0YWdlID09IDMpOwogICAgaWYgKG5vdERlZmF1bHQpIHsKICAgICAgcmVxdWlyZSAoYWN0aXZlVG9rZW4gIT0gMHgwMCk7CiAgICB9IGVsc2UgewogICAgICBhY3RpdmVUb2tlbiA9IHRva2VuQWRkcjsKICAgIH0KICAgIHZhciBkID0gZGlzdHJpYnV0aW9uTWFwW3Rva2VuQWRkcl07ICAgIAogICAgaWYgKGQucGN0Lmxlbmd0aD09MCkgZC50b2tlbiA9IEVSQzIwKHRva2VuQWRkcik7CiAgICB1aW50IGFtb3VudCA9IGQudG9rZW4uYmFsYW5jZU9mKHRoaXMpLnN1YihkLmJhbGFuY2VSZW1haW5pbmcpOwogICAgcmVxdWlyZSAoYW1vdW50ID4gMCk7CiAgICBpZiAoZmVlUGN0ID4gMCkgewogICAgICByZXF1aXJlIChkLnRva2VuLnRyYW5zZmVyKG93bmVyLF9hcHBseVBjdChhbW91bnQsZmVlUGN0KSkpOwogICAgfQogICAgYW1vdW50ID0gZC50b2tlbi5iYWxhbmNlT2YodGhpcykuc3ViKGQuYmFsYW5jZVJlbWFpbmluZyk7CiAgICBkLmJhbGFuY2VSZW1haW5pbmcgPSBkLnRva2VuLmJhbGFuY2VPZih0aGlzKTsKICAgIGQucGN0LnB1c2goX3RvUGN0KGFtb3VudCxmaW5hbEJhbGFuY2UpKTsKICB9CiAgCiAgLy8gVGhpcyBpcyBhIHN0YW5kYXJkIGZ1bmN0aW9uIHJlcXVpcmVkIGZvciBFUkMyMjMgY29tcGF0aWJpbGl0eS4KICBmdW5jdGlvbiB0b2tlbkZhbGxiYWNrIChhZGRyZXNzIGZyb20sIHVpbnQgdmFsdWUsIGJ5dGVzIGRhdGEpIHB1YmxpYyB7CiAgICBFUkMyMjNSZWNlaXZlZCAoZnJvbSwgdmFsdWUpOwogIH0KICAKfQ=='.
	

]
