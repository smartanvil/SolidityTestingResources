Class {
	#name : #SRT288a44c68e1117858c13a4332d7696b213d605ef,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT288a44c68e1117858c13a4332d7696b213d605ef >> base64 [
	^ ''.
	

]
