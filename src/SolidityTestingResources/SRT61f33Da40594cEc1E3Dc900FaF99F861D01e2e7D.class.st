Class {
	#name : #SRT61f33Da40594cEc1E3Dc900FaF99F861D01e2e7D,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT61f33Da40594cEc1E3Dc900FaF99F861D01e2e7D >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgpsaWJyYXJ5IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBzdWIodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KfQoKY29udHJhY3QgT3duYWJsZSB7CiAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CgoKICBldmVudCBPd25lcnNoaXBUcmFuc2ZlcnJlZChhZGRyZXNzIGluZGV4ZWQgcHJldmlvdXNPd25lciwgYWRkcmVzcyBpbmRleGVkIG5ld093bmVyKTsKCgogIC8qKgogICAqIEBkZXYgVGhlIE93bmFibGUgY29uc3RydWN0b3Igc2V0cyB0aGUgb3JpZ2luYWwgYG93bmVyYCBvZiB0aGUgY29udHJhY3QgdG8gdGhlIHNlbmRlcgogICAqIGFjY291bnQuCiAgICovCiAgZnVuY3Rpb24gT3duYWJsZSgpIHB1YmxpYyB7CiAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgfQoKCiAgLyoqCiAgICogQGRldiBUaHJvd3MgaWYgY2FsbGVkIGJ5IGFueSBhY2NvdW50IG90aGVyIHRoYW4gdGhlIG93bmVyLgogICAqLwogIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICBfOwogIH0KCgogIC8qKgogICAqIEBkZXYgQWxsb3dzIHRoZSBjdXJyZW50IG93bmVyIHRvIHRyYW5zZmVyIGNvbnRyb2wgb2YgdGhlIGNvbnRyYWN0IHRvIGEgbmV3T3duZXIuCiAgICogQHBhcmFtIG5ld093bmVyIFRoZSBhZGRyZXNzIHRvIHRyYW5zZmVyIG93bmVyc2hpcCB0by4KICAgKi8KICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld093bmVyKSBwdWJsaWMgb25seU93bmVyIHsKICAgIHJlcXVpcmUobmV3T3duZXIgIT0gYWRkcmVzcygwKSk7CiAgICBPd25lcnNoaXBUcmFuc2ZlcnJlZChvd25lciwgbmV3T3duZXIpOwogICAgb3duZXIgPSBuZXdPd25lcjsKICB9Cgp9Cgpjb250cmFjdCBFUkMyMCB7CiAgICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50IHN1cHBseSk7CiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoIGFkZHJlc3Mgb3duZXIgKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludCB2YWx1ZSk7CiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoIGFkZHJlc3Mgb3duZXIsIGFkZHJlc3Mgc3BlbmRlciApIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50IF9hbGxvd2FuY2UpOwoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKCBhZGRyZXNzIHRvLCB1aW50IHZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBvayk7CiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oIGFkZHJlc3MgZnJvbSwgYWRkcmVzcyB0bywgdWludCB2YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgb2spOwogICAgZnVuY3Rpb24gYXBwcm92ZSggYWRkcmVzcyBzcGVuZGVyLCB1aW50IHZhbHVlICkgcHVibGljIHJldHVybnMgKGJvb2wgb2spOwoKICAgIGV2ZW50IFRyYW5zZmVyKCBhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50IHZhbHVlKTsKICAgIGV2ZW50IEFwcHJvdmFsKCBhZGRyZXNzIGluZGV4ZWQgb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBzcGVuZGVyLCB1aW50IHZhbHVlKTsKfQoKY29udHJhY3QgVG9rZW4gaXMgRVJDMjAgewoKICB1c2luZyBTYWZlTWF0aCBmb3IgdWludDI1NjsKCiAgdWludDI1NiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1cHBseTsKICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikgICAgICAgICAgICAgICAgICAgICAgICAgYmFsYW5jZXM7CiAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSAgIGFwcHJvdmFsczsKCiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3Mgb3duZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpIHsKICAgIHJldHVybiBiYWxhbmNlc1tvd25lcl07CiAgfQoKICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBvd25lciwgYWRkcmVzcyBzcGVuZGVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgcmV0dXJuIGFwcHJvdmFsc1tvd25lcl1bc3BlbmRlcl07CiAgfQoKICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICByZXF1aXJlKF90byAhPSBhZGRyZXNzKDApKTsKICAgIHJlcXVpcmUoX3ZhbHVlIDw9IGJhbGFuY2VzW21zZy5zZW5kZXJdKTsKICAgIHJlcXVpcmUoYmFsYW5jZXNbX3RvXSA8IGJhbGFuY2VzW190b10uYWRkKF92YWx1ZSkpOwoKICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gYmFsYW5jZXNbbXNnLnNlbmRlcl0uc3ViKF92YWx1ZSk7CiAgICBiYWxhbmNlc1tfdG9dID0gYmFsYW5jZXNbX3RvXS5hZGQoX3ZhbHVlKTsKICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgZnJvbSwgYWRkcmVzcyB0bywgdWludDI1NiB2YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKCiAgICAgICAgYXNzZXJ0KGJhbGFuY2VzW2Zyb21dID49IHZhbHVlKTsKICAgICAgICBhc3NlcnQoYXBwcm92YWxzW2Zyb21dW21zZy5zZW5kZXJdID49IHZhbHVlKTsKICAgICAgICAKICAgICAgICBhcHByb3ZhbHNbZnJvbV1bbXNnLnNlbmRlcl0gPSBhcHByb3ZhbHNbZnJvbV1bbXNnLnNlbmRlcl0uc3ViKHZhbHVlKTsKICAgICAgICBiYWxhbmNlc1tmcm9tXSA9IGJhbGFuY2VzW2Zyb21dLnN1Yih2YWx1ZSk7CiAgICAgICAgYmFsYW5jZXNbdG9dID0gYmFsYW5jZXNbdG9dLmFkZCh2YWx1ZSk7CiAgICAgICAgCiAgICAgICAgVHJhbnNmZXIoZnJvbSwgdG8sIHZhbHVlKTsKICAgICAgICAKICAgICAgICByZXR1cm4gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBzcGVuZGVyLCB1aW50MjU2IHZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgICAgIGFwcHJvdmFsc1ttc2cuc2VuZGVyXVtzcGVuZGVyXSA9IHZhbHVlOwogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIHNwZW5kZXIsIHZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQpIHsKICAgIHJldHVybiBzdXBwbHk7CiAgfQoKICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBzcGVuZGVyLCB1aW50MjU2IHZhbHVlKTsKfQoKY29udHJhY3QgQ3liZXJlaXRzVG9rZW4gaXMgVG9rZW4sIE93bmFibGUgewogICAgc3RyaW5nIHB1YmxpYyBuYW1lID0gIkN5YmVyZWl0cyBUb2tlbiI7CiAgICBzdHJpbmcgcHVibGljIHN5bWJvbCA9ICJDUkUiOwogICAgdWludCBwdWJsaWMgZGVjaW1hbHM7CgogICAgYWRkcmVzcyBwdWJsaWMgdGVhbUxvY2tBZGRyOwoKICAgIGZ1bmN0aW9uIEN5YmVyZWl0c1Rva2VuKAogICAgICB1aW50MjU2IHRvdGFsLAogICAgICB1aW50MjU2IF9kZWNpbWFscywgCiAgICAgIHVpbnQyNTYgX3RlYW1Mb2NrUGVyY2VudCwKICAgICAgYWRkcmVzcyBfdGVhbUFkZHIxLAogICAgICBhZGRyZXNzIF90ZWFtQWRkcjIsCiAgICAgIGFkZHJlc3MgX3RlYW1BZGRyMywKICAgICAgYWRkcmVzcyBfdGVhbUFkZHI0LAogICAgICBhZGRyZXNzIF90ZWFtQWRkcjUsCiAgICAgIGFkZHJlc3MgX3RlYW1BZGRyNgogICAgKSBwdWJsaWMKICAgIHsKICAgICAgICBkZWNpbWFscyA9IF9kZWNpbWFsczsKICAgICAgICB2YXIgbXVsdGlwbGllciA9IDEwICoqIGRlY2ltYWxzOwogICAgICAgIHN1cHBseSA9IHRvdGFsICogbXVsdGlwbGllcjsKICAgICAgICB2YXIgdGVhbUxvY2tBbW91bnQgPSBfdGVhbUxvY2tQZXJjZW50ICogc3VwcGx5IC8gMTAwOwogICAgICAgIHRlYW1Mb2NrQWRkciA9IG5ldyBDeWJlcmVpdHNUZWFtTG9jaygKICAgICAgICAgIHRlYW1Mb2NrQW1vdW50LAogICAgICAgICAgX3RlYW1BZGRyMSwKICAgICAgICAgIF90ZWFtQWRkcjIsCiAgICAgICAgICBfdGVhbUFkZHIzLAogICAgICAgICAgX3RlYW1BZGRyNCwKICAgICAgICAgIF90ZWFtQWRkcjUsCiAgICAgICAgICBfdGVhbUFkZHI2CiAgICAgICAgKTsKICAgICAgICBiYWxhbmNlc1t0ZWFtTG9ja0FkZHJdID0gdGVhbUxvY2tBbW91bnQ7CiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBzdXBwbHkgLSB0ZWFtTG9ja0Ftb3VudDsKICAgIH0KfQoKY29udHJhY3QgQ3liZXJlaXRzVGVhbUxvY2sgewoKICAgIGV2ZW50IFVubG9jayhhZGRyZXNzIGZyb20sIHVpbnQgYW1vdW50KTsKCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIGFsbG9jYXRpb25zOwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBmcm96ZW47CgogICAgQ3liZXJlaXRzVG9rZW4gY3JlOwoKICAgIGZ1bmN0aW9uIEN5YmVyZWl0c1RlYW1Mb2NrKAogICAgICB1aW50MjU2IGxvY2tBbW91bnQsCiAgICAgIGFkZHJlc3MgX3RlYW1BZGRyMSwKICAgICAgYWRkcmVzcyBfdGVhbUFkZHIyLAogICAgICBhZGRyZXNzIF90ZWFtQWRkcjMsCiAgICAgIGFkZHJlc3MgX3RlYW1BZGRyNCwKICAgICAgYWRkcmVzcyBfdGVhbUFkZHI1LAogICAgICBhZGRyZXNzIF90ZWFtQWRkcjYKICAgICkgcHVibGljCiAgICB7CiAgICAgICAgY3JlID0gQ3liZXJlaXRzVG9rZW4obXNnLnNlbmRlcik7CiAgICAgICAgYWxsb2NhdGlvbnNbX3RlYW1BZGRyMV0gPSBsb2NrQW1vdW50IC8gNjsKICAgICAgICBmcm96ZW5bX3RlYW1BZGRyMV0gPSBub3cgKyA2ICogMzAgZGF5czsKICAgICAgICBhbGxvY2F0aW9uc1tfdGVhbUFkZHIyXSA9IGxvY2tBbW91bnQgLyA2OwogICAgICAgIGZyb3plbltfdGVhbUFkZHIyXSA9IG5vdyArIDEyICogMzAgZGF5czsKICAgICAgICBhbGxvY2F0aW9uc1tfdGVhbUFkZHIzXSA9IGxvY2tBbW91bnQgLyA2OwogICAgICAgIGZyb3plbltfdGVhbUFkZHIzXSA9IG5vdyArIDE4ICogMzAgZGF5czsKICAgICAgICBhbGxvY2F0aW9uc1tfdGVhbUFkZHI0XSA9IGxvY2tBbW91bnQgLyA2OwogICAgICAgIGZyb3plbltfdGVhbUFkZHI0XSA9IG5vdyArIDI0ICogMzAgZGF5czsKICAgICAgICBhbGxvY2F0aW9uc1tfdGVhbUFkZHI1XSA9IGxvY2tBbW91bnQgLyA2OwogICAgICAgIGZyb3plbltfdGVhbUFkZHI1XSA9IG5vdyArIDMwICogMzAgZGF5czsKICAgICAgICBhbGxvY2F0aW9uc1tfdGVhbUFkZHI2XSA9IGxvY2tBbW91bnQgLyA2OwogICAgICAgIGZyb3plbltfdGVhbUFkZHI2XSA9IG5vdyArIDM2ICogMzAgZGF5czsKICAgIH0KCiAgICBmdW5jdGlvbiB1bmxvY2soYWRkcmVzcyB1bmxvY2tBZGRyKSBleHRlcm5hbCByZXR1cm5zIChib29sKSB7CiAgICAgICAgcmVxdWlyZShhbGxvY2F0aW9uc1t1bmxvY2tBZGRyXSAhPSAwKTsKICAgICAgICByZXF1aXJlKG5vdyA+PSBmcm96ZW5bdW5sb2NrQWRkcl0pOwoKICAgICAgICB2YXIgYW1vdW50ID0gYWxsb2NhdGlvbnNbdW5sb2NrQWRkcl07CiAgICAgICAgYXNzZXJ0KGNyZS50cmFuc2Zlcih1bmxvY2tBZGRyLCBhbW91bnQpKTsKICAgICAgICBhbGxvY2F0aW9uc1t1bmxvY2tBZGRyXSA9IDA7CiAgICAgICAgVW5sb2NrKHVubG9ja0FkZHIsIGFtb3VudCk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9Cn0='.
	

]
