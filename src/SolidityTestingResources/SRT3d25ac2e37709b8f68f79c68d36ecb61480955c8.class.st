Class {
	#name : #SRT3d25ac2e37709b8f68f79c68d36ecb61480955c8,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT3d25ac2e37709b8f68f79c68d36ecb61480955c8 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7CgovKiB0YWtpbmcgaWRlYXMgZnJvbSBGaXJzdEJsb29kIHRva2VuICovCmNvbnRyYWN0IFNhZmVNYXRoIHsKCiAgICAvKiBmdW5jdGlvbiBhc3NlcnQoYm9vbCBhc3NlcnRpb24pIGludGVybmFsIHsgKi8KICAgIC8qICAgaWYgKCFhc3NlcnRpb24pIHsgKi8KICAgIC8qICAgICB0aHJvdzsgKi8KICAgIC8qICAgfSAqLwogICAgLyogfSAgICAgIC8vIGFzc2VydCBubyBsb25nZXIgbmVlZGVkIG9uY2Ugc29saWRpdHkgaXMgb24gMC40LjEwICovCgogICAgZnVuY3Rpb24gc2FmZUFkZCh1aW50MjU2IHgsIHVpbnQyNTYgeSkgaW50ZXJuYWwgcmV0dXJucyh1aW50MjU2KSB7CiAgICAgIHVpbnQyNTYgeiA9IHggKyB5OwogICAgICBhc3NlcnQoKHogPj0geCkgJiYgKHogPj0geSkpOwogICAgICByZXR1cm4gejsKICAgIH0KCiAgICBmdW5jdGlvbiBzYWZlU3ViKHVpbnQyNTYgeCwgdWludDI1NiB5KSBpbnRlcm5hbCByZXR1cm5zKHVpbnQyNTYpIHsKICAgICAgYXNzZXJ0KHggPj0geSk7CiAgICAgIHVpbnQyNTYgeiA9IHggLSB5OwogICAgICByZXR1cm4gejsKICAgIH0KCiAgICBmdW5jdGlvbiBzYWZlTXVsdCh1aW50MjU2IHgsIHVpbnQyNTYgeSkgaW50ZXJuYWwgcmV0dXJucyh1aW50MjU2KSB7CiAgICAgIHVpbnQyNTYgeiA9IHggKiB5OwogICAgICBhc3NlcnQoKHggPT0gMCl8fCh6L3ggPT0geSkpOwogICAgICByZXR1cm4gejsKICAgIH0KCn0KCmNvbnRyYWN0IG93bmVkIHsKICAgIGFkZHJlc3MgcHVibGljIG93bmVyOwogICAgYWRkcmVzc1tdIHB1YmxpYyBhbGxvd2VkVHJhbnNmZXJEdXJpbmdJQ087CgogICAgZnVuY3Rpb24gb3duZWQoKSB7CiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgfQoKICAgIG1vZGlmaWVyIG9ubHlPd25lciB7CiAgICAgICAgYXNzZXJ0KG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgICAgIF87CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBuZXdPd25lcikgb25seU93bmVyIHsKICAgICAgICBvd25lciA9IG5ld093bmVyOwogICAgfQoKICAgIGZ1bmN0aW9uIGlzQWxsb3dlZFRyYW5zZmVyRHVyaW5nSUNPKCkgcHVibGljIGNvbnN0YW50IHJldHVybnMgKGJvb2wpewogICAgICAgIGZvcih1aW50IGkgPSAwOyBpIDwgYWxsb3dlZFRyYW5zZmVyRHVyaW5nSUNPLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIGlmIChhbGxvd2VkVHJhbnNmZXJEdXJpbmdJQ09baV0gPT0gbXNnLnNlbmRlcikgewogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQp9Cgpjb250cmFjdCB0b2tlblJlY2lwaWVudCB7IGZ1bmN0aW9uIHJlY2VpdmVBcHByb3ZhbChhZGRyZXNzIF9mcm9tLCB1aW50MjU2IF92YWx1ZSwgYWRkcmVzcyBfdG9rZW4sIGJ5dGVzIF9leHRyYURhdGEpOyB9Cgpjb250cmFjdCBUb2tlbiBpcyBvd25lZCB7CiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKTsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHJlbWFpbmluZyk7CiAgICAKICAgIC8qIFRoaXMgZ2VuZXJhdGVzIGEgcHVibGljIGV2ZW50IG9uIHRoZSBibG9ja2NoYWluIHRoYXQgd2lsbCBub3RpZnkgY2xpZW50cyAqLwogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50MjU2IF92YWx1ZSk7CiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKTsKfQoKCi8qICBFUkMgMjAgdG9rZW4gKi8KY29udHJhY3QgU3RhbmRhcmRUb2tlbiBpcyBTYWZlTWF0aCwgVG9rZW4gewoKICAgIHVpbnQgcHVibGljIGxvY2tCbG9jazsKICAgIC8qIFNlbmQgY29pbnMgKi8KICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgcmVxdWlyZShibG9jay5udW1iZXIgPj0gbG9ja0Jsb2NrIHx8IGlzQWxsb3dlZFRyYW5zZmVyRHVyaW5nSUNPKCkpOwogICAgICAgIGlmIChiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfdmFsdWUgJiYgX3ZhbHVlID4gMCkgewogICAgICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IHNhZmVTdWIoYmFsYW5jZXNbbXNnLnNlbmRlcl0sIF92YWx1ZSk7CiAgICAgICAgICAgIGJhbGFuY2VzW190b10gPSBzYWZlQWRkKGJhbGFuY2VzW190b10sIF92YWx1ZSk7CiAgICAgICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgIH0KCiAgICAvKiBBIGNvbnRyYWN0IGF0dGVtcHRzIHRvIGdldCB0aGUgY29pbnMgKi8KICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIHJlcXVpcmUoYmxvY2subnVtYmVyID49IGxvY2tCbG9jayB8fCBpc0FsbG93ZWRUcmFuc2ZlckR1cmluZ0lDTygpKTsKICAgICAgICBpZiAoYmFsYW5jZXNbX2Zyb21dID49IF92YWx1ZSAmJiBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA+PSBfdmFsdWUgJiYgX3ZhbHVlID4gMCkgewogICAgICAgICAgICBiYWxhbmNlc1tfdG9dID0gc2FmZUFkZChiYWxhbmNlc1tfdG9dLCBfdmFsdWUpOwogICAgICAgICAgICBiYWxhbmNlc1tfZnJvbV0gPSBzYWZlU3ViKGJhbGFuY2VzW19mcm9tXSwgX3ZhbHVlKTsKICAgICAgICAgICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gPSBzYWZlU3ViKGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdLCBfdmFsdWUpOwogICAgICAgICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7CiAgICAgICAgcmV0dXJuIGJhbGFuY2VzW19vd25lcl07CiAgICB9CgogICAgLyogQWxsb3cgYW5vdGhlciBjb250cmFjdCB0byBzcGVuZCBzb21lIHRva2VucyBpbiB5b3VyIGJlaGFsZiAqLwogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgYXNzZXJ0KChfdmFsdWUgPT0gMCkgfHwgKGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID09IDApKTsKICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsKICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKSB7CiAgICAgICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07CiAgICB9CgogICAgLyogVGhpcyBjcmVhdGVzIGFuIGFycmF5IHdpdGggYWxsIGJhbGFuY2VzICovCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIGJhbGFuY2VzOwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBhbGxvd2VkOwp9Cgpjb250cmFjdCBFSUNUb2tlbiBpcyBTdGFuZGFyZFRva2VuIHsKCiAgICAvLyBtZXRhZGF0YQogICAgc3RyaW5nIGNvbnN0YW50IHB1YmxpYyBuYW1lID0gIkVudGVydGFpbm1lbnQgSW5kdXN0cnkgQ29pbiI7CiAgICBzdHJpbmcgY29uc3RhbnQgcHVibGljIHN5bWJvbCA9ICJFSUMiOwogICAgdWludDI1NiBjb25zdGFudCBwdWJsaWMgZGVjaW1hbHMgPSAxODsKCiAgICBmdW5jdGlvbiBFSUNUb2tlbigKICAgICAgICB1aW50IF9sb2NrQmxvY2tQZXJpb2QpCiAgICAgICAgcHVibGljCiAgICB7CiAgICAgICAgYWxsb3dlZFRyYW5zZmVyRHVyaW5nSUNPLnB1c2gob3duZXIpOwogICAgICAgIHRvdGFsU3VwcGx5ID0gMzEyNTAwMDAwMCAqICgxMCAqKiBkZWNpbWFscyk7CiAgICAgICAgYmFsYW5jZXNbb3duZXJdID0gdG90YWxTdXBwbHk7CiAgICAgICAgbG9ja0Jsb2NrID0gYmxvY2subnVtYmVyICsgX2xvY2tCbG9ja1BlcmlvZDsKICAgIH0KCiAgICBmdW5jdGlvbiBkaXN0cmlidXRlKGFkZHJlc3NbXSBhZGRyLCB1aW50MjU2W10gdG9rZW4pIHB1YmxpYyBvbmx5T3duZXIgewogICAgICAgIC8vIG9ubHkgb3duZXIgY2FuIGNhbGwKICAgICAgICByZXF1aXJlKGFkZHIubGVuZ3RoID09IHRva2VuLmxlbmd0aCk7CiAgICAgICAgYWxsb3dlZFRyYW5zZmVyRHVyaW5nSUNPLnB1c2goYWRkclswXSk7CiAgICAgICAgYWxsb3dlZFRyYW5zZmVyRHVyaW5nSUNPLnB1c2goYWRkclsxXSk7CiAgICAgICAgZm9yICh1aW50IGkgPSAwOyBpIDwgYWRkci5sZW5ndGg7IGkrKykgewogICAgICAgICAgICB0cmFuc2ZlcihhZGRyW2ldLCB0b2tlbltpXSAqICgxMCAqKiBkZWNpbWFscykpOwogICAgICAgIH0KICAgIH0KCn0='.
	

]
