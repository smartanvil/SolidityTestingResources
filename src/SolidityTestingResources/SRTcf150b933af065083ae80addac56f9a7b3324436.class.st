Class {
	#name : #SRTcf150b933af065083ae80addac56f9a7b3324436,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTcf150b933af065083ae80addac56f9a7b3324436 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgovKgpHYW1lIE5hbWU6IFBsYXlDcnlwdG9HYW1pbmcKR2FtZSBMaW5rOiBodHRwczovL3BsYXljcnlwdG9nYW1pbmcuY29tLwoqLwoKY29udHJhY3QgUGxheUNyeXB0b0dhbWluZyB7CgogICAgYWRkcmVzcyBjb250cmFjdE93bmVyQWRkcmVzcyA9IDB4NDZkOTExMjUzM2VmNjc3MDU5YzQzMEU1MTU3NzVlMzU4ODg4ZTM4YjsKICAgIHVpbnQyNTYgcHJpY2VDb250cmFjdCA9IDI2MDAwMDAwMDAwMDAwMDAwMDAwOwoKCiAgICBtb2RpZmllciBvbmx5T3duZXIoKSB7CiAgICAgICAgcmVxdWlyZSAobXNnLnNlbmRlciA9PSBjb250cmFjdE93bmVyQWRkcmVzcyk7CiAgICAgICAgXzsKICAgIH0KICAgIAogICAgc3RydWN0IENyeXB0b0dhbWVyIHsKICAgICAgICBzdHJpbmcgbmFtZTsKICAgICAgICBhZGRyZXNzIG93bmVyQWRkcmVzczsKICAgICAgICB1aW50MjU2IGN1clByaWNlOwogICAgfQogICAgQ3J5cHRvR2FtZXJbXSBjcnlwdG9HYW1lcnM7CgogICAgYm9vbCBjcnlwdG9HYW1lcnNBcmVJbml0aWF0ZWQ7CiAgICBib29sIGlzUGF1c2VkOwogICAgCiAgICAvKgogICAgV2UgdXNlIHRoZSBmb2xsb3dpbmcgZnVuY3Rpb25zIHRvIHBhdXNlIGFuZCB1bnBhdXNlIHRoZSBnYW1lLgogICAgKi8KICAgIGZ1bmN0aW9uIHBhdXNlR2FtZSgpIHB1YmxpYyBvbmx5T3duZXIgewogICAgICAgIGlzUGF1c2VkID0gdHJ1ZTsKICAgIH0KICAgIGZ1bmN0aW9uIHVuUGF1c2VHYW1lKCkgcHVibGljIG9ubHlPd25lciB7CiAgICAgICAgaXNQYXVzZWQgPSBmYWxzZTsKICAgIH0KICAgIGZ1bmN0aW9uIEdldElzUGF1c2VkKCkgcHVibGljIHZpZXcgcmV0dXJucyhib29sKSB7CiAgICAgICByZXR1cm4oaXNQYXVzZWQpOwogICAgfQoKICAgIC8qCiAgICBUaGlzIGZ1bmN0aW9uIGFsbG93cyBwbGF5ZXJzIHRvIHB1cmNoYXNlIGNyeXB0b2dhbWVycyBmcm9tIG90aGVyIHBsYXllcnMuIAogICAgVGhlIHByaWNlIGlzIGF1dG9tYXRpY2FsbHkgbXVsdGlwbGllZCBieSAxLjUgYWZ0ZXIgZWFjaCBwdXJjaGFzZS4KICAgICovCiAgICBmdW5jdGlvbiBwdXJjaGFzZUNyeXB0b0dhbWVyKHVpbnQgX2NyeXB0b0dhbWVySWQpIHB1YmxpYyBwYXlhYmxlIHsKICAgICAgICByZXF1aXJlKG1zZy52YWx1ZSA9PSBjcnlwdG9HYW1lcnNbX2NyeXB0b0dhbWVySWRdLmN1clByaWNlKTsKICAgICAgICByZXF1aXJlKGlzUGF1c2VkID09IGZhbHNlKTsKCiAgICAgICAgLy8gQ2FsY3VsYXRlIHRoZSA1JSB2YWx1ZQogICAgICAgIHVpbnQyNTYgY29tbWlzc2lvbjVwZXJjZW50ID0gKChtc2cudmFsdWUgLyAxMCkvMik7CiAgICAgICAgCiAgICAgICAgLy8gVHJhbnNmZXIgdGhlIDUlIGNvbW1pc3Npb24gdG8gdGhlIG93bmVyIG9mIHRoZSBsZWFzdCBleHBlbnNpdmUgYW5kIG1vc3QgZXhwZW5zaXZlIGNyeXB0b2dhbWUKICAgICAgICBhZGRyZXNzIGxlYXN0RXhwZW5zaXZlQ3J5cHRvR2FtZXJPd25lciA9IGNyeXB0b0dhbWVyc1tnZXRMZWFzdEV4cGVuc2l2ZUNyeXB0b0dhbWVyKCldLm93bmVyQWRkcmVzczsKICAgICAgICBhZGRyZXNzIG1vc3RFeHBlbnNpdmVDcnlwdG9HYW1lck93bmVyID0gY3J5cHRvR2FtZXJzW2dldE1vc3RFeHBlbnNpdmVDcnlwdG9HYW1lcigpXS5vd25lckFkZHJlc3M7CiAgICAgICAgCiAgICAgICAgLy8gV2UgY2hlY2sgaWYgdGhlIGNvbnRyYWN0IGlzIHN0aWxsIHRoZSBvd25lciBvZiB0aGUgbW9zdC9sZWFzdCBleHBlbnNpdmUgY3J5cHRvZ2FtZXJzIAogICAgICAgIGlmKGxlYXN0RXhwZW5zaXZlQ3J5cHRvR2FtZXJPd25lciA9PSBhZGRyZXNzKHRoaXMpKSB7IAogICAgICAgICAgICBsZWFzdEV4cGVuc2l2ZUNyeXB0b0dhbWVyT3duZXIgPSBjb250cmFjdE93bmVyQWRkcmVzczsgCiAgICAgICAgfQogICAgICAgIGlmKG1vc3RFeHBlbnNpdmVDcnlwdG9HYW1lck93bmVyID09IGFkZHJlc3ModGhpcykpIHsgCiAgICAgICAgICAgIG1vc3RFeHBlbnNpdmVDcnlwdG9HYW1lck93bmVyID0gY29udHJhY3RPd25lckFkZHJlc3M7IAogICAgICAgIH0KICAgICAgICAKICAgICAgICBsZWFzdEV4cGVuc2l2ZUNyeXB0b0dhbWVyT3duZXIudHJhbnNmZXIoY29tbWlzc2lvbjVwZXJjZW50KTsgLy8gPT4gNSUgIAogICAgICAgIG1vc3RFeHBlbnNpdmVDcnlwdG9HYW1lck93bmVyLnRyYW5zZmVyKGNvbW1pc3Npb241cGVyY2VudCk7IC8vID0+IDUlICAKCiAgICAgICAgLy8gQ2FsY3VsYXRlIHRoZSBvd25lciBjb21taXNzaW9uIG9uIHRoaXMgc2FsZSAmIHRyYW5zZmVyIHRoZSBjb21taXNzaW9uIHRvIHRoZSBvd25lci4gICAgICAKICAgICAgICB1aW50MjU2IGNvbW1pc3Npb25Pd25lciA9IG1zZy52YWx1ZSAtIChjb21taXNzaW9uNXBlcmNlbnQgKiAzKTsgLy8gPT4gODUlCiAgICAgICAgCiAgICAgICAgLy8gVGhpcyBjcnlwdG9HYW1lciBpcyBzdGlsbCBvd25lZCBieSB0aGUgY29udHJhY3QsIHdlIHRyYW5zZmVyIHRoZSBjb21taXNzaW9uIHRvIHRoZSBvd25lckFkZHJlc3MKICAgICAgICBpZihjcnlwdG9HYW1lcnNbX2NyeXB0b0dhbWVySWRdLm93bmVyQWRkcmVzcyA9PSBhZGRyZXNzKHRoaXMpKSB7CiAgICAgICAgICAgIGNvbnRyYWN0T3duZXJBZGRyZXNzLnRyYW5zZmVyKGNvbW1pc3Npb25Pd25lcik7CgogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIC8vIFRoaXMgY3J5cHRvZ2FtZXIgaXMgb3duZWQgYnkgYSB1c2VyLCB3ZSB0cmFuc2ZlciB0aGUgY29tbWlzc2lvbiB0byB0aGlzIHBsYXllcgogICAgICAgICAgICBjcnlwdG9HYW1lcnNbX2NyeXB0b0dhbWVySWRdLm93bmVyQWRkcmVzcy50cmFuc2Zlcihjb21taXNzaW9uT3duZXIpOwogICAgICAgIH0KICAgICAgICAKCiAgICAgICAgLy8gVHJhbnNmZXIgdGhlIDUlIGNvbW1pc3Npb24gdG8gdGhlIGRldmVsb3BlcgogICAgICAgIGNvbnRyYWN0T3duZXJBZGRyZXNzLnRyYW5zZmVyKGNvbW1pc3Npb241cGVyY2VudCk7IC8vID0+IDUlICAgICAgICAgICAgICAgICAgIAoKICAgICAgICAvLyBVcGRhdGUgdGhlIGNvbXBhbnkgb3duZXIgYW5kIHNldCB0aGUgbmV3IHByaWNlCiAgICAgICAgY3J5cHRvR2FtZXJzW19jcnlwdG9HYW1lcklkXS5vd25lckFkZHJlc3MgPSBtc2cuc2VuZGVyOwogICAgICAgIGNyeXB0b0dhbWVyc1tfY3J5cHRvR2FtZXJJZF0uY3VyUHJpY2UgPSBjcnlwdG9HYW1lcnNbX2NyeXB0b0dhbWVySWRdLmN1clByaWNlICsgKGNyeXB0b0dhbWVyc1tfY3J5cHRvR2FtZXJJZF0uY3VyUHJpY2UgLyAyKTsKICAgIH0KCiAgICAvKgogICAgVGhpcyBpcyB0aGUgZnVuY3Rpb24gdGhhdCB3aWxsIGFsbG93IHBsYXllcnMgdG8gcHVyY2hhc2UgdGhlIGNvbnRyYWN0LiAKICAgIFRoZSBpbml0aWFsIHByaWNlIGlzIHNldCB0byAyNkVUSCAoMjYwMDAwMDAwMDAwMDAwMDAwMDAgV0VJKS4KICAgIFRoZSBvd25lciBvZiB0aGUgY29udHJhY3QgY2FuIGNyZWF0ZSBuZXcgcGxheWVycyBhbmQgd2lsbCByZWNlaXZlIGEgNSUgY29tbWlzc2lvbiBvbiBldmVyeSBzYWxlcwogICAgKi8KICAgIGZ1bmN0aW9uIHB1cmNoYXNlQ29udHJhY3QoKSBwdWJsaWMgcGF5YWJsZSB7CiAgICAgICAgcmVxdWlyZShtc2cudmFsdWUgPT0gcHJpY2VDb250cmFjdCk7CiAgICAgICAgCiAgICAgICAgLy8gQ2FsY3VsYXRlIHRoZSA1JSB2YWx1ZQogICAgICAgIHVpbnQyNTYgY29tbWlzc2lvbjVwZXJjZW50ID0gKChtc2cudmFsdWUgLyAxMCkvMik7CiAgICAgICAgCiAgICAgICAgLy8gVHJhbnNmZXIgdGhlIDUlIGNvbW1pc3Npb24gdG8gdGhlIG93bmVyIG9mIHRoZSBsZWFzdCBleHBlbnNpdmUgYW5kIG1vc3QgZXhwZW5zaXZlIGNyeXB0b2dhbWUKICAgICAgICBhZGRyZXNzIGxlYXN0RXhwZW5zaXZlQ3J5cHRvR2FtZXJPd25lciA9IGNyeXB0b0dhbWVyc1tnZXRMZWFzdEV4cGVuc2l2ZUNyeXB0b0dhbWVyKCldLm93bmVyQWRkcmVzczsKICAgICAgICBhZGRyZXNzIG1vc3RFeHBlbnNpdmVDcnlwdG9HYW1lck93bmVyID0gY3J5cHRvR2FtZXJzW2dldE1vc3RFeHBlbnNpdmVDcnlwdG9HYW1lcigpXS5vd25lckFkZHJlc3M7CiAgICAgICAgCiAgICAgICAgLy8gV2UgY2hlY2sgaWYgdGhlIGNvbnRyYWN0IGlzIHN0aWxsIHRoZSBvd25lciBvZiB0aGUgbW9zdC9sZWFzdCBleHBlbnNpdmUgY3J5cHRvZ2FtZXJzIAogICAgICAgIGlmKGxlYXN0RXhwZW5zaXZlQ3J5cHRvR2FtZXJPd25lciA9PSBhZGRyZXNzKHRoaXMpKSB7IAogICAgICAgICAgICBsZWFzdEV4cGVuc2l2ZUNyeXB0b0dhbWVyT3duZXIgPSBjb250cmFjdE93bmVyQWRkcmVzczsgCiAgICAgICAgfQogICAgICAgIGlmKG1vc3RFeHBlbnNpdmVDcnlwdG9HYW1lck93bmVyID09IGFkZHJlc3ModGhpcykpIHsgCiAgICAgICAgICAgIG1vc3RFeHBlbnNpdmVDcnlwdG9HYW1lck93bmVyID0gY29udHJhY3RPd25lckFkZHJlc3M7IAogICAgICAgIH0KICAgICAgICAKICAgICAgICAvLyBUcmFuc2ZlciB0aGUgY29tbWlzc2lvbgogICAgICAgIGxlYXN0RXhwZW5zaXZlQ3J5cHRvR2FtZXJPd25lci50cmFuc2Zlcihjb21taXNzaW9uNXBlcmNlbnQpOyAvLyA9PiA1JSAgCiAgICAgICAgbW9zdEV4cGVuc2l2ZUNyeXB0b0dhbWVyT3duZXIudHJhbnNmZXIoY29tbWlzc2lvbjVwZXJjZW50KTsgLy8gPT4gNSUgIAoKICAgICAgICAvLyBDYWxjdWxhdGUgdGhlIG93bmVyIGNvbW1pc3Npb24gb24gdGhpcyBzYWxlICYgdHJhbnNmZXIgdGhlIGNvbW1pc3Npb24gdG8gdGhlIG93bmVyLiAgICAgIAogICAgICAgIHVpbnQyNTYgY29tbWlzc2lvbk93bmVyID0gbXNnLnZhbHVlIC0gKGNvbW1pc3Npb241cGVyY2VudCAqIDIpOyAvLyA9PiA4NSUKICAgICAgICAKICAgICAgICBjb250cmFjdE93bmVyQWRkcmVzcy50cmFuc2Zlcihjb21taXNzaW9uT3duZXIpOwogICAgICAgIGNvbnRyYWN0T3duZXJBZGRyZXNzID0gbXNnLnNlbmRlcjsKICAgIH0KCiAgICBmdW5jdGlvbiBnZXRQcmljZUNvbnRyYWN0KCkgcHVibGljIHZpZXcgcmV0dXJucyh1aW50KSB7CiAgICAgICAgcmV0dXJuKHByaWNlQ29udHJhY3QpOwogICAgfQoKICAgIC8qCiAgICBUaGUgb3duZXIgb2YgdGhlIGNvbnRyYWN0IGNhbiB1c2UgdGhpcyBmdW5jdGlvbiB0byBtb2RpZnkgdGhlIHByaWNlIG9mIHRoZSBjb250cmFjdC4KICAgIFRoZSBwcmljZSBpcyBzZXQgaW4gV0VJCiAgICAqLwogICAgZnVuY3Rpb24gdXBkYXRlUHJpY2VDb250cmFjdCh1aW50MjU2IF9uZXdQcmljZSkgcHVibGljIG9ubHlPd25lciB7CiAgICAgICAgcHJpY2VDb250cmFjdCA9IF9uZXdQcmljZTsKICAgIH0KCiAgICAvLyBTaW1wbHkgcmV0dXJucyB0aGUgY3VycmVudCBvd25lciBhZGRyZXNzCiAgICBmdW5jdGlvbiBnZXRDb250cmFjdE93bmVyQWRkcmVzcygpIHB1YmxpYyB2aWV3IHJldHVybnMoYWRkcmVzcykgewogICAgICAgIHJldHVybihjb250cmFjdE93bmVyQWRkcmVzcyk7CiAgICB9CgogICAgLyoKICAgIFRoZSBvd25lciBvZiBhIGNvbXBhbnkgY2FuIHJlZHVjZSB0aGUgcHJpY2Ugb2YgdGhlIGNvbXBhbnkgdXNpbmcgdGhpcyBmdW5jdGlvbi4KICAgIFRoZSBwcmljZSBjYW4gYmUgcmVkdWNlZCBidXQgY2Fubm90IGJlIGJpZ2dlci4KICAgIFRoZSBwcmljZSBpcyBzZXQgaW4gV0VJLgogICAgKi8KICAgIGZ1bmN0aW9uIHVwZGF0ZUNyeXB0b0dhbWVyUHJpY2UodWludCBfY3J5cHRvR2FtZXJJZCwgdWludDI1NiBfbmV3UHJpY2UpIHB1YmxpYyB7CiAgICAgICAgcmVxdWlyZShfbmV3UHJpY2UgPiAwKTsKICAgICAgICByZXF1aXJlKGNyeXB0b0dhbWVyc1tfY3J5cHRvR2FtZXJJZF0ub3duZXJBZGRyZXNzID09IG1zZy5zZW5kZXIpOwogICAgICAgIHJlcXVpcmUoX25ld1ByaWNlIDwgY3J5cHRvR2FtZXJzW19jcnlwdG9HYW1lcklkXS5jdXJQcmljZSk7CiAgICAgICAgY3J5cHRvR2FtZXJzW19jcnlwdG9HYW1lcklkXS5jdXJQcmljZSA9IF9uZXdQcmljZTsKICAgIH0KICAgIAogICAgLy8gVGhpcyBmdW5jdGlvbiB3aWxsIHJldHVybiB0aGUgZGV0YWlscyBvZiBhIGNyeXB0b2dhbWVyCiAgICBmdW5jdGlvbiBnZXRDcnlwdG9HYW1lcih1aW50IF9jcnlwdG9HYW1lcklkKSBwdWJsaWMgdmlldyByZXR1cm5zICgKICAgICAgICBzdHJpbmcgbmFtZSwKICAgICAgICBhZGRyZXNzIG93bmVyQWRkcmVzcywKICAgICAgICB1aW50MjU2IGN1clByaWNlCiAgICApIHsKICAgICAgICBDcnlwdG9HYW1lciBzdG9yYWdlIF9jcnlwdG9HYW1lciA9IGNyeXB0b0dhbWVyc1tfY3J5cHRvR2FtZXJJZF07CgogICAgICAgIG5hbWUgPSBfY3J5cHRvR2FtZXIubmFtZTsKICAgICAgICBvd25lckFkZHJlc3MgPSBfY3J5cHRvR2FtZXIub3duZXJBZGRyZXNzOwogICAgICAgIGN1clByaWNlID0gX2NyeXB0b0dhbWVyLmN1clByaWNlOwogICAgfQogICAgCiAgICAvKgogICAgR2V0IGxlYXN0IGV4cGVuc2l2ZSBjcnlwdG8gZ2FtZXJzICh0byB0cmFuc2ZlciB0aGUgb3duZXIgNSUgb2YgdGhlIHRyYW5zYWN0aW9uKQogICAgSWYgbXVsdGlwbGUgY3J5cHRvZ2FtZXJzIGhhdmUgdGhlIHNhbWUgcHJpY2UsIHRoZSBzZWxlY3RlZCBvbmUgd2lsbCBiZSB0aGUgY3J5cHRvZ2FtZXIgd2l0aCB0aGUgc21hbGxlZCBpZCAKICAgICovCiAgICBmdW5jdGlvbiBnZXRMZWFzdEV4cGVuc2l2ZUNyeXB0b0dhbWVyKCkgcHVibGljIHZpZXcgcmV0dXJucyh1aW50KSB7CiAgICAgICAgdWludCBfbGVhc3RFeHBlbnNpdmVHYW1lcklkID0gMDsKICAgICAgICB1aW50MjU2IF9sZWFzdEV4cGVuc2l2ZUdhbWVyUHJpY2UgPSA5OTk5MDAwMDAwMDAwMDAwMDAwMDAwOwoKICAgICAgICAvLyBMb29wIHRocm91Z2ggYWxsIHRoZSBzaGFyZXMgb2YgdGhpcyBjb21wYW55CiAgICAgICAgZm9yICh1aW50OCBpID0gMDsgaSA8IGNyeXB0b0dhbWVycy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICBpZihjcnlwdG9HYW1lcnNbaV0uY3VyUHJpY2UgPCBfbGVhc3RFeHBlbnNpdmVHYW1lclByaWNlKSB7CiAgICAgICAgICAgICAgICBfbGVhc3RFeHBlbnNpdmVHYW1lclByaWNlID0gY3J5cHRvR2FtZXJzW2ldLmN1clByaWNlOwogICAgICAgICAgICAgICAgX2xlYXN0RXhwZW5zaXZlR2FtZXJJZCA9IGk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmV0dXJuKF9sZWFzdEV4cGVuc2l2ZUdhbWVySWQpOwogICAgfQoKICAgIC8qIAogICAgR2V0IG1vc3QgZXhwZW5zaXZlIGNyeXB0byBnYW1lcnMgKHRvIHRyYW5zZmVyIHRoZSBvd25lciA1JSBvZiB0aGUgdHJhbnNhY3Rpb24pCiAgICAgSWYgbXVsdGlwbGUgY3J5cHRvZ2FtZXJzIGhhdmUgdGhlIHNhbWUgcHJpY2UsIHRoZSBzZWxlY3RlZCBvbmUgd2lsbCBiZSB0aGUgY3J5cHRvZ2FtZXIgd2l0aCB0aGUgc21hbGxlZCBpZCAKICAgICAqLwogICAgZnVuY3Rpb24gZ2V0TW9zdEV4cGVuc2l2ZUNyeXB0b0dhbWVyKCkgcHVibGljIHZpZXcgcmV0dXJucyh1aW50KSB7CiAgICAgICAgdWludCBfbW9zdEV4cGVuc2l2ZUdhbWVySWQgPSAwOwogICAgICAgIHVpbnQyNTYgX21vc3RFeHBlbnNpdmVHYW1lclByaWNlID0gOTk5OTAwMDAwMDAwMDAwMDAwMDAwMDsKCiAgICAgICAgLy8gTG9vcCB0aHJvdWdoIGFsbCB0aGUgc2hhcmVzIG9mIHRoaXMgY29tcGFueQogICAgICAgIGZvciAodWludDggaSA9IDA7IGkgPCBjcnlwdG9HYW1lcnMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgaWYoY3J5cHRvR2FtZXJzW2ldLmN1clByaWNlID4gX21vc3RFeHBlbnNpdmVHYW1lclByaWNlKSB7CiAgICAgICAgICAgICAgICBfbW9zdEV4cGVuc2l2ZUdhbWVyUHJpY2UgPSBjcnlwdG9HYW1lcnNbaV0uY3VyUHJpY2U7CiAgICAgICAgICAgICAgICBfbW9zdEV4cGVuc2l2ZUdhbWVySWQgPSBpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybihfbW9zdEV4cGVuc2l2ZUdhbWVySWQpOwogICAgfQogICAgCiAgICAvKioKICAgIEBkZXYgTXVsdGlwbGllcyB0d28gbnVtYmVycywgdGhyb3dzIG9uIG92ZXJmbG93LiA9PiBGcm9tIHRoZSBTYWZlTWF0aCBsaWJyYXJ5CiAgICAqLwogICAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICBpZiAoYSA9PSAwKSB7CiAgICAgICAgICByZXR1cm4gMDsKICAgICAgICB9CiAgICAgICAgdWludDI1NiBjID0gYSAqIGI7CiAgICAgICAgYXNzZXJ0KGMgLyBhID09IGIpOwogICAgICAgIHJldHVybiBjOwogICAgfQoKICAgIC8qKgogICAgQGRldiBJbnRlZ2VyIGRpdmlzaW9uIG9mIHR3byBudW1iZXJzLCB0cnVuY2F0aW5nIHRoZSBxdW90aWVudC4gPT4gRnJvbSB0aGUgU2FmZU1hdGggbGlicmFyeQogICAgKi8KICAgIGZ1bmN0aW9uIGRpdih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgLy8gYXNzZXJ0KGIgPiAwKTsgLy8gU29saWRpdHkgYXV0b21hdGljYWxseSB0aHJvd3Mgd2hlbiBkaXZpZGluZyBieSAwCiAgICAgICAgdWludDI1NiBjID0gYSAvIGI7CiAgICAgICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICAgICAgICByZXR1cm4gYzsKICAgIH0KICAgIAogICAgLyoKICAgIFRoZSBvd25lciBjYW4gdXNlIHRoaXMgZnVuY3Rpb24gdG8gY3JlYXRlIG5ldyBjcnlwdG9HYW1lcnMuCiAgICBUaGUgcHJpY2UgaXMgc2V0IGluIFdFSQogICAgSW1wb3J0YW50OiBJZiB5b3UgcHVyY2hhc2VkIHRoZSBjb250cmFjdCBhbmQgYXJlIHRoZSBvd25lciBvZiB0aGlzIGdhbWUsIGNyZWF0ZSB0aGUgQ3J5cHRvR2FtZXJzIGZyb20geW91ciBhZG1pbiBzZWN0aW9uIGluIHRoZSBnYW1lIGluc3RlYWQgY2FsbGluZyB0aGlzIGZ1bmN0aW9uIGZyb20gYW5vdGhlciBwbGFjZS4KICAgICovCiAgICBmdW5jdGlvbiBjcmVhdGVDcnlwdG9HYW1lcihzdHJpbmcgX2NyeXB0b0dhbWVyTmFtZSwgdWludDI1NiBfY3J5cHRvR2FtZXJQcmljZSkgcHVibGljIG9ubHlPd25lciB7CiAgICAgICAgY3J5cHRvR2FtZXJzLnB1c2goQ3J5cHRvR2FtZXIoX2NyeXB0b0dhbWVyTmFtZSwgYWRkcmVzcyh0aGlzKSwgX2NyeXB0b0dhbWVyUHJpY2UpKTsKICAgIH0KICAgIAogICAgLy8gSW5pdGlhdGUgZnVuY3Rpb25zIHRoYXQgd2lsbCBjcmVhdGUgdGhlIGNyeXB0b0dhbWVycwogICAgZnVuY3Rpb24gSW5pdGlhdGVDcnlwdG9HYW1lcnMoKSBwdWJsaWMgb25seU93bmVyIHsKICAgICAgICByZXF1aXJlKGNyeXB0b0dhbWVyc0FyZUluaXRpYXRlZCA9PSBmYWxzZSk7CiAgICAgICAgY3JlYXRlQ3J5cHRvR2FtZXIoIlBoaWwiLCA0NTAwMDAwMDAwMDAwMDAwMDApOyAKICAgICAgICBjcmVhdGVDcnlwdG9HYW1lcigiQ2FybGluaTgiLCAzMTAwMDAwMDAwMDAwMDAwMDApOyAKICAgICAgICBjcmVhdGVDcnlwdG9HYW1lcigiRmVyb2Npb3VzIiwgMjUwMDAwMDAwMDAwMDAwMDAwKTsgCiAgICAgICAgY3JlYXRlQ3J5cHRvR2FtZXIoIlByYW5rZWQiLCAyMjQwMDAwMDAwMDAwMDAwMDApOyAKICAgICAgICBjcmVhdGVDcnlwdG9HYW1lcigiU3dhZ0RhUGFuZGEiLCAxODEwMDAwMDAwMDAwMDAwMDApOyAKICAgICAgICBjcmVhdGVDcnlwdG9HYW1lcigiU2x1c2giLCAxNDEwMDAwMDAwMDAwMDAwMDApOyAKICAgICAgICBjcmVhdGVDcnlwdG9HYW1lcigiQWNhcHVjayIsIDEwNzAwMDAwMDAwMDAwMDAwMCk7IAogICAgICAgIGNyZWF0ZUNyeXB0b0dhbWVyKCJBcnd5bmlhbiIsIDEzMTAwMDAwMDAwMDAwMDAwMCk7IAogICAgICAgIGNyZWF0ZUNyeXB0b0dhbWVyKCJCb2hsIiwgMTA2MDAwMDAwMDAwMDAwMDAwKTsKICAgICAgICBjcmVhdGVDcnlwdG9HYW1lcigiQ29yZ2kiLCA5MTUwMDAwMDAwMDAwMDAwMCk7CiAgICAgICAgY3JlYXRlQ3J5cHRvR2FtZXIoIkVuZGVyaGVybyIsIDEwNDAwMDAwMDAwMDAwMDAwMCk7CiAgICAgICAgY3JlYXRlQ3J5cHRvR2FtZXIoIkhlY2F0b25xdWlybyIsIDEwNTAwMDAwMDAwMDAwMDAwMCk7CiAgICAgICAgY3JlYXRlQ3J5cHRvR2FtZXIoImhlcmIiLCAxMDE1MDAwMDAwMDAwMDAwMDApOwogICAgICAgIGNyZWF0ZUNyeXB0b0dhbWVyKCJLYWlsIiwgMTAzMDAwMDAwMDAwMDAwMDAwKTsKICAgICAgICBjcmVhdGVDcnlwdG9HYW1lcigia2FydXBpbiB0aGUgY2F0IiwgMTA4MTAwMDAwMDAwMDAwMDAwKTsKICAgICAgICBjcmVhdGVDcnlwdG9HYW1lcigiTGl2ZUZyZWUiLCA5MDEwMDAwMDAwMDAwMDAwMCk7CiAgICAgICAgY3JlYXRlQ3J5cHRvR2FtZXIoIlByb2tpbGxlciIsIDEwMDIwMDAwMDAwMDAwMDAwMCk7CiAgICAgICAgY3JlYXRlQ3J5cHRvR2FtZXIoIlNhbmtvIiwgMTAxMDAwMDAwMDAwMDAwMDAwKTsKICAgICAgICBjcmVhdGVDcnlwdG9HYW1lcigiVGhlSGVybWl0TW9uayIsIDEwMDAwMDAwMDAwMDAwMDAwMCk7CiAgICAgICAgY3JlYXRlQ3J5cHRvR2FtZXIoIlRvbWlTaGFya2VkIiwgODkwMDAwMDAwMDAwMDAwMDApOwogICAgICAgIGNyZWF0ZUNyeXB0b0dhbWVyKCJaYWxtYW4iLCA5MjAwMDAwMDAwMDAwMDAwMCk7CiAgICAgICAgY3JlYXRlQ3J5cHRvR2FtZXIoInh4RnlNeHgiLCAxMTAwMDAwMDAwMDAwMDAwMDApOwogICAgICAgIGNyZWF0ZUNyeXB0b0dhbWVyKCJVbmNsZVRvbSIsIDkwMDAwMDAwMDAwMDAwMDAwKTsKICAgICAgICBjcmVhdGVDcnlwdG9HYW1lcigibGVnYWwiLCAxMTUwMDAwMDAwMDAwMDAwMDApOwogICAgICAgIGNyZWF0ZUNyeXB0b0dhbWVyKCJUZXJwc2ljb3JlcyIsIDEwMjAwMDAwMDAwMDAwMDAwMCk7CiAgICAgICAgY3JlYXRlQ3J5cHRvR2FtZXIoInRyaWNlcmF0b3BzIiwgMTA5MDAwMDAwMDAwMDAwMDAwKTsKICAgICAgICBjcmVhdGVDcnlwdG9HYW1lcigic291dG8iLCA4NTAwMDAwMDAwMDAwMDAwMCk7CiAgICB9Cn0='.
	

]
