Class {
	#name : #SRT5cac5ac21b93095490f736205df600fb4449aee1,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT5cac5ac21b93095490f736205df600fb4449aee1 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7Cgpjb250cmFjdCB0b2tlbiB7ZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyByZWNlaXZlciwgdWludCBhbW91bnQpeyB9fQoKY29udHJhY3QgRmF6Qml0c0Nyb3dkc2FsZSB7CiAgICB1aW50IHB1YmxpYyBhbW91bnRSYWlzZWQ7IHVpbnQgcHVibGljIHJlc0Ftb3VudDsgdWludCBwdWJsaWMgc29sZFRva2VuczsKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSBwdWJsaWMgYmFsYW5jZU9mOwogICAgZXZlbnQgR29hbFJlYWNoZWQoYWRkcmVzcyBiZW5lZmljaWFyeSwgdWludCBhbW91bnRSYWlzZWQpOwogICAgZXZlbnQgRnVuZFRyYW5zZmVyKGFkZHJlc3MgYmFja2VyLCB1aW50IGFtb3VudCwgYm9vbCBpc0NvbnRyaWJ1dGlvbik7CiAgICBib29sIHB1YmxpYyBjcm93ZHNhbGVDbG9zZWQgPSBmYWxzZTsKICAgIGJvb2wgcHVibGljIG1pbmltdW1UYXJnZXRSZWFjaGVkID0gZmFsc2U7CgogICAgLy8gaW5pdGlhbGl6YXRpb24KICAgIGFkZHJlc3MgcHVibGljIGJlbmVmaWNpYXJ5ID0gMHg4OTQ2NGQ1MUFmMUM2ZWRiMkUxMTZjMjg3OThDOUEwNmU1NzRkMjk5Oy8qaWZTdWNjZXNzZnVsU2VuZFRvKi8KICAgIHVpbnQgcHVibGljIHByaWNlID0gMC4wMDE1IGV0aGVyOy8qY29zdE9mRWFjaFRva2VuKi8KICAgIHVpbnQgcHVibGljIG1pbmltdW1UYXJnZXQgPSAxMDAgKiBwcmljZTsvKm1pbmltdW1UYXJnZXRJblRva2VucyovCiAgICB1aW50IHB1YmxpYyBtYXhpbXVtVGFyZ2V0ID0gMjUwMDAwICogcHJpY2U7LyptYXhpbXVtVGFyZ2V0SW5Ub2tlbnMqLwogICAgdWludCBwdWJsaWMgZGVhZGxpbmUgPSAgbm93ICsgMTAwODAgKiAxIG1pbnV0ZXM7LypkdXJhdGlvbkluTWludXRlcyovCiAgICB0b2tlbiBwdWJsaWMgdG9rZW5SZXdhcmQgPSB0b2tlbigweEQ4YTE5MDM4Q2E2ZDc1MjI3QWQ1YTVkN2VjMzM1YTExMWFkNkUxNDEpOy8qYWRkcmVzc09mVG9rZW5Vc2VkQXNSZXdhcmQqLwoKCiAgICAvLyB0aGUgZnVuY3Rpb24gd2l0aG91dCBuYW1lIGlzIHRoZSBkZWZhdWx0IGZ1bmN0aW9uIHRoYXQgaXMgY2FsbGVkIHdoZW5ldmVyIGFueW9uZSBzZW5kcyBmdW5kcyB0byBhIGNvbnRyYWN0CiAgICBmdW5jdGlvbiAoKSBwYXlhYmxlIHsKICAgICAgICBpZiAoY3Jvd2RzYWxlQ2xvc2VkIHx8IChtYXhpbXVtVGFyZ2V0IC0gYW1vdW50UmFpc2VkKSA8IG1zZy52YWx1ZSkgdGhyb3c7CiAgICAgICAgdWludCBhbW91bnQgPSBtc2cudmFsdWU7CiAgICAgICAgYmFsYW5jZU9mW21zZy5zZW5kZXJdICs9IGFtb3VudDsKICAgICAgICBhbW91bnRSYWlzZWQgKz0gYW1vdW50OwogICAgICAgIHJlc0Ftb3VudCArPSBhbW91bnQ7CiAgICAgICAgc29sZFRva2VucyArPSBhbW91bnQgLyBwcmljZTsKICAgICAgICB0b2tlblJld2FyZC50cmFuc2Zlcihtc2cuc2VuZGVyLCBhbW91bnQgLyBwcmljZSk7CiAgICAgICAgRnVuZFRyYW5zZmVyKG1zZy5zZW5kZXIsIGFtb3VudCwgdHJ1ZSk7CgogICAgICAgIGlmIChhbW91bnRSYWlzZWQgPj0gbWluaW11bVRhcmdldCAmJiAhbWluaW11bVRhcmdldFJlYWNoZWQpIHsKICAgICAgICAgICAgbWluaW11bVRhcmdldFJlYWNoZWQgPSB0cnVlOwogICAgICAgICAgICBHb2FsUmVhY2hlZChiZW5lZmljaWFyeSwgbWluaW11bVRhcmdldCk7CiAgICAgICAgfQoKICAgICAgICAvLyBmdW5kcyBhcmUgc2VuZGluZyB0byBiZW5lZmljaWFyeSBhY2NvdW50IGFmdGVyIG1pbmltdW1UYXJnZXQgd2lsbCBiZSByZWFjaGVkCiAgICAgICAgaWYgKG1pbmltdW1UYXJnZXRSZWFjaGVkKSB7CiAgICAgICAgICAgIGlmIChiZW5lZmljaWFyeS5zZW5kKGFtb3VudCkpIHsKICAgICAgICAgICAgICAgIEZ1bmRUcmFuc2ZlcihiZW5lZmljaWFyeSwgYW1vdW50LCBmYWxzZSk7CiAgICAgICAgICAgICAgICByZXNBbW91bnQgLT0gYW1vdW50OwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKICAgIC8vIGRldiBmdW5jdGlvbiBmb3Igd2l0aGRyYXcgYW55IGFtb3VudCBmcm9tIHJhaXNlZCBmdW5kcyAoYWN0aXZhdGUgb25seSBpZiBtaW5pbXVtVGFyZ2V0IGlzIHJlYWNoZWQpCiAgICBmdW5jdGlvbiBkZXZXaXRoZHJhd2FsKHVpbnQgbnVtLCB1aW50IGRlbikgewogICAgICAgIGlmICghbWluaW11bVRhcmdldFJlYWNoZWQgfHwgIShiZW5lZmljaWFyeSA9PSBtc2cuc2VuZGVyKSkgdGhyb3c7CiAgICAgICAgdWludCB3QW1vdW50ID0gbnVtIC8gZGVuOwogICAgICAgIGlmIChiZW5lZmljaWFyeS5zZW5kKHdBbW91bnQpKSB7CiAgICAgICAgICAgIEZ1bmRUcmFuc2ZlcihiZW5lZmljaWFyeSwgd0Ftb3VudCwgZmFsc2UpOwogICAgICAgIH0KICAgIH0KCiAgICAvLyBkZXYgZnVuY3Rpb24gZm9yIHdpdGhkcmF3IGFtb3VudCwgd2hpY2ggYmUgcmVzZXJ2ZWQgYnkgbWluaW11bVRhcmdldCAoYWN0aXZhdGUgb25seSBpZiBtaW5pbXVtVGFyZ2V0IGlzIHJlYWNoZWQpCiAgICBmdW5jdGlvbiBkZXZSZXNXaXRoZHJhd2FsKCkgewogICAgICAgIGlmICghbWluaW11bVRhcmdldFJlYWNoZWQgfHwgIShiZW5lZmljaWFyeSA9PSBtc2cuc2VuZGVyKSkgdGhyb3c7CiAgICAgICAgaWYgKGJlbmVmaWNpYXJ5LnNlbmQocmVzQW1vdW50KSkgewogICAgICAgICAgICBGdW5kVHJhbnNmZXIoYmVuZWZpY2lhcnksIHJlc0Ftb3VudCwgZmFsc2UpOwogICAgICAgICAgICByZXNBbW91bnQgPSAwOwogICAgICAgIH0KICAgIH0KCiAgICAvLyBkZXYgZnVuY3Rpb24gZm9yIGNsb3NlIGNyb3dkc2FsZSAgCiAgICBmdW5jdGlvbiBjbG9zZUNyb3dkc2FsZShib29sIGNsb3NlVHlwZSkgewogICAgICAgICBpZiAoYmVuZWZpY2lhcnkgPT0gbXNnLnNlbmRlcikgewogICAgICAgICAgICBjcm93ZHNhbGVDbG9zZWQgPSBjbG9zZVR5cGU7CiAgICAgICAgIH0KICAgIH0KCgogICAgbW9kaWZpZXIgYWZ0ZXJEZWFkbGluZSgpIHsgaWYgKG5vdyA+PSBkZWFkbGluZSkgXzsgfQoKICAgIC8vIGNoZWNrcyBpZiB0aGUgbWluaW11bVRhcmdldCBoYXMgYmVlbiByZWFjaGVkCiAgICBmdW5jdGlvbiBjaGVja1RhcmdldFJlYWNoZWQoKSBhZnRlckRlYWRsaW5lIHsKICAgICAgICBpZiAoYW1vdW50UmFpc2VkID49IG1pbmltdW1UYXJnZXQpIHsKICAgICAgICAgICAgbWluaW11bVRhcmdldFJlYWNoZWQgPSB0cnVlOwogICAgICAgIH0KICAgIH0KCiAgICAvLyBmdW5jdGlvbiBmb3IgcmV0dXJuIG5vbiBzb2xkIHRva2VucyB0byBkZXYgYWNjb3VudCBhZnRlciBjcm93ZHNhbGUKICAgIGZ1bmN0aW9uIHJldHVyblRva2Vucyh1aW50IHRva2Vuc0Ftb3VudCkgYWZ0ZXJEZWFkbGluZSB7CiAgICAgICAgaWYgKCFjcm93ZHNhbGVDbG9zZWQpIHRocm93OwogICAgICAgIGlmIChiZW5lZmljaWFyeSA9PSBtc2cuc2VuZGVyKSB7CiAgICAgICAgICAgIHRva2VuUmV3YXJkLnRyYW5zZmVyKGJlbmVmaWNpYXJ5LCB0b2tlbnNBbW91bnQpOwogICAgICAgIH0KICAgIH0KCiAgICAvLyByZXR1cm4geW91ciBmdW5kcyBhZnRlciBkZWFkbGluZSBpZiBtaW5pbXVtVGFyZ2V0IGlzIG5vdCByZWFjaGVkIChhY3RpdmF0ZSBpZiBjcm93ZHNhbGUgY2xvc2luZykKICAgIGZ1bmN0aW9uIHNhZmVXaXRoZHJhd2FsKCkgYWZ0ZXJEZWFkbGluZSB7CiAgICAgICAgaWYgKCFtaW5pbXVtVGFyZ2V0UmVhY2hlZCAmJiBjcm93ZHNhbGVDbG9zZWQpIHsKICAgICAgICAgICAgdWludCBhbW91bnQgPSBiYWxhbmNlT2ZbbXNnLnNlbmRlcl07CiAgICAgICAgICAgIGJhbGFuY2VPZlttc2cuc2VuZGVyXSA9IDA7CiAgICAgICAgICAgIGlmIChhbW91bnQgPiAwKSB7CiAgICAgICAgICAgICAgICBpZiAobXNnLnNlbmRlci5zZW5kKGFtb3VudCkpIHsKICAgICAgICAgICAgICAgICAgICBGdW5kVHJhbnNmZXIobXNnLnNlbmRlciwgYW1vdW50LCBmYWxzZSk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIGJhbGFuY2VPZlttc2cuc2VuZGVyXSA9IGFtb3VudDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQ=='.
	

]
