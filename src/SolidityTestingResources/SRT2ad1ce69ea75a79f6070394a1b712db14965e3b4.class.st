Class {
	#name : #SRT2ad1ce69ea75a79f6070394a1b712db14965e3b4,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT2ad1ce69ea75a79f6070394a1b712db14965e3b4 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTM7CgovKgoKTElOSyBmdW5kcyBwb29sCj09PT09PT09PT09PT09PT09PT09PT09PQoKT3JpZ2luYWwgYnk6IC91L0NpbnRpeApNb2RpZmllZCBieTogbW9vbmxhbWJvcwoKKi8KCi8vIEVSQzIwIEludGVyZmFjZTogaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL0VJUHMvaXNzdWVzLzIwCmNvbnRyYWN0IEVSQzIwIHsKICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpOwp9Cgpjb250cmFjdCBMSU5LRnVuZCB7CiAgLy8gU3RvcmUgdGhlIGFtb3VudCBvZiBFVEggZGVwb3NpdGVkIGJ5IGVhY2ggYWNjb3VudC4KICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBiYWxhbmNlczsKICAKICAvLyBUcmFjayB3aGV0aGVyIHRoZSBjb250cmFjdCBoYXMgYm91Z2h0IHRoZSB0b2tlbnMgeWV0LgogIGJvb2wgcHVibGljIGJvdWdodF90b2tlbnM7CiAgCiAgLy8gUmVjb3JkIEVUSCB2YWx1ZSBvZiB0b2tlbnMgY3VycmVudGx5IGhlbGQgYnkgY29udHJhY3QuCiAgdWludDI1NiBwdWJsaWMgY29udHJhY3RfZXRoX3ZhbHVlOwogIAogIC8vIFRoZSBtaW5pbXVtIGFtb3VudCBvZiBFVEggdGhhdCBtdXN0IGJlIGRlcG9zaXRlZCBiZWZvcmUgdGhlIGJ1eS1pbiBjYW4gYmUgcGVyZm9ybWVkLgogIC8vIEluIHRoaXMgc3BlY2lhbCBjYXNlLCB0aGUgbWluaW11bSBoYXMgYWxyZWFkeSBiZWVuIG1ldCwgaGVuY2UgYSAxIEVUSCBtaW5pbXVtLgogIHVpbnQyNTYgY29uc3RhbnQgcHVibGljIG1pbl9yZXF1aXJlZF9hbW91bnQgPSAxIGV0aGVyOwogIAogIC8vIFRoZSBtYXhpbXVtIGFtb3VudCBvZiBFVEggdGhhdCBjYW4gYmUgZGVwb3NpdGVkIGludG8gdGhlIGNvbnRyYWN0LgogIC8vIFRoZSBvd25lciBpbiBxdWVzdGlvbiB3YXMgYWxsb3dlZCAxMDAwIEVUSCwgYnV0IDMwMCBoYXMgYWxyZWFkeSBiZWVuCiAgLy8gY29udHJpYnV0ZWQsIGxlYXZpbmcgb3BlbiBhbm90aGVyIDcwMCBFVEggZm9yIHRoaXMgY29udHJhY3QgdG8gdGFrZS4KICB1aW50MjU2IGNvbnN0YW50IHB1YmxpYyBtYXhfcmFpc2VkX2Ftb3VudCA9IDcwMCBldGhlcjsKICAKICAvLyBUaGUgZmlyc3QgYmxvY2sgYWZ0ZXIgd2hpY2ggYnV5LWluIGlzIGFsbG93ZWQuIFNldCBpbiB0aGUgY29udHJhY3QgY29uc3RydWN0b3IuCiAgdWludDI1NiBwdWJsaWMgbWluX2J1eV9ibG9jazsKICAKICAvLyBUaGUgZmlyc3QgYmxvY2sgYWZ0ZXIgd2hpY2ggYSByZWZ1bmQgaXMgYWxsb3dlZC4gU2V0IGluIHRoZSBjb250cmFjdCBjb25zdHJ1Y3Rvci4KICB1aW50MjU2IHB1YmxpYyBtaW5fcmVmdW5kX2Jsb2NrOwogIAogIC8vIFRoZSBjcm93ZHNhbGUgYWRkcmVzcy4gQWRkcmVzcyBjYW4gYmUgdmVyaWZpZWQgYXQ6IGh0dHBzOi8vbGluay5zbWFydGNvbnRyYWN0LmNvbS9wcmVzYWxlcy8zOWViMmIzNC0yZGJmLTQxMDQtODA3ZC0xMmI5ZTMxNzljYmEKICBhZGRyZXNzIGNvbnN0YW50IHB1YmxpYyBzYWxlID0gMHg3MDkzMTI4NjEyYTAyZTMyRjFDMWFhNDRjQ0Q3NDExZDg0RUUwOUFjOwogIAogIC8vIFRoZSBjb250cmFjdCBjcmVhdG9yLiBVc2VkIHRvIGZpbmFsaXplIHRoZSBidXlpbmcuCiAgYWRkcmVzcyBjb25zdGFudCBwdWJsaWMgY3JlYXRvciA9IDB4MGIxMUM3YWNiNjQ3ZUNhMTFkNTEwZUVjNGZiMGMxN0JmY2NkNjQ5ODsKICAKICAvLyBDb25zdHJ1Y3Rvci4gCiAgZnVuY3Rpb24gTElOS0Z1bmQoKSB7CiAgICAvLyBCdXktaW4gYWxsb3dlZCAzNDU2IGJsb2NrcyAoYXBwcm94LiAyNCBob3VycykgYWZ0ZXIgdGhlIGNvbnRyYWN0IGlzIGRlcGxveWVkLgogICAgbWluX2J1eV9ibG9jayA9IGJsb2NrLm51bWJlciArIDM0NTY7CiAgICAKICAgIC8vIEVUSCByZWZ1bmQgYWxsb3dlZCA4NjQwMCBibG9ja3MgKGFwcHJveC4gMjQgZGF5cykgYWZ0ZXIgdGhlIGNvbnRyYWN0IGlzIGRlcGxveWVkLgogICAgbWluX3JlZnVuZF9ibG9jayA9IGJsb2NrLm51bWJlciArIDg2NDAwOwogIH0KICAKICAvLyBBbGxvd3MgYW55IHVzZXIgdG8gd2l0aGRyYXcgaGlzIHRva2Vucy4KICAvLyBUYWtlcyB0aGUgdG9rZW4ncyBFUkMyMCBhZGRyZXNzIGFzIGFyZ3VtZW50IGFzIGl0IGlzIHVua25vd24gYXQgdGhlIHRpbWUgb2YgY29udHJhY3QgZGVwbG95bWVudC4KICBmdW5jdGlvbiBwZXJmb3JtX3dpdGhkcmF3KGFkZHJlc3MgdG9rZW5BZGRyZXNzKSB7CiAgICAvLyBEaXNhbGxvdyB3aXRoZHJhdyBpZiB0b2tlbnMgaGF2ZW4ndCBiZWVuIGJvdWdodCB5ZXQuCiAgICBpZiAoIWJvdWdodF90b2tlbnMpIHRocm93OwogICAgCiAgICAvLyBSZXRyaWV2ZSBjdXJyZW50IHRva2VuIGJhbGFuY2Ugb2YgY29udHJhY3QuCiAgICBFUkMyMCB0b2tlbiA9IEVSQzIwKHRva2VuQWRkcmVzcyk7CiAgICB1aW50MjU2IGNvbnRyYWN0X3Rva2VuX2JhbGFuY2UgPSB0b2tlbi5iYWxhbmNlT2YoYWRkcmVzcyh0aGlzKSk7CiAgICAgIAogICAgLy8gRGlzYWxsb3cgdG9rZW4gd2l0aGRyYXdhbHMgaWYgdGhlcmUgYXJlIG5vIHRva2VucyB0byB3aXRoZHJhdy4KICAgIGlmIChjb250cmFjdF90b2tlbl9iYWxhbmNlID09IDApIHRocm93OwogICAgICAKICAgIC8vIFN0b3JlIHRoZSB1c2VyJ3MgdG9rZW4gYmFsYW5jZSBpbiBhIHRlbXBvcmFyeSB2YXJpYWJsZS4KICAgIHVpbnQyNTYgdG9rZW5zX3RvX3dpdGhkcmF3ID0gKGJhbGFuY2VzW21zZy5zZW5kZXJdICogY29udHJhY3RfdG9rZW5fYmFsYW5jZSkgLyBjb250cmFjdF9ldGhfdmFsdWU7CiAgICAgIAogICAgLy8gVXBkYXRlIHRoZSB2YWx1ZSBvZiB0b2tlbnMgY3VycmVudGx5IGhlbGQgYnkgdGhlIGNvbnRyYWN0LgogICAgY29udHJhY3RfZXRoX3ZhbHVlIC09IGJhbGFuY2VzW21zZy5zZW5kZXJdOwogICAgICAKICAgIC8vIFVwZGF0ZSB0aGUgdXNlcidzIGJhbGFuY2UgcHJpb3IgdG8gc2VuZGluZyB0byBwcmV2ZW50IHJlY3Vyc2l2ZSBjYWxsLgogICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSAwOwoKICAgIC8vIFNlbmQgdGhlIGZ1bmRzLiAgVGhyb3dzIG9uIGZhaWx1cmUgdG8gcHJldmVudCBsb3NzIG9mIGZ1bmRzLgogICAgaWYoIXRva2VuLnRyYW5zZmVyKG1zZy5zZW5kZXIsIHRva2Vuc190b193aXRoZHJhdykpIHRocm93OwogIH0KICAKICAvLyBBbGxvd3MgYW55IHVzZXIgdG8gZ2V0IGhpcyBldGggcmVmdW5kZWQgYmVmb3JlIHRoZSBwdXJjaGFzZSBpcyBtYWRlIG9yIGFmdGVyIGFwcHJveC4gMjAgZGF5cyBpbiBjYXNlIHRoZSBkZXZzIHJlZnVuZCB0aGUgZXRoLgogIGZ1bmN0aW9uIHJlZnVuZF9tZSgpIHsKICAgIGlmIChib3VnaHRfdG9rZW5zKSB7CiAgICAgIC8vIE9ubHkgYWxsb3cgcmVmdW5kcyB3aGVuIHRoZSB0b2tlbnMgaGF2ZSBiZWVuIGJvdWdodCBpZiB0aGUgbWluaW11bSByZWZ1bmQgYmxvY2sgaGFzIGJlZW4gcmVhY2hlZC4KICAgICAgaWYgKGJsb2NrLm51bWJlciA8IG1pbl9yZWZ1bmRfYmxvY2spIHRocm93OwogICAgfQogICAgCiAgICAvLyBTdG9yZSB0aGUgdXNlcidzIGJhbGFuY2UgcHJpb3IgdG8gd2l0aGRyYXdhbCBpbiBhIHRlbXBvcmFyeSB2YXJpYWJsZS4KICAgIHVpbnQyNTYgZXRoX3RvX3dpdGhkcmF3ID0gYmFsYW5jZXNbbXNnLnNlbmRlcl07CiAgICAgIAogICAgLy8gVXBkYXRlIHRoZSB1c2VyJ3MgYmFsYW5jZSBwcmlvciB0byBzZW5kaW5nIEVUSCB0byBwcmV2ZW50IHJlY3Vyc2l2ZSBjYWxsLgogICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSAwOwogICAgICAKICAgIC8vIFJldHVybiB0aGUgdXNlcidzIGZ1bmRzLiAgVGhyb3dzIG9uIGZhaWx1cmUgdG8gcHJldmVudCBsb3NzIG9mIGZ1bmRzLgogICAgbXNnLnNlbmRlci50cmFuc2ZlcihldGhfdG9fd2l0aGRyYXcpOwogIH0KICAKICAvLyBCdXkgdGhlIHRva2Vucy4gU2VuZHMgRVRIIHRvIHRoZSBwcmVzYWxlIHdhbGxldCBhbmQgcmVjb3JkcyB0aGUgRVRIIGFtb3VudCBoZWxkIGluIHRoZSBjb250cmFjdC4KICBmdW5jdGlvbiBidXlfdGhlX3Rva2VucygpIHsKICAgIC8vIFZlcmlmeSBpdCdzIHRoZSBjcmVhdG9yIGNhbGxpbmcuCglpZiAobXNnLnNlbmRlciAhPSBjcmVhdG9yKSB0aHJvdzsKCQogICAgLy8gU2hvcnQgY2lyY3VpdCB0byBzYXZlIGdhcyBpZiB0aGUgY29udHJhY3QgaGFzIGFscmVhZHkgYm91Z2h0IHRva2Vucy4KICAgIGlmIChib3VnaHRfdG9rZW5zKSByZXR1cm47CiAgICAKICAgIC8vIFRocm93IGlmIHRoZSBjb250cmFjdCBiYWxhbmNlIGlzIGxlc3MgdGhhbiB0aGUgbWluaW11bSByZXF1aXJlZCBhbW91bnQKICAgIGlmICh0aGlzLmJhbGFuY2UgPCBtaW5fcmVxdWlyZWRfYW1vdW50KSB0aHJvdzsKICAgIAogICAgLy8gVGhyb3cgaWYgdGhlIG1pbmltdW0gYnV5LWluIGJsb2NrIGhhc24ndCBiZWVuIHJlYWNoZWQKICAgIGlmIChibG9jay5udW1iZXIgPCBtaW5fYnV5X2Jsb2NrKSB0aHJvdzsKICAgIAogICAgLy8gUmVjb3JkIHRoYXQgdGhlIGNvbnRyYWN0IGhhcyBib3VnaHQgdGhlIHRva2Vucy4KICAgIGJvdWdodF90b2tlbnMgPSB0cnVlOwogICAgCiAgICAvLyBSZWNvcmQgdGhlIGFtb3VudCBvZiBFVEggc2VudCBhcyB0aGUgY29udHJhY3QncyBjdXJyZW50IHZhbHVlLgogICAgY29udHJhY3RfZXRoX3ZhbHVlID0gdGhpcy5iYWxhbmNlOwoKICAgIC8vIFRyYW5zZmVyIGFsbCB0aGUgZnVuZHMgdG8gdGhlIGNyb3dkc2FsZSBhZGRyZXNzLgogICAgY3JlYXRvci50cmFuc2Zlcihjb250cmFjdF9ldGhfdmFsdWUpOwogIH0KICAKICAvLyBBIGhlbHBlciBmdW5jdGlvbiBmb3IgdGhlIGRlZmF1bHQgZnVuY3Rpb24sIGFsbG93aW5nIGNvbnRyYWN0cyB0byBpbnRlcmFjdC4KICBmdW5jdGlvbiBkZWZhdWx0X2hlbHBlcigpIHBheWFibGUgewogICAgLy8gVGhyb3cgaWYgdGhlIGJhbGFuY2UgaXMgbGFyZ2VyIHRoYW4gdGhlIG1heGltdW0gYWxsb3dlZCBhbW91bnQuCiAgICBpZiAodGhpcy5iYWxhbmNlID4gbWF4X3JhaXNlZF9hbW91bnQpIHRocm93OwogICAgCiAgICAvLyBVcGRhdGUgcmVjb3JkcyBvZiBkZXBvc2l0ZWQgRVRIIHRvIGluY2x1ZGUgdGhlIHJlY2VpdmVkIGFtb3VudCBidXQgb25seSBpZiB0aGUgYnV5LWluIGhhc24ndCBiZWVuIGRvbmUgeWV0LgogICAgLy8gVGhpcyB3aWxsIGhhbmRsZSBhbiBldmVudHVhbCByZWZ1bmQgZnJvbSB0aGUgZGV2cyB3aGlsZSBkaXNhbGxvd2luZyBidXktaW5zIGFmdGVyIHRoZSBkZWFkbGluZS4KICAgIGlmICghYm91Z2h0X3Rva2VucykgewogICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSArPSBtc2cudmFsdWU7CiAgICB9CiAgfQogIAogIC8vIERlZmF1bHQgZnVuY3Rpb24uICBDYWxsZWQgd2hlbiBhIHVzZXIgc2VuZHMgRVRIIHRvIHRoZSBjb250cmFjdC4KICBmdW5jdGlvbiAoKSBwYXlhYmxlIHsKICAgIC8vIERlbGVnYXRlIHRvIHRoZSBoZWxwZXIgZnVuY3Rpb24uCiAgICBkZWZhdWx0X2hlbHBlcigpOwogIH0KfQ=='.
	

]
