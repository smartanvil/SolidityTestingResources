Class {
	#name : #SRT864def510D754DF9c1d43B925DD9887baa5Acb07,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT864def510D754DF9c1d43B925DD9887baa5Acb07 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7CmNvbnRyYWN0IG93bmVkIHsKICAgIGFkZHJlc3MgcHVibGljIG93bmVyOwogICAgYWRkcmVzcyBwdWJsaWMgYXV0aG9yaXNlZENvbnRyYWN0OwogICAgZnVuY3Rpb24gb3duZWQoKSB7CiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgfQoKICAgIG1vZGlmaWVyIG9ubHlPd25lciB7CiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyKTsKICAgICAgICBfOwogICAgfQogICAgbW9kaWZpZXIgb25seUF1dGhvcmlzZWRBZGRyZXNzewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBhdXRob3Jpc2VkQ29udHJhY3QpOwogICAgICAgIF87CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBuZXdPd25lcikgb25seU93bmVyIHsKICAgICAgICBvd25lciA9IG5ld093bmVyOwogICAgfQogICAgbW9kaWZpZXIgb25seVBheWxvYWRTaXplKHVpbnQgc2l6ZSkgewogICAgIGFzc2VydChtc2cuZGF0YS5sZW5ndGggPT0gc2l6ZSArIDQpOwogICAgIF87CiAgICB9Cn0KCmNvbnRyYWN0IHRva2VuUmVjaXBpZW50IHsgZnVuY3Rpb24gcmVjZWl2ZUFwcHJvdmFsKGFkZHJlc3MgX2Zyb20sIHVpbnQyNTYgX3ZhbHVlLCBhZGRyZXNzIF90b2tlbiwgYnl0ZXMgX2V4dHJhRGF0YSk7IH0KCmNvbnRyYWN0IE15VG9rZW4gaXMgb3duZWQgewogICAgLyogUHVibGljIHZhcmlhYmxlcyBvZiB0aGUgdG9rZW4gKi8KICAgIHN0cmluZyBwdWJsaWMgbmFtZSA9ICJEYW5rVG9rZW4iOwogICAgc3RyaW5nIHB1YmxpYyBzeW1ib2wgPSAiREFOSyI7CiAgICB1aW50OCBwdWJsaWMgZGVjaW1hbHMgPSAxODsKICAgIHVpbnQyNTYgX3RvdGFsU3VwcGx5OwogICAgdWludDI1NiBwdWJsaWMgYW1vdW50UmFpc2VkID0gMDsKICAgIHVpbnQyNTYgcHVibGljIGFtb3VudE9mVG9rZW5zUGVyRXRoZXIgPSA1MDA7CiAgICAgICAgLyogdGhpcyBtYWtlcyBhbiBhcnJheSB3aXRoIGFsbCBmcm96ZW4gYWNjb3VudHMuIFRoaXMgaXMgbmVlZGVkIHNvIHZvdGVycyBjYW4gbm90IHNlbmQgdGhlaXIgZnVuZHMgd2hpbGUgdGhlIHZvdGUgaXMgZ29pbmcgb24gYW5kIHRoZXkgaGF2ZSBhbHJlYWR5IHZvdGVkICAgICAgKi8KICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gYm9vbCkgcHVibGljIGZyb3plbkFjY291bnRzOwogICAgICAgIC8qIFRoaXMgY3JlYXRlcyBhbiBhcnJheSB3aXRoIGFsbCBiYWxhbmNlcyAqLyAKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgX2JhbGFuY2VPZjsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgX2FsbG93YW5jZTsKICAgIGJvb2wgcHVibGljIGNyb3dkc2FsZUNsb3NlZCA9IGZhbHNlOwogICAgLyogVGhpcyBnZW5lcmF0ZXMgYSBwdWJsaWMgZXZlbnQgb24gdGhlIGJsb2NrY2hhaW4gdGhhdCB3aWxsIG5vdGlmeSBjbGllbnRzICovCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsKICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpOwogICAgZXZlbnQgRnJvemVuRnVuZHMoYWRkcmVzcyB0YXJnZXQsIGJvb2wgZnJvemVuKTsKICAgIC8qIEluaXRpYWxpemVzIGNvbnRyYWN0IHdpdGggaW5pdGlhbCBzdXBwbHkgdG9rZW5zIHRvIHRoZSBjcmVhdG9yIG9mIHRoZSBjb250cmFjdCAqLwogICAgZnVuY3Rpb24gTXlUb2tlbigpIHsKICAgICAgICBfYmFsYW5jZU9mW21zZy5zZW5kZXJdID0gNDAwMDAwMDAwMDAwMDAwMDAwMDAwMDsgICAgICAgICAgICAgIAogICAgICAgIF90b3RhbFN1cHBseSA9IDQwMDAwMDAwMDAwMDAwMDAwMDAwMDA7ICAgICAgICAgICAgICAgICAKICAgICAgICBUcmFuc2Zlcih0aGlzLCBtc2cuc2VuZGVyLDQwMDAwMDAwMDAwMDAwMDAwMDAwMDApOwogICAgfQogICAgZnVuY3Rpb24gY2hhbmdlQXV0aG9yaXNlZENvbnRyYWN0KGFkZHJlc3MgdGFyZ2V0KSBvbmx5T3duZXIKICAgIHsKICAgICAgICBhdXRob3Jpc2VkQ29udHJhY3QgPSB0YXJnZXQ7CiAgICB9CiAgICBmdW5jdGlvbigpIHBheWFibGV7CiAgICAgICAgcmVxdWlyZSghY3Jvd2RzYWxlQ2xvc2VkKTsKICAgICAgICB1aW50IGFtb3VudCA9IG1zZy52YWx1ZTsKICAgICAgICBhbW91bnRSYWlzZWQgKz0gYW1vdW50OwogICAgICAgIHVpbnQyNTYgdG90YWxUb2tlbnMgPSBhbW91bnQgKiBhbW91bnRPZlRva2Vuc1BlckV0aGVyOwogICAgICAgIF9iYWxhbmNlT2ZbbXNnLnNlbmRlcl0gKz0gdG90YWxUb2tlbnM7CiAgICAgICAgX3RvdGFsU3VwcGx5ICs9IHRvdGFsVG9rZW5zOwogICAgICAgIFRyYW5zZmVyKHRoaXMsbXNnLnNlbmRlciwgdG90YWxUb2tlbnMpOwogICAgfQogICAgIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgY29uc3RhbnQgcmV0dXJucyAodWludCBUb3RhbFN1cHBseSl7CiAgICAgICAgVG90YWxTdXBwbHkgPSBfdG90YWxTdXBwbHk7CiAgICAgfQogICAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQgYmFsYW5jZSkgewogICAgICAgIHJldHVybiBfYmFsYW5jZU9mW19vd25lcl07CiAgICAgfQogICAgIGZ1bmN0aW9uIGNsb3NlQ3Jvd2RzYWxlKCkgb25seU93bmVyewogICAgICAgICBjcm93ZHNhbGVDbG9zZWQgPSB0cnVlOwogICAgIH0KICAgICBmdW5jdGlvbiBvcGVuQ3Jvd2RzYWxlKCkgb25seU93bmVyewogICAgICAgICBjcm93ZHNhbGVDbG9zZWQgPSBmYWxzZTsKICAgICB9CiAgICAgZnVuY3Rpb24gY2hhbmdlUHJpY2UodWludCBuZXdBbW91bnRPZlRva2Vuc1BlckV0aGVyKSBvbmx5T3duZXJ7CiAgICAgICAgIHJlcXVpcmUobmV3QW1vdW50T2ZUb2tlbnNQZXJFdGhlciA8PSA1MDApOwogICAgICAgICBhbW91bnRPZlRva2Vuc1BlckV0aGVyID0gbmV3QW1vdW50T2ZUb2tlbnNQZXJFdGhlcjsKICAgICB9CiAgICAgZnVuY3Rpb24gd2l0aGRyYXdhbCh1aW50MjU2IGFtb3VudE9mV2VpKSBvbmx5T3duZXJ7CiAgICAgICAgIGlmKG93bmVyLnNlbmQoYW1vdW50T2ZXZWkpKXt9CiAgICAgfQogICAgIGZ1bmN0aW9uIGZyZWV6ZUFjY291bnQoYWRkcmVzcyB0YXJnZXQsIGJvb2wgZnJlZXplKSBvbmx5QXV0aG9yaXNlZEFkZHJlc3MKICAgICB7CiAgICAgICAgIGZyb3plbkFjY291bnRzW3RhcmdldF0gPSBmcmVlemU7CiAgICAgICAgIEZyb3plbkZ1bmRzKHRhcmdldCwgZnJlZXplKTsKICAgICB9IAogICAgIAogICAgLyogU2VuZCBjb2lucyAqLwogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBvbmx5UGF5bG9hZFNpemUoMiozMikgewogICAgICAgIHJlcXVpcmUoIWZyb3plbkFjY291bnRzW21zZy5zZW5kZXJdKTsKICAgICAgICByZXF1aXJlKF9iYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPiBfdmFsdWUpOyAgICAgICAgICAvLyBDaGVjayBpZiB0aGUgc2VuZGVyIGhhcyBlbm91Z2gKICAgICAgICByZXF1aXJlKF9iYWxhbmNlT2ZbX3RvXSArIF92YWx1ZSA+IF9iYWxhbmNlT2ZbX3RvXSk7IC8vIENoZWNrIGZvciBvdmVyZmxvd3MKICAgICAgICBfYmFsYW5jZU9mW21zZy5zZW5kZXJdIC09IF92YWx1ZTsgICAgICAgICAgICAgICAgICAgICAvLyBTdWJ0cmFjdCBmcm9tIHRoZSBzZW5kZXIKICAgICAgICBfYmFsYW5jZU9mW190b10gKz0gX3ZhbHVlOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBBZGQgdGhlIHNhbWUgdG8gdGhlIHJlY2lwaWVudAogICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsgICAgICAgICAgICAgICAgICAgLy8gTm90aWZ5IGFueW9uZSBsaXN0ZW5pbmcgdGhhdCB0aGlzIHRyYW5zZmVyIHRvb2sgcGxhY2UKICAgIH0KICAgIC8qIEFsbG93IGFub3RoZXIgY29udHJhY3QgdG8gc3BlbmQgc29tZSB0b2tlbnMgaW4geW91ciBiZWhhbGYgKi8KICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpb25seVBheWxvYWRTaXplKDIqMzIpCiAgICAgICAgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSAgewogICAgICAgIF9hbGxvd2FuY2VbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfSAKCiAgICAvKiBBIGNvbnRyYWN0IGF0dGVtcHRzIHRvIGdldCB0aGUgY29pbnMgKi8KICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgIHsKICAgICAgICByZXF1aXJlKCFmcm96ZW5BY2NvdW50c1tfZnJvbV0pOwogICAgICAgIHJlcXVpcmUoX2JhbGFuY2VPZltfZnJvbV0gPiBfdmFsdWUpOyAgICAgICAgICAgICAgICAgLy8gQ2hlY2sgaWYgdGhlIHNlbmRlciBoYXMgZW5vdWdoCiAgICAgICAgcmVxdWlyZShfYmFsYW5jZU9mW190b10gKyBfdmFsdWUgPiBfYmFsYW5jZU9mW190b10pOyAgLy8gQ2hlY2sgZm9yIG92ZXJmbG93cwogICAgICAgIHJlcXVpcmUoX2FsbG93YW5jZVtfZnJvbV1bbXNnLnNlbmRlcl0gPj0gX3ZhbHVlKTsgICAgIC8vIENoZWNrIGFsbG93YW5jZQogICAgICAgIF9iYWxhbmNlT2ZbX2Zyb21dIC09IF92YWx1ZTsgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBTdWJ0cmFjdCBmcm9tIHRoZSBzZW5kZXIKICAgICAgICBfYmFsYW5jZU9mW190b10gKz0gX3ZhbHVlOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gQWRkIHRoZSBzYW1lIHRvIHRoZSByZWNpcGllbnQKICAgICAgICBfYWxsb3dhbmNlW19mcm9tXVttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludCByZW1haW5pbmcpIHsKICAgICAgICByZXR1cm4gX2FsbG93YW5jZVtfb3duZXJdW19zcGVuZGVyXTsKICAgIH0KfQ=='.
	

]
