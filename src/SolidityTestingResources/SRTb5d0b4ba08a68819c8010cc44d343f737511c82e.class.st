Class {
	#name : #SRTb5d0b4ba08a68819c8010cc44d343f737511c82e,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTb5d0b4ba08a68819c8010cc44d343f737511c82e >> base64 [
	^ 'Ly8gaGV2bTogZmxhdHRlbmVkIHNvdXJjZXMgb2Ygc3JjL2d1YXJkLnNvbApwcmFnbWEgc29saWRpdHkgXjAuNC4xMzsKCi8vLy8vLyBsaWIvZHMtYXV0aC9zcmMvYXV0aC5zb2wKLy8gVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkKLy8gaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkKLy8gdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3IKLy8gKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi4KCi8vIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLAovLyBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZgovLyBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlCi8vIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuCgovLyBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZQovLyBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi4KCi8qIHByYWdtYSBzb2xpZGl0eSBeMC40LjEzOyAqLwoKY29udHJhY3QgRFNBdXRob3JpdHkgewogICAgZnVuY3Rpb24gY2FuQ2FsbCgKICAgICAgICBhZGRyZXNzIHNyYywgYWRkcmVzcyBkc3QsIGJ5dGVzNCBzaWcKICAgICkgcHVibGljIHZpZXcgcmV0dXJucyAoYm9vbCk7Cn0KCmNvbnRyYWN0IERTQXV0aEV2ZW50cyB7CiAgICBldmVudCBMb2dTZXRBdXRob3JpdHkgKGFkZHJlc3MgaW5kZXhlZCBhdXRob3JpdHkpOwogICAgZXZlbnQgTG9nU2V0T3duZXIgICAgIChhZGRyZXNzIGluZGV4ZWQgb3duZXIpOwp9Cgpjb250cmFjdCBEU0F1dGggaXMgRFNBdXRoRXZlbnRzIHsKICAgIERTQXV0aG9yaXR5ICBwdWJsaWMgIGF1dGhvcml0eTsKICAgIGFkZHJlc3MgICAgICBwdWJsaWMgIG93bmVyOwoKICAgIGZ1bmN0aW9uIERTQXV0aCgpIHB1YmxpYyB7CiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgICAgIExvZ1NldE93bmVyKG1zZy5zZW5kZXIpOwogICAgfQoKICAgIGZ1bmN0aW9uIHNldE93bmVyKGFkZHJlc3Mgb3duZXJfKQogICAgICAgIHB1YmxpYwogICAgICAgIGF1dGgKICAgIHsKICAgICAgICBvd25lciA9IG93bmVyXzsKICAgICAgICBMb2dTZXRPd25lcihvd25lcik7CiAgICB9CgogICAgZnVuY3Rpb24gc2V0QXV0aG9yaXR5KERTQXV0aG9yaXR5IGF1dGhvcml0eV8pCiAgICAgICAgcHVibGljCiAgICAgICAgYXV0aAogICAgewogICAgICAgIGF1dGhvcml0eSA9IGF1dGhvcml0eV87CiAgICAgICAgTG9nU2V0QXV0aG9yaXR5KGF1dGhvcml0eSk7CiAgICB9CgogICAgbW9kaWZpZXIgYXV0aCB7CiAgICAgICAgcmVxdWlyZShpc0F1dGhvcml6ZWQobXNnLnNlbmRlciwgbXNnLnNpZykpOwogICAgICAgIF87CiAgICB9CgogICAgZnVuY3Rpb24gaXNBdXRob3JpemVkKGFkZHJlc3Mgc3JjLCBieXRlczQgc2lnKSBpbnRlcm5hbCB2aWV3IHJldHVybnMgKGJvb2wpIHsKICAgICAgICBpZiAoc3JjID09IGFkZHJlc3ModGhpcykpIHsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfSBlbHNlIGlmIChzcmMgPT0gb3duZXIpIHsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfSBlbHNlIGlmIChhdXRob3JpdHkgPT0gRFNBdXRob3JpdHkoMCkpIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybiBhdXRob3JpdHkuY2FuQ2FsbChzcmMsIHRoaXMsIHNpZyk7CiAgICAgICAgfQogICAgfQp9CgovLy8vLy8gc3JjL2d1YXJkLnNvbAovLyBndWFyZC5zb2wgLS0gc2ltcGxlIHdoaXRlbGlzdCBpbXBsZW1lbnRhdGlvbiBvZiBEU0F1dGhvcml0eQoKLy8gQ29weXJpZ2h0IChDKSAyMDE3ICBEYXBwSHViLCBMTEMKCi8vIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5Ci8vIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5Ci8vIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yCi8vIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uCgovLyBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwKLy8gYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YKLy8gTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZQovLyBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLgoKLy8gWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UKLy8gYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uCgovKiBwcmFnbWEgc29saWRpdHkgXjAuNC4xMzsgKi8KCi8qIGltcG9ydCAiZHMtYXV0aC9hdXRoLnNvbCI7ICovCgpjb250cmFjdCBEU0d1YXJkRXZlbnRzIHsKICAgIGV2ZW50IExvZ1Blcm1pdCgKICAgICAgICBieXRlczMyIGluZGV4ZWQgc3JjLAogICAgICAgIGJ5dGVzMzIgaW5kZXhlZCBkc3QsCiAgICAgICAgYnl0ZXMzMiBpbmRleGVkIHNpZwogICAgKTsKCiAgICBldmVudCBMb2dGb3JiaWQoCiAgICAgICAgYnl0ZXMzMiBpbmRleGVkIHNyYywKICAgICAgICBieXRlczMyIGluZGV4ZWQgZHN0LAogICAgICAgIGJ5dGVzMzIgaW5kZXhlZCBzaWcKICAgICk7Cn0KCmNvbnRyYWN0IERTR3VhcmQgaXMgRFNBdXRoLCBEU0F1dGhvcml0eSwgRFNHdWFyZEV2ZW50cyB7CiAgICBieXRlczMyIGNvbnN0YW50IHB1YmxpYyBBTlkgPSBieXRlczMyKHVpbnQoLTEpKTsKCiAgICBtYXBwaW5nIChieXRlczMyID0+IG1hcHBpbmcgKGJ5dGVzMzIgPT4gbWFwcGluZyAoYnl0ZXMzMiA9PiBib29sKSkpIGFjbDsKCiAgICBmdW5jdGlvbiBjYW5DYWxsKAogICAgICAgIGFkZHJlc3Mgc3JjXywgYWRkcmVzcyBkc3RfLCBieXRlczQgc2lnCiAgICApIHB1YmxpYyB2aWV3IHJldHVybnMgKGJvb2wpIHsKICAgICAgICB2YXIgc3JjID0gYnl0ZXMzMihzcmNfKTsKICAgICAgICB2YXIgZHN0ID0gYnl0ZXMzMihkc3RfKTsKCiAgICAgICAgcmV0dXJuIGFjbFtzcmNdW2RzdF1bc2lnXQogICAgICAgICAgICB8fCBhY2xbc3JjXVtkc3RdW0FOWV0KICAgICAgICAgICAgfHwgYWNsW3NyY11bQU5ZXVtzaWddCiAgICAgICAgICAgIHx8IGFjbFtzcmNdW0FOWV1bQU5ZXQogICAgICAgICAgICB8fCBhY2xbQU5ZXVtkc3RdW3NpZ10KICAgICAgICAgICAgfHwgYWNsW0FOWV1bZHN0XVtBTlldCiAgICAgICAgICAgIHx8IGFjbFtBTlldW0FOWV1bc2lnXQogICAgICAgICAgICB8fCBhY2xbQU5ZXVtBTlldW0FOWV07CiAgICB9CgogICAgZnVuY3Rpb24gcGVybWl0KGJ5dGVzMzIgc3JjLCBieXRlczMyIGRzdCwgYnl0ZXMzMiBzaWcpIHB1YmxpYyBhdXRoIHsKICAgICAgICBhY2xbc3JjXVtkc3RdW3NpZ10gPSB0cnVlOwogICAgICAgIExvZ1Blcm1pdChzcmMsIGRzdCwgc2lnKTsKICAgIH0KCiAgICBmdW5jdGlvbiBmb3JiaWQoYnl0ZXMzMiBzcmMsIGJ5dGVzMzIgZHN0LCBieXRlczMyIHNpZykgcHVibGljIGF1dGggewogICAgICAgIGFjbFtzcmNdW2RzdF1bc2lnXSA9IGZhbHNlOwogICAgICAgIExvZ0ZvcmJpZChzcmMsIGRzdCwgc2lnKTsKICAgIH0KCiAgICBmdW5jdGlvbiBwZXJtaXQoYWRkcmVzcyBzcmMsIGFkZHJlc3MgZHN0LCBieXRlczMyIHNpZykgcHVibGljIHsKICAgICAgICBwZXJtaXQoYnl0ZXMzMihzcmMpLCBieXRlczMyKGRzdCksIHNpZyk7CiAgICB9CiAgICBmdW5jdGlvbiBmb3JiaWQoYWRkcmVzcyBzcmMsIGFkZHJlc3MgZHN0LCBieXRlczMyIHNpZykgcHVibGljIHsKICAgICAgICBmb3JiaWQoYnl0ZXMzMihzcmMpLCBieXRlczMyKGRzdCksIHNpZyk7CiAgICB9Cgp9Cgpjb250cmFjdCBEU0d1YXJkRmFjdG9yeSB7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IGJvb2wpICBwdWJsaWMgIGlzR3VhcmQ7CgogICAgZnVuY3Rpb24gbmV3R3VhcmQoKSBwdWJsaWMgcmV0dXJucyAoRFNHdWFyZCBndWFyZCkgewogICAgICAgIGd1YXJkID0gbmV3IERTR3VhcmQoKTsKICAgICAgICBndWFyZC5zZXRPd25lcihtc2cuc2VuZGVyKTsKICAgICAgICBpc0d1YXJkW2d1YXJkXSA9IHRydWU7CiAgICB9Cn0='.
	

]
