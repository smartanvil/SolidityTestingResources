Class {
	#name : #SRTDAC8da3e58c11B4e0E8DFaeFe191107e143AC29B,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTDAC8da3e58c11B4e0E8DFaeFe191107e143AC29B >> base64 [
	^ 'Ly8gVmVyc2lvbiAwLjEKLy8gVGhpcyBzd2FwIGNvbnRyYWN0IHdhcyBjcmVhdGVkIGJ5IEF0dG9yZXMgYW5kIHJlbGVhc2VkIHVuZGVyIGEgR1BMIGxpY2Vuc2UKLy8gVmlzaXQgYXR0b3Jlcy5jb20gZm9yIG1vcmUgY29udHJhY3RzIGFuZCBTbWFydCBjb250cmFjdCBhcyBhIFNlcnZpY2UgCgovLyBUaGlzIGlzIHRoZSBzdGFuZGFyZCB0b2tlbiBpbnRlcmZhY2UKY29udHJhY3QgVG9rZW5JbnRlcmZhY2UgewoKICBzdHJ1Y3QgVXNlciB7CiAgICBib29sIGxvY2tlZDsKICAgIHVpbnQyNTYgYmFsYW5jZTsKICAgIHVpbnQyNTYgYmFkZ2VzOwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBhbGxvd2VkOwogIH0KCiAgbWFwcGluZyAoYWRkcmVzcyA9PiBVc2VyKSB1c2VyczsKICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIGJhbGFuY2VzOwogIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsKICBtYXBwaW5nIChhZGRyZXNzID0+IGJvb2wpIHNlbGxlcjsKCiAgYWRkcmVzcyBjb25maWc7CiAgYWRkcmVzcyBvd25lcjsKICBhZGRyZXNzIGRhbzsKICBib29sIGxvY2tlZDsKCiAgLy8vIEByZXR1cm4gdG90YWwgYW1vdW50IG9mIHRva2VucwogIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5OwogIHVpbnQyNTYgcHVibGljIHRvdGFsQmFkZ2VzOwoKICAvLy8gQHBhcmFtIF9vd25lciBUaGUgYWRkcmVzcyBmcm9tIHdoaWNoIHRoZSBiYWxhbmNlIHdpbGwgYmUgcmV0cmlldmVkCiAgLy8vIEByZXR1cm4gVGhlIGJhbGFuY2UKICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSk7CgogIC8vLyBAcGFyYW0gX293bmVyIFRoZSBhZGRyZXNzIGZyb20gd2hpY2ggdGhlIGJhZGdlIGNvdW50IHdpbGwgYmUgcmV0cmlldmVkCiAgLy8vIEByZXR1cm4gVGhlIGJhZGdlcyBjb3VudAogIGZ1bmN0aW9uIGJhZGdlc09mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhZGdlKTsKCiAgLy8vIEBub3RpY2Ugc2VuZCBgX3ZhbHVlYCB0b2tlbnMgdG8gYF90b2AgZnJvbSBgbXNnLnNlbmRlcmAKICAvLy8gQHBhcmFtIF90byBUaGUgYWRkcmVzcyBvZiB0aGUgcmVjaXBpZW50CiAgLy8vIEBwYXJhbSBfdmFsdWUgVGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gYmUgdHJhbnNmZXJlZAogIC8vLyBAcmV0dXJuIFdoZXRoZXIgdGhlIHRyYW5zZmVyIHdhcyBzdWNjZXNzZnVsIG9yIG5vdAogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKCiAgLy8vIEBub3RpY2Ugc2VuZCBgX3ZhbHVlYCBiYWRnZXMgdG8gYF90b2AgZnJvbSBgbXNnLnNlbmRlcmAKICAvLy8gQHBhcmFtIF90byBUaGUgYWRkcmVzcyBvZiB0aGUgcmVjaXBpZW50CiAgLy8vIEBwYXJhbSBfdmFsdWUgVGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gYmUgdHJhbnNmZXJlZAogIC8vLyBAcmV0dXJuIFdoZXRoZXIgdGhlIHRyYW5zZmVyIHdhcyBzdWNjZXNzZnVsIG9yIG5vdAogIGZ1bmN0aW9uIHNlbmRCYWRnZShhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CgogIC8vLyBAbm90aWNlIHNlbmQgYF92YWx1ZWAgdG9rZW5zIHRvIGBfdG9gIGZyb20gYF9mcm9tYCBvbiB0aGUgY29uZGl0aW9uIGl0IGlzIGFwcHJvdmVkIGJ5IGBfZnJvbWAKICAvLy8gQHBhcmFtIF9mcm9tIFRoZSBhZGRyZXNzIG9mIHRoZSBzZW5kZXIKICAvLy8gQHBhcmFtIF90byBUaGUgYWRkcmVzcyBvZiB0aGUgcmVjaXBpZW50CiAgLy8vIEBwYXJhbSBfdmFsdWUgVGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gYmUgdHJhbnNmZXJlZAogIC8vLyBAcmV0dXJuIFdoZXRoZXIgdGhlIHRyYW5zZmVyIHdhcyBzdWNjZXNzZnVsIG9yIG5vdAogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CgogIC8vLyBAbm90aWNlIGBtc2cuc2VuZGVyYCBhcHByb3ZlcyBgX3NwZW5kZXJgIHRvIHNwZW5kIGBfdmFsdWVgIHRva2VucyBvbiBpdHMgYmVoYWxmCiAgLy8vIEBwYXJhbSBfc3BlbmRlciBUaGUgYWRkcmVzcyBvZiB0aGUgYWNjb3VudCBhYmxlIHRvIHRyYW5zZmVyIHRoZSB0b2tlbnMKICAvLy8gQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IG9mIHRva2VucyB0byBiZSBhcHByb3ZlZCBmb3IgdHJhbnNmZXIKICAvLy8gQHJldHVybiBXaGV0aGVyIHRoZSBhcHByb3ZhbCB3YXMgc3VjY2Vzc2Z1bCBvciBub3QKICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwoKICAvLy8gQHBhcmFtIF9vd25lciBUaGUgYWRkcmVzcyBvZiB0aGUgYWNjb3VudCBvd25pbmcgdG9rZW5zCiAgLy8vIEBwYXJhbSBfc3BlbmRlciBUaGUgYWRkcmVzcyBvZiB0aGUgYWNjb3VudCBhYmxlIHRvIHRyYW5zZmVyIHRoZSB0b2tlbnMKICAvLy8gQHJldHVybiBBbW91bnQgb2YgcmVtYWluaW5nIHRva2VucyBvZiBfb3duZXIgdGhhdCBfc3BlbmRlciBpcyBhbGxvd2VkIHRvIHNwZW5kCiAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHJlbWFpbmluZyk7CgogIC8vLyBAbm90aWNlIG1pbnQgYF9hbW91bnRgIG9mIHRva2VucyB0byBgX293bmVyYAogIC8vLyBAcGFyYW0gX293bmVyIFRoZSBhZGRyZXNzIG9mIHRoZSBhY2NvdW50IHJlY2VpdmluZyB0aGUgdG9rZW5zCiAgLy8vIEBwYXJhbSBfYW1vdW50IFRoZSBhbW91bnQgb2YgdG9rZW5zIHRvIG1pbnQKICAvLy8gQHJldHVybiBXaGV0aGVyIG9yIG5vdCBtaW50aW5nIHdhcyBzdWNjZXNzZnVsCiAgZnVuY3Rpb24gbWludChhZGRyZXNzIF9vd25lciwgdWludDI1NiBfYW1vdW50KSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwoKICAvLy8gQG5vdGljZSBtaW50QmFkZ2UgTWludCBgX2Ftb3VudGAgYmFkZ2VzIHRvIGBfb3duZXJgCiAgLy8vIEBwYXJhbSBfb3duZXIgVGhlIGFkZHJlc3Mgb2YgdGhlIGFjY291bnQgcmVjZWl2aW5nIHRoZSB0b2tlbnMKICAvLy8gQHBhcmFtIF9hbW91bnQgVGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gbWludAogIC8vLyBAcmV0dXJuIFdoZXRoZXIgb3Igbm90IG1pbnRpbmcgd2FzIHN1Y2Nlc3NmdWwKICBmdW5jdGlvbiBtaW50QmFkZ2UoYWRkcmVzcyBfb3duZXIsIHVpbnQyNTYgX2Ftb3VudCkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKCiAgZnVuY3Rpb24gcmVnaXN0ZXJEYW8oYWRkcmVzcyBfZGFvKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwoKICBmdW5jdGlvbiByZWdpc3RlclNlbGxlcihhZGRyZXNzIF90b2tlbnNhbGVzKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwoKICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsKICBldmVudCBTZW5kQmFkZ2UoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50MjU2IF9hbW91bnQpOwogIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpOwp9CgovLyBBY3R1YWwgc3dhcCBjb250cmFjdCB3cml0dGVuIGJ5IEF0dG9yZXMKY29udHJhY3Qgc3dhcHsKICAgIGFkZHJlc3MgcHVibGljIGJlbmVmaWNpYXJ5OwogICAgVG9rZW5JbnRlcmZhY2UgcHVibGljIHRva2VuT2JqOwogICAgdWludCBwdWJsaWMgcHJpY2VfdG9rZW47CiAgICB1aW50MjU2IHB1YmxpYyBXRUlfUEVSX0ZJTk5FWSA9IDEwMDAwMDAwMDAwMDAwMDA7CiAgICB1aW50IHB1YmxpYyBCSUxMSU9OID0gMTAwMDAwMDAwMDsKICAgIHVpbnQgcHVibGljIGV4cGlyeURhdGU7CiAgICAKICAgIC8vIENvbnN0cnVjdG9yIGZ1bmN0aW9uIGZvciB0aGlzIGNvbnRyYWN0LiBDYWxsZWQgZHVyaW5nIGNvbnRyYWN0IGNyZWF0aW9uCiAgICBmdW5jdGlvbiBzd2FwKGFkZHJlc3Mgc2VuZEV0aGVyVG8sIGFkZHJlc3MgYWRkZHJlc3NPZlRva2VuLCB1aW50IHRva2VuUHJpY2VJbkZpbm5leV8xMDAwRmlubmV5SXNfMUV0aGVyLCB1aW50IGR1cmF0aW9uSW5EYXlzKXsKICAgICAgICBiZW5lZmljaWFyeSA9IHNlbmRFdGhlclRvOwogICAgICAgIHRva2VuT2JqID0gVG9rZW5JbnRlcmZhY2UoYWRkZHJlc3NPZlRva2VuKTsKICAgICAgICBwcmljZV90b2tlbiA9IHRva2VuUHJpY2VJbkZpbm5leV8xMDAwRmlubmV5SXNfMUV0aGVyICogV0VJX1BFUl9GSU5ORVk7CiAgICAgICAgZXhwaXJ5RGF0ZSA9IG5vdyArIGR1cmF0aW9uSW5EYXlzICogMSBkYXlzOwogICAgfQogICAgCiAgICAvLyBUaGlzIGZ1bmN0aW9uIGlzIGNhbGxlZCBldmVyeSB0aW1lIHNvbWUgb25lIHNlbmRzIGV0aGVyIHRvIHRoaXMgY29udHJhY3QKICAgIGZ1bmN0aW9uKCl7CiAgICAgICAgaWYgKG5vdyA+PSBleHBpcnlEYXRlKSB0aHJvdzsKICAgICAgICAvLyBEaXZpZGluZyBieSBCaWxsaW9uIGhlcmUgdG8gY2F0ZXIgZm9yIHRoZSBkZWNpbWFsIHBsYWNlcwogICAgICAgIHZhciB0b2tlbnNfdG9fc2VuZCA9IChtc2cudmFsdWUgKiBCSUxMSU9OKSAvIHByaWNlX3Rva2VuOwogICAgICAgIHVpbnQgYmFsYW5jZSA9IHRva2VuT2JqLmJhbGFuY2VPZih0aGlzKTsKICAgICAgICBhZGRyZXNzIHBheWVlID0gbXNnLnNlbmRlcjsKICAgICAgICBpZiAoYmFsYW5jZSA+PSB0b2tlbnNfdG9fc2VuZCl7CiAgICAgICAgICAgIHRva2VuT2JqLnRyYW5zZmVyKG1zZy5zZW5kZXIsIHRva2Vuc190b19zZW5kKTsKICAgICAgICAgICAgYmVuZWZpY2lhcnkuc2VuZChtc2cudmFsdWUpOyAgICAKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0b2tlbk9iai50cmFuc2Zlcihtc2cuc2VuZGVyLCBiYWxhbmNlKTsKICAgICAgICAgICAgdWludCBhbW91bnRSZXR1cm5lZCA9ICgodG9rZW5zX3RvX3NlbmQgLSBiYWxhbmNlKSAqIHByaWNlX3Rva2VuKSAvIEJJTExJT047CiAgICAgICAgICAgIHBheWVlLnNlbmQoYW1vdW50UmV0dXJuZWQpOwogICAgICAgICAgICBiZW5lZmljaWFyeS5zZW5kKG1zZy52YWx1ZSAtIGFtb3VudFJldHVybmVkKTsKICAgICAgICB9CiAgICB9CiAgICAKICAgIG1vZGlmaWVyIGFmdGVyRXhwaXJ5KCkgeyBpZiAobm93ID49IGV4cGlyeURhdGUpIF87IH0gICAgCiAgICAvL1RoaXMgZnVuY3Rpb24gY2hlY2tzIGlmIHRoZSBleHBpcnkgZGF0ZSBoYXMgcGFzc2VkIGFuZCBpZiBpdCBoYXMsIHRoZW4gcmV0dXJucyB0aGUgdG9rZW5zIHRvIHRoZSBiZW5lZmljaWFyeQogICAgZnVuY3Rpb24gY2hlY2tFeHBpcnkoKSBhZnRlckV4cGlyeXsKICAgICAgICB1aW50IGJhbGFuY2UgPSB0b2tlbk9iai5iYWxhbmNlT2YodGhpcyk7CiAgICAgICAgdG9rZW5PYmoudHJhbnNmZXIoYmVuZWZpY2lhcnksIGJhbGFuY2UpOwogICAgfQp9'.
	

]
