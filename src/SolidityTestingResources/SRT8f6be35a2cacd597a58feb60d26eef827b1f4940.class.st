Class {
	#name : #SRT8f6be35a2cacd597a58feb60d26eef827b1f4940,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT8f6be35a2cacd597a58feb60d26eef827b1f4940 >> base64 [
	^ ''.
	

]
