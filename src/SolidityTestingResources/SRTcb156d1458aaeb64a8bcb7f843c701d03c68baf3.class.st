Class {
	#name : #SRTcb156d1458aaeb64a8bcb7f843c701d03c68baf3,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTcb156d1458aaeb64a8bcb7f843c701d03c68baf3 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7Cgpjb250cmFjdCBUZXJydXMgewogIGV2ZW50IFBsb3RTYWxlKAogICAgdWludCBpbmRleGVkIF94LAogICAgdWludCBpbmRleGVkIF95LAogICAgYWRkcmVzcyBfZnJvbSwKICAgIGFkZHJlc3MgaW5kZXhlZCBfdG8sCiAgICB1aW50IF9wcmljZSwKICAgIGJvb2wgX2dpZnQKICApOwoKICBldmVudCBQbG90VGVycmFpblVwZGF0ZSgKICAgIHVpbnQgaW5kZXhlZCBfeCwKICAgIHVpbnQgaW5kZXhlZCBfeSwKICAgIGFkZHJlc3MgaW5kZXhlZCBfYnksCiAgICB1aW50IF9wcmljZSwKICAgIGJ5dGVzMzIgX25ld1RlcnJhaW4KICApOwoKICBldmVudCBXaXRoZHJhd2FsKAogICAgYWRkcmVzcyBfcmVjaXBpZW50LAogICAgdWludCBfYW1vdW50CiAgKTsKCiAgc3RydWN0IFBsb3QgewogICAgYm9vbCBvd25lZDsKICAgIGFkZHJlc3Mgb3duZXI7CiAgICB1aW50IHg7CiAgICB1aW50IHk7CiAgICBieXRlczMyIHRlcnJhaW47CiAgICB1aW50IHNhbGVDb3VudDsKICB9CiAgbWFwcGluZyh1aW50ID0+IG1hcHBpbmcodWludCA9PiBQbG90KSkgcGxvdHM7CgogIGFkZHJlc3Mgb3duZXI7CgogIG1hcHBpbmcodWludCA9PiBtYXBwaW5nKHVpbnQgPT4gYWRkcmVzcykpIGF1dGhvcmlzZWRTYWxlQWRkcmVzc2VzOwogIG1hcHBpbmcodWludCA9PiBtYXBwaW5nKHVpbnQgPT4gdWludCkpIGF1dGhvcmlzZWRTYWxlUHJpY2VzOwoKICAvLyBDb25zdHJ1Y3RvcgogIGZ1bmN0aW9uIFRlcnJ1cygpIHB1YmxpYyB7CiAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgfQoKICAvLyBNb2RpZmllcnMKICBtb2RpZmllciBvd25lck9ubHkoKSB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgXzsKICB9CgogIG1vZGlmaWVyIHZhbGlkTmV3VGVycmFpbih1aW50IHgsIHVpbnQgeSwgYnl0ZXMzMiBuZXdUZXJyYWluKSB7CiAgICAvLyBUT0RPCiAgICBfOwogIH0KCiAgbW9kaWZpZXIgeHlCb3VuZGVkKHVpbnQgeCwgdWludCB5KSB7CiAgICByZXF1aXJlKHggPCAxMDAwKTsKICAgIHJlcXVpcmUoeSA8IDEwMDApOwogICAgXzsKICB9CgogIC8vIFB1YmxpYwogIGZ1bmN0aW9uIGF1dGhvcmlzZVNhbGUodWludCB4LCB1aW50IHksIGFkZHJlc3MgYnV5ZXIsIHVpbnQgYW1vdW50KSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgUGxvdCBtZW1vcnkgcGxvdCA9IHBsb3RzW3hdW3ldOwogICAgcmVxdWlyZShwbG90Lm93bmVkKTsKICAgIHJlcXVpcmUocGxvdC5vd25lciA9PSBtc2cuc2VuZGVyKTsKICAgIHVpbnQgZmVlID0gZ2V0U2FsZUZlZSgpOwogICAgcmVxdWlyZShhbW91bnQgPj0gZmVlKTsKICAgIGF1dGhvcmlzZWRTYWxlQWRkcmVzc2VzW3hdW3ldID0gYnV5ZXI7CiAgICBhdXRob3Jpc2VkU2FsZVByaWNlc1t4XVt5XSA9IGFtb3VudDsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgZnVuY3Rpb24gYnV5UGxvdCh1aW50IHgsIHVpbnQgeSkgeHlCb3VuZGVkKHgsIHkpIHB1YmxpYyBwYXlhYmxlIHJldHVybnMgKGJvb2wpIHsKICAgIHJlcXVpcmUoIXBsb3RzW3hdW3ldLm93bmVkKTsKICAgIHVpbnQgcHJpY2UgPSBnZXRQbG90UHJpY2UoKTsKICAgIHJlcXVpcmUocHJpY2UgPT0gbXNnLnZhbHVlKTsKICAgIGFkZHJlc3MgYnV5ZXIgPSBtc2cuc2VuZGVyOwogICAgcGxvdHNbeF1beV0gPSBQbG90KHsKICAgICAgb3duZWQ6IHRydWUsCiAgICAgIG93bmVyOiBidXllciwKICAgICAgeDogeCwKICAgICAgeTogeSwKICAgICAgdGVycmFpbjogZ2V0SW5pdGlhbFRlcnJhaW4oeCwgeSksCiAgICAgIHNhbGVDb3VudDogMQogICAgfSk7CiAgICBQbG90U2FsZSh4LCB5LCAweDAsIGJ1eWVyLCBwcmljZSwgZmFsc2UpOwogICAgcmV0dXJuIHRydWU7CiAgfQoKICBmdW5jdGlvbiBjb21wbGV0ZVNhbGUodWludCB4LCB1aW50IHkpIHB1YmxpYyBwYXlhYmxlIHJldHVybnMgKGJvb2wpIHsKICAgIGFkZHJlc3MgYnV5ZXIgPSBtc2cuc2VuZGVyOwogICAgcmVxdWlyZShhdXRob3Jpc2VkU2FsZUFkZHJlc3Nlc1t4XVt5XSAhPSAweDApOwogICAgcmVxdWlyZShhdXRob3Jpc2VkU2FsZUFkZHJlc3Nlc1t4XVt5XSA9PSBidXllcik7CiAgICByZXF1aXJlKGF1dGhvcmlzZWRTYWxlUHJpY2VzW3hdW3ldID09IG1zZy52YWx1ZSk7CiAgICB1aW50IHByaWNlID0gbXNnLnZhbHVlOwogICAgdWludCBmZWUgPSBnZXRTYWxlRmVlKCk7CiAgICB1aW50IGZvclNlbGxlciA9IHByaWNlIC0gZmVlOwogICAgUGxvdCBzdG9yYWdlIHBsb3QgPSBwbG90c1t4XVt5XTsKICAgIGFkZHJlc3Mgc2VsbGVyID0gcGxvdC5vd25lcjsKICAgIHBsb3Qub3duZXIgPSBidXllcjsKICAgIHBsb3Quc2FsZUNvdW50ICs9IDE7CiAgICBhdXRob3Jpc2VkU2FsZUFkZHJlc3Nlc1t4XVt5XSA9IDB4MDsKICAgIGF1dGhvcmlzZWRTYWxlUHJpY2VzW3hdW3ldID0gMDsKICAgIHNlbGxlci50cmFuc2Zlcihmb3JTZWxsZXIpOwogICAgUGxvdFNhbGUoeCwgeSwgc2VsbGVyLCBidXllciwgcHJpY2UsIGZhbHNlKTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgZnVuY3Rpb24gZGVBdXRob3Jpc2VTYWxlKHVpbnQgeCwgdWludCB5KSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgUGxvdCBzdG9yYWdlIHBsb3QgPSBwbG90c1t4XVt5XTsKICAgIHJlcXVpcmUocGxvdC5vd25lZCk7CiAgICByZXF1aXJlKHBsb3Qub3duZXIgPT0gbXNnLnNlbmRlcik7CiAgICBhdXRob3Jpc2VkU2FsZUFkZHJlc3Nlc1t4XVt5XSA9IDB4MDsKICAgIGF1dGhvcmlzZWRTYWxlUHJpY2VzW3hdW3ldID0gMDsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgZnVuY3Rpb24gZ2V0SW5pdGlhbFRlcnJhaW4odWludCB4LCB1aW50IHkpIHB1YmxpYyBwdXJlIHJldHVybnMgKGJ5dGVzMzIpIHsKICAgIHJldHVybiBzaGEyNTYoeCwgeSk7CiAgfQoKICBmdW5jdGlvbiBnZXRPd25lcigpIHB1YmxpYyB2aWV3IHJldHVybnMgKGFkZHJlc3MpIHsKICAgIHJldHVybiBvd25lcjsKICB9CgogIGZ1bmN0aW9uIGdldFBsb3QodWludCB4LCB1aW50IHkpIHB1YmxpYyB4eUJvdW5kZWQoeCwgeSkgdmlldyByZXR1cm5zIChib29sIG93bmVkLCBhZGRyZXNzIHBsb3RPd25lciwgdWludCBwbG90WCwgdWludCBwbG90WSwgYnl0ZXMzMiBwbG90VGVycmFpbikgewogICAgUGxvdCBtZW1vcnkgcGxvdCA9IHBsb3RzW3hdW3ldOwogICAgYnl0ZXMzMiB0ZXJyYWluID0gcGxvdC5vd25lZCA/IHBsb3QudGVycmFpbiA6IGdldEluaXRpYWxUZXJyYWluKHgsIHkpOwogICAgcmV0dXJuIChwbG90Lm93bmVkLCBwbG90Lm93bmVyLCB4LCB5LCB0ZXJyYWluKTsKICB9CgogIGZ1bmN0aW9uIGdldFBsb3RQcmljZSgpIHB1YmxpYyBwdXJlIHJldHVybnMgKHVpbnQpIHsKICAgIHJldHVybiAwLjAxIGV0aGVyOwogIH0KCiAgZnVuY3Rpb24gZ2V0U2FsZUZlZSgpIHB1YmxpYyBwdXJlIHJldHVybnMgKHVpbnQpIHsKICAgIHJldHVybiAwLjAxIGV0aGVyOwogIH0KCiAgZnVuY3Rpb24gZ2V0U2V0TmV3VGVycmFpblByaWNlKHVpbnQgeCwgdWludCB5LCBieXRlczMyIG5ld1RlcnJhaW4pIHB1YmxpYyB4eUJvdW5kZWQoeCwgeSkgdmFsaWROZXdUZXJyYWluKHgsIHksIG5ld1RlcnJhaW4pIHZpZXcgcmV0dXJucyAodWludCkgewogICAgUGxvdCBtZW1vcnkgcGxvdCA9IHBsb3RzW3hdW3ldOwogICAgYnl0ZXMzMiBjdXJyZW50VGVycmFpbiA9IHBsb3Qub3duZWQgPyBwbG90LnRlcnJhaW4gOiBnZXRJbml0aWFsVGVycmFpbih4LCB5KTsKICAgIHVpbnQgY2hhbmdlZCA9IDA7CiAgICBmb3IgKHVpbnQgaSA9IDA7IGkgPCAzMjsgaSsrKSB7CiAgICAgIGlmIChuZXdUZXJyYWluW2ldICE9IGN1cnJlbnRUZXJyYWluW2ldKSB7CiAgICAgICAgY2hhbmdlZCArPSAxOwogICAgICB9CiAgICB9CiAgICB1aW50IHByaWNlID0gY2hhbmdlZCAqICgwLjAxIGV0aGVyKTsKICAgIHJlcXVpcmUocHJpY2UgPj0gMCk7CiAgICByZXR1cm4gcHJpY2U7CiAgfQoKICBmdW5jdGlvbiBnaWZ0UGxvdCh1aW50IHgsIHVpbnQgeSwgYWRkcmVzcyByZWNpcGllbnQpIHB1YmxpYyBvd25lck9ubHkgeHlCb3VuZGVkKHgsIHkpIHJldHVybnMgKGJvb2wpIHsKICAgIHJlcXVpcmUoIXBsb3RzW3hdW3ldLm93bmVkKTsKICAgIHBsb3RzW3hdW3ldID0gUGxvdCh7CiAgICAgIG93bmVkOiB0cnVlLAogICAgICBvd25lcjogcmVjaXBpZW50LAogICAgICB4OiB4LAogICAgICB5OiB5LAogICAgICB0ZXJyYWluOiBnZXRJbml0aWFsVGVycmFpbih4LCB5KSwKICAgICAgc2FsZUNvdW50OiAxCiAgICB9KTsKICAgIFBsb3RTYWxlKHgsIHksIDB4MCwgcmVjaXBpZW50LCAwLCB0cnVlKTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgZnVuY3Rpb24gcGluZygpIHB1YmxpYyBwdXJlIHJldHVybnMgKGJ5dGVzNCkgewogICAgcmV0dXJuICJwb25nIjsKICB9CgogIC8vIFRPRE8gVEVTVAogIGZ1bmN0aW9uIHNldE5ld1RlcnJhaW4odWludCB4LCB1aW50IHksIGJ5dGVzMzIgbmV3VGVycmFpbikgcHVibGljIHh5Qm91bmRlZCh4LCB5KSB2YWxpZE5ld1RlcnJhaW4oeCwgeSwgbmV3VGVycmFpbikgcGF5YWJsZSByZXR1cm5zIChib29sKSB7CiAgICBQbG90IHN0b3JhZ2UgcGxvdCA9IHBsb3RzW3hdW3ldOwogICAgcmVxdWlyZShwbG90Lm93bmVkKTsKICAgIHJlcXVpcmUocGxvdC5vd25lciA9PSBtc2cuc2VuZGVyKTsKICAgIHVpbnQgc2V0UHJpY2UgPSBnZXRTZXROZXdUZXJyYWluUHJpY2UoeCwgeSwgbmV3VGVycmFpbik7CiAgICByZXF1aXJlKG1zZy52YWx1ZSA9PSBzZXRQcmljZSk7CiAgICBwbG90LnRlcnJhaW4gPSBuZXdUZXJyYWluOwogICAgUGxvdFRlcnJhaW5VcGRhdGUoeCwgeSwgbXNnLnNlbmRlciwgbXNnLnZhbHVlLCBuZXdUZXJyYWluKTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgZnVuY3Rpb24gc2V0T3duZXIoYWRkcmVzcyBuZXdPd25lcikgcHVibGljIG93bmVyT25seSByZXR1cm5zIChib29sKSB7CiAgICBvd25lciA9IG5ld093bmVyOwogICAgcmV0dXJuIHRydWU7CiAgfQoKICBmdW5jdGlvbiB3aXRoZHJhd0V0aGVyKHVpbnQgYW1vdW50KSBwdWJsaWMgb3duZXJPbmx5IHJldHVybnMgKGJvb2wpIHsKICAgIHJlcXVpcmUodGhpcy5iYWxhbmNlID49IGFtb3VudCk7CiAgICBhZGRyZXNzIHJlY2lwaWVudCA9IG1zZy5zZW5kZXI7CiAgICByZWNpcGllbnQudHJhbnNmZXIoYW1vdW50KTsKICAgIFdpdGhkcmF3YWwocmVjaXBpZW50LCBhbW91bnQpOwogICAgcmV0dXJuIHRydWU7CiAgfQp9'.
	

]
