Class {
	#name : #SRTe1754d039c839192ee193d5cf8406fb24fcb421f,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTe1754d039c839192ee193d5cf8406fb24fcb421f >> base64 [
	^ ''.
	

]
