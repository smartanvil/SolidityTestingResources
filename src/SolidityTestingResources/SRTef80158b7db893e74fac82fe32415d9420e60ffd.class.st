Class {
	#name : #SRTef80158b7db893e74fac82fe32415d9420e60ffd,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTef80158b7db893e74fac82fe32415d9420e60ffd >> base64 [
	^ ''.
	

]
