Class {
	#name : #SRT2cc572eA86ABcf75C113fE72752CAF0216c74837,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT2cc572eA86ABcf75C113fE72752CAF0216c74837 >> base64 [
	^ ''.
	

]
