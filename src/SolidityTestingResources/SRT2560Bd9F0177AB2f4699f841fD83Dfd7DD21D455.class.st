Class {
	#name : #SRT2560Bd9F0177AB2f4699f841fD83Dfd7DD21D455,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT2560Bd9F0177AB2f4699f841fD83Dfd7DD21D455 >> base64 [
	^ ''.
	

]
