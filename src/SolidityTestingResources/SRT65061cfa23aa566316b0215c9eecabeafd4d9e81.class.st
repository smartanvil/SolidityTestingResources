Class {
	#name : #SRT65061cfa23aa566316b0215c9eecabeafd4d9e81,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT65061cfa23aa566316b0215c9eecabeafd4d9e81 >> base64 [
	^ ''.
	

]
