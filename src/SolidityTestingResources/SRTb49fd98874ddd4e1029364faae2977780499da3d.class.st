Class {
	#name : #SRTb49fd98874ddd4e1029364faae2977780499da3d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTb49fd98874ddd4e1029364faae2977780499da3d >> base64 [
	^ ''.
	

]
