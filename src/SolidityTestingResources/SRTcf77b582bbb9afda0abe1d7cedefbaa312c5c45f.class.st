Class {
	#name : #SRTcf77b582bbb9afda0abe1d7cedefbaa312c5c45f,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTcf77b582bbb9afda0abe1d7cedefbaa312c5c45f >> base64 [
	^ 'Ly8vIFNtYXJ0IFNpZ25hdHVyZSBCZXRhIHYwLjEKCnByYWdtYSBzb2xpZGl0eSBeMC40LjIwOwoKbGlicmFyeSBTYWZlTWF0aCB7CgogIC8qKgogICogQGRldiBNdWx0aXBsaWVzIHR3byBudW1iZXJzLCB0aHJvd3Mgb24gb3ZlcmZsb3cuCiAgKi8KICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgaWYgKGEgPT0gMCkgewogICAgICByZXR1cm4gMDsKICAgIH0KICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGMgLyBhID09IGIpOwogICAgcmV0dXJuIGM7CiAgfQoKICAvKioKICAqIEBkZXYgSW50ZWdlciBkaXZpc2lvbiBvZiB0d28gbnVtYmVycywgdHJ1bmNhdGluZyB0aGUgcXVvdGllbnQuCiAgKi8KICBmdW5jdGlvbiBkaXYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgLy8gYXNzZXJ0KGIgPiAwKTsgLy8gU29saWRpdHkgYXV0b21hdGljYWxseSB0aHJvd3Mgd2hlbiBkaXZpZGluZyBieSAwCiAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgIC8vIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOyAvLyBUaGVyZSBpcyBubyBjYXNlIGluIHdoaWNoIHRoaXMgZG9lc24ndCBob2xkCiAgICByZXR1cm4gYzsKICB9CgogIC8qKgogICogQGRldiBTdWJzdHJhY3RzIHR3byBudW1iZXJzLCB0aHJvd3Mgb24gb3ZlcmZsb3cgKGkuZS4gaWYgc3VidHJhaGVuZCBpcyBncmVhdGVyIHRoYW4gbWludWVuZCkuCiAgKi8KICBmdW5jdGlvbiBzdWIodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICAvKioKICAqIEBkZXYgQWRkcyB0d28gbnVtYmVycywgdGhyb3dzIG9uIG92ZXJmbG93LgogICovCiAgZnVuY3Rpb24gYWRkKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgYXNzZXJ0KGMgPj0gYSk7CiAgICByZXR1cm4gYzsKICB9Cn0KCi8vLyBAdGl0bGUgSW50ZXJmYWNlIGZvciBjb250cmFjdHMgY29uZm9ybWluZyB0byBFUkMtNzIxOiBOb24tRnVuZ2libGUgVG9rZW5zCi8vLyBAYXV0aG9yIERpZXRlciBTaGlybGV5IDw8YSBocmVmPSIvY2RuLWNnaS9sL2VtYWlsLXByb3RlY3Rpb24iIGNsYXNzPSJfX2NmX2VtYWlsX18iIGRhdGEtY2ZlbWFpbD0iY2ZhYmFhYmJhYThmYWViN2E2YTBhMmI1YWFhMWUxYWNhMCI+W2VtYWlsJiMxNjA7cHJvdGVjdGVkXTwvYT4+IChodHRwczovL2dpdGh1Yi5jb20vZGV0ZSkKY29udHJhY3QgRVJDNzIxIHsKICAgIC8vIFJlcXVpcmVkIG1ldGhvZHMKICAgIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1NiB0b3RhbCk7CiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSk7CiAgICBmdW5jdGlvbiBvd25lck9mKHVpbnQyNTYgX3Rva2VuSWQpIHB1YmxpYyB2aWV3IHJldHVybnMgKGFkZHJlc3Mgb3duZXIpOwogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF90bywgdWludDI1NiBfdG9rZW5JZCkgcHVibGljOwogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3Rva2VuSWQpIHB1YmxpYzsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdG9rZW5JZCkgcHVibGljOwoKICAgIC8vIEV2ZW50cwogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvLCB1aW50MjU2IHRva2VuSWQpOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBvd25lciwgYWRkcmVzcyBhcHByb3ZlZCwgdWludDI1NiB0b2tlbklkKTsKCiAgICAvLyBPcHRpb25hbAogICAgZnVuY3Rpb24gbmFtZSgpIHB1YmxpYyB2aWV3IHJldHVybnMgKHN0cmluZyBuYW1lKTsKICAgIGZ1bmN0aW9uIHN5bWJvbCgpIHB1YmxpYyB2aWV3IHJldHVybnMgKHN0cmluZyBzeW1ib2wpOwogICAgLy8gZnVuY3Rpb24gdG9rZW5zT2ZPd25lcihhZGRyZXNzIF9vd25lcikgZXh0ZXJuYWwgdmlldyByZXR1cm5zICh1aW50MjU2W10gdG9rZW5JZHMpOwogICAgLy8gZnVuY3Rpb24gdG9rZW5NZXRhZGF0YSh1aW50MjU2IF90b2tlbklkLCBzdHJpbmcgX3ByZWZlcnJlZFRyYW5zcG9ydCkgcHVibGljIHZpZXcgcmV0dXJucyAoc3RyaW5nIGluZm9VcmwpOwoKICAgIC8vIEVSQy0xNjUgQ29tcGF0aWJpbGl0eSAoaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL0VJUHMvaXNzdWVzLzE2NSkKICAgIC8vIGZ1bmN0aW9uIHN1cHBvcnRzSW50ZXJmYWNlKGJ5dGVzNCBfaW50ZXJmYWNlSUQpIGV4dGVybmFsIHZpZXcgcmV0dXJucyAoYm9vbCk7Cn0KCmNvbnRyYWN0IFNtYXJ0U2lnbmF0dXJlIGlzIEVSQzcyMXsKICB1c2luZyBTYWZlTWF0aCBmb3IgdWludDI1NjsKCiAgZXZlbnQgQm91Z2h0ICh1aW50MjU2IGluZGV4ZWQgX3Rva2VuSWQsIGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIHVpbnQyNTYgX3ByaWNlKTsKICBldmVudCBTb2xkICh1aW50MjU2IGluZGV4ZWQgX3Rva2VuSWQsIGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIHVpbnQyNTYgX3ByaWNlKTsKICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3Rva2VuSWQpOwogIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfYXBwcm92ZWQsIHVpbnQyNTYgX3Rva2VuSWQpOwoKICBhZGRyZXNzIHByaXZhdGUgb3duZXI7CiAgCiAgdWludDI1NiBjb3VudGVyOwogIG1hcHBpbmcgKHVpbnQyNTYgPT4gYWRkcmVzcykgcHJpdmF0ZSBvd25lck9mdG9rZW47CiAgbWFwcGluZyAodWludDI1NiA9PiB1aW50MjU2KSBwcml2YXRlIHByaWNlT2Z0b2tlbjsKICBtYXBwaW5nICh1aW50MjU2ID0+IGFkZHJlc3MpIHByaXZhdGUgYXBwcm92ZWRPZnRva2VuOwogIG1hcHBpbmcgKHVpbnQyNTYgPT4gYWRkcmVzcykgcHJpdmF0ZSBjcmVhdG9yT2Z0b2tlbjsKICBtYXBwaW5nICh1aW50MjU2ID0+IHVpbnQyNTYpIHByaXZhdGUgcGFyZW50T2Z0b2tlbjsKICBtYXBwaW5nICh1aW50MjU2ID0+IHVpbnQyNTYpIHByaXZhdGUgYmFsYW5jZU9mVG9rZW47ICAKICBtYXBwaW5nICh1aW50MjU2ID0+IHVpbnQyNTYpIHByaXZhdGUgZnJlZU9mdG9rZW47ICAKCiAgZnVuY3Rpb24gU21hcnRTaWduYXR1cmUgKCkgcHVibGljIHsKICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgIGNyZWF0b3JPZnRva2VuW2NvdW50ZXJdID0gb3duZXJPZnRva2VuW2NvdW50ZXJdID0gbXNnLnNlbmRlcjsKICAgIHByaWNlT2Z0b2tlbltjb3VudGVyXSA9IDEgZXRoZXI7CiAgICBwYXJlbnRPZnRva2VuW2NvdW50ZXJdID0gMDsKICAgIGZyZWVPZnRva2VuW2NvdW50ZXJdID0gbm93ICsgMTIwOyAgICAKICAgIGNvdW50ZXIgKz0gMTsgICAgCiAgfQoKICAvKiBNb2RpZmllcnMgKi8KICBtb2RpZmllciBvbmx5T3duZXIodWludDI1NiBfdG9rZW5JZCkgewogICAgcmVxdWlyZShvd25lck9mdG9rZW5bX3Rva2VuSWRdID09IG1zZy5zZW5kZXIpOwogICAgXzsKICB9CiAgCiAgbW9kaWZpZXIgb25seUNyZWF0b3IodWludDI1NiBfdG9rZW5JZCkgewogICAgcmVxdWlyZShjcmVhdG9yT2Z0b2tlbltfdG9rZW5JZF0gPT0gbXNnLnNlbmRlcik7CiAgICBfOwogIH0gIAoKICAvKiBPd25lciAqLwogIGZ1bmN0aW9uIHNldENyZWF0b3IgKGFkZHJlc3MgX2NyZWF0b3IsIHVpbnQgX3Rva2VuSWQpIG9ubHlDcmVhdG9yKF90b2tlbklkKSBwdWJsaWMgewogICAgY3JlYXRvck9mdG9rZW5bX3Rva2VuSWRdID0gX2NyZWF0b3I7CiAgfQoKICAvKiBXaXRoZHJhdyAqLwoKICBmdW5jdGlvbiB3aXRoZHJhd0FsbEZyb21Ub2tlbiAodWludDI1NiBfdG9rZW5JZCkgb25seUNyZWF0b3IoX3Rva2VuSWQpIHB1YmxpYyB7CiAgICB1aW50MjU2IHQgPSBiYWxhbmNlT2ZUb2tlbltfdG9rZW5JZF07CiAgICB1aW50MjU2IHIgPSB0IC8gMjA7CiAgICBiYWxhbmNlT2ZUb2tlbltfdG9rZW5JZF0gPSAwOwogICAgYmFsYW5jZU9mVG9rZW5bcGFyZW50T2Z0b2tlbltfdG9rZW5JZF1dICs9IHI7CiAgICBtc2cuc2VuZGVyLnRyYW5zZmVyKHQgLSByKTsgICAgICAKICB9CgogIGZ1bmN0aW9uIHdpdGhkcmF3QW1vdW50RnJvbVRva2VuICh1aW50MjU2IF90b2tlbklkLCB1aW50MjU2IHQpIG9ubHlDcmVhdG9yKF90b2tlbklkKSBwdWJsaWMgewogICAgaWYgKHQgPiBiYWxhbmNlT2ZUb2tlbltfdG9rZW5JZF0pIHQgPSBiYWxhbmNlT2ZUb2tlbltfdG9rZW5JZF07CiAgICB1aW50MjU2IHIgPSB0IC8gMjA7CiAgICBiYWxhbmNlT2ZUb2tlbltfdG9rZW5JZF0gPSAwOwogICAgYmFsYW5jZU9mVG9rZW5bcGFyZW50T2Z0b2tlbltfdG9rZW5JZF1dICs9IHI7CiAgICBtc2cuc2VuZGVyLnRyYW5zZmVyKHQgLSByKTsgCiAgfQogIAogIGZ1bmN0aW9uIHdpdGhkcmF3QWxsKCkgcHVibGljIHsKICAgICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyKTsKICAgICAgb3duZXIudHJhbnNmZXIodGhpcy5iYWxhbmNlKTsKICB9CgogIC8qIEJ1eWluZyAqLwogIGZ1bmN0aW9uIGNhbGN1bGF0ZU5leHRQcmljZSAodWludDI1NiBfcHJpY2UpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYgX25leHRQcmljZSkgewogICAgcmV0dXJuIF9wcmljZS5tdWwoMTE3KS5kaXYoOTgpOwogIH0KCiAgZnVuY3Rpb24gY2FsY3VsYXRlRGV2Q3V0ICh1aW50MjU2IF9wcmljZSkgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1NiBfZGV2Q3V0KSB7CiAgICByZXR1cm4gX3ByaWNlLmRpdigyMCk7IC8vIDUlCiAgfQoKICBmdW5jdGlvbiBidXkgKHVpbnQyNTYgX3Rva2VuSWQpIHBheWFibGUgcHVibGljIHsKICAgIHJlcXVpcmUocHJpY2VPZihfdG9rZW5JZCkgPiAwKTsKICAgIHJlcXVpcmUob3duZXJPZihfdG9rZW5JZCkgIT0gYWRkcmVzcygwKSk7CiAgICByZXF1aXJlKG1zZy52YWx1ZSA+PSBwcmljZU9mKF90b2tlbklkKSk7CiAgICByZXF1aXJlKG93bmVyT2YoX3Rva2VuSWQpICE9IG1zZy5zZW5kZXIpOwogICAgcmVxdWlyZSghaXNDb250cmFjdChtc2cuc2VuZGVyKSk7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgIT0gYWRkcmVzcygwKSk7CgogICAgYWRkcmVzcyBvbGRPd25lciA9IG93bmVyT2YoX3Rva2VuSWQpOwogICAgYWRkcmVzcyBuZXdPd25lciA9IG1zZy5zZW5kZXI7CiAgICB1aW50MjU2IHByaWNlID0gcHJpY2VPZihfdG9rZW5JZCk7CiAgICB1aW50MjU2IGV4Y2VzcyA9IG1zZy52YWx1ZS5zdWIocHJpY2UpOwoKICAgIF90cmFuc2ZlcihvbGRPd25lciwgbmV3T3duZXIsIF90b2tlbklkKTsKICAgIHByaWNlT2Z0b2tlbltfdG9rZW5JZF0gPSBuZXh0UHJpY2VPZihfdG9rZW5JZCk7CgogICAgQm91Z2h0KF90b2tlbklkLCBuZXdPd25lciwgcHJpY2UpOwogICAgU29sZChfdG9rZW5JZCwgb2xkT3duZXIsIHByaWNlKTsKCiAgICAvLyBEZXZldmxvcGVyJ3MgY3V0IHdoaWNoIGlzIGxlZnQgaW4gY29udHJhY3QgYW5kIGFjY2VzZWQgYnkKICAgIC8vIGB3aXRoZHJhd0FsbGAgYW5kIGB3aXRoZHJhd0Ftb3VudFRvYCBtZXRob2RzLgogICAgdWludDI1NiBkZXZDdXQgPSBjYWxjdWxhdGVEZXZDdXQocHJpY2UpOwoKICAgIC8vIFRyYW5zZmVyIHBheW1lbnQgdG8gb2xkIG93bmVyIG1pbnVzIHRoZSBkZXZlbG9wZXIncyBjdXQuCiAgICBvbGRPd25lci50cmFuc2ZlcihwcmljZS5zdWIoZGV2Q3V0KSk7CiAgICB1aW50MjU2IHNoYXJlSG9sZGVyQ3V0ID0gZGV2Q3V0LmRpdigyMCk7CiAgICBvd25lck9mdG9rZW5bcGFyZW50T2Z0b2tlbltfdG9rZW5JZF1dLnRyYW5zZmVyKHNoYXJlSG9sZGVyQ3V0KTsKICAgIGJhbGFuY2VPZlRva2VuW190b2tlbklkXSArPSBkZXZDdXQuc3ViKHNoYXJlSG9sZGVyQ3V0KTsKCiAgICBpZiAoZXhjZXNzID4gMCkgewogICAgICBuZXdPd25lci50cmFuc2ZlcihleGNlc3MpOwogICAgfQogIH0KCiAgLyogRVJDNzIxICovCgogIGZ1bmN0aW9uIG5hbWUoKSBwdWJsaWMgdmlldyByZXR1cm5zIChzdHJpbmcgbmFtZSkgewogICAgcmV0dXJuICJzbWFydHNpZ25hdHVyZS5pbyI7CiAgfQoKICBmdW5jdGlvbiBzeW1ib2woKSBwdWJsaWMgdmlldyByZXR1cm5zIChzdHJpbmcgc3ltYm9sKSB7CiAgICByZXR1cm4gIlNTSSI7CiAgfQoKICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYgX3RvdGFsU3VwcGx5KSB7CiAgICByZXR1cm4gY291bnRlcjsKICB9CgogIGZ1bmN0aW9uIGJhbGFuY2VPZiAoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYgX2JhbGFuY2UpIHsKICAgIHVpbnQyNTYgY291bnRlciA9IDA7CgogICAgZm9yICh1aW50MjU2IGkgPSAwOyBpIDwgY291bnRlcjsgaSsrKSB7CiAgICAgIGlmIChvd25lck9mKGkpID09IF9vd25lcikgewogICAgICAgIGNvdW50ZXIrKzsKICAgICAgfQogICAgfQoKICAgIHJldHVybiBjb3VudGVyOwogIH0KCiAgZnVuY3Rpb24gb3duZXJPZiAodWludDI1NiBfdG9rZW5JZCkgcHVibGljIHZpZXcgcmV0dXJucyAoYWRkcmVzcyBfb3duZXIpIHsKICAgIHJldHVybiBvd25lck9mdG9rZW5bX3Rva2VuSWRdOwogIH0KICAKICBmdW5jdGlvbiBjcmVhdG9yT2YgKHVpbnQyNTYgX3Rva2VuSWQpIHB1YmxpYyB2aWV3IHJldHVybnMgKGFkZHJlc3MgX2NyZWF0b3IpIHsKICAgIHJldHVybiBjcmVhdG9yT2Z0b2tlbltfdG9rZW5JZF07CiAgfSAgCiAgCiAgZnVuY3Rpb24gcGFyZW50T2YgKHVpbnQyNTYgX3Rva2VuSWQpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYgX3BhcmVudCkgewogICAgcmV0dXJuIHBhcmVudE9mdG9rZW5bX3Rva2VuSWRdOwogIH0gICAgCiAgCiAgZnVuY3Rpb24gZnJlZU9mICh1aW50MjU2IF90b2tlbklkKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2IF9mcmVlKSB7CiAgICByZXR1cm4gZnJlZU9mdG9rZW5bX3Rva2VuSWRdOwogIH0gICAgCiAgCiAgZnVuY3Rpb24gYmFsYW5jZUZyb21Ub2tlbiAodWludDI1NiBfdG9rZW5JZCkgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1NiBfYmFsYW5jZSkgewogICAgcmV0dXJuIGJhbGFuY2VPZlRva2VuW190b2tlbklkXTsKICB9ICAgICAgCiAgCiAgZnVuY3Rpb24gdG9rZW5zT2YgKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2W10gX3Rva2VuSWRzKSB7CiAgICB1aW50MjU2W10gbWVtb3J5IHRva2VucyA9IG5ldyB1aW50MjU2W10oYmFsYW5jZU9mKF9vd25lcikpOwoKICAgIHVpbnQyNTYgdG9rZW5Db3VudGVyID0gMDsKICAgIGZvciAodWludDI1NiBpID0gMDsgaSA8IGNvdW50ZXI7IGkrKykgewogICAgICBpZiAob3duZXJPZihpKSA9PSBfb3duZXIpIHsKICAgICAgICB0b2tlbnNbdG9rZW5Db3VudGVyXSA9IGk7CiAgICAgICAgdG9rZW5Db3VudGVyICs9IDE7CiAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gdG9rZW5zOwogIH0KCiAgZnVuY3Rpb24gdG9rZW5FeGlzdHMgKHVpbnQyNTYgX3Rva2VuSWQpIHB1YmxpYyB2aWV3IHJldHVybnMgKGJvb2wgX2V4aXN0cykgewogICAgcmV0dXJuIHByaWNlT2YoX3Rva2VuSWQpID4gMDsKICB9CgogIGZ1bmN0aW9uIGFwcHJvdmVkRm9yKHVpbnQyNTYgX3Rva2VuSWQpIHB1YmxpYyB2aWV3IHJldHVybnMgKGFkZHJlc3MgX2FwcHJvdmVkKSB7CiAgICByZXR1cm4gYXBwcm92ZWRPZnRva2VuW190b2tlbklkXTsKICB9CgogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3Rva2VuSWQpIHB1YmxpYyB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgIT0gX3RvKTsKICAgIHJlcXVpcmUodG9rZW5FeGlzdHMoX3Rva2VuSWQpKTsKICAgIHJlcXVpcmUob3duZXJPZihfdG9rZW5JZCkgPT0gbXNnLnNlbmRlcik7CgogICAgaWYgKF90byA9PSAwKSB7CiAgICAgIGlmIChhcHByb3ZlZE9mdG9rZW5bX3Rva2VuSWRdICE9IDApIHsKICAgICAgICBkZWxldGUgYXBwcm92ZWRPZnRva2VuW190b2tlbklkXTsKICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCAwLCBfdG9rZW5JZCk7CiAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgIGFwcHJvdmVkT2Z0b2tlbltfdG9rZW5JZF0gPSBfdG87CiAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF90bywgX3Rva2VuSWQpOwogICAgfQogIH0KCiAgLyogVHJhbnNmZXJyaW5nIGEgY291bnRyeSB0byBhbm90aGVyIG93bmVyIHdpbGwgZW50aXRsZSB0aGUgbmV3IG93bmVyIHRoZSBwcm9maXRzIGZyb20gYGJ1eWAgKi8KICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdG9rZW5JZCkgcHVibGljIHsKICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lck9mKF90b2tlbklkKSk7CiAgICBfdHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdG9rZW5JZCk7CiAgfQoKICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3Rva2VuSWQpIHB1YmxpYyB7CiAgICByZXF1aXJlKGFwcHJvdmVkRm9yKF90b2tlbklkKSA9PSBtc2cuc2VuZGVyKTsKICAgIF90cmFuc2ZlcihfZnJvbSwgX3RvLCBfdG9rZW5JZCk7CiAgfQoKICBmdW5jdGlvbiBfdHJhbnNmZXIoYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3Rva2VuSWQpIGludGVybmFsIHsKICAgIHJlcXVpcmUodG9rZW5FeGlzdHMoX3Rva2VuSWQpKTsKICAgIHJlcXVpcmUob3duZXJPZihfdG9rZW5JZCkgPT0gX2Zyb20pOwogICAgcmVxdWlyZShfdG8gIT0gYWRkcmVzcygwKSk7CiAgICByZXF1aXJlKF90byAhPSBhZGRyZXNzKHRoaXMpKTsKCiAgICBvd25lck9mdG9rZW5bX3Rva2VuSWRdID0gX3RvOwogICAgYXBwcm92ZWRPZnRva2VuW190b2tlbklkXSA9IDA7CgogICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3Rva2VuSWQpOwogIH0KCiAgLyogUmVhZCAqLwoKICBmdW5jdGlvbiBwcmljZU9mICh1aW50MjU2IF90b2tlbklkKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2IF9wcmljZSkgewogICAgcmV0dXJuIHByaWNlT2Z0b2tlbltfdG9rZW5JZF07CiAgfQoKICBmdW5jdGlvbiBuZXh0UHJpY2VPZiAodWludDI1NiBfdG9rZW5JZCkgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1NiBfbmV4dFByaWNlKSB7CiAgICByZXR1cm4gY2FsY3VsYXRlTmV4dFByaWNlKHByaWNlT2YoX3Rva2VuSWQpKTsKICB9CgogIGZ1bmN0aW9uIGFsbE9mICh1aW50MjU2IF90b2tlbklkKSBleHRlcm5hbCB2aWV3IHJldHVybnMgKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9jcmVhdG9yLCB1aW50MjU2IF9wcmljZSwgdWludDI1NiBfbmV4dFByaWNlKSB7CiAgICByZXR1cm4gKG93bmVyT2Z0b2tlbltfdG9rZW5JZF0sIGNyZWF0b3JPZnRva2VuW190b2tlbklkXSwgcHJpY2VPZnRva2VuW190b2tlbklkXSwgbmV4dFByaWNlT2YoX3Rva2VuSWQpKTsKICB9CgogIC8qIFV0aWwgKi8KICBmdW5jdGlvbiBpc0NvbnRyYWN0KGFkZHJlc3MgYWRkcikgaW50ZXJuYWwgdmlldyByZXR1cm5zIChib29sKSB7CiAgICB1aW50IHNpemU7CiAgICBhc3NlbWJseSB7IHNpemUgOj0gZXh0Y29kZXNpemUoYWRkcikgfSAvLyBzb2xpdW0tZGlzYWJsZS1saW5lCiAgICByZXR1cm4gc2l6ZSA+IDA7CiAgfQogIAogIGZ1bmN0aW9uIGNoYW5nZVByaWNlKHVpbnQyNTYgX3Rva2VuSWQsIHVpbnQyNTYgX3ByaWNlKSBvbmx5T3duZXIoX3Rva2VuSWQpIHB1YmxpYyB7CiAgICByZXF1aXJlKG5vdyA+PSBmcmVlT2Z0b2tlbltfdG9rZW5JZF0pOwogICAgcHJpY2VPZnRva2VuW190b2tlbklkXSA9IF9wcmljZTsKICB9CiAgCiAgZnVuY3Rpb24gaXNzdWVUb2tlbih1aW50MjU2IF9wcmljZSwgdWludDI1NiBfZnJvemVuLCB1aW50MjU2IF9wYXJlbnQpIHB1YmxpYyB7CiAgICByZXF1aXJlKF9wYXJlbnQgPD0gY291bnRlcik7CiAgICBjcmVhdG9yT2Z0b2tlbltjb3VudGVyXSA9IG93bmVyT2Z0b2tlbltjb3VudGVyXSA9IG1zZy5zZW5kZXI7CiAgICBwcmljZU9mdG9rZW5bY291bnRlcl0gPSBfcHJpY2U7CiAgICBwYXJlbnRPZnRva2VuW2NvdW50ZXJdID0gX3BhcmVudDsKICAgIGZyZWVPZnRva2VuW2NvdW50ZXJdID0gbm93ICsgX2Zyb3plbjsKICAgIGNvdW50ZXIgKz0gMTsKICB9ICAKfQ=='.
	

]
