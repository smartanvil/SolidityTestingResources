Class {
	#name : #SRT33A8eA1c8C6294C9F65f3DAd7CA7f037BD09F951,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT33A8eA1c8C6294C9F65f3DAd7CA7f037BD09F951 >> base64 [
	^ 'Ly8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKkV0aGVyIERpY2UgR2FtZQovLwovLwovLyAgSGVsbG8gcGxheWVyLCB0aGlzIGlzIGEgRXRoZXJldW0gYmFzZWQgZGljZSBnYW1lLiBZb3UgbXVzdCBkZXBvc2l0IG1pbmltdW0gb2YgIk1pbkRlcG9zaXQiIHRvIHBsYXkgKCt0cmFuc2FjdGlvbiBjb3N0KSwgaWYgeW91IHNlbmQgbGVzcyBpdCB3b250IGJlIGNvdW50ZWQuIAovLyAgWW91IGhhdmUgYSAyNSUgY2hhbmNlIG9mIHdpbm5pbmcgdGhlIGVudGlyZSBiYWxhbmNlLCB3aGF0ZXZlciB0aGF0IGFtb3VudCBpcy4gIE9uIGF2ZXJhZ2UgdGhhdCBtZWFucyB0aGF0IDMgcGxheWVycyB3aWxsIGRlcG9zaXQgYmVmb3JlIHlvdSB3aWxsIHdpbiB0aGUgYmFsYW5jZS4KLy8gIEFsc28gZXZlcnkgNDB0aCBwbGF5ZXIgd2lsbCB3aW4gdGhlIGphY2twb3QsIHNvIG1ha2Ugc3VyZSB5b3UgYXJlIHRoYXQgcGVyc29uLiBUaGUgamFja3BvdCB3aWxsIGJlIGNvbnNpZGVyYWJseSBtb3JlIHRoYW4gdGhlIGJhbGFuY2UsIHNvIHlvdSBoYXZlIHRoZSBjaGFuY2UgdG8gd2luIGJpZyBpZiB5b3UgZGVwb3NpdCBmYXN0ISBUaGUgZmVlIGFuZCBkZXBvc2l0IHJhdGUgY2FuIGJlIGNoYW5nZWQgYnkgdGhlIG93bmVyLCBhbmQgaXQncyBwdWJsaWNseSB2aXNpYmxlLCBhZnRlciB0aGUgZGljZSBoYXMgYSBiaWcgdm9sdW1lLCB0aGUgZmVlIHdpbGwgYmUgbG93ZXJlZCEKLy8gIAovLyAgR29vZCBMdWNrIGFuZCBIYXZlIEZ1biEKLy8KLy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlNUQVJUCmNvbnRyYWN0IEV0aGVyZXVtRGljZSB7CgogIHN0cnVjdCBnYW1ibGVyYXJyYXkgewogICAgICBhZGRyZXNzIGV0aGVyQWRkcmVzczsKICAgICAgdWludCBhbW91bnQ7CiAgfQoKLy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlBVQkxJQyBWQVJJQUJMRVMKICAKICBnYW1ibGVyYXJyYXlbXSBwdWJsaWMgZ2FtYmxlcmxpc3Q7CiAgdWludCBwdWJsaWMgR2FtYmxlcnNfVW50aWxfSmFja3BvdD0wOwogIHVpbnQgcHVibGljIFRvdGFsX0dhbWJsZXJzPTA7CiAgdWludCBwdWJsaWMgRmVlUmF0ZT03OwogIHVpbnQgcHVibGljIEJhbmtyb2xsID0gMDsKICB1aW50IHB1YmxpYyBKYWNrcG90ID0gMDsKICB1aW50IHB1YmxpYyBUb3RhbF9EZXBvc2l0cz0wOwogIHVpbnQgcHVibGljIFRvdGFsX1BheW91dHM9MDsKICB1aW50IHB1YmxpYyBNaW5EZXBvc2l0PTEgZXRoZXI7CgogIGFkZHJlc3MgcHVibGljIG93bmVyOwogIHVpbnQgRmVlcz0wOwogIC8vIHNpbXBsZSBzaW5nbGUtc2lnIGZ1bmN0aW9uIG1vZGlmaWVyCiAgbW9kaWZpZXIgb25seW93bmVyIHsgaWYgKG1zZy5zZW5kZXIgPT0gb3duZXIpIF87IH0KLy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKklOSVQKCiAgZnVuY3Rpb24gRXRoZXJldW1EaWNlKCkgewogICAgb3duZXIgPSBtc2cuc2VuZGVyOwogIH0KCi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipUUklHR0VSCgogIGZ1bmN0aW9uKCkgewogICAgZW50ZXIoKTsKICB9CiAgCi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipFTlRFUgoKICBmdW5jdGlvbiBlbnRlcigpIHsKICAgIGlmIChtc2cudmFsdWUgPjEwIGZpbm5leSkgewoKICAgIHVpbnQgYW1vdW50PW1zZy52YWx1ZTsKICAgIHVpbnQgcGF5b3V0OwoKCiAgICAvLyBhZGQgYSBuZXcgcGFydGljaXBhbnQgdG8gdGhlIHN5c3RlbSBhbmQgY2FsY3VsYXRlIHRvdGFsIHBsYXllcnMKICAgIHVpbnQgbGlzdF9sZW5ndGggPSBnYW1ibGVybGlzdC5sZW5ndGg7CiAgICBUb3RhbF9HYW1ibGVycz1saXN0X2xlbmd0aCsxOwogICAgR2FtYmxlcnNfVW50aWxfSmFja3BvdD00MC0oVG90YWxfR2FtYmxlcnMgJSA0MCk7CiAgICBnYW1ibGVybGlzdC5sZW5ndGggKz0gMTsKICAgIGdhbWJsZXJsaXN0W2xpc3RfbGVuZ3RoXS5ldGhlckFkZHJlc3MgPSBtc2cuc2VuZGVyOwogICAgZ2FtYmxlcmxpc3RbbGlzdF9sZW5ndGhdLmFtb3VudCA9IGFtb3VudDsKCgoKICAgIC8vIHNldCBwYXlvdXQgdmFyaWFibGVzCiAgICAgVG90YWxfRGVwb3NpdHMrPWFtb3VudDsgICAgICAgCS8vdXBkYXRlIGRlcG9zaXRlZCBhbW91bnQKCSAgICAKICAgICAgRmVlcyAgID1hbW91bnQgKiBGZWVSYXRlLzEwMDsgICAgLy8gNyUgZmVlIHRvIHRoZSBvd25lcgogICAgICBhbW91bnQtPWFtb3VudCAqIEZlZVJhdGUvMTAwOwoJICAgIAogICAgICBCYW5rcm9sbCArPSBhbW91bnQqODAvMTAwOyAgICAgLy8gODAlIHRvIHRoZSBiYWxhbmNlCiAgICAgIGFtb3VudC09YW1vdW50KjgwLzEwMDsgIAoJICAgIAogICAgICBKYWNrcG90ICs9IGFtb3VudDsgICAgICAgICAgICAgICAJLy9yZW1haW5pbmcgdG8gdGhlIGphY2twb3QKCgogICAgLy8gcGF5b3V0IGZlZXMgdG8gdGhlIG93bmVyCiAgICAgaWYgKEZlZXMgIT0gMCkgCiAgICAgewogICAgICAJb3duZXIuc2VuZChGZWVzKTsJCS8vc2VuZCBmZWUgdG8gb3duZXIKCVRvdGFsX1BheW91dHMrPUZlZXM7ICAgICAgICAvL3VwZGF0ZSBwYWlkIG91dCBhbW91bnQKICAgICB9CiAKICAgIGlmIChtc2cudmFsdWUgPj0gTWluRGVwb3NpdCkgCiAgICAgewoJICAgICAKICAgLy9wYXlvdXQgdG8gcGFydGljaXBhbnRzCQogICAgIGlmKGxpc3RfbGVuZ3RoJTQwPT0wICYmIEphY2twb3QgPiAwKSAgIAkJCQkvL2V2ZXJ5IDQwdGggcGxheWVyIHdpbnMgdGhlIGphY2twb3QgaWYgIGl0J3Mgbm90IDAKCXsKCWdhbWJsZXJsaXN0W2xpc3RfbGVuZ3RoXS5ldGhlckFkZHJlc3Muc2VuZChKYWNrcG90KTsgICAgICAgICAvL3NlbmQgcGF5IG91dCB0byBwYXJ0aWNpcGFudAoJVG90YWxfUGF5b3V0cyArPSBKYWNrcG90OyAgICAgICAgICAgICAgIAkJCQkJLy91cGRhdGUgcGFpZCBvdXQgYW1vdW50ICAgCglKYWNrcG90PTA7CQkJCQkJCQkJLy9qYWNrcG90IHVwZGF0ZQoJfQogICAgIGVsc2UgICAJCQkJCQkJCQkJCS8veW91IGVpdGhlciB3aW4gdGhlIGphY2twb3Qgb3IgdGhlIGJhbGFuY2UsIGJ1dCBub3QgYm90aCBpbiAxIHJvdW5kCglpZih1aW50KHNoYTMoZ2FtYmxlcmxpc3RbbGlzdF9sZW5ndGhdLmV0aGVyQWRkcmVzcykpICUgMj09MCAmJiBsaXN0X2xlbmd0aCAlIDI9PTAgJiYgQmFua3JvbGwgPiAwKSAJLy9pZiB0aGUgaGFzaGVkIGxlbmd0aCBvZiB5b3VyIGFkZHJlc3MgaXMgZXZlbiwgCgl7IAkJCQkJCQkJCQkJCSAgIAkJCQkJCQkJLy93aGljaCBpcyBhIDI1JSBjaGFuY2UsIHRoZW4geW91IGdldCBwYWlkIG91dCBhbGwgYmFsYW5jZSEKCWdhbWJsZXJsaXN0W2xpc3RfbGVuZ3RoXS5ldGhlckFkZHJlc3Muc2VuZChCYW5rcm9sbCk7ICAgICAgICAvL3NlbmQgcGF5IG91dCB0byBwYXJ0aWNpcGFudAoJVG90YWxfUGF5b3V0cyArPSBCYW5rcm9sbDsgICAgICAgICAgICAgICAJCQkJCS8vdXBkYXRlIHBhaWQgb3V0IGFtb3VudAoJQmFua3JvbGwgPSAwOyAgICAgICAgICAgICAgICAgICAgICAJCQkJCQkvL2Jhbmtyb2xsIHVwZGF0ZQoJfQogICAgCiAgICAKICAgIAogICAgLy9lbnRlciBmdW5jdGlvbiBlbmRzCgl9CiAgICB9CiAgfQoKLy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKk5FVyBPV05FUgoKICBmdW5jdGlvbiBzZXRPd25lcihhZGRyZXNzIG5ld19vd25lcikgb25seW93bmVyIHsgLy9zZXQgbmV3IG93bmVyIG9mIHRoZSBjYXNpbm8KICAgICAgb3duZXIgPSBuZXdfb3duZXI7CiAgfQovLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqU0VUIE1JTiBERVBPU0lUCgogIGZ1bmN0aW9uIHNldE1pbkRlcG9zaXQodWludCBuZXdfbWluZGVwb3NpdCkgb25seW93bmVyIHsgLy9zZXQgbmV3IG1pbmltdW0gZGVwb3NpdCByYXRlCiAgICAgIE1pbkRlcG9zaXQgPSBuZXdfbWluZGVwb3NpdDsKICB9Ci8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipTRVQgRkVFIFJBVEUKCiAgZnVuY3Rpb24gc2V0RmVlUmF0ZSh1aW50IG5ld19mZWVyYXRlKSBvbmx5b3duZXIgeyAvL3NldCBuZXcgZmVlIHJhdGUKICAgICAgRmVlUmF0ZSA9IG5ld19mZWVyYXRlOwogIH0KfQ=='.
	

]
