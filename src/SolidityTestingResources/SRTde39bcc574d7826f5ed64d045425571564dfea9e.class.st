Class {
	#name : #SRTde39bcc574d7826f5ed64d045425571564dfea9e,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTde39bcc574d7826f5ed64d045425571564dfea9e >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTU7CgovKgoKUmlwaW8gZnVuZHMgcG9vbAo9PT09PT09PT09PT09PT09PT09PT09PT0KCk9yaWdpbmFsIGJ5OiBtb29ubGFtYm9zCk1vZGlmaWVkIGJ5OiBkdW5nZW9uCgoqLwoKLy8gRVJDMjAgSW50ZXJmYWNlOiBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9pc3N1ZXMvMjAKY29udHJhY3QgRVJDMjAgewogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSk7Cn0KCmNvbnRyYWN0IFJpcGlvRlVORCB7CiAgLy8gU3RvcmUgdGhlIGFtb3VudCBvZiBFVEggZGVwb3NpdGVkIGJ5IGVhY2ggYWNjb3VudC4KICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBiYWxhbmNlczsKICAvLyBTdG9yZSB0aGUgbnVtYmVyIG9mIHRpbWVzIHRoZSB2b3RlcnMgaW5kaXZpZHVhbGx5IHZvdGVkLgogIG1hcHBpbmcgKGFkZHJlc3MgPT4gYm9vbCkgcHVibGljIHZvdGVyczsKICAvLyBLZWVwIHRyYWNrIG9mIHRoZSAiZm9yIiB2b3RlcyBmb3IgdGhlIGFkZHJlc3MKICB1aW50MjU2IHB1YmxpYyBmb3Jfdm90ZXMgPSAwOwogIC8vIEtlZXAgdHJhY2sgb2YgdGhlICJhZ2Fpc250IiB2b3RlcyBmb3IgdGhlIGFkZHJlc3MKICB1aW50MjU2IHB1YmxpYyBhZ2Fpc250X3ZvdGVzID0gMDsKCgogIC8vIGhhc2ggb2YgdGhlIHBhc3N3b3JkIHJlcXVpcmVkIGZvciB2b3Rpbmcgb3IgY2hhbmdpbmcgdGhlIHNhbGUgYWRkcmVzcwogIGJ5dGVzMzIgaGFzaF9wd2QgPSAweGFkN2IyZjVkN2U0ODUwMjMyY2NmZTJmZTIyZDA1MGViNmM0NDRkYjRmZTM3NDIwN2Y5MDFkYWFiOGZiN2EzYTg7CiAgCiAgLy8gVHJhY2sgd2hldGhlciB0aGUgY29udHJhY3QgaGFzIGJvdWdodCB0aGUgdG9rZW5zIHlldC4KICBib29sIHB1YmxpYyBib3VnaHRfdG9rZW5zOwogIAogIC8vIFJlY29yZCBFVEggdmFsdWUgb2YgdG9rZW5zIGN1cnJlbnRseSBoZWxkIGJ5IGNvbnRyYWN0LgogIHVpbnQyNTYgcHVibGljIGNvbnRyYWN0X2V0aF92YWx1ZTsKICAKICAvLyBUaGUgbWluaW11bSBhbW91bnQgb2YgRVRIIHRoYXQgbXVzdCBiZSBkZXBvc2l0ZWQgYmVmb3JlIHRoZSBidXktaW4gY2FuIGJlIHBlcmZvcm1lZC4KICB1aW50MjU2IGNvbnN0YW50IHB1YmxpYyBtaW5fcmVxdWlyZWRfYW1vdW50ID0gMTUwIGV0aGVyOwogIC8vIFRoZSBtYXhpbXVtIGFtb3VudCBvZiBFVEggYWxsb3dlZAogIHVpbnQyNTYgY29uc3RhbnQgcHVibGljIG1heF9hbW91bnQgPSAxMjc1MCBldGhlcjsKICAKICAvLyBUaGUgY3Jvd2RzYWxlIGFkZHJlc3MuCiAgYWRkcmVzcyBwdWJsaWMgc2FsZSA9IDB4MDsKCiAgLy8gQWRkcmVzcyBvZiB0aGUgY3JlYXRvcgogIGFkZHJlc3MgY29uc3RhbnQgcHVibGljIGNyZWF0b3IgPSAweDlDNzI4ZmYzRWY1MzFDRDJFNDZhRjk3YzU5YTgwOTc2MUFkNWM5ODc7CiAgCiAgLy8gQWxsb3dzIGFueSB1c2VyIHRvIHdpdGhkcmF3IGhpcyB0b2tlbnMuCiAgLy8gVGFrZXMgdGhlIHRva2VuJ3MgRVJDMjAgYWRkcmVzcyBhcyBhcmd1bWVudCBhcyBpdCBpcyB1bmtub3duIGF0IHRoZSB0aW1lIG9mIGNvbnRyYWN0IGRlcGxveW1lbnQuCiAgLy9XaGVuIHRoZSBkZXZzIHdpbGwgc2VuZCB0aGUgdG9rZW5zLCB5b3Ugd2lsbCBoYXZlIHRvIGNhbGwgdGhpcyBmdW5jdGlvbiBhbmQgcGFzcyB0aGUgRVJDMjAgdG9rZW4gYWRkcmVzcyBvZiBBTUJST1NVUwogIGZ1bmN0aW9uIHBlcmZvcm1fd2l0aGRyYXcoYWRkcmVzcyB0b2tlbkFkZHJlc3MpIHsKICAgIC8vIERpc2FsbG93IHdpdGhkcmF3IGlmIHRva2VucyBoYXZlbid0IGJlZW4gYm91Z2h0IHlldC4KICAgIHJlcXVpcmUoYm91Z2h0X3Rva2Vucyk7CiAgICAKICAgIC8vIFJldHJpZXZlIGN1cnJlbnQgdG9rZW4gYmFsYW5jZSBvZiBjb250cmFjdC4KICAgIEVSQzIwIHRva2VuID0gRVJDMjAodG9rZW5BZGRyZXNzKTsKICAgIHVpbnQyNTYgY29udHJhY3RfdG9rZW5fYmFsYW5jZSA9IHRva2VuLmJhbGFuY2VPZihhZGRyZXNzKHRoaXMpKTsKICAgICAgCiAgICAvLyBEaXNhbGxvdyB0b2tlbiB3aXRoZHJhd2FscyBpZiB0aGVyZSBhcmUgbm8gdG9rZW5zIHRvIHdpdGhkcmF3LgogICAgcmVxdWlyZShjb250cmFjdF90b2tlbl9iYWxhbmNlICE9IDApOwogICAgICAKICAgIC8vIFN0b3JlIHRoZSB1c2VyJ3MgdG9rZW4gYmFsYW5jZSBpbiBhIHRlbXBvcmFyeSB2YXJpYWJsZS4KICAgIHVpbnQyNTYgdG9rZW5zX3RvX3dpdGhkcmF3ID0gKGJhbGFuY2VzW21zZy5zZW5kZXJdICogY29udHJhY3RfdG9rZW5fYmFsYW5jZSkgLyBjb250cmFjdF9ldGhfdmFsdWU7CiAgICAgIAogICAgLy8gVXBkYXRlIHRoZSB2YWx1ZSBvZiB0b2tlbnMgY3VycmVudGx5IGhlbGQgYnkgdGhlIGNvbnRyYWN0LgogICAgY29udHJhY3RfZXRoX3ZhbHVlIC09IGJhbGFuY2VzW21zZy5zZW5kZXJdOwogICAgICAKICAgIC8vIFVwZGF0ZSB0aGUgdXNlcidzIGJhbGFuY2UgcHJpb3IgdG8gc2VuZGluZyB0byBwcmV2ZW50IHJlY3Vyc2l2ZSBjYWxsLgogICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSAwOwoKICAgIC8vIFNlbmQgdGhlIGZ1bmRzLiAgVGhyb3dzIG9uIGZhaWx1cmUgdG8gcHJldmVudCBsb3NzIG9mIGZ1bmRzLgogICAgcmVxdWlyZSh0b2tlbi50cmFuc2Zlcihtc2cuc2VuZGVyLCB0b2tlbnNfdG9fd2l0aGRyYXcpKTsKICB9CiAgCiAgLy8gQWxsb3dzIGFueSB1c2VyIHRvIGdldCBoaXMgZXRoIHJlZnVuZGVkIGJlZm9yZSB0aGUgcHVyY2hhc2UgaXMgbWFkZSBvciBhZnRlciBhcHByb3guIDIwIGRheXMgaW4gY2FzZSB0aGUgZGV2cyByZWZ1bmQgdGhlIGV0aC4KICBmdW5jdGlvbiByZWZ1bmRfbWUoKSB7CiAgICByZXF1aXJlKCFib3VnaHRfdG9rZW5zKTsKCiAgICAvLyBTdG9yZSB0aGUgdXNlcidzIGJhbGFuY2UgcHJpb3IgdG8gd2l0aGRyYXdhbCBpbiBhIHRlbXBvcmFyeSB2YXJpYWJsZS4KICAgIHVpbnQyNTYgZXRoX3RvX3dpdGhkcmF3ID0gYmFsYW5jZXNbbXNnLnNlbmRlcl07CiAgICAgIAogICAgLy8gVXBkYXRlIHRoZSB1c2VyJ3MgYmFsYW5jZSBwcmlvciB0byBzZW5kaW5nIEVUSCB0byBwcmV2ZW50IHJlY3Vyc2l2ZSBjYWxsLgogICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSAwOwogICAgICAKICAgIC8vIFJldHVybiB0aGUgdXNlcidzIGZ1bmRzLiAgVGhyb3dzIG9uIGZhaWx1cmUgdG8gcHJldmVudCBsb3NzIG9mIGZ1bmRzLgogICAgbXNnLnNlbmRlci50cmFuc2ZlcihldGhfdG9fd2l0aGRyYXcpOwogIH0KICAKICAvLyBCdXkgdGhlIHRva2Vucy4gU2VuZHMgRVRIIHRvIHRoZSBwcmVzYWxlIHdhbGxldCBhbmQgcmVjb3JkcyB0aGUgRVRIIGFtb3VudCBoZWxkIGluIHRoZSBjb250cmFjdC4KICBmdW5jdGlvbiBidXlfdGhlX3Rva2VucyhzdHJpbmcgcGFzc3dvcmQpIHsKICAgIC8vIFNob3J0IGNpcmN1aXQgdG8gc2F2ZSBnYXMgaWYgdGhlIGNvbnRyYWN0IGhhcyBhbHJlYWR5IGJvdWdodCB0b2tlbnMuCiAgICBpZiAoYm91Z2h0X3Rva2VucykgcmV0dXJuOwoKICAgIHJlcXVpcmUoaGFzaF9wd2QgPT0ga2VjY2FrMjU2KHBhc3N3b3JkKSk7CiAgICAvLyBXZSBuZWVkIGF0IGxlYXN0IDUxJSBvZiB0aGUgdm90ZXMgZm9yIHRoZSBwcm9wb3NlZCBzYWxlIGFkZHJlc3MgaW4gb3JkZXIgdG8gYnV5CiAgICByZXF1aXJlIChmb3Jfdm90ZXMgPiBhZ2Fpc250X3ZvdGVzKTsKICAgIC8vIFRocm93IGlmIHRoZSBjb250cmFjdCBiYWxhbmNlIGlzbid0IGJldHdlZW4gdGhlc2UgdHdvIGxpbWl0cwogICAgcmVxdWlyZSh0aGlzLmJhbGFuY2UgPj0gbWluX3JlcXVpcmVkX2Ftb3VudCk7CiAgICByZXF1aXJlKHRoaXMuYmFsYW5jZSA8PSBtYXhfYW1vdW50KTsKCiAgICAvLyBEaXNhbGxvdyBidXlpbmcgaW4gaWYgdGhlIGRldmVsb3BlciBoYXNuJ3Qgc2V0IHRoZSBzYWxlIGFkZHJlc3MgeWV0LgogICAgcmVxdWlyZShzYWxlICE9IDB4MCk7CiAgICAKICAgIC8vIFJlY29yZCB0aGF0IHRoZSBjb250cmFjdCBoYXMgYm91Z2h0IHRoZSB0b2tlbnMuCiAgICBib3VnaHRfdG9rZW5zID0gdHJ1ZTsKICAgIAogICAgLy8gUmVjb3JkIHRoZSBhbW91bnQgb2YgRVRIIHNlbnQgYXMgdGhlIGNvbnRyYWN0J3MgY3VycmVudCB2YWx1ZS4KICAgIGNvbnRyYWN0X2V0aF92YWx1ZSA9IHRoaXMuYmFsYW5jZTsKCiAgICAvLyBUcmFuc2ZlciBhbGwgdGhlIGZ1bmRzIHRvIHRoZSBjcm93ZHNhbGUgYWRkcmVzcy4KICAgIHNhbGUudHJhbnNmZXIoY29udHJhY3RfZXRoX3ZhbHVlKTsKICB9CgogIGZ1bmN0aW9uIGNoYW5nZV9zYWxlX2FkZHJlc3MoYWRkcmVzcyBfc2FsZSkgewogICAgcmVxdWlyZSghYm91Z2h0X3Rva2Vucyk7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gY3JlYXRvcik7CiAgICBzYWxlID0gX3NhbGU7CiAgICAvL3Jlc2V0IHRoZSB2b3RlcywgaW4gY2FzZSBhIHdyb25nIGFkZHkgd2FzIHByZXZpb3VzbHkgZ2l2ZW4KICAgIGZvcl92b3RlcyA9IDA7CiAgICBhZ2Fpc250X3ZvdGVzID0gMDsKICB9CgogIGZ1bmN0aW9uIHZvdGVfcHJvcG9zZWRfYWRkcmVzcyhzdHJpbmcgc3RyaW5nX3ZvdGUpIHsKICAgIHJlcXVpcmUoIWJvdWdodF90b2tlbnMpOwogICAgLy8gVGhlIHZvdGVyIG11c24ndCBoYXZlIHZvdGVkIGJlZm9yZQogICAgcmVxdWlyZSghdm90ZXJzW21zZy5zZW5kZXJdKTsKICAgIC8vIERpc2FsbG93IHZvdGluZyBmb3IgdGhlICJ2b2lkIiBhZGRyZXNzCiAgICByZXF1aXJlKHNhbGUgIT0gMHgwKTsKICAgIC8vIFN0b3JlIHRoZSBmYWN0IHRoYXQgdGhlIGFkZHkgdm90ZWQKICAgIHZvdGVyc1ttc2cuc2VuZGVyXSA9IHRydWU7CiAgICBpZiAoa2VjY2FrMjU2KHN0cmluZ192b3RlKSA9PSBrZWNjYWsyNTYoInllcyIpKXsKICAgICAgZm9yX3ZvdGVzICs9IDE7CiAgICB9CiAgICBpZiAoa2VjY2FrMjU2KHN0cmluZ192b3RlKSA9PSBrZWNjYWsyNTYoIm5vIikpewogICAgICBhZ2Fpc250X3ZvdGVzICs9IDE7CiAgICB9CiAgfQoKICAvLyBBIGhlbHBlciBmdW5jdGlvbiBmb3IgdGhlIGRlZmF1bHQgZnVuY3Rpb24sIGFsbG93aW5nIGNvbnRyYWN0cyB0byBpbnRlcmFjdC4KICBmdW5jdGlvbiBkZWZhdWx0X2hlbHBlcigpIHBheWFibGUgewogICAgcmVxdWlyZSghYm91Z2h0X3Rva2Vucyk7CiAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSArPSBtc2cudmFsdWU7CiAgfQogIAogIC8vIERlZmF1bHQgZnVuY3Rpb24uICBDYWxsZWQgd2hlbiBhIHVzZXIgc2VuZHMgRVRIIHRvIHRoZSBjb250cmFjdC4KICBmdW5jdGlvbiAoKSBwYXlhYmxlIHsKICAgIC8vIERlbGVnYXRlIHRvIHRoZSBoZWxwZXIgZnVuY3Rpb24uCiAgICBkZWZhdWx0X2hlbHBlcigpOwogIH0KfQ=='.
	

]
