Class {
	#name : #SRT9ec58861641bc805564bbc0c5fb4a856516238e7,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT9ec58861641bc805564bbc0c5fb4a856516238e7 >> base64 [
	^ ''.
	

]
