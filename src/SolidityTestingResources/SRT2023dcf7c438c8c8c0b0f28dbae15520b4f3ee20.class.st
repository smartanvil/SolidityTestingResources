Class {
	#name : #SRT2023dcf7c438c8c8c0b0f28dbae15520b4f3ee20,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT2023dcf7c438c8c8c0b0f28dbae15520b4f3ee20 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTM7Cgpjb250cmFjdCBJdG9rZW5SZWNpcGllbnQgewogIGZ1bmN0aW9uIHJlY2VpdmVBcHByb3ZhbChhZGRyZXNzIF9mcm9tLCB1aW50MjU2IF92YWx1ZSwgYWRkcmVzcyBfdG9rZW4sIGJ5dGVzIF9leHRyYURhdGEpOwp9Cgpjb250cmFjdCBJRVJDMjBUb2tlbiB7CiAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiB0b3RhbFN1cHBseSk7CiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7fQogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcykge30KICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7fQogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHt9CiAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpIHt9CgogIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwogIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpOwp9CgovKioKICogQHRpdGxlIFNhZmVNYXRoCiAqIEBkZXYgTWF0aCBvcGVyYXRpb25zIHdpdGggc2FmZXR5IGNoZWNrcyB0aGF0IHRocm93IG9uIGVycm9yCiAqLwpsaWJyYXJ5IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAKICAgIHVpbnQyNTYgYyA9IGEgLyBiOwogICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KfQoKY29udHJhY3QgT3duZWQgewogICAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CiAgICBhZGRyZXNzIHB1YmxpYyBuZXdPd25lcjsKCiAgICBmdW5jdGlvbiBPd25lZCgpIHB1YmxpY3sKICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgICB9CgogICAgbW9kaWZpZXIgb25seU93bmVyIHsKICAgICAgICBhc3NlcnQobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICAgICAgXzsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIF9uZXdPd25lcikgcHVibGljIG9ubHlPd25lciB7CiAgICAgICAgcmVxdWlyZShfbmV3T3duZXIgIT0gb3duZXIpOwogICAgICAgIG5ld093bmVyID0gX25ld093bmVyOwogICAgfQoKICAgIGZ1bmN0aW9uIGFjY2VwdE93bmVyc2hpcCgpIHB1YmxpYyB7CiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG5ld093bmVyKTsKICAgICAgICBPd25lclVwZGF0ZShvd25lciwgbmV3T3duZXIpOwogICAgICAgIG93bmVyID0gbmV3T3duZXI7CiAgICAgICAgbmV3T3duZXIgPSAweDA7CiAgICB9CgogICAgZXZlbnQgT3duZXJVcGRhdGUoYWRkcmVzcyBfcHJldk93bmVyLCBhZGRyZXNzIF9uZXdPd25lcik7Cn0KCgpjb250cmFjdCBMb2NrYWJsZU93bmVkIGlzIE93bmVkewoKICB1aW50MjU2IHB1YmxpYyBsb2NrZWRVbnRpbFRpbWU7CgogIGV2ZW50IENvbnRyYWN0TG9ja2VkKHVpbnQyNTYgX3VudGlsVGltZSwgc3RyaW5nIF9yZWFzb24pOwoKICBtb2RpZmllciBsb2NrQWZmZWN0ZWQgewogICAgICByZXF1aXJlKGJsb2NrLnRpbWVzdGFtcCA+IGxvY2tlZFVudGlsVGltZSk7CiAgICAgIF87CiAgfQoKICBmdW5jdGlvbiBsb2NrRnJvbVNlbGYodWludDI1NiBfdW50aWxUaW1lLCBzdHJpbmcgX3JlYXNvbikgaW50ZXJuYWwgewogICAgbG9ja2VkVW50aWxUaW1lID0gX3VudGlsVGltZTsKICAgIENvbnRyYWN0TG9ja2VkKF91bnRpbFRpbWUsIF9yZWFzb24pOwogIH0KCgogIGZ1bmN0aW9uIGxvY2tVbnRpbCh1aW50MjU2IF91bnRpbFRpbWUsIHN0cmluZyBfcmVhc29uKSBvbmx5T3duZXIgewogICAgbG9ja2VkVW50aWxUaW1lID0gX3VudGlsVGltZTsKICAgIENvbnRyYWN0TG9ja2VkKF91bnRpbFRpbWUsIF9yZWFzb24pOwogIH0KfQoKCmNvbnRyYWN0IFRva2VuIGlzIElFUkMyMFRva2VuLCBMb2NrYWJsZU93bmVkIHsKCiAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQyNTY7CgogIC8qIFB1YmxpYyB2YXJpYWJsZXMgb2YgdGhlIHRva2VuICovCiAgc3RyaW5nIHB1YmxpYyBzdGFuZGFyZDsKICBzdHJpbmcgcHVibGljIG5hbWU7CiAgc3RyaW5nIHB1YmxpYyBzeW1ib2w7CiAgdWludDggcHVibGljIGRlY2ltYWxzOwoKICBhZGRyZXNzIHB1YmxpYyBjcm93ZHNhbGVDb250cmFjdEFkZHJlc3M7CgogIC8qIFByaXZhdGUgdmFyaWFibGVzIG9mIHRoZSB0b2tlbiAqLwogIHVpbnQyNTYgc3VwcGx5ID0gMDsKICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIGJhbGFuY2VzOwogIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dhbmNlczsKCiAgLyogRXZlbnRzICovCiAgZXZlbnQgTWludChhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50MjU2IF92YWx1ZSk7CgogIC8qIFJldHVybnMgdG90YWwgc3VwcGx5IG9mIGlzc3VlZCB0b2tlbnMgKi8KICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHJldHVybiBzdXBwbHk7CiAgfQoKICAvKiBSZXR1cm5zIGJhbGFuY2Ugb2YgYWRkcmVzcyAqLwogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7CiAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsKICB9CgogIC8qIFRyYW5zZmVycyB0b2tlbnMgZnJvbSB5b3VyIGFkZHJlc3MgdG8gb3RoZXIgKi8KICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIGxvY2tBZmZlY3RlZCByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgIHJlcXVpcmUoX3RvICE9IDB4MCAmJiBfdG8gIT0gYWRkcmVzcyh0aGlzKSk7CiAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IGJhbGFuY2VzW21zZy5zZW5kZXJdLnN1YihfdmFsdWUpOyAvLyBEZWR1Y3Qgc2VuZGVycyBiYWxhbmNlCiAgICBiYWxhbmNlc1tfdG9dID0gYmFsYW5jZXNbX3RvXS5hZGQoX3ZhbHVlKTsgICAgICAgICAgICAgICAvLyBBZGQgcmVjZWl2ZXJzIGJhbGFuY2UKICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsgICAgICAgICAgICAgICAgICAgICAgIC8vIFJhaXNlIFRyYW5zZmVyIGV2ZW50CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIC8qIEFwcHJvdmUgb3RoZXIgYWRkcmVzcyB0byBzcGVuZCB0b2tlbnMgb24geW91ciBhY2NvdW50ICovCiAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgbG9ja0FmZmVjdGVkIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgYWxsb3dhbmNlc1ttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7ICAgICAgICAvLyBTZXQgYWxsb3dhbmNlCiAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsgICAgICAgICAgIC8vIFJhaXNlIEFwcHJvdmFsIGV2ZW50CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIC8qIEFwcHJvdmUgYW5kIHRoZW4gY29tbXVuaWNhdGUgdGhlIGFwcHJvdmVkIGNvbnRyYWN0IGluIGEgc2luZ2xlIHR4ICovCiAgZnVuY3Rpb24gYXBwcm92ZUFuZENhbGwoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUsIGJ5dGVzIF9leHRyYURhdGEpIGxvY2tBZmZlY3RlZCByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgIEl0b2tlblJlY2lwaWVudCBzcGVuZGVyID0gSXRva2VuUmVjaXBpZW50KF9zcGVuZGVyKTsgICAgICAgICAgICAvLyBDYXN0IHNwZW5kZXIgdG8gdG9rZW5SZWNpcGllbnQgY29udHJhY3QKICAgIGFwcHJvdmUoX3NwZW5kZXIsIF92YWx1ZSk7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBTZXQgYXBwcm92YWwgdG8gY29udHJhY3QgZm9yIF92YWx1ZQogICAgc3BlbmRlci5yZWNlaXZlQXBwcm92YWwobXNnLnNlbmRlciwgX3ZhbHVlLCB0aGlzLCBfZXh0cmFEYXRhKTsgIC8vIFJhaXNlIG1ldGhvZCBvbiBfc3BlbmRlciBjb250cmFjdAogICAgcmV0dXJuIHRydWU7CiAgfQoKICAvKiBBIGNvbnRyYWN0IGF0dGVtcHRzIHRvIGdldCB0aGUgY29pbnMgKi8KICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBsb2NrQWZmZWN0ZWQgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICByZXF1aXJlKF90byAhPSAweDAgJiYgX3RvICE9IGFkZHJlc3ModGhpcykpOwogICAgYmFsYW5jZXNbX2Zyb21dID0gYmFsYW5jZXNbX2Zyb21dLnN1YihfdmFsdWUpOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIERlZHVjdCBzZW5kZXJzIGJhbGFuY2UKICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfdmFsdWUpOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBBZGQgcmVjaXBpZW50IGJhbGFuY2UKICAgIGFsbG93YW5jZXNbX2Zyb21dW21zZy5zZW5kZXJdID0gYWxsb3dhbmNlc1tfZnJvbV1bbXNnLnNlbmRlcl0uc3ViKF92YWx1ZSk7ICAvLyBEZWR1Y3QgYWxsb3dhbmNlIGZvciB0aGlzIGFkZHJlc3MKICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBSYWlzZSBUcmFuc2ZlciBldmVudAogICAgcmV0dXJuIHRydWU7CiAgfQoKICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKSB7CiAgICByZXR1cm4gYWxsb3dhbmNlc1tfb3duZXJdW19zcGVuZGVyXTsKICB9CgogIGZ1bmN0aW9uIG1pbnRUb2tlbnMoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX2Ftb3VudCkgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IGNyb3dkc2FsZUNvbnRyYWN0QWRkcmVzcyk7CgogICAgc3VwcGx5ID0gc3VwcGx5LmFkZChfYW1vdW50KTsKICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfYW1vdW50KTsKICAgIE1pbnQoX3RvLCBfYW1vdW50KTsKICAgIFRyYW5zZmVyKDB4MCwgX3RvLCBfYW1vdW50KTsKICB9CgogIGZ1bmN0aW9uIHNhbHZhZ2VUb2tlbnNGcm9tQ29udHJhY3QoYWRkcmVzcyBfdG9rZW5BZGRyZXNzLCBhZGRyZXNzIF90bywgdWludCBfYW1vdW50KSBvbmx5T3duZXJ7CiAgICBJRVJDMjBUb2tlbihfdG9rZW5BZGRyZXNzKS50cmFuc2ZlcihfdG8sIF9hbW91bnQpOwogIH0KfQoKCmNvbnRyYWN0IEZ1dG91cmlzdFRva2VuIGlzIFRva2VuIHsKCiAgLyogSW5pdGlhbGl6ZXMgY29udHJhY3QgKi8KICBmdW5jdGlvbiBGdXRvdXJpc3RUb2tlbigpIHsKICAgIHN0YW5kYXJkID0gIiB2MS4wIjsKICAgIG5hbWUgPSAiRnV0b3VyaXN0VG9rZW4iOwogICAgc3ltYm9sID0gIkZUUiI7CiAgICBkZWNpbWFscyA9IDE4OwogICAgY3Jvd2RzYWxlQ29udHJhY3RBZGRyZXNzID0gMHg2NDJDRTk5QWFEMGNDYzZmRWQ3OTMwMTE3YjIxN0ExOGNlNEI0MjI5OwogICAgbG9ja0Zyb21TZWxmKDE1MjE1NjE2MDAsICJMb2NrIGJlZm9yZSBjcm93ZHNhbGUgc3RhcnRzIik7CiAgfQp9'.
	

]
