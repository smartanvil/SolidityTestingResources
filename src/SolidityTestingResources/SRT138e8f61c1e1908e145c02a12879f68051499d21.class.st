Class {
	#name : #SRT138e8f61c1e1908e145c02a12879f68051499d21,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT138e8f61c1e1908e145c02a12879f68051499d21 >> base64 [
	^ ''.
	

]
