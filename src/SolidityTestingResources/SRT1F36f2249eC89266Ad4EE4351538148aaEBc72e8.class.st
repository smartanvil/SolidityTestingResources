Class {
	#name : #SRT1F36f2249eC89266Ad4EE4351538148aaEBc72e8,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT1F36f2249eC89266Ad4EE4351538148aaEBc72e8 >> base64 [
	^ ''.
	

]
