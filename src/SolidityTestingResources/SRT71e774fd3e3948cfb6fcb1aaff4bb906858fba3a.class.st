Class {
	#name : #SRT71e774fd3e3948cfb6fcb1aaff4bb906858fba3a,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT71e774fd3e3948cfb6fcb1aaff4bb906858fba3a >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7CgpsaWJyYXJ5IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAgdWludDI1NiBjID0gYSAvIGI7CiAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgIC8vIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOyAvLyBUaGVyZSBpcyBubyBjYXNlIGluIHdoaWNoIHRoaXMgZG9lc24ndCBob2xkCiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgYXNzZXJ0KGMgPj0gYSk7CiAgICByZXR1cm4gYzsKICB9Cn0KCi8qKgogKiBAdGl0bGUgQ3Jvd2RzYWxlCiAqIEBkZXYgQ3Jvd2RzYWxlIGlzIGEgYmFzZSBjb250cmFjdCBmb3IgbWFuYWdpbmcgYSB0b2tlbiBjcm93ZHNhbGUuCiAqIENyb3dkc2FsZXMgaGF2ZSBhIHN0YXJ0IGFuZCBlbmQgdGltZXN0YW1wcywgd2hlcmUgaW52ZXN0b3JzIGNhbiBtYWtlCiAqIHRva2VuIHB1cmNoYXNlcyBhbmQgdGhlIGNyb3dkc2FsZSB3aWxsIGFzc2lnbiB0aGVtIHRva2VucyBiYXNlZAogKiBvbiBhIHRva2VuIHBlciBFVEggcmF0ZS4gRnVuZHMgY29sbGVjdGVkIGFyZSBmb3J3YXJkZWQgdG8gYSB3YWxsZXQKICogYXMgdGhleSBhcnJpdmUuCiAqLwpjb250cmFjdCB0b2tlbiB7IGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgcmVjZWl2ZXIsIHVpbnQgYW1vdW50KXsgIH0gfQpjb250cmFjdCBCZXpvcENyb3dkc2FsZSB7CiAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQyNTY7CgogIC8vIHVpbnQyNTYgZHVyYXRpb25Jbk1pbnV0ZXM7CiAgLy8gYWRkcmVzcyB3aGVyZSBmdW5kcyBhcmUgY29sbGVjdGVkCiAgYWRkcmVzcyBwdWJsaWMgd2FsbGV0OwogIC8vIHRva2VuIGFkZHJlc3MKICBhZGRyZXNzIHB1YmxpYyBhZGRyZXNzT2ZUb2tlblVzZWRBc1Jld2FyZDsKCiAgdWludDI1NiBwdWJsaWMgcHJpY2UgPSAzODQwIDsKCiAgdG9rZW4gdG9rZW5SZXdhcmQ7CgogIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludCkgcHVibGljIGNvbnRyaWJ1dGlvbnM7CiAgCgoKICAvLyBzdGFydCBhbmQgZW5kIHRpbWVzdGFtcHMgd2hlcmUgaW52ZXN0bWVudHMgYXJlIGFsbG93ZWQgKGJvdGggaW5jbHVzaXZlKQogIC8vIHVpbnQyNTYgcHVibGljIHN0YXJ0VGltZTsKICAvLyB1aW50MjU2IHB1YmxpYyBlbmRUaW1lOwogIC8vIGFtb3VudCBvZiByYWlzZWQgbW9uZXkgaW4gd2VpCiAgdWludDI1NiBwdWJsaWMgd2VpUmFpc2VkOwoKICAvKioKICAgKiBldmVudCBmb3IgdG9rZW4gcHVyY2hhc2UgbG9nZ2luZwogICAqIEBwYXJhbSBwdXJjaGFzZXIgd2hvIHBhaWQgZm9yIHRoZSB0b2tlbnMKICAgKiBAcGFyYW0gYmVuZWZpY2lhcnkgd2hvIGdvdCB0aGUgdG9rZW5zCiAgICogQHBhcmFtIHZhbHVlIHdlaXMgcGFpZCBmb3IgcHVyY2hhc2UKICAgKiBAcGFyYW0gYW1vdW50IGFtb3VudCBvZiB0b2tlbnMgcHVyY2hhc2VkCiAgICovCiAgZXZlbnQgVG9rZW5QdXJjaGFzZShhZGRyZXNzIGluZGV4ZWQgcHVyY2hhc2VyLCBhZGRyZXNzIGluZGV4ZWQgYmVuZWZpY2lhcnksIHVpbnQyNTYgdmFsdWUsIHVpbnQyNTYgYW1vdW50KTsKCgogIGZ1bmN0aW9uIEJlem9wQ3Jvd2RzYWxlKCkgewogICAgLy9Zb3Ugd2lsbCBjaGFuZ2UgdGhpcyB0byB5b3VyIHdhbGxldCB3aGVyZSB5b3UgbmVlZCB0aGUgRVRIIAogICAgd2FsbGV0ID0gMHg2MzRmOEM3QzJEREQ4NjcxNjMyNjI0ODUwQzdDOEYzZTIwNjIyRjVGOwogICAgLy8gZHVyYXRpb25Jbk1pbnV0ZXMgPSBfZHVyYXRpb25Jbk1pbnV0ZXM7CiAgICAvL0hlcmUgd2lsbCBjb21lIHRoZSBjaGVja3N1bSBhZGRyZXNzIHdlIGdvdAogICAgYWRkcmVzc09mVG9rZW5Vc2VkQXNSZXdhcmQgPSAweDM4MzlkOGJhMzEyNzUxYWEwMjQ4ZmVkNmE4YmFjYjg0MzA4ZTIwZWQ7CgoKICAgIHRva2VuUmV3YXJkID0gdG9rZW4oYWRkcmVzc09mVG9rZW5Vc2VkQXNSZXdhcmQpOwogIH0KCiAgYm9vbCBwdWJsaWMgc3RhcnRlZCA9IGZhbHNlOwoKICBmdW5jdGlvbiBzdGFydFNhbGUoKXsKICAgIGlmIChtc2cuc2VuZGVyICE9IHdhbGxldCkgdGhyb3c7CiAgICBzdGFydGVkID0gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIHN0b3BTYWxlKCl7CiAgICBpZihtc2cuc2VuZGVyICE9IHdhbGxldCkgdGhyb3c7CiAgICBzdGFydGVkID0gZmFsc2U7CiAgfQoKICBmdW5jdGlvbiBzZXRQcmljZSh1aW50MjU2IF9wcmljZSl7CiAgICBpZihtc2cuc2VuZGVyICE9IHdhbGxldCkgdGhyb3c7CiAgICBwcmljZSA9IF9wcmljZTsKICB9CiAgZnVuY3Rpb24gY2hhbmdlV2FsbGV0KGFkZHJlc3MgX3dhbGxldCl7CiAgICBpZihtc2cuc2VuZGVyICE9IHdhbGxldCkgdGhyb3c7CiAgICB3YWxsZXQgPSBfd2FsbGV0OwogIH0KCiAgZnVuY3Rpb24gY2hhbmdlVG9rZW5SZXdhcmQoYWRkcmVzcyBfdG9rZW4pewogICAgaWYobXNnLnNlbmRlciE9d2FsbGV0KSB0aHJvdzsKICAgIHRva2VuUmV3YXJkID0gdG9rZW4oX3Rva2VuKTsKICB9CgogIC8vIGZhbGxiYWNrIGZ1bmN0aW9uIGNhbiBiZSB1c2VkIHRvIGJ1eSB0b2tlbnMKICBmdW5jdGlvbiAoKSBwYXlhYmxlIHsKICAgIGJ1eVRva2Vucyhtc2cuc2VuZGVyKTsKICB9CgogIC8vIGxvdyBsZXZlbCB0b2tlbiBwdXJjaGFzZSBmdW5jdGlvbgogIGZ1bmN0aW9uIGJ1eVRva2VucyhhZGRyZXNzIGJlbmVmaWNpYXJ5KSBwYXlhYmxlIHsKICAgIHJlcXVpcmUoYmVuZWZpY2lhcnkgIT0gMHgwKTsKICAgIHJlcXVpcmUodmFsaWRQdXJjaGFzZSgpKTsKCiAgICB1aW50MjU2IHdlaUFtb3VudCA9IG1zZy52YWx1ZTsKCiAgICAvLyBjYWxjdWxhdGUgdG9rZW4gYW1vdW50IHRvIGJlIHNlbnQKICAgIHVpbnQyNTYgdG9rZW5zID0gKHdlaUFtb3VudCkgKiBwcmljZTsvL3dlaWFtb3VudCAqIHByaWNlIAogICAgLy8gdWludDI1NiB0b2tlbnMgPSAod2VpQW1vdW50LzEwKiooMTgtZGVjaW1hbHMpKSAqIHByaWNlOy8vd2VpYW1vdW50ICogcHJpY2UgCgogICAgLy8gdXBkYXRlIHN0YXRlCiAgICB3ZWlSYWlzZWQgPSB3ZWlSYWlzZWQuYWRkKHdlaUFtb3VudCk7CgogICAgaWYod2VpQW1vdW50PDEwKioxNyYmY29udHJpYnV0aW9uc1ttc2cuc2VuZGVyXTwxMCoqMTcpIHRocm93OwogICAgCiAgICBpZihjb250cmlidXRpb25zW21zZy5zZW5kZXJdLmFkZCh3ZWlBbW91bnQpPjU1MCoxMCoqMTgpIHRocm93OwogICAgY29udHJpYnV0aW9uc1ttc2cuc2VuZGVyXSA9IGNvbnRyaWJ1dGlvbnNbbXNnLnNlbmRlcl0uYWRkKHdlaUFtb3VudCk7CgogICAgdG9rZW5SZXdhcmQudHJhbnNmZXIoYmVuZWZpY2lhcnksIHRva2Vucyk7CiAgICBUb2tlblB1cmNoYXNlKG1zZy5zZW5kZXIsIGJlbmVmaWNpYXJ5LCB3ZWlBbW91bnQsIHRva2Vucyk7CiAgICBmb3J3YXJkRnVuZHMoKTsKICB9CgogIC8vIHNlbmQgZXRoZXIgdG8gdGhlIGZ1bmQgY29sbGVjdGlvbiB3YWxsZXQKICAvLyBvdmVycmlkZSB0byBjcmVhdGUgY3VzdG9tIGZ1bmQgZm9yd2FyZGluZyBtZWNoYW5pc21zCiAgZnVuY3Rpb24gZm9yd2FyZEZ1bmRzKCkgaW50ZXJuYWwgewogICAgLy8gd2FsbGV0LnRyYW5zZmVyKG1zZy52YWx1ZSk7CiAgICBpZiAoIXdhbGxldC5zZW5kKG1zZy52YWx1ZSkpIHsKICAgICAgdGhyb3c7CiAgICB9CiAgfQoKICAvLyBAcmV0dXJuIHRydWUgaWYgdGhlIHRyYW5zYWN0aW9uIGNhbiBidXkgdG9rZW5zCiAgZnVuY3Rpb24gdmFsaWRQdXJjaGFzZSgpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKGJvb2wpIHsKICAgIGJvb2wgd2l0aGluUGVyaW9kID0gc3RhcnRlZDsKICAgIGJvb2wgbm9uWmVyb1B1cmNoYXNlID0gbXNnLnZhbHVlICE9IDA7CiAgICByZXR1cm4gd2l0aGluUGVyaW9kICYmIG5vblplcm9QdXJjaGFzZTsKICB9CgogIGZ1bmN0aW9uIHdpdGhkcmF3VG9rZW5zKHVpbnQyNTYgX2Ftb3VudCkgewogICAgaWYobXNnLnNlbmRlciE9d2FsbGV0KSB0aHJvdzsKICAgIHRva2VuUmV3YXJkLnRyYW5zZmVyKHdhbGxldCxfYW1vdW50KTsKICB9Cn0='.
	

]
