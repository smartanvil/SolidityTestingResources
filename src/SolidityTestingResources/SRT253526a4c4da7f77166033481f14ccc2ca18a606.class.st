Class {
	#name : #SRT253526a4c4da7f77166033481f14ccc2ca18a606,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT253526a4c4da7f77166033481f14ccc2ca18a606 >> base64 [
	^ ''.
	

]
