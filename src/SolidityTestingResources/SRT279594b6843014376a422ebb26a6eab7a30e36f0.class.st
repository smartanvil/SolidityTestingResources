Class {
	#name : #SRT279594b6843014376a422ebb26a6eab7a30e36f0,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT279594b6843014376a422ebb26a6eab7a30e36f0 >> base64 [
	^ ''.
	

]
