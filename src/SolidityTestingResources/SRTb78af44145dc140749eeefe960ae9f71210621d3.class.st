Class {
	#name : #SRTb78af44145dc140749eeefe960ae9f71210621d3,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTb78af44145dc140749eeefe960ae9f71210621d3 >> base64 [
	^ ''.
	

]
