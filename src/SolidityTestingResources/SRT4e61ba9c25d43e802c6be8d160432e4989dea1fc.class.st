Class {
	#name : #SRT4e61ba9c25d43e802c6be8d160432e4989dea1fc,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT4e61ba9c25d43e802c6be8d160432e4989dea1fc >> base64 [
	^ ''.
	

]
