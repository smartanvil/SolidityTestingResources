Class {
	#name : #SRT75009ba0e084973d9c42fa81862d7076fae4500d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT75009ba0e084973d9c42fa81862d7076fae4500d >> base64 [
	^ 'Ly8gQXV0aG9yIDogc2hpZnQKCnByYWdtYSBzb2xpZGl0eSBeMC40LjE4OwoKLy8tLS0tLS0tLS0gT3BlblplcHBlbGluJ3MgU2FmZSBNYXRoCi8vU291cmNlIDogaHR0cHM6Ly9naXRodWIuY29tL09wZW5aZXBwZWxpbi96ZXBwZWxpbi1zb2xpZGl0eS9ibG9iL21hc3Rlci9jb250cmFjdHMvbWF0aC9TYWZlTWF0aC5zb2wKLyoqCiAqIEB0aXRsZSBTYWZlTWF0aAogKiBAZGV2IE1hdGggb3BlcmF0aW9ucyB3aXRoIHNhZmV0eSBjaGVja3MgdGhhdCB0aHJvdyBvbiBlcnJvcgogKi8KbGlicmFyeSBTYWZlTWF0aCB7CiAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIGlmIChhID09IDApIHsKICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICB1aW50MjU2IGMgPSBhICogYjsKICAgIGFzc2VydChjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgLyBiOwogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBzdWIodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KfQovLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgovLyBFUkMyMCBJbnRlcmZhY2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8yMApjb250cmFjdCBFUkMyMCB7CiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpOwp9CgovKgogIFRoaXMgY29udHJhY3Qgc3RvcmVzIHR3aWNlIGV2ZXJ5IGtleSB2YWx1ZSBpbiBvcmRlciB0byBiZSBhYmxlIHRvIHJlZGlzdHJpYnV0ZSBmdW5kcwogIHdoZW4gdGhlIGJvbnVzIHRva2VucyBhcmUgcmVjZWl2ZWQgKHdoaWNoIGlzIHR5cGljYWxseSBYIG1vbnRocyBhZnRlciB0aGUgaW5pdGlhbCBidXkpLgoqLwoKY29udHJhY3QgTW9vbmdhbmcgewoKICBtb2RpZmllciBvbmx5T3duZXIgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyKTsKICAgIF87CiAgfQoKICBtb2RpZmllciBtaW5BbW91bnRSZWFjaGVkIHsKICAgIC8vSW4gcmVhbGl0eSwgdGhlIGNvcnJlY3QgYW1vdW50IGlzIHRoZSBhbW91bnQgKyAxJQogICAgcmVxdWlyZSh0aGlzLmJhbGFuY2UgPj0gU2FmZU1hdGguZGl2KFNhZmVNYXRoLm11bChtaW5fYW1vdW50LCAxMDApLCA5OSkpOwogICAgXzsKICB9CgogIG1vZGlmaWVyIHVuZGVyTWF4QW1vdW50IHsKICAgIHJlcXVpcmUobWF4X2Ftb3VudCA9PSAwIHx8IHRoaXMuYmFsYW5jZSA8PSBtYXhfYW1vdW50KTsKICAgIF87CiAgfQoKICAvL0NvbnN0YW50cyBvZiB0aGUgY29udHJhY3QKICB1aW50MjU2IGNvbnN0YW50IEZFRSA9IDEwMDsgICAgLy8xJSBmZWUKICAvL1NhZmVNYXRoLmRpdigyMCwgMykgPSA2CiAgdWludDI1NiBjb25zdGFudCBGRUVfREVWID0gNjsgLy8xNSUgb24gdGhlIDElIGZlZQogIGFkZHJlc3MgcHVibGljIG93bmVyOwogIGFkZHJlc3MgY29uc3RhbnQgcHVibGljIGRldmVsb3BlciA9IDB4RUUwNkJkRGFmRkE1NmEzMDM3MThERTUzQTViYzM0N0VmYkU0QzY4ZjsKICB1aW50MjU2IHB1YmxpYyBpbmRpdmlkdWFsX2NhcDsKCiAgLy9WYXJpYWJsZXMgc3ViamVjdCB0byBjaGFuZ2VzCiAgdWludDI1NiBwdWJsaWMgbWF4X2Ftb3VudDsgIC8vMCBtZWFucyB0aGVyZSBpcyBubyBsaW1pdAogIHVpbnQyNTYgcHVibGljIG1pbl9hbW91bnQ7CgogIC8vU3RvcmUgdGhlIGFtb3VudCBvZiBFVEggZGVwb3NpdGVkIGJ5IGVhY2ggYWNjb3VudC4KICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBiYWxhbmNlczsKICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBiYWxhbmNlc19ib251czsKICAvLyBUcmFjayB3aGV0aGVyIHRoZSBjb250cmFjdCBoYXMgYm91Z2h0IHRoZSB0b2tlbnMgeWV0LgogIGJvb2wgcHVibGljIGJvdWdodF90b2tlbnM7CiAgLy8gUmVjb3JkIEVUSCB2YWx1ZSBvZiB0b2tlbnMgY3VycmVudGx5IGhlbGQgYnkgY29udHJhY3QuCiAgdWludDI1NiBwdWJsaWMgY29udHJhY3RfZXRoX3ZhbHVlOwogIHVpbnQyNTYgcHVibGljIGNvbnRyYWN0X2V0aF92YWx1ZV9ib251czsKICAvL1NldCBieSB0aGUgb3duZXIgaW4gb3JkZXIgdG8gYWxsb3cgdGhlIHdpdGhkcmF3YWwgb2YgYm9udXMgdG9rZW5zLgogIGJvb2wgcHVibGljIGJvbnVzX3JlY2VpdmVkOwogIC8vVGhlIGFkZHJlc3Mgb2YgdGhlIGNvbnRhY3QuCiAgYWRkcmVzcyBwdWJsaWMgc2FsZTsKICAvL1Rva2VuIGFkZHJlc3MKICBFUkMyMCBwdWJsaWMgdG9rZW47CiAgLy9SZWNvcmRzIHRoZSBmZWVzIHRoYXQgaGF2ZSB0byBiZSBzZW50CiAgdWludDI1NiBmZWVzOwogIC8vU2V0IGJ5IHRoZSBvd25lci4gQWxsb3dzIHBlb3BsZSB0byByZWZ1bmQgdG90YWxseSBvciBwYXJ0aWFsbHkuCiAgYm9vbCBwdWJsaWMgYWxsb3dfcmVmdW5kczsKICAvL1RoZSByZWR1Y3Rpb24gb2YgdGhlIGFsbG9jYXRpb24gaW4gJSB8IGV4YW1wbGUgOiA0MCAtPiA0MCUgcmVkdWN0aW9uCiAgdWludDI1NiBwdWJsaWMgcGVyY2VudF9yZWR1Y3Rpb247CgogIC8vSW50ZXJuYWwgZnVuY3Rpb25zCiAgZnVuY3Rpb24gTW9vbmdhbmcodWludDI1NiBtYXgsIHVpbnQyNTYgbWluLCB1aW50MjU2IGNhcCkgewogICAgLyoKICAgIENvbnN0cnVjdG9yCiAgICAqLwogICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgbWF4X2Ftb3VudCA9IFNhZmVNYXRoLmRpdihTYWZlTWF0aC5tdWwobWF4LCAxMDApLCA5OSk7CiAgICBtaW5fYW1vdW50ID0gbWluOwogICAgaW5kaXZpZHVhbF9jYXAgPSBjYXA7CiAgfQoKICAvL0Z1bmN0aW9ucyBmb3IgdGhlIG93bmVyCgogIC8vIEJ1eSB0aGUgdG9rZW5zLiBTZW5kcyBFVEggdG8gdGhlIHByZXNhbGUgd2FsbGV0IGFuZCByZWNvcmRzIHRoZSBFVEggYW1vdW50IGhlbGQgaW4gdGhlIGNvbnRyYWN0LgogIGZ1bmN0aW9uIGJ1eV90aGVfdG9rZW5zKCkgb25seU93bmVyIG1pbkFtb3VudFJlYWNoZWQgdW5kZXJNYXhBbW91bnQgewogICAgLy9Bdm9pZHMgYnVybmluZyB0aGUgZnVuZHMKICAgIHJlcXVpcmUoIWJvdWdodF90b2tlbnMgJiYgc2FsZSAhPSAweDApOwogICAgLy9SZWNvcmQgdGhhdCB0aGUgY29udHJhY3QgaGFzIGJvdWdodCB0aGUgdG9rZW5zLgogICAgYm91Z2h0X3Rva2VucyA9IHRydWU7CiAgICAvL1NlbmRzIHRoZSBmZWUgYmVmb3JlIHNvIHRoZSBjb250cmFjdF9ldGhfdmFsdWUgY29udGFpbnMgdGhlIGNvcnJlY3QgYmFsYW5jZQogICAgdWludDI1NiBkZXZfZmVlID0gU2FmZU1hdGguZGl2KGZlZXMsIEZFRV9ERVYpOwogICAgb3duZXIudHJhbnNmZXIoU2FmZU1hdGguc3ViKGZlZXMsIGRldl9mZWUpKTsKICAgIGRldmVsb3Blci50cmFuc2ZlcihkZXZfZmVlKTsKICAgIC8vUmVjb3JkIHRoZSBhbW91bnQgb2YgRVRIIHNlbnQgYXMgdGhlIGNvbnRyYWN0J3MgY3VycmVudCB2YWx1ZS4KICAgIGNvbnRyYWN0X2V0aF92YWx1ZSA9IHRoaXMuYmFsYW5jZTsKICAgIGNvbnRyYWN0X2V0aF92YWx1ZV9ib251cyA9IHRoaXMuYmFsYW5jZTsKICAgIC8vIFRyYW5zZmVyIGFsbCB0aGUgZnVuZHMgdG8gdGhlIGNyb3dkc2FsZSBhZGRyZXNzLgogICAgc2FsZS50cmFuc2Zlcihjb250cmFjdF9ldGhfdmFsdWUpOwogIH0KCiAgZnVuY3Rpb24gZm9yY2VfcmVmdW5kKGFkZHJlc3MgX3RvX3JlZnVuZCkgb25seU93bmVyIHsKICAgIHJlcXVpcmUoIWJvdWdodF90b2tlbnMpOwogICAgdWludDI1NiBldGhfdG9fd2l0aGRyYXcgPSBTYWZlTWF0aC5kaXYoU2FmZU1hdGgubXVsKGJhbGFuY2VzW190b19yZWZ1bmRdLCAxMDApLCA5OSk7CiAgICBiYWxhbmNlc1tfdG9fcmVmdW5kXSA9IDA7CiAgICBiYWxhbmNlc19ib251c1tfdG9fcmVmdW5kXSA9IDA7CiAgICBmZWVzID0gU2FmZU1hdGguc3ViKGZlZXMsIFNhZmVNYXRoLmRpdihldGhfdG9fd2l0aGRyYXcsIEZFRSkpOwogICAgX3RvX3JlZnVuZC50cmFuc2ZlcihldGhfdG9fd2l0aGRyYXcpOwogIH0KCiAgZnVuY3Rpb24gZm9yY2VfcGFydGlhbF9yZWZ1bmQoYWRkcmVzcyBfdG9fcmVmdW5kKSBvbmx5T3duZXIgewogICAgcmVxdWlyZShhbGxvd19yZWZ1bmRzICYmIHBlcmNlbnRfcmVkdWN0aW9uID4gMCk7CiAgICAvL0Ftb3VudCB0byByZWZ1bmQgaXMgdGhlIGFtb3VudCBtaW51cyB0aGUgWCUgb2YgdGhlIHJlZHVjdGlvbgogICAgLy9hbW91bnRfdG9fcmVmdW5kID0gYmFsYW5jZSpYCiAgICB1aW50MjU2IGJhc2ljX2Ftb3VudCA9IFNhZmVNYXRoLmRpdihTYWZlTWF0aC5tdWwoYmFsYW5jZXNbX3RvX3JlZnVuZF0sIHBlcmNlbnRfcmVkdWN0aW9uKSwgMTAwKTsKICAgIHVpbnQyNTYgZXRoX3RvX3dpdGhkcmF3ID0gYmFzaWNfYW1vdW50OwogICAgaWYgKCFib3VnaHRfdG9rZW5zKSB7CiAgICAgIC8vV2UgaGF2ZSB0byB0YWtlIGluIGFjY291bnQgdGhlIHBhcnRpYWwgcmVmdW5kIG9mIHRoZSBmZWUgdG9vIGlmIHRoZSB0b2tlbnMgd2VyZW4ndCBib3VnaHQgeWV0CiAgICAgIGV0aF90b193aXRoZHJhdyA9IFNhZmVNYXRoLmRpdihTYWZlTWF0aC5tdWwoYmFzaWNfYW1vdW50LCAxMDApLCA5OSk7CiAgICAgIGZlZXMgPSBTYWZlTWF0aC5zdWIoZmVlcywgU2FmZU1hdGguZGl2KGV0aF90b193aXRoZHJhdywgRkVFKSk7CiAgICB9CiAgICBiYWxhbmNlc1tfdG9fcmVmdW5kXSA9IFNhZmVNYXRoLnN1YihiYWxhbmNlc1tfdG9fcmVmdW5kXSwgZXRoX3RvX3dpdGhkcmF3KTsKICAgIGJhbGFuY2VzX2JvbnVzW190b19yZWZ1bmRdID0gYmFsYW5jZXNbX3RvX3JlZnVuZF07CiAgICBfdG9fcmVmdW5kLnRyYW5zZmVyKGV0aF90b193aXRoZHJhdyk7CiAgfQoKICBmdW5jdGlvbiBzZXRfc2FsZV9hZGRyZXNzKGFkZHJlc3MgX3NhbGUpIG9ubHlPd25lciB7CiAgICAvL0F2b2lkIG1pc3Rha2Ugb2YgcHV0dGluZyAweDAgYW5kIGNhbid0IGNoYW5nZSB0d2ljZSB0aGUgc2FsZSBhZGRyZXNzCiAgICByZXF1aXJlKF9zYWxlICE9IDB4MCk7CiAgICBzYWxlID0gX3NhbGU7CiAgfQoKICBmdW5jdGlvbiBzZXRfdG9rZW5fYWRkcmVzcyhhZGRyZXNzIF90b2tlbikgb25seU93bmVyIHsKICAgIHJlcXVpcmUoX3Rva2VuICE9IDB4MCk7CiAgICB0b2tlbiA9IEVSQzIwKF90b2tlbik7CiAgfQoKICBmdW5jdGlvbiBzZXRfYm9udXNfcmVjZWl2ZWQoYm9vbCBfYm9vbGVhbikgb25seU93bmVyIHsKICAgIGJvbnVzX3JlY2VpdmVkID0gX2Jvb2xlYW47CiAgfQoKICBmdW5jdGlvbiBzZXRfYWxsb3dfcmVmdW5kcyhib29sIF9ib29sZWFuKSBvbmx5T3duZXIgewogICAgLyoKICAgIEluIGNhc2UsIGZvciBzb21lIHJlYXNvbnMsIHRoZSBwcm9qZWN0IHJlZnVuZHMgdGhlIG1vbmV5CiAgICAqLwogICAgYWxsb3dfcmVmdW5kcyA9IF9ib29sZWFuOwogIH0KCiAgZnVuY3Rpb24gc2V0X3BlcmNlbnRfcmVkdWN0aW9uKHVpbnQyNTYgX3JlZHVjdGlvbikgb25seU93bmVyIHsKICAgIHJlcXVpcmUoX3JlZHVjdGlvbiA8PSAxMDApOwogICAgcGVyY2VudF9yZWR1Y3Rpb24gPSBfcmVkdWN0aW9uOwogIH0KCiAgZnVuY3Rpb24gY2hhbmdlX2luZGl2aWR1YWxfY2FwKHVpbnQyNTYgX2NhcCkgb25seU93bmVyIHsKICAgIGluZGl2aWR1YWxfY2FwID0gX2NhcDsKICB9CgogIGZ1bmN0aW9uIGNoYW5nZV9vd25lcihhZGRyZXNzIG5ld19vd25lcikgb25seU93bmVyIHsKICAgIHJlcXVpcmUobmV3X293bmVyICE9IDB4MCk7CiAgICBvd25lciA9IG5ld19vd25lcjsKICB9CgogIGZ1bmN0aW9uIGNoYW5nZV9tYXhfYW1vdW50KHVpbnQyNTYgX2Ftb3VudCkgb25seU93bmVyIHsKICAgICAgLy9BVFRFTlRJT04hIFRoZSBuZXcgYW1vdW50IHNob3VsZCBiZSBpbiB3ZWkKICAgICAgLy9Vc2UgaHR0cHM6Ly9ldGhlcmNvbnZlcnRlci5vbmxpbmUvCiAgICAgIG1heF9hbW91bnQgPSBTYWZlTWF0aC5kaXYoU2FmZU1hdGgubXVsKF9hbW91bnQsIDEwMCksIDk5KTsKICB9CgogIGZ1bmN0aW9uIGNoYW5nZV9taW5fYW1vdW50KHVpbnQyNTYgX2Ftb3VudCkgb25seU93bmVyIHsKICAgICAgLy9BVFRFTlRJT04hIFRoZSBuZXcgYW1vdW50IHNob3VsZCBiZSBpbiB3ZWkKICAgICAgLy9Vc2UgaHR0cHM6Ly9ldGhlcmNvbnZlcnRlci5vbmxpbmUvCiAgICAgIG1pbl9hbW91bnQgPSBfYW1vdW50OwogIH0KCiAgLy9QdWJsaWMgZnVuY3Rpb25zCgogIC8vIEFsbG93cyBhbnkgdXNlciB0byB3aXRoZHJhdyBoaXMgdG9rZW5zLgogIGZ1bmN0aW9uIHdpdGhkcmF3KCkgewogICAgLy8gRGlzYWxsb3cgd2l0aGRyYXcgaWYgdG9rZW5zIGhhdmVuJ3QgYmVlbiBib3VnaHQgeWV0LgogICAgcmVxdWlyZShib3VnaHRfdG9rZW5zKTsKICAgIHVpbnQyNTYgY29udHJhY3RfdG9rZW5fYmFsYW5jZSA9IHRva2VuLmJhbGFuY2VPZihhZGRyZXNzKHRoaXMpKTsKICAgIC8vIERpc2FsbG93IHRva2VuIHdpdGhkcmF3YWxzIGlmIHRoZXJlIGFyZSBubyB0b2tlbnMgdG8gd2l0aGRyYXcuCiAgICByZXF1aXJlKGNvbnRyYWN0X3Rva2VuX2JhbGFuY2UgIT0gMCk7CiAgICB1aW50MjU2IHRva2Vuc190b193aXRoZHJhdyA9IFNhZmVNYXRoLmRpdihTYWZlTWF0aC5tdWwoYmFsYW5jZXNbbXNnLnNlbmRlcl0sIGNvbnRyYWN0X3Rva2VuX2JhbGFuY2UpLCBjb250cmFjdF9ldGhfdmFsdWUpOwogICAgLy8gVXBkYXRlIHRoZSB2YWx1ZSBvZiB0b2tlbnMgY3VycmVudGx5IGhlbGQgYnkgdGhlIGNvbnRyYWN0LgogICAgY29udHJhY3RfZXRoX3ZhbHVlID0gU2FmZU1hdGguc3ViKGNvbnRyYWN0X2V0aF92YWx1ZSwgYmFsYW5jZXNbbXNnLnNlbmRlcl0pOwogICAgLy8gVXBkYXRlIHRoZSB1c2VyJ3MgYmFsYW5jZSBwcmlvciB0byBzZW5kaW5nIHRvIHByZXZlbnQgcmVjdXJzaXZlIGNhbGwuCiAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IDA7CiAgICAvLyBTZW5kIHRoZSBmdW5kcy4gIFRocm93cyBvbiBmYWlsdXJlIHRvIHByZXZlbnQgbG9zcyBvZiBmdW5kcy4KICAgIHJlcXVpcmUodG9rZW4udHJhbnNmZXIobXNnLnNlbmRlciwgdG9rZW5zX3RvX3dpdGhkcmF3KSk7CiAgfQoKICBmdW5jdGlvbiB3aXRoZHJhd19ib251cygpIHsKICAvKgogICAgU3BlY2lhbCBmdW5jdGlvbiB0byB3aXRoZHJhdyB0aGUgYm9udXMgdG9rZW5zIGFmdGVyIHRoZSA2IG1vbnRocyBsb2NrdXAuCiAgICBib251c19yZWNlaXZlZCBoYXMgdG8gYmUgc2V0IHRvIHRydWUuCiAgKi8KICAgIHJlcXVpcmUoYm91Z2h0X3Rva2VucyAmJiBib251c19yZWNlaXZlZCk7CiAgICB1aW50MjU2IGNvbnRyYWN0X3Rva2VuX2JhbGFuY2UgPSB0b2tlbi5iYWxhbmNlT2YoYWRkcmVzcyh0aGlzKSk7CiAgICByZXF1aXJlKGNvbnRyYWN0X3Rva2VuX2JhbGFuY2UgIT0gMCk7CiAgICB1aW50MjU2IHRva2Vuc190b193aXRoZHJhdyA9IFNhZmVNYXRoLmRpdihTYWZlTWF0aC5tdWwoYmFsYW5jZXNfYm9udXNbbXNnLnNlbmRlcl0sIGNvbnRyYWN0X3Rva2VuX2JhbGFuY2UpLCBjb250cmFjdF9ldGhfdmFsdWVfYm9udXMpOwogICAgY29udHJhY3RfZXRoX3ZhbHVlX2JvbnVzID0gU2FmZU1hdGguc3ViKGNvbnRyYWN0X2V0aF92YWx1ZV9ib251cywgYmFsYW5jZXNfYm9udXNbbXNnLnNlbmRlcl0pOwogICAgYmFsYW5jZXNfYm9udXNbbXNnLnNlbmRlcl0gPSAwOwogICAgcmVxdWlyZSh0b2tlbi50cmFuc2Zlcihtc2cuc2VuZGVyLCB0b2tlbnNfdG9fd2l0aGRyYXcpKTsKICB9CgogIC8vIEFsbG93cyBhbnkgdXNlciB0byBnZXQgaGlzIGV0aCByZWZ1bmRlZCBiZWZvcmUgdGhlIHB1cmNoYXNlIGlzIG1hZGUuCiAgZnVuY3Rpb24gcmVmdW5kKCkgewogICAgcmVxdWlyZSghYm91Z2h0X3Rva2VucyAmJiBhbGxvd19yZWZ1bmRzICYmIHBlcmNlbnRfcmVkdWN0aW9uID09IDApOwogICAgLy9iYWxhbmNlIG9mIGNvbnRyaWJ1dG9yID0gY29udHJpYnV0aW9uICogMC45OQogICAgLy9zbyBjb250cmlidXRpb24gPSBiYWxhbmNlLzAuOTkKICAgIHVpbnQyNTYgZXRoX3RvX3dpdGhkcmF3ID0gU2FmZU1hdGguZGl2KFNhZmVNYXRoLm11bChiYWxhbmNlc1ttc2cuc2VuZGVyXSwgMTAwKSwgOTkpOwogICAgLy8gVXBkYXRlIHRoZSB1c2VyJ3MgYmFsYW5jZSBwcmlvciB0byBzZW5kaW5nIEVUSCB0byBwcmV2ZW50IHJlY3Vyc2l2ZSBjYWxsLgogICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSAwOwogICAgLy9VcGRhdGVzIHRoZSBiYWxhbmNlc19ib251cyB0b28KICAgIGJhbGFuY2VzX2JvbnVzW21zZy5zZW5kZXJdID0gMDsKICAgIC8vVXBkYXRlcyB0aGUgZmVlcyB2YXJpYWJsZSBieSBzdWJzdHJhY3RpbmcgdGhlIHJlZnVuZGVkIGZlZQogICAgZmVlcyA9IFNhZmVNYXRoLnN1YihmZWVzLCBTYWZlTWF0aC5kaXYoZXRoX3RvX3dpdGhkcmF3LCBGRUUpKTsKICAgIC8vIFJldHVybiB0aGUgdXNlcidzIGZ1bmRzLiAgVGhyb3dzIG9uIGZhaWx1cmUgdG8gcHJldmVudCBsb3NzIG9mIGZ1bmRzLgogICAgbXNnLnNlbmRlci50cmFuc2ZlcihldGhfdG9fd2l0aGRyYXcpOwogIH0KCiAgLy9BbGxvd3MgYW55IHVzZXIgdG8gZ2V0IGEgcGFydCBvZiBoaXMgRVRIIHJlZnVuZGVkLCBpbiBwcm9wb3J0aW9uCiAgLy90byB0aGUgJSByZWR1Y2VkIG9mIHRoZSBhbGxvY2F0aW9uCiAgZnVuY3Rpb24gcGFydGlhbF9yZWZ1bmQoKSB7CiAgICByZXF1aXJlKGFsbG93X3JlZnVuZHMgJiYgcGVyY2VudF9yZWR1Y3Rpb24gPiAwKTsKICAgIC8vQW1vdW50IHRvIHJlZnVuZCBpcyB0aGUgYW1vdW50IG1pbnVzIHRoZSBYJSBvZiB0aGUgcmVkdWN0aW9uCiAgICAvL2Ftb3VudF90b19yZWZ1bmQgPSBiYWxhbmNlKlgKICAgIHVpbnQyNTYgYmFzaWNfYW1vdW50ID0gU2FmZU1hdGguZGl2KFNhZmVNYXRoLm11bChiYWxhbmNlc1ttc2cuc2VuZGVyXSwgcGVyY2VudF9yZWR1Y3Rpb24pLCAxMDApOwogICAgdWludDI1NiBldGhfdG9fd2l0aGRyYXcgPSBiYXNpY19hbW91bnQ7CiAgICBpZiAoIWJvdWdodF90b2tlbnMpIHsKICAgICAgLy9XZSBoYXZlIHRvIHRha2UgaW4gYWNjb3VudCB0aGUgcGFydGlhbCByZWZ1bmQgb2YgdGhlIGZlZSB0b28gaWYgdGhlIHRva2VucyB3ZXJlbid0IGJvdWdodCB5ZXQKICAgICAgZXRoX3RvX3dpdGhkcmF3ID0gU2FmZU1hdGguZGl2KFNhZmVNYXRoLm11bChiYXNpY19hbW91bnQsIDEwMCksIDk5KTsKICAgICAgZmVlcyA9IFNhZmVNYXRoLnN1YihmZWVzLCBTYWZlTWF0aC5kaXYoZXRoX3RvX3dpdGhkcmF3LCBGRUUpKTsKICAgIH0KICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gU2FmZU1hdGguc3ViKGJhbGFuY2VzW21zZy5zZW5kZXJdLCBldGhfdG9fd2l0aGRyYXcpOwogICAgYmFsYW5jZXNfYm9udXNbbXNnLnNlbmRlcl0gPSBiYWxhbmNlc1ttc2cuc2VuZGVyXTsKICAgIG1zZy5zZW5kZXIudHJhbnNmZXIoZXRoX3RvX3dpdGhkcmF3KTsKICB9CgogIC8vIERlZmF1bHQgZnVuY3Rpb24uICBDYWxsZWQgd2hlbiBhIHVzZXIgc2VuZHMgRVRIIHRvIHRoZSBjb250cmFjdC4KICBmdW5jdGlvbiAoKSBwYXlhYmxlIHVuZGVyTWF4QW1vdW50IHsKICAgIHJlcXVpcmUoIWJvdWdodF90b2tlbnMpOwogICAgLy8xJSBmZWUgaXMgdGFrZW4gb24gdGhlIEVUSAogICAgdWludDI1NiBmZWUgPSBTYWZlTWF0aC5kaXYobXNnLnZhbHVlLCBGRUUpOwogICAgZmVlcyA9IFNhZmVNYXRoLmFkZChmZWVzLCBmZWUpOwogICAgLy9VcGRhdGVzIGJvdGggb2YgdGhlIGJhbGFuY2VzCiAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IFNhZmVNYXRoLmFkZChiYWxhbmNlc1ttc2cuc2VuZGVyXSwgU2FmZU1hdGguc3ViKG1zZy52YWx1ZSwgZmVlKSk7CiAgICAvL0NoZWNrcyBpZiB0aGUgaW5kaXZpZHVhbCBjYXAgaXMgcmVzcGVjdGVkCiAgICAvL0lmIGl0J3Mgbm90LCBjaGFuZ2VzIGFyZSByZXZlcnRlZAogICAgcmVxdWlyZShpbmRpdmlkdWFsX2NhcCA9PSAwIHx8IGJhbGFuY2VzW21zZy5zZW5kZXJdIDw9IGluZGl2aWR1YWxfY2FwKTsKICAgIGJhbGFuY2VzX2JvbnVzW21zZy5zZW5kZXJdID0gYmFsYW5jZXNbbXNnLnNlbmRlcl07CiAgfQp9'.
	

]
