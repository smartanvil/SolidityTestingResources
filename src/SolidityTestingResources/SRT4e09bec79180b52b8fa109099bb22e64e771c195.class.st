Class {
	#name : #SRT4e09bec79180b52b8fa109099bb22e64e771c195,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT4e09bec79180b52b8fa109099bb22e64e771c195 >> base64 [
	^ ''.
	

]
