Class {
	#name : #SRTdf3e88b6a29eea886a822cecf25802a388070eed,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTdf3e88b6a29eea886a822cecf25802a388070eed >> base64 [
	^ ''.
	

]
