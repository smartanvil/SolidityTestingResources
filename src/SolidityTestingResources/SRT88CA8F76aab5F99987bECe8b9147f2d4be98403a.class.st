Class {
	#name : #SRT88CA8F76aab5F99987bECe8b9147f2d4be98403a,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT88CA8F76aab5F99987bECe8b9147f2d4be98403a >> base64 [
	^ ''.
	

]
