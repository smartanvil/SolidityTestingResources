Class {
	#name : #SRT7844383d56cbdb02617cc70e26dd9dc72a37291e,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT7844383d56cbdb02617cc70e26dd9dc72a37291e >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7Cgpjb250cmFjdCBTYWZlTWF0aCB7CgogICAgZnVuY3Rpb24gc2FmZUFkZCh1aW50MjU2IHgsIHVpbnQyNTYgeSkgaW50ZXJuYWwgcHVyZSByZXR1cm5zICggdWludDI1NikgewogICAgICAgIHVpbnQyNTYgeiA9IHggKyB5OwogICAgICAgIGFzc2VydCgoeiA+PSB4KSAmJiAoeiA+PSB5KSk7CiAgICAgICAgcmV0dXJuIHo7CiAgICB9CgogICAgZnVuY3Rpb24gc2FmZVN1Yih1aW50MjU2IHgsIHVpbnQyNTYgeSkgaW50ZXJuYWwgcHVyZSByZXR1cm5zICggdWludDI1NikgewogICAgICAgIGFzc2VydCh4ID49IHkpOwogICAgICAgIHVpbnQyNTYgeiA9IHggLSB5OwogICAgICAgIHJldHVybiB6OwogICAgfQoKICAgIGZ1bmN0aW9uIHNhZmVNdWx0KHVpbnQyNTYgeCwgdWludDI1NiB5KSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKCB1aW50MjU2KSB7CiAgICAgICAgdWludDI1NiB6ID0geCAqIHk7CiAgICAgICAgYXNzZXJ0KCh4ID09IDApfHwoei94ID09IHkpKTsKICAgICAgICByZXR1cm4gejsKICAgIH0KCn0KCmNvbnRyYWN0IEVSQzIwIHsKICAgIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgY29uc3RhbnQgcHVibGljIHJldHVybnMgKCB1aW50IHN1cHBseSk7CgogICAgZnVuY3Rpb24gYmFsYW5jZU9mKCBhZGRyZXNzIHdobyApIGNvbnN0YW50IHB1YmxpYyByZXR1cm5zICggdWludCB2YWx1ZSk7CiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoIGFkZHJlc3Mgb3duZXIsIGFkZHJlc3Mgc3BlbmRlciApIGNvbnN0YW50IHB1YmxpYyByZXR1cm5zICh1aW50IF9hbGxvd2FuY2UpOwogICAgZnVuY3Rpb24gdHJhbnNmZXIoIGFkZHJlc3MgdG8sIHVpbnQgdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIG9rKTsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbSggYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvLCB1aW50IHZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBvayk7CiAgICBmdW5jdGlvbiBhcHByb3ZlKCBhZGRyZXNzIHNwZW5kZXIsIHVpbnQgdmFsdWUgKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBvayk7CgogICAgZXZlbnQgVHJhbnNmZXIoIGFkZHJlc3MgaW5kZXhlZCBmcm9tLCBhZGRyZXNzIGluZGV4ZWQgdG8sIHVpbnQgdmFsdWUpOwogICAgZXZlbnQgQXBwcm92YWwoIGFkZHJlc3MgaW5kZXhlZCBvd25lciwgYWRkcmVzcyBpbmRleGVkIHNwZW5kZXIsIHVpbnQgdmFsdWUpOwp9CgovL2ltcGxlbWVudCAKY29udHJhY3QgU3RhbmRhcmRUb2tlbiBpcyBTYWZlTWF0aCxFUkMyMCB7CiAgICB1aW50MjU2ICAgICBfdG90YWxTdXBwbHk7CiAgICAKICAgIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgY29uc3RhbnQgcHVibGljIHJldHVybnMgKCB1aW50MjU2KSB7CiAgICAgICAgcmV0dXJuIF90b3RhbFN1cHBseTsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIGRzdCwgdWludCB3YWQpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICAgICAgYXNzZXJ0KGJhbGFuY2VzW21zZy5zZW5kZXJdID49IHdhZCk7CiAgICAgICAgCiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBzYWZlU3ViKGJhbGFuY2VzW21zZy5zZW5kZXJdLCB3YWQpOwogICAgICAgIGJhbGFuY2VzW2RzdF0gPSBzYWZlQWRkKGJhbGFuY2VzW2RzdF0sIHdhZCk7CiAgICAgICAgCiAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgZHN0LCB3YWQpOwogICAgICAgIAogICAgICAgIHJldHVybiB0cnVlOwogICAgfQogICAgCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBzcmMsIGFkZHJlc3MgZHN0LCB1aW50IHdhZCkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgICAgICBhc3NlcnQod2FkID4gMCApOwogICAgICAgIGFzc2VydChiYWxhbmNlc1tzcmNdID49IHdhZCk7CiAgICAgICAgCiAgICAgICAgYmFsYW5jZXNbc3JjXSA9IHNhZmVTdWIoYmFsYW5jZXNbc3JjXSwgd2FkKTsKICAgICAgICBiYWxhbmNlc1tkc3RdID0gc2FmZUFkZChiYWxhbmNlc1tkc3RdLCB3YWQpOwogICAgICAgIAogICAgICAgIFRyYW5zZmVyKHNyYywgZHN0LCB3YWQpOwogICAgICAgIAogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcHVibGljIHJldHVybnMgKCB1aW50MjU2IGJhbGFuY2UpIHsKICAgICAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsKICAgIH0KCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoIGJvb2wgc3VjY2VzcykgewogICAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcHVibGljIHJldHVybnMgKCB1aW50MjU2IHJlbWFpbmluZykgewogICAgICAgIHJldHVybiBhbGxvd2VkW19vd25lcl1bX3NwZW5kZXJdOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBmcmVlemVPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcHVibGljIHJldHVybnMgKCB1aW50MjU2IGJhbGFuY2UpIHsKICAgICAgICByZXR1cm4gZnJlZXplc1tfb3duZXJdOwogICAgfQogICAgCgogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgZnJlZXplczsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsKfQoKY29udHJhY3QgRFNBdXRoIHsKICAgIGFkZHJlc3MgcHVibGljIGF1dGhvcml0eTsKICAgIGFkZHJlc3MgcHVibGljIG93bmVyOwoKICAgIGZ1bmN0aW9uIERTQXV0aCgpIHB1YmxpYyB7CiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgICAgIGF1dGhvcml0eSA9IG1zZy5zZW5kZXI7CiAgICB9CgogICAgZnVuY3Rpb24gc2V0T3duZXIoYWRkcmVzcyBvd25lcl8pIE93bmVyIHB1YmxpYwogICAgewogICAgICAgIG93bmVyID0gb3duZXJfOwogICAgfQoKICAgIG1vZGlmaWVyIEF1dGggewogICAgICAgIGFzc2VydChpc0F1dGhvcml6ZWQobXNnLnNlbmRlcikpOwogICAgICAgIF87CiAgICB9CiAgICAKICAgIG1vZGlmaWVyIE93bmVyIHsKICAgICAgICBhc3NlcnQobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICAgICAgXzsKICAgIH0KCiAgICBmdW5jdGlvbiBpc0F1dGhvcml6ZWQoYWRkcmVzcyBzcmMpIGludGVybmFsIHZpZXcgcmV0dXJucyAoIGJvb2wpIHsKICAgICAgICBpZiAoc3JjID09IGFkZHJlc3ModGhpcykpIHsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfSBlbHNlIGlmIChzcmMgPT0gYXV0aG9yaXR5KSB7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0KICAgICAgICBlbHNlIGlmIChzcmMgPT0gb3duZXIpIHsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfQogICAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KCn0KCmNvbnRyYWN0IERSQ1Rva2VuIGlzIFN0YW5kYXJkVG9rZW4sRFNBdXRoIHsKCiAgICBzdHJpbmcgcHVibGljIG5hbWUgPSAiRGlnaXQgUmVkV2luZSBDb2luIjsKICAgIHVpbnQ4IHB1YmxpYyBkZWNpbWFscyA9IDE4OwogICAgc3RyaW5nIHB1YmxpYyBzeW1ib2wgPSAiRFJDIjsKICAgIAogICAgLyogVGhpcyBub3RpZmllcyBjbGllbnRzIGFib3V0IHRoZSBhbW91bnQgZnJvemVuICovCiAgICBldmVudCBGcmVlemUoYWRkcmVzcyBpbmRleGVkIGZyb20sIHVpbnQyNTYgdmFsdWUpOwogICAgCiAgICAvKiBUaGlzIG5vdGlmaWVzIGNsaWVudHMgYWJvdXQgdGhlIGFtb3VudCB1bmZyb3plbiAqLwogICAgZXZlbnQgVW5mcmVlemUoYWRkcmVzcyBpbmRleGVkIGZyb20sIHVpbnQyNTYgdmFsdWUpOwogICAgCiAgICAvKiBUaGlzIG5vdGlmaWVzIGNsaWVudHMgYWJvdXQgdGhlIGFtb3VudCBidXJudCAqLwogICAgZXZlbnQgQnVybihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgdWludDI1NiB2YWx1ZSk7CgogICAgZnVuY3Rpb24gRFJDVG9rZW4oKSBwdWJsaWMgewogICAgICAgIAogICAgfQoKICAgIGZ1bmN0aW9uIG1pbnQodWludDI1NiB3YWQpIE93bmVyIHB1YmxpYyB7CiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBzYWZlQWRkKGJhbGFuY2VzW21zZy5zZW5kZXJdLCB3YWQpOwogICAgICAgIF90b3RhbFN1cHBseSA9IHNhZmVBZGQoX3RvdGFsU3VwcGx5LCB3YWQpOwogICAgfQoKICAgIGZ1bmN0aW9uIGJ1cm4odWludDI1NiB3YWQpIE93bmVyIHB1YmxpYyB7CiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBzYWZlU3ViKGJhbGFuY2VzW21zZy5zZW5kZXJdLCB3YWQpOwogICAgICAgIF90b3RhbFN1cHBseSA9IHNhZmVTdWIoX3RvdGFsU3VwcGx5LCB3YWQpOwogICAgICAgIEJ1cm4obXNnLnNlbmRlciwgd2FkKTsKICAgIH0KCiAgICBmdW5jdGlvbiBwdXNoKGFkZHJlc3MgZHN0LCB1aW50MjU2IHdhZCkgcHVibGljIHJldHVybnMgKCBib29sKSB7CiAgICAgICAgcmV0dXJuIHRyYW5zZmVyKGRzdCwgd2FkKTsKICAgIH0KCiAgICBmdW5jdGlvbiBwdWxsKGFkZHJlc3Mgc3JjLCB1aW50MjU2IHdhZCkgcHVibGljIHJldHVybnMgKCBib29sKSB7CiAgICAgICAgcmV0dXJuIHRyYW5zZmVyRnJvbShzcmMsIG1zZy5zZW5kZXIsIHdhZCk7CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBkc3QsIHVpbnQgd2FkKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgICAgIHJldHVybiBzdXBlci50cmFuc2Zlcihkc3QsIHdhZCk7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGZyZWV6ZShhZGRyZXNzIGRzdCx1aW50MjU2IF92YWx1ZSkgQXV0aCBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgYXNzZXJ0KGJhbGFuY2VzW2RzdF0gPj0gX3ZhbHVlKTsgLy8gQ2hlY2sgaWYgdGhlIHNlbmRlciBoYXMgZW5vdWdoCiAgICAgICAgYXNzZXJ0KF92YWx1ZSA+IDApIDsgCiAgICAgICAgYmFsYW5jZXNbZHN0XSA9IFNhZmVNYXRoLnNhZmVTdWIoYmFsYW5jZXNbZHN0XSwgX3ZhbHVlKTsgICAgICAgICAgICAgICAgICAgICAgLy8gU3VidHJhY3QgZnJvbSB0aGUgc2VuZGVyCiAgICAgICAgZnJlZXplc1tkc3RdID0gU2FmZU1hdGguc2FmZUFkZChmcmVlemVzW2RzdF0sIF92YWx1ZSk7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBVcGRhdGVzIHRvdGFsU3VwcGx5CiAgICAgICAgRnJlZXplKGRzdCwgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gdW5mcmVlemUoYWRkcmVzcyBkc3QsdWludDI1NiBfdmFsdWUpIEF1dGggcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGFzc2VydChmcmVlemVzW2RzdF0gPj0gX3ZhbHVlKTsgICAgICAgICAgICAvLyBDaGVjayBpZiB0aGUgc2VuZGVyIGhhcyBlbm91Z2gKICAgICAgICBhc3NlcnQoX3ZhbHVlID4gMCkgOyAKICAgICAgICBmcmVlemVzW2RzdF0gPSBTYWZlTWF0aC5zYWZlU3ViKGZyZWV6ZXNbZHN0XSwgX3ZhbHVlKTsgICAgICAgICAgICAgICAgICAgICAgLy8gU3VidHJhY3QgZnJvbSB0aGUgc2VuZGVyCiAgICAgICAgYmFsYW5jZXNbZHN0XSA9IFNhZmVNYXRoLnNhZmVBZGQoYmFsYW5jZXNbZHN0XSwgX3ZhbHVlKTsKICAgICAgICBVbmZyZWV6ZShkc3QsIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9Cn0='.
	

]
