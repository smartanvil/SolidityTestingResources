Class {
	#name : #SRT4525e75ce3d340eee093fbae86637d9aee4e2b3d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT4525e75ce3d340eee093fbae86637d9aee4e2b3d >> base64 [
	^ ''.
	

]
