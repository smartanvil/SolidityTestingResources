Class {
	#name : #SRT7d7af2744eef43e2b4831c221a96dcfe099810e2,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT7d7af2744eef43e2b4831c221a96dcfe099810e2 >> base64 [
	^ ''.
	

]
