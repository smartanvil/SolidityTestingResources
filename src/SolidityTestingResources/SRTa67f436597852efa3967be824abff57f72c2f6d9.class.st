Class {
	#name : #SRTa67f436597852efa3967be824abff57f72c2f6d9,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTa67f436597852efa3967be824abff57f72c2f6d9 >> base64 [
	^ ''.
	

]
