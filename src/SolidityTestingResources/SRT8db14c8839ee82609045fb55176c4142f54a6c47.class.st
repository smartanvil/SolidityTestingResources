Class {
	#name : #SRT8db14c8839ee82609045fb55176c4142f54a6c47,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT8db14c8839ee82609045fb55176c4142f54a6c47 >> base64 [
	^ ''.
	

]
