Class {
	#name : #SRT048431fe46a02ee28497919224ef3144f68a872b,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT048431fe46a02ee28497919224ef3144f68a872b >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7CgpsaWJyYXJ5IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBzdWIodWludCBhLCB1aW50IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludCkgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICBmdW5jdGlvbiBhZGQodWludCBhLCB1aW50IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludCkgewogICAgdWludCBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KfQoKLyoqCiogQHRpdGxlIENvbnRyYWN0IHRoYXQgd2lsbCB3b3JrIHdpdGggRVJDMjIzIHRva2Vucy4KKi8KY29udHJhY3QgQ29udHJhY3RSZWNlaXZlciB7CiAgLyoqCiAgICogQGRldiBTdGFuZGFyZCBFUkMyMjMgZnVuY3Rpb24gdGhhdCB3aWxsIGhhbmRsZSBpbmNvbWluZyB0b2tlbiB0cmFuc2ZlcnMuCiAgICoKICAgKiBAcGFyYW0gX2Zyb20gIFRva2VuIHNlbmRlciBhZGRyZXNzLgogICAqIEBwYXJhbSBfdmFsdWUgQW1vdW50IG9mIHRva2Vucy4KICAgKiBAcGFyYW0gX2RhdGEgIFRyYW5zYWN0aW9uIG1ldGFkYXRhLgogICAqLwogICAKICBmdW5jdGlvbiB0b2tlbkZhbGxiYWNrKGFkZHJlc3MgX2Zyb20sIHVpbnQgX3ZhbHVlLCBieXRlcyBfZGF0YSkgcHVibGljOwp9CgovKioKICogQHRpdGxlIEVSQzIyMyBzdGFuZGFyZCB0b2tlbiBpbXBsZW1lbnRhdGlvbi4KICovCmNvbnRyYWN0IFdCRFRva2VuIHsKCXVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwoJCgl1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsKICAgIHN0cmluZyAgcHVibGljIG5hbWU7CiAgICBzdHJpbmcgIHB1YmxpYyBzeW1ib2w7CiAgICB1aW50OCAgIHB1YmxpYyBjb25zdGFudCBkZWNpbWFscyA9IDg7CgogICAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CgkKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsgLy8gTGlzdCBvZiB1c2VyIGJhbGFuY2VzLgoKICAgIGZ1bmN0aW9uIFdCRFRva2VuKHVpbnQyNTYgaW5pdGlhbFN1cHBseSwgc3RyaW5nIHRva2VuTmFtZSwgc3RyaW5nIHRva2VuU3ltYm9sKSBwdWJsaWMgewogICAgICAgIG93bmVyICAgICAgICAgICA9ICAgbXNnLnNlbmRlcjsKCQl0b3RhbFN1cHBseSAgICAgPSAgIGluaXRpYWxTdXBwbHkgKiAxMCAqKiB1aW50MjU2KGRlY2ltYWxzKTsKCQluYW1lICAgICAgICAgICAgPSAgIHRva2VuTmFtZTsKCQlzeW1ib2wgICAgICAgICAgPSAgIHRva2VuU3ltYm9sOwogICAgICAgIGJhbGFuY2VzW293bmVyXSA9ICAgdG90YWxTdXBwbHk7CiAgICB9CgoJZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiB2YWx1ZSk7ICAvLyBFUkMyMAogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiB2YWx1ZSwgYnl0ZXMgZGF0YSk7IC8vIEVSQzIzMwoJZXZlbnQgQnVybihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgdWludDI1NiBhbW91bnQsIHVpbnQyNTYgY3VycmVudFN1cHBseSwgYnl0ZXMgZGF0YSk7CgoKCS8qKgogICAgICogQGRldiBUcmFuc2ZlciB0aGUgc3BlY2lmaWVkIGFtb3VudCBvZiB0b2tlbnMgdG8gdGhlIHNwZWNpZmllZCBhZGRyZXNzLgogICAgICogICAgICBUaGlzIGZ1bmN0aW9uIHdvcmtzIHRoZSBzYW1lIHdpdGggdGhlIHByZXZpb3VzIG9uZQogICAgICogICAgICBidXQgZG9lc24ndCBjb250YWluIGBfZGF0YWAgcGFyYW0uCiAgICAgKiAgICAgIEFkZGVkIGR1ZSB0byBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eSByZWFzb25zLgogICAgICoKICAgICAqIEBwYXJhbSBfdG8gICAgUmVjZWl2ZXIgYWRkcmVzcy4KICAgICAqIEBwYXJhbSBfdmFsdWUgQW1vdW50IG9mIHRva2VucyB0aGF0IHdpbGwgYmUgdHJhbnNmZXJyZWQuCiAgICAgKi8KICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgICAgICBieXRlcyBtZW1vcnkgZW1wdHk7CgkJdHJhbnNmZXIoX3RvLCBfdmFsdWUsIGVtcHR5KTsKICAgIH0KCgkvKioKICAgICAqIEBkZXYgVHJhbnNmZXIgdGhlIHNwZWNpZmllZCBhbW91bnQgb2YgdG9rZW5zIHRvIHRoZSBzcGVjaWZpZWQgYWRkcmVzcy4KICAgICAqICAgICAgSW52b2tlcyB0aGUgYHRva2VuRmFsbGJhY2tgIGZ1bmN0aW9uIGlmIHRoZSByZWNpcGllbnQgaXMgYSBjb250cmFjdC4KICAgICAqICAgICAgVGhlIHRva2VuIHRyYW5zZmVyIGZhaWxzIGlmIHRoZSByZWNpcGllbnQgaXMgYSBjb250cmFjdAogICAgICogICAgICBidXQgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBgdG9rZW5GYWxsYmFja2AgZnVuY3Rpb24KICAgICAqICAgICAgb3IgdGhlIGZhbGxiYWNrIGZ1bmN0aW9uIHRvIHJlY2VpdmUgZnVuZHMuCiAgICAgKgogICAgICogQHBhcmFtIF90byAgICBSZWNlaXZlciBhZGRyZXNzLgogICAgICogQHBhcmFtIF92YWx1ZSBBbW91bnQgb2YgdG9rZW5zIHRoYXQgd2lsbCBiZSB0cmFuc2ZlcnJlZC4KICAgICAqIEBwYXJhbSBfZGF0YSAgVHJhbnNhY3Rpb24gbWV0YWRhdGEuCiAgICAgKi8KICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSwgYnl0ZXMgX2RhdGEpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICAgICAgdWludCBjb2RlTGVuZ3RoOwoKICAgICAgICBhc3NlbWJseSB7CiAgICAgICAgICAgIGNvZGVMZW5ndGggOj0gZXh0Y29kZXNpemUoX3RvKQogICAgICAgIH0KCiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBiYWxhbmNlc1ttc2cuc2VuZGVyXS5zdWIoX3ZhbHVlKTsKICAgICAgICBiYWxhbmNlc1tfdG9dID0gYmFsYW5jZXNbX3RvXS5hZGQoX3ZhbHVlKTsKICAgICAgICBpZihjb2RlTGVuZ3RoPjApIHsKICAgICAgICAgICAgQ29udHJhY3RSZWNlaXZlciByZWNlaXZlciA9IENvbnRyYWN0UmVjZWl2ZXIoX3RvKTsKICAgICAgICAgICAgcmVjZWl2ZXIudG9rZW5GYWxsYmFjayhtc2cuc2VuZGVyLCBfdmFsdWUsIF9kYXRhKTsKICAgICAgICB9CgkJCgkJVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlLCBfZGF0YSk7CiAgICB9CgkKCS8qKgogICAgICogRGVzdHJveSB0b2tlbnMKICAgICAqCiAgICAgKiBSZW1vdmUgYF92YWx1ZWAgdG9rZW5zIGZyb20gdGhlIHN5c3RlbSBpcnJldmVyc2libHkKICAgICAqCiAgICAgKiBAcGFyYW0gX3ZhbHVlIHRoZSBhbW91bnQgb2YgbW9uZXkgdG8gYnVybgoJICogQHBhcmFtIF9kYXRhICBUcmFuc2FjdGlvbiBtZXRhZGF0YS4KICAgICAqLwogICAgZnVuY3Rpb24gYnVybih1aW50MjU2IF92YWx1ZSwgYnl0ZXMgX2RhdGEpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKCQliYWxhbmNlc1ttc2cuc2VuZGVyXSA9IGJhbGFuY2VzW21zZy5zZW5kZXJdLnN1YihfdmFsdWUpOwogICAgICAgIHRvdGFsU3VwcGx5ID0gdG90YWxTdXBwbHkuc3ViKF92YWx1ZSk7CiAgICAgICAgQnVybihtc2cuc2VuZGVyLCBfdmFsdWUsIHRvdGFsU3VwcGx5LCBfZGF0YSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgkKCS8qKgogICAgICogQGRldiBSZXR1cm5zIGJhbGFuY2Ugb2YgdGhlIGBfYWRkcmVzc2AuCiAgICAgKgogICAgICogQHBhcmFtIF9hZGRyZXNzICAgVGhlIGFkZHJlc3Mgd2hvc2UgYmFsYW5jZSB3aWxsIGJlIHJldHVybmVkLgogICAgICogQHJldHVybiBiYWxhbmNlIEJhbGFuY2Ugb2YgdGhlIGBfYWRkcmVzc2AuCiAgICAgKi8KICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9hZGRyZXNzKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7CiAgICAgICAgcmV0dXJuIGJhbGFuY2VzW19hZGRyZXNzXTsKICAgIH0KfQ=='.
	

]
