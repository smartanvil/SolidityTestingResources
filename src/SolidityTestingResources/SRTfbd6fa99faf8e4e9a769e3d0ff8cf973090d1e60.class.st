Class {
	#name : #SRTfbd6fa99faf8e4e9a769e3d0ff8cf973090d1e60,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTfbd6fa99faf8e4e9a769e3d0ff8cf973090d1e60 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CmNvbnRyYWN0IEJoaW5uZWthIHsKLyogUHVibGljIHZhcmlhYmxlcyBvZiB0aGUgdG9rZW4gKi8Kc3RyaW5nIHB1YmxpYyBuYW1lID0gIkJoaW5uZWthIFR1bmdnYWwgSWthIjsgICAgICAgICAgICAgICAgICAvLyBUb2tlbiBOYW1lCnN0cmluZyBwdWJsaWMgc3ltYm9sID0gIkJUSSI7ICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFRva2VuIHN5bWJvbAp1aW50IHB1YmxpYyBkZWNpbWFscyA9IDE4OyAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBUb2tlbiBEZWNpbWFsIFBvaW50CmFkZHJlc3MgcHVibGljIG93bmVyOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIE93bmVyIG9mIHRoZSBUb2tlbiBDb250cmFjdAp1aW50MjU2IHRvdGFsQmhpbm5la2E7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFRvdGFsIFRva2VuIGZvciB0aGUgQ3Jvd2RzYWxlCnVpbnQyNTYgdG90YWxUb2tlbjsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFRoZSBjdXJyZW50IHRvdGFsIHRva2VuIHN1cHBseS4KYm9vbCBwdWJsaWMgaGF1bHQgPSBmYWxzZTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gQ3Jvd2RzYWxlIFN0YXRlCiAvKiBUaGlzIGNyZWF0ZXMgYW4gYXJyYXkgd2l0aCBhbGwgYmFsYW5jZXMgKi8KbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsKbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBhbGxvd2VkOwovKiBUaGlzIGdlbmVyYXRlcyBhIHB1YmxpYyBldmVudCBvbiB0aGUgYmxvY2tjaGFpbiB0aGF0IHdpbGwgbm90aWZ5IGNsaWVudHMgKi8KZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiB2YWx1ZSk7Ci8qIFRoaXMgbm90aWZpZXMgY2xpZW50cyBhYm91dCB0aGUgcmVmdW5kIGFtb3VudCAqLwogZXZlbnQgQnVybihhZGRyZXNzIF9mcm9tLCB1aW50MjU2IF92YWx1ZSk7CiBldmVudCBBcHByb3ZhbChhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpOwovKiBJbml0aWFsaXplcyBjb250cmFjdCB3aXRoIGluaXRpYWwgc3VwcGx5IHRva2VucyB0byB0aGUgY3JlYXRvciBvZiB0aGUgY29udHJhY3QgKi8KZnVuY3Rpb24gQmhpbm5la2EgKAogIGFkZHJlc3MgX0JUSWNsYW4KICApIHB1YmxpYyB7CiAgIG93bmVyID0gbXNnLnNlbmRlcjsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEFzc2lnbmluZyBvd25lciBhZGRyZXNzLgogICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IDE2NzAwMDAwMCAqICgxMCAqKiBkZWNpbWFscyk7ICAgICAgICAgICAgLy8gQXNzaWduaW5nIFRvdGFsIFRva2VuIGJhbGFuY2UgdG8gb3duZXIKICAgdG90YWxCaGlubmVrYSA9IDI2NzAwMDAwMCAqICgxMCAqKiBkZWNpbWFscyk7CiAgIGJhbGFuY2VzW19CVEljbGFuXSA9IHNhZmVBZGQoYmFsYW5jZXNbX0JUSWNsYW5dLCA1MzEyNTAwMCAqICgxMCAqKiBkZWNpbWFscykpOwp9CmZ1bmN0aW9uIHNhZmVTdWIodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICBmdW5jdGlvbiBzYWZlQWRkKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgYXNzZXJ0KGMgPj0gYSk7CiAgICByZXR1cm4gYzsKICB9Cm1vZGlmaWVyIG9ubHlQYXlsb2FkU2l6ZSh1aW50IHNpemUpIHsKICAgcmVxdWlyZShtc2cuZGF0YS5sZW5ndGggPj0gc2l6ZSArIDQpIDsKICAgXzsKfQptb2RpZmllciBvbmx5b3duZXIgewogIHJlcXVpcmUgKG93bmVyID09IG1zZy5zZW5kZXIpOwogIF87Cn0KLy8vQG5vdGljZSBBbHRlciB0aGUgVG90YWwgU3VwcGx5LgpmdW5jdGlvbiB0b2tlbnN1cCh1aW50MjU2IF92YWx1ZSkgb25seW93bmVyIHB1YmxpY3sKICB0b3RhbEJoaW5uZWthID0gc2FmZUFkZCh0b3RhbEJoaW5uZWthLCBfdmFsdWUgKiAoMTAgKiogZGVjaW1hbHMpKTsKICBiYWxhbmNlc1tvd25lcl0gPSBzYWZlQWRkKGJhbGFuY2VzW293bmVyXSwgX3ZhbHVlICogKDEwICoqIGRlY2ltYWxzKSk7Cn0KLy8vQG5vdGljZSBUcmFuc2ZlciB0b2tlbnMgYmFzZWQgb24gdHlwZQpmdW5jdGlvbiBCaGlubmVrYW1pbnQoIGFkZHJlc3MgX2NsaWVudCwgdWludCBfdmFsdWUsIHVpbnQgX3R5cGUpIG9ubHlvd25lciBwdWJsaWMgewogIHVpbnQgbnVtQlRJOwogIHJlcXVpcmUodG90YWxUb2tlbiA8PSB0b3RhbEJoaW5uZWthKTsKICBpZihfdHlwZSA9PSAxKXsKICAgICAgbnVtQlRJID0gX3ZhbHVlICogNjAwMCAqICgxMCAqKiBkZWNpbWFscyk7CiAgfQogIGVsc2UgaWYgKF90eXBlID09IDIpewogICAgICBudW1CVEkgPSBfdmFsdWUgKiA1MDAwICogKDEwICoqIGRlY2ltYWxzKTsKICB9CiAgYmFsYW5jZXNbb3duZXJdID0gc2FmZVN1YihiYWxhbmNlc1tvd25lcl0sIG51bUJUSSk7CiAgYmFsYW5jZXNbX2NsaWVudF0gPSBzYWZlQWRkKGJhbGFuY2VzW19jbGllbnRdLCBudW1CVEkpOwogIHRvdGFsVG9rZW4gPSBzYWZlQWRkKHRvdGFsVG9rZW4sIG51bUJUSSk7CiAgVHJhbnNmZXIob3duZXIsIF9jbGllbnQsIG51bUJUSSk7Cn0KLy8vQG5vdGljZSBUcmFuc2ZlciB0b2tlbiB3aXRoIG9ubHkgdmFsdWUKZnVuY3Rpb24gQlRJbWludCggYWRkcmVzcyBfY2xpZW50LCB1aW50MjU2IF92YWx1ZSkgb25seW93bmVyIHB1YmxpYyB7CiAgcmVxdWlyZSh0b3RhbFRva2VuIDw9IHRvdGFsQmhpbm5la2EpOwogIHVpbnQyNTYgbnVtQlRJID0gX3ZhbHVlICogKCAxMCAqKiBkZWNpbWFscyk7CiAgYmFsYW5jZXNbb3duZXJdID0gc2FmZVN1YihiYWxhbmNlc1tvd25lcl0sIG51bUJUSSk7CiAgYmFsYW5jZXNbX2NsaWVudF0gPSBzYWZlQWRkKGJhbGFuY2VzW19jbGllbnRdLCBudW1CVEkpOwogIHRvdGFsVG9rZW4gPSBzYWZlQWRkKHRvdGFsVG9rZW4sIG51bUJUSSk7CiAgVHJhbnNmZXIob3duZXIsIF9jbGllbnQsIG51bUJUSSk7Cn0KLy9EZWZhdWx0IGFzc3VtZXMgdG90YWxTdXBwbHkgY2FuJ3QgYmUgb3ZlciBtYXggKDJeMjU2IC0gMSkuCi8vSWYgeW91ciB0b2tlbiBsZWF2ZXMgb3V0IHRvdGFsU3VwcGx5IGFuZCBjYW4gaXNzdWUgbW9yZSB0b2tlbnMgYXMgdGltZSBnb2VzIG9uLCB5b3UgbmVlZCB0byBjaGVjayByZXF1aXJlaXQgZG9lc24ndCB3cmFwLgovL1JlcGxhY2UgdGhlIGlmIHdpdGggdGhpcyBvbmUgaW5zdGVhZC4KZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICByZXF1aXJlKCFoYXVsdCk7CiAgICByZXF1aXJlKGJhbGFuY2VzW21zZy5zZW5kZXJdID49IF92YWx1ZSk7CiAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IHNhZmVTdWIoYmFsYW5jZXNbbXNnLnNlbmRlcl0sX3ZhbHVlKTsKICAgIGJhbGFuY2VzW190b10gPSBzYWZlQWRkKGJhbGFuY2VzW190b10sIF92YWx1ZSk7CiAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICByZXR1cm4gdHJ1ZTsKfQpmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgIGlmIChiYWxhbmNlc1tfZnJvbV0gPCBfdmFsdWUgfHwgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gPCBfdmFsdWUpIHsKICAgICAgICAgIC8vIEJhbGFuY2Ugb3IgYWxsb3dhbmNlIHRvbyBsb3cKICAgICAgICAgIHJldmVydCgpOwogICAgICB9CiAgICAgIHJlcXVpcmUoIWhhdWx0KTsKICAgICAgYmFsYW5jZXNbX3RvXSA9IHNhZmVBZGQoYmFsYW5jZXNbX3RvXSwgX3ZhbHVlKTsKICAgICAgYmFsYW5jZXNbX2Zyb21dID0gc2FmZVN1YihiYWxhbmNlc1tfZnJvbV0sX3ZhbHVlKTsKICAgICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gPSBzYWZlU3ViKGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdLF92YWx1ZSk7CiAgICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7CiAgICAgIHJldHVybiB0cnVlOwp9Ci8vLyBAZGV2IFNldHMgYXBwcm92ZWQgYW1vdW50IG9mIHRva2VucyBmb3Igc3BlbmRlci4gUmV0dXJucyBzdWNjZXNzLgovLy8gQHBhcmFtIF9zcGVuZGVyIEFkZHJlc3Mgb2YgYWxsb3dlZCBhY2NvdW50LgovLy8gQHBhcmFtIF92YWx1ZSBOdW1iZXIgb2YgYXBwcm92ZWQgdG9rZW5zLgovLy8gQHJldHVybiBSZXR1cm5zIHN1Y2Nlc3Mgb2YgZnVuY3Rpb24gY2FsbC4KZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkKICAgIHB1YmxpYwogICAgcmV0dXJucyAoYm9vbCkKewogICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CiAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsKICAgIHJldHVybiB0cnVlOwp9Ci8vLyBAZGV2IFJldHVybnMgbnVtYmVyIG9mIGFsbG93ZWQgdG9rZW5zIGZvciBnaXZlbiBhZGRyZXNzLgovLy8gQHBhcmFtIF9vd25lciBBZGRyZXNzIG9mIHRva2VuIG93bmVyLgovLy8gQHBhcmFtIF9zcGVuZGVyIEFkZHJlc3Mgb2YgdG9rZW4gc3BlbmRlci4KLy8vIEByZXR1cm4gUmV0dXJucyByZW1haW5pbmcgYWxsb3dhbmNlIGZvciBzcGVuZGVyLgpmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpCiAgICBjb25zdGFudAogICAgcHVibGljCiAgICByZXR1cm5zICh1aW50MjU2KQp7CiAgICByZXR1cm4gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsKfQovLy8gQG5vdGljZSBSZXR1cm5zIGJhbGFuY2Ugb2YgQlRJIFRva2Vucy4KLy8vIEBwYXJhbSBfZnJvbSBCYWxhbmNlIGZvciBBZGRyZXNzLgpmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfZnJvbSkgcHVibGljIHZpZXcgcmV0dXJucyAodWludCBiYWxhbmNlKSB7CiAgICByZXR1cm4gYmFsYW5jZXNbX2Zyb21dOwogIH0KCi8vL0Bub3RpY2UgUmV0dXJucyB0aGUgVG90YWwgTnVtYmVyIG9mIEJUSSBUb2tlbnMuCmZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgcHVibGljIHZpZXcgcmV0dXJucyAodWludCBTdXBwbHkpewogIHJldHVybiB0b3RhbEJoaW5uZWthOwp9Ci8vLyBAbm90aWNlIFBhdXNlIHRoZSBjcm93ZHNhbGUKZnVuY3Rpb24gcGF1c2VhYmxlKCkgcHVibGljIG9ubHlvd25lciB7CiAgICBoYXVsdCA9IHRydWU7CiAgfQovLy8gQG5vdGljZSBVbnBhdXNlIHRoZSBjcm93ZHNhbGUKZnVuY3Rpb24gdW5wYXVzZSgpIHB1YmxpYyBvbmx5b3duZXIgewogICAgaGF1bHQgPSBmYWxzZTsKfQoKLy8vIEBub3RpY2UgUmVtb3ZlIGBfdmFsdWVgIHRva2VucyBmcm9tIHRoZSBzeXN0ZW0gaXJyZXZlcnNpYmx5CmZ1bmN0aW9uIGJ1cm4odWludDI1NiBfdmFsdWUpIG9ubHlvd25lciBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICByZXF1aXJlIChiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfdmFsdWUpOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIENoZWNrIGlmIHRoZSBzZW5kZXIgaGFzIGVub3VnaAogICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBzYWZlU3ViKGJhbGFuY2VzW21zZy5zZW5kZXJdLCBfdmFsdWUpOyAgICAgICAgICAgICAgICAgICAgICAvLyBTdWJ0cmFjdCBmcm9tIHRoZSBzZW5kZXIKICAgIHRvdGFsQmhpbm5la2EgPSBzYWZlU3ViKHRvdGFsQmhpbm5la2EsIF92YWx1ZSk7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFVwZGF0ZXMgdG90YWxTdXBwbHkKICAgIEJ1cm4obXNnLnNlbmRlciwgX3ZhbHVlKTsKICAgIHJldHVybiB0cnVlOwp9Cn0='.
	

]
