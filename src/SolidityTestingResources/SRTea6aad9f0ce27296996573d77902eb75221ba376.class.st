Class {
	#name : #SRTea6aad9f0ce27296996573d77902eb75221ba376,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTea6aad9f0ce27296996573d77902eb75221ba376 >> base64 [
	^ ''.
	

]
