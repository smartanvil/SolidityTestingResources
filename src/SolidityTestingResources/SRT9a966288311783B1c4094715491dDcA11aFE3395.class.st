Class {
	#name : #SRT9a966288311783B1c4094715491dDcA11aFE3395,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT9a966288311783B1c4094715491dDcA11aFE3395 >> base64 [
	^ 'Ly8gUHJlc2FsZSBpbnRlcmZhY2UKCnByYWdtYSBzb2xpZGl0eSBeMC40LjE2OwoKLyoqCiAqIEB0aXRsZSBTYWZlTWF0aAogKiBAZGV2IE1hdGggb3BlcmF0aW9ucyB3aXRoIHNhZmV0eSBjaGVja3MgdGhhdCB0aHJvdyBvbiBlcnJvcgogKi8KbGlicmFyeSBTYWZlTWF0aCB7CiAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhICogYjsKICAgIGFzc2VydChhID09IDAgfHwgYyAvIGEgPT0gYik7CiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIGRpdih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgLy8gYXNzZXJ0KGIgPiAwKTsgLy8gU29saWRpdHkgYXV0b21hdGljYWxseSB0aHJvd3Mgd2hlbiBkaXZpZGluZyBieSAwCiAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgIC8vIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOyAvLyBUaGVyZSBpcyBubyBjYXNlIGluIHdoaWNoIHRoaXMgZG9lc24ndCBob2xkCiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgYXNzZXJ0KGMgPj0gYSk7CiAgICByZXR1cm4gYzsKICB9Cn0KCmNvbnRyYWN0IFByZXNhbGUgewogIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwoKICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBiYWxhbmNlczsKCiAgLy8gTWluaW11bSBhbW91bnQgb2Ygd2VpIHJlcXVpcmVkIGZvciBwcmVzYWxlIHRvIGJlIHN1Y2Nlc3NmdWwuICBJZiBub3Qgc3VjY2Vzc2Z1bCwgcmVmdW5kcyBhcmUgcHJvdmlkZWQuCiAgdWludDI1NiBwdWJsaWMgbWluR29hbDsKICAvLyBNYXhpbXVtIGFtb3VudCBvZiB3ZWkgZm9yIHByZXNhbGUgdG8gcmFpc2UuCiAgdWludDI1NiBwdWJsaWMgbWF4R29hbDsKICAvLyBUaGUgZXBvY2ggdW5peCB0aW1lc3RhbXAgb2Ygd2hlbiB0aGUgcHJlc2FsZSBzdGFydHMKICB1aW50MjU2IHB1YmxpYyBzdGFydFRpbWU7CiAgLy8gVGhlIGVwb2NoIHVuaXggdGltZXN0YW1wIG9mIHdoZW4gdGhlIHByZXNhbGUgZW5kcwogIHVpbnQyNTYgcHVibGljIGVuZFRpbWU7CiAgLy8gVGhlIHdhbGxldCBhZGRyZXNzIHRoYXQgdGhlIGZ1bmRzIHdpbGwgYmUgc2VudCB0bwogIGFkZHJlc3MgcHVibGljIHByb2plY3RXYWxsZXQ7CgogIHVpbnQyNTYgcHJpdmF0ZSB0b3RhbFJhaXNlZDsKCiAgZnVuY3Rpb24gUHJlc2FsZSgKICAgIHVpbnQyNTYgX21pbkdvYWwsCiAgICB1aW50MjU2IF9tYXhHb2FsLAogICAgdWludDI1NiBfc3RhcnRUaW1lLAogICAgdWludDI1NiBfZW5kVGltZSwKICAgIGFkZHJlc3MgX3Byb2plY3RXYWxsZXQKICApCiAgewogICAgcmVxdWlyZShfbWluR29hbCA+IDApOwogICAgcmVxdWlyZShfZW5kVGltZSA+IF9zdGFydFRpbWUpOwogICAgcmVxdWlyZShfcHJvamVjdFdhbGxldCAhPSBhZGRyZXNzKDB4MCkpOwogICAgcmVxdWlyZShfbWF4R29hbCA+IF9taW5Hb2FsKTsKCiAgICBtaW5Hb2FsID0gX21pbkdvYWw7CiAgICBtYXhHb2FsID0gX21heEdvYWw7CiAgICBzdGFydFRpbWUgPSBfc3RhcnRUaW1lOwogICAgZW5kVGltZSA9IF9lbmRUaW1lOwogICAgcHJvamVjdFdhbGxldCA9IF9wcm9qZWN0V2FsbGV0OwogIH0KCiAgZnVuY3Rpb24gdHJhbnNmZXJUb1Byb2plY3RXYWxsZXQoKSB7CiAgICAvLyBvbmx5IGFsbG93IHRyYW5zZmVycyBpZiB0aGVyZSBpcyBiYWxhbmNlCiAgICByZXF1aXJlKHRoaXMuYmFsYW5jZSA+IDApOwogICAgLy8gb25seSBhbGxvdyB0cmFuc2ZlcnMgaWYgbWluaW11bSBnb2FsIGlzIG1ldAogICAgcmVxdWlyZSh0b3RhbFJhaXNlZCA+PSBtaW5Hb2FsKTsKICAgIGlmKCFwcm9qZWN0V2FsbGV0LnNlbmQodGhpcy5iYWxhbmNlKSkgewogICAgICByZXZlcnQoKTsKICAgIH0KICB9CgogIGZ1bmN0aW9uIHJlZnVuZCgpIHsKICAgIC8vIG9ubHkgYWxsb3cgcmVmdW5kIGlmIHRoZSBwcmVzYWxlIGhhcyBlbmRlZAogICAgcmVxdWlyZShub3cgPiBlbmRUaW1lKTsKICAgIC8vIG9ubHkgYWxsb3cgcmVmdW5kIGlmIHRoZSBtaW5Hb2FsIGhhcyBub3QgYmVlbiByZWFjaGVkCiAgICByZXF1aXJlKHRvdGFsUmFpc2VkIDwgbWluR29hbCk7CiAgICAvLyBvbmx5IGFsbG93IHJlZnVuZCBkdXJpbmcgYSA2MCBkYXkgd2luZG93IGFmdGVyIHByZXNhbGUgZW5kcwogICAgcmVxdWlyZShub3cgPCAoZW5kVGltZSArIDYwIGRheXMpKTsKICAgIHVpbnQyNTYgYW1vdW50ID0gYmFsYW5jZXNbbXNnLnNlbmRlcl07CiAgICAvLyBvbmx5IGFsbG93IHJlZnVuZCBpZiBpbnZlc3RvciBoYXMgaW52ZXN0ZWQKICAgIHJlcXVpcmUoYW1vdW50ID4gMCk7CiAgICAvLyBhZnRlciByZWZ1bmRpbmcsIHplcm8gb3V0IGJhbGFuY2UKICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gMDsKICAgIGlmICghbXNnLnNlbmRlci5zZW5kKGFtb3VudCkpIHsKICAgICAgcmV2ZXJ0KCk7CiAgICB9CiAgfQoKICBmdW5jdGlvbiB0cmFuc2ZlclJlbWFpbmluZygpIHsKICAgIC8vIG9ubHkgYWxsb3cgdHJhbnNmZXIgaWYgcHJlc2FsZSBoYXMgZmFpbGVkCiAgICByZXF1aXJlKHRvdGFsUmFpc2VkIDwgbWluR29hbCk7CiAgICAvLyBvbmx5IGFsbG93IHRyYW5zZmVyIGFmdGVyIHJlZnVuZCB3aW5kb3cgaGFzIHBhc3NlZAogICAgcmVxdWlyZShub3cgPj0gKGVuZFRpbWUgKyA2MCBkYXlzKSk7CiAgICAvLyBvbmx5IGFsbG93IHRyYW5zZmVyIGlmIHRoZXJlIGlzIHJlbWFpbmluZyBiYWxhbmNlCiAgICByZXF1aXJlKHRoaXMuYmFsYW5jZSA+IDApOwogICAgcHJvamVjdFdhbGxldC50cmFuc2Zlcih0aGlzLmJhbGFuY2UpOwogIH0KCiAgZnVuY3Rpb24gKCkgcGF5YWJsZSB7CiAgICAvLyBvbmx5IGFsbG93IHBheW1lbnRzIGdyZWF0ZXIgdGhhbiAwCiAgICByZXF1aXJlKG1zZy52YWx1ZSA+IDApOwogICAgLy8gb25seSBhbGxvdyBwYXltZW50cyBhZnRlciBwcmVzYWxlIGhhcyBzdGFydGVkCiAgICByZXF1aXJlKG5vdyA+PSBzdGFydFRpbWUpOwogICAgLy8gb25seSBhbGxvdyBwYXltZW50cyBiZWZvcmUgcHJlc2FsZSBoYXMgZW5kZWQKICAgIHJlcXVpcmUobm93IDw9IGVuZFRpbWUpOwogICAgLy8gb25seSBhbGxvdyBwYXltZW50cyBpZiB0aGUgbWF4R29hbCBoYXMgbm90IGJlZW4gcmVhY2hlZAogICAgcmVxdWlyZSh0b3RhbFJhaXNlZCA8IG1heEdvYWwpOwoKICAgIC8vIElmIHRoaXMgaW52ZXN0bWVudCBzaG91bGQgY2F1c2UgdGhlIG1heCB0byBiZSBhY2hpZXZlZAogICAgLy8gVGhlbiBpdCBzaG91bGQgb25seSBhY2NlcHQgdXAgdG8gdGhlIG1heCBnb2FsCiAgICAvLyBBbmQgcmVmdW5kIHRoZSByZW1haW5pbmcKICAgIGlmICh0b3RhbFJhaXNlZC5hZGQobXNnLnZhbHVlKSA+IG1heEdvYWwpIHsKICAgICAgdmFyIHJlZnVuZEFtb3VudCA9IHRvdGFsUmFpc2VkICsgbXNnLnZhbHVlIC0gbWF4R29hbDsKICAgICAgaWYgKCFtc2cuc2VuZGVyLnNlbmQocmVmdW5kQW1vdW50KSkgewogICAgICAgIHJldmVydCgpOwogICAgICB9CiAgICAgIHZhciByYWlzZWQgPSBtYXhHb2FsIC0gdG90YWxSYWlzZWQ7CiAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gYmFsYW5jZXNbbXNnLnNlbmRlcl0uYWRkKHJhaXNlZCk7CiAgICAgIHRvdGFsUmFpc2VkID0gdG90YWxSYWlzZWQuYWRkKHJhaXNlZCk7CiAgICB9IGVsc2UgewogICAgICAvLyBpZiBhbGwgY2hlY2tzIHBhc3MsIHRoZW4gYWRkIGFtb3VudCB0byBiYWxhbmNlIG9mIHRoZSBzZW5kZXIKICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBiYWxhbmNlc1ttc2cuc2VuZGVyXS5hZGQobXNnLnZhbHVlKTsKICAgICAgdG90YWxSYWlzZWQgPSB0b3RhbFJhaXNlZC5hZGQobXNnLnZhbHVlKTsKICAgIH0KICB9Cn0KCmNvbnRyYWN0IE9wZW5Nb25leVByZXNhbGUgaXMgUHJlc2FsZSB7CiAgZnVuY3Rpb24gT3Blbk1vbmV5UHJlc2FsZSgpIFByZXNhbGUoODMuMzMgZXRoZXIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMjAwMCBldGhlciwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxNTA1NjQ5NjAwLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDE1MDU5OTUyMDAsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkcmVzcygweDJhMDBCRmQ4Mzc5Nzg2QURmRWJiNmYyRjU5MDExNTM1YTRmOGQ0RTQpKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt9Cgp9'.
	

]
