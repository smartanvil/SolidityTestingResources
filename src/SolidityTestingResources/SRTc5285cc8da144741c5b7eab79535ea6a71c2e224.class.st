Class {
	#name : #SRTc5285cc8da144741c5b7eab79535ea6a71c2e224,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTc5285cc8da144741c5b7eab79535ea6a71c2e224 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTY7Cgpjb250cmFjdCBEaWduaXR5IHsKCiAgIHN0cmluZyBwdWJsaWMgc3RhbmRhcmQgPSAnVG9rZW4gMC4xJzsKICAgc3RyaW5nIHB1YmxpYyBuYW1lOwogICBzdHJpbmcgcHVibGljIHN5bWJvbDsKICAgdWludDggcHVibGljIGRlY2ltYWxzOwogICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsKCiAgICAvL0FkbWlucyBkZWNsYXJhdGlvbgogICAgYWRkcmVzcyBwcml2YXRlIGFkbWluMTsKICAgIGFkZHJlc3MgcHJpdmF0ZSBhZG1pbjI7CiAgICBhZGRyZXNzIHByaXZhdGUgYWRtaW4zOwoKICAgIC8vVXNlciBzdHJ1Y3QKICAgIHN0cnVjdCBVc2VyIHsKICAgICAgICBib29sIGZyb3plbjsKICAgICAgICBib29sIGJhbm5lZDsKICAgICAgICB1aW50MjU2IGJhbGFuY2U7CiAgICAgICAgYm9vbCBpc3NldDsKICAgIH0KICAgIC8vTWFwcGluZ3MKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiBVc2VyKSBwcml2YXRlIHVzZXJzOwoKICAgIGFkZHJlc3NbXSBwcml2YXRlIGJhbGFuY2VzS2V5czsKCiAgICAvL0V2ZW50cwogICAgZXZlbnQgRnJvemVuRnVuZHMoYWRkcmVzcyBpbmRleGVkIHRhcmdldCwgYm9vbCBpbmRleGVkIGZyb3plbik7CiAgICBldmVudCBCYW5BY2NvdW50KGFkZHJlc3MgaW5kZXhlZCBhY2NvdW50LCBib29sIGluZGV4ZWQgYmFubmVkKTsKICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBmcm9tLCBhZGRyZXNzIGluZGV4ZWQgdG8sIHVpbnQyNTYgdmFsdWUpOwogICAgZXZlbnQgTWludGVkKGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiBpbmRleGVkIHZhbHVlKTsKCiAgICAvL01haW4gY29udHJhY3QgZnVuY3Rpb24KICAgIGZ1bmN0aW9uIHRhbiAodWludDI1NiBpbml0aWFsU3VwcGx5LCBzdHJpbmcgdG9rZW5OYW1lLHN0cmluZyB0b2tlblN5bWJvbCkgcHVibGljIHsKICAgICAgICAvL3NldHRpbmcgdXAgYWRtaW5zCiAgICAgICAgYWRtaW4xID0gMHhBMGRFMTE5NzY0M0JjODE3N0NDODg5N2Q5MzlFOTRCRDg1ODcxZjM3OwogICAgICAgIGFkbWluMiA9IDB4NkQyNDQyODgxMzQ1QjQ3NGNmYjIwNUQ5Qjg3MDE0MTlCNTZiYjZENTsKICAgICAgICBhZG1pbjMgPSAweDZBOEUwQ0RDYzA2NzA2RTI2N0M4YTBERTg2ZjhmY2FCQTZjQjFhNzA7CgogICAgICAgIC8vdXNlciBjcmVhdGlvbgogICAgICAgIHVzZXJzWzB4QTBkRTExOTc2NDNCYzgxNzdDQzg4OTdkOTM5RTk0QkQ4NTg3MWYzN10gPSBVc2VyKGZhbHNlLCBmYWxzZSwgaW5pdGlhbFN1cHBseSwgdHJ1ZSk7CgogICAgICAgIGlmKCFoYXNLZXkoMHhBMGRFMTE5NzY0M0JjODE3N0NDODg5N2Q5MzlFOTRCRDg1ODcxZjM3KSkgewogICAgICAgICAgICBiYWxhbmNlc0tleXMucHVzaChtc2cuc2VuZGVyKTsKICAgICAgICB9CiAgICAgICAgdG90YWxTdXBwbHkgPSBpbml0aWFsU3VwcGx5OwogICAgICAgIG5hbWUgPSB0b2tlbk5hbWU7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBTZXQgdGhlIG5hbWUgZm9yIGRpc3BsYXkgcHVycG9zZXMKICAgICAgICBzeW1ib2wgPSB0b2tlblN5bWJvbDsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gU2V0IHRoZSBzeW1ib2wgZm9yIGRpc3BsYXkgcHVycG9zZXMKICAgICAgICBkZWNpbWFscyA9IDg7ICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEFtb3VudCBvZiBkZWNpbWFscyBmb3IgZGlzcGxheSBwdXJwb3NlcwogICAgfQoKICAgIC8vTW9kaWZpZXIgdG8gbGltaXQgYWNjZXNzIHRvIGFkbWluIGZ1bmN0aW9ucwogICAgbW9kaWZpZXIgb25seUFkbWluIHsKICAgICAgICBpZighKG1zZy5zZW5kZXIgPT0gYWRtaW4xIHx8IG1zZy5zZW5kZXIgPT0gYWRtaW4yIHx8IG1zZy5zZW5kZXIgPT0gYWRtaW4zKSkgewogICAgICAgICAgICByZXZlcnQoKTsKICAgICAgICB9CiAgICAgICAgXzsKICAgIH0KCiAgICBtb2RpZmllciB1bmJhbm5lZCB7CiAgICAgICAgaWYodXNlcnNbbXNnLnNlbmRlcl0uYmFubmVkKSB7CiAgICAgICAgICAgIHJldmVydCgpOwogICAgICAgIH0KICAgICAgICBfOwogICAgfQoKICAgIG1vZGlmaWVyIHVuZnJvemVuIHsKICAgICAgICBpZih1c2Vyc1ttc2cuc2VuZGVyXS5mcm96ZW4pIHsKICAgICAgICAgICAgcmV2ZXJ0KCk7CiAgICAgICAgfQogICAgICAgIF87CiAgICB9CgogICAgZnVuY3Rpb24gc2V0U2Vjb25kQWRtaW4oYWRkcmVzcyBuZXdBZG1pbikgb25seUFkbWluIHB1YmxpYyB7CiAgICAgICAgYWRtaW4yID0gbmV3QWRtaW47CiAgICB9CgogICAgZnVuY3Rpb24gc2V0VGhpcmRBZG1pbihhZGRyZXNzIG5ld0FkbWluKSBvbmx5QWRtaW4gcHVibGljIHsKICAgICAgICBhZG1pbjMgPSBuZXdBZG1pbjsKICAgIH0KCiAgICAvL0FkbWlucyBnZXR0ZXJzCiAgICBmdW5jdGlvbiBnZXRGaXJzdEFkbWluKCkgb25seUFkbWluIHB1YmxpYyBjb25zdGFudCByZXR1cm5zIChhZGRyZXNzKSB7CiAgICAgICAgcmV0dXJuIGFkbWluMTsKICAgIH0KCiAgICBmdW5jdGlvbiBnZXRTZWNvbmRBZG1pbigpIG9ubHlBZG1pbiBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAoYWRkcmVzcykgewogICAgICAgIHJldHVybiBhZG1pbjI7CiAgICB9CgogICAgZnVuY3Rpb24gZ2V0VGhpcmRBZG1pbigpIG9ubHlBZG1pbiBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAoYWRkcmVzcykgewogICAgICAgIHJldHVybiBhZG1pbjM7CiAgICB9CgogICAgLy9BZG1pbmlzdHJhdGl2ZSBhY3Rpb25zCiAgICBmdW5jdGlvbiBtaW50VG9rZW4odWludDI1NiBtaW50ZWRBbW91bnQpIG9ubHlBZG1pbiBwdWJsaWMgewogICAgICAgIGlmKCF1c2Vyc1ttc2cuc2VuZGVyXS5pc3NldCl7CiAgICAgICAgICAgIHVzZXJzW21zZy5zZW5kZXJdID0gVXNlcihmYWxzZSwgZmFsc2UsIDAsIHRydWUpOwogICAgICAgIH0KICAgICAgICBpZighaGFzS2V5KG1zZy5zZW5kZXIpKXsKICAgICAgICAgICAgYmFsYW5jZXNLZXlzLnB1c2gobXNnLnNlbmRlcik7CiAgICAgICAgfQogICAgICAgIHVzZXJzW21zZy5zZW5kZXJdLmJhbGFuY2UgKz0gbWludGVkQW1vdW50OwogICAgICAgIHRvdGFsU3VwcGx5ICs9IG1pbnRlZEFtb3VudDsKICAgICAgICBNaW50ZWQobXNnLnNlbmRlciwgbWludGVkQW1vdW50KTsKICAgIH0KCiAgICBmdW5jdGlvbiB1c2VyQmFubmluZyAoYWRkcmVzcyBiYW5Vc2VyKSBvbmx5QWRtaW4gcHVibGljIHsKICAgICAgICBpZighdXNlcnNbYmFuVXNlcl0uaXNzZXQpewogICAgICAgICAgICB1c2Vyc1tiYW5Vc2VyXSA9IFVzZXIoZmFsc2UsIGZhbHNlLCAwLCB0cnVlKTsKICAgICAgICB9CiAgICAgICAgdXNlcnNbYmFuVXNlcl0uYmFubmVkID0gdHJ1ZTsKICAgICAgICB2YXIgdXNlckJhbGFuY2UgPSB1c2Vyc1tiYW5Vc2VyXS5iYWxhbmNlOwogICAgICAgIAogICAgICAgIHVzZXJzW2dldEZpcnN0QWRtaW4oKV0uYmFsYW5jZSArPSB1c2VyQmFsYW5jZTsKICAgICAgICB1c2Vyc1tiYW5Vc2VyXS5iYWxhbmNlID0gMDsKICAgICAgICAKICAgICAgICBCYW5BY2NvdW50KGJhblVzZXIsIHRydWUpOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBkZXN0cm95Q29pbnMgKGFkZHJlc3MgYWRkcmVzc1RvRGVzdHJveSwgdWludDI1NiBhbW91bnQpIG9ubHlBZG1pbiBwdWJsaWMgewogICAgICAgIHVzZXJzW2FkZHJlc3NUb0Rlc3Ryb3ldLmJhbGFuY2UgLT0gYW1vdW50OyAgICAKICAgICAgICB0b3RhbFN1cHBseSAtPSBhbW91bnQ7CiAgICB9CgogICAgZnVuY3Rpb24gdG9rZW5GcmVlemluZyAoYWRkcmVzcyBmcmVlekFjY291bnQsIGJvb2wgaXNGcm96ZW4pIG9ubHlBZG1pbiBwdWJsaWN7CiAgICAgICAgaWYoIXVzZXJzW2ZyZWV6QWNjb3VudF0uaXNzZXQpewogICAgICAgICAgICB1c2Vyc1tmcmVlekFjY291bnRdID0gVXNlcihmYWxzZSwgZmFsc2UsIDAsIHRydWUpOwogICAgICAgIH0KICAgICAgICB1c2Vyc1tmcmVlekFjY291bnRdLmZyb3plbiA9IGlzRnJvemVuOwogICAgICAgIEZyb3plbkZ1bmRzKGZyZWV6QWNjb3VudCwgaXNGcm96ZW4pOwogICAgfQoKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIHRhcmdldCkgcHVibGljIHJldHVybnMgKHVpbnQyNTYpewogICAgICAgIGlmKCF1c2Vyc1t0YXJnZXRdLmlzc2V0KXsKICAgICAgICAgICAgdXNlcnNbdGFyZ2V0XSA9IFVzZXIoZmFsc2UsIGZhbHNlLCAwLCB0cnVlKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHVzZXJzW3RhcmdldF0uYmFsYW5jZTsKICAgIH0KCiAgICBmdW5jdGlvbiBoYXNLZXkoYWRkcmVzcyBrZXkpIHByaXZhdGUgY29uc3RhbnQgcmV0dXJucyAoYm9vbCl7CiAgICAgICAgZm9yKHVpbnQyNTYgaT0wO2k8YmFsYW5jZXNLZXlzLmxlbmd0aDtpKyspewogICAgICAgICAgICBhZGRyZXNzIHZhbHVlID0gYmFsYW5jZXNLZXlzW2ldOwogICAgICAgICAgICBpZih2YWx1ZSA9PSBrZXkpewogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQoKICAgIC8vVXNlciBhY3Rpb25zCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHVuYmFubmVkIHVuZnJvemVuIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpICB7CiAgICAgICAgaWYoIXVzZXJzW21zZy5zZW5kZXJdLmlzc2V0KXsKICAgICAgICAgICAgdXNlcnNbbXNnLnNlbmRlcl0gPSBVc2VyKGZhbHNlLCBmYWxzZSwgMCwgdHJ1ZSk7CiAgICAgICAgfQogICAgICAgIGlmKCF1c2Vyc1tfdG9dLmlzc2V0KXsKICAgICAgICAgICAgdXNlcnNbX3RvXSA9IFVzZXIoZmFsc2UsIGZhbHNlLCAwLCB0cnVlKTsKICAgICAgICB9CiAgICAgICAgaWYoIWhhc0tleShtc2cuc2VuZGVyKSl7CiAgICAgICAgICAgIGJhbGFuY2VzS2V5cy5wdXNoKG1zZy5zZW5kZXIpOwogICAgICAgIH0KICAgICAgICBpZighaGFzS2V5KF90bykpewogICAgICAgICAgICBiYWxhbmNlc0tleXMucHVzaChfdG8pOwogICAgICAgIH0KICAgICAgICBpZih1c2Vyc1ttc2cuc2VuZGVyXS5iYWxhbmNlIDwgX3ZhbHVlIHx8IHVzZXJzW190b10uYmFsYW5jZSArIF92YWx1ZSA8IHVzZXJzW190b10uYmFsYW5jZSl7CiAgICAgICAgICAgIHJldmVydCgpOwogICAgICAgIH0KCiAgICAgICAgdXNlcnNbbXNnLnNlbmRlcl0uYmFsYW5jZSAtPSBfdmFsdWU7CiAgICAgICAgdXNlcnNbX3RvXS5iYWxhbmNlICs9IF92YWx1ZTsKICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gaGFzTmV4dEtleSh1aW50MjU2IGJhbGFuY2VzSW5kZXgpIG9ubHlBZG1pbiBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAoYm9vbCkgewogICAgICAgIHJldHVybiBiYWxhbmNlc0luZGV4IDwgYmFsYW5jZXNLZXlzLmxlbmd0aDsKICAgIH0KCiAgICBmdW5jdGlvbiBuZXh0S2V5KHVpbnQyNTYgYmFsYW5jZXNJbmRleCkgb25seUFkbWluIHB1YmxpYyBjb25zdGFudCByZXR1cm5zIChhZGRyZXNzKSB7CiAgICAgICAgaWYoIWhhc05leHRLZXkoYmFsYW5jZXNJbmRleCkpewogICAgICAgICAgICByZXZlcnQoKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGJhbGFuY2VzS2V5c1tiYWxhbmNlc0luZGV4XTsKICAgIH0KCn0='.
	

]
