Class {
	#name : #SRTb265e622f3bf17d40db0246bea1bb3d83b8c99d3,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTb265e622f3bf17d40db0246bea1bb3d83b8c99d3 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTY7CgovL0Jhc2UgY2xhc3Mgb2YgdG9rZW4tb3duZXIKY29udHJhY3QgT3duYWJsZSB7CglhZGRyZXNzIHB1YmxpYyBvd25lcjsJCQkJCQkJCQkJCQkJCS8vb3duZXIncyBhZGRyZXNzCgoJZnVuY3Rpb24gT3duYWJsZSgpIHB1YmxpYyAKCXsKCQlvd25lciA9IG1zZy5zZW5kZXI7Cgl9CgoJbW9kaWZpZXIgb25seU93bmVyKCkgewoJCXJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CgkJXzsKCX0KCS8qCgkqCUZ1bnRpb246IFRyYW5zZmVyIG93bmVyJ3MgYXV0aG9yaXR5IAoJKglUeXBlOlB1YmxpYyBhbmQgb25seU93bmVyCgkqCVBhcmFtZXRlcnM6CgkJCUBuZXdPd25lcjoJYWRkcmVzcyBvZiBuZXdPd25lcgoJKi8KCWZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpIG9ubHlPd25lciBwdWJsaWN7CgkJaWYgKG5ld093bmVyICE9IGFkZHJlc3MoMCkpIHsKCQlvd25lciA9IG5ld093bmVyOwoJCX0KCX0KCQoJZnVuY3Rpb24ga2lsbCgpIG9ubHlPd25lciBwdWJsaWN7CgkJc2VsZmRlc3RydWN0KG93bmVyKTsKCX0KfQoKLy9Bbm5vdW5jZW1lbnQgb2YgYW4gaW50ZXJmYWNlIGZvciByZWNpcGllbnQgYXBwcm92aW5nCmludGVyZmFjZSB0b2tlblJlY2lwaWVudCB7IAoJZnVuY3Rpb24gcmVjZWl2ZUFwcHJvdmFsKGFkZHJlc3MgX2Zyb20sIHVpbnQyNTYgX3ZhbHVlLCBhZGRyZXNzIF90b2tlbiwgYnl0ZXMgX2V4dHJhRGF0YSlwdWJsaWM7IAp9CgoKY29udHJhY3QgU3d0ZWNoVG9rZW4gaXMgT3duYWJsZXsKCQoJLy89PT09PT09PT09PT09PT09PT09cHVibGljIHZhcmlhYmxlcyBkZWZpbml0aW9uIHN0YXJ0PT09PT09PT09PT09PT09PT09CiAgICBzdHJpbmcgcHVibGljIG5hbWU7CQkJCQkJCQkJCQkJCQkJLy9OYW1lIG9mIHlvdXIgVG9rZW4KICAgIHN0cmluZyBwdWJsaWMgc3ltYm9sOwkJCQkJCQkJCQkJCQkJLy9TeW1ib2wgb2YgeW91ciBUb2tlbgogICAgdWludDggcHVibGljIGRlY2ltYWxzID0gMTg7CQkJCQkJCQkJCQkJCQkvL0RlY2ltYWxzIG9mIHlvdXIgVG9rZW4KICAgIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5OwkJCQkJCQkJCQkJCQkvL01heGltdW0gYW1vdW50IG9mIFRva2VuIHN1cHBsaWVzCgogICAgLy9kZWZpbmUgZGljdGlvbmFyaWVzIG9mIGJhbGFuY2UKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIGJhbGFuY2VPZjsJCQkJCQkJCS8vQW5ub3VuY2UgdGhlIGRpY3Rpb25hcnkgb2YgYWNjb3VudCdzIGJhbGFuY2UKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgcHVibGljIGFsbG93YW5jZTsJCQkvL0Fubm91bmNlIHRoZSBkaWN0aW9uYXJ5IG9mIGFjY291bnQncyBhdmFpbGFibGUgYmFsYW5jZQoJLy89PT09PT09PT09PT09PT09PT09cHVibGljIHZhcmlhYmxlcyBkZWZpbml0aW9uIGVuZD09PT09PT09PT09PT09PT09PQoKCQoJLy89PT09PT09PT09PT09PT09PT09ZXZlbnRzIGRlZmluaXRpb24gc3RhcnQ9PT09PT09PT09PT09PT09PT0gICAgCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHZhbHVlKTsJLy9FdmVudCBvbiBibG9ja2NoYWluIHdoaWNoIG5vdGlmeSBjbGllbnQKCS8vPT09PT09PT09PT09PT09PT09PWV2ZW50cyBkZWZpbml0aW9uIGVuZD09PT09PT09PT09PT09PT09PQoJCgkKCS8vPT09PT09PT09PT09PT09PT09PUNvbnRyYWN0IEluaXRpYWxpemF0aW9uIFNlcXVlbmNlIERlZmluaXRpb24gc3RhcnQ9PT09PT09PT09PT09PT09PT09CiAgICBmdW5jdGlvbiBTd3RlY2hUb2tlbiAoCiAgICAgICAgICAgIHVpbnQyNTYgaW5pdGlhbFN1cHBseSwKICAgICAgICAgICAgc3RyaW5nIHRva2VuTmFtZSwKICAgICAgICAgICAgc3RyaW5nIHRva2VuU3ltYm9sCiAgICAgICAgKSBwdWJsaWMgewogICAgICAgIHRvdGFsU3VwcGx5ID0gaW5pdGlhbFN1cHBseSAqIDEwICoqIHVpbnQyNTYoZGVjaW1hbHMpOyAgLy8gVXBkYXRlIHRvdGFsIHN1cHBseSB3aXRoIHRoZSBkZWNpbWFsIGFtb3VudAogICAgICAgIGJhbGFuY2VPZlttc2cuc2VuZGVyXSA9IHRvdGFsU3VwcGx5OyAgICAgICAgICAgICAgICAvLyBHaXZlIHRoZSBjcmVhdG9yIGFsbCBpbml0aWFsIHRva2VucwogICAgICAgIG5hbWUgPSB0b2tlbk5hbWU7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBTZXQgdGhlIG5hbWUgZm9yIGRpc3BsYXkgcHVycG9zZXMKICAgICAgICBzeW1ib2wgPSB0b2tlblN5bWJvbDsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gU2V0IHRoZSBzeW1ib2wgZm9yIGRpc3BsYXkgcHVycG9zZXMKICAgICAgICAKICAgIH0KCS8vPT09PT09PT09PT09PT09PT09PUNvbnRyYWN0IEluaXRpYWxpemF0aW9uIFNlcXVlbmNlIGRlZmluaXRpb24gZW5kPT09PT09PT09PT09PT09PT09PQoJCgkvLz09PT09PT09PT09PT09PT09PT1Db250cmFjdCBiZWhhdmlvciAmIGZ1bnRpb25zIGRlZmluaXRpb24gc3RhcnQ9PT09PT09PT09PT09PT09PT09CgkKCS8qCgkqCUZ1bnRpb246IFRyYW5zZmVyIGZ1bnRpb25zCgkqCVR5cGU6SW50ZXJuYWwKCSoJUGFyYW1ldGVyczoKCQkJQF9mcm9tOglhZGRyZXNzIG9mIHNlbmRlcidzIGFjY291bnQKCQkJQF90bzoJYWRkcmVzcyBvZiByZWNpcGllbnQncyBhY2NvdW50CgkJCUBfdmFsdWU6dHJhbnNhY3Rpb24gYW1vdW50CgkqLwogICAgZnVuY3Rpb24gX3RyYW5zZmVyKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSkgaW50ZXJuYWwgewoJCS8vRmF1bHQtdG9sZXJhbnQgcHJvY2Vzc2luZwoJCXJlcXVpcmUoX3RvICE9IDB4MCk7CQkJCQkJLy8KICAgICAgICByZXF1aXJlKGJhbGFuY2VPZltfZnJvbV0gPj0gX3ZhbHVlKTsKICAgICAgICByZXF1aXJlKGJhbGFuY2VPZltfdG9dICsgX3ZhbHVlID4gYmFsYW5jZU9mW190b10pOwoKICAgICAgICAvL0V4ZWN1dGUgdHJhbnNhY3Rpb24KCQl1aW50IHByZXZpb3VzQmFsYW5jZXMgPSBiYWxhbmNlT2ZbX2Zyb21dICsgYmFsYW5jZU9mW190b107CiAgICAgICAgYmFsYW5jZU9mW19mcm9tXSAtPSBfdmFsdWU7CiAgICAgICAgYmFsYW5jZU9mW190b10gKz0gX3ZhbHVlOwogICAgICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7CgkJCgkJLy9WZXJpZnkgdHJhbnNhY3Rpb24KICAgICAgICBhc3NlcnQoYmFsYW5jZU9mW19mcm9tXSArIGJhbGFuY2VPZltfdG9dID09IHByZXZpb3VzQmFsYW5jZXMpOwogICAgfQoJCgkKCS8qCgkqCUZ1bnRpb246IFRyYW5zZmVyIHRva2VucwoJKglUeXBlOlB1YmxpYwoJKglQYXJhbWV0ZXJzOgoJCQlAX3RvOglhZGRyZXNzIG9mIHJlY2lwaWVudCdzIGFjY291bnQKCQkJQF92YWx1ZTp0cmFuc2FjdGlvbiBhbW91bnQKCSovCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyB7CgkJCiAgICAgICAgX3RyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgIH0JCgkKCS8qCgkqCUZ1bnRpb246IFRyYW5zZmVyIHRva2VucyBmcm9tIG90aGVyIGFkZHJlc3MKCSoJVHlwZTpQdWJsaWMKCSoJUGFyYW1ldGVyczoKCQkJQF9mcm9tOglhZGRyZXNzIG9mIHNlbmRlcidzIGFjY291bnQKCQkJQF90bzoJYWRkcmVzcyBvZiByZWNpcGllbnQncyBhY2NvdW50CgkJCUBfdmFsdWU6dHJhbnNhY3Rpb24gYW1vdW50CgkqLwoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyAKCXJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIHJlcXVpcmUoX3ZhbHVlIDw9IGFsbG93YW5jZVtfZnJvbV1bbXNnLnNlbmRlcl0pOyAgICAgCQkJCQkvL0FsbG93YW5jZSB2ZXJpZmljYXRpb24KICAgICAgICBhbGxvd2FuY2VbX2Zyb21dW21zZy5zZW5kZXJdIC09IF92YWx1ZTsKICAgICAgICBfdHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIAoJLyoKCSoJRnVudGlvbjogQXBwcm92ZSB1c2FibGUgYW1vdW50IGZvciBhbiBhY2NvdW50CgkqCVR5cGU6UHVibGljCgkqCVBhcmFtZXRlcnM6CgkJCUBfc3BlbmRlcjoJYWRkcmVzcyBvZiBzcGVuZGVyJ3MgYWNjb3VudAoJCQlAX3ZhbHVlOglhcHByb3ZlIGFtb3VudAoJKi8KICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHB1YmxpYyAKICAgICAgICByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBhbGxvd2FuY2VbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0KCgkvKgoJKglGdW50aW9uOiBBcHByb3ZlIHVzYWJsZSBhbW91bnQgZm9yIG90aGVyIGFkZHJlc3MgYW5kIHRoZW4gbm90aWZ5IHRoZSBjb250cmFjdAoJKglUeXBlOlB1YmxpYwoJKglQYXJhbWV0ZXJzOgoJCQlAX3NwZW5kZXI6CWFkZHJlc3Mgb2Ygb3RoZXIgYWNjb3VudAoJCQlAX3ZhbHVlOglhcHByb3ZlIGFtb3VudAoJCQlAX2V4dHJhRGF0YTphZGRpdGlvbmFsIGluZm9ybWF0aW9uIHRvIHNlbmQgdG8gdGhlIGFwcHJvdmVkIGNvbnRyYWN0CgkqLwogICAgZnVuY3Rpb24gYXBwcm92ZUFuZENhbGwoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUsIGJ5dGVzIF9leHRyYURhdGEpIHB1YmxpYyAKICAgICAgICByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICB0b2tlblJlY2lwaWVudCBzcGVuZGVyID0gdG9rZW5SZWNpcGllbnQoX3NwZW5kZXIpOwogICAgICAgIGlmIChhcHByb3ZlKF9zcGVuZGVyLCBfdmFsdWUpKSB7CiAgICAgICAgICAgIHNwZW5kZXIucmVjZWl2ZUFwcHJvdmFsKG1zZy5zZW5kZXIsIF92YWx1ZSwgdGhpcywgX2V4dHJhRGF0YSk7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0KICAgIH0KICAgIC8qCgkqCUZ1bnRpb246IFRyYW5zZmVyIG93bmVyJ3MgYXV0aG9yaXR5IGFuZCBhY2NvdW50IGJhbGFuY2UKCSoJVHlwZTpQdWJsaWMgYW5kIG9ubHlPd25lcgoJKglQYXJhbWV0ZXJzOgoJCQlAbmV3T3duZXI6CWFkZHJlc3Mgb2YgbmV3T3duZXIKCSovCiAgICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcFdpdGhCYWxhbmNlKGFkZHJlc3MgbmV3T3duZXIpIG9ubHlPd25lciBwdWJsaWN7CgkJaWYgKG5ld093bmVyICE9IGFkZHJlc3MoMCkpIHsKCQkgICAgX3RyYW5zZmVyKG93bmVyLG5ld093bmVyLGJhbGFuY2VPZltvd25lcl0pOwoJCSAgICBvd25lciA9IG5ld093bmVyOwoJCX0KCX0KICAgLy89PT09PT09PT09PT09PT09PT09Q29udHJhY3QgYmVoYXZpb3IgJiBmdW50aW9ucyBkZWZpbml0aW9uIGVuZD09PT09PT09PT09PT09PT09PT0KfQ=='.
	

]
