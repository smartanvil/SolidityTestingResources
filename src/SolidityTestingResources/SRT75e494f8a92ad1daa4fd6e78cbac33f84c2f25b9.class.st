Class {
	#name : #SRT75e494f8a92ad1daa4fd6e78cbac33f84c2f25b9,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT75e494f8a92ad1daa4fd6e78cbac33f84c2f25b9 >> base64 [
	^ ''.
	

]
