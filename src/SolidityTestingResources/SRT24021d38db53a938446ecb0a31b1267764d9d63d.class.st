Class {
	#name : #SRT24021d38db53a938446ecb0a31b1267764d9d63d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT24021d38db53a938446ecb0a31b1267764d9d63d >> base64 [
	^ ''.
	

]
