Class {
	#name : #SRTd84b565cA3cfD495c80e310771107B95c6abF52a,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTd84b565cA3cfD495c80e310771107B95c6abF52a >> base64 [
	^ ''.
	

]
