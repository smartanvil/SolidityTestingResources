Class {
	#name : #SRT7dcdbd2c6548774d301811658ddcb0e75eca9881,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT7dcdbd2c6548774d301811658ddcb0e75eca9881 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMjA7Cgpjb250cmFjdCBUb2tlbiB7CgogICAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHN1cHBseSkge30KCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkge30KCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcykge30KCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHt9CgogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7fQoKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpIHt9CgogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50MjU2IF92YWx1ZSk7CiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKTsKCn0KCmNvbnRyYWN0IFN0YW5kYXJkVG9rZW4gaXMgVG9rZW4gewoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CgogICAgICAgIGlmIChiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfdmFsdWUgJiYgX3ZhbHVlID4gMCkgewogICAgICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgICAgIGJhbGFuY2VzW190b10gKz0gX3ZhbHVlOwogICAgICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0gZWxzZSB7IHJldHVybiBmYWxzZTsgfQogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewoKICAgICAgICBpZiAoYmFsYW5jZXNbX2Zyb21dID49IF92YWx1ZSAmJiBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA+PSBfdmFsdWUgJiYgX3ZhbHVlID4gMCkgewogICAgICAgICAgICBiYWxhbmNlc1tfdG9dICs9IF92YWx1ZTsKICAgICAgICAgICAgYmFsYW5jZXNbX2Zyb21dIC09IF92YWx1ZTsKICAgICAgICAgICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOwogICAgICAgICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9IGVsc2UgeyByZXR1cm4gZmFsc2U7IH0KICAgIH0KCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgewogICAgICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogICAgfQoKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpIHsKICAgICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07CiAgICB9CgogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsKICAgIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5Owp9Cgpjb250cmFjdCBWRVRSQSBpcyBTdGFuZGFyZFRva2VuIHsgCgogICAgc3RyaW5nIHB1YmxpYyBuYW1lOyAgICAgICAgICAgICAgICAgICAKICAgIHVpbnQ4IHB1YmxpYyBkZWNpbWFsczsgICAgICAgICAgICAgICAgCiAgICBzdHJpbmcgcHVibGljIHN5bWJvbDsgICAgICAgICAgICAgICAgCiAgICBzdHJpbmcgcHVibGljIHZlcnNpb24gPSAnVkVUUkEuMDQnOyAKICAgIHVpbnQyNTYgcHVibGljIHVuaXRzT25lRXRoQ2FuQnV5OyAgICAgCiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbEV0aEluV2VpOyAgICAgICAgIAogICAgYWRkcmVzcyBwdWJsaWMgZnVuZHNXYWxsZXQ7ICAKCiAgICAvLyBUaGlzIGlzIGEgY29uc3RydWN0b3IgZnVuY3Rpb24gCiAgICAvLyB3aGljaCBtZWFucyB0aGUgZm9sbG93aW5nIGZ1bmN0aW9uIG5hbWUgaGFzIHRvIG1hdGNoIHRoZSBjb250cmFjdCBuYW1lIGRlY2xhcmVkIGFib3ZlCiAgICBmdW5jdGlvbiBWRVRSQSgpIHsKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IDE4MDAwMDAwZTE4OyAgCiAgICAgICAgdG90YWxTdXBwbHkgPSAxODAwMDAwMGUxODsgIAogICAgICAgIG5hbWUgPSAiVkVUUkEiOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIGRlY2ltYWxzID0gMTg7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIHN5bWJvbCA9ICJWRVRSQSI7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIHVuaXRzT25lRXRoQ2FuQnV5ID0gMjAwMDA7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICBmdW5kc1dhbGxldCA9IG1zZy5zZW5kZXI7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgIH0KCiAgICBmdW5jdGlvbigpIHBheWFibGV7CiAgICAgICAgdG90YWxFdGhJbldlaSA9IHRvdGFsRXRoSW5XZWkgKyBtc2cudmFsdWU7CiAgICAgICAgdWludDI1NiBhbW91bnQgPSBtc2cudmFsdWUgKiB1bml0c09uZUV0aENhbkJ1eTsKICAgICAgICBpZiAoYmFsYW5jZXNbZnVuZHNXYWxsZXRdIDwgYW1vdW50KSB7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIGJhbGFuY2VzW2Z1bmRzV2FsbGV0XSA9IGJhbGFuY2VzW2Z1bmRzV2FsbGV0XSAtIGFtb3VudDsKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IGJhbGFuY2VzW21zZy5zZW5kZXJdICsgYW1vdW50OwoKICAgICAgICBUcmFuc2ZlcihmdW5kc1dhbGxldCwgbXNnLnNlbmRlciwgYW1vdW50KTsgCgogICAgICAgIGZ1bmRzV2FsbGV0LnRyYW5zZmVyKG1zZy52YWx1ZSk7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgfQoKIAogICAgZnVuY3Rpb24gYXBwcm92ZUFuZENhbGwoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUsIGJ5dGVzIF9leHRyYURhdGEpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwoKICAgICAgICBpZighX3NwZW5kZXIuY2FsbChieXRlczQoYnl0ZXMzMihzaGEzKCJyZWNlaXZlQXBwcm92YWwoYWRkcmVzcyx1aW50MjU2LGFkZHJlc3MsYnl0ZXMpIikpKSwgbXNnLnNlbmRlciwgX3ZhbHVlLCB0aGlzLCBfZXh0cmFEYXRhKSkgeyB0aHJvdzsgfQogICAgICAgIHJldHVybiB0cnVlOwogICAgfQp9'.
	

]
