Class {
	#name : #SRTf56f5ff3d7d36b6873b08d2e7054df3b2991be86,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTf56f5ff3d7d36b6873b08d2e7054df3b2991be86 >> base64 [
	^ ''.
	

]
