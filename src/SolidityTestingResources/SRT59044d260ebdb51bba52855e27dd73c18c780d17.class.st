Class {
	#name : #SRT59044d260ebdb51bba52855e27dd73c18c780d17,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT59044d260ebdb51bba52855e27dd73c18c780d17 >> base64 [
	^ ''.
	

]
