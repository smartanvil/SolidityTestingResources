Class {
	#name : #SRT8f811657b12f378fedd85af591be8bf8c22dd333,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT8f811657b12f378fedd85af591be8bf8c22dd333 >> base64 [
	^ ''.
	

]
