Class {
	#name : #SRT632a224FD49e3e4C2AAB5d63c57B772EeE807e68,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT632a224FD49e3e4C2AAB5d63c57B772EeE807e68 >> base64 [
	^ ''.
	

]
