Class {
	#name : #SRT85089389C14Bd9c77FC2b8F0c3d1dC3363Bf06Ef,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT85089389C14Bd9c77FC2b8F0c3d1dC3363Bf06Ef >> base64 [
	^ ''.
	

]
