Class {
	#name : #SRT5fbc020c3ee08c1a6909b2927e7dcab3afce8dea,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT5fbc020c3ee08c1a6909b2927e7dcab3afce8dea >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7CgpsaWJyYXJ5IEJkcENvbnRyYWN0cyB7CgoJZnVuY3Rpb24gZ2V0QmRwRW50cnlQb2ludChhZGRyZXNzWzE2XSBfY29udHJhY3RzKSBwdXJlIGludGVybmFsIHJldHVybnMgKGFkZHJlc3MpIHsKCQlyZXR1cm4gX2NvbnRyYWN0c1swXTsKCX0KCglmdW5jdGlvbiBnZXRCZHBDb250cm9sbGVyKGFkZHJlc3NbMTZdIF9jb250cmFjdHMpIHB1cmUgaW50ZXJuYWwgcmV0dXJucyAoYWRkcmVzcykgewoJCXJldHVybiBfY29udHJhY3RzWzFdOwoJfQoKCWZ1bmN0aW9uIGdldEJkcENvbnRyb2xsZXJIZWxwZXIoYWRkcmVzc1sxNl0gX2NvbnRyYWN0cykgcHVyZSBpbnRlcm5hbCByZXR1cm5zIChhZGRyZXNzKSB7CgkJcmV0dXJuIF9jb250cmFjdHNbM107Cgl9CgoJZnVuY3Rpb24gZ2V0QmRwRGF0YVN0b3JhZ2UoYWRkcmVzc1sxNl0gX2NvbnRyYWN0cykgcHVyZSBpbnRlcm5hbCByZXR1cm5zIChhZGRyZXNzKSB7CgkJcmV0dXJuIF9jb250cmFjdHNbNF07Cgl9CgoJZnVuY3Rpb24gZ2V0QmRwSW1hZ2VTdG9yYWdlKGFkZHJlc3NbMTZdIF9jb250cmFjdHMpIHB1cmUgaW50ZXJuYWwgcmV0dXJucyAoYWRkcmVzcykgewoJCXJldHVybiBfY29udHJhY3RzWzVdOwoJfQoKCWZ1bmN0aW9uIGdldEJkcE93bmVyc2hpcFN0b3JhZ2UoYWRkcmVzc1sxNl0gX2NvbnRyYWN0cykgcHVyZSBpbnRlcm5hbCByZXR1cm5zIChhZGRyZXNzKSB7CgkJcmV0dXJuIF9jb250cmFjdHNbNl07Cgl9CgoJZnVuY3Rpb24gZ2V0QmRwUHJpY2VTdG9yYWdlKGFkZHJlc3NbMTZdIF9jb250cmFjdHMpIHB1cmUgaW50ZXJuYWwgcmV0dXJucyAoYWRkcmVzcykgewoJCXJldHVybiBfY29udHJhY3RzWzddOwoJfQoKfQoKY29udHJhY3QgQmRwQmFzZURhdGEgewoKCWFkZHJlc3MgcHVibGljIG93bmVyQWRkcmVzczsKCglhZGRyZXNzIHB1YmxpYyBtYW5hZ2VyQWRkcmVzczsKCglhZGRyZXNzWzE2XSBwdWJsaWMgY29udHJhY3RzOwoKCWJvb2wgcHVibGljIHBhdXNlZCA9IGZhbHNlOwoKCWJvb2wgcHVibGljIHNldHVwQ29tcGxldGUgPSBmYWxzZTsKCglieXRlczggcHVibGljIHZlcnNpb247Cgp9Cgpjb250cmFjdCBCZHBCYXNlIGlzIEJkcEJhc2VEYXRhIHsKCgltb2RpZmllciBvbmx5T3duZXIoKSB7CgkJcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyQWRkcmVzcyk7CgkJXzsKCX0KCgltb2RpZmllciBvbmx5QXV0aG9yaXplZCgpIHsKCQlyZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXJBZGRyZXNzIHx8IG1zZy5zZW5kZXIgPT0gbWFuYWdlckFkZHJlc3MpOwoJCV87Cgl9CgoJbW9kaWZpZXIgd2hlbkNvbnRyYWN0QWN0aXZlKCkgewoJCXJlcXVpcmUoIXBhdXNlZCAmJiBzZXR1cENvbXBsZXRlKTsKCQlfOwoJfQoKCW1vZGlmaWVyIHN0b3JhZ2VBY2Nlc3NDb250cm9sKCkgewoJCXJlcXVpcmUoCgkJCSghIHNldHVwQ29tcGxldGUgJiYgKG1zZy5zZW5kZXIgPT0gb3duZXJBZGRyZXNzIHx8IG1zZy5zZW5kZXIgPT0gbWFuYWdlckFkZHJlc3MpKQoJCQl8fCAoc2V0dXBDb21wbGV0ZSAmJiAhcGF1c2VkICYmIChtc2cuc2VuZGVyID09IEJkcENvbnRyYWN0cy5nZXRCZHBFbnRyeVBvaW50KGNvbnRyYWN0cykpKQoJCSk7CgkJXzsKCX0KCglmdW5jdGlvbiBzZXRPd25lcihhZGRyZXNzIF9uZXdPd25lcikgZXh0ZXJuYWwgb25seU93bmVyIHsKCQlyZXF1aXJlKF9uZXdPd25lciAhPSBhZGRyZXNzKDApKTsKCQlvd25lckFkZHJlc3MgPSBfbmV3T3duZXI7Cgl9CgoJZnVuY3Rpb24gc2V0TWFuYWdlcihhZGRyZXNzIF9uZXdNYW5hZ2VyKSBleHRlcm5hbCBvbmx5T3duZXIgewoJCXJlcXVpcmUoX25ld01hbmFnZXIgIT0gYWRkcmVzcygwKSk7CgkJbWFuYWdlckFkZHJlc3MgPSBfbmV3TWFuYWdlcjsKCX0KCglmdW5jdGlvbiBzZXRDb250cmFjdHMoYWRkcmVzc1sxNl0gX2NvbnRyYWN0cykgZXh0ZXJuYWwgb25seU93bmVyIHsKCQljb250cmFjdHMgPSBfY29udHJhY3RzOwoJfQoKCWZ1bmN0aW9uIHBhdXNlKCkgZXh0ZXJuYWwgb25seUF1dGhvcml6ZWQgewoJCXBhdXNlZCA9IHRydWU7Cgl9CgoJZnVuY3Rpb24gdW5wYXVzZSgpIGV4dGVybmFsIG9ubHlPd25lciB7CgkJcGF1c2VkID0gZmFsc2U7Cgl9CgoJZnVuY3Rpb24gc2V0U2V0dXBDb21wbGV0ZSgpIGV4dGVybmFsIG9ubHlPd25lciB7CgkJc2V0dXBDb21wbGV0ZSA9IHRydWU7Cgl9CgoJZnVuY3Rpb24ga2lsbCgpIHB1YmxpYyBvbmx5T3duZXIgewoJCXNlbGZkZXN0cnVjdChvd25lckFkZHJlc3MpOwoJfQoKfQoKLyoqCiAqIEB0aXRsZSBTYWZlTWF0aAogKiBAZGV2IE1hdGggb3BlcmF0aW9ucyB3aXRoIHNhZmV0eSBjaGVja3MgdGhhdCB0aHJvdyBvbiBlcnJvcgogKi8KbGlicmFyeSBTYWZlTWF0aCB7CgogIC8qKgogICogQGRldiBNdWx0aXBsaWVzIHR3byBudW1iZXJzLCB0aHJvd3Mgb24gb3ZlcmZsb3cuCiAgKi8KICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgaWYgKGEgPT0gMCkgewogICAgICByZXR1cm4gMDsKICAgIH0KICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGMgLyBhID09IGIpOwogICAgcmV0dXJuIGM7CiAgfQoKICAvKioKICAqIEBkZXYgSW50ZWdlciBkaXZpc2lvbiBvZiB0d28gbnVtYmVycywgdHJ1bmNhdGluZyB0aGUgcXVvdGllbnQuCiAgKi8KICBmdW5jdGlvbiBkaXYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgLy8gYXNzZXJ0KGIgPiAwKTsgLy8gU29saWRpdHkgYXV0b21hdGljYWxseSB0aHJvd3Mgd2hlbiBkaXZpZGluZyBieSAwCiAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgIC8vIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOyAvLyBUaGVyZSBpcyBubyBjYXNlIGluIHdoaWNoIHRoaXMgZG9lc24ndCBob2xkCiAgICByZXR1cm4gYzsKICB9CgogIC8qKgogICogQGRldiBTdWJzdHJhY3RzIHR3byBudW1iZXJzLCB0aHJvd3Mgb24gb3ZlcmZsb3cgKGkuZS4gaWYgc3VidHJhaGVuZCBpcyBncmVhdGVyIHRoYW4gbWludWVuZCkuCiAgKi8KICBmdW5jdGlvbiBzdWIodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICAvKioKICAqIEBkZXYgQWRkcyB0d28gbnVtYmVycywgdGhyb3dzIG9uIG92ZXJmbG93LgogICovCiAgZnVuY3Rpb24gYWRkKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgYXNzZXJ0KGMgPj0gYSk7CiAgICByZXR1cm4gYzsKICB9Cn0KCmNvbnRyYWN0IEJkcERhdGFTdG9yYWdlIGlzIEJkcEJhc2UgewoKCXVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwoKCXN0cnVjdCBSZWdpb24gewoJCXVpbnQyNTYgeDE7CgkJdWludDI1NiB5MTsKCQl1aW50MjU2IHgyOwoJCXVpbnQyNTYgeTI7CgkJdWludDI1NiBjdXJyZW50SW1hZ2VJZDsKCQl1aW50MjU2IG5leHRJbWFnZUlkOwoJCXVpbnQ4WzEyOF0gdXJsOwoJCXVpbnQyNTYgY3VycmVudFBpeGVsUHJpY2U7CgkJdWludDI1NiBibG9ja1VwZGF0ZWRBdDsKCQl1aW50MjU2IHVwZGF0ZWRBdDsKCQl1aW50MjU2IHB1cmNoYXNlZEF0OwoJCXVpbnQyNTYgcHVyY2hhc2VkUGl4ZWxQcmljZTsKCX0KCgl1aW50MjU2IHB1YmxpYyBsYXN0UmVnaW9uSWQgPSAwOwoKCW1hcHBpbmcgKHVpbnQyNTYgPT4gUmVnaW9uKSBwdWJsaWMgZGF0YTsKCgoJZnVuY3Rpb24gZ2V0TGFzdFJlZ2lvbklkKCkgdmlldyBwdWJsaWMgcmV0dXJucyAodWludDI1NikgewoJCXJldHVybiBsYXN0UmVnaW9uSWQ7Cgl9CgoJZnVuY3Rpb24gZ2V0TmV4dFJlZ2lvbklkKCkgcHVibGljIHN0b3JhZ2VBY2Nlc3NDb250cm9sIHJldHVybnMgKHVpbnQyNTYpIHsKCQlsYXN0UmVnaW9uSWQgPSBsYXN0UmVnaW9uSWQuYWRkKDEpOwoJCXJldHVybiBsYXN0UmVnaW9uSWQ7Cgl9CgoJZnVuY3Rpb24gZGVsZXRlUmVnaW9uRGF0YSh1aW50MjU2IF9pZCkgcHVibGljIHN0b3JhZ2VBY2Nlc3NDb250cm9sIHsKCQlkZWxldGUgZGF0YVtfaWRdOwoJfQoKCWZ1bmN0aW9uIGdldFJlZ2lvbkNvb3JkaW5hdGVzKHVpbnQyNTYgX2lkKSB2aWV3IHB1YmxpYyByZXR1cm5zICh1aW50MjU2LCB1aW50MjU2LCB1aW50MjU2LCB1aW50MjU2KSB7CgkJcmV0dXJuIChkYXRhW19pZF0ueDEsIGRhdGFbX2lkXS55MSwgZGF0YVtfaWRdLngyLCBkYXRhW19pZF0ueTIpOwoJfQoKCWZ1bmN0aW9uIHNldFJlZ2lvbkNvb3JkaW5hdGVzKHVpbnQyNTYgX2lkLCB1aW50MjU2IF94MSwgdWludDI1NiBfeTEsIHVpbnQyNTYgX3gyLCB1aW50MjU2IF95MikgcHVibGljIHN0b3JhZ2VBY2Nlc3NDb250cm9sIHsKCQlkYXRhW19pZF0ueDEgPSBfeDE7CgkJZGF0YVtfaWRdLnkxID0gX3kxOwoJCWRhdGFbX2lkXS54MiA9IF94MjsKCQlkYXRhW19pZF0ueTIgPSBfeTI7Cgl9CgoJZnVuY3Rpb24gZ2V0UmVnaW9uQ3VycmVudEltYWdlSWQodWludDI1NiBfaWQpIHZpZXcgcHVibGljIHJldHVybnMgKHVpbnQyNTYpIHsKCQlyZXR1cm4gZGF0YVtfaWRdLmN1cnJlbnRJbWFnZUlkOwoJfQoKCWZ1bmN0aW9uIHNldFJlZ2lvbkN1cnJlbnRJbWFnZUlkKHVpbnQyNTYgX2lkLCB1aW50MjU2IF9jdXJyZW50SW1hZ2VJZCkgcHVibGljIHN0b3JhZ2VBY2Nlc3NDb250cm9sIHsKCQlkYXRhW19pZF0uY3VycmVudEltYWdlSWQgPSBfY3VycmVudEltYWdlSWQ7Cgl9CgoJZnVuY3Rpb24gZ2V0UmVnaW9uTmV4dEltYWdlSWQodWludDI1NiBfaWQpIHZpZXcgcHVibGljIHJldHVybnMgKHVpbnQyNTYpIHsKCQlyZXR1cm4gZGF0YVtfaWRdLm5leHRJbWFnZUlkOwoJfQoKCWZ1bmN0aW9uIHNldFJlZ2lvbk5leHRJbWFnZUlkKHVpbnQyNTYgX2lkLCB1aW50MjU2IF9uZXh0SW1hZ2VJZCkgcHVibGljIHN0b3JhZ2VBY2Nlc3NDb250cm9sIHsKCQlkYXRhW19pZF0ubmV4dEltYWdlSWQgPSBfbmV4dEltYWdlSWQ7Cgl9CgoJZnVuY3Rpb24gZ2V0UmVnaW9uVXJsKHVpbnQyNTYgX2lkKSB2aWV3IHB1YmxpYyByZXR1cm5zICh1aW50OFsxMjhdKSB7CgkJcmV0dXJuIGRhdGFbX2lkXS51cmw7Cgl9CgoJZnVuY3Rpb24gc2V0UmVnaW9uVXJsKHVpbnQyNTYgX2lkLCB1aW50OFsxMjhdIF91cmwpIHB1YmxpYyBzdG9yYWdlQWNjZXNzQ29udHJvbCB7CgkJZGF0YVtfaWRdLnVybCA9IF91cmw7Cgl9CgoJZnVuY3Rpb24gZ2V0UmVnaW9uQ3VycmVudFBpeGVsUHJpY2UodWludDI1NiBfaWQpIHZpZXcgcHVibGljIHJldHVybnMgKHVpbnQyNTYpIHsKCQlyZXR1cm4gZGF0YVtfaWRdLmN1cnJlbnRQaXhlbFByaWNlOwoJfQoKCWZ1bmN0aW9uIHNldFJlZ2lvbkN1cnJlbnRQaXhlbFByaWNlKHVpbnQyNTYgX2lkLCB1aW50MjU2IF9jdXJyZW50UGl4ZWxQcmljZSkgcHVibGljIHN0b3JhZ2VBY2Nlc3NDb250cm9sIHsKCQlkYXRhW19pZF0uY3VycmVudFBpeGVsUHJpY2UgPSBfY3VycmVudFBpeGVsUHJpY2U7Cgl9CgoJZnVuY3Rpb24gZ2V0UmVnaW9uQmxvY2tVcGRhdGVkQXQodWludDI1NiBfaWQpIHZpZXcgcHVibGljIHJldHVybnMgKHVpbnQyNTYpIHsKCQlyZXR1cm4gZGF0YVtfaWRdLmJsb2NrVXBkYXRlZEF0OwoJfQoKCWZ1bmN0aW9uIHNldFJlZ2lvbkJsb2NrVXBkYXRlZEF0KHVpbnQyNTYgX2lkLCB1aW50MjU2IF9ibG9ja1VwZGF0ZWRBdCkgcHVibGljIHN0b3JhZ2VBY2Nlc3NDb250cm9sIHsKCQlkYXRhW19pZF0uYmxvY2tVcGRhdGVkQXQgPSBfYmxvY2tVcGRhdGVkQXQ7Cgl9CgoJZnVuY3Rpb24gZ2V0UmVnaW9uVXBkYXRlZEF0KHVpbnQyNTYgX2lkKSB2aWV3IHB1YmxpYyByZXR1cm5zICh1aW50MjU2KSB7CgkJcmV0dXJuIGRhdGFbX2lkXS51cGRhdGVkQXQ7Cgl9CgoJZnVuY3Rpb24gc2V0UmVnaW9uVXBkYXRlZEF0KHVpbnQyNTYgX2lkLCB1aW50MjU2IF91cGRhdGVkQXQpIHB1YmxpYyBzdG9yYWdlQWNjZXNzQ29udHJvbCB7CgkJZGF0YVtfaWRdLnVwZGF0ZWRBdCA9IF91cGRhdGVkQXQ7Cgl9CgoJZnVuY3Rpb24gZ2V0UmVnaW9uUHVyY2hhc2VkQXQodWludDI1NiBfaWQpIHZpZXcgcHVibGljIHJldHVybnMgKHVpbnQyNTYpIHsKCQlyZXR1cm4gZGF0YVtfaWRdLnB1cmNoYXNlZEF0OwoJfQoKCWZ1bmN0aW9uIHNldFJlZ2lvblB1cmNoYXNlZEF0KHVpbnQyNTYgX2lkLCB1aW50MjU2IF9wdXJjaGFzZWRBdCkgcHVibGljIHN0b3JhZ2VBY2Nlc3NDb250cm9sIHsKCQlkYXRhW19pZF0ucHVyY2hhc2VkQXQgPSBfcHVyY2hhc2VkQXQ7Cgl9CgoJZnVuY3Rpb24gZ2V0UmVnaW9uVXBkYXRlZEF0UHVyY2hhc2VkQXQodWludDI1NiBfaWQpIHZpZXcgcHVibGljIHJldHVybnMgKHVpbnQyNTYgX3VwZGF0ZWRBdCwgdWludDI1NiBfcHVyY2hhc2VkQXQpIHsKCQlyZXR1cm4gKGRhdGFbX2lkXS51cGRhdGVkQXQsIGRhdGFbX2lkXS5wdXJjaGFzZWRBdCk7Cgl9CgoJZnVuY3Rpb24gZ2V0UmVnaW9uUHVyY2hhc2VQaXhlbFByaWNlKHVpbnQyNTYgX2lkKSB2aWV3IHB1YmxpYyByZXR1cm5zICh1aW50MjU2KSB7CgkJcmV0dXJuIGRhdGFbX2lkXS5wdXJjaGFzZWRQaXhlbFByaWNlOwoJfQoKCWZ1bmN0aW9uIHNldFJlZ2lvblB1cmNoYXNlZFBpeGVsUHJpY2UodWludDI1NiBfaWQsIHVpbnQyNTYgX3B1cmNoYXNlZFBpeGVsUHJpY2UpIHB1YmxpYyBzdG9yYWdlQWNjZXNzQ29udHJvbCB7CgkJZGF0YVtfaWRdLnB1cmNoYXNlZFBpeGVsUHJpY2UgPSBfcHVyY2hhc2VkUGl4ZWxQcmljZTsKCX0KCglmdW5jdGlvbiBCZHBEYXRhU3RvcmFnZShieXRlczggX3ZlcnNpb24pIHB1YmxpYyB7CgkJb3duZXJBZGRyZXNzID0gbXNnLnNlbmRlcjsKCQltYW5hZ2VyQWRkcmVzcyA9IG1zZy5zZW5kZXI7CgkJdmVyc2lvbiA9IF92ZXJzaW9uOwoJfQoKfQoKY29udHJhY3QgQmRwSW1hZ2VTdG9yYWdlIGlzIEJkcEJhc2UgewoKCXVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwoKCXN0cnVjdCBJbWFnZSB7CgkJYWRkcmVzcyBvd25lcjsKCQl1aW50MjU2IHJlZ2lvbklkOwoJCXVpbnQyNTYgY3VycmVudFJlZ2lvbklkOwoJCW1hcHBpbmcodWludDE2ID0+IHVpbnQyNTZbMTAwMF0pIGRhdGE7CgkJbWFwcGluZyh1aW50MTYgPT4gdWludDE2KSBkYXRhTGVuZ3RoOwoJCXVpbnQxNiBwYXJ0c0NvdW50OwoJCXVpbnQxNiB3aWR0aDsKCQl1aW50MTYgaGVpZ2h0OwoJCXVpbnQxNiBpbWFnZURlc2NyaXB0b3I7CgkJdWludDI1NiBibHVycmVkQXQ7Cgl9CgoJdWludDI1NiBwdWJsaWMgbGFzdEltYWdlSWQgPSAwOwoKCW1hcHBpbmcodWludDI1NiA9PiBJbWFnZSkgcHVibGljIGltYWdlczsKCgoJZnVuY3Rpb24gZ2V0TGFzdEltYWdlSWQoKSB2aWV3IHB1YmxpYyByZXR1cm5zICh1aW50MjU2KSB7CgkJcmV0dXJuIGxhc3RJbWFnZUlkOwoJfQoKCWZ1bmN0aW9uIGdldE5leHRJbWFnZUlkKCkgcHVibGljIHN0b3JhZ2VBY2Nlc3NDb250cm9sIHJldHVybnMgKHVpbnQyNTYpIHsKCQlsYXN0SW1hZ2VJZCA9IGxhc3RJbWFnZUlkLmFkZCgxKTsKCQlyZXR1cm4gbGFzdEltYWdlSWQ7Cgl9CgoJZnVuY3Rpb24gY3JlYXRlSW1hZ2UoYWRkcmVzcyBfb3duZXIsIHVpbnQyNTYgX3JlZ2lvbklkLCB1aW50MTYgX3dpZHRoLCB1aW50MTYgX2hlaWdodCwgdWludDE2IF9wYXJ0c0NvdW50LCB1aW50MTYgX2ltYWdlRGVzY3JpcHRvcikgcHVibGljIHN0b3JhZ2VBY2Nlc3NDb250cm9sIHJldHVybnMgKHVpbnQyNTYpIHsKCQlyZXF1aXJlKF9vd25lciAhPSBhZGRyZXNzKDApICYmIF93aWR0aCA+IDAgJiYgX2hlaWdodCA+IDAgJiYgX3BhcnRzQ291bnQgPiAwICYmIF9pbWFnZURlc2NyaXB0b3IgPiAwKTsKCQl1aW50MjU2IGlkID0gZ2V0TmV4dEltYWdlSWQoKTsKCQlpbWFnZXNbaWRdLm93bmVyID0gX293bmVyOwoJCWltYWdlc1tpZF0ucmVnaW9uSWQgPSBfcmVnaW9uSWQ7CgkJaW1hZ2VzW2lkXS53aWR0aCA9IF93aWR0aDsKCQlpbWFnZXNbaWRdLmhlaWdodCA9IF9oZWlnaHQ7CgkJaW1hZ2VzW2lkXS5wYXJ0c0NvdW50ID0gX3BhcnRzQ291bnQ7CgkJaW1hZ2VzW2lkXS5pbWFnZURlc2NyaXB0b3IgPSBfaW1hZ2VEZXNjcmlwdG9yOwoJCXJldHVybiBpZDsKCX0KCglmdW5jdGlvbiBpbWFnZUV4aXN0cyh1aW50MjU2IF9pbWFnZUlkKSB2aWV3IHB1YmxpYyByZXR1cm5zIChib29sKSB7CgkJcmV0dXJuIF9pbWFnZUlkID4gMCAmJiBpbWFnZXNbX2ltYWdlSWRdLm93bmVyICE9IGFkZHJlc3MoMCk7Cgl9CgoJZnVuY3Rpb24gZGVsZXRlSW1hZ2UodWludDI1NiBfaW1hZ2VJZCkgcHVibGljIHN0b3JhZ2VBY2Nlc3NDb250cm9sIHsKCQlyZXF1aXJlKGltYWdlRXhpc3RzKF9pbWFnZUlkKSk7CgkJZGVsZXRlIGltYWdlc1tfaW1hZ2VJZF07Cgl9CgoJZnVuY3Rpb24gZ2V0SW1hZ2VPd25lcih1aW50MjU2IF9pbWFnZUlkKSBwdWJsaWMgdmlldyByZXR1cm5zIChhZGRyZXNzKSB7CgkJcmVxdWlyZShpbWFnZUV4aXN0cyhfaW1hZ2VJZCkpOwoJCXJldHVybiBpbWFnZXNbX2ltYWdlSWRdLm93bmVyOwoJfQoKCWZ1bmN0aW9uIHNldEltYWdlT3duZXIodWludDI1NiBfaW1hZ2VJZCwgYWRkcmVzcyBfb3duZXIpIHB1YmxpYyBzdG9yYWdlQWNjZXNzQ29udHJvbCB7CgkJcmVxdWlyZShpbWFnZUV4aXN0cyhfaW1hZ2VJZCkpOwoJCWltYWdlc1tfaW1hZ2VJZF0ub3duZXIgPSBfb3duZXI7Cgl9CgoJZnVuY3Rpb24gZ2V0SW1hZ2VSZWdpb25JZCh1aW50MjU2IF9pbWFnZUlkKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2KSB7CgkJcmVxdWlyZShpbWFnZUV4aXN0cyhfaW1hZ2VJZCkpOwoJCXJldHVybiBpbWFnZXNbX2ltYWdlSWRdLnJlZ2lvbklkOwoJfQoKCWZ1bmN0aW9uIHNldEltYWdlUmVnaW9uSWQodWludDI1NiBfaW1hZ2VJZCwgdWludDI1NiBfcmVnaW9uSWQpIHB1YmxpYyBzdG9yYWdlQWNjZXNzQ29udHJvbCB7CgkJcmVxdWlyZShpbWFnZUV4aXN0cyhfaW1hZ2VJZCkpOwoJCWltYWdlc1tfaW1hZ2VJZF0ucmVnaW9uSWQgPSBfcmVnaW9uSWQ7Cgl9CgoJZnVuY3Rpb24gZ2V0SW1hZ2VDdXJyZW50UmVnaW9uSWQodWludDI1NiBfaW1hZ2VJZCkgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1NikgewoJCXJlcXVpcmUoaW1hZ2VFeGlzdHMoX2ltYWdlSWQpKTsKCQlyZXR1cm4gaW1hZ2VzW19pbWFnZUlkXS5jdXJyZW50UmVnaW9uSWQ7Cgl9CgoJZnVuY3Rpb24gc2V0SW1hZ2VDdXJyZW50UmVnaW9uSWQodWludDI1NiBfaW1hZ2VJZCwgdWludDI1NiBfY3VycmVudFJlZ2lvbklkKSBwdWJsaWMgc3RvcmFnZUFjY2Vzc0NvbnRyb2wgewoJCXJlcXVpcmUoaW1hZ2VFeGlzdHMoX2ltYWdlSWQpKTsKCQlpbWFnZXNbX2ltYWdlSWRdLmN1cnJlbnRSZWdpb25JZCA9IF9jdXJyZW50UmVnaW9uSWQ7Cgl9CgoJZnVuY3Rpb24gZ2V0SW1hZ2VEYXRhKHVpbnQyNTYgX2ltYWdlSWQsIHVpbnQxNiBfcGFydCkgdmlldyBwdWJsaWMgcmV0dXJucyAodWludDI1NlsxMDAwXSkgewoJCXJlcXVpcmUoaW1hZ2VFeGlzdHMoX2ltYWdlSWQpKTsKCQlyZXR1cm4gaW1hZ2VzW19pbWFnZUlkXS5kYXRhW19wYXJ0XTsKCX0KCglmdW5jdGlvbiBzZXRJbWFnZURhdGEodWludDI1NiBfaW1hZ2VJZCwgdWludDE2IF9wYXJ0LCB1aW50MjU2W10gX2RhdGEpIHB1YmxpYyBzdG9yYWdlQWNjZXNzQ29udHJvbCB7CgkJcmVxdWlyZShpbWFnZUV4aXN0cyhfaW1hZ2VJZCkpOwoJCWltYWdlc1tfaW1hZ2VJZF0uZGF0YUxlbmd0aFtfcGFydF0gPSB1aW50MTYoX2RhdGEubGVuZ3RoKTsKCQlmb3IgKHVpbnQyNTYgaSA9IDA7IGkgPCBfZGF0YS5sZW5ndGg7IGkrKykgewoJCQlpbWFnZXNbX2ltYWdlSWRdLmRhdGFbX3BhcnRdW2ldID0gX2RhdGFbaV07CgkJfQoJfQoKCWZ1bmN0aW9uIGdldEltYWdlRGF0YUxlbmd0aCh1aW50MjU2IF9pbWFnZUlkLCB1aW50MTYgX3BhcnQpIHZpZXcgcHVibGljIHJldHVybnMgKHVpbnQxNikgewoJCXJlcXVpcmUoaW1hZ2VFeGlzdHMoX2ltYWdlSWQpKTsKCQlyZXR1cm4gaW1hZ2VzW19pbWFnZUlkXS5kYXRhTGVuZ3RoW19wYXJ0XTsKCX0KCglmdW5jdGlvbiBzZXRJbWFnZURhdGFMZW5ndGgodWludDI1NiBfaW1hZ2VJZCwgdWludDE2IF9wYXJ0LCB1aW50MTYgX2RhdGFMZW5ndGgpIHB1YmxpYyBzdG9yYWdlQWNjZXNzQ29udHJvbCB7CgkJcmVxdWlyZShpbWFnZUV4aXN0cyhfaW1hZ2VJZCkpOwoJCWltYWdlc1tfaW1hZ2VJZF0uZGF0YUxlbmd0aFtfcGFydF0gPSBfZGF0YUxlbmd0aDsKCX0KCglmdW5jdGlvbiBnZXRJbWFnZVBhcnRzQ291bnQodWludDI1NiBfaW1hZ2VJZCkgdmlldyBwdWJsaWMgcmV0dXJucyAodWludDE2KSB7CgkJcmVxdWlyZShpbWFnZUV4aXN0cyhfaW1hZ2VJZCkpOwoJCXJldHVybiBpbWFnZXNbX2ltYWdlSWRdLnBhcnRzQ291bnQ7Cgl9CgoJZnVuY3Rpb24gc2V0SW1hZ2VQYXJ0c0NvdW50KHVpbnQyNTYgX2ltYWdlSWQsIHVpbnQxNiBfcGFydHNDb3VudCkgcHVibGljIHN0b3JhZ2VBY2Nlc3NDb250cm9sIHsKCQlyZXF1aXJlKGltYWdlRXhpc3RzKF9pbWFnZUlkKSk7CgkJaW1hZ2VzW19pbWFnZUlkXS5wYXJ0c0NvdW50ID0gX3BhcnRzQ291bnQ7Cgl9CgoJZnVuY3Rpb24gZ2V0SW1hZ2VXaWR0aCh1aW50MjU2IF9pbWFnZUlkKSB2aWV3IHB1YmxpYyByZXR1cm5zICh1aW50MTYpIHsKCQlyZXF1aXJlKGltYWdlRXhpc3RzKF9pbWFnZUlkKSk7CgkJcmV0dXJuIGltYWdlc1tfaW1hZ2VJZF0ud2lkdGg7Cgl9CgoJZnVuY3Rpb24gc2V0SW1hZ2VXaWR0aCh1aW50MjU2IF9pbWFnZUlkLCB1aW50MTYgX3dpZHRoKSBwdWJsaWMgc3RvcmFnZUFjY2Vzc0NvbnRyb2wgewoJCXJlcXVpcmUoaW1hZ2VFeGlzdHMoX2ltYWdlSWQpKTsKCQlpbWFnZXNbX2ltYWdlSWRdLndpZHRoID0gX3dpZHRoOwoJfQoKCWZ1bmN0aW9uIGdldEltYWdlSGVpZ2h0KHVpbnQyNTYgX2ltYWdlSWQpIHZpZXcgcHVibGljIHJldHVybnMgKHVpbnQxNikgewoJCXJlcXVpcmUoaW1hZ2VFeGlzdHMoX2ltYWdlSWQpKTsKCQlyZXR1cm4gaW1hZ2VzW19pbWFnZUlkXS5oZWlnaHQ7Cgl9CgoJZnVuY3Rpb24gc2V0SW1hZ2VIZWlnaHQodWludDI1NiBfaW1hZ2VJZCwgdWludDE2IF9oZWlnaHQpIHB1YmxpYyBzdG9yYWdlQWNjZXNzQ29udHJvbCB7CgkJcmVxdWlyZShpbWFnZUV4aXN0cyhfaW1hZ2VJZCkpOwoJCWltYWdlc1tfaW1hZ2VJZF0uaGVpZ2h0ID0gX2hlaWdodDsKCX0KCglmdW5jdGlvbiBnZXRJbWFnZURlc2NyaXB0b3IodWludDI1NiBfaW1hZ2VJZCkgdmlldyBwdWJsaWMgcmV0dXJucyAodWludDE2KSB7CgkJcmVxdWlyZShpbWFnZUV4aXN0cyhfaW1hZ2VJZCkpOwoJCXJldHVybiBpbWFnZXNbX2ltYWdlSWRdLmltYWdlRGVzY3JpcHRvcjsKCX0KCglmdW5jdGlvbiBzZXRJbWFnZURlc2NyaXB0b3IodWludDI1NiBfaW1hZ2VJZCwgdWludDE2IF9pbWFnZURlc2NyaXB0b3IpIHB1YmxpYyBzdG9yYWdlQWNjZXNzQ29udHJvbCB7CgkJcmVxdWlyZShpbWFnZUV4aXN0cyhfaW1hZ2VJZCkpOwoJCWltYWdlc1tfaW1hZ2VJZF0uaW1hZ2VEZXNjcmlwdG9yID0gX2ltYWdlRGVzY3JpcHRvcjsKCX0KCglmdW5jdGlvbiBnZXRJbWFnZUJsdXJyZWRBdCh1aW50MjU2IF9pbWFnZUlkKSB2aWV3IHB1YmxpYyByZXR1cm5zICh1aW50MjU2KSB7CgkJcmV0dXJuIGltYWdlc1tfaW1hZ2VJZF0uYmx1cnJlZEF0OwoJfQoKCWZ1bmN0aW9uIHNldEltYWdlQmx1cnJlZEF0KHVpbnQyNTYgX2ltYWdlSWQsIHVpbnQyNTYgX2JsdXJyZWRBdCkgcHVibGljIHN0b3JhZ2VBY2Nlc3NDb250cm9sIHsKCQlpbWFnZXNbX2ltYWdlSWRdLmJsdXJyZWRBdCA9IF9ibHVycmVkQXQ7Cgl9CgoJZnVuY3Rpb24gaW1hZ2VVcGxvYWRDb21wbGV0ZSh1aW50MjU2IF9pbWFnZUlkKSB2aWV3IHB1YmxpYyByZXR1cm5zIChib29sKSB7CgkJcmVxdWlyZShpbWFnZUV4aXN0cyhfaW1hZ2VJZCkpOwoJCWZvciAodWludDE2IGkgPSAxOyBpIDw9IGltYWdlc1tfaW1hZ2VJZF0ucGFydHNDb3VudDsgaSsrKSB7CgkJCWlmKGltYWdlc1tfaW1hZ2VJZF0uZGF0YVtpXS5sZW5ndGggPT0gMCkgewoJCQkJcmV0dXJuIGZhbHNlOwoJCQl9CgkJfQoJCXJldHVybiB0cnVlOwoJfQoKCWZ1bmN0aW9uIEJkcEltYWdlU3RvcmFnZShieXRlczggX3ZlcnNpb24pIHB1YmxpYyB7CgkJb3duZXJBZGRyZXNzID0gbXNnLnNlbmRlcjsKCQltYW5hZ2VyQWRkcmVzcyA9IG1zZy5zZW5kZXI7CgkJdmVyc2lvbiA9IF92ZXJzaW9uOwoJfQoKfQoKY29udHJhY3QgQmRwT3duZXJzaGlwU3RvcmFnZSBpcyBCZHBCYXNlIHsKCgl1c2luZyBTYWZlTWF0aCBmb3IgdWludDI1NjsKCgkvLyBNYXBwaW5nIGZyb20gdG9rZW4gSUQgdG8gb3duZXIKCW1hcHBpbmcgKHVpbnQyNTYgPT4gYWRkcmVzcykgcHVibGljIHRva2VuT3duZXI7CgoJLy8gTWFwcGluZyBmcm9tIHRva2VuIElEIHRvIGFwcHJvdmVkIGFkZHJlc3MKCW1hcHBpbmcgKHVpbnQyNTYgPT4gYWRkcmVzcykgcHVibGljIHRva2VuQXBwcm92YWxzOwoKCS8vIE1hcHBpbmcgZnJvbSBvd25lciB0byB0aGUgc3VtIG9mIG93bmVkIGFyZWEKCW1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIG93bmVkQXJlYTsKCgkvLyBNYXBwaW5nIGZyb20gb3duZXIgdG8gbGlzdCBvZiBvd25lZCB0b2tlbiBJRHMKCW1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NltdKSBwdWJsaWMgb3duZWRUb2tlbnM7CgoJLy8gTWFwcGluZyBmcm9tIHRva2VuIElEIHRvIGluZGV4IG9mIHRoZSBvd25lciB0b2tlbnMgbGlzdAoJbWFwcGluZyh1aW50MjU2ID0+IHVpbnQyNTYpIHB1YmxpYyBvd25lZFRva2Vuc0luZGV4OwoKCS8vIEFsbCB0b2tlbnMgbGlzdCB0b2tlbnMgaWRzCgl1aW50MjU2W10gcHVibGljIHRva2VuSWRzOwoKCS8vIE1hcHBpbmcgZnJvbSB0b2tlbklkIHRvIGluZGV4IG9mIHRoZSB0b2tlbnMgbGlzdAoJbWFwcGluZyAodWludDI1NiA9PiB1aW50MjU2KSBwdWJsaWMgdG9rZW5JZHNJbmRleDsKCgoJZnVuY3Rpb24gZ2V0VG9rZW5Pd25lcih1aW50MjU2IF90b2tlbklkKSB2aWV3IHB1YmxpYyByZXR1cm5zIChhZGRyZXNzKSB7CgkJcmV0dXJuIHRva2VuT3duZXJbX3Rva2VuSWRdOwoJfQoKCWZ1bmN0aW9uIHNldFRva2VuT3duZXIodWludDI1NiBfdG9rZW5JZCwgYWRkcmVzcyBfb3duZXIpIHB1YmxpYyBzdG9yYWdlQWNjZXNzQ29udHJvbCB7CgkJdG9rZW5Pd25lcltfdG9rZW5JZF0gPSBfb3duZXI7Cgl9CgoJZnVuY3Rpb24gZ2V0VG9rZW5BcHByb3ZhbCh1aW50MjU2IF90b2tlbklkKSB2aWV3IHB1YmxpYyByZXR1cm5zIChhZGRyZXNzKSB7CgkJcmV0dXJuIHRva2VuQXBwcm92YWxzW190b2tlbklkXTsKCX0KCglmdW5jdGlvbiBzZXRUb2tlbkFwcHJvdmFsKHVpbnQyNTYgX3Rva2VuSWQsIGFkZHJlc3MgX3RvKSBwdWJsaWMgc3RvcmFnZUFjY2Vzc0NvbnRyb2wgewoJCXRva2VuQXBwcm92YWxzW190b2tlbklkXSA9IF90bzsKCX0KCglmdW5jdGlvbiBnZXRPd25lZEFyZWEoYWRkcmVzcyBfb3duZXIpIHZpZXcgcHVibGljIHJldHVybnMgKHVpbnQyNTYpIHsKCQlyZXR1cm4gb3duZWRBcmVhW19vd25lcl07Cgl9CgoJZnVuY3Rpb24gc2V0T3duZWRBcmVhKGFkZHJlc3MgX293bmVyLCB1aW50MjU2IF9hcmVhKSBwdWJsaWMgc3RvcmFnZUFjY2Vzc0NvbnRyb2wgewoJCW93bmVkQXJlYVtfb3duZXJdID0gX2FyZWE7Cgl9CgoJZnVuY3Rpb24gaW5jcmVtZW50T3duZWRBcmVhKGFkZHJlc3MgX293bmVyLCB1aW50MjU2IF9hcmVhKSBwdWJsaWMgc3RvcmFnZUFjY2Vzc0NvbnRyb2wgcmV0dXJucyAodWludDI1NikgewoJCW93bmVkQXJlYVtfb3duZXJdID0gb3duZWRBcmVhW19vd25lcl0uYWRkKF9hcmVhKTsKCQlyZXR1cm4gb3duZWRBcmVhW19vd25lcl07Cgl9CgoJZnVuY3Rpb24gZGVjcmVtZW50T3duZWRBcmVhKGFkZHJlc3MgX293bmVyLCB1aW50MjU2IF9hcmVhKSBwdWJsaWMgc3RvcmFnZUFjY2Vzc0NvbnRyb2wgcmV0dXJucyAodWludDI1NikgewoJCW93bmVkQXJlYVtfb3duZXJdID0gb3duZWRBcmVhW19vd25lcl0uc3ViKF9hcmVhKTsKCQlyZXR1cm4gb3duZWRBcmVhW19vd25lcl07Cgl9CgoJZnVuY3Rpb24gZ2V0T3duZWRUb2tlbnNMZW5ndGgoYWRkcmVzcyBfb3duZXIpIHZpZXcgcHVibGljIHJldHVybnMgKHVpbnQyNTYpIHsKCQlyZXR1cm4gb3duZWRUb2tlbnNbX293bmVyXS5sZW5ndGg7Cgl9CgoJZnVuY3Rpb24gZ2V0T3duZWRUb2tlbihhZGRyZXNzIF9vd25lciwgdWludDI1NiBfaW5kZXgpIHZpZXcgcHVibGljIHJldHVybnMgKHVpbnQyNTYpIHsKCQlyZXR1cm4gb3duZWRUb2tlbnNbX293bmVyXVtfaW5kZXhdOwoJfQoKCWZ1bmN0aW9uIHNldE93bmVkVG9rZW4oYWRkcmVzcyBfb3duZXIsIHVpbnQyNTYgX2luZGV4LCB1aW50MjU2IF90b2tlbklkKSBwdWJsaWMgc3RvcmFnZUFjY2Vzc0NvbnRyb2wgewoJCW93bmVkVG9rZW5zW19vd25lcl1bX2luZGV4XSA9IF90b2tlbklkOwoJfQoKCWZ1bmN0aW9uIHB1c2hPd25lZFRva2VuKGFkZHJlc3MgX293bmVyLCB1aW50MjU2IF90b2tlbklkKSBwdWJsaWMgc3RvcmFnZUFjY2Vzc0NvbnRyb2wgcmV0dXJucyAodWludDI1NikgewoJCW93bmVkVG9rZW5zW19vd25lcl0ucHVzaChfdG9rZW5JZCk7CgkJcmV0dXJuIG93bmVkVG9rZW5zW19vd25lcl0ubGVuZ3RoOwoJfQoKCWZ1bmN0aW9uIGRlY3JlbWVudE93bmVkVG9rZW5zTGVuZ3RoKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgc3RvcmFnZUFjY2Vzc0NvbnRyb2wgewoJCW93bmVkVG9rZW5zW19vd25lcl0ubGVuZ3RoLS07Cgl9CgoJZnVuY3Rpb24gZ2V0T3duZWRUb2tlbnNJbmRleCh1aW50MjU2IF90b2tlbklkKSB2aWV3IHB1YmxpYyByZXR1cm5zICh1aW50MjU2KSB7CgkJcmV0dXJuIG93bmVkVG9rZW5zSW5kZXhbX3Rva2VuSWRdOwoJfQoKCWZ1bmN0aW9uIHNldE93bmVkVG9rZW5zSW5kZXgodWludDI1NiBfdG9rZW5JZCwgdWludDI1NiBfdG9rZW5JbmRleCkgcHVibGljIHN0b3JhZ2VBY2Nlc3NDb250cm9sIHsKCQlvd25lZFRva2Vuc0luZGV4W190b2tlbklkXSA9IF90b2tlbkluZGV4OwoJfQoKCWZ1bmN0aW9uIGdldFRva2VuSWRzTGVuZ3RoKCkgdmlldyBwdWJsaWMgcmV0dXJucyAodWludDI1NikgewoJCXJldHVybiB0b2tlbklkcy5sZW5ndGg7Cgl9CgoJZnVuY3Rpb24gZ2V0VG9rZW5JZEJ5SW5kZXgodWludDI1NiBfaW5kZXgpIHZpZXcgcHVibGljIHJldHVybnMgKHVpbnQyNTYpIHsKCQlyZXR1cm4gdG9rZW5JZHNbX2luZGV4XTsKCX0KCglmdW5jdGlvbiBzZXRUb2tlbklkQnlJbmRleCh1aW50MjU2IF9pbmRleCwgdWludDI1NiBfdG9rZW5JZCkgcHVibGljIHN0b3JhZ2VBY2Nlc3NDb250cm9sIHsKCQl0b2tlbklkc1tfaW5kZXhdID0gX3Rva2VuSWQ7Cgl9CgoJZnVuY3Rpb24gcHVzaFRva2VuSWQodWludDI1NiBfdG9rZW5JZCkgcHVibGljIHN0b3JhZ2VBY2Nlc3NDb250cm9sIHJldHVybnMgKHVpbnQyNTYpIHsKCQl0b2tlbklkcy5wdXNoKF90b2tlbklkKTsKCQlyZXR1cm4gdG9rZW5JZHMubGVuZ3RoOwoJfQoKCWZ1bmN0aW9uIGRlY3JlbWVudFRva2VuSWRzTGVuZ3RoKCkgcHVibGljIHN0b3JhZ2VBY2Nlc3NDb250cm9sIHsKCQl0b2tlbklkcy5sZW5ndGgtLTsKCX0KCglmdW5jdGlvbiBnZXRUb2tlbklkc0luZGV4KHVpbnQyNTYgX3Rva2VuSWQpIHZpZXcgcHVibGljIHJldHVybnMgKHVpbnQyNTYpIHsKCQlyZXR1cm4gdG9rZW5JZHNJbmRleFtfdG9rZW5JZF07Cgl9CgoJZnVuY3Rpb24gc2V0VG9rZW5JZHNJbmRleCh1aW50MjU2IF90b2tlbklkLCB1aW50MjU2IF90b2tlbklkSW5kZXgpIHB1YmxpYyBzdG9yYWdlQWNjZXNzQ29udHJvbCB7CgkJdG9rZW5JZHNJbmRleFtfdG9rZW5JZF0gPSBfdG9rZW5JZEluZGV4OwoJfQoKCWZ1bmN0aW9uIEJkcE93bmVyc2hpcFN0b3JhZ2UoYnl0ZXM4IF92ZXJzaW9uKSBwdWJsaWMgewoJCW93bmVyQWRkcmVzcyA9IG1zZy5zZW5kZXI7CgkJbWFuYWdlckFkZHJlc3MgPSBtc2cuc2VuZGVyOwoJCXZlcnNpb24gPSBfdmVyc2lvbjsKCX0KCn0KCmNvbnRyYWN0IEJkcFByaWNlU3RvcmFnZSBpcyBCZHBCYXNlIHsKCgl1aW50NjRbMTAwMV0gcHVibGljIHByaWNlUG9pbnRzOwoKCXVpbnQyNTYgcHVibGljIHByaWNlUG9pbnRzTGVuZ3RoID0gMDsKCglhZGRyZXNzIHB1YmxpYyBmb3J3YXJkUHVyY2hhc2VGZWVzVG8gPSBhZGRyZXNzKDApOwoKCWFkZHJlc3MgcHVibGljIGZvcndhcmRVcGRhdGVGZWVzVG8gPSBhZGRyZXNzKDApOwoKCglmdW5jdGlvbiBnZXRQcmljZVBvaW50c0xlbmd0aCgpIHZpZXcgcHVibGljIHJldHVybnMgKHVpbnQyNTYpIHsKCQlyZXR1cm4gcHJpY2VQb2ludHNMZW5ndGg7Cgl9CgoJZnVuY3Rpb24gZ2V0UHJpY2VQb2ludCh1aW50MjU2IF9pKSB2aWV3IHB1YmxpYyByZXR1cm5zICh1aW50MjU2KSB7CgkJcmV0dXJuIHByaWNlUG9pbnRzW19pXTsKCX0KCglmdW5jdGlvbiBzZXRQcmljZVBvaW50cyh1aW50NjRbXSBfcHJpY2VQb2ludHMpIHB1YmxpYyBzdG9yYWdlQWNjZXNzQ29udHJvbCB7CgkJcHJpY2VQb2ludHNMZW5ndGggPSAwOwoJCWFwcGVuZFByaWNlUG9pbnRzKF9wcmljZVBvaW50cyk7Cgl9CgoJZnVuY3Rpb24gYXBwZW5kUHJpY2VQb2ludHModWludDY0W10gX3ByaWNlUG9pbnRzKSBwdWJsaWMgc3RvcmFnZUFjY2Vzc0NvbnRyb2wgewoJCWZvciAodWludCBpID0gMDsgaSA8IF9wcmljZVBvaW50cy5sZW5ndGg7IGkrKykgewoJCQlwcmljZVBvaW50c1twcmljZVBvaW50c0xlbmd0aCsrXSA9IF9wcmljZVBvaW50c1tpXTsKCQl9Cgl9CgoJZnVuY3Rpb24gZ2V0Rm9yd2FyZFB1cmNoYXNlRmVlc1RvKCkgdmlldyBwdWJsaWMgcmV0dXJucyAoYWRkcmVzcykgewoJCXJldHVybiBmb3J3YXJkUHVyY2hhc2VGZWVzVG87Cgl9CgoJZnVuY3Rpb24gc2V0Rm9yd2FyZFB1cmNoYXNlRmVlc1RvKGFkZHJlc3MgX2ZvcndhcmRQdXJjaGFzZUZlZXNUbykgcHVibGljIHN0b3JhZ2VBY2Nlc3NDb250cm9sIHsKCQlmb3J3YXJkUHVyY2hhc2VGZWVzVG8gPSBfZm9yd2FyZFB1cmNoYXNlRmVlc1RvOwoJfQoKCWZ1bmN0aW9uIGdldEZvcndhcmRVcGRhdGVGZWVzVG8oKSB2aWV3IHB1YmxpYyByZXR1cm5zIChhZGRyZXNzKSB7CgkJcmV0dXJuIGZvcndhcmRVcGRhdGVGZWVzVG87Cgl9CgoJZnVuY3Rpb24gc2V0Rm9yd2FyZFVwZGF0ZUZlZXNUbyhhZGRyZXNzIF9mb3J3YXJkVXBkYXRlRmVlc1RvKSBwdWJsaWMgc3RvcmFnZUFjY2Vzc0NvbnRyb2wgewoJCWZvcndhcmRVcGRhdGVGZWVzVG8gPSBfZm9yd2FyZFVwZGF0ZUZlZXNUbzsKCX0KCglmdW5jdGlvbiBCZHBQcmljZVN0b3JhZ2UoYnl0ZXM4IF92ZXJzaW9uKSBwdWJsaWMgewoJCW93bmVyQWRkcmVzcyA9IG1zZy5zZW5kZXI7CgkJbWFuYWdlckFkZHJlc3MgPSBtc2cuc2VuZGVyOwoJCXZlcnNpb24gPSBfdmVyc2lvbjsKCX0KCn0KCmxpYnJhcnkgQmRwQ2FsY3VsYXRvciB7CgoJdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQyNTY7CgoJZnVuY3Rpb24gY2FsY3VsYXRlQXJlYShhZGRyZXNzWzE2XSBfY29udHJhY3RzLCB1aW50MjU2IF9yZWdpb25JZCkgdmlldyBwdWJsaWMgcmV0dXJucyAodWludDI1NiBfYXJlYSwgdWludDI1NiBfd2lkdGgsIHVpbnQyNTYgX2hlaWdodCkgewoJCXZhciAoeDEsIHkxLCB4MiwgeTIpID0gQmRwRGF0YVN0b3JhZ2UoQmRwQ29udHJhY3RzLmdldEJkcERhdGFTdG9yYWdlKF9jb250cmFjdHMpKS5nZXRSZWdpb25Db29yZGluYXRlcyhfcmVnaW9uSWQpOwoJCV93aWR0aCA9IHgyIC0geDEgKyAxOwoJCV9oZWlnaHQgPSB5MiAtIHkxICsgMTsKCQlfYXJlYSA9IF93aWR0aCAqIF9oZWlnaHQ7Cgl9CgoJZnVuY3Rpb24gY291bnRQdXJjaGFzZWRQaXhlbHMoYWRkcmVzc1sxNl0gX2NvbnRyYWN0cykgdmlldyBwdWJsaWMgcmV0dXJucyAodWludDI1NiBfY291bnQpIHsKCQl2YXIgbGFzdFJlZ2lvbklkID0gQmRwRGF0YVN0b3JhZ2UoQmRwQ29udHJhY3RzLmdldEJkcERhdGFTdG9yYWdlKF9jb250cmFjdHMpKS5nZXRMYXN0UmVnaW9uSWQoKTsKCQlmb3IgKHVpbnQyNTYgaSA9IDA7IGkgPD0gbGFzdFJlZ2lvbklkOyBpKyspIHsKCQkJaWYoQmRwRGF0YVN0b3JhZ2UoQmRwQ29udHJhY3RzLmdldEJkcERhdGFTdG9yYWdlKF9jb250cmFjdHMpKS5nZXRSZWdpb25QdXJjaGFzZWRBdChpKSA+IDApIHsgLy8gcmVnaW9uIGlzIHB1cmNoYXNlZAoJCQkJdmFyIChhcmVhLCwpID0gY2FsY3VsYXRlQXJlYShfY29udHJhY3RzLCBpKTsKCQkJCV9jb3VudCArPSBhcmVhOwoJCQl9CgkJfQoJfQoKCWZ1bmN0aW9uIGNhbGN1bGF0ZUN1cnJlbnRNYXJrZXRQaXhlbFByaWNlKGFkZHJlc3NbMTZdIF9jb250cmFjdHMpIHZpZXcgcHVibGljIHJldHVybnModWludCkgewoJCXJldHVybiBjYWxjdWxhdGVNYXJrZXRQaXhlbFByaWNlKF9jb250cmFjdHMsIGNvdW50UHVyY2hhc2VkUGl4ZWxzKF9jb250cmFjdHMpKTsKCX0KCglmdW5jdGlvbiBjYWxjdWxhdGVNYXJrZXRQaXhlbFByaWNlKGFkZHJlc3NbMTZdIF9jb250cmFjdHMsIHVpbnQgX3BpeGVsc1NvbGQpIHZpZXcgcHVibGljIHJldHVybnModWludCkgewoJCXZhciBwcmljZVBvaW50c0xlbmd0aCA9IEJkcFByaWNlU3RvcmFnZShCZHBDb250cmFjdHMuZ2V0QmRwUHJpY2VTdG9yYWdlKF9jb250cmFjdHMpKS5nZXRQcmljZVBvaW50c0xlbmd0aCgpOwoJCXVpbnQgbW9kID0gX3BpeGVsc1NvbGQgJSAoMTAwMDAwMCAvIChwcmljZVBvaW50c0xlbmd0aCAtIDEpKTsKCQl1aW50IGRpdiA9IF9waXhlbHNTb2xkICogKHByaWNlUG9pbnRzTGVuZ3RoIC0gMSkgLyAxMDAwMDAwOwoJCXZhciBkaXZQb2ludCA9IEJkcFByaWNlU3RvcmFnZShCZHBDb250cmFjdHMuZ2V0QmRwUHJpY2VTdG9yYWdlKF9jb250cmFjdHMpKS5nZXRQcmljZVBvaW50KGRpdik7CgkJaWYobW9kID09IDApIHJldHVybiBkaXZQb2ludDsKCQlyZXR1cm4gZGl2UG9pbnQgKyBtb2QgKiAoQmRwUHJpY2VTdG9yYWdlKEJkcENvbnRyYWN0cy5nZXRCZHBQcmljZVN0b3JhZ2UoX2NvbnRyYWN0cykpLmdldFByaWNlUG9pbnQoZGl2KzEpIC0gZGl2UG9pbnQpICogKHByaWNlUG9pbnRzTGVuZ3RoIC0gMSkgLyAxMDAwMDAwOwoJfQoKCWZ1bmN0aW9uIGNhbGN1bGF0ZUF2ZXJhZ2VQaXhlbFByaWNlKGFkZHJlc3NbMTZdIF9jb250cmFjdHMsIHVpbnQgX2EsIHVpbnQgX2IpIHZpZXcgcHVibGljIHJldHVybnMgKHVpbnQgX3ByaWNlKSB7CgkJX3ByaWNlID0gKGNhbGN1bGF0ZU1hcmtldFBpeGVsUHJpY2UoX2NvbnRyYWN0cywgX2EpICsgY2FsY3VsYXRlTWFya2V0UGl4ZWxQcmljZShfY29udHJhY3RzLCBfYikpIC8gMjsKCX0KCgkvKiogQ3VycmVudCBtYXJrZXQgcHJpY2UgcGVyIHBpeGVsIGZvciB0aGlzIHJlZ2lvbiBpZiBpdCBpcyB0aGUgZmlyc3Qgc2FsZSBvZiB0aGlzIHJlZ2lvbgoJICAqLwoJZnVuY3Rpb24gY2FsY3VsYXRlUmVnaW9uSW5pdGlhbFNhbGVQaXhlbFByaWNlKGFkZHJlc3NbMTZdIF9jb250cmFjdHMsIHVpbnQyNTYgX3JlZ2lvbklkKSB2aWV3IHB1YmxpYyByZXR1cm5zICh1aW50MjU2KSB7CgkJcmVxdWlyZShCZHBEYXRhU3RvcmFnZShCZHBDb250cmFjdHMuZ2V0QmRwRGF0YVN0b3JhZ2UoX2NvbnRyYWN0cykpLmdldFJlZ2lvblVwZGF0ZWRBdChfcmVnaW9uSWQpID4gMCk7IC8vIHJlZ2lvbiBleGlzdHMKCQl2YXIgcHVyY2hhc2VkUGl4ZWxzID0gY291bnRQdXJjaGFzZWRQaXhlbHMoX2NvbnRyYWN0cyk7CgkJdmFyIChhcmVhLCwpID0gY2FsY3VsYXRlQXJlYShfY29udHJhY3RzLCBfcmVnaW9uSWQpOwoJCXJldHVybiBjYWxjdWxhdGVBdmVyYWdlUGl4ZWxQcmljZShfY29udHJhY3RzLCBwdXJjaGFzZWRQaXhlbHMsIHB1cmNoYXNlZFBpeGVscyArIGFyZWEpOwoJfQoKCS8qKiBDdXJyZW50IG1hcmtldCBwcmljZSBvciAoQ3VycmVudCBtYXJrZXQgcHJpY2UpKjMgaWYgdGhlIHJlZ2lvbiB3YXMgc29sZAoJICAqLwoJZnVuY3Rpb24gY2FsY3VsYXRlUmVnaW9uU2FsZVBpeGVsUHJpY2UoYWRkcmVzc1sxNl0gX2NvbnRyYWN0cywgdWludDI1NiBfcmVnaW9uSWQpIHZpZXcgcHVibGljIHJldHVybnMgKHVpbnQyNTYpIHsKCQl2YXIgcGl4ZWxQcmljZSA9IEJkcERhdGFTdG9yYWdlKEJkcENvbnRyYWN0cy5nZXRCZHBEYXRhU3RvcmFnZShfY29udHJhY3RzKSkuZ2V0UmVnaW9uQ3VycmVudFBpeGVsUHJpY2UoX3JlZ2lvbklkKTsKCQlpZihwaXhlbFByaWNlID4gMCkgewoJCQlyZXR1cm4gcGl4ZWxQcmljZSAqIDM7CgkJfSBlbHNlIHsKCQkJcmV0dXJuIGNhbGN1bGF0ZVJlZ2lvbkluaXRpYWxTYWxlUGl4ZWxQcmljZShfY29udHJhY3RzLCBfcmVnaW9uSWQpOwoJCX0KCX0KCgkvKiogU2V0dXAgaXMgYWxsb3dlZCBvbmUgd2hpdGhpbiBvbmUgZGF5IGFmdGVyIHB1cmNoYXNlCgkgICovCglmdW5jdGlvbiBjYWxjdWxhdGVTZXR1cEFsbG93ZWRVbnRpbChhZGRyZXNzWzE2XSBfY29udHJhY3RzLCB1aW50MjU2IF9yZWdpb25JZCkgdmlldyBwdWJsaWMgcmV0dXJucyAodWludDI1NikgewoJCXZhciAodXBkYXRlZEF0LCBwdXJjaGFzZWRBdCkgPSBCZHBEYXRhU3RvcmFnZShCZHBDb250cmFjdHMuZ2V0QmRwRGF0YVN0b3JhZ2UoX2NvbnRyYWN0cykpLmdldFJlZ2lvblVwZGF0ZWRBdFB1cmNoYXNlZEF0KF9yZWdpb25JZCk7CgkJaWYodXBkYXRlZEF0ICE9IHB1cmNoYXNlZEF0KSB7CgkJCXJldHVybiAwOwoJCX0gZWxzZSB7CgkJCXJldHVybiBwdXJjaGFzZWRBdCArIDEgZGF5czsKCQl9Cgl9Cgp9CgpsaWJyYXJ5IEJkcEltYWdlIHsKCglmdW5jdGlvbiBjaGVja0ltYWdlSW5wdXQoYWRkcmVzc1sxNl0gX2NvbnRyYWN0cywgdWludDI1NiBfcmVnaW9uSWQsIHVpbnQyNTYgX2ltYWdlSWQsIHVpbnQyNTZbXSBfaW1hZ2VEYXRhLCBib29sIF9zd2FwSW1hZ2VzLCBib29sIF9jbGVhckltYWdlKSB2aWV3IHB1YmxpYyB7CgkJdmFyIGRhdGFTdG9yYWdlID0gQmRwRGF0YVN0b3JhZ2UoQmRwQ29udHJhY3RzLmdldEJkcERhdGFTdG9yYWdlKF9jb250cmFjdHMpKTsKCQl2YXIgaW1hZ2VTdG9yYWdlID0gQmRwSW1hZ2VTdG9yYWdlKEJkcENvbnRyYWN0cy5nZXRCZHBJbWFnZVN0b3JhZ2UoX2NvbnRyYWN0cykpOwoKCQlyZXF1aXJlKCAoX2ltYWdlSWQgPT0gMCAmJiBfaW1hZ2VEYXRhLmxlbmd0aCA9PSAwICYmICFfc3dhcEltYWdlcyAmJiAhX2NsZWFySW1hZ2UpIC8vIE9ubHkgb25lIHdheSB0byBjaGFuZ2UgaW1hZ2UgY2FuIGJlIHNwZWNpZmllZAoJCQl8fCAoX2ltYWdlSWQgIT0gMCAmJiBfaW1hZ2VEYXRhLmxlbmd0aCA9PSAwICYmICFfc3dhcEltYWdlcyAmJiAhX2NsZWFySW1hZ2UpIC8vIElmIGltYWdlIGhhcyB0byBiZSBjaGFuZ2VkCgkJCXx8IChfaW1hZ2VJZCA9PSAwICYmIF9pbWFnZURhdGEubGVuZ3RoICE9IDAgJiYgIV9zd2FwSW1hZ2VzICYmICFfY2xlYXJJbWFnZSkKCQkJfHwgKF9pbWFnZUlkID09IDAgJiYgX2ltYWdlRGF0YS5sZW5ndGggPT0gMCAmJiBfc3dhcEltYWdlcyAmJiAhX2NsZWFySW1hZ2UpCgkJCXx8IChfaW1hZ2VJZCA9PSAwICYmIF9pbWFnZURhdGEubGVuZ3RoID09IDAgJiYgIV9zd2FwSW1hZ2VzICYmIF9jbGVhckltYWdlKSApOwoKCQlyZXF1aXJlKF9pbWFnZUlkID09IDAgfHwgLy8gQ2FuIHVzZSBvbmx5IG93biBpbWFnZXMgbm90IHVzZWQgYnkgb3RoZXIgcmVnaW9ucwoJCQkoIChtc2cuc2VuZGVyID09IGltYWdlU3RvcmFnZS5nZXRJbWFnZU93bmVyKF9pbWFnZUlkKSkgJiYgKGltYWdlU3RvcmFnZS5nZXRJbWFnZUN1cnJlbnRSZWdpb25JZChfaW1hZ2VJZCkgPT0gMCkgKSApOwoKCQl2YXIgbmV4dEltYWdlSWQgPSBkYXRhU3RvcmFnZS5nZXRSZWdpb25OZXh0SW1hZ2VJZChfcmVnaW9uSWQpOwoJCXJlcXVpcmUoIV9zd2FwSW1hZ2VzIHx8IGltYWdlU3RvcmFnZS5pbWFnZVVwbG9hZENvbXBsZXRlKG5leHRJbWFnZUlkKSk7IC8vIENhbiBzd2FwIGltYWdlcyBpZiBuZXh0IGltYWdlIHVwbG9hZCBpcyBjb21wbGV0ZQoJfQoKCWZ1bmN0aW9uIHNldE5leHRJbWFnZVBhcnQoYWRkcmVzc1sxNl0gX2NvbnRyYWN0cywgdWludDI1NiBfcmVnaW9uSWQsIHVpbnQxNiBfcGFydCwgdWludDE2IF9wYXJ0c0NvdW50LCB1aW50MTYgX2ltYWdlRGVzY3JpcHRvciwgdWludDI1NltdIF9pbWFnZURhdGEpIHB1YmxpYyB7CgkJdmFyIGRhdGFTdG9yYWdlID0gQmRwRGF0YVN0b3JhZ2UoQmRwQ29udHJhY3RzLmdldEJkcERhdGFTdG9yYWdlKF9jb250cmFjdHMpKTsKCQl2YXIgaW1hZ2VTdG9yYWdlID0gQmRwSW1hZ2VTdG9yYWdlKEJkcENvbnRyYWN0cy5nZXRCZHBJbWFnZVN0b3JhZ2UoX2NvbnRyYWN0cykpOwoKCQlyZXF1aXJlKEJkcE93bmVyc2hpcC5vd25lck9mKF9jb250cmFjdHMsIF9yZWdpb25JZCkgPT0gbXNnLnNlbmRlcik7CgkJcmVxdWlyZShfaW1hZ2VEYXRhLmxlbmd0aCAhPSAwKTsKCQlyZXF1aXJlKF9wYXJ0ID4gMCk7CgkJcmVxdWlyZShfcGFydCA8PSBfcGFydHNDb3VudCk7CgoJCXZhciBuZXh0SW1hZ2VJZCA9IGRhdGFTdG9yYWdlLmdldFJlZ2lvbk5leHRJbWFnZUlkKF9yZWdpb25JZCk7CgkJaWYobmV4dEltYWdlSWQgPT0gMCB8fCBfaW1hZ2VEZXNjcmlwdG9yICE9IGltYWdlU3RvcmFnZS5nZXRJbWFnZURlc2NyaXB0b3IobmV4dEltYWdlSWQpKSB7CgkJCXZhciAoLCB3aWR0aCwgaGVpZ2h0KSA9IEJkcENhbGN1bGF0b3IuY2FsY3VsYXRlQXJlYShfY29udHJhY3RzLCBfcmVnaW9uSWQpOwoJCQluZXh0SW1hZ2VJZCA9IGltYWdlU3RvcmFnZS5jcmVhdGVJbWFnZShtc2cuc2VuZGVyLCBfcmVnaW9uSWQsIHVpbnQxNih3aWR0aCksIHVpbnQxNihoZWlnaHQpLCBfcGFydHNDb3VudCwgX2ltYWdlRGVzY3JpcHRvcik7CgkJCWRhdGFTdG9yYWdlLnNldFJlZ2lvbk5leHRJbWFnZUlkKF9yZWdpb25JZCwgbmV4dEltYWdlSWQpOwoJCX0KCgkJaW1hZ2VTdG9yYWdlLnNldEltYWdlRGF0YShuZXh0SW1hZ2VJZCwgX3BhcnQsIF9pbWFnZURhdGEpOwoJfQoKCWZ1bmN0aW9uIHNldEltYWdlT3duZXIoYWRkcmVzc1sxNl0gX2NvbnRyYWN0cywgdWludDI1NiBfaW1hZ2VJZCwgYWRkcmVzcyBfb3duZXIpIHB1YmxpYyB7CgkJdmFyIGltYWdlU3RvcmFnZSA9IEJkcEltYWdlU3RvcmFnZShCZHBDb250cmFjdHMuZ2V0QmRwSW1hZ2VTdG9yYWdlKF9jb250cmFjdHMpKTsKCQlyZXF1aXJlKGltYWdlU3RvcmFnZS5nZXRJbWFnZU93bmVyKF9pbWFnZUlkKSA9PSBtc2cuc2VuZGVyKTsKCQlyZXF1aXJlKF9vd25lciAhPSBhZGRyZXNzKDApKTsKCgkJaW1hZ2VTdG9yYWdlLnNldEltYWdlT3duZXIoX2ltYWdlSWQsIF9vd25lcik7Cgl9CgoJZnVuY3Rpb24gc2V0SW1hZ2VEYXRhKGFkZHJlc3NbMTZdIF9jb250cmFjdHMsIHVpbnQyNTYgX2ltYWdlSWQsIHVpbnQxNiBfcGFydCwgdWludDI1NltdIF9pbWFnZURhdGEpIHB1YmxpYyByZXR1cm5zIChhZGRyZXNzKSB7CgkJdmFyIGltYWdlU3RvcmFnZSA9IEJkcEltYWdlU3RvcmFnZShCZHBDb250cmFjdHMuZ2V0QmRwSW1hZ2VTdG9yYWdlKF9jb250cmFjdHMpKTsKCQlyZXF1aXJlKGltYWdlU3RvcmFnZS5nZXRJbWFnZU93bmVyKF9pbWFnZUlkKSA9PSBtc2cuc2VuZGVyKTsKCQlyZXF1aXJlKGltYWdlU3RvcmFnZS5nZXRJbWFnZUN1cnJlbnRSZWdpb25JZChfaW1hZ2VJZCkgPT0gMCk7CgkJcmVxdWlyZShfaW1hZ2VEYXRhLmxlbmd0aCAhPSAwKTsKCQlyZXF1aXJlKF9wYXJ0ID4gMCk7CgkJcmVxdWlyZShfcGFydCA8PSBpbWFnZVN0b3JhZ2UuZ2V0SW1hZ2VQYXJ0c0NvdW50KF9pbWFnZUlkKSk7CgoJCWltYWdlU3RvcmFnZS5zZXRJbWFnZURhdGEoX2ltYWdlSWQsIF9wYXJ0LCBfaW1hZ2VEYXRhKTsKCX0KCn0KCmxpYnJhcnkgQmRwT3duZXJzaGlwIHsKCgl1c2luZyBTYWZlTWF0aCBmb3IgdWludDI1NjsKCglldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IGluZGV4ZWQgdG9rZW5JZCk7CgoJZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIG93bmVyLCBhZGRyZXNzIGluZGV4ZWQgYXBwcm92ZWQsIHVpbnQyNTYgaW5kZXhlZCB0b2tlbklkKTsKCglmdW5jdGlvbiBvd25lck9mKGFkZHJlc3NbMTZdIF9jb250cmFjdHMsIHVpbnQyNTYgX3Rva2VuSWQpIHB1YmxpYyB2aWV3IHJldHVybnMgKGFkZHJlc3MpIHsKCQl2YXIgb3duZXIgPSBCZHBPd25lcnNoaXBTdG9yYWdlKEJkcENvbnRyYWN0cy5nZXRCZHBPd25lcnNoaXBTdG9yYWdlKF9jb250cmFjdHMpKS5nZXRUb2tlbk93bmVyKF90b2tlbklkKTsKCQlyZXF1aXJlKG93bmVyICE9IGFkZHJlc3MoMCkpOwoJCXJldHVybiBvd25lcjsKCX0KCglmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzc1sxNl0gX2NvbnRyYWN0cywgYWRkcmVzcyBfb3duZXIpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYpIHsKCQlyZXR1cm4gQmRwT3duZXJzaGlwU3RvcmFnZShCZHBDb250cmFjdHMuZ2V0QmRwT3duZXJzaGlwU3RvcmFnZShfY29udHJhY3RzKSkuZ2V0T3duZWRUb2tlbnNMZW5ndGgoX293bmVyKTsKCX0KCglmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3NbMTZdIF9jb250cmFjdHMsIGFkZHJlc3MgX3RvLCB1aW50MjU2IF90b2tlbklkKSBwdWJsaWMgewoJCXZhciBvd25TdG9yYWdlID0gQmRwT3duZXJzaGlwU3RvcmFnZShCZHBDb250cmFjdHMuZ2V0QmRwT3duZXJzaGlwU3RvcmFnZShfY29udHJhY3RzKSk7CgoJCWFkZHJlc3Mgb3duZXIgPSBvd25lck9mKF9jb250cmFjdHMsIF90b2tlbklkKTsKCQlyZXF1aXJlKF90byAhPSBvd25lcik7CgkJaWYgKG93blN0b3JhZ2UuZ2V0VG9rZW5BcHByb3ZhbChfdG9rZW5JZCkgIT0gMCB8fCBfdG8gIT0gMCkgewoJCQlvd25TdG9yYWdlLnNldFRva2VuQXBwcm92YWwoX3Rva2VuSWQsIF90byk7CgkJCUFwcHJvdmFsKG93bmVyLCBfdG8sIF90b2tlbklkKTsKCQl9Cgl9CgoJLyoqCgkgKiBAZGV2IENsZWFyIGN1cnJlbnQgYXBwcm92YWwgb2YgYSBnaXZlbiB0b2tlbiBJRAoJICogQHBhcmFtIF90b2tlbklkIHVpbnQyNTYgSUQgb2YgdGhlIHRva2VuIHRvIGJlIHRyYW5zZmVycmVkCgkgKi8KCWZ1bmN0aW9uIGNsZWFyQXBwcm92YWwoYWRkcmVzc1sxNl0gX2NvbnRyYWN0cywgYWRkcmVzcyBfb3duZXIsIHVpbnQyNTYgX3Rva2VuSWQpIHB1YmxpYyB7CgkJdmFyIG93blN0b3JhZ2UgPSBCZHBPd25lcnNoaXBTdG9yYWdlKEJkcENvbnRyYWN0cy5nZXRCZHBPd25lcnNoaXBTdG9yYWdlKF9jb250cmFjdHMpKTsKCgkJcmVxdWlyZShvd25lck9mKF9jb250cmFjdHMsIF90b2tlbklkKSA9PSBfb3duZXIpOwoJCWlmIChvd25TdG9yYWdlLmdldFRva2VuQXBwcm92YWwoX3Rva2VuSWQpICE9IDApIHsKCQkJQmRwT3duZXJzaGlwU3RvcmFnZShCZHBDb250cmFjdHMuZ2V0QmRwT3duZXJzaGlwU3RvcmFnZShfY29udHJhY3RzKSkuc2V0VG9rZW5BcHByb3ZhbChfdG9rZW5JZCwgMCk7CgkJCUFwcHJvdmFsKF9vd25lciwgMCwgX3Rva2VuSWQpOwoJCX0KCX0KCgkvKioKCSAqIEBkZXYgQ2xlYXIgY3VycmVudCBhcHByb3ZhbCBhbmQgdHJhbnNmZXIgdGhlIG93bmVyc2hpcCBvZiBhIGdpdmVuIHRva2VuIElECgkgKiBAcGFyYW0gX2Zyb20gYWRkcmVzcyB3aGljaCB5b3Ugd2FudCB0byBzZW5kIHRva2VucyBmcm9tCgkgKiBAcGFyYW0gX3RvIGFkZHJlc3Mgd2hpY2ggeW91IHdhbnQgdG8gdHJhbnNmZXIgdGhlIHRva2VuIHRvCgkgKiBAcGFyYW0gX3Rva2VuSWQgdWludDI1NiBJRCBvZiB0aGUgdG9rZW4gdG8gYmUgdHJhbnNmZXJyZWQKCSAqLwoJZnVuY3Rpb24gY2xlYXJBcHByb3ZhbEFuZFRyYW5zZmVyKGFkZHJlc3NbMTZdIF9jb250cmFjdHMsIGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF90b2tlbklkKSBwdWJsaWMgewoJCXJlcXVpcmUoX3RvICE9IGFkZHJlc3MoMCkpOwoJCXJlcXVpcmUoX3RvICE9IG93bmVyT2YoX2NvbnRyYWN0cywgX3Rva2VuSWQpKTsKCQlyZXF1aXJlKG93bmVyT2YoX2NvbnRyYWN0cywgX3Rva2VuSWQpID09IF9mcm9tKTsKCgkJY2xlYXJBcHByb3ZhbChfY29udHJhY3RzLCBfZnJvbSwgX3Rva2VuSWQpOwoJCXJlbW92ZVRva2VuKF9jb250cmFjdHMsIF9mcm9tLCBfdG9rZW5JZCk7CgkJYWRkVG9rZW4oX2NvbnRyYWN0cywgX3RvLCBfdG9rZW5JZCk7CgkJVHJhbnNmZXIoX2Zyb20sIF90bywgX3Rva2VuSWQpOwoJfQoKCS8qKgoJICogQGRldiBJbnRlcm5hbCBmdW5jdGlvbiB0byBhZGQgYSB0b2tlbiBJRCB0byB0aGUgbGlzdCBvZiBhIGdpdmVuIGFkZHJlc3MKCSAqIEBwYXJhbSBfdG8gYWRkcmVzcyByZXByZXNlbnRpbmcgdGhlIG5ldyBvd25lciBvZiB0aGUgZ2l2ZW4gdG9rZW4gSUQKCSAqIEBwYXJhbSBfdG9rZW5JZCB1aW50MjU2IElEIG9mIHRoZSB0b2tlbiB0byBiZSBhZGRlZCB0byB0aGUgdG9rZW5zIGxpc3Qgb2YgdGhlIGdpdmVuIGFkZHJlc3MKCSAqLwoJZnVuY3Rpb24gYWRkVG9rZW4oYWRkcmVzc1sxNl0gX2NvbnRyYWN0cywgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3Rva2VuSWQpIHByaXZhdGUgewoJCXZhciBvd25TdG9yYWdlID0gQmRwT3duZXJzaGlwU3RvcmFnZShCZHBDb250cmFjdHMuZ2V0QmRwT3duZXJzaGlwU3RvcmFnZShfY29udHJhY3RzKSk7CgoJCXJlcXVpcmUob3duU3RvcmFnZS5nZXRUb2tlbk93bmVyKF90b2tlbklkKSA9PSBhZGRyZXNzKDApKTsKCgkJLy8gU2V0IHRva2VuIG93bmVyCgkJb3duU3RvcmFnZS5zZXRUb2tlbk93bmVyKF90b2tlbklkLCBfdG8pOwoKCQkvLyBBZGQgdG9rZW4gdG8gdG9rZW5JZHMgbGlzdAoJCXZhciB0b2tlbklkc0xlbmd0aCA9IG93blN0b3JhZ2UucHVzaFRva2VuSWQoX3Rva2VuSWQpOwoJCW93blN0b3JhZ2Uuc2V0VG9rZW5JZHNJbmRleChfdG9rZW5JZCwgdG9rZW5JZHNMZW5ndGguc3ViKDEpKTsKCgkJdWludDI1NiBvd25lZFRva2Vuc0xlbmd0aCA9IG93blN0b3JhZ2UuZ2V0T3duZWRUb2tlbnNMZW5ndGgoX3RvKTsKCgkJLy8gQWRkIHRva2VuIHRvIG93bmVkVG9rZW5zIGxpc3QKCQlvd25TdG9yYWdlLnB1c2hPd25lZFRva2VuKF90bywgX3Rva2VuSWQpOwoJCW93blN0b3JhZ2Uuc2V0T3duZWRUb2tlbnNJbmRleChfdG9rZW5JZCwgb3duZWRUb2tlbnNMZW5ndGgpOwoKCQkvLyBJbmNyZW1lbnQgdG90YWwgb3duZWQgYXJlYQoJCXZhciAoYXJlYSwsKSA9IEJkcENhbGN1bGF0b3IuY2FsY3VsYXRlQXJlYShfY29udHJhY3RzLCBfdG9rZW5JZCk7CgkJb3duU3RvcmFnZS5pbmNyZW1lbnRPd25lZEFyZWEoX3RvLCBhcmVhKTsKCX0KCgkvKioKCSAqIEBkZXYgSW50ZXJuYWwgZnVuY3Rpb24gdG8gcmVtb3ZlIGEgdG9rZW4gSUQgZnJvbSB0aGUgbGlzdCBvZiBhIGdpdmVuIGFkZHJlc3MKCSAqIEBwYXJhbSBfZnJvbSBhZGRyZXNzIHJlcHJlc2VudGluZyB0aGUgcHJldmlvdXMgb3duZXIgb2YgdGhlIGdpdmVuIHRva2VuIElECgkgKiBAcGFyYW0gX3Rva2VuSWQgdWludDI1NiBJRCBvZiB0aGUgdG9rZW4gdG8gYmUgcmVtb3ZlZCBmcm9tIHRoZSB0b2tlbnMgbGlzdCBvZiB0aGUgZ2l2ZW4gYWRkcmVzcwoJICovCglmdW5jdGlvbiByZW1vdmVUb2tlbihhZGRyZXNzWzE2XSBfY29udHJhY3RzLCBhZGRyZXNzIF9mcm9tLCB1aW50MjU2IF90b2tlbklkKSBwcml2YXRlIHsKCQl2YXIgb3duU3RvcmFnZSA9IEJkcE93bmVyc2hpcFN0b3JhZ2UoQmRwQ29udHJhY3RzLmdldEJkcE93bmVyc2hpcFN0b3JhZ2UoX2NvbnRyYWN0cykpOwoKCQlyZXF1aXJlKG93bmVyT2YoX2NvbnRyYWN0cywgX3Rva2VuSWQpID09IF9mcm9tKTsKCgkJLy8gQ2xlYXIgdG9rZW4gb3duZXIKCQlvd25TdG9yYWdlLnNldFRva2VuT3duZXIoX3Rva2VuSWQsIDApOwoKCQlyZW1vdmVGcm9tVG9rZW5JZHMob3duU3RvcmFnZSwgX3Rva2VuSWQpOwoJCXJlbW92ZUZyb21Pd25lZFRva2VuKG93blN0b3JhZ2UsIF9mcm9tLCBfdG9rZW5JZCk7CgoJCS8vIERlY3JlbWVudCB0b3RhbCBvd25lZCBhcmVhCgkJdmFyIChhcmVhLCwpID0gQmRwQ2FsY3VsYXRvci5jYWxjdWxhdGVBcmVhKF9jb250cmFjdHMsIF90b2tlbklkKTsKCQlvd25TdG9yYWdlLmRlY3JlbWVudE93bmVkQXJlYShfZnJvbSwgYXJlYSk7Cgl9CgoJLyoqCgkgKiBAZGV2IFJlbW92ZSB0b2tlbiBmcm9tIG93bmVkVG9rZW5zIGxpc3QKCSAqIE5vdGUgdGhhdCB0aGlzIHdpbGwgaGFuZGxlIHNpbmdsZS1lbGVtZW50IGFycmF5cy4gSW4gdGhhdCBjYXNlLCBib3RoIG93bmVkVG9rZW5JbmRleCBhbmQgbGFzdE93bmVkVG9rZW5JbmRleCBhcmUgZ29pbmcgdG8KCSAqIGJlIHplcm8uIFRoZW4gd2UgY2FuIG1ha2Ugc3VyZSB0aGF0IHdlIHdpbGwgcmVtb3ZlIF90b2tlbklkIGZyb20gdGhlIG93bmVkVG9rZW5zIGxpc3Qgc2luY2Ugd2UgYXJlIGZpcnN0IHN3YXBwaW5nCgkgKiB0aGUgbGFzdE93bmVkVG9rZW4gdG8gdGhlIGZpcnN0IHBvc2l0aW9uLCBhbmQgdGhlbiBkcm9wcGluZyB0aGUgZWxlbWVudCBwbGFjZWQgaW4gdGhlIGxhc3QgcG9zaXRpb24gb2YgdGhlIGxpc3QKCSAqLwoJZnVuY3Rpb24gcmVtb3ZlRnJvbU93bmVkVG9rZW4oQmRwT3duZXJzaGlwU3RvcmFnZSBfb3duU3RvcmFnZSwgYWRkcmVzcyBfZnJvbSwgdWludDI1NiBfdG9rZW5JZCkgcHJpdmF0ZSB7CgkJdmFyIG93bmVkVG9rZW5JbmRleCA9IF9vd25TdG9yYWdlLmdldE93bmVkVG9rZW5zSW5kZXgoX3Rva2VuSWQpOwoJCXZhciBsYXN0T3duZWRUb2tlbkluZGV4ID0gX293blN0b3JhZ2UuZ2V0T3duZWRUb2tlbnNMZW5ndGgoX2Zyb20pLnN1YigxKTsKCQl2YXIgbGFzdE93bmVkVG9rZW4gPSBfb3duU3RvcmFnZS5nZXRPd25lZFRva2VuKF9mcm9tLCBsYXN0T3duZWRUb2tlbkluZGV4KTsKCQlfb3duU3RvcmFnZS5zZXRPd25lZFRva2VuKF9mcm9tLCBvd25lZFRva2VuSW5kZXgsIGxhc3RPd25lZFRva2VuKTsKCQlfb3duU3RvcmFnZS5zZXRPd25lZFRva2VuKF9mcm9tLCBsYXN0T3duZWRUb2tlbkluZGV4LCAwKTsKCQlfb3duU3RvcmFnZS5kZWNyZW1lbnRPd25lZFRva2Vuc0xlbmd0aChfZnJvbSk7CgkJX293blN0b3JhZ2Uuc2V0T3duZWRUb2tlbnNJbmRleChfdG9rZW5JZCwgMCk7CgkJX293blN0b3JhZ2Uuc2V0T3duZWRUb2tlbnNJbmRleChsYXN0T3duZWRUb2tlbiwgb3duZWRUb2tlbkluZGV4KTsKCX0KCgkvKioKCSAqIEBkZXYgUmVtb3ZlIHRva2VuIGZyb20gdG9rZW5JZHMgbGlzdAoJICovCglmdW5jdGlvbiByZW1vdmVGcm9tVG9rZW5JZHMoQmRwT3duZXJzaGlwU3RvcmFnZSBfb3duU3RvcmFnZSwgdWludDI1NiBfdG9rZW5JZCkgcHJpdmF0ZSB7CgkJdmFyIHRva2VuSW5kZXggPSBfb3duU3RvcmFnZS5nZXRUb2tlbklkc0luZGV4KF90b2tlbklkKTsKCQl2YXIgbGFzdFRva2VuSWRJbmRleCA9IF9vd25TdG9yYWdlLmdldFRva2VuSWRzTGVuZ3RoKCkuc3ViKDEpOwoJCXZhciBsYXN0VG9rZW5JZCA9IF9vd25TdG9yYWdlLmdldFRva2VuSWRCeUluZGV4KGxhc3RUb2tlbklkSW5kZXgpOwoJCV9vd25TdG9yYWdlLnNldFRva2VuSWRCeUluZGV4KHRva2VuSW5kZXgsIGxhc3RUb2tlbklkKTsKCQlfb3duU3RvcmFnZS5zZXRUb2tlbklkQnlJbmRleChsYXN0VG9rZW5JZEluZGV4LCAwKTsKCQlfb3duU3RvcmFnZS5kZWNyZW1lbnRUb2tlbklkc0xlbmd0aCgpOwoJCV9vd25TdG9yYWdlLnNldFRva2VuSWRzSW5kZXgoX3Rva2VuSWQsIDApOwoJCV9vd25TdG9yYWdlLnNldFRva2VuSWRzSW5kZXgobGFzdFRva2VuSWQsIHRva2VuSW5kZXgpOwoJfQoKCS8qKgoJICogQGRldiBNaW50IHRva2VuIGZ1bmN0aW9uCgkgKiBAcGFyYW0gX3RvIFRoZSBhZGRyZXNzIHRoYXQgd2lsbCBvd24gdGhlIG1pbnRlZCB0b2tlbgoJICogQHBhcmFtIF90b2tlbklkIHVpbnQyNTYgSUQgb2YgdGhlIHRva2VuIHRvIGJlIG1pbnRlZCBieSB0aGUgbXNnLnNlbmRlcgoJICovCglmdW5jdGlvbiBtaW50KGFkZHJlc3NbMTZdIF9jb250cmFjdHMsIGFkZHJlc3MgX3RvLCB1aW50MjU2IF90b2tlbklkKSBwdWJsaWMgewoJCXJlcXVpcmUoX3RvICE9IGFkZHJlc3MoMCkpOwoJCWFkZFRva2VuKF9jb250cmFjdHMsIF90bywgX3Rva2VuSWQpOwoJCVRyYW5zZmVyKGFkZHJlc3MoMCksIF90bywgX3Rva2VuSWQpOwoJfQoKCS8qKgoJICogQGRldiBCdXJucyBhIHNwZWNpZmljIHRva2VuCgkgKiBAcGFyYW0gX3Rva2VuSWQgdWludDI1NiBJRCBvZiB0aGUgdG9rZW4gYmVpbmcgYnVybmVkCgkgKi8KCWZ1bmN0aW9uIGJ1cm4oYWRkcmVzc1sxNl0gX2NvbnRyYWN0cywgdWludDI1NiBfdG9rZW5JZCkgcHVibGljIHsKCQlhZGRyZXNzIG93bmVyID0gQmRwT3duZXJzaGlwU3RvcmFnZShCZHBDb250cmFjdHMuZ2V0QmRwT3duZXJzaGlwU3RvcmFnZShfY29udHJhY3RzKSkuZ2V0VG9rZW5Pd25lcihfdG9rZW5JZCk7CgkJY2xlYXJBcHByb3ZhbChfY29udHJhY3RzLCBvd25lciwgX3Rva2VuSWQpOwoJCXJlbW92ZVRva2VuKF9jb250cmFjdHMsIG93bmVyLCBfdG9rZW5JZCk7CgkJVHJhbnNmZXIob3duZXIsIGFkZHJlc3MoMCksIF90b2tlbklkKTsKCX0KCn0KCmxpYnJhcnkgQmRwQ3J1ZCB7CgoJZnVuY3Rpb24gY3JlYXRlUmVnaW9uKGFkZHJlc3NbMTZdIF9jb250cmFjdHMsIGFkZHJlc3MgX3RvLCB1aW50MjU2IF94MSwgdWludDI1NiBfeTEsIHVpbnQyNTYgX3gyLCB1aW50MjU2IF95MikgcHVibGljIHJldHVybnMgKHVpbnQyNTYpIHsKCQl2YXIgZGF0YVN0b3JhZ2UgPSBCZHBEYXRhU3RvcmFnZShCZHBDb250cmFjdHMuZ2V0QmRwRGF0YVN0b3JhZ2UoX2NvbnRyYWN0cykpOwoJCXJlcXVpcmUoX3gyIDwgMTAwMCAmJiBfeDEgPD0gX3gyKTsKCQlyZXF1aXJlKF95MiA8IDEwMDAgJiYgX3kxIDw9IF95Mik7CgoJCXZhciByZWdpb25JZCA9IGRhdGFTdG9yYWdlLmdldE5leHRSZWdpb25JZCgpOwoJCWRhdGFTdG9yYWdlLnNldFJlZ2lvbkNvb3JkaW5hdGVzKHJlZ2lvbklkLCBfeDEsIF95MSwgX3gyLCBfeTIpOwoJCWRhdGFTdG9yYWdlLnNldFJlZ2lvbkJsb2NrVXBkYXRlZEF0KHJlZ2lvbklkLCBibG9jay5udW1iZXIpOwoJCWRhdGFTdG9yYWdlLnNldFJlZ2lvblVwZGF0ZWRBdChyZWdpb25JZCwgYmxvY2sudGltZXN0YW1wKTsKCgkJQmRwT3duZXJzaGlwLm1pbnQoX2NvbnRyYWN0cywgX3RvLCByZWdpb25JZCk7CgoJCXJldHVybiByZWdpb25JZDsKCX0KCglmdW5jdGlvbiBkZWxldGVSZWdpb24oYWRkcmVzc1sxNl0gX2NvbnRyYWN0cywgdWludDI1NiBfcmVnaW9uSWQpIHB1YmxpYyB7CgkJdmFyIGRhdGFTdG9yYWdlID0gQmRwRGF0YVN0b3JhZ2UoQmRwQ29udHJhY3RzLmdldEJkcERhdGFTdG9yYWdlKF9jb250cmFjdHMpKTsKCQl2YXIgcmVnaW9uUHVyY2hhc2VQaXhlbFByaWNlID0gZGF0YVN0b3JhZ2UuZ2V0UmVnaW9uUHVyY2hhc2VQaXhlbFByaWNlKF9yZWdpb25JZCk7CgkJcmVxdWlyZShyZWdpb25QdXJjaGFzZVBpeGVsUHJpY2UgPT0gMCk7CgkJQmRwT3duZXJzaGlwLmJ1cm4oX2NvbnRyYWN0cywgX3JlZ2lvbklkKTsKCQlkYXRhU3RvcmFnZS5kZWxldGVSZWdpb25EYXRhKF9yZWdpb25JZCk7Cgl9CgoJZnVuY3Rpb24gc2V0dXBSZWdpb24oYWRkcmVzc1sxNl0gX2NvbnRyYWN0cywgdWludDI1NiBfcmVnaW9uSWQsIHVpbnQyNTYgX2ltYWdlSWQsIHVpbnQyNTZbXSBfaW1hZ2VEYXRhLCBib29sIF9zd2FwSW1hZ2VzLCB1aW50OFsxMjhdIF91cmwpIHB1YmxpYyB7CgkJdmFyIGRhdGFTdG9yYWdlID0gQmRwRGF0YVN0b3JhZ2UoQmRwQ29udHJhY3RzLmdldEJkcERhdGFTdG9yYWdlKF9jb250cmFjdHMpKTsKCQlyZXF1aXJlKEJkcE93bmVyc2hpcC5vd25lck9mKF9jb250cmFjdHMsIF9yZWdpb25JZCkgPT0gbXNnLnNlbmRlcik7CgkJcmVxdWlyZShfaW1hZ2VJZCAhPSAwIHx8IF9pbWFnZURhdGEubGVuZ3RoICE9IDAgfHwgX3N3YXBJbWFnZXMgfHwgX3VybC5sZW5ndGggIT0gMCk7IC8vIE9ubHkgaWYgaW1hZ2Ugb3IgdXJsIGlzIHNwZWNpZmllZAoJCXJlcXVpcmUoYmxvY2sudGltZXN0YW1wIDwgQmRwQ2FsY3VsYXRvci5jYWxjdWxhdGVTZXR1cEFsbG93ZWRVbnRpbChfY29udHJhY3RzLCBfcmVnaW9uSWQpKTsgLy8gQ2FuIG9ubHkgZXhlY3V0ZSBpZiBzZXR1cCBpcyBhbGxvd2VkCgkJQmRwSW1hZ2UuY2hlY2tJbWFnZUlucHV0KF9jb250cmFjdHMsIF9yZWdpb25JZCwgX2ltYWdlSWQsIF9pbWFnZURhdGEsIF9zd2FwSW1hZ2VzLCBmYWxzZSk7CgoJCV91cGRhdGVSZWdpb25JbWFnZShfY29udHJhY3RzLCBkYXRhU3RvcmFnZSwgX3JlZ2lvbklkLCBfaW1hZ2VJZCwgX2ltYWdlRGF0YSwgX3N3YXBJbWFnZXMsIGZhbHNlKTsKCQlfdXBkYXRlUmVnaW9uVXJsKGRhdGFTdG9yYWdlLCBfcmVnaW9uSWQsIF91cmwsIGZhbHNlKTsKCgkJZGF0YVN0b3JhZ2Uuc2V0UmVnaW9uQmxvY2tVcGRhdGVkQXQoX3JlZ2lvbklkLCBibG9jay5udW1iZXIpOwoJCWRhdGFTdG9yYWdlLnNldFJlZ2lvblVwZGF0ZWRBdChfcmVnaW9uSWQsIGJsb2NrLnRpbWVzdGFtcCk7Cgl9CgoJZnVuY3Rpb24gdXBkYXRlUmVnaW9uKGFkZHJlc3NbMTZdIF9jb250cmFjdHMsIHVpbnQyNTYgX3JlZ2lvbklkLCB1aW50MjU2IF9pbWFnZUlkLCB1aW50MjU2W10gX2ltYWdlRGF0YSwgYm9vbCBfc3dhcEltYWdlcywgYm9vbCBfY2xlYXJJbWFnZSwgdWludDhbMTI4XSBfdXJsLCBib29sIF9kZWxldGVVcmwsIGFkZHJlc3MgX25ld093bmVyKSBwdWJsaWMgewoJCXZhciBkYXRhU3RvcmFnZSA9IEJkcERhdGFTdG9yYWdlKEJkcENvbnRyYWN0cy5nZXRCZHBEYXRhU3RvcmFnZShfY29udHJhY3RzKSk7CgkJcmVxdWlyZShCZHBPd25lcnNoaXAub3duZXJPZihfY29udHJhY3RzLCBfcmVnaW9uSWQpID09IG1zZy5zZW5kZXIpOwoJCUJkcEltYWdlLmNoZWNrSW1hZ2VJbnB1dChfY29udHJhY3RzLCBfcmVnaW9uSWQsIF9pbWFnZUlkLCBfaW1hZ2VEYXRhLCBfc3dhcEltYWdlcywgX2NsZWFySW1hZ2UpOwoJCXZhciByZWdpb25DdXJyZW50UGl4ZWxQcmljZSA9IGRhdGFTdG9yYWdlLmdldFJlZ2lvbkN1cnJlbnRQaXhlbFByaWNlKF9yZWdpb25JZCk7CgkJcmVxdWlyZShyZWdpb25DdXJyZW50UGl4ZWxQcmljZSAhPSAwKTsgLy8gcmVnaW9uIHdhcyBwdXJjaGFzZWQKCgkJdmFyIG1hcmtldFBpeGVsUHJpY2UgPSBCZHBDYWxjdWxhdG9yLmNhbGN1bGF0ZUN1cnJlbnRNYXJrZXRQaXhlbFByaWNlKF9jb250cmFjdHMpOwoKCQl2YXIgKGFyZWEsLCkgPSBCZHBDYWxjdWxhdG9yLmNhbGN1bGF0ZUFyZWEoX2NvbnRyYWN0cywgX3JlZ2lvbklkKTsKCQlfcHJvY2Vzc1VwZGF0ZUZlZShfY29udHJhY3RzLCBtYXJrZXRQaXhlbFByaWNlICogYXJlYSAvIDIwKTsKCgkJX3VwZGF0ZVJlZ2lvbkltYWdlKF9jb250cmFjdHMsIGRhdGFTdG9yYWdlLCBfcmVnaW9uSWQsIF9pbWFnZUlkLCBfaW1hZ2VEYXRhLCBfc3dhcEltYWdlcywgX2NsZWFySW1hZ2UpOwoJCV91cGRhdGVSZWdpb25VcmwoZGF0YVN0b3JhZ2UsIF9yZWdpb25JZCwgX3VybCwgX2RlbGV0ZVVybCk7CgkJX3VwZGF0ZVJlZ2lvbk93bmVyKF9jb250cmFjdHMsIF9yZWdpb25JZCwgX25ld093bmVyKTsKCQlpZihtYXJrZXRQaXhlbFByaWNlID4gcmVnaW9uQ3VycmVudFBpeGVsUHJpY2UpIHsKCQkJZGF0YVN0b3JhZ2Uuc2V0UmVnaW9uQ3VycmVudFBpeGVsUHJpY2UoX3JlZ2lvbklkLCBtYXJrZXRQaXhlbFByaWNlKTsKCQl9CgkJZGF0YVN0b3JhZ2Uuc2V0UmVnaW9uQmxvY2tVcGRhdGVkQXQoX3JlZ2lvbklkLCBibG9jay5udW1iZXIpOwoJCWRhdGFTdG9yYWdlLnNldFJlZ2lvblVwZGF0ZWRBdChfcmVnaW9uSWQsIGJsb2NrLnRpbWVzdGFtcCk7Cgl9CgoJZnVuY3Rpb24gdXBkYXRlUmVnaW9uUGl4ZWxQcmljZShhZGRyZXNzWzE2XSBfY29udHJhY3RzLCB1aW50MjU2IF9yZWdpb25JZCwgdWludDI1NiBfcGl4ZWxQcmljZSkgcHVibGljIHsKCQl2YXIgZGF0YVN0b3JhZ2UgPSBCZHBEYXRhU3RvcmFnZShCZHBDb250cmFjdHMuZ2V0QmRwRGF0YVN0b3JhZ2UoX2NvbnRyYWN0cykpOwoJCXJlcXVpcmUoQmRwT3duZXJzaGlwLm93bmVyT2YoX2NvbnRyYWN0cywgX3JlZ2lvbklkKSA9PSBtc2cuc2VuZGVyKTsKCQl2YXIgcmVnaW9uQ3VycmVudFBpeGVsUHJpY2UgPSBkYXRhU3RvcmFnZS5nZXRSZWdpb25DdXJyZW50UGl4ZWxQcmljZShfcmVnaW9uSWQpOwoJCXJlcXVpcmUocmVnaW9uQ3VycmVudFBpeGVsUHJpY2UgIT0gMCk7IC8vIHJlZ2lvbiB3YXMgcHVyY2hhc2VkCgoJCXZhciBtYXJrZXRQaXhlbFByaWNlID0gQmRwQ2FsY3VsYXRvci5jYWxjdWxhdGVDdXJyZW50TWFya2V0UGl4ZWxQcmljZShfY29udHJhY3RzKTsKCQlyZXF1aXJlKF9waXhlbFByaWNlID49IG1hcmtldFBpeGVsUHJpY2UpOwoKCQl2YXIgKGFyZWEsLCkgPSBCZHBDYWxjdWxhdG9yLmNhbGN1bGF0ZUFyZWEoX2NvbnRyYWN0cywgX3JlZ2lvbklkKTsKCQlfcHJvY2Vzc1VwZGF0ZUZlZShfY29udHJhY3RzLCBfcGl4ZWxQcmljZSAqIGFyZWEgLyAyMCk7CgoJCWRhdGFTdG9yYWdlLnNldFJlZ2lvbkN1cnJlbnRQaXhlbFByaWNlKF9yZWdpb25JZCwgX3BpeGVsUHJpY2UpOwoJfQoKCWZ1bmN0aW9uIF9wcm9jZXNzVXBkYXRlRmVlKGFkZHJlc3NbMTZdIF9jb250cmFjdHMsIHVpbnQyNTYgX3VwZGF0ZUZlZSkgaW50ZXJuYWwgewoJCXJlcXVpcmUobXNnLnZhbHVlID49IF91cGRhdGVGZWUpOwoKCQlpZihtc2cudmFsdWUgPiBfdXBkYXRlRmVlKSB7CgkJCXZhciBjaGFuZ2UgPSBtc2cudmFsdWUgLSBfdXBkYXRlRmVlOwoJCQltc2cuc2VuZGVyLnRyYW5zZmVyKGNoYW5nZSk7CgkJfQoKCQl2YXIgZm9yd2FyZFVwZGF0ZUZlZXNUbyA9IEJkcFByaWNlU3RvcmFnZShCZHBDb250cmFjdHMuZ2V0QmRwUHJpY2VTdG9yYWdlKF9jb250cmFjdHMpKS5nZXRGb3J3YXJkVXBkYXRlRmVlc1RvKCk7CgkJaWYoZm9yd2FyZFVwZGF0ZUZlZXNUbyAhPSBhZGRyZXNzKDApKSB7CgkJCWZvcndhcmRVcGRhdGVGZWVzVG8udHJhbnNmZXIoX3VwZGF0ZUZlZSk7CgkJfQoJfQoKCWZ1bmN0aW9uIF91cGRhdGVSZWdpb25JbWFnZShhZGRyZXNzWzE2XSBfY29udHJhY3RzLCBCZHBEYXRhU3RvcmFnZSBfZGF0YVN0b3JhZ2UsIHVpbnQyNTYgX3JlZ2lvbklkLCB1aW50MjU2IF9pbWFnZUlkLCB1aW50MjU2W10gX2ltYWdlRGF0YSwgYm9vbCBfc3dhcEltYWdlcywgYm9vbCBfY2xlYXJJbWFnZSkgaW50ZXJuYWwgewoJCXZhciBpbWFnZVN0b3JhZ2UgPSBCZHBJbWFnZVN0b3JhZ2UoQmRwQ29udHJhY3RzLmdldEJkcEltYWdlU3RvcmFnZShfY29udHJhY3RzKSk7CgkJdmFyIGN1cnJlbnRJbWFnZUlkID0gX2RhdGFTdG9yYWdlLmdldFJlZ2lvbkN1cnJlbnRJbWFnZUlkKF9yZWdpb25JZCk7CgkJaWYoX2ltYWdlSWQgIT0gMCkgewoJCQlpZihjdXJyZW50SW1hZ2VJZCAhPSAwKSB7CgkJCQlpbWFnZVN0b3JhZ2Uuc2V0SW1hZ2VDdXJyZW50UmVnaW9uSWQoY3VycmVudEltYWdlSWQsIDApOwoJCQl9CgkJCV9kYXRhU3RvcmFnZS5zZXRSZWdpb25DdXJyZW50SW1hZ2VJZChfcmVnaW9uSWQsIF9pbWFnZUlkKTsKCQkJaW1hZ2VTdG9yYWdlLnNldEltYWdlQ3VycmVudFJlZ2lvbklkKF9pbWFnZUlkLCBfcmVnaW9uSWQpOwoJCX0KCgkJaWYoX2ltYWdlRGF0YS5sZW5ndGggPiAwKSB7CgkJCWlmKGN1cnJlbnRJbWFnZUlkICE9IDApIHsKCQkJCWltYWdlU3RvcmFnZS5zZXRJbWFnZUN1cnJlbnRSZWdpb25JZChjdXJyZW50SW1hZ2VJZCwgMCk7CgkJCX0KCQkJdmFyICgsIHdpZHRoLCBoZWlnaHQpID0gQmRwQ2FsY3VsYXRvci5jYWxjdWxhdGVBcmVhKF9jb250cmFjdHMsIF9yZWdpb25JZCk7CgkJCXZhciBpbWFnZUlkID0gaW1hZ2VTdG9yYWdlLmNyZWF0ZUltYWdlKG1zZy5zZW5kZXIsIF9yZWdpb25JZCwgdWludDE2KHdpZHRoKSwgdWludDE2KGhlaWdodCksIDEsIDEpOwoJCQlpbWFnZVN0b3JhZ2Uuc2V0SW1hZ2VEYXRhKGltYWdlSWQsIDEsIF9pbWFnZURhdGEpOwoJCQlfZGF0YVN0b3JhZ2Uuc2V0UmVnaW9uQ3VycmVudEltYWdlSWQoX3JlZ2lvbklkLCBpbWFnZUlkKTsKCQkJaW1hZ2VTdG9yYWdlLnNldEltYWdlQ3VycmVudFJlZ2lvbklkKGltYWdlSWQsIF9yZWdpb25JZCk7CgkJfQoKCQlpZihfc3dhcEltYWdlcykgewoJCQlpZihjdXJyZW50SW1hZ2VJZCAhPSAwKSB7CgkJCQlpbWFnZVN0b3JhZ2Uuc2V0SW1hZ2VDdXJyZW50UmVnaW9uSWQoY3VycmVudEltYWdlSWQsIDApOwoJCQl9CgkJCXZhciBuZXh0SW1hZ2VJZCA9IF9kYXRhU3RvcmFnZS5nZXRSZWdpb25OZXh0SW1hZ2VJZChfcmVnaW9uSWQpOwoJCQlfZGF0YVN0b3JhZ2Uuc2V0UmVnaW9uQ3VycmVudEltYWdlSWQoX3JlZ2lvbklkLCBuZXh0SW1hZ2VJZCk7CgkJCWltYWdlU3RvcmFnZS5zZXRJbWFnZUN1cnJlbnRSZWdpb25JZChuZXh0SW1hZ2VJZCwgX3JlZ2lvbklkKTsKCQkJX2RhdGFTdG9yYWdlLnNldFJlZ2lvbk5leHRJbWFnZUlkKF9yZWdpb25JZCwgMCk7CgkJfQoKCQlpZihfY2xlYXJJbWFnZSkgewoJCQlpZihjdXJyZW50SW1hZ2VJZCAhPSAwKSB7CgkJCQlpbWFnZVN0b3JhZ2Uuc2V0SW1hZ2VDdXJyZW50UmVnaW9uSWQoY3VycmVudEltYWdlSWQsIDApOwoJCQl9CgkJCV9kYXRhU3RvcmFnZS5zZXRSZWdpb25DdXJyZW50SW1hZ2VJZChfcmVnaW9uSWQsIDApOwoJCX0KCX0KCglmdW5jdGlvbiBfdXBkYXRlUmVnaW9uVXJsKEJkcERhdGFTdG9yYWdlIF9kYXRhU3RvcmFnZSwgdWludDI1NiBfcmVnaW9uSWQsIHVpbnQ4WzEyOF0gX3VybCwgYm9vbCBfZGVsZXRlVXJsKSBpbnRlcm5hbCB7CgkJaWYoX3VybFswXSAhPSAwKSB7CgkJCV9kYXRhU3RvcmFnZS5zZXRSZWdpb25VcmwoX3JlZ2lvbklkLCBfdXJsKTsKCQl9CgkJaWYoX2RlbGV0ZVVybCkgewoJCQl1aW50OFsxMjhdIG1lbW9yeSBlbXB0eVVybDsKCQkJX2RhdGFTdG9yYWdlLnNldFJlZ2lvblVybChfcmVnaW9uSWQsIGVtcHR5VXJsKTsKCQl9Cgl9CgoJZnVuY3Rpb24gX3VwZGF0ZVJlZ2lvbk93bmVyKGFkZHJlc3NbMTZdIF9jb250cmFjdHMsIHVpbnQyNTYgX3JlZ2lvbklkLCBhZGRyZXNzIF9uZXdPd25lcikgaW50ZXJuYWwgewoJCWlmKF9uZXdPd25lciAhPSBhZGRyZXNzKDApKSB7CgkJCUJkcE93bmVyc2hpcC5jbGVhckFwcHJvdmFsQW5kVHJhbnNmZXIoX2NvbnRyYWN0cywgbXNnLnNlbmRlciwgX25ld093bmVyLCBfcmVnaW9uSWQpOwoJCX0KCX0KCn0KCmxpYnJhcnkgQmRwVHJhbnNmZXIgewoKCXVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwoKCWZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzc1sxNl0gX2NvbnRyYWN0cywgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3JlZ2lvbklkKSBwdWJsaWMgewoJCXJlcXVpcmUoQmRwT3duZXJzaGlwLm93bmVyT2YoX2NvbnRyYWN0cywgX3JlZ2lvbklkKSA9PSBtc2cuc2VuZGVyKTsKCQlCZHBPd25lcnNoaXAuYXBwcm92ZShfY29udHJhY3RzLCBfdG8sIF9yZWdpb25JZCk7Cgl9CgoJZnVuY3Rpb24gcHVyY2hhc2UoYWRkcmVzc1sxNl0gX2NvbnRyYWN0cywgdWludDI1NiBfcmVnaW9uSWQpIHB1YmxpYyB7CgkJdWludDI1NiBwaXhlbFByaWNlID0gQmRwQ2FsY3VsYXRvci5jYWxjdWxhdGVSZWdpb25TYWxlUGl4ZWxQcmljZShfY29udHJhY3RzLCBfcmVnaW9uSWQpOwoJCXZhciAoYXJlYSwsKSA9IEJkcENhbGN1bGF0b3IuY2FsY3VsYXRlQXJlYShfY29udHJhY3RzLCBfcmVnaW9uSWQpOwoJCXVpbnQyNTYgcmVnaW9uUHJpY2UgPSBwaXhlbFByaWNlICogYXJlYTsKCgkJcmVxdWlyZShtc2cudmFsdWUgPj0gcmVnaW9uUHJpY2UgKTsKCgkJaWYobXNnLnZhbHVlID4gcmVnaW9uUHJpY2UpIHsKCQkJdWludDI1NiBjaGFuZ2UgPSBtc2cudmFsdWUgLSByZWdpb25QcmljZTsKCQkJbXNnLnNlbmRlci50cmFuc2ZlcihjaGFuZ2UpOwoJCX0KCgkJQmRwRGF0YVN0b3JhZ2UoQmRwQ29udHJhY3RzLmdldEJkcERhdGFTdG9yYWdlKF9jb250cmFjdHMpKS5zZXRSZWdpb25DdXJyZW50UGl4ZWxQcmljZShfcmVnaW9uSWQsIHBpeGVsUHJpY2UpOwoJCUJkcERhdGFTdG9yYWdlKEJkcENvbnRyYWN0cy5nZXRCZHBEYXRhU3RvcmFnZShfY29udHJhY3RzKSkuc2V0UmVnaW9uQmxvY2tVcGRhdGVkQXQoX3JlZ2lvbklkLCBibG9jay5udW1iZXIpOwoJCUJkcERhdGFTdG9yYWdlKEJkcENvbnRyYWN0cy5nZXRCZHBEYXRhU3RvcmFnZShfY29udHJhY3RzKSkuc2V0UmVnaW9uVXBkYXRlZEF0KF9yZWdpb25JZCwgYmxvY2sudGltZXN0YW1wKTsKCQlCZHBEYXRhU3RvcmFnZShCZHBDb250cmFjdHMuZ2V0QmRwRGF0YVN0b3JhZ2UoX2NvbnRyYWN0cykpLnNldFJlZ2lvblB1cmNoYXNlZEF0KF9yZWdpb25JZCwgYmxvY2sudGltZXN0YW1wKTsKCQlCZHBEYXRhU3RvcmFnZShCZHBDb250cmFjdHMuZ2V0QmRwRGF0YVN0b3JhZ2UoX2NvbnRyYWN0cykpLnNldFJlZ2lvblB1cmNoYXNlZFBpeGVsUHJpY2UoX3JlZ2lvbklkLCBwaXhlbFByaWNlKTsKCgkJQmRwT3duZXJzaGlwLmNsZWFyQXBwcm92YWxBbmRUcmFuc2ZlcihfY29udHJhY3RzLCBCZHBPd25lcnNoaXAub3duZXJPZihfY29udHJhY3RzLCBfcmVnaW9uSWQpLCBtc2cuc2VuZGVyLCBfcmVnaW9uSWQpOwoKCQlpZihCZHBEYXRhU3RvcmFnZShCZHBDb250cmFjdHMuZ2V0QmRwRGF0YVN0b3JhZ2UoX2NvbnRyYWN0cykpLmdldFJlZ2lvbkN1cnJlbnRQaXhlbFByaWNlKF9yZWdpb25JZCkgPiAwKSB7IC8vIHNlbmQgOTUlIGV0aGVyIHRvIG93bmVyT2YoX3JlZ2lvbklkKQoJCQl1aW50MjU2IGV0aGVyVG9QcmV2aW91c093bmVyID0gcmVnaW9uUHJpY2UgKiAxOSAvIDIwOwoJCQlCZHBPd25lcnNoaXAub3duZXJPZihfY29udHJhY3RzLCBfcmVnaW9uSWQpLnRyYW5zZmVyKGV0aGVyVG9QcmV2aW91c093bmVyKTsKCQkJdmFyIGZvcndhcmRVcGRhdGVGZWVzVG8gPSBCZHBQcmljZVN0b3JhZ2UoQmRwQ29udHJhY3RzLmdldEJkcFByaWNlU3RvcmFnZShfY29udHJhY3RzKSkuZ2V0Rm9yd2FyZFVwZGF0ZUZlZXNUbygpOwoJCQlpZihmb3J3YXJkVXBkYXRlRmVlc1RvICE9IGFkZHJlc3MoMCkpIHsKCQkJCWZvcndhcmRVcGRhdGVGZWVzVG8udHJhbnNmZXIocmVnaW9uUHJpY2UgLSBldGhlclRvUHJldmlvdXNPd25lcik7CgkJCX0KCQl9IGVsc2UgewoJCQl2YXIgZm9yd2FyZFB1cmNoYXNlRmVlc1RvID0gQmRwUHJpY2VTdG9yYWdlKEJkcENvbnRyYWN0cy5nZXRCZHBQcmljZVN0b3JhZ2UoX2NvbnRyYWN0cykpLmdldEZvcndhcmRQdXJjaGFzZUZlZXNUbygpOwoJCQlpZihmb3J3YXJkUHVyY2hhc2VGZWVzVG8gIT0gYWRkcmVzcygwKSkgewoJCQkJZm9yd2FyZFB1cmNoYXNlRmVlc1RvLnRyYW5zZmVyKHJlZ2lvblByaWNlKTsKCQkJfQoJCX0KCX0KCn0KCmNvbnRyYWN0IEJkcENvbnRyb2xsZXIgaXMgQmRwQmFzZSB7CgoJZnVuY3Rpb24gbmFtZSgpIGV4dGVybmFsIHB1cmUgcmV0dXJucyAoc3RyaW5nKSB7CgkJcmV0dXJuICJUaGUgQmlsbGlvbiBEb2xsYXIgUGljdHVyZSI7Cgl9CgoJZnVuY3Rpb24gc3ltYm9sKCkgZXh0ZXJuYWwgcHVyZSByZXR1cm5zIChzdHJpbmcpIHsKCQlyZXR1cm4gIkJEUCI7Cgl9CgoJZnVuY3Rpb24gdG9rZW5VUkkodWludDI1NiBfdG9rZW5JZCkgZXh0ZXJuYWwgdmlldyByZXR1cm5zIChzdHJpbmcgX3Rva2VuVVJJKSB7CgkJX3Rva2VuVVJJID0gImh0dHBzOi8vd3d3LmJpbGxpb25kb2xsYXJwaWN0dXJlLmNvbS8jMDAwMDAwMCI7CgkJYnl0ZXMgbWVtb3J5IHRva2VuVVJJQnl0ZXMgPSBieXRlcyhfdG9rZW5VUkkpOwoJCXRva2VuVVJJQnl0ZXNbMzRdID0gYnl0ZSg0OCsoX3Rva2VuSWQgLyAxMDAwMDAwKSAlIDEwKTsKCQl0b2tlblVSSUJ5dGVzWzM1XSA9IGJ5dGUoNDgrKF90b2tlbklkIC8gMTAwMDAwKSAlIDEwKTsKCQl0b2tlblVSSUJ5dGVzWzM2XSA9IGJ5dGUoNDgrKF90b2tlbklkIC8gMTAwMDApICUgMTApOwoJCXRva2VuVVJJQnl0ZXNbMzddID0gYnl0ZSg0OCsoX3Rva2VuSWQgLyAxMDAwKSAlIDEwKTsKCQl0b2tlblVSSUJ5dGVzWzM4XSA9IGJ5dGUoNDgrKF90b2tlbklkIC8gMTAwKSAlIDEwKTsKCQl0b2tlblVSSUJ5dGVzWzM5XSA9IGJ5dGUoNDgrKF90b2tlbklkIC8gMTApICUgMTApOwoJCXRva2VuVVJJQnl0ZXNbNDBdID0gYnl0ZSg0OCsoX3Rva2VuSWQgLyAxKSAlIDEwKTsKCX0KCgoJLy8gQmRwQ3J1ZAoKCWZ1bmN0aW9uIGNyZWF0ZVJlZ2lvbih1aW50MjU2IF94MSwgdWludDI1NiBfeTEsIHVpbnQyNTYgX3gyLCB1aW50MjU2IF95MikgcHVibGljIG9ubHlBdXRob3JpemVkIHJldHVybnMgKHVpbnQyNTYpIHsKCQlCZHBDcnVkLmNyZWF0ZVJlZ2lvbihjb250cmFjdHMsIG1zZy5zZW5kZXIsIF94MSwgX3kxLCBfeDIsIF95Mik7Cgl9CgoJZnVuY3Rpb24gZGVsZXRlUmVnaW9uKHVpbnQyNTYgX3JlZ2lvbklkKSBwdWJsaWMgb25seUF1dGhvcml6ZWQgcmV0dXJucyAodWludDI1NikgewoJCUJkcENydWQuZGVsZXRlUmVnaW9uKGNvbnRyYWN0cywgX3JlZ2lvbklkKTsKCX0KCglmdW5jdGlvbiBzZXR1cFJlZ2lvbih1aW50MjU2IF9yZWdpb25JZCwgdWludDI1NiBfaW1hZ2VJZCwgdWludDI1NltdIF9pbWFnZURhdGEsIGJvb2wgX3N3YXBJbWFnZXMsIHVpbnQ4WzEyOF0gX3VybCkgd2hlbkNvbnRyYWN0QWN0aXZlIHB1YmxpYyB7CgkJQmRwQ3J1ZC5zZXR1cFJlZ2lvbihjb250cmFjdHMsIF9yZWdpb25JZCwgX2ltYWdlSWQsIF9pbWFnZURhdGEsIF9zd2FwSW1hZ2VzLCBfdXJsKTsKCX0KCglmdW5jdGlvbiB1cGRhdGVSZWdpb24odWludDI1NiBfcmVnaW9uSWQsIHVpbnQyNTYgX2ltYWdlSWQsIHVpbnQyNTZbXSBfaW1hZ2VEYXRhLCBib29sIF9zd2FwSW1hZ2VzLCBib29sIF9jbGVhckltYWdlLCB1aW50OFsxMjhdIF91cmwsIGJvb2wgX2RlbGV0ZVVybCwgYWRkcmVzcyBfbmV3T3duZXIpIHdoZW5Db250cmFjdEFjdGl2ZSBwdWJsaWMgcGF5YWJsZSB7CgkJQmRwQ3J1ZC51cGRhdGVSZWdpb24oY29udHJhY3RzLCBfcmVnaW9uSWQsIF9pbWFnZUlkLCBfaW1hZ2VEYXRhLCBfc3dhcEltYWdlcywgX2NsZWFySW1hZ2UsIF91cmwsIF9kZWxldGVVcmwsIF9uZXdPd25lcik7Cgl9CgoJZnVuY3Rpb24gdXBkYXRlUmVnaW9uUGl4ZWxQcmljZSh1aW50MjU2IF9yZWdpb25JZCwgdWludDI1NiBfcGl4ZWxQcmljZSkgd2hlbkNvbnRyYWN0QWN0aXZlIHB1YmxpYyBwYXlhYmxlIHsKCQlCZHBDcnVkLnVwZGF0ZVJlZ2lvblBpeGVsUHJpY2UoY29udHJhY3RzLCBfcmVnaW9uSWQsIF9waXhlbFByaWNlKTsKCX0KCgoJLy8gQmRwSW1hZ2UKCglmdW5jdGlvbiBjaGVja0ltYWdlSW5wdXQodWludDI1NiBfcmVnaW9uSWQsIHVpbnQyNTYgX2ltYWdlSWQsIHVpbnQyNTZbXSBfaW1hZ2VEYXRhLCBib29sIF9zd2FwSW1hZ2VzLCBib29sIF9jbGVhckltYWdlKSB2aWV3IHB1YmxpYyB7CgkJQmRwSW1hZ2UuY2hlY2tJbWFnZUlucHV0KGNvbnRyYWN0cywgX3JlZ2lvbklkLCBfaW1hZ2VJZCwgX2ltYWdlRGF0YSwgX3N3YXBJbWFnZXMsIF9jbGVhckltYWdlKTsKCX0KCglmdW5jdGlvbiBzZXROZXh0SW1hZ2VQYXJ0KHVpbnQyNTYgX3JlZ2lvbklkLCB1aW50MTYgX3BhcnQsIHVpbnQxNiBfcGFydHNDb3VudCwgdWludDE2IF9pbWFnZURlc2NyaXB0b3IsIHVpbnQyNTZbXSBfaW1hZ2VEYXRhKSB3aGVuQ29udHJhY3RBY3RpdmUgcHVibGljIHsKCQlCZHBJbWFnZS5zZXROZXh0SW1hZ2VQYXJ0KGNvbnRyYWN0cywgX3JlZ2lvbklkLCBfcGFydCwgX3BhcnRzQ291bnQsIF9pbWFnZURlc2NyaXB0b3IsIF9pbWFnZURhdGEpOwoJfQoKCgkvLyBCZHBPd25lcnNoaXAKCglmdW5jdGlvbiBvd25lck9mKHVpbnQyNTYgX3Rva2VuSWQpIGV4dGVybmFsIHZpZXcgcmV0dXJucyAoYWRkcmVzcyBfb3duZXIpIHsKCQlyZXR1cm4gQmRwT3duZXJzaGlwLm93bmVyT2YoY29udHJhY3RzLCBfdG9rZW5JZCk7Cgl9CgoJZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBleHRlcm5hbCB2aWV3IHJldHVybnMgKHVpbnQyNTYgX2NvdW50KSB7CgkJcmV0dXJuIEJkcE93bmVyc2hpcFN0b3JhZ2UoQmRwQ29udHJhY3RzLmdldEJkcE93bmVyc2hpcFN0b3JhZ2UoY29udHJhY3RzKSkuZ2V0VG9rZW5JZHNMZW5ndGgoKTsKCX0KCglmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGV4dGVybmFsIHZpZXcgcmV0dXJucyAodWludDI1NiBfY291bnQpIHsKCQlyZXR1cm4gQmRwT3duZXJzaGlwLmJhbGFuY2VPZihjb250cmFjdHMsIF9vd25lcik7Cgl9CgoJZnVuY3Rpb24gdG9rZW5PZk93bmVyQnlJbmRleChhZGRyZXNzIF9vd25lciwgdWludDI1NiBfaW5kZXgpIGV4dGVybmFsIHZpZXcgcmV0dXJucyAodWludDI1NiBfdG9rZW5JZCkgewoJCXJldHVybiBCZHBPd25lcnNoaXBTdG9yYWdlKEJkcENvbnRyYWN0cy5nZXRCZHBPd25lcnNoaXBTdG9yYWdlKGNvbnRyYWN0cykpLmdldE93bmVkVG9rZW4oX293bmVyLCBfaW5kZXgpOwoJfQoKCWZ1bmN0aW9uIHRva2VuQnlJbmRleCh1aW50MjU2IF9pbmRleCkgZXh0ZXJuYWwgdmlldyByZXR1cm5zICh1aW50MjU2KSB7CgkJcmV0dXJuIEJkcE93bmVyc2hpcFN0b3JhZ2UoQmRwQ29udHJhY3RzLmdldEJkcE93bmVyc2hpcFN0b3JhZ2UoY29udHJhY3RzKSkuZ2V0VG9rZW5JZEJ5SW5kZXgoX2luZGV4KTsKCX0KCglmdW5jdGlvbiBnZXRPd25lZEFyZWEoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYpIHsKCQlyZXR1cm4gQmRwT3duZXJzaGlwU3RvcmFnZShCZHBDb250cmFjdHMuZ2V0QmRwT3duZXJzaGlwU3RvcmFnZShjb250cmFjdHMpKS5nZXRPd25lZEFyZWEoX293bmVyKTsKCX0KCgoJLy8gQmRwVHJhbnNmZXIKCglmdW5jdGlvbiBwdXJjaGFzZSh1aW50MjU2IF9yZWdpb25JZCkgd2hlbkNvbnRyYWN0QWN0aXZlIGV4dGVybmFsIHBheWFibGUgewoJCUJkcFRyYW5zZmVyLnB1cmNoYXNlKGNvbnRyYWN0cywgX3JlZ2lvbklkKTsKCX0KCgoJLy8gV2l0aGRyYXcKCglmdW5jdGlvbiB3aXRoZHJhd0JhbGFuY2UoKSBleHRlcm5hbCBvbmx5T3duZXIgewoJCW93bmVyQWRkcmVzcy50cmFuc2Zlcih0aGlzLmJhbGFuY2UpOwoJfQoKCgkvLyBCZHBDb250cm9sbGVySGVscGVyCgoJZnVuY3Rpb24gKCkgcHVibGljIHsKCQlhZGRyZXNzIF9pbXBsID0gQmRwQ29udHJhY3RzLmdldEJkcENvbnRyb2xsZXJIZWxwZXIoY29udHJhY3RzKTsKCQlyZXF1aXJlKF9pbXBsICE9IGFkZHJlc3MoMCkpOwoJCWJ5dGVzIG1lbW9yeSBkYXRhID0gbXNnLmRhdGE7CgoJCWFzc2VtYmx5IHsKCQkJbGV0IHJlc3VsdCA6PSBkZWxlZ2F0ZWNhbGwoZ2FzLCBfaW1wbCwgYWRkKGRhdGEsIDB4MjApLCBtbG9hZChkYXRhKSwgMCwgMCkKCQkJbGV0IHNpemUgOj0gcmV0dXJuZGF0YXNpemUKCQkJbGV0IHB0ciA6PSBtbG9hZCgweDQwKQoJCQlyZXR1cm5kYXRhY29weShwdHIsIDAsIHNpemUpCgkJCXN3aXRjaCByZXN1bHQKCQkJY2FzZSAwIHsgcmV2ZXJ0KHB0ciwgc2l6ZSkgfQoJCQlkZWZhdWx0IHsgcmV0dXJuKHB0ciwgc2l6ZSkgfQoJCX0KCX0KCglmdW5jdGlvbiBCZHBDb250cm9sbGVyKGJ5dGVzOCBfdmVyc2lvbikgcHVibGljIHsKCQlvd25lckFkZHJlc3MgPSBtc2cuc2VuZGVyOwoJCW1hbmFnZXJBZGRyZXNzID0gbXNnLnNlbmRlcjsKCQl2ZXJzaW9uID0gX3ZlcnNpb247Cgl9Cgp9'.
	

]
