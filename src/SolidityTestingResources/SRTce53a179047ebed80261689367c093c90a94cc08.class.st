Class {
	#name : #SRTce53a179047ebed80261689367c093c90a94cc08,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTce53a179047ebed80261689367c093c90a94cc08 >> base64 [
	^ ''.
	

]
