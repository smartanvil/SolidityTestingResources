Class {
	#name : #SRT0b8d56c26d8cf16fe1bddf4967753503d974de06,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT0b8d56c26d8cf16fe1bddf4967753503d974de06 >> base64 [
	^ ''.
	

]
