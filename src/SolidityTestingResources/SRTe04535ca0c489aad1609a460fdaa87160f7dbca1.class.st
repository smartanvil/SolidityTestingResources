Class {
	#name : #SRTe04535ca0c489aad1609a460fdaa87160f7dbca1,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTe04535ca0c489aad1609a460fdaa87160f7dbca1 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTM7Cgpjb250cmFjdCBFUkMyMEJhc2ljIHsKICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsKICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyB3aG8pIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KTsKICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIHRvLCB1aW50MjU2IHZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CiAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiB2YWx1ZSk7Cn0KCmNvbnRyYWN0IEVSQzIwIGlzIEVSQzIwQmFzaWMgewogIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIG93bmVyLCBhZGRyZXNzIHNwZW5kZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KTsKICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvLCB1aW50MjU2IHZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CiAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIHNwZW5kZXIsIHVpbnQyNTYgdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKTsKICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBzcGVuZGVyLCB1aW50MjU2IHZhbHVlKTsKfQoKbGlicmFyeSBTYWZlTWF0aCB7CiAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhICogYjsKICAgIGFzc2VydChhID09IDAgfHwgYyAvIGEgPT0gYik7CiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIGRpdih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgLy8gYXNzZXJ0KGIgPiAwKTsgLy8gU29saWRpdHkgYXV0b21hdGljYWxseSB0aHJvd3Mgd2hlbiBkaXZpZGluZyBieSAwCiAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgIC8vIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOyAvLyBUaGVyZSBpcyBubyBjYXNlIGluIHdoaWNoIHRoaXMgZG9lc24ndCBob2xkCiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgYXNzZXJ0KGMgPj0gYSk7CiAgICByZXR1cm4gYzsKICB9Cn0KCmNvbnRyYWN0IEJhc2ljVG9rZW4gaXMgRVJDMjBCYXNpYyB7CiAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQyNTY7CgogIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsKCiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgcmVxdWlyZShfdG8gIT0gYWRkcmVzcygwKSk7CiAgICByZXF1aXJlKF92YWx1ZSA8PSBiYWxhbmNlc1ttc2cuc2VuZGVyXSk7CgogICAgLy8gU2FmZU1hdGguc3ViIHdpbGwgdGhyb3cgaWYgdGhlcmUgaXMgbm90IGVub3VnaCBiYWxhbmNlLgogICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBiYWxhbmNlc1ttc2cuc2VuZGVyXS5zdWIoX3ZhbHVlKTsKICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfdmFsdWUpOwogICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgcmV0dXJuIHRydWU7CiAgfQoKICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpIHsKICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogIH0KCn0KY29udHJhY3QgU3RhbmRhcmRUb2tlbiBpcyBFUkMyMCwgQmFzaWNUb2tlbiB7CgogIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgaW50ZXJuYWwgYWxsb3dlZDsKCgogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICByZXF1aXJlKF90byAhPSBhZGRyZXNzKDApKTsKICAgIHJlcXVpcmUoX3ZhbHVlIDw9IGJhbGFuY2VzW19mcm9tXSk7CiAgICByZXF1aXJlKF92YWx1ZSA8PSBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSk7CgogICAgYmFsYW5jZXNbX2Zyb21dID0gYmFsYW5jZXNbX2Zyb21dLnN1YihfdmFsdWUpOwogICAgYmFsYW5jZXNbX3RvXSA9IGJhbGFuY2VzW190b10uYWRkKF92YWx1ZSk7CiAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA9IGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdLnN1YihfdmFsdWUpOwogICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKSB7CiAgICByZXR1cm4gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsKICB9CgogIGZ1bmN0aW9uIGluY3JlYXNlQXBwcm92YWwgKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQgX2FkZGVkVmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0uYWRkKF9hZGRlZFZhbHVlKTsKICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIGRlY3JlYXNlQXBwcm92YWwgKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQgX3N1YnRyYWN0ZWRWYWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgdWludCBvbGRWYWx1ZSA9IGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdOwogICAgaWYgKF9zdWJ0cmFjdGVkVmFsdWUgPiBvbGRWYWx1ZSkgewogICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IDA7CiAgICB9IGVsc2UgewogICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IG9sZFZhbHVlLnN1Yihfc3VidHJhY3RlZFZhbHVlKTsKICAgIH0KICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9Cgp9CmNvbnRyYWN0IE93bmFibGUgewogIGFkZHJlc3MgcHVibGljIG93bmVyOwogIGV2ZW50IE93bmVyc2hpcFRyYW5zZmVycmVkKGFkZHJlc3MgaW5kZXhlZCBwcmV2aW91c093bmVyLCBhZGRyZXNzIGluZGV4ZWQgbmV3T3duZXIpOwogIGZ1bmN0aW9uIE93bmFibGUoKSBwdWJsaWN7CiAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgfQogIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICBfOwogIH0KICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld093bmVyKSBvbmx5T3duZXIgcHVibGljIHsKICAgIHJlcXVpcmUobmV3T3duZXIgIT0gYWRkcmVzcygwKSk7CiAgICBPd25lcnNoaXBUcmFuc2ZlcnJlZChvd25lciwgbmV3T3duZXIpOwogICAgb3duZXIgPSBuZXdPd25lcjsKICB9Cgp9CmNvbnRyYWN0IE1pbnRhYmxlVG9rZW4gaXMgU3RhbmRhcmRUb2tlbiwgT3duYWJsZSB7CiAgZXZlbnQgTWludChhZGRyZXNzIGluZGV4ZWQgdG8sIHVpbnQyNTYgYW1vdW50KTsKICBldmVudCBNaW50RmluaXNoZWQoKTsKCiAgYm9vbCBwdWJsaWMgbWludGluZ0ZpbmlzaGVkID0gZmFsc2U7CgoKICBtb2RpZmllciBjYW5NaW50KCkgewogICAgcmVxdWlyZSghbWludGluZ0ZpbmlzaGVkKTsKICAgIF87CiAgfQoKICBmdW5jdGlvbiBtaW50KGFkZHJlc3MgX3RvLCB1aW50MjU2IF9hbW91bnQpIG9ubHlPd25lciBjYW5NaW50IHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICB0b3RhbFN1cHBseSA9IHRvdGFsU3VwcGx5LmFkZChfYW1vdW50KTsKICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfYW1vdW50KTsKICAgIE1pbnQoX3RvLCBfYW1vdW50KTsKICAgIFRyYW5zZmVyKGFkZHJlc3MoMCksIF90bywgX2Ftb3VudCk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CiAgZnVuY3Rpb24gZmluaXNoTWludGluZygpIG9ubHlPd25lciBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgbWludGluZ0ZpbmlzaGVkID0gdHJ1ZTsKICAgIE1pbnRGaW5pc2hlZCgpOwogICAgcmV0dXJuIHRydWU7CiAgfQp9CmNvbnRyYWN0IEJ1cm5hYmxlVG9rZW4gaXMgU3RhbmRhcmRUb2tlbiB7CgogIGZ1bmN0aW9uIGJ1cm4odWludCBfdmFsdWUpIHB1YmxpYyB7CiAgICByZXF1aXJlKF92YWx1ZSA+IDApOwogICAgYWRkcmVzcyBidXJuZXIgPSBtc2cuc2VuZGVyOwogICAgYmFsYW5jZXNbYnVybmVyXSA9IGJhbGFuY2VzW2J1cm5lcl0uc3ViKF92YWx1ZSk7CiAgICB0b3RhbFN1cHBseSA9IHRvdGFsU3VwcGx5LnN1YihfdmFsdWUpOwogICAgQnVybihidXJuZXIsIF92YWx1ZSk7CiAgfQoKICBldmVudCBCdXJuKGFkZHJlc3MgaW5kZXhlZCBidXJuZXIsIHVpbnQgaW5kZXhlZCB2YWx1ZSk7Cgp9CgoKY29udHJhY3QgRVdBIGlzIE1pbnRhYmxlVG9rZW4sIEJ1cm5hYmxlVG9rZW4gewogICAgCiAgICBzdHJpbmcgcHVibGljIGNvbnN0YW50IG5hbWUgPSAiRVdBY29pbiI7CiAgICAKICAgIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgc3ltYm9sID0gIkVXQSI7CiAgICAKICAgIHVpbnQzMiBwdWJsaWMgY29uc3RhbnQgZGVjaW1hbHMgPSAwOwogICAgCiAgICBzdHJ1Y3QgVHJuc2FjdGlvbiB7CiAgICAgICAgYWRkcmVzcyBhZGRyOwogICAgICAgIHVpbnQgdGltZTsKICAgICAgICB1aW50IHZhbHVlOwogICAgfQogICAgCiAgICBtYXBwaW5nICh1aW50ID0+IFRybnNhY3Rpb24pIFRybnNhY3Rpb25Mb2c7CiAgICAKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1Nikgc2VjdXJpdGllczsKICAgICAKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHJvZHVjdGlvbjsKICAgIAogICAgdWludCBwdWJsaWMgc3RhcnRzZWN1cml0aWVzOwogICAgCiAgICB1aW50IHB1YmxpYyBzdGFydHByb2R1Y3Rpb247CiAgICAKICAgIHVpbnQgcHVibGljIHN0YXJ0ZXRoOwogICAgCiAgICBhZGRyZXNzIHB1YmxpYyBtb25leWJhY2thZGRyOwogICAgCiAgICB1aW50IHB1YmxpYyBpOwogICAgCiAgICBmdW5jdGlvbiBFV0EoKSBwdWJsaWN7CgkJb3duZXIgPSBtc2cuc2VuZGVyOwoJCXN0YXJ0c2VjdXJpdGllcyA9IDE1NDYyMTQ0MDA7CgkJc3RhcnRwcm9kdWN0aW9uID0gMTU0NjIxNDQwMDsKCQlzdGFydGV0aCA9IDE1MTQ3NjQ4MDA7CgkJbW9uZXliYWNrYWRkciA9IDB4MEY5OWYzM2NENWE2QjFiNzdlRDkwNUMyMjlGQzE5NjJEMDVmRTc0RjsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gZGVzdHJveWZvcnNlY3VyaXRpZXMgKHVpbnQgX3ZhbHVlKSBwdWJsaWMgewogICAgICAgIHJlcXVpcmUgKF92YWx1ZSA+IDk5OTk5KTsKICAgICAgICByZXF1aXJlIChub3cgPiBzdGFydHNlY3VyaXRpZXMpOwogICAgICAgIGlmKGJhbGFuY2VzW21zZy5zZW5kZXJdID49IF92YWx1ZSAmJiBzZWN1cml0aWVzW21zZy5zZW5kZXJdICsgX3ZhbHVlID49IHNlY3VyaXRpZXNbbXNnLnNlbmRlcl0pIHsKICAgICAgICAgICAgYnVybiAoX3ZhbHVlKTsKICAgICAgICAgICAgc2VjdXJpdGllc1ttc2cuc2VuZGVyXSArPSBfdmFsdWU7CiAgICAgICAgfQogICAgfQogICAgCiAgICBmdW5jdGlvbiBzZWN1cml0aWVzT2YoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50IGJhbGFuY2UpIHsKICAgICAgICByZXR1cm4gc2VjdXJpdGllc1tfb3duZXJdOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBkZXN0cm95Zm9ycHJvZHVjdGlvbiAodWludCBfdmFsdWUpIHB1YmxpYyB7CiAgICAgICAgcmVxdWlyZSAoX3ZhbHVlID4gMCk7CiAgICAgICAgcmVxdWlyZSAobm93ID4gc3RhcnRwcm9kdWN0aW9uKTsKICAgICAgICBpZihiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfdmFsdWUgJiYgcHJvZHVjdGlvblttc2cuc2VuZGVyXSArIF92YWx1ZSA+PSBwcm9kdWN0aW9uW21zZy5zZW5kZXJdKSB7CiAgICAgICAgICAgIGJ1cm4gKF92YWx1ZSk7CiAgICAgICAgICAgIHByb2R1Y3Rpb25bbXNnLnNlbmRlcl0gKz0gX3ZhbHVlOwogICAgICAgIH0KICAgIH0KICAgIAogICAgZnVuY3Rpb24gcHJvZHVjdGlvbk9mKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludCBiYWxhbmNlKSB7CiAgICAgICAgcmV0dXJuIHByb2R1Y3Rpb25bX293bmVyXTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gZGVzdHJveWZvcmV0aCAodWludCBfdmFsdWUpIHB1YmxpYyB7CiAgICAgICAgcmVxdWlyZSAoX3ZhbHVlID4gMCk7CiAgICAgICAgcmVxdWlyZSAobm93ID4gc3RhcnRldGgpOwogICAgICAgIHJlcXVpcmUgKHRoaXMuYmFsYW5jZSA+IF92YWx1ZS5tdWwoMTIwMDAwMDAwMDAwMDAwKSk7CiAgICAgICAgaWYoYmFsYW5jZXNbbXNnLnNlbmRlcl0gPj0gX3ZhbHVlKSB7CiAgICAgICAgICAgIGJ1cm4gKF92YWx1ZSk7CiAgICAgICAgICAgIFRybnNhY3Rpb25Mb2dbaV0uYWRkciA9IG1zZy5zZW5kZXI7CiAgICAgICAgICAgIFRybnNhY3Rpb25Mb2dbaV0udGltZSA9IG5vdzsKICAgICAgICAgICAgVHJuc2FjdGlvbkxvZ1tpXS52YWx1ZSA9IF92YWx1ZTsKICAgICAgICAgICAgaSsrOwogICAgICAgICAgICBtc2cuc2VuZGVyLnRyYW5zZmVyKF92YWx1ZS5tdWwoMTIwMDAwMDAwMDAwMDAwKSk7CiAgICAgICAgfQogICAgfQogICAgCiAgICBmdW5jdGlvbiBzaG93VHJuc2FjdGlvbkxvZyAodWludCBfbnVtYmVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAoYWRkcmVzcyBhZGRyLCB1aW50IHRpbWUsIHVpbnQgdmFsdWUpIHsKICAgICAgICByZXR1cm4gKFRybnNhY3Rpb25Mb2dbX251bWJlcl0uYWRkciwgVHJuc2FjdGlvbkxvZ1tfbnVtYmVyXS50aW1lLCBUcm5zYWN0aW9uTG9nW19udW1iZXJdLnZhbHVlKTsgICAKICAgIH0KICAgIAogICAgZnVuY3Rpb24gbW9uZXliYWNrICgpIHB1YmxpYyB7CiAgICAgICAgcmVxdWlyZSAgKG1zZy5zZW5kZXIgPT0gbW9uZXliYWNrYWRkcik7CiAgICAgICAgdWludDI1NiBiYWwgPSBiYWxhbmNlMSgpOwogICAgICAgIGlmIChiYWwgPiAxMCApIHsKICAgICAgICAgICAgbW9uZXliYWNrYWRkci50cmFuc2ZlcihiYWwpOwogICAgICAgIH0KICAgIH0KICAgIAogICAgZnVuY3Rpb24gYmFsYW5jZTEgKCkgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpewogICAgICAgIHJldHVybiB0aGlzLmJhbGFuY2U7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uKCkgZXh0ZXJuYWwgcGF5YWJsZSB7CiAgICB9CiAgICAKfQ=='.
	

]
