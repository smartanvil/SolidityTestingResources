Class {
	#name : #SRT97e7ef310499be2f97c392b8b16ddd494af73e22,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT97e7ef310499be2f97c392b8b16ddd494af73e22 >> base64 [
	^ ''.
	

]
