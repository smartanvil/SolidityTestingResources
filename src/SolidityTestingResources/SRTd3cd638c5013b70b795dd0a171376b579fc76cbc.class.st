Class {
	#name : #SRTd3cd638c5013b70b795dd0a171376b579fc76cbc,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTd3cd638c5013b70b795dd0a171376b579fc76cbc >> base64 [
	^ ''.
	

]
