Class {
	#name : #SRTc3b7663ab5b9322871374af1fc967a926abe841a,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTc3b7663ab5b9322871374af1fc967a926abe841a >> base64 [
	^ ''.
	

]
