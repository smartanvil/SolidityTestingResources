Class {
	#name : #SRT5f939A81B13B5490a66a3b58FdE465Ff2aB8684E,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT5f939A81B13B5490a66a3b58FdE465Ff2aB8684E >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7Cgpjb250cmFjdCBTYW5kd2ljaFNob3AKewogICAgYWRkcmVzcyBvd25lcjsKCiAgICBtb2RpZmllciBvbmx5T3duZXIoKQogICAgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICAgICAgXzsKICAgIH0KCiAgICBzdHJ1Y3QgU2FuZHdpY2gKICAgIHsKICAgICAgICB1aW50IHNhbmR3aWNoSUQ7CiAgICAgICAgc3RyaW5nIHNhbmR3aWNoTmFtZTsKICAgICAgICBzdHJpbmcgc2FuZHdpY2hEZXNjOwogICAgICAgIHN0cmluZyBjYWxvcmllczsKICAgICAgICB1aW50IHByaWNlOwogICAgICAgIHVpbnQgcXVhbnRpdHk7CiAgICB9CgogICAgc3RydWN0IE9yZGVyZWRTYW5kd2ljaAogICAgewogICAgICAgIHVpbnQgc2FuZHdpY2hJZE51bWJlcjsKICAgICAgICBzdHJpbmcgbm90ZXM7CiAgICAgICAgdWludCBwcmljZTsKICAgIH0KICAgIAogICAgZXZlbnQgTmV3U2FuZHdpY2hUaWNrZXQoIHN0cmluZyBuYW1lLCBhZGRyZXNzIGN1c3RvbWVyLCBzdHJpbmcgc2FuZE5hbWUsIHN0cmluZyBzYW5kQ2hhbmdlcyApOwoKICAgIFNhbmR3aWNoWzVdIHNob3BTYW5kd2ljaDsKICAgIG1hcHBpbmcoIGFkZHJlc3MgPT4gT3JkZXJlZFNhbmR3aWNoW10gKSBwdWJsaWMgY2FydDsKICAgIG1hcHBpbmcoIGFkZHJlc3MgPT4gdWludCApIHB1YmxpYyBzdWJ0b3RhbDsKCiAgICBmdW5jdGlvbiBTYW5kd2ljaFNob3AoKSBwdWJsaWMKICAgIHsKICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7CgogICAgICAgIHNob3BTYW5kd2ljaFswXS5zYW5kd2ljaElEID0gMDsKICAgICAgICBzaG9wU2FuZHdpY2hbMF0uc2FuZHdpY2hOYW1lID0gIjAwOiAgSGFtICYgU3dpc3MiOwogICAgICAgIHNob3BTYW5kd2ljaFswXS5zYW5kd2ljaERlc2MgPSAiSGFtIFN3aXNzIE11c3RhcmQgUnllIjsKICAgICAgICBzaG9wU2FuZHdpY2hbMF0uY2Fsb3JpZXMgPSAiNDUwIGNhbG9yaWVzIjsKICAgICAgICBzaG9wU2FuZHdpY2hbMF0ucHJpY2UgPSA0MCBmaW5uZXk7CiAgICAgICAgc2hvcFNhbmR3aWNoWzBdLnF1YW50aXR5ID0gMjAwOwoKICAgICAgICBzaG9wU2FuZHdpY2hbMV0uc2FuZHdpY2hJRCA9IDE7CiAgICAgICAgc2hvcFNhbmR3aWNoWzFdLnNhbmR3aWNoTmFtZSA9ICIwMTogIFR1cmtleSAmIFBlcHBlcmphY2siOwogICAgICAgIHNob3BTYW5kd2ljaFsxXS5zYW5kd2ljaERlc2MgPSAiVHVya2V5IFBlcHBlcmphY2sgTWF5byBXaGl0ZSBCcmVhZCI7CiAgICAgICAgc2hvcFNhbmR3aWNoWzFdLmNhbG9yaWVzID0gIjUwMCBjYWxvcmllcyI7CiAgICAgICAgc2hvcFNhbmR3aWNoWzFdLnByaWNlID0gNDUgZmlubmV5OwogICAgICAgIHNob3BTYW5kd2ljaFsxXS5xdWFudGl0eSA9IDIwMDsKCiAgICAgICAgc2hvcFNhbmR3aWNoWzJdLnNhbmR3aWNoSUQgPSAyOwogICAgICAgIHNob3BTYW5kd2ljaFsyXS5zYW5kd2ljaE5hbWUgPSAiMDI6ICBSb2FzdCBCZWVmICYgQW1lcmljYW4iOwogICAgICAgIHNob3BTYW5kd2ljaFsyXS5zYW5kd2ljaERlc2MgPSAiUm9hc3QgQmVlZiBIYXZhcnRpIEhvcnNlcmFkaXNoIFdoaXRlIEJyZWFkIjsKICAgICAgICBzaG9wU2FuZHdpY2hbMl0uY2Fsb3JpZXMgPSAiNjAwIGNhbG9yaWVzIjsKICAgICAgICBzaG9wU2FuZHdpY2hbMl0ucHJpY2UgPSA1MCBmaW5uZXk7CiAgICAgICAgc2hvcFNhbmR3aWNoWzJdLnF1YW50aXR5ID0gMjAwOwoKICAgICAgICBzaG9wU2FuZHdpY2hbM10uc2FuZHdpY2hJRCA9IDM7CiAgICAgICAgc2hvcFNhbmR3aWNoWzNdLnNhbmR3aWNoTmFtZSA9ICIwMzogIFJldWJlbiI7CiAgICAgICAgc2hvcFNhbmR3aWNoWzNdLnNhbmR3aWNoRGVzYyA9ICJDb3JuZWQgQmVlZiBTYXVlcmtyYXV0IFN3aXNzIFJ5ZSI7CiAgICAgICAgc2hvcFNhbmR3aWNoWzNdLmNhbG9yaWVzID0gIjU1MCBjYWxvcmllcyI7CiAgICAgICAgc2hvcFNhbmR3aWNoWzNdLnByaWNlID0gNTAgZmlubmV5OwogICAgICAgIHNob3BTYW5kd2ljaFszXS5xdWFudGl0eSA9IDIwMDsKCiAgICAgICAgc2hvcFNhbmR3aWNoWzRdLnNhbmR3aWNoSUQgPSA0OwogICAgICAgIHNob3BTYW5kd2ljaFs0XS5zYW5kd2ljaE5hbWUgPSAiMDQ6ICBJdGFsaWFuIjsKICAgICAgICBzaG9wU2FuZHdpY2hbNF0uc2FuZHdpY2hEZXNjID0gIlNhbGFtaSBQZXBwZXJzIFByb3ZvbG9uZSBPaWwgVmluZWdhciBXaGl0ZSI7CiAgICAgICAgc2hvcFNhbmR3aWNoWzRdLmNhbG9yaWVzID0gIjUwMCBjYWxvcmllcyI7CiAgICAgICAgc2hvcFNhbmR3aWNoWzRdLnByaWNlID0gNDAgZmlubmV5OwogICAgICAgIHNob3BTYW5kd2ljaFs0XS5xdWFudGl0eSA9IDIwMDsKICAgIH0KCiAgICBmdW5jdGlvbiBnZXRNZW51KCkgY29uc3RhbnQgcmV0dXJucyAoc3RyaW5nLCBzdHJpbmcsIHN0cmluZywgc3RyaW5nLCBzdHJpbmcpCiAgICB7CiAgICAgICAgcmV0dXJuIChzaG9wU2FuZHdpY2hbMF0uc2FuZHdpY2hOYW1lLCBzaG9wU2FuZHdpY2hbMV0uc2FuZHdpY2hOYW1lLAogICAgICAgICAgICAgICAgc2hvcFNhbmR3aWNoWzJdLnNhbmR3aWNoTmFtZSwgc2hvcFNhbmR3aWNoWzNdLnNhbmR3aWNoTmFtZSwKICAgICAgICAgICAgICAgIHNob3BTYW5kd2ljaFs0XS5zYW5kd2ljaE5hbWUgKTsKICAgIH0KCiAgICBmdW5jdGlvbiBnZXRTYW5kd2ljaEluZm8odWludCBfc2FuZHdpY2hJZCkgY29uc3RhbnQgcmV0dXJucyAoc3RyaW5nLCBzdHJpbmcsIHN0cmluZywgdWludCwgdWludCkKICAgIHsKICAgICAgICBpZiggX3NhbmR3aWNoSWQgPiA0ICkKICAgICAgICB7CiAgICAgICAgICAgIHJldHVybiAoICJ3cm9uZyBJRCIsICJ3cm9uZyBJRCIsICJ6ZXJvIiwgMCwgMCk7CiAgICAgICAgfQogICAgICAgIGVsc2UKICAgICAgICB7CiAgICAgICAgICAgIHJldHVybiAoc2hvcFNhbmR3aWNoW19zYW5kd2ljaElkXS5zYW5kd2ljaE5hbWUsIHNob3BTYW5kd2ljaFtfc2FuZHdpY2hJZF0uc2FuZHdpY2hEZXNjLAogICAgICAgICAgICAgICAgICAgIHNob3BTYW5kd2ljaFtfc2FuZHdpY2hJZF0uY2Fsb3JpZXMsIHNob3BTYW5kd2ljaFtfc2FuZHdpY2hJZF0ucHJpY2UsIHNob3BTYW5kd2ljaFtfc2FuZHdpY2hJZF0ucXVhbnRpdHkpOwoKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gYWRkVG9DYXJ0KHVpbnQgX3NhbmR3aWNoSUQsIHN0cmluZyBfbm90ZXMpIHJldHVybnMgKHVpbnQpCiAgICB7CiAgICAgICAgaWYoIHNob3BTYW5kd2ljaFtfc2FuZHdpY2hJRF0ucXVhbnRpdHkgPiAwICkKICAgICAgICB7CiAgICAgICAgICAgIE9yZGVyZWRTYW5kd2ljaCBtZW1vcnkgbmV3T3JkZXI7CiAgICAgICAgICAgIG5ld09yZGVyLnNhbmR3aWNoSWROdW1iZXIgPSBfc2FuZHdpY2hJRDsKICAgICAgICAgICAgbmV3T3JkZXIubm90ZXMgPSBfbm90ZXM7CiAgICAgICAgICAgIG5ld09yZGVyLnByaWNlID0gc2hvcFNhbmR3aWNoW19zYW5kd2ljaElEXS5wcmljZTsKICAgICAgICAgICAgc3VidG90YWxbbXNnLnNlbmRlcl0gKz0gbmV3T3JkZXIucHJpY2U7CgogICAgICAgICAgICByZXR1cm4gY2FydFttc2cuc2VuZGVyXS5wdXNoKG5ld09yZGVyKTsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgcmV0dXJuIGNhcnRbbXNnLnNlbmRlcl0ubGVuZ3RoOwogICAgICAgIH0KICAgIH0KCgogICAgZnVuY3Rpb24gZ2V0Q2FydExlbmd0aChhZGRyZXNzIF9jdXJpb3VzKSBjb25zdGFudCByZXR1cm5zICh1aW50KQogICAgewogICAgICAgIHJldHVybiBjYXJ0W19jdXJpb3VzXS5sZW5ndGg7CiAgICB9CgogICAgZnVuY3Rpb24gZ2V0Q2FydEl0ZW1JbmZvKGFkZHJlc3MgX2N1cmlvdXMsIHVpbnQgX3Nsb3QpIGNvbnN0YW50IHJldHVybnMgKHVpbnQsIHN0cmluZykKICAgIHsKICAgICAgICByZXR1cm4gKGNhcnRbX2N1cmlvdXNdW19zbG90XS5zYW5kd2ljaElkTnVtYmVyLCBjYXJ0W19jdXJpb3VzXVtfc2xvdF0ubm90ZXMpOwogICAgfQoKICAgIGZ1bmN0aW9uIGVtcHR5Q2FydCgpIHB1YmxpYwogICAgewogICAgICAgIGRlbGV0ZSBjYXJ0W21zZy5zZW5kZXJdOwogICAgICAgIHN1YnRvdGFsW21zZy5zZW5kZXJdID0gMDsKICAgIH0KCiAgICBmdW5jdGlvbiBnZXRDYXJ0U3VidG90YWwoYWRkcmVzcyBfY3VyaW91cykgY29uc3RhbnQgcmV0dXJucyAodWludCkKICAgIHsKICAgICAgICByZXR1cm4gc3VidG90YWxbX2N1cmlvdXNdOwogICAgfQoKICAgIGZ1bmN0aW9uIGNoZWNrb3V0Q2FydChzdHJpbmcgX2ZpcnN0bmFtZSkgcGF5YWJsZSByZXR1cm5zICh1aW50KQogICAgewogICAgICAgIGlmKCBtc2cudmFsdWUgPCBzdWJ0b3RhbFttc2cuc2VuZGVyXSApeyByZXZlcnQoKTsgfQoKICAgICAgICBmb3IoIHVpbnQgeCA9IDA7IHggPCBjYXJ0W21zZy5zZW5kZXJdLmxlbmd0aDsgeCsrICkKICAgICAgICB7CiAgICAgICAgICAgIGlmKCBzaG9wU2FuZHdpY2hbIGNhcnRbbXNnLnNlbmRlcl1beF0uc2FuZHdpY2hJZE51bWJlciBdLnF1YW50aXR5ID4gMCApCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIE5ld1NhbmR3aWNoVGlja2V0KCBfZmlyc3RuYW1lLCBtc2cuc2VuZGVyLCAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG9wU2FuZHdpY2hbIGNhcnRbbXNnLnNlbmRlcl1beF0uc2FuZHdpY2hJZE51bWJlciBdLnNhbmR3aWNoTmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXJ0W21zZy5zZW5kZXJdW3hdLm5vdGVzICk7CiAgICAgICAgICAgICAgICBkZWNyZW1lbnRRdWFudGl0eSggY2FydFttc2cuc2VuZGVyXVt4XS5zYW5kd2ljaElkTnVtYmVyICk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICByZXZlcnQoKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBzdWJ0b3RhbFttc2cuc2VuZGVyXSA9IDA7CiAgICAgICAgZGVsZXRlIGNhcnRbbXNnLnNlbmRlcl07CiAgICAgICAgcmV0dXJuIG5vdzsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZ1bmRzQWRtaW5Pbmx5KGFkZHJlc3MgYWRkciwgdWludCBhbW91bnQpIG9ubHlPd25lcgogICAgewogICAgICAgIGlmKCBhbW91bnQgPD0gdGhpcy5iYWxhbmNlICkKICAgICAgICB7CiAgICAgICAgICAgIGFkZHIudHJhbnNmZXIoYW1vdW50KTsKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gZGVjcmVtZW50UXVhbnRpdHkodWludCBfc2FuZG51bSkgcHJpdmF0ZQogICAgewogICAgICAgIHNob3BTYW5kd2ljaFtfc2FuZG51bV0ucXVhbnRpdHktLTsKICAgIH0KCiAgICBmdW5jdGlvbiBzZXRRdWFudGl0eUFkbWluT25seSh1aW50IF9zYW5kbnVtLCB1aW50IF9xdWFudGl0eSkgb25seU93bmVyCiAgICB7CiAgICAgICAgc2hvcFNhbmR3aWNoW19zYW5kbnVtXS5xdWFudGl0eSA9IF9xdWFudGl0eTsKICAgIH0KCiAgICBmdW5jdGlvbiBraWxsQWRtaW5Pbmx5KCkgb25seU93bmVyCiAgICB7CiAgICAgICAgc2VsZmRlc3RydWN0KG93bmVyKTsKICAgIH0KCn0='.
	

]
