Class {
	#name : #SRT007d42b9192b8C087b0D3E6ef73AAE48E74b41c1,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT007d42b9192b8C087b0D3E6ef73AAE48E74b41c1 >> base64 [
	^ ''.
	

]
