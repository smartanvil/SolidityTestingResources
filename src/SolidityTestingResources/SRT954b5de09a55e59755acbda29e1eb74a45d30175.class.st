Class {
	#name : #SRT954b5de09a55e59755acbda29e1eb74a45d30175,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT954b5de09a55e59755acbda29e1eb74a45d30175 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7CgovKioKICogRVJDIDIwIHRva2VuCiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8yMAogKi8KaW50ZXJmYWNlIFRva2VuIHsKCiAgICAvLy8gQHJldHVybiB0b3RhbCBhbW91bnQgb2YgdG9rZW5zCiAgICAvLy8gZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBzdXBwbHkpOwogICAgLy8vIGRvIG5vdCBkZWNsYXJlIHRvdGFsU3VwcGx5KCkgaGVyZSwgc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9PcGVuWmVwcGVsaW4vemVwcGVsaW4tc29saWRpdHkvaXNzdWVzLzQzNAoKICAgIC8vLyBAcGFyYW0gX293bmVyIFRoZSBhZGRyZXNzIGZyb20gd2hpY2ggdGhlIGJhbGFuY2Ugd2lsbCBiZSByZXRyaWV2ZWQKICAgIC8vLyBAcmV0dXJuIFRoZSBiYWxhbmNlCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpOwoKICAgIC8vLyBAbm90aWNlIHNlbmQgYF92YWx1ZWAgdG9rZW4gdG8gYF90b2AgZnJvbSBgbXNnLnNlbmRlcmAKICAgIC8vLyBAcGFyYW0gX3RvIFRoZSBhZGRyZXNzIG9mIHRoZSByZWNpcGllbnQKICAgIC8vLyBAcGFyYW0gX3ZhbHVlIFRoZSBhbW91bnQgb2YgdG9rZW4gdG8gYmUgdHJhbnNmZXJyZWQKICAgIC8vLyBAcmV0dXJuIFdoZXRoZXIgdGhlIHRyYW5zZmVyIHdhcyBzdWNjZXNzZnVsIG9yIG5vdAogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKCiAgICAvLy8gQG5vdGljZSBzZW5kIGBfdmFsdWVgIHRva2VuIHRvIGBfdG9gIGZyb20gYF9mcm9tYCBvbiB0aGUgY29uZGl0aW9uIGl0IGlzIGFwcHJvdmVkIGJ5IGBfZnJvbWAKICAgIC8vLyBAcGFyYW0gX2Zyb20gVGhlIGFkZHJlc3Mgb2YgdGhlIHNlbmRlcgogICAgLy8vIEBwYXJhbSBfdG8gVGhlIGFkZHJlc3Mgb2YgdGhlIHJlY2lwaWVudAogICAgLy8vIEBwYXJhbSBfdmFsdWUgVGhlIGFtb3VudCBvZiB0b2tlbiB0byBiZSB0cmFuc2ZlcnJlZAogICAgLy8vIEByZXR1cm4gV2hldGhlciB0aGUgdHJhbnNmZXIgd2FzIHN1Y2Nlc3NmdWwgb3Igbm90CiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKCiAgICAvLy8gQG5vdGljZSBgbXNnLnNlbmRlcmAgYXBwcm92ZXMgYF9hZGRyYCB0byBzcGVuZCBgX3ZhbHVlYCB0b2tlbnMKICAgIC8vLyBAcGFyYW0gX3NwZW5kZXIgVGhlIGFkZHJlc3Mgb2YgdGhlIGFjY291bnQgYWJsZSB0byB0cmFuc2ZlciB0aGUgdG9rZW5zCiAgICAvLy8gQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IG9mIHdlaSB0byBiZSBhcHByb3ZlZCBmb3IgdHJhbnNmZXIKICAgIC8vLyBAcmV0dXJuIFdoZXRoZXIgdGhlIGFwcHJvdmFsIHdhcyBzdWNjZXNzZnVsIG9yIG5vdAogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CgogICAgLy8vIEBwYXJhbSBfb3duZXIgVGhlIGFkZHJlc3Mgb2YgdGhlIGFjY291bnQgb3duaW5nIHRva2VucwogICAgLy8vIEBwYXJhbSBfc3BlbmRlciBUaGUgYWRkcmVzcyBvZiB0aGUgYWNjb3VudCBhYmxlIHRvIHRyYW5zZmVyIHRoZSB0b2tlbnMKICAgIC8vLyBAcmV0dXJuIEFtb3VudCBvZiByZW1haW5pbmcgdG9rZW5zIGFsbG93ZWQgdG8gc3BlbnQKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKTsKCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsKICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpOwoKfQoKCi8qKiBAdGl0bGUgRmx1ekZsdXogKEZMVVogY29udHJhY3QpICoqLwoKY29udHJhY3QgRmx1eiBpcyBUb2tlbiB7CgogICAgc3RyaW5nIHB1YmxpYyBjb25zdGFudCBuYW1lID0gIkZsdXpGbHV6IjsKICAgIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgc3ltYm9sID0gIkZMVVoiOwogICAgdWludDggcHVibGljIGNvbnN0YW50IGRlY2ltYWxzID0gMTg7CiAgICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCB0b3RhbFN1cHBseSA9IDIwNDc4MDAwMCAqIDEwKioxODsKCiAgICB1aW50IHB1YmxpYyBsYXVuY2hlZCA9IDA7IC8vIFRpbWUgb2YgbG9ja2luZyBkaXN0cmlidXRpb24gYW5kIHJldGlyaW5nIGZvdW5kZXI7IDAgbWVhbnMgbm90IGxhdW5jaGVkCiAgICBhZGRyZXNzIHB1YmxpYyBmb3VuZGVyID0gMHg4MUQ1Y2U1QmYxRjRGMGE1NzZEZTExRmQ5NjMxZTc4OUQ3MmM5QmRFOyAvLyBGb3VuZGVyJ3MgYWRkcmVzcwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBwdWJsaWMgYmFsYW5jZXM7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikpIHB1YmxpYyBhbGxvd2VkOwogICAgCiAgICBib29sIHB1YmxpYyB0cmFuc2ZlcnNBcmVMb2NrZWQgPSB0cnVlOwoKICAgIGZ1bmN0aW9uIEZsdXooKSBwdWJsaWMgewogICAgICAgIGJhbGFuY2VzW2ZvdW5kZXJdID0gdG90YWxTdXBwbHk7CiAgICB9CiAgICAKICAgIC8qKgogICAgICogTW9kaWZpZXIgdG8gY2hlY2sgd2hldGhlciB0cmFuc2ZlcnMgYXJlIHVubG9ja2VkIG9yIHRoZSBvd25lciBpcyBzZW5kaW5nCiAgICAgKi8KICAgIG1vZGlmaWVyIGNhblRyYW5zZmVyKCkgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBmb3VuZGVyIHx8ICF0cmFuc2ZlcnNBcmVMb2NrZWQpOwogICAgICAgIF87CiAgICB9CiAgICAKICAgIC8qKgogICAgICogTW9kaWZpZXIgdG8gYWxsb3cgb25seSBmb3VuZGVyIHRvIHRyYW5zZmVyCiAgICAgKi8KICAgIG1vZGlmaWVyIG9ubHlGb3VuZGVyKCkgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBmb3VuZGVyKTsKICAgICAgICBfOwogICAgfQoKICAgIC8qKgogICAgICogVHJhbnNmZXIgd2l0aCBjaGVja2luZyBpZiBpdCdzIGFsbG93ZWQKICAgICAqLwogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgY2FuVHJhbnNmZXIgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgaWYgKGJhbGFuY2VzW21zZy5zZW5kZXJdIDwgX3ZhbHVlKSB7CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOwogICAgICAgIGJhbGFuY2VzW190b10gKz0gX3ZhbHVlOwogICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICAvKioKICAgICAqIFRyYW5zZmVyIHdpdGggY2hlY2tpbmcgaWYgaXQncyBhbGxvd2VkCiAgICAgKi8KICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyBjYW5UcmFuc2ZlciByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBpZiAoYmFsYW5jZXNbX2Zyb21dIDwgX3ZhbHVlIHx8IGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdIDwgX3ZhbHVlKSB7CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICAgICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOwogICAgICAgIGJhbGFuY2VzW19mcm9tXSAtPSBfdmFsdWU7CiAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfdmFsdWU7CiAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICAvKioKICAgICAqIERlZmF1bHQgYmFsYW5jZU9mIGZ1bmN0aW9uCiAgICAgKi8KICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgewogICAgICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogICAgfQoKICAgIC8qKgogICAgICogRGVmYXVsdCBhcHByb3ZhbCBmdW5jdGlvbgogICAgICovCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgLyoqCiAgICAgKiBHZXQgdXNlciBhbGxvd2FuY2UKICAgICAqLwogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpIHsKICAgICAgICByZXR1cm4gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsKICAgIH0KCiAgICAvKioKICAgICAqIExhdW5jaCBhbmQgcmV0aXJlIHRoZSBmb3VuZGVyIAogICAgICovCiAgICBmdW5jdGlvbiBsYXVuY2goKSBwdWJsaWMgb25seUZvdW5kZXIgewogICAgICAgIGxhdW5jaGVkID0gYmxvY2sudGltZXN0YW1wOwogICAgICAgIGZvdW5kZXIgPSAweDA7CiAgICB9CiAgICAKICAgIC8qKgogICAgICogQ2hhbmdlIHRyYW5zZmVyIGxvY2tpbmcgc3RhdGUKICAgICAqLwogICAgZnVuY3Rpb24gY2hhbmdlVHJhbnNmZXJMb2NrKGJvb2wgbG9ja2VkKSBwdWJsaWMgb25seUZvdW5kZXIgewogICAgICAgIHRyYW5zZmVyc0FyZUxvY2tlZCA9IGxvY2tlZDsKICAgIH0KCiAgICBmdW5jdGlvbigpIHB1YmxpYyB7IC8vIG5vIGRpcmVjdCBwdXJjaGFzZXMKICAgICAgICByZXZlcnQoKTsKICAgIH0KCn0='.
	

]
