Class {
	#name : #SRT38b479b2075a80917da2f4e6c48b398f13cef44d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT38b479b2075a80917da2f4e6c48b398f13cef44d >> base64 [
	^ ''.
	

]
