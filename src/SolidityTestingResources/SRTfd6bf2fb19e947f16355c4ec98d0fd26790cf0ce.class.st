Class {
	#name : #SRTfd6bf2fb19e947f16355c4ec98d0fd26790cf0ce,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTfd6bf2fb19e947f16355c4ec98d0fd26790cf0ce >> base64 [
	^ ''.
	

]
