Class {
	#name : #SRT9d43c34a050d5c1a865b09993a0d1d04ec4432ab,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT9d43c34a050d5c1a865b09993a0d1d04ec4432ab >> base64 [
	^ 'LyoKClJlYWQgY29kZSBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9vbmJqZXJnL2RhaS5ob3cKCiovCmludGVyZmFjZSBJTWFrZXIgewogICAgZnVuY3Rpb24gc2FpKCkgcHVibGljIHZpZXcgcmV0dXJucyAoRVJDMjApOwogICAgZnVuY3Rpb24gc2tyKCkgcHVibGljIHZpZXcgcmV0dXJucyAoRVJDMjApOwogICAgZnVuY3Rpb24gZ2VtKCkgcHVibGljIHZpZXcgcmV0dXJucyAoRVJDMjApOwoKICAgIGZ1bmN0aW9uIG9wZW4oKSBwdWJsaWMgcmV0dXJucyAoYnl0ZXMzMiBjdXApOwogICAgZnVuY3Rpb24gZ2l2ZShieXRlczMyIGN1cCwgYWRkcmVzcyBndXkpIHB1YmxpYzsKCiAgICBmdW5jdGlvbiBnYXAoKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50KTsKICAgIGZ1bmN0aW9uIHBlcigpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQpOwoKICAgIGZ1bmN0aW9uIGFzayh1aW50IHdhZCkgcHVibGljIHZpZXcgcmV0dXJucyAodWludCk7CiAgICBmdW5jdGlvbiBiaWQodWludCB3YWQpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQpOwoKICAgIGZ1bmN0aW9uIGpvaW4odWludCB3YWQpIHB1YmxpYzsKICAgIGZ1bmN0aW9uIGxvY2soYnl0ZXMzMiBjdXAsIHVpbnQgd2FkKSBwdWJsaWM7CiAgICBmdW5jdGlvbiBmcmVlKGJ5dGVzMzIgY3VwLCB1aW50IHdhZCkgcHVibGljOwogICAgZnVuY3Rpb24gZHJhdyhieXRlczMyIGN1cCwgdWludCB3YWQpIHB1YmxpYzsKICAgIGZ1bmN0aW9uIGNhZ2UodWludCBmaXRfLCB1aW50IGphbSkgcHVibGljOwp9CgppbnRlcmZhY2UgRVJDMjAgewogICAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2KTsKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIHdobykgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1Nik7CiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIHRvLCB1aW50MjU2IHZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHZhbHVlKTsKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIG93bmVyLCBhZGRyZXNzIHNwZW5kZXIpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYpOwogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgZnJvbSwgYWRkcmVzcyB0bywgdWludDI1NiB2YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpOwogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIHNwZW5kZXIsIHVpbnQyNTYgdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKTsKICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBvd25lciwgYWRkcmVzcyBpbmRleGVkIHNwZW5kZXIsIHVpbnQyNTYgdmFsdWUpOwp9CgppbnRlcmZhY2UgSVdFVEggewogICAgZnVuY3Rpb24gZGVwb3NpdCgpIHB1YmxpYyBwYXlhYmxlOwogICAgZnVuY3Rpb24gd2l0aGRyYXcodWludCB3YWQpIHB1YmxpYzsKfQoKY29udHJhY3QgRFNNYXRoIHsKICAgIGZ1bmN0aW9uIGFkZCh1aW50IHgsIHVpbnQgeSkgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50IHopIHsKICAgICAgICByZXF1aXJlKCh6ID0geCArIHkpID49IHgpOwogICAgfQogICAgZnVuY3Rpb24gc3ViKHVpbnQgeCwgdWludCB5KSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQgeikgewogICAgICAgIHJlcXVpcmUoKHogPSB4IC0geSkgPD0geCk7CiAgICB9CiAgICBmdW5jdGlvbiBtdWwodWludCB4LCB1aW50IHkpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludCB6KSB7CiAgICAgICAgcmVxdWlyZSh5ID09IDAgfHwgKHogPSB4ICogeSkgLyB5ID09IHgpOwogICAgfQoKICAgIGZ1bmN0aW9uIG1pbih1aW50IHgsIHVpbnQgeSkgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50IHopIHsKICAgICAgICByZXR1cm4geCA8PSB5ID8geCA6IHk7CiAgICB9CiAgICBmdW5jdGlvbiBtYXgodWludCB4LCB1aW50IHkpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludCB6KSB7CiAgICAgICAgcmV0dXJuIHggPj0geSA/IHggOiB5OwogICAgfQogICAgZnVuY3Rpb24gaW1pbihpbnQgeCwgaW50IHkpIGludGVybmFsIHB1cmUgcmV0dXJucyAoaW50IHopIHsKICAgICAgICByZXR1cm4geCA8PSB5ID8geCA6IHk7CiAgICB9CiAgICBmdW5jdGlvbiBpbWF4KGludCB4LCBpbnQgeSkgaW50ZXJuYWwgcHVyZSByZXR1cm5zIChpbnQgeikgewogICAgICAgIHJldHVybiB4ID49IHkgPyB4IDogeTsKICAgIH0KCiAgICB1aW50IGNvbnN0YW50IFdBRCA9IDEwICoqIDE4OwogICAgdWludCBjb25zdGFudCBSQVkgPSAxMCAqKiAyNzsKCiAgICBmdW5jdGlvbiB3bXVsKHVpbnQgeCwgdWludCB5KSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQgeikgewogICAgICAgIHogPSBhZGQobXVsKHgsIHkpLCBXQUQgLyAyKSAvIFdBRDsKICAgIH0KICAgIGZ1bmN0aW9uIHJtdWwodWludCB4LCB1aW50IHkpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludCB6KSB7CiAgICAgICAgeiA9IGFkZChtdWwoeCwgeSksIFJBWSAvIDIpIC8gUkFZOwogICAgfQogICAgZnVuY3Rpb24gd2Rpdih1aW50IHgsIHVpbnQgeSkgcHVibGljIHB1cmUgcmV0dXJucyAodWludCB6KSB7CiAgICAgICAgeiA9IGFkZChtdWwoeCwgV0FEKSwgeSAvIDIpIC8geTsKICAgIH0KICAgIGZ1bmN0aW9uIHJkaXYodWludCB4LCB1aW50IHkpIHB1YmxpYyBwdXJlIHJldHVybnMgKHVpbnQgeikgewogICAgICAgIHogPSBhZGQobXVsKHgsIFJBWSksIHkgLyAyKSAvIHk7CiAgICB9CgogICAgLy8gVGhpcyBmYW1vdXMgYWxnb3JpdGhtIGlzIGNhbGxlZCAiZXhwb25lbnRpYXRpb24gYnkgc3F1YXJpbmciCiAgICAvLyBhbmQgY2FsY3VsYXRlcyB4Xm4gd2l0aCB4IGFzIGZpeGVkLXBvaW50IGFuZCBuIGFzIHJlZ3VsYXIgdW5zaWduZWQuCiAgICAvLwogICAgLy8gSXQncyBPKGxvZyBuKSwgaW5zdGVhZCBvZiBPKG4pIGZvciBuYWl2ZSByZXBlYXRlZCBtdWx0aXBsaWNhdGlvbi4KICAgIC8vCiAgICAvLyBUaGVzZSBmYWN0cyBhcmUgd2h5IGl0IHdvcmtzOgogICAgLy8KICAgIC8vICBJZiBuIGlzIGV2ZW4sIHRoZW4geF5uID0gKHheMileKG4vMikuCiAgICAvLyAgSWYgbiBpcyBvZGQsICB0aGVuIHhebiA9IHggKiB4XihuLTEpLAogICAgLy8gICBhbmQgYXBwbHlpbmcgdGhlIGVxdWF0aW9uIGZvciBldmVuIHggZ2l2ZXMKICAgIC8vICAgIHhebiA9IHggKiAoeF4yKV4oKG4tMSkgLyAyKS4KICAgIC8vCiAgICAvLyAgQWxzbywgRVZNIGRpdmlzaW9uIGlzIGZsb29yaW5nIGFuZAogICAgLy8gICAgZmxvb3JbKG4tMSkgLyAyXSA9IGZsb29yW24gLyAyXS4KICAgIC8vCiAgICBmdW5jdGlvbiBycG93KHVpbnQgeCwgdWludCBuKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQgeikgewogICAgICAgIHogPSBuICUgMiAhPSAwID8geCA6IFJBWTsKCiAgICAgICAgZm9yIChuIC89IDI7IG4gIT0gMDsgbiAvPSAyKSB7CiAgICAgICAgICAgIHggPSBybXVsKHgsIHgpOwoKICAgICAgICAgICAgaWYgKG4gJSAyICE9IDApIHsKICAgICAgICAgICAgICAgIHogPSBybXVsKHosIHgpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9Cgpjb250cmFjdCBEYWlNYWtlciBpcyBEU01hdGggewogICAgSU1ha2VyIHB1YmxpYyBtYWtlcjsKICAgIEVSQzIwIHB1YmxpYyB3ZXRoOwogICAgRVJDMjAgcHVibGljIHBldGg7CiAgICBFUkMyMCBwdWJsaWMgZGFpOwoKICAgIGV2ZW50IE1ha2VEYWkoYWRkcmVzcyBpbmRleGVkIGRhaU93bmVyLCBhZGRyZXNzIGluZGV4ZWQgY2RwT3duZXIsIHVpbnQyNTYgZXRoQW1vdW50LCB1aW50MjU2IGRhaUFtb3VudCwgdWludDI1NiBwZXRoQW1vdW50KTsKCiAgICBmdW5jdGlvbiBEYWlNYWtlcihJTWFrZXIgX21ha2VyKSB7CiAgICAgICAgbWFrZXIgPSBfbWFrZXI7CiAgICAgICAgd2V0aCA9IG1ha2VyLmdlbSgpOwogICAgICAgIHBldGggPSBtYWtlci5za3IoKTsKICAgICAgICBkYWkgPSBtYWtlci5zYWkoKTsKICAgIH0KCiAgICBmdW5jdGlvbiBtYWtlRGFpKHVpbnQyNTYgZGFpQW1vdW50LCBhZGRyZXNzIGNkcE93bmVyLCBhZGRyZXNzIGRhaU93bmVyKSBwYXlhYmxlIHB1YmxpYyByZXR1cm5zIChieXRlczMyIGNkcElkKSB7CiAgICAgICAgSVdFVEgod2V0aCkuZGVwb3NpdC52YWx1ZShtc2cudmFsdWUpKCk7ICAgICAgLy8gd3JhcCBldGggaW4gd2V0aCB0b2tlbgogICAgICAgIHdldGguYXBwcm92ZShtYWtlciwgbXNnLnZhbHVlKTsgICAgICAgICAgICAgIC8vIGFsbG93IG1ha2VyIHRvIHB1bGwgd2V0aAoKICAgICAgICAvLyBjYWxjdWxhdGUgaG93IG11Y2ggcGV0aCB3ZSBuZWVkIHRvIGVudGVyIHdpdGgKICAgICAgICB1aW50MjU2IGludmVyc2VBc2sgPSByZGl2KG1zZy52YWx1ZSwgd211bChtYWtlci5nYXAoKSwgbWFrZXIucGVyKCkpKSAtIDE7CgogICAgICAgIG1ha2VyLmpvaW4oaW52ZXJzZUFzayk7ICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnZlcnQgd2V0aCB0byBwZXRoCiAgICAgICAgdWludDI1NiBwZXRoQW1vdW50ID0gcGV0aC5iYWxhbmNlT2YodGhpcyk7CgogICAgICAgIHBldGguYXBwcm92ZShtYWtlciwgcGV0aEFtb3VudCk7ICAgICAgICAgICAgIC8vIGFsbG93IG1ha2VyIHRvIHB1bGwgcGV0aAoKICAgICAgICBjZHBJZCA9IG1ha2VyLm9wZW4oKTsgICAgICAgICAgICAgICAgICAgICAgICAvLyBjcmVhdGUgY2RwIGluIG1ha2VyCiAgICAgICAgbWFrZXIubG9jayhjZHBJZCwgcGV0aEFtb3VudCk7ICAgICAgICAgICAgICAgLy8gbG9jayBwZXRoIGludG8gY2RwCiAgICAgICAgbWFrZXIuZHJhdyhjZHBJZCwgZGFpQW1vdW50KTsgICAgICAgICAgICAgICAgLy8gY3JlYXRlIGRhaSBmcm9tIGNkcAoKICAgICAgICBkYWkudHJhbnNmZXIoZGFpT3duZXIsIGRhaUFtb3VudCk7ICAgICAgICAgICAvLyB0cmFuc2ZlciBkYWkgdG8gb3duZXIKICAgICAgICBtYWtlci5naXZlKGNkcElkLCBjZHBPd25lcik7ICAgICAgICAgICAgICAgICAvLyB0cmFuc2ZlciBjZHAgdG8gb3duZXIKCiAgICAgICAgTWFrZURhaShkYWlPd25lciwgY2RwT3duZXIsIG1zZy52YWx1ZSwgZGFpQW1vdW50LCBwZXRoQW1vdW50KTsKICAgIH0KfQ=='.
	

]
