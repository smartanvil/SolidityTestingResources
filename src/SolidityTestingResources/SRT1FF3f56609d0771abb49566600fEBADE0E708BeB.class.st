Class {
	#name : #SRT1FF3f56609d0771abb49566600fEBADE0E708BeB,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT1FF3f56609d0771abb49566600fEBADE0E708BeB >> base64 [
	^ ''.
	

]
