Class {
	#name : #SRT8fa7f93b6523b60c82862f830c1b024e684aa88c,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT8fa7f93b6523b60c82862f830c1b024e684aa88c >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuODsKCi8qKgogKiBAdGl0bGUgVk5FVCBUb2tlbiAtIFRoZSBOZXh0IEdlbmVyYXRpb24gVmFsdWUgVHJhbnNmZXJpbmcgTmV0d29yay4KICogQGF1dGhvciBXYW5nIFl1bnhpYW8gLSA8PGEgaHJlZj0iL2Nkbi1jZ2kvbC9lbWFpbC1wcm90ZWN0aW9uIiBjbGFzcz0iX19jZl9lbWFpbF9fIiBkYXRhLWNmZW1haWw9Ijg1ZjJmY2ZkYmNiM2JjYjdiN2M1ZTJlOGU0ZWNlOWFiZTZlYWU4Ij5bZW1haWwmIzE2MDtwcm90ZWN0ZWRdPC9hPj4KICovCgpjb250cmFjdCBTYWZlTWF0aCB7CiAgICBmdW5jdGlvbiBzYWZlTXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICB1aW50MjU2IGMgPSBhICogYjsKICAgICAgICBhc3NlcnQoYSA9PSAwIHx8IGMgLyBhID09IGIpOwogICAgICAgIHJldHVybiBjOwogICAgfQoKICAgIGZ1bmN0aW9uIHNhZmVEaXYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgICAgIGFzc2VydChiID4gMCk7CiAgICAgICAgdWludDI1NiBjID0gYSAvIGI7CiAgICAgICAgYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7CiAgICAgICAgcmV0dXJuIGM7CiAgICB9CgogICAgZnVuY3Rpb24gc2FmZVN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgYXNzZXJ0KGIgPD0gYSk7CiAgICAgICAgcmV0dXJuIGEgLSBiOwogICAgfQoKICAgIGZ1bmN0aW9uIHNhZmVBZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgICAgIGFzc2VydChjID49IGEgJiYgYyA+PSBiKTsKICAgICAgICByZXR1cm4gYzsKICAgIH0KfQoKY29udHJhY3QgVk5FVCBpcyBTYWZlTWF0aCB7CiAgICBzdHJpbmcgY29uc3RhbnQgdG9rZW5OYW1lID0gJ1ZORVQnOwogICAgc3RyaW5nIGNvbnN0YW50IHRva2VuU3ltYm9sID0gJ1ZORVQnOwogICAgdWludDggY29uc3RhbnQgZGVjaW1hbFVuaXRzID0gODsKCiAgICBzdHJpbmcgcHVibGljIG5hbWU7CiAgICBzdHJpbmcgcHVibGljIHN5bWJvbDsKICAgIHVpbnQ4IHB1YmxpYyBkZWNpbWFsczsKCiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseSA9IDEwMCAqICgxMCoqOCkgKiAoMTAqKjgpOyAvLyAxMDAgeWkKCiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKICAgIAogICAgbWFwcGluZyhhZGRyZXNzID0+IGJvb2wpIHJlc3RyaWN0ZWRBZGRyZXNzZXM7CiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIGJhbGFuY2VPZjsKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikpIHB1YmxpYyBhbGxvd2FuY2U7CgogICAgLyogVGhpcyBnZW5lcmF0ZXMgYSBwdWJsaWMgZXZlbnQgb24gdGhlIGJsb2NrY2hhaW4gdGhhdCB3aWxsIG5vdGlmeSBjbGllbnRzICovCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHZhbHVlKTsKCiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKTsKCiAgICBtb2RpZmllciBvbmx5T3duZXIgewogICAgICAgIGFzc2VydChvd25lciA9PSBtc2cuc2VuZGVyKTsKICAgICAgICBfOwogICAgfQoKICAgIC8qIEluaXRpYWxpemVzIGNvbnRyYWN0IHdpdGggaW5pdGlhbCBzdXBwbHkgdG9rZW5zIHRvIHRoZSBjcmVhdG9yIG9mIHRoZSBjb250cmFjdCAqLwogICAgZnVuY3Rpb24gVk5FVCgpIHB1YmxpYyB7CiAgICAgICAgYmFsYW5jZU9mW21zZy5zZW5kZXJdID0gdG90YWxTdXBwbHk7ICAgICAgICAgICAgICAgIC8vIEdpdmUgdGhlIGNyZWF0b3IgYWxsIHRva2VucwogICAgICAgIG5hbWUgPSB0b2tlbk5hbWU7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBTZXQgdGhlIG5hbWUgZm9yIGRpc3BsYXkgcHVycG9zZXMKICAgICAgICBzeW1ib2wgPSB0b2tlblN5bWJvbDsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gU2V0IHRoZSBzeW1ib2wgZm9yIGRpc3BsYXkgcHVycG9zZXMKICAgICAgICBkZWNpbWFscyA9IGRlY2ltYWxVbml0czsgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gQW1vdW50IG9mIGRlY2ltYWxzIGZvciBkaXNwbGF5IHB1cnBvc2VzCiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIHJlcXVpcmUoX3ZhbHVlID4gMCk7CiAgICAgICAgcmVxdWlyZShiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPj0gX3ZhbHVlKTsgICAgICAgICAgICAgIC8vIENoZWNrIGlmIHRoZSBzZW5kZXIgaGFzIGVub3VnaAogICAgICAgIHJlcXVpcmUoYmFsYW5jZU9mW190b10gKyBfdmFsdWUgPj0gYmFsYW5jZU9mW190b10pOyAgICAvLyBDaGVjayBmb3Igb3ZlcmZsb3dzCiAgICAgICAgcmVxdWlyZSghcmVzdHJpY3RlZEFkZHJlc3Nlc1ttc2cuc2VuZGVyXSk7CiAgICAgICAgcmVxdWlyZSghcmVzdHJpY3RlZEFkZHJlc3Nlc1tfdG9dKTsKICAgICAgICBiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPSBTYWZlTWF0aC5zYWZlU3ViKGJhbGFuY2VPZlttc2cuc2VuZGVyXSwgX3ZhbHVlKTsgICAvLyBTdWJ0cmFjdCBmcm9tIHRoZSBzZW5kZXIKICAgICAgICBiYWxhbmNlT2ZbX3RvXSA9IFNhZmVNYXRoLnNhZmVBZGQoYmFsYW5jZU9mW190b10sIF92YWx1ZSk7ICAgICAgICAgICAgICAgICAvLyBBZGQgdGhlIHNhbWUgdG8gdGhlIHJlY2lwaWVudAogICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsgICAgICAgICAgICAgICAgICAvLyBOb3RpZnkgYW55b25lIGxpc3RlbmluZyB0aGF0IHRoaXMgdHJhbnNmZXIgdG9vayBwbGFjZQogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBhbGxvd2FuY2VbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOyAgICAgICAgICAgIC8vIFNldCBhbGxvd2FuY2UKICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsgICAgICAgICAgICAgIC8vIFJhaXNlIEFwcHJvdmFsIGV2ZW50CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIHJlcXVpcmUoYmFsYW5jZU9mW19mcm9tXSA+PSBfdmFsdWUpOyAgICAgICAgICAgICAgICAgIC8vIENoZWNrIGlmIHRoZSBzZW5kZXIgaGFzIGVub3VnaAogICAgICAgIHJlcXVpcmUoYmFsYW5jZU9mW190b10gKyBfdmFsdWUgPj0gYmFsYW5jZU9mW190b10pOyAgIC8vIENoZWNrIGZvciBvdmVyZmxvd3MKICAgICAgICByZXF1aXJlKF92YWx1ZSA8PSBhbGxvd2FuY2VbX2Zyb21dW21zZy5zZW5kZXJdKTsgICAgICAvLyBDaGVjayBhbGxvd2FuY2UKICAgICAgICByZXF1aXJlKCFyZXN0cmljdGVkQWRkcmVzc2VzW19mcm9tXSk7CiAgICAgICAgcmVxdWlyZSghcmVzdHJpY3RlZEFkZHJlc3Nlc1ttc2cuc2VuZGVyXSk7CiAgICAgICAgcmVxdWlyZSghcmVzdHJpY3RlZEFkZHJlc3Nlc1tfdG9dKTsKICAgICAgICBiYWxhbmNlT2ZbX2Zyb21dID0gU2FmZU1hdGguc2FmZVN1YihiYWxhbmNlT2ZbX2Zyb21dLCBfdmFsdWUpOyAgICAvLyBTdWJ0cmFjdCBmcm9tIHRoZSBzZW5kZXIKICAgICAgICBiYWxhbmNlT2ZbX3RvXSA9IFNhZmVNYXRoLnNhZmVBZGQoYmFsYW5jZU9mW190b10sIF92YWx1ZSk7ICAgICAgICAvLyBBZGQgdGhlIHNhbWUgdG8gdGhlIHJlY2lwaWVudAogICAgICAgIGFsbG93YW5jZVtfZnJvbV1bbXNnLnNlbmRlcl0gPSBTYWZlTWF0aC5zYWZlU3ViKGFsbG93YW5jZVtfZnJvbV1bbXNnLnNlbmRlcl0sIF92YWx1ZSk7CiAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIGNvbnN0YW50IHB1YmxpYyByZXR1cm5zICh1aW50MjU2IFN1cHBseSkgewogICAgICAgIHJldHVybiB0b3RhbFN1cHBseTsKICAgIH0KCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHB1YmxpYyByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpIHsKICAgICAgICByZXR1cm4gYmFsYW5jZU9mW19vd25lcl07CiAgICB9CgogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBjb25zdGFudCBwdWJsaWMgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpIHsKICAgICAgcmV0dXJuIGFsbG93YW5jZVtfb3duZXJdW19zcGVuZGVyXTsKICAgIH0KCiAgICBmdW5jdGlvbigpIHB1YmxpYyBwYXlhYmxlIHsKICAgICAgICByZXZlcnQoKTsKICAgIH0KCiAgICAvKiBPd25lciBjYW4gYWRkIG5ldyByZXN0cmljdGVkIGFkZHJlc3Mgb3IgcmVtb3ZlcyBvbmUgKi8KICAgIGZ1bmN0aW9uIGVkaXRSZXN0cmljdGVkQWRkcmVzcyhhZGRyZXNzIF9uZXdSZXN0cmljdGVkQWRkcmVzcykgcHVibGljIG9ubHlPd25lciB7CiAgICAgICAgcmVzdHJpY3RlZEFkZHJlc3Nlc1tfbmV3UmVzdHJpY3RlZEFkZHJlc3NdID0gIXJlc3RyaWN0ZWRBZGRyZXNzZXNbX25ld1Jlc3RyaWN0ZWRBZGRyZXNzXTsKICAgIH0KCiAgICBmdW5jdGlvbiBpc1Jlc3RyaWN0ZWRBZGRyZXNzKGFkZHJlc3MgX3F1ZXJyeUFkZHJlc3MpIGNvbnN0YW50IHB1YmxpYyByZXR1cm5zIChib29sIGFuc3dlcikgewogICAgICAgIHJldHVybiByZXN0cmljdGVkQWRkcmVzc2VzW19xdWVycnlBZGRyZXNzXTsKICAgIH0KfQ=='.
	

]
