Class {
	#name : #SRTa8cde321ddb903bfea9b64e2c938c1be5468bb75,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTa8cde321ddb903bfea9b64e2c938c1be5468bb75 >> base64 [
	^ ''.
	

]
