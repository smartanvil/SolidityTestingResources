Class {
	#name : #SRT1ba0d3ddb07a2893efd55c865848ce42b6d502b1,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT1ba0d3ddb07a2893efd55c865848ce42b6d502b1 >> base64 [
	^ ''.
	

]
