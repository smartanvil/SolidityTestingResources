Class {
	#name : #SRT188eaed79dd3a4b3c0a745f99beacd0860ebb084,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT188eaed79dd3a4b3c0a745f99beacd0860ebb084 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgppbnRlcmZhY2UgRVJDMjAgewogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKTsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7Cn0KCmxpYnJhcnkgU2FmZU1hdGggewogIGZ1bmN0aW9uIG11bCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICBpZiAoYSA9PSAwKSB7CiAgICAgIHJldHVybiAwOwogICAgfQogICAgdWludDI1NiBjID0gYSAqIGI7CiAgICByZXF1aXJlKGMgLyBhID09IGIpOwogICAgcmV0dXJuIGM7CiAgfQp9Cgpjb250cmFjdCBEaXN0cmlidXRpb24gewogIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwoKICBlbnVtIFN0YXRlIHsKICAgIEF3YWl0aW5nVG9rZW5zLAogICAgRGlzdHJpYnV0aW5nTm9ybWFsbHksCiAgICBEaXN0cmlidXRpbmdQcm9SYXRhLAogICAgRG9uZQogIH0KIAogIGFkZHJlc3MgYWRtaW47CiAgRVJDMjAgdG9rZW5Db250cmFjdDsKICBTdGF0ZSBzdGF0ZTsKICB1aW50MjU2IGFjdHVhbFRvdGFsVG9rZW5zOwogIHVpbnQyNTYgdG9rZW5zVHJhbnNmZXJyZWQ7CgogIGJ5dGVzMzJbXSBjb250cmlidXRpb25IYXNoZXM7CiAgdWludDI1NiBleHBlY3RlZFRvdGFsVG9rZW5zOwoKICBmdW5jdGlvbiBEaXN0cmlidXRpb24oYWRkcmVzcyBfYWRtaW4sIEVSQzIwIF90b2tlbkNvbnRyYWN0LAogICAgICAgICAgICAgICAgICAgICAgICBieXRlczMyW10gX2NvbnRyaWJ1dGlvbkhhc2hlcywgdWludDI1NiBfZXhwZWN0ZWRUb3RhbFRva2VucykgcHVibGljIHsKICAgIGV4cGVjdGVkVG90YWxUb2tlbnMgPSBfZXhwZWN0ZWRUb3RhbFRva2VuczsKICAgIGNvbnRyaWJ1dGlvbkhhc2hlcyA9IF9jb250cmlidXRpb25IYXNoZXM7CiAgICB0b2tlbkNvbnRyYWN0ID0gX3Rva2VuQ29udHJhY3Q7CiAgICBhZG1pbiA9IF9hZG1pbjsKCiAgICBzdGF0ZSA9IFN0YXRlLkF3YWl0aW5nVG9rZW5zOwogIH0KCiAgZnVuY3Rpb24gaGFuZGxlVG9rZW5zUmVjZWl2ZWQoKSBwdWJsaWMgewogICAgcmVxdWlyZShzdGF0ZSA9PSBTdGF0ZS5Bd2FpdGluZ1Rva2Vucyk7CiAgICB1aW50MjU2IHRvdGFsVG9rZW5zID0gdG9rZW5Db250cmFjdC5iYWxhbmNlT2YodGhpcyk7CiAgICByZXF1aXJlKHRvdGFsVG9rZW5zID4gMCk7CgogICAgdG9rZW5zVHJhbnNmZXJyZWQgPSAwOwogICAgaWYgKHRvdGFsVG9rZW5zID09IGV4cGVjdGVkVG90YWxUb2tlbnMpIHsKICAgICAgc3RhdGUgPSBTdGF0ZS5EaXN0cmlidXRpbmdOb3JtYWxseTsKICAgIH0gZWxzZSB7CiAgICAgIGFjdHVhbFRvdGFsVG9rZW5zID0gdG90YWxUb2tlbnM7CiAgICAgIHN0YXRlID0gU3RhdGUuRGlzdHJpYnV0aW5nUHJvUmF0YTsKICAgIH0KICB9CgogIGZ1bmN0aW9uIF9udW1Ub2tlbnNGb3JDb250cmlidXRvcih1aW50MjU2IGNvbnRyaWJ1dG9yRXhwZWN0ZWRUb2tlbnMsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVpbnQyNTYgX3Rva2Vuc1RyYW5zZmVycmVkLCBTdGF0ZSBfc3RhdGUpCiAgICAgIGludGVybmFsIHZpZXcgcmV0dXJucyAodWludDI1NikgewogICAgaWYgKF9zdGF0ZSA9PSBTdGF0ZS5EaXN0cmlidXRpbmdOb3JtYWxseSkgewogICAgICByZXR1cm4gY29udHJpYnV0b3JFeHBlY3RlZFRva2VuczsKICAgIH0gZWxzZSBpZiAoX3N0YXRlID09IFN0YXRlLkRpc3RyaWJ1dGluZ1Byb1JhdGEpIHsKICAgICAgdWludDI1NiB0b2tlbnMgPSBhY3R1YWxUb3RhbFRva2Vucy5tdWwoY29udHJpYnV0b3JFeHBlY3RlZFRva2VucykgLyBleHBlY3RlZFRvdGFsVG9rZW5zOwoKICAgICAgLy8gSGFuZGxlIHJvdW5kb2ZmIG9uIGxhc3QgY29udHJpYnV0b3IuCiAgICAgIHVpbnQyNTYgdG9rZW5zUmVtYWluaW5nID0gYWN0dWFsVG90YWxUb2tlbnMgLSBfdG9rZW5zVHJhbnNmZXJyZWQ7CiAgICAgIGlmICh0b2tlbnMgPCB0b2tlbnNSZW1haW5pbmcpIHsKICAgICAgICByZXR1cm4gdG9rZW5zOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiB0b2tlbnNSZW1haW5pbmc7CiAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgIHJldmVydCgpOwogICAgfQogIH0KCiAgZnVuY3Rpb24gZG9EaXN0cmlidXRpb24odWludDI1NiBjb250cmlidXRvckluZGV4LCBhZGRyZXNzIGNvbnRyaWJ1dG9yLAogICAgICAgICAgICAgICAgICAgICAgICAgIHVpbnQyNTYgY29udHJpYnV0b3JFeHBlY3RlZFRva2VucykKICAgICAgcHVibGljIHsKICAgIC8vIE1ha2Ugc3VyZSB0aGUgYXJndW1lbnRzIG1hdGNoIHRoZSBjb21wcmVzc2VkIHN0b3JhZ2UuCiAgICByZXF1aXJlKGNvbnRyaWJ1dGlvbkhhc2hlc1tjb250cmlidXRvckluZGV4XSA9PSBrZWNjYWsyNTYoY29udHJpYnV0b3IsIGNvbnRyaWJ1dG9yRXhwZWN0ZWRUb2tlbnMpKTsKCiAgICB1aW50MjU2IG51bVRva2VucyA9IF9udW1Ub2tlbnNGb3JDb250cmlidXRvcihjb250cmlidXRvckV4cGVjdGVkVG9rZW5zLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9rZW5zVHJhbnNmZXJyZWQsIHN0YXRlKTsKICAgIGNvbnRyaWJ1dGlvbkhhc2hlc1tjb250cmlidXRvckluZGV4XSA9IDB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA7CiAgICB0b2tlbnNUcmFuc2ZlcnJlZCArPSBudW1Ub2tlbnM7CiAgICBpZiAodG9rZW5zVHJhbnNmZXJyZWQgPT0gYWN0dWFsVG90YWxUb2tlbnMpIHsKICAgICAgc3RhdGUgPSBTdGF0ZS5Eb25lOwogICAgfQoKICAgIHJlcXVpcmUodG9rZW5Db250cmFjdC50cmFuc2Zlcihjb250cmlidXRvciwgbnVtVG9rZW5zKSk7CiAgfQoKICBmdW5jdGlvbiBkb0Rpc3RyaWJ1dGlvblJhbmdlKHVpbnQyNTYgc3RhcnQsIGFkZHJlc3NbXSBjb250cmlidXRvcnMsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1aW50MjU2W10gY29udHJpYnV0b3JFeHBlY3RlZFRva2VucykgcHVibGljIHsKICAgIHJlcXVpcmUoY29udHJpYnV0b3JzLmxlbmd0aCA9PSBjb250cmlidXRvckV4cGVjdGVkVG9rZW5zLmxlbmd0aCk7CgogICAgdWludDI1NiB0b2tlbnNUcmFuc2ZlcnJlZFNvRmFyID0gdG9rZW5zVHJhbnNmZXJyZWQ7CiAgICB1aW50MjU2IGVuZCA9IHN0YXJ0ICsgY29udHJpYnV0b3JzLmxlbmd0aDsKICAgIFN0YXRlIF9zdGF0ZSA9IHN0YXRlOwogICAgZm9yICh1aW50MjU2IGkgPSBzdGFydDsgaSA8IGVuZDsgKytpKSB7CiAgICAgIGFkZHJlc3MgY29udHJpYnV0b3IgPSBjb250cmlidXRvcnNbaV07CiAgICAgIHVpbnQyNTYgZXhwZWN0ZWRUb2tlbnMgPSBjb250cmlidXRvckV4cGVjdGVkVG9rZW5zW2ldOwogICAgICByZXF1aXJlKGNvbnRyaWJ1dGlvbkhhc2hlc1tpXSA9PSBrZWNjYWsyNTYoY29udHJpYnV0b3IsIGV4cGVjdGVkVG9rZW5zKSk7CiAgICAgIGNvbnRyaWJ1dGlvbkhhc2hlc1tpXSA9IDB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA7CgogICAgICB1aW50MjU2IG51bVRva2VucyA9IF9udW1Ub2tlbnNGb3JDb250cmlidXRvcihleHBlY3RlZFRva2VucywgdG9rZW5zVHJhbnNmZXJyZWRTb0ZhciwgX3N0YXRlKTsKICAgICAgdG9rZW5zVHJhbnNmZXJyZWRTb0ZhciArPSBudW1Ub2tlbnM7CiAgICAgIHJlcXVpcmUodG9rZW5Db250cmFjdC50cmFuc2Zlcihjb250cmlidXRvciwgbnVtVG9rZW5zKSk7CiAgICB9CgogICAgdG9rZW5zVHJhbnNmZXJyZWQgPSB0b2tlbnNUcmFuc2ZlcnJlZFNvRmFyOwogICAgaWYgKHRva2Vuc1RyYW5zZmVycmVkID09IGFjdHVhbFRvdGFsVG9rZW5zKSB7CiAgICAgIHN0YXRlID0gU3RhdGUuRG9uZTsKICAgIH0KICB9CgogIGZ1bmN0aW9uIG51bVRva2Vuc0ZvckNvbnRyaWJ1dG9yKHVpbnQyNTYgY29udHJpYnV0b3JFeHBlY3RlZFRva2VucykKICAgICAgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1NikgewogICAgcmV0dXJuIF9udW1Ub2tlbnNGb3JDb250cmlidXRvcihjb250cmlidXRvckV4cGVjdGVkVG9rZW5zLCB0b2tlbnNUcmFuc2ZlcnJlZCwgc3RhdGUpOwogIH0KCiAgZnVuY3Rpb24gdGVtcG9yYXJ5RXNjYXBlSGF0Y2goYWRkcmVzcyB0bywgdWludDI1NiB2YWx1ZSwgYnl0ZXMgZGF0YSkgcHVibGljIHsKICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBhZG1pbik7CiAgICByZXF1aXJlKHRvLmNhbGwudmFsdWUodmFsdWUpKGRhdGEpKTsKICB9CgogIGZ1bmN0aW9uIHRlbXBvcmFyeUtpbGwoYWRkcmVzcyB0bykgcHVibGljIHsKICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBhZG1pbik7CiAgICByZXF1aXJlKHRva2VuQ29udHJhY3QuYmFsYW5jZU9mKHRoaXMpID09IDApOwogICAgc2VsZmRlc3RydWN0KHRvKTsKICB9Cn0='.
	

]
