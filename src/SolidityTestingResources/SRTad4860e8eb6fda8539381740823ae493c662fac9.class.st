Class {
	#name : #SRTad4860e8eb6fda8539381740823ae493c662fac9,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTad4860e8eb6fda8539381740823ae493c662fac9 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7Cgpjb250cmFjdCBFUkMyMCB7CiAgICBmdW5jdGlvbiBUb3RhbFN1cHBseSgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQgdG90YWxTdXBwbHkpOwogICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQgYmFsYW5jZSk7CiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludCBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludCByZW1haW5pbmcpOwogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50IF92YWx1ZSk7CiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQgX3ZhbHVlKTsKfQoKCgovKioKKiBAdGl0bGUgU2FmZU1hdGgKKiBAZGV2IE1hdGggb3BlcmF0aW9ucyB3aXRoIHNhZmV0eSBjaGVja3MgdGhhdCB0aHJvdyBvbiBlcnJvcgoqLwpsaWJyYXJ5IFNhZmVNYXRoIHsKIGZ1bmN0aW9uIG11bCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICB1aW50MjU2IGMgPSBhICogYjsKICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgcmV0dXJuIGM7CiB9CgogZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgIC8vIGFzc2VydChiID4gMCk7IC8vIFNvbGlkaXR5IGF1dG9tYXRpY2FsbHkgdGhyb3dzIHdoZW4gZGl2aWRpbmcgYnkgMAogICB1aW50MjU2IGMgPSBhIC8gYjsKICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICAgcmV0dXJuIGM7CiB9CgogZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgIGFzc2VydChiIDw9IGEpOwogICByZXR1cm4gYSAtIGI7CiB9CgogZnVuY3Rpb24gYWRkKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICBhc3NlcnQoYyA+PSBhKTsKICAgcmV0dXJuIGM7CiB9Cn0KCgoKY29udHJhY3QgSXRhbHlUb2tlbiBpcyBFUkMyMHsKICB1c2luZyBTYWZlTWF0aCBmb3IgdWludDI1NjsKICAKICB1aW50MjU2IHB1YmxpYyBfdG90YWxTdXBwbHkgPSAwOwogIAogIAogIHN0cmluZyBwdWJsaWMgc3ltYm9sID0gIklUSyI7Ly9TaW1ib2xvIGRlbCB0b2tlbiBlcy4gRVRICiAgc3RyaW5nIHB1YmxpYyBjb25zdGFudCBuYW1lID0gIkl0YWx5VG9rZW4iOyAvL05vbWUgZGVsIHRva2VuIGVzLiBFdGhlcmV1bQogIHVpbnQyNTYgcHVibGljIGNvbnN0YW50IGRlY2ltYWxzID0gMTg7IC8vTnVtZXJvIGRpIGRlY2ltYWxpIGRlbCB0b2tlbiwgaWwgYml0Y29pbiBuZSBoYSA4LCBldGhlcmV1bSAxOAogIAogIHVpbnQyNTYgcHVibGljIE1BWF9TVVBQTFkgPSAyMjgxMDAwMDAwICogMTAqKmRlY2ltYWxzOyAvL051bWVybyBtYXNzaW1vIGRpIHRva2VuIGRhIGVtZXR0ZXJlICggMTAwMCApCiAgdWludDI1NiBwdWJsaWMgVE9LRU5fVE9fQ1JFQVRPUiA9IDExNDA1MDAwMCAqIDEwKipkZWNpbWFsczsgLy9Ub2tlbiBkYSBpbnZpYXJlIGFsIGNyZWF0b3JlIGRlbCBjb250cmF0dG8KCiAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgUkFURSA9IDI1MDAwOyAvL1F1YW50aSB0b2tlbiBpbnZpYXJlIHBlciBvZ25pIGV0aGVyIHJpY2V2dXRvCiAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CiAgCiAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpIGJhbGFuY2VzOwogIG1hcHBpbmcoYWRkcmVzcyA9PiBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikpIGFsbG93ZWQ7CiAgCiAgLy9GdW56aW9uZSBjaGUgcGVybWV0dGUgZGkgcmljZXZlcmUgdG9rZW4gc29sbyBzcGVjaWZpY2FuZG8gbCdpbmRpcml6em8KICBmdW5jdGlvbigpIHBheWFibGV7CiAgICAgIGNyZWF0ZVRva2VucygpOwogIH0KICAKICAvL1NhbHZpYW1vIGwnaW5kaXJpenpvIGRlbCBjcmVhdG9yZSBkZWwgY29udHJhdHRvIHBlciBpbnZpYXJlIGdsaSBldGhlciByaWNldnV0aQogIGZ1bmN0aW9uIEl0YWx5VG9rZW4oKXsKICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IFRPS0VOX1RPX0NSRUFUT1I7CiAgICAgIF90b3RhbFN1cHBseSA9IF90b3RhbFN1cHBseS5hZGQoVE9LRU5fVE9fQ1JFQVRPUik7CiAgfQogIAogIC8vQ3JlYXppb25lIGRlaSB0b2tlbgogIGZ1bmN0aW9uIGNyZWF0ZVRva2VucygpIHBheWFibGV7CiAgICAgIC8vQ29udHJvbGxpYW1vIGNoZSBnbGkgZXRoZXIgcmljZXZ1dGkgc2lhbm8gbWFnZ2lvcmkgZGkgMAogICAgICByZXF1aXJlKG1zZy52YWx1ZSA+PSAwKTsKICAgICAgCiAgICAgIC8vQ3JlaWFtbyB1bmEgdmFyaWFiaWxlIGNoZSBjb250aWVuZSBnbGkgZXRoZXIgcmljZXZ1dGkgbW9sdGlwbGljYXRpIHBlciBpbCBSQVRFCiAgICAgIHVpbnQyNTYgdG9rZW5zID0gbXNnLnZhbHVlLm11bCgxMCAqKiBkZWNpbWFscyk7CiAgICAgIHRva2VucyA9IHRva2Vucy5tdWwoUkFURSk7CiAgICAgIHRva2VucyA9IHRva2Vucy5kaXYoMTAgKiogMTgpOwoKICAgICAgdWludDI1NiBzdW0gPSBfdG90YWxTdXBwbHkuYWRkKHRva2Vucyk7CiAgICAgIHJlcXVpcmUoc3VtIDw9IE1BWF9TVVBQTFkpOwogICAgICAvL0FnZ2l1bmdpYW1vIGkgdG9rZW4gYWwgYmlsYW5jaW8gZGkgY2hpIGNpIGhhIGludmlhdG8gZ2xpIGV0aGVyIGVkIGF1bWVudGlhbW8gbGEgdmFyaWFiaWxlIHRvdGFsU3VwcGx5CiAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gYmFsYW5jZXNbbXNnLnNlbmRlcl0uYWRkKHRva2Vucyk7CiAgICAgIF90b3RhbFN1cHBseSA9IHN1bTsKICAgICAgCiAgICAgIC8vSW52aWFtbyBnbGkgZXRoZXIgYSBjaGkgaGEgY3JlYXRvIGlsIGNvbnRyYXR0bwogICAgICBvd25lci50cmFuc2Zlcihtc2cudmFsdWUpOwogIH0KCiAgCiAgLy9SaXRvcm5hIGlsIG51bWVybyB0b3RhbGUgZGkgdG9rZW4KICBmdW5jdGlvbiBUb3RhbFN1cHBseSgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQgdG90YWxTdXBwbHkpewogICAgICByZXR1cm4gX3RvdGFsU3VwcGx5OwogIH0KICAKICAvL1JpdG9ybmEgaWwgYmlsYW5jaW8gZGVsbCd1dGVudGUgZGkgdW4gaW5kaXJpenpvCiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50IGJhbGFuY2UpewogICAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsKICB9CiAgCiAgLy9QZXIgaW52aWFyZSBpIFRva2VuCiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpewogICAgICAvL0NvbnRyb2xsaWFtbyBjaGUgY2hpIHZvZ2xpYSBpbnZpYXJlIGkgdG9rZW4gbmUgYWJiaWEgYSBzdWZmaWNpZW56YSBlIGNoZSBuZSB2b2dsaWEgaW52aWFyZSBwaSYjMjQ5OyBkaSAwCiAgICAgIHJlcXVpcmUoCiAgICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfdmFsdWUKICAgICAgICAgICYmIF92YWx1ZSA+IDAKICAgICAgKTsKICAgICAgLy9Ub2dsaWFtbyBpIHRva2VuIGludmlhdGkgZGFsIHN1byBiaWxhbmNpbwogICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IGJhbGFuY2VzW21zZy5zZW5kZXJdLnN1YihfdmFsdWUpOwogICAgICAvL0xpIGFnZ2l1bmdpYW1vIGFsIGJpbGFuY2lvIGRlbCByaWNldmVudGUKICAgICAgYmFsYW5jZXNbX3RvXSA9IGJhbGFuY2VzW190b10uYWRkKF92YWx1ZSk7CiAgICAgIC8vQ2hpYW1pYW1vIGwgZXZlbnRvIHRyYW5zZmVyCiAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgICAgcmV0dXJuIHRydWU7CiAgfQogIAogIC8vSW52aW8gZGVpIHRva2VuIGNvbiBkZWxlZ2EKICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpewogICAgICAvL0NvbnRyb2xsaWFtbyBjaGUgY2hpIHZvZ2xpYSBpbnZpYXJlIHRva2VuIGRhIHVuIGluZGlyaXp6byBub24gc3VvIGFiYmlhIGxhIGRlbGVnYSBwZXIgZmFybG8sIGNoZQogICAgICAvL2wnYWNjb3VudCBkYSBkb3ZlIHZuZ29ubyBpbnZpYXRpIGkgdG9rZW4gYWJiaWEgdG9rZW4gYSBzdWZmaWNpZW56YSBlCiAgICAgIC8vY2hlIGkgdG9rZW4gaW52aWF0aSBzaWFubyBtYWdnaW9yaSBkaSAwCiAgICAgIHJlcXVpcmUoCiAgICAgICAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA+PSBfdmFsdWUKICAgICAgICAgICYmIGJhbGFuY2VzW21zZy5zZW5kZXJdID49IF92YWx1ZQogICAgICAgICAgJiYgX3ZhbHVlID4gMAogICAgICApOwogICAgICAvL3RvZ2xpYW1vIGkgdG9rZW4gZGEgY2hpIGxpIGludmlhCiAgICAgIGJhbGFuY2VzW19mcm9tXSA9IGJhbGFuY2VzW19mcm9tXS5zdWIoX3ZhbHVlKTsKICAgICAgLy9BZ2dpdW5naWFtb2xpIGFsIHJjZXZlbnRlCiAgICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfdmFsdWUpOwogICAgICAvL0RpbWludWlhbW8gaWwgdmFsb3JlIGRlaSB0b2tlbiBjaGUgaWwgZGVsZWdhdG8gcHUmIzI0MjsgaW52aWFyZSBpbiBmYXZvcmUgZGVsIGRlbGVnYW50ZQogICAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA9IGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdLnN1YihfdmFsdWUpOwogICAgICAvL0NoaWFtYWlhbW8gbCdldmVudG8gdHJhbnNmZXIKICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgcmV0dXJuIHRydWU7CiAgfQogIAogIC8vRGVsZWdhcmUgcXVhbGN1bm8gYWxsJ2ludmlvIGRpIHRva2VuCiAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKXsKICAgICAgLy9JbnNlcmlhbW8gbCdpbmRpcml6em8gZGVsIGRlbGVnYXRvIGUgaWwgbWFzc2ltbyBjaGUgcHUmIzI0MjsgaW52aWFyZQogICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsKICAgICAgLy9DaGlhbWlhbW8gbCdldmVudG8gYXBwcm92YWwKICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CiAgICAgIHJldHVybiB0cnVlOwogIH0KICAKICAvL1JpdG9ybmEgaWwgbnVtZXJvIGRpIHRva2VuIGNoZSB1biBkZWxlZ2F0byBwdSYjMjQyOyBhbmNvcmEgaW52aWFyZQogIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludCByZW1haW5pbmcpewogICAgICByZXR1cm4gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsKICB9CgogIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludCBfdmFsdWUpOwogIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludCBfdmFsdWUpOwogIAp9'.
	

]
