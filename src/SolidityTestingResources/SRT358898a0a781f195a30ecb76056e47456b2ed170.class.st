Class {
	#name : #SRT358898a0a781f195a30ecb76056e47456b2ed170,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT358898a0a781f195a30ecb76056e47456b2ed170 >> base64 [
	^ ''.
	

]
