Class {
	#name : #SRTeabafcdc7a7ad024b3bfa76c5d9d768dd1c87a46,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTeabafcdc7a7ad024b3bfa76c5d9d768dd1c87a46 >> base64 [
	^ ''.
	

]
