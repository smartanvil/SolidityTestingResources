Class {
	#name : #SRT9fa148edd31e8afde3cc766a12131409d34382c0,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT9fa148edd31e8afde3cc766a12131409d34382c0 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7Cgpjb250cmFjdCBNSU5UWSB7CiAgICBzdHJpbmcgcHVibGljIG5hbWUgPSAnTUlOVFknOwogICAgc3RyaW5nIHB1YmxpYyBzeW1ib2wgPSAnTUlOVFknOwogICAgdWludDggcHVibGljIGRlY2ltYWxzID0gMTg7CiAgICB1aW50IHB1YmxpYyB0b3RhbFN1cHBseSA9IDEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwOwogICAgdWludCBwdWJsaWMgbWludGVkID0gdG90YWxTdXBwbHkgLyA1OwogICAgdWludCBwdWJsaWMgbWluUmV3YXJkID0gMTAwMDAwMDAwMDAwMDAwMDAwMDsKICAgIHVpbnQgcHVibGljIGZlZSA9IDcwMDAwMDAwMDAwMDAwMDsKICAgIHVpbnQgcHVibGljIHJlZHVjZXIgPSAxMDAwOwogICAgdWludCBwcml2YXRlIHJhbmRvbU51bWJlcjsKICAgIGFkZHJlc3MgcHVibGljIG93bmVyOwogICAgdWludCBwcml2YXRlIG93bmVyQmFsYW5jZTsKICAgIAogICAgLyogVGhpcyBjcmVhdGVzIGFuIGFycmF5IHdpdGggYWxsIGJhbGFuY2VzICovCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBiYWxhbmNlT2Y7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBzdWNjZXNzZXNPZjsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIGZhaWxzT2Y7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikpIHB1YmxpYyBhbGxvd2FuY2U7CiAgICAKICAgIC8qIFRoaXMgZ2VuZXJhdGVzIGEgcHVibGljIGV2ZW50IG9uIHRoZSBibG9ja2NoYWluIHRoYXQgd2lsbCBub3RpZnkgY2xpZW50cyAqLwogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiB2YWx1ZSk7CiAgICAKICAgIG1vZGlmaWVyIG9ubHlPd25lciB7CiAgICAgICAgaWYgKG1zZy5zZW5kZXIgIT0gb3duZXIpIHJldmVydCgpOwogICAgICAgIF87CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpIGV4dGVybmFsIG9ubHlPd25lciB7CiAgICAgICAgb3duZXIgPSBuZXdPd25lcjsKICAgIH0KICAgIAogICAgLyogSW5pdGlhbGl6ZXMgY29udHJhY3Qgd2l0aCBpbml0aWFsIHN1cHBseSB0b2tlbnMgdG8gdGhlIGNyZWF0b3Igb2YgdGhlIGNvbnRyYWN0ICovCiAgICBmdW5jdGlvbiBNSU5UWSgpIHB1YmxpYyB7CiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgICAgIGJhbGFuY2VPZltvd25lcl0gPSBtaW50ZWQ7CiAgICAgICAgYmFsYW5jZU9mW3RoaXNdID0gdG90YWxTdXBwbHkgLSBiYWxhbmNlT2Zbb3duZXJdOwogICAgfQogICAgCiAgICAvKiBJbnRlcm5hbCB0cmFuc2Zlciwgb25seSBjYW4gYmUgY2FsbGVkIGJ5IHRoaXMgY29udHJhY3QgKi8KICAgIGZ1bmN0aW9uIF90cmFuc2ZlcihhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludCBfdmFsdWUpIGludGVybmFsIHsKICAgICAgICByZXF1aXJlKF90byAhPSAweDApOwogICAgICAgIHJlcXVpcmUoYmFsYW5jZU9mW19mcm9tXSA+PSBfdmFsdWUpOwogICAgICAgIHJlcXVpcmUoYmFsYW5jZU9mW190b10gKyBfdmFsdWUgPiBiYWxhbmNlT2ZbX3RvXSk7CiAgICAgICAgdWludCBwcmV2aW91c0JhbGFuY2VzID0gYmFsYW5jZU9mW19mcm9tXSArIGJhbGFuY2VPZltfdG9dOwogICAgICAgIGJhbGFuY2VPZltfZnJvbV0gLT0gX3ZhbHVlOwogICAgICAgIGJhbGFuY2VPZltfdG9dICs9IF92YWx1ZTsKICAgICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwogICAgICAgIGFzc2VydChiYWxhbmNlT2ZbX2Zyb21dICsgYmFsYW5jZU9mW190b10gPT0gcHJldmlvdXNCYWxhbmNlcyk7CiAgICB9CiAgICAKICAgIC8qIFNlbmQgY29pbnMgKi8KICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgZXh0ZXJuYWwgewogICAgICAgIF90cmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICB9CiAgICAKICAgIC8qIFRyYW5zZmVyIHRva2VucyBmcm9tIG90aGVyIGFkZHJlc3MgKi8KICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIGV4dGVybmFsIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIHJlcXVpcmUoX3ZhbHVlIDw9IGFsbG93YW5jZVtfZnJvbV1bbXNnLnNlbmRlcl0pOyAgICAgLy8gQ2hlY2sgYWxsb3dhbmNlCiAgICAgICAgYWxsb3dhbmNlW19mcm9tXVttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgX3RyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgICAKICAgIC8qIFNldCBhbGxvd2FuY2UgZm9yIG90aGVyIGFkZHJlc3MgKi8KICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIGV4dGVybmFsIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGFsbG93YW5jZVttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIHdpdGhkcmF3RXRoZXIoKSBleHRlcm5hbCBvbmx5T3duZXIgewogICAgICAgIG93bmVyLnRyYW5zZmVyKG93bmVyQmFsYW5jZSk7CiAgICAgICAgb3duZXJCYWxhbmNlID0gMDsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gKCkgZXh0ZXJuYWwgcGF5YWJsZSB7CiAgICAgICAgaWYgKG1zZy52YWx1ZSA9PSBmZWUpIHsKICAgICAgICAgICAgcmFuZG9tTnVtYmVyICs9IGJsb2NrLnRpbWVzdGFtcCArIHVpbnQobXNnLnNlbmRlcik7CiAgICAgICAgICAgIHVpbnQgbWluZWRBdEJsb2NrID0gdWludChibG9jay5ibG9ja2hhc2goYmxvY2subnVtYmVyIC0gMSkpOwogICAgICAgICAgICB1aW50IG1pbmVkSGFzaFJlbCA9IHVpbnQoc2hhMjU2KG1pbmVkQXRCbG9jayArIHJhbmRvbU51bWJlciArIHVpbnQobXNnLnNlbmRlcikpKSAlIDEwMDAwMDAwOwogICAgICAgICAgICB1aW50IGJhbGFuY2VSZWwgPSBiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gKiAxMDAwIC8gbWludGVkOwogICAgICAgICAgICBpZiAoYmFsYW5jZVJlbCA+PSAxKSB7CiAgICAgICAgICAgICAgICBpZiAoYmFsYW5jZVJlbCA+IDI1NSkgewogICAgICAgICAgICAgICAgICAgIGJhbGFuY2VSZWwgPSAyNTU7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBiYWxhbmNlUmVsID0gMiAqKiBiYWxhbmNlUmVsOwogICAgICAgICAgICAgICAgYmFsYW5jZVJlbCA9IDUwMDAwMDAgLyBiYWxhbmNlUmVsOwogICAgICAgICAgICAgICAgYmFsYW5jZVJlbCA9IDUwMDAwMDAgLSBiYWxhbmNlUmVsOwogICAgICAgICAgICAgICAgaWYgKG1pbmVkSGFzaFJlbCA8IGJhbGFuY2VSZWwpIHsKICAgICAgICAgICAgICAgICAgICB1aW50IHJld2FyZCA9IG1pblJld2FyZCArIG1pbmVkSGFzaFJlbCAqIDEwMDAgLyByZWR1Y2VyICogMTAwMDAwMDAwMDAwMDAwOwogICAgICAgICAgICAgICAgICAgIF90cmFuc2Zlcih0aGlzLCBtc2cuc2VuZGVyLCByZXdhcmQpOwogICAgICAgICAgICAgICAgICAgIG1pbnRlZCArPSByZXdhcmQ7CiAgICAgICAgICAgICAgICAgICAgc3VjY2Vzc2VzT2ZbbXNnLnNlbmRlcl0rKzsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgVHJhbnNmZXIodGhpcywgbXNnLnNlbmRlciwgMCk7CiAgICAgICAgICAgICAgICAgICAgZmFpbHNPZlttc2cuc2VuZGVyXSsrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgb3duZXJCYWxhbmNlICs9IGZlZTsKICAgICAgICAgICAgICAgIHJlZHVjZXIrKzsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJldmVydCgpOwogICAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV2ZXJ0KCk7CiAgICAgICAgfQogICAgfQp9'.
	

]
