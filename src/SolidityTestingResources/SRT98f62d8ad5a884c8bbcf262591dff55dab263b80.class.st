Class {
	#name : #SRT98f62d8ad5a884c8bbcf262591dff55dab263b80,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT98f62d8ad5a884c8bbcf262591dff55dab263b80 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuNDsKCgovKgogKiBPd25hYmxlCiAqCiAqIEJhc2UgY29udHJhY3Qgd2l0aCBhbiBvd25lci4KICogUHJvdmlkZXMgb25seU93bmVyIG1vZGlmaWVyLCB3aGljaCBwcmV2ZW50cyBmdW5jdGlvbiBmcm9tIHJ1bm5pbmcgaWYgaXQgaXMgY2FsbGVkIGJ5IGFueW9uZSBvdGhlciB0aGFuIHRoZSBvd25lci4KICovCmNvbnRyYWN0IE93bmFibGUgewogIGFkZHJlc3MgcHVibGljIG93bmVyOwoKICBmdW5jdGlvbiBPd25hYmxlKCkgewogICAgb3duZXIgPSBtc2cuc2VuZGVyOwogIH0KCiAgbW9kaWZpZXIgb25seU93bmVyKCkgewogICAgaWYgKG1zZy5zZW5kZXIgIT0gb3duZXIpIHRocm93OwogICAgXzsKICB9CgogIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpIG9ubHlPd25lciB7CiAgICBpZiAobmV3T3duZXIgIT0gYWRkcmVzcygwKSkgb3duZXIgPSBuZXdPd25lcjsKICB9Cgp9Cgpjb250cmFjdCBTYWZlTWF0aCB7CiAgZnVuY3Rpb24gc2FmZU11bCh1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgewogICAgdWludCBjID0gYSAqIGI7CiAgICBhc3NlcnQoYSA9PSAwIHx8IGMgLyBhID09IGIpOwogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBzYWZlU3ViKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIGZ1bmN0aW9uIHNhZmVBZGQodWludCBhLCB1aW50IGIpIGludGVybmFsIHJldHVybnMgKHVpbnQpIHsKICAgIHVpbnQgYyA9IGEgKyBiOwogICAgYXNzZXJ0KGM+PWEgJiYgYz49Yik7CiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIGFzc2VydChib29sIGFzc2VydGlvbikgaW50ZXJuYWwgewogICAgaWYgKCFhc3NlcnRpb24pIHRocm93OwogIH0KfQoKY29udHJhY3QgRVJDMjAgewogIHVpbnQgcHVibGljIHRvdGFsU3VwcGx5OwogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIHdobykgY29uc3RhbnQgcmV0dXJucyAodWludCk7CiAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3Mgb3duZXIsIGFkZHJlc3Mgc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludCk7CgogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sIHVpbnQgdmFsdWUpIHJldHVybnMgKGJvb2wgb2spOwogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIGZyb20sIGFkZHJlc3MgdG8sIHVpbnQgdmFsdWUpIHJldHVybnMgKGJvb2wgb2spOwogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBzcGVuZGVyLCB1aW50IHZhbHVlKSByZXR1cm5zIChib29sIG9rKTsKICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50IHZhbHVlKTsKICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBzcGVuZGVyLCB1aW50IHZhbHVlKTsKfQoKY29udHJhY3QgU3RhbmRhcmRUb2tlbiBpcyBFUkMyMCwgU2FmZU1hdGggewoKICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludCkgYmFsYW5jZXM7CiAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQpKSBhbGxvd2VkOwoKICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludCBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBzYWZlU3ViKGJhbGFuY2VzW21zZy5zZW5kZXJdLCBfdmFsdWUpOwogICAgYmFsYW5jZXNbX3RvXSA9IHNhZmVBZGQoYmFsYW5jZXNbX3RvXSwgX3ZhbHVlKTsKICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICB2YXIgX2FsbG93YW5jZSA9IGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdOwogICAgCiAgICBiYWxhbmNlc1tfdG9dID0gc2FmZUFkZChiYWxhbmNlc1tfdG9dLCBfdmFsdWUpOwogICAgYmFsYW5jZXNbX2Zyb21dID0gc2FmZVN1YihiYWxhbmNlc1tfZnJvbV0sIF92YWx1ZSk7CiAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA9IHNhZmVTdWIoX2FsbG93YW5jZSwgX3ZhbHVlKTsKICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludCBiYWxhbmNlKSB7CiAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsKICB9CgogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludCBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CiAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBjb25zdGFudCByZXR1cm5zICh1aW50IHJlbWFpbmluZykgewogICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07CiAgfQoKfQoKY29udHJhY3QgTG9ja2FibGUgaXMgT3duYWJsZSB7CiAgICBib29sIGRvbmF0aW9uTG9jazsKCiAgICBmdW5jdGlvbiBMb2NrYWJsZSgpIHsKICAgICAgICBkb25hdGlvbkxvY2sgPSBmYWxzZTsKICAgIH0KCiAgICBtb2RpZmllciBvbmx5V2hlbkRvbmF0aW9uT3BlbiB7CiAgICAgICAgaWYgKGRvbmF0aW9uTG9jaykgdGhyb3c7CiAgICAgICAgXzsKICAgIH0KCiAgICBmdW5jdGlvbiBzdG9wQWNjZXB0aW5nRG9uYXRpb24oKSBvbmx5T3duZXIgewogICAgICAgIGlmIChkb25hdGlvbkxvY2spIHRocm93OwogICAgICAgIGRvbmF0aW9uTG9jayA9IHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gc3RhcnRBY2NlcHRpbmdEb25hdGlvbigpIG9ubHlPd25lciB7CiAgICAgICAgaWYgKCFkb25hdGlvbkxvY2spIHRocm93OwogICAgICAgIGRvbmF0aW9uTG9jayA9IGZhbHNlOwogICAgfQp9Cgpjb250cmFjdCBTbWFydFBvb2xUb2tlbiBpcyBTdGFuZGFyZFRva2VuLCBMb2NrYWJsZSB7CiAgICBzdHJpbmcgcHVibGljIG5hbWUgPSAiU21hcnRQb29sIjsKICAgIHN0cmluZyBwdWJsaWMgc3ltYm9sID0gIlNQVCI7CiAgICB1aW50IHB1YmxpYyBkZWNpbWFscyA9IDA7CgogICAgYWRkcmVzcyBwdWJsaWMgYmVuZWZpY2lhbDsKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50KSBwdWJsaWMgZG9uYXRpb25BbW91bnRJbldlaTsKICAgIG1hcHBpbmcodWludCA9PiBhZGRyZXNzKSBwdWJsaWMgZG9ub3JzOwogICAgdWludCBwdWJsaWMgZG9ub3JDb3VudDsKICAgIHVpbnQgcHVibGljIHRvdGFsRnVuZFJhaXNlZDsKICAgIHVpbnQgX3JhdGU7CgogICAgdWludCBFVEhFUiA9IDEgZXRoZXI7CgogICAgZXZlbnQgVG9rZW5NaW50KGFkZHJlc3MgbmV3VG9rZW5Ib2xkZXIsIHVpbnQgdG9rZW5zQW1vdW50KTsKICAgIGV2ZW50IERvbmF0ZWQoYWRkcmVzcyBpbmRleGVkIGZyb20sIHVpbnQgYW1vdW50LCB1aW50IHRva2Vuc0Ftb3VudCwgdWludCBibG9ja051bWJlcik7CgogICAgZnVuY3Rpb24gU21hcnRQb29sVG9rZW4odWludCBwcmVtaW5lZFRva2VucywgYWRkcmVzcyB3YWxsZXQpIHsKICAgICAgICB0b3RhbFN1cHBseSA9IDA7CiAgICAgICAgX3JhdGUgPSAxMDA7CiAgICAgICAgYmVuZWZpY2lhbCA9IHdhbGxldDsKICAgICAgICB0b3RhbEZ1bmRSYWlzZWQgPSAwOwogICAgICAgIG1pbnRUb2tlbnMob3duZXIsIHNhZmVNdWwocHJlbWluZWRUb2tlbnMsIEVUSEVSIC8gX3JhdGUpKTsKICAgIH0KCiAgICBmdW5jdGlvbiBtaW50VG9rZW5zKGFkZHJlc3MgbmV3VG9rZW5Ib2xkZXIsIHVpbnQgd2VpQW1vdW50KSBpbnRlcm5hbCByZXR1cm5zICh1aW50KXsKICAgICAgICB1aW50IHRva2Vuc0Ftb3VudCA9IHNhZmVNdWwoX3JhdGUsIHdlaUFtb3VudCkgLyBFVEhFUjsKCiAgICAgICAgaWYgKHRva2Vuc0Ftb3VudCA+PSAxKSB7CiAgICAgICAgICAgIGJhbGFuY2VzW25ld1Rva2VuSG9sZGVyXSA9IHNhZmVBZGQoCiAgICAgICAgICAgICAgICBiYWxhbmNlc1tuZXdUb2tlbkhvbGRlcl0sIHRva2Vuc0Ftb3VudCk7CiAgICAgICAgICAgIHRvdGFsU3VwcGx5ID0gc2FmZUFkZCh0b3RhbFN1cHBseSwgdG9rZW5zQW1vdW50KTsKCiAgICAgICAgICAgIFRva2VuTWludChuZXdUb2tlbkhvbGRlciwgdG9rZW5zQW1vdW50KTsKICAgICAgICAgICAgcmV0dXJuIHRva2Vuc0Ftb3VudDsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgZnVuY3Rpb24gKCkgcGF5YWJsZSBvbmx5V2hlbkRvbmF0aW9uT3BlbiB7CiAgICAgICAgdWludCB3ZWlBbW91bnQgPSBtc2cudmFsdWU7CiAgICAgICAgaWYgKHdlaUFtb3VudCA8PSAwKSB0aHJvdzsKCiAgICAgICAgaWYgKGRvbmF0aW9uQW1vdW50SW5XZWlbbXNnLnNlbmRlcl0gPT0gMCkgewogICAgICAgICAgICBkb25vcnNbZG9ub3JDb3VudF0gPSBtc2cuc2VuZGVyOwogICAgICAgICAgICBkb25vckNvdW50ICs9IDE7CiAgICAgICAgfQoKICAgICAgICBkb25hdGlvbkFtb3VudEluV2VpW21zZy5zZW5kZXJdID0gc2FmZUFkZCgKICAgICAgICAgICAgZG9uYXRpb25BbW91bnRJbldlaVttc2cuc2VuZGVyXSwgd2VpQW1vdW50KTsKICAgICAgICB0b3RhbEZ1bmRSYWlzZWQgPSBzYWZlQWRkKAogICAgICAgICAgICB0b3RhbEZ1bmRSYWlzZWQsIHdlaUFtb3VudCk7CiAgICAgICAgdWludCB0b2tlbnNDcmVhdGVkID0gbWludFRva2Vucyhtc2cuc2VuZGVyLCB3ZWlBbW91bnQpOwogICAgICAgIERvbmF0ZWQobXNnLnNlbmRlciwgd2VpQW1vdW50LCB0b2tlbnNDcmVhdGVkLCBibG9jay5udW1iZXIpOwogICAgfQoKICAgIGZ1bmN0aW9uIGdldERvbmF0aW9uQW1vdW50KCkgY29uc3RhbnQgcmV0dXJucyAodWludCBkb25hdGlvbikgewogICAgICAgIHJldHVybiBkb25hdGlvbkFtb3VudEluV2VpW21zZy5zZW5kZXJdOwogICAgfQoKICAgIGZ1bmN0aW9uIGdldFRva2VuQmFsYW5jZSgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQgdG9rZW5zKSB7CiAgICAgICAgcmV0dXJuIGJhbGFuY2VzW21zZy5zZW5kZXJdOwogICAgfQoKICAgIGZ1bmN0aW9uIHRva2VuUmF0ZSgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQgdG9rZW5SYXRlKSB7CiAgICAgICAgcmV0dXJuIF9yYXRlOwogICAgfQoKICAgIGZ1bmN0aW9uIGNoYW5nZVJhdGUodWludCBuZXdSYXRlKSBvbmx5T3duZXIgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgX3JhdGUgPSBuZXdSYXRlOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIHdpdGhkcmF3KCkgb25seU93bmVyIHsKICAgICAgICBpZiAoIWJlbmVmaWNpYWwuc2VuZCh0aGlzLmJhbGFuY2UpKSB7CiAgICAgICAgICAgIHRocm93OwogICAgICAgIH0KICAgIH0KfQ=='.
	

]
