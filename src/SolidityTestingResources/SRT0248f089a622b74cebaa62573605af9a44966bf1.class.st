Class {
	#name : #SRT0248f089a622b74cebaa62573605af9a44966bf1,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT0248f089a622b74cebaa62573605af9a44966bf1 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTU7Cgpjb250cmFjdCBFdGhyYWZmbGUgewogICAgc3RydWN0IENvbnRlc3RhbnQgewogICAgICAgIGFkZHJlc3MgYWRkcjsKICAgICAgICB1aW50IHJhZmZsZUlkOwogICAgfQoKICAgIGV2ZW50IFJhZmZsZVJlc3VsdCgKICAgICAgICB1aW50IGluZGV4ZWQgcmFmZmxlSWQsCiAgICAgICAgdWludCB3aW5uaW5nTnVtYmVyLAogICAgICAgIGFkZHJlc3Mgd2lubmluZ0FkZHJlc3MsCiAgICAgICAgdWludCByZW1haW5pbmdHYXMsCiAgICAgICAgdWludCBnYXNQcmljZSwKICAgICAgICBieXRlczMyIHNoYQogICAgKTsKCiAgICBldmVudCBUaWNrZXRQdXJjaGFzZSgKICAgICAgICB1aW50IGluZGV4ZWQgcmFmZmxlSWQsCiAgICAgICAgYWRkcmVzcyBjb250ZXN0YW50LAogICAgICAgIHVpbnQgbnVtYmVyCiAgICApOwoKICAgIGV2ZW50IFRpY2tldFJlZnVuZCgKICAgICAgICB1aW50IGluZGV4ZWQgcmFmZmxlSWQsCiAgICAgICAgYWRkcmVzcyBjb250ZXN0YW50LAogICAgICAgIHVpbnQgbnVtYmVyCiAgICApOwoKICAgIC8vIENvbnN0YW50cwogICAgYWRkcmVzcyBwdWJsaWMgcmFrZUFkZHJlc3M7CiAgICB1aW50IGNvbnN0YW50IHB1YmxpYyBwcml6ZSA9IDAuMSBldGhlcjsKICAgIHVpbnQgY29uc3RhbnQgcHVibGljIHJha2UgPSAwLjAyIGV0aGVyOwogICAgdWludCBjb25zdGFudCBwdWJsaWMgdG90YWxUaWNrZXRzID0gNjsKICAgIHVpbnQgY29uc3RhbnQgcHVibGljIHByaWNlUGVyVGlja2V0ID0gKHByaXplICsgcmFrZSkgLyB0b3RhbFRpY2tldHM7CgogICAgLy8gT3RoZXIgaW50ZXJuYWwgdmFyaWFibGVzCiAgICB1aW50IHB1YmxpYyByYWZmbGVJZCA9IDE7CiAgICB1aW50IHB1YmxpYyBuZXh0VGlja2V0ID0gMTsKICAgIG1hcHBpbmcgKHVpbnQgPT4gQ29udGVzdGFudCkgcHVibGljIGNvbnRlc3RhbnRzOwogICAgdWludFtdIHB1YmxpYyBnYXBzOwogICAgYm9vbCBwdWJsaWMgcGF1c2VkID0gZmFsc2U7CgogICAgLy8gSW5pdGlhbGl6YXRpb24KICAgIGZ1bmN0aW9uIEV0aHJhZmZsZSgpIHB1YmxpYyB7CiAgICAgICAgcmFrZUFkZHJlc3MgPSBtc2cuc2VuZGVyOwogICAgfQoKICAgIC8vIENhbGwgYnV5VGlja2V0cygpIHdoZW4gcmVjZWl2aW5nIEV0aGVyIG91dHNpZGUgYSBmdW5jdGlvbgogICAgZnVuY3Rpb24gKCkgcGF5YWJsZSBwdWJsaWMgewogICAgICAgIGJ1eVRpY2tldHMoKTsKICAgIH0KCiAgICBmdW5jdGlvbiBidXlUaWNrZXRzKCkgcGF5YWJsZSBwdWJsaWMgewogICAgICAgIGlmIChwYXVzZWQpIHsKICAgICAgICAgICAgbXNnLnNlbmRlci50cmFuc2Zlcihtc2cudmFsdWUpOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICB1aW50IG1vbmV5U2VudCA9IG1zZy52YWx1ZTsKCiAgICAgICAgd2hpbGUgKG1vbmV5U2VudCA+PSBwcmljZVBlclRpY2tldCAmJiBuZXh0VGlja2V0IDw9IHRvdGFsVGlja2V0cykgewogICAgICAgICAgICB1aW50IGN1cnJUaWNrZXQgPSAwOwogICAgICAgICAgICBpZiAoZ2Fwcy5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICBjdXJyVGlja2V0ID0gZ2Fwc1tnYXBzLmxlbmd0aC0xXTsKICAgICAgICAgICAgICAgIGdhcHMubGVuZ3RoLS07CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBjdXJyVGlja2V0ID0gbmV4dFRpY2tldCsrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBjb250ZXN0YW50c1tjdXJyVGlja2V0XSA9IENvbnRlc3RhbnQobXNnLnNlbmRlciwgcmFmZmxlSWQpOwogICAgICAgICAgICBUaWNrZXRQdXJjaGFzZShyYWZmbGVJZCwgbXNnLnNlbmRlciwgY3VyclRpY2tldCk7CiAgICAgICAgICAgIG1vbmV5U2VudCAtPSBwcmljZVBlclRpY2tldDsKICAgICAgICB9CgogICAgICAgIC8vIENob29zZSB3aW5uZXIgaWYgd2Ugc29sZCBhbGwgdGhlIHRpY2tldHMKICAgICAgICBpZiAobmV4dFRpY2tldCA+IHRvdGFsVGlja2V0cykgewogICAgICAgICAgICBjaG9vc2VXaW5uZXIoKTsKICAgICAgICB9CgogICAgICAgIC8vIFNlbmQgYmFjayBsZWZ0b3ZlciBtb25leQogICAgICAgIGlmIChtb25leVNlbnQgPiAwKSB7CiAgICAgICAgICAgIG1zZy5zZW5kZXIudHJhbnNmZXIobW9uZXlTZW50KTsKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gY2hvb3NlV2lubmVyKCkgcHJpdmF0ZSB7CiAgICAgICAgLy8gUHNldWRvcmFuZG9tIG51bWJlciBnZW5lcmF0b3IKICAgICAgICB1aW50IHJlbWFpbmluZ0dhcyA9IG1zZy5nYXM7CiAgICAgICAgdWludCBnYXNQcmljZSA9IHR4Lmdhc3ByaWNlOwoKICAgICAgICBieXRlczMyIHNoYSA9IHNoYTMoCiAgICAgICAgICAgIGJsb2NrLmNvaW5iYXNlLAogICAgICAgICAgICBtc2cuc2VuZGVyLAogICAgICAgICAgICByZW1haW5pbmdHYXMsCiAgICAgICAgICAgIGdhc1ByaWNlCiAgICAgICAgKTsKCiAgICAgICAgdWludCB3aW5uaW5nTnVtYmVyID0gKHVpbnQoc2hhKSAlIHRvdGFsVGlja2V0cykgKyAxOwogICAgICAgIGFkZHJlc3Mgd2lubmluZ0FkZHJlc3MgPSBjb250ZXN0YW50c1t3aW5uaW5nTnVtYmVyXS5hZGRyOwogICAgICAgIFJhZmZsZVJlc3VsdCgKICAgICAgICAgICAgcmFmZmxlSWQsCiAgICAgICAgICAgIHdpbm5pbmdOdW1iZXIsCiAgICAgICAgICAgIHdpbm5pbmdBZGRyZXNzLAogICAgICAgICAgICByZW1haW5pbmdHYXMsCiAgICAgICAgICAgIGdhc1ByaWNlLAogICAgICAgICAgICBzaGEKICAgICAgICApOwoKICAgICAgICAvLyBTdGFydCBuZXh0IHJhZmZsZSBhbmQgZGlzdHJpYnV0ZSBwcml6ZQogICAgICAgIHJhZmZsZUlkKys7CiAgICAgICAgbmV4dFRpY2tldCA9IDE7CiAgICAgICAgd2lubmluZ0FkZHJlc3MudHJhbnNmZXIocHJpemUpOwogICAgICAgIHJha2VBZGRyZXNzLnRyYW5zZmVyKHJha2UpOwogICAgfQoKICAgIC8vIEdldCB5b3VyIG1vbmV5IGJhY2sgYmVmb3JlIHRoZSByYWZmbGUgb2NjdXJzCiAgICBmdW5jdGlvbiBnZXRSZWZ1bmQoKSBwdWJsaWMgewogICAgICAgIHVpbnQgcmVmdW5kcyA9IDA7CiAgICAgICAgZm9yICh1aW50IGkgPSAxOyBpIDw9IHRvdGFsVGlja2V0czsgaSsrKSB7CiAgICAgICAgICAgIGlmIChtc2cuc2VuZGVyID09IGNvbnRlc3RhbnRzW2ldLmFkZHIgJiYgcmFmZmxlSWQgPT0gY29udGVzdGFudHNbaV0ucmFmZmxlSWQpIHsKICAgICAgICAgICAgICAgIHJlZnVuZHMrKzsKICAgICAgICAgICAgICAgIGNvbnRlc3RhbnRzW2ldID0gQ29udGVzdGFudChhZGRyZXNzKDApLCAwKTsKICAgICAgICAgICAgICAgIGdhcHMucHVzaChpKTsKICAgICAgICAgICAgICAgIFRpY2tldFJlZnVuZChyYWZmbGVJZCwgbXNnLnNlbmRlciwgaSk7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmIChyZWZ1bmRzID4gMCkgewogICAgICAgICAgICBtc2cuc2VuZGVyLnRyYW5zZmVyKHJlZnVuZHMgKiBwcmljZVBlclRpY2tldCk7CiAgICAgICAgfQogICAgfQoKICAgIC8vIFJlZnVuZCBldmVyeW9uZSdzIG1vbmV5LCBzdGFydCBhIG5ldyByYWZmbGUsIHRoZW4gcGF1c2UgaXQKICAgIGZ1bmN0aW9uIGVuZFJhZmZsZSgpIHB1YmxpYyB7CiAgICAgICAgaWYgKG1zZy5zZW5kZXIgPT0gcmFrZUFkZHJlc3MpIHsKICAgICAgICAgICAgcGF1c2VkID0gdHJ1ZTsKCiAgICAgICAgICAgIGZvciAodWludCBpID0gMTsgaSA8PSB0b3RhbFRpY2tldHM7IGkrKykgewogICAgICAgICAgICAgICAgaWYgKHJhZmZsZUlkID09IGNvbnRlc3RhbnRzW2ldLnJhZmZsZUlkKSB7CiAgICAgICAgICAgICAgICAgICAgVGlja2V0UmVmdW5kKHJhZmZsZUlkLCBjb250ZXN0YW50c1tpXS5hZGRyLCBpKTsKICAgICAgICAgICAgICAgICAgICBjb250ZXN0YW50c1tpXS5hZGRyLnRyYW5zZmVyKHByaWNlUGVyVGlja2V0KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgUmFmZmxlUmVzdWx0KHJhZmZsZUlkLCAwLCBhZGRyZXNzKDApLCAwLCAwLCAwKTsKICAgICAgICAgICAgcmFmZmxlSWQrKzsKICAgICAgICAgICAgbmV4dFRpY2tldCA9IDE7CiAgICAgICAgICAgIGdhcHMubGVuZ3RoID0gMDsKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gdG9nZ2xlUGF1c2UoKSBwdWJsaWMgewogICAgICAgIGlmIChtc2cuc2VuZGVyID09IHJha2VBZGRyZXNzKSB7CiAgICAgICAgICAgIHBhdXNlZCA9ICFwYXVzZWQ7CiAgICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIGtpbGwoKSBwdWJsaWMgewogICAgICAgIGlmIChtc2cuc2VuZGVyID09IHJha2VBZGRyZXNzKSB7CiAgICAgICAgICAgIHNlbGZkZXN0cnVjdChyYWtlQWRkcmVzcyk7CiAgICAgICAgfQogICAgfQp9'.
	

]
