Class {
	#name : #SRTef7de4b3862b56ab9aa37ccb19fb1e1e10134ffc,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTef7de4b3862b56ab9aa37ccb19fb1e1e10134ffc >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTc7CgovLy8gQHRpdGxlIE93bmFibGUKLy8vIEBkZXYgVGhlIE93bmFibGUgY29udHJhY3QgaGFzIGFuIG93bmVyIGFkZHJlc3MsIGFuZCBwcm92aWRlcyBiYXNpYyBhdXRob3JpemF0aW9uIGNvbnRyb2wgZnVuY3Rpb25zLCB0aGlzIHNpbXBsaWZpZXMKLy8vIGFuZCB0aGUgaW1wbGVtZW50YXRpb24gb2YgInVzZXIgcGVybWlzc2lvbnMiLgpjb250cmFjdCBPd25hYmxlIHsKICAgIGFkZHJlc3MgcHVibGljIG93bmVyOwogICAgYWRkcmVzcyBwdWJsaWMgbmV3T3duZXJDYW5kaWRhdGU7CgogICAgZXZlbnQgT3duZXJzaGlwUmVxdWVzdGVkKGFkZHJlc3MgaW5kZXhlZCBfYnksIGFkZHJlc3MgaW5kZXhlZCBfdG8pOwogICAgZXZlbnQgT3duZXJzaGlwVHJhbnNmZXJyZWQoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvKTsKCiAgICAvLy8gQGRldiBUaGUgT3duYWJsZSBjb25zdHJ1Y3RvciBzZXRzIHRoZSBvcmlnaW5hbCBgb3duZXJgIG9mIHRoZSBjb250cmFjdCB0byB0aGUgc2VuZGVyCiAgICAvLy8gYWNjb3VudC4KICAgIGZ1bmN0aW9uIE93bmFibGUoKSBwdWJsaWMgewogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgIH0KCiAgICAvLy8gQGRldiBSZXZlcnRzIGlmIGNhbGxlZCBieSBhbnkgYWNjb3VudCBvdGhlciB0aGFuIHRoZSBvd25lci4KICAgIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lcikgewogICAgICAgICAgICByZXZlcnQoKTsKICAgICAgICB9CgogICAgICAgIF87CiAgICB9CgogICAgbW9kaWZpZXIgb25seU93bmVyQ2FuZGlkYXRlKCkgewogICAgICAgIGlmIChtc2cuc2VuZGVyICE9IG5ld093bmVyQ2FuZGlkYXRlKSB7CiAgICAgICAgICAgIHJldmVydCgpOwogICAgICAgIH0KCiAgICAgICAgXzsKICAgIH0KCiAgICAvLy8gQGRldiBQcm9wb3NlcyB0byB0cmFuc2ZlciBjb250cm9sIG9mIHRoZSBjb250cmFjdCB0byBhIG5ld093bmVyQ2FuZGlkYXRlLgogICAgLy8vIEBwYXJhbSBfbmV3T3duZXJDYW5kaWRhdGUgYWRkcmVzcyBUaGUgYWRkcmVzcyB0byB0cmFuc2ZlciBvd25lcnNoaXAgdG8uCiAgICBmdW5jdGlvbiByZXF1ZXN0T3duZXJzaGlwVHJhbnNmZXIoYWRkcmVzcyBfbmV3T3duZXJDYW5kaWRhdGUpIGV4dGVybmFsIG9ubHlPd25lciB7CiAgICAgICAgcmVxdWlyZShfbmV3T3duZXJDYW5kaWRhdGUgIT0gYWRkcmVzcygwKSk7CgogICAgICAgIG5ld093bmVyQ2FuZGlkYXRlID0gX25ld093bmVyQ2FuZGlkYXRlOwoKICAgICAgICBPd25lcnNoaXBSZXF1ZXN0ZWQobXNnLnNlbmRlciwgbmV3T3duZXJDYW5kaWRhdGUpOwogICAgfQoKICAgIC8vLyBAZGV2IEFjY2VwdCBvd25lcnNoaXAgdHJhbnNmZXIuIFRoaXMgbWV0aG9kIG5lZWRzIHRvIGJlIGNhbGxlZCBieSB0aGUgcHJldmlvdXNseSBwcm9wb3NlZCBvd25lci4KICAgIGZ1bmN0aW9uIGFjY2VwdE93bmVyc2hpcCgpIGV4dGVybmFsIG9ubHlPd25lckNhbmRpZGF0ZSB7CiAgICAgICAgYWRkcmVzcyBwcmV2aW91c093bmVyID0gb3duZXI7CgogICAgICAgIG93bmVyID0gbmV3T3duZXJDYW5kaWRhdGU7CiAgICAgICAgbmV3T3duZXJDYW5kaWRhdGUgPSBhZGRyZXNzKDApOwoKICAgICAgICBPd25lcnNoaXBUcmFuc2ZlcnJlZChwcmV2aW91c093bmVyLCBvd25lcik7CiAgICB9Cn0KCi8vLyBAdGl0bGUgRXRoZXJXaW4KLy8vIEBkZXYgdGhlIGNvbnRyYWN0IHRoYW4gaGFuZGxlcyB0aGUgRXRoZXJXaW4gYXBwCmNvbnRyYWN0IEV0aGVyRGljayBpcyBPd25hYmxlIHsKCiAgICBldmVudCBOZXdCaWdnZXN0RGljayhzdHJpbmcgbmFtZSwgc3RyaW5nIG5vdGVzLCB1aW50MjU2IHNpemUpOwoKICAgIHN0cnVjdCBCaWdnZXN0RGljayB7CiAgICAgICAgc3RyaW5nIG5hbWU7CiAgICAgICAgc3RyaW5nIG5vdGVzOwogICAgICAgIHVpbnQyNTYgc2l6ZTsKICAgICAgICB1aW50MjU2IHRpbWVzdGFtcDsKICAgICAgICBhZGRyZXNzIHdobzsKICAgIH0KCiAgICBCaWdnZXN0RGlja1tdIHByaXZhdGUgYmlnZ2VzdERpY2tzOwoKICAgIGZ1bmN0aW9uIEV0aGVyRGljaygpIHB1YmxpYyB7CiAgICAgICAgYmlnZ2VzdERpY2tzLnB1c2goQmlnZ2VzdERpY2soewogICAgICAgICAgICBuYW1lOiAgICAgICAnQnJpYW4nLAogICAgICAgICAgICBub3RlczogICAgICAnRmlyc3QgZGljaycsCiAgICAgICAgICAgIHNpemU6ICAgICAgOSwKICAgICAgICAgICAgdGltZXN0YW1wOiAgYmxvY2sudGltZXN0YW1wLAogICAgICAgICAgICB3aG86ICAgICAgICBhZGRyZXNzKDApCiAgICAgICAgICAgIH0pKTsKICAgIH0KCiAgICAvLy8gTWFrZXMgeW91IGhhdmUgdGhlIGJpZ2dlciBkaWNrCiAgICBmdW5jdGlvbiBpSGF2ZUFCaWdnZXJEaWNrKHN0cmluZyBuYW1lLCBzdHJpbmcgbm90ZXMpIGV4dGVybmFsIHBheWFibGUgewoKICAgICAgICB1aW50IG5hbWVMZW4gPSBieXRlcyhuYW1lKS5sZW5ndGg7CiAgICAgICAgdWludCBub3Rlc0xlbiA9IGJ5dGVzKG5vdGVzKS5sZW5ndGg7CgogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciAhPSBhZGRyZXNzKDApKTsKICAgICAgICByZXF1aXJlKG5hbWVMZW4gPiAyKTsKICAgICAgICByZXF1aXJlKG5hbWVMZW4gPD0gNjQpOwogICAgICAgIHJlcXVpcmUobm90ZXNMZW4gPD0gMTQwKTsKICAgICAgICByZXF1aXJlKG1zZy52YWx1ZSA+IGJpZ2dlc3REaWNrc1tiaWdnZXN0RGlja3MubGVuZ3RoIC0gMV0uc2l6ZSk7CgogICAgICAgIEJpZ2dlc3REaWNrIG1lbW9yeSBiZCA9IEJpZ2dlc3REaWNrKHsKICAgICAgICAgICAgbmFtZTogICAgICAgbmFtZSwKICAgICAgICAgICAgbm90ZXM6ICAgICAgbm90ZXMsCiAgICAgICAgICAgIHNpemU6ICAgICAgIG1zZy52YWx1ZSwKICAgICAgICAgICAgdGltZXN0YW1wOiAgYmxvY2sudGltZXN0YW1wLAogICAgICAgICAgICB3aG86ICAgICAgICBtc2cuc2VuZGVyCiAgICAgICAgfSk7CgogICAgICAgIGJpZ2dlc3REaWNrcy5wdXNoKGJkKTsKCiAgICAgICAgTmV3QmlnZ2VzdERpY2sobmFtZSwgbm90ZXMsIG1zZy52YWx1ZSk7CiAgICB9CgogICAgLy8gcmV0dXJucyBob3cgbWFueSBkaWNrcyB0aGVyZSBoYXZlIGJlZW4KICAgIGZ1bmN0aW9uIGhvd01hbnlEaWNrcygpIGV4dGVybmFsIHZpZXcKICAgICAgICAgICAgcmV0dXJucyAodWludCkgewoKICAgICAgICByZXR1cm4gYmlnZ2VzdERpY2tzLmxlbmd0aDsKICAgIH0KCiAgICAvLyByZXR1cm5zIHdobyBoYXMgdGhlIGJpZ2dlc3QgZGljawogICAgZnVuY3Rpb24gd2hvSGFzVGhlQmlnZ2VzdERpY2soKSBleHRlcm5hbCB2aWV3CiAgICAgICAgICAgIHJldHVybnMgKHN0cmluZyBuYW1lLCBzdHJpbmcgbm90ZXMsIHVpbnQyNTYgc2l6ZSwgdWludDI1NiB0aW1lc3RhbXAsIGFkZHJlc3Mgd2hvKSB7CgogICAgICAgIEJpZ2dlc3REaWNrIHN0b3JhZ2UgYmQgPSBiaWdnZXN0RGlja3NbYmlnZ2VzdERpY2tzLmxlbmd0aCAtIDFdOwogICAgICAgIHJldHVybiAoYmQubmFtZSwgYmQubm90ZXMsIGJkLnNpemUsIGJkLnRpbWVzdGFtcCwgYmQud2hvKTsKICAgIH0KCiAgICAvLyByZXR1cm5zIHRoZSBiaWdnZXN0IGRpY2sgYXQgdGhlIGdpdmVuIGluZGV4CiAgICBmdW5jdGlvbiB3aG9IYWRUaGVCaWdnZXN0RGljayh1aW50IHBvc2l0aW9uKSBleHRlcm5hbCB2aWV3CiAgICAgICAgICAgIHJldHVybnMgKHN0cmluZyBuYW1lLCBzdHJpbmcgbm90ZXMsIHVpbnQyNTYgc2l6ZSwgdWludDI1NiB0aW1lc3RhbXAsIGFkZHJlc3Mgd2hvKSB7CgogICAgICAgIEJpZ2dlc3REaWNrIHN0b3JhZ2UgYmQgPSBiaWdnZXN0RGlja3NbcG9zaXRpb25dOwogICAgICAgIHJldHVybiAoYmQubmFtZSwgYmQubm90ZXMsIGJkLnNpemUsIGJkLnRpbWVzdGFtcCwgYmQud2hvKTsKICAgIH0KCiAgICAvLyBmYWlsIHNhZmUgZm9yIGJhbGFuY2UgdHJhbnNmZXIKICAgIGZ1bmN0aW9uIHRyYW5zZmVyQmFsYW5jZShhZGRyZXNzIHRvLCB1aW50MjU2IGFtb3VudCkgZXh0ZXJuYWwgb25seU93bmVyIHsKICAgICAgICB0by50cmFuc2ZlcihhbW91bnQpOwogICAgfQoKfQ=='.
	

]
