Class {
	#name : #SRT8C6f3d75873c66cf0300c9d6DFe8D607D1824204,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT8C6f3d75873c66cf0300c9d6DFe8D607D1824204 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTc7CgovKgoKSUNPIFN5bmRpY2F0ZSBDb250cmFjdAo9PT09PT09PT09PT09PT09PT09PT09PT0KCkJ1eXMgSUNPIFRva2VucyBmb3IgYSBnaXZlbiBJQ08ga25vd24gY29udHJhY3QgYWRkcmVzcwpBdXRob3I6IEJvZ2RhbgoKKi8KCi8vIEVSQzIwIEludGVyZmFjZTogaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL0VJUHMvaXNzdWVzLzIwCmNvbnRyYWN0IEVSQzIwIHsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpOwp9Cgpjb250cmFjdCBJQ09TeW5kaWNhdGUgewogICAgLy8gU3RvcmUgdGhlIGFtb3VudCBvZiBFVEggZGVwb3NpdGVkIGJ5IGVhY2ggYWNjb3VudC4KICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIGJhbGFuY2VzOwogICAgLy8gVHJhY2sgd2hldGhlciB0aGUgY29udHJhY3QgaGFzIGJvdWdodCB0aGUgdG9rZW5zIHlldC4KICAgIGJvb2wgcHVibGljIGJvdWdodF90b2tlbnM7CiAgICAvLyBSZWNvcmQgRVRIIHZhbHVlIG9mIHRva2VucyBjdXJyZW50bHkgaGVsZCBieSBjb250cmFjdC4KICAgIHVpbnQyNTYgcHVibGljIGNvbnRyYWN0X2V0aF92YWx1ZTsKICAgIC8vIEVtZXJnZW5jeSBraWxsIHN3aXRjaCBpbiBjYXNlIGEgY3JpdGljYWwgYnVnIGlzIGZvdW5kLgogICAgYm9vbCBwdWJsaWMga2lsbF9zd2l0Y2g7CgogICAgLy8gTWF4aW11bSBhbW91bnQgb2YgdXNlciBFVEggY29udHJhY3Qgd2lsbCBhY2NlcHQuICBSZWR1Y2VzIHJpc2sgb2YgaGFyZCBjYXAgcmVsYXRlZCBmYWlsdXJlLgogICAgdWludDI1NiBwdWJsaWMgZXRoX2NhcCA9IDMwMDAwIGV0aGVyOwogICAgLy8gVGhlIGRldmVsb3BlciBhZGRyZXNzLgogICAgYWRkcmVzcyBwdWJsaWMgZGV2ZWxvcGVyID0gMHg5MWQ5N2RhNDlkM2NENzFCNDc1RjQ2ZDcxOTI0MUJEOGJiNkFmMThmOwogICAgLy8gVGhlIGNyb3dkc2FsZSBhZGRyZXNzLiAgU2V0dGFibGUgYnkgdGhlIGRldmVsb3Blci4KICAgIGFkZHJlc3MgcHVibGljIHNhbGU7CiAgICAvLyBUaGUgdG9rZW4gYWRkcmVzcy4gIFNldHRhYmxlIGJ5IHRoZSBkZXZlbG9wZXIuCiAgICBFUkMyMCBwdWJsaWMgdG9rZW47CgogICAgLy8gQWxsb3dzIHRoZSBkZXZlbG9wZXIgdG8gc2V0IHRoZSBjcm93ZHNhbGUgYW5kIHRva2VuIGFkZHJlc3Nlcy4KICAgIGZ1bmN0aW9uIHNldF9hZGRyZXNzZXMoYWRkcmVzcyBfc2FsZSwgYWRkcmVzcyBfdG9rZW4pIHB1YmxpYyB7CiAgICAgICAgLy8gT25seSBhbGxvdyB0aGUgZGV2ZWxvcGVyIHRvIHNldCB0aGUgc2FsZSBhbmQgdG9rZW4gYWRkcmVzc2VzLgogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBkZXZlbG9wZXIpOwogICAgICAgIC8vIE9ubHkgYWxsb3cgc2V0dGluZyB0aGUgYWRkcmVzc2VzIG9uY2UuCiAgICAgICAgcmVxdWlyZShzYWxlID09IDB4MCk7CiAgICAgICAgLy8gU2V0IHRoZSBjcm93ZHNhbGUgYW5kIHRva2VuIGFkZHJlc3Nlcy4KICAgICAgICBzYWxlID0gX3NhbGU7CiAgICAgICAgdG9rZW4gPSBFUkMyMChfdG9rZW4pOwogICAgfQoKICAgIC8vIEFsbG93cyB0aGUgZGV2ZWxvcGVyIG9yIGFueW9uZSB3aXRoIHRoZSBwYXNzd29yZCB0byBzaHV0IGRvd24gZXZlcnl0aGluZyBleGNlcHQgd2l0aGRyYXdhbHMgaW4gZW1lcmdlbmNpZXMuCiAgICBmdW5jdGlvbiBhY3RpdmF0ZV9raWxsX3N3aXRjaCgpIHB1YmxpYyB7CiAgICAgICAgLy8gT25seSBhY3RpdmF0ZSB0aGUga2lsbCBzd2l0Y2ggaWYgdGhlIHNlbmRlciBpcyB0aGUgZGV2ZWxvcGVyIG9yIHRoZSBwYXNzd29yZCBpcyBjb3JyZWN0LgogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBkZXZlbG9wZXIpOwogICAgICAgIC8vIElycmV2ZXJzaWJseSBhY3RpdmF0ZSB0aGUga2lsbCBzd2l0Y2guCiAgICAgICAga2lsbF9zd2l0Y2ggPSB0cnVlOwogICAgfQoKICAgIC8vIFdpdGhkcmF3cyBhbGwgRVRIIGRlcG9zaXRlZCBvciB0b2tlbnMgcHVyY2hhc2VkIGJ5IHRoZSBnaXZlbiB1c2VyIGFuZCByZXdhcmRzIHRoZSBjYWxsZXIuCiAgICBmdW5jdGlvbiB3aXRoZHJhdyhhZGRyZXNzIHVzZXIpIHB1YmxpYyB7CiAgICAgICAgLy8gT25seSBhbGxvdyB3aXRoZHJhd2FscyBhZnRlciB0aGUgY29udHJhY3QgaGFzIGhhZCBhIGNoYW5jZSB0byBidXkgaW4uCiAgICAgICAgcmVxdWlyZShib3VnaHRfdG9rZW5zKTsKICAgICAgICAvLyBTaG9ydCBjaXJjdWl0IHRvIHNhdmUgZ2FzIGlmIHRoZSB1c2VyIGRvZXNuJ3QgaGF2ZSBhIGJhbGFuY2UuCiAgICAgICAgaWYgKGJhbGFuY2VzW3VzZXJdID09IDApIHJldHVybjsKICAgICAgICAvLyBJZiB0aGUgY29udHJhY3QgZmFpbGVkIHRvIGJ1eSBpbnRvIHRoZSBzYWxlLCB3aXRoZHJhdyB0aGUgdXNlcidzIEVUSC4KICAgICAgICBpZiAoIWJvdWdodF90b2tlbnMpIHsKICAgICAgICAgICAgLy8gU3RvcmUgdGhlIHVzZXIncyBiYWxhbmNlIHByaW9yIHRvIHdpdGhkcmF3YWwgaW4gYSB0ZW1wb3JhcnkgdmFyaWFibGUuCiAgICAgICAgICAgIHVpbnQyNTYgZXRoX3RvX3dpdGhkcmF3ID0gYmFsYW5jZXNbdXNlcl07CiAgICAgICAgICAgIC8vIFVwZGF0ZSB0aGUgdXNlcidzIGJhbGFuY2UgcHJpb3IgdG8gc2VuZGluZyBFVEggdG8gcHJldmVudCByZWN1cnNpdmUgY2FsbC4KICAgICAgICAgICAgYmFsYW5jZXNbdXNlcl0gPSAwOwogICAgICAgICAgICAvLyBSZXR1cm4gdGhlIHVzZXIncyBmdW5kcy4gIFRocm93cyBvbiBmYWlsdXJlIHRvIHByZXZlbnQgbG9zcyBvZiBmdW5kcy4KICAgICAgICAgICAgdXNlci50cmFuc2ZlcihldGhfdG9fd2l0aGRyYXcpOwogICAgICAgIH0KICAgICAgICAvLyBXaXRoZHJhdyB0aGUgdXNlcidzIHRva2VucyBpZiB0aGUgY29udHJhY3QgaGFzIHB1cmNoYXNlZCB0aGVtLgogICAgICAgIGVsc2UgewogICAgICAgICAgICAvLyBSZXRyaWV2ZSBjdXJyZW50IHRva2VuIGJhbGFuY2Ugb2YgY29udHJhY3QuCiAgICAgICAgICAgIHVpbnQyNTYgY29udHJhY3RfdG9rZW5fYmFsYW5jZSA9IHRva2VuLmJhbGFuY2VPZihhZGRyZXNzKHRoaXMpKTsKICAgICAgICAgICAgLy8gRGlzYWxsb3cgdG9rZW4gd2l0aGRyYXdhbHMgaWYgdGhlcmUgYXJlIG5vIHRva2VucyB0byB3aXRoZHJhdy4KICAgICAgICAgICAgcmVxdWlyZShjb250cmFjdF90b2tlbl9iYWxhbmNlICE9IDApOwogICAgICAgICAgICAvLyBTdG9yZSB0aGUgdXNlcidzIHRva2VuIGJhbGFuY2UgaW4gYSB0ZW1wb3JhcnkgdmFyaWFibGUuCiAgICAgICAgICAgIHVpbnQyNTYgdG9rZW5zX3RvX3dpdGhkcmF3ID0gKGJhbGFuY2VzW3VzZXJdICogY29udHJhY3RfdG9rZW5fYmFsYW5jZSkgLyBjb250cmFjdF9ldGhfdmFsdWU7CiAgICAgICAgICAgIC8vIFVwZGF0ZSB0aGUgdmFsdWUgb2YgdG9rZW5zIGN1cnJlbnRseSBoZWxkIGJ5IHRoZSBjb250cmFjdC4KICAgICAgICAgICAgY29udHJhY3RfZXRoX3ZhbHVlIC09IGJhbGFuY2VzW3VzZXJdOwogICAgICAgICAgICAvLyBVcGRhdGUgdGhlIHVzZXIncyBiYWxhbmNlIHByaW9yIHRvIHNlbmRpbmcgdG8gcHJldmVudCByZWN1cnNpdmUgY2FsbC4KICAgICAgICAgICAgYmFsYW5jZXNbdXNlcl0gPSAwOwogICAgICAgICAgICAvLyBTZW5kIHRoZSBmdW5kcy4gIFRocm93cyBvbiBmYWlsdXJlIHRvIHByZXZlbnQgbG9zcyBvZiBmdW5kcy4KICAgICAgICAgICAgcmVxdWlyZSh0b2tlbi50cmFuc2Zlcih1c2VyLCB0b2tlbnNfdG9fd2l0aGRyYXcpKTsKCiAgICAgICAgfQoKICAgIH0KCiAgICAvLyBCdXlzIHRva2VucyBpbiB0aGUgY3Jvd2RzYWxlIGFuZCByZXdhcmRzIHRoZSBjYWxsZXIsIGNhbGxhYmxlIGJ5IGFueW9uZS4KICAgIGZ1bmN0aW9uIGJ1eSgpIHB1YmxpYyB7CiAgICAgICAgLy8gU2hvcnQgY2lyY3VpdCB0byBzYXZlIGdhcyBpZiB0aGUgY29udHJhY3QgaGFzIGFscmVhZHkgYm91Z2h0IHRva2Vucy4KICAgICAgICBpZiAoYm91Z2h0X3Rva2VucykgcmV0dXJuOwogICAgICAgIC8vIFNob3J0IGNpcmN1aXQgdG8gc2F2ZSBnYXMgaWYga2lsbCBzd2l0Y2ggaXMgYWN0aXZlLgogICAgICAgIGlmIChraWxsX3N3aXRjaCkgcmV0dXJuOwogICAgICAgIC8vIERpc2FsbG93IGJ1eWluZyBpbiBpZiB0aGUgZGV2ZWxvcGVyIGhhc24ndCBzZXQgdGhlIHNhbGUgYWRkcmVzcyB5ZXQuCiAgICAgICAgcmVxdWlyZShzYWxlICE9IDB4MCk7CiAgICAgICAgLy8gUmVjb3JkIHRoYXQgdGhlIGNvbnRyYWN0IGhhcyBib3VnaHQgdGhlIHRva2Vucy4KICAgICAgICBib3VnaHRfdG9rZW5zID0gdHJ1ZTsKICAgICAgICAvLyBSZWNvcmQgdGhlIGFtb3VudCBvZiBFVEggc2VudCBhcyB0aGUgY29udHJhY3QncyBjdXJyZW50IHZhbHVlLgogICAgICAgIGNvbnRyYWN0X2V0aF92YWx1ZSA9IHRoaXMuYmFsYW5jZTsKICAgICAgICAvLyBUcmFuc2ZlciBhbGwgdGhlIGZ1bmRzIHRvIHRoZSBjcm93ZHNhbGUgYWRkcmVzcyB0byBidXkgdG9rZW5zLgogICAgICAgIC8vIFRocm93cyBpZiB0aGUgY3Jvd2RzYWxlIGhhc24ndCBzdGFydGVkIHlldCBvciBoYXMgYWxyZWFkeSBjb21wbGV0ZWQsIHByZXZlbnRpbmcgbG9zcyBvZiBmdW5kcy4KICAgICAgICByZXF1aXJlKHNhbGUuY2FsbC52YWx1ZShjb250cmFjdF9ldGhfdmFsdWUpKCkpOwogICAgfQoKICAgIC8vIERlZmF1bHQgZnVuY3Rpb24uICBDYWxsZWQgd2hlbiBhIHVzZXIgc2VuZHMgRVRIIHRvIHRoZSBjb250cmFjdC4KICAgIGZ1bmN0aW9uICgpIHB1YmxpYyBwYXlhYmxlIHsKICAgICAgICAvLyBEaXNhbGxvdyBkZXBvc2l0cyBpZiBraWxsIHN3aXRjaCBpcyBhY3RpdmUuCiAgICAgICAgcmVxdWlyZSgha2lsbF9zd2l0Y2gpOwogICAgICAgIC8vIE9ubHkgYWxsb3cgZGVwb3NpdHMgaWYgdGhlIGNvbnRyYWN0IGhhc24ndCBhbHJlYWR5IHB1cmNoYXNlZCB0aGUgdG9rZW5zLgogICAgICAgIHJlcXVpcmUoIWJvdWdodF90b2tlbnMpOwogICAgICAgIC8vIE9ubHkgYWxsb3cgZGVwb3NpdHMgdGhhdCB3b24ndCBleGNlZWQgdGhlIGNvbnRyYWN0J3MgRVRIIGNhcC4KICAgICAgICByZXF1aXJlKHRoaXMuYmFsYW5jZSA8IGV0aF9jYXApOwogICAgICAgIC8vIFVwZGF0ZSByZWNvcmRzIG9mIGRlcG9zaXRlZCBFVEggdG8gaW5jbHVkZSB0aGUgcmVjZWl2ZWQgYW1vdW50LgogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdICs9IG1zZy52YWx1ZTsKICAgIH0KfQ=='.
	

]
