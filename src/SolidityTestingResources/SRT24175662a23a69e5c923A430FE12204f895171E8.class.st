Class {
	#name : #SRT24175662a23a69e5c923A430FE12204f895171E8,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT24175662a23a69e5c923A430FE12204f895171E8 >> base64 [
	^ ''.
	

]
