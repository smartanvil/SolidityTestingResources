Class {
	#name : #SRTaacf052428a5e8e583ca2bbaf3eacb34f161bc6b,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTaacf052428a5e8e583ca2bbaf3eacb34f161bc6b >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTM7Cgpjb250cmFjdCBFUkMyMCB7CiAgdWludCBwdWJsaWMgdG90YWxTdXBwbHk7CiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3Mgd2hvKSBjb25zdGFudCByZXR1cm5zICh1aW50KTsKICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBvd25lciwgYWRkcmVzcyBzcGVuZGVyKSBjb25zdGFudCByZXR1cm5zICh1aW50KTsKCiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyB0bywgdWludCB2YWx1ZSkgcmV0dXJucyAoYm9vbCBvayk7CiAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgZnJvbSwgYWRkcmVzcyB0bywgdWludCB2YWx1ZSkgcmV0dXJucyAoYm9vbCBvayk7CiAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIHNwZW5kZXIsIHVpbnQgdmFsdWUpIHJldHVybnMgKGJvb2wgb2spOwogIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBmcm9tLCBhZGRyZXNzIGluZGV4ZWQgdG8sIHVpbnQgdmFsdWUpOwogIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBvd25lciwgYWRkcmVzcyBpbmRleGVkIHNwZW5kZXIsIHVpbnQgdmFsdWUpOwp9Cgpjb250cmFjdCBTYWZlTWF0aCB7CiAgZnVuY3Rpb24gc2FmZU11bCh1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgewogICAgdWludCBjID0gYSAqIGI7CiAgICBhc3NlcnQoYSA9PSAwIHx8IGMgLyBhID09IGIpOwogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBzYWZlRGl2KHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7CiAgICBhc3NlcnQoYiA+IDApOwogICAgdWludCBjID0gYSAvIGI7CiAgICBhc3NlcnQoYSA9PSBiICogYyArIGEgJSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gc2FmZVN1Yih1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICBmdW5jdGlvbiBzYWZlQWRkKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7CiAgICB1aW50IGMgPSBhICsgYjsKICAgIGFzc2VydChjPj1hICYmIGM+PWIpOwogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBtYXg2NCh1aW50NjQgYSwgdWludDY0IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQ2NCkgewogICAgcmV0dXJuIGEgPj0gYiA/IGEgOiBiOwogIH0KCiAgZnVuY3Rpb24gbWluNjQodWludDY0IGEsIHVpbnQ2NCBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50NjQpIHsKICAgIHJldHVybiBhIDwgYiA/IGEgOiBiOwogIH0KCiAgZnVuY3Rpb24gbWF4MjU2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICByZXR1cm4gYSA+PSBiID8gYSA6IGI7CiAgfQoKICBmdW5jdGlvbiBtaW4yNTYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHJldHVybiBhIDwgYiA/IGEgOiBiOwogIH0KCn0KCmNvbnRyYWN0IFN0YW5kYXJkVG9rZW4gaXMgRVJDMjAsIFNhZmVNYXRoIHsKCiAgZXZlbnQgTWludGVkKGFkZHJlc3MgcmVjZWl2ZXIsIHVpbnQgYW1vdW50KTsKCiAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQpIGJhbGFuY2VzOwoKICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludCkpIGFsbG93ZWQ7CgogIGZ1bmN0aW9uIGlzVG9rZW4oKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAoYm9vbCB3ZUFyZSkgewogICAgcmV0dXJuIHRydWU7CiAgfQoKICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludCBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBzYWZlU3ViKGJhbGFuY2VzW21zZy5zZW5kZXJdLCBfdmFsdWUpOwogICAgYmFsYW5jZXNbX3RvXSA9IHNhZmVBZGQoYmFsYW5jZXNbX3RvXSwgX3ZhbHVlKTsKICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICB1aW50IF9hbGxvd2FuY2UgPSBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXTsKCiAgICBiYWxhbmNlc1tfdG9dID0gc2FmZUFkZChiYWxhbmNlc1tfdG9dLCBfdmFsdWUpOwogICAgYmFsYW5jZXNbX2Zyb21dID0gc2FmZVN1YihiYWxhbmNlc1tfZnJvbV0sIF92YWx1ZSk7CiAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA9IHNhZmVTdWIoX2FsbG93YW5jZSwgX3ZhbHVlKTsKICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludCBiYWxhbmNlKSB7CiAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsKICB9CgogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludCBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewoKICAgcmVxdWlyZSgoX3ZhbHVlID09IDApIHx8IChhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9PSAwKSk7CgogICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CiAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBjb25zdGFudCByZXR1cm5zICh1aW50IHJlbWFpbmluZykgewogICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07CiAgfQoKfQoKY29udHJhY3QgQml0QmVyaSBpcyBTdGFuZGFyZFRva2VuIHsKCiAgICBzdHJpbmcgcHVibGljIG5hbWUgPSAiQml0QmVyaSI7CiAgICBzdHJpbmcgcHVibGljIHN5bWJvbCA9ICJCVEIiOwogICAgdWludCBwdWJsaWMgZGVjaW1hbHMgPSAxODsKCiAgICAKICAgIGJvb2wgcHVibGljIGhhbHRlZCA9IGZhbHNlOyAKICAgIGJvb2wgcHVibGljIHByZVRnZSA9IHRydWU7IAogICAgYm9vbCBwdWJsaWMgc3RhZ2VPbmUgPSBmYWxzZTsgCiAgICBib29sIHB1YmxpYyBzdGFnZVR3byA9IGZhbHNlOyAKICAgIGJvb2wgcHVibGljIHN0YWdlVGhyZWUgPSBmYWxzZTsgCiAgICBib29sIHB1YmxpYyBmcmVlemUgPSB0cnVlOyAKCiAgIAogICAgYWRkcmVzcyBwdWJsaWMgZm91bmRlciA9IDB4MDsKICAgIGFkZHJlc3MgcHVibGljIG93bmVyID0gMHgwOwoKICAgIHVpbnQgcHVibGljIHRvdGFsVG9rZW5zID0gMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwOwogICAgdWludCBwdWJsaWMgdGVhbSA9IDUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA7CiAgICB1aW50IHB1YmxpYyBib3VudHkgPSA1MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwOyAKCiAgICB1aW50IHB1YmxpYyBwcmVUZ2VDYXAgPSAyNTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwOwogICAgdWludCBwdWJsaWMgdGdlQ2FwID0gNTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA7IAoKICAgIHVpbnQgcHVibGljIHByZXNhbGVUb2tlblN1cHBseSA9IDA7IAogICAgdWludCBwdWJsaWMgcHJlc2FsZUV0aGVyUmFpc2VkID0gMDsgCiAgICB1aW50IHB1YmxpYyBwcmVUZ2VUb2tlblN1cHBseSA9IDA7IAoKICAgIGV2ZW50IEJ1eShhZGRyZXNzIGluZGV4ZWQgc2VuZGVyLCB1aW50IGV0aCwgdWludCBmYnQpOwoKICAgIGV2ZW50IFRva2Vuc1NlbnQoYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHZhbHVlKTsKICAgIGV2ZW50IENvbnRyaWJ1dGlvblJlY2VpdmVkKGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiB2YWx1ZSk7CiAgICBldmVudCBCdXJuKGFkZHJlc3MgaW5kZXhlZCBmcm9tLCB1aW50MjU2IHZhbHVlKTsKCiAgICBmdW5jdGlvbiBCaXRCZXJpKGFkZHJlc3MgX2ZvdW5kZXIpIHBheWFibGUgewogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgICAgICBmb3VuZGVyID0gX2ZvdW5kZXI7CgogICAgICAgIGJhbGFuY2VzW2ZvdW5kZXJdID0gdGVhbTsKICAgICAgICB0b3RhbFRva2VucyA9IHNhZmVTdWIodG90YWxUb2tlbnMsIHRlYW0pOwogICAgICAgIHRvdGFsVG9rZW5zID0gc2FmZVN1Yih0b3RhbFRva2VucywgYm91bnR5KTsKICAgICAgICB0b3RhbFN1cHBseSA9IHRvdGFsVG9rZW5zOwogICAgICAgIGJhbGFuY2VzW293bmVyXSA9IHRvdGFsU3VwcGx5OwogICAgfQoKICAgZnVuY3Rpb24gYnV5KCkgcHVibGljIHBheWFibGUgcmV0dXJucyhib29sKSB7CiAgICAgICAgcmVxdWlyZSghaGFsdGVkKTsKICAgICAgICByZXF1aXJlKG1zZy52YWx1ZT4wKTsKICAgICAgICAKICAgICAgICB1aW50MjU2IHdlaUFtb3VudCA9IG1zZy52YWx1ZTsKICAgICAgICB1aW50MjU2IHRva2VucyA9IHNhZmVEaXYoc2FmZU11bCh3ZWlBbW91bnQsMTAqKjE3KSwxMzg5Mjc0Nzk4NTU1MSk7CgogICAgICAgIHJlcXVpcmUoYmFsYW5jZXNbb3duZXJdPnRva2Vucyk7CgogICAgICAgIGlmIChzdGFnZVRocmVlKSB7CgkJCXByZVRnZSA9IGZhbHNlOwoJCQlzdGFnZU9uZSA9IGZhbHNlOwoJCQlzdGFnZVR3byA9IGZhbHNlOwogICAgICAgIH0KCQkKICAgICAgICBpZiAoc3RhZ2VUd28pIHsKCQkJcHJlVGdlID0gZmFsc2U7CgkJCXN0YWdlT25lID0gZmFsc2U7CiAgICAgICAgICAgIHRva2VucyA9IHRva2VucyArICh0b2tlbnMgLyAxMCk7CiAgICAgICAgfQoJCQogICAgICAgIGlmIChzdGFnZU9uZSkgewoJCQlwcmVUZ2UgPSBmYWxzZTsKICAgICAgICAgICAgdG9rZW5zID0gdG9rZW5zICsgKHRva2VucyAvIDUpOwogICAgICAgIH0KCQkKICAgICAgICBpZiAocHJlVGdlKSB7CiAgICAgICAgICAgIHRva2VucyA9IHRva2VucyArICh0b2tlbnMgLyAyKTsKICAgICAgICB9CgogICAgICAgIGlmIChwcmVUZ2UpIHsKICAgICAgICAgICAgcmVxdWlyZShzYWZlQWRkKHByZXNhbGVUb2tlblN1cHBseSwgdG9rZW5zKSA8IHByZVRnZUNhcCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmVxdWlyZShzYWZlQWRkKHByZXNhbGVUb2tlblN1cHBseSwgdG9rZW5zKSA8IHNhZmVTdWIodGdlQ2FwLCBwcmVUZ2VUb2tlblN1cHBseSkpOwogICAgICAgIH0KCiAgICAgICAgZm91bmRlci50cmFuc2Zlcihtc2cudmFsdWUpOwoKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IHNhZmVBZGQoYmFsYW5jZXNbbXNnLnNlbmRlcl0sIHRva2Vucyk7CiAgICAgICAgYmFsYW5jZXNbb3duZXJdID0gc2FmZVN1YihiYWxhbmNlc1tvd25lcl0sIHRva2Vucyk7CgogICAgICAgIGlmIChwcmVUZ2UpIHsKICAgICAgICAgICAgcHJlVGdlVG9rZW5TdXBwbHkgID0gc2FmZUFkZChwcmVUZ2VUb2tlblN1cHBseSwgdG9rZW5zKTsKICAgICAgICB9CiAgICAgICAgcHJlc2FsZVRva2VuU3VwcGx5ID0gc2FmZUFkZChwcmVzYWxlVG9rZW5TdXBwbHksIHRva2Vucyk7CiAgICAgICAgcHJlc2FsZUV0aGVyUmFpc2VkID0gc2FmZUFkZChwcmVzYWxlRXRoZXJSYWlzZWQsIG1zZy52YWx1ZSk7CgogICAgICAgIEJ1eShtc2cuc2VuZGVyLCBtc2cudmFsdWUsIHRva2Vucyk7CgogICAgICAgIFRva2Vuc1NlbnQobXNnLnNlbmRlciwgdG9rZW5zKTsKICAgICAgICBDb250cmlidXRpb25SZWNlaXZlZChtc2cuc2VuZGVyLCBtc2cudmFsdWUpOwogICAgICAgIFRyYW5zZmVyKG93bmVyLCBtc2cuc2VuZGVyLCB0b2tlbnMpOwoKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBQcmVUZ2VFbmFibGUoKSBvbmx5T3duZXIoKSB7CiAgICAgICAgcHJlVGdlID0gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBQcmVUZ2VEaXNhYmxlKCkgb25seU93bmVyKCkgewogICAgICAgIHByZVRnZSA9IGZhbHNlOwogICAgfQoKICAgIGZ1bmN0aW9uIFN0YWdlT25lRW5hYmxlKCkgb25seU93bmVyKCkgewogICAgICAgIHN0YWdlT25lID0gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBTdGFnZU9uZURpc2FibGUoKSBvbmx5T3duZXIoKSB7CiAgICAgICAgc3RhZ2VPbmUgPSBmYWxzZTsKICAgIH0KCQogICAgZnVuY3Rpb24gU3RhZ2VUd29FbmFibGUoKSBvbmx5T3duZXIoKSB7CiAgICAgICAgc3RhZ2VUd28gPSB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIFN0YWdlVHdvRGlzYWJsZSgpIG9ubHlPd25lcigpIHsKICAgICAgICBzdGFnZVR3byA9IGZhbHNlOwogICAgfQoKICAgIGZ1bmN0aW9uIFN0YWdlVGhyZWVFbmFibGUoKSBvbmx5T3duZXIoKSB7CiAgICAgICAgc3RhZ2VUaHJlZSA9IHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gU3RhZ2VUaHJlZURpc2FibGUoKSBvbmx5T3duZXIoKSB7CiAgICAgICAgc3RhZ2VUaHJlZSA9IGZhbHNlOwogICAgfQoKICAgIGZ1bmN0aW9uIEV2ZW50RW1lcmdlbmN5U3RvcCgpIG9ubHlPd25lcigpIHsKICAgICAgICBoYWx0ZWQgPSB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIEV2ZW50RW1lcmdlbmN5Q29udGludWUoKSBvbmx5T3duZXIoKSB7CiAgICAgICAgaGFsdGVkID0gZmFsc2U7CiAgICB9CgogICAgZnVuY3Rpb24gc2VuZFRlYW1Ub2tlbnMoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBvbmx5T3duZXIoKSB7CiAgICAgICAgYmFsYW5jZXNbZm91bmRlcl0gPSBzYWZlU3ViKGJhbGFuY2VzW2ZvdW5kZXJdLCBfdmFsdWUpOwogICAgICAgIGJhbGFuY2VzW190b10gPSBzYWZlQWRkKGJhbGFuY2VzW190b10sIF92YWx1ZSk7CiAgICAgICAgVG9rZW5zU2VudChfdG8sIF92YWx1ZSk7CiAgICAgICAgVHJhbnNmZXIob3duZXIsIF90bywgX3ZhbHVlKTsKICAgIH0KCiAgICBmdW5jdGlvbiBzZW5kQm91bnR5KGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgb25seU93bmVyKCkgewogICAgICAgIGJvdW50eSA9IHNhZmVTdWIoYm91bnR5LCBfdmFsdWUpOwogICAgICAgIGJhbGFuY2VzW190b10gPSBzYWZlQWRkKGJhbGFuY2VzW190b10sIF92YWx1ZSk7CiAgICAgICAgVG9rZW5zU2VudChfdG8sIF92YWx1ZSk7CiAgICAgICAgVHJhbnNmZXIob3duZXIsIF90bywgX3ZhbHVlKTsKICAgIH0KCiAgICBmdW5jdGlvbiBzZW5kU3VwcGx5VG9rZW5zKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgb25seU93bmVyKCkgewogICAgICAgIGJhbGFuY2VzW293bmVyXSA9IHNhZmVTdWIoYmFsYW5jZXNbb3duZXJdLCBfdmFsdWUpOwogICAgICAgIGJhbGFuY2VzW190b10gPSBzYWZlQWRkKGJhbGFuY2VzW190b10sIF92YWx1ZSk7CiAgICAgICAgVG9rZW5zU2VudChfdG8sIF92YWx1ZSk7CiAgICAgICAgVHJhbnNmZXIob3duZXIsIF90bywgX3ZhbHVlKTsKICAgIH0KCgogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBpc0F2YWlsYWJsZSgpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIHJldHVybiBzdXBlci50cmFuc2ZlcihfdG8sIF92YWx1ZSk7CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgaXNBdmFpbGFibGUoKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICByZXR1cm4gc3VwZXIudHJhbnNmZXJGcm9tKF9mcm9tLCBfdG8sIF92YWx1ZSk7CiAgICB9CgogICAgZnVuY3Rpb24gYnVyblJlbWFpbmluZ1Rva2VucygpIGlzQXZhaWxhYmxlKCkgb25seU93bmVyKCkgewogICAgICAgIEJ1cm4ob3duZXIsIGJhbGFuY2VzW293bmVyXSk7CiAgICAgICAgYmFsYW5jZXNbb3duZXJdID0gMDsKICAgIH0KCiAgICBtb2RpZmllciBvbmx5T3duZXIoKSB7CiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyKTsKICAgICAgICBfOwogICAgfQoKICAgIG1vZGlmaWVyIGlzQXZhaWxhYmxlKCkgewogICAgICAgIHJlcXVpcmUoIWhhbHRlZCAmJiAhZnJlZXplKTsKICAgICAgICBfOwogICAgfQoKICAgIGZ1bmN0aW9uKCkgcGF5YWJsZSB7CiAgICAgICAgYnV5KCk7CiAgICB9CgogICAgZnVuY3Rpb24gZnJlZXplKCkgb25seU93bmVyKCkgewogICAgICAgICBmcmVlemUgPSB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIHVuRnJlZXplKCkgb25seU93bmVyKCkgewogICAgICAgICBmcmVlemUgPSBmYWxzZTsKICAgIH0KCiAgICBmdW5jdGlvbiBjaGFuZ2VPd25lcihhZGRyZXNzIF90bykgb25seU93bmVyKCkgewogICAgICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tvd25lcl07CiAgICAgICAgYmFsYW5jZXNbb3duZXJdID0gMDsKICAgICAgICBvd25lciA9IF90bzsKICAgIH0KCiAgICBmdW5jdGlvbiBjaGFuZ2VGb3VuZGVyKGFkZHJlc3MgX3RvKSBvbmx5T3duZXIoKSB7CiAgICAgICAgYmFsYW5jZXNbX3RvXSA9IGJhbGFuY2VzW2ZvdW5kZXJdOwogICAgICAgIGJhbGFuY2VzW2ZvdW5kZXJdID0gMDsKICAgICAgICBmb3VuZGVyID0gX3RvOwogICAgfQp9'.
	

]
