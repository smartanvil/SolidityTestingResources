Class {
	#name : #SRT19555a92a4c70b7ceb3b2b2b738d028a451da85a,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT19555a92a4c70b7ceb3b2b2b738d028a451da85a >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMDsKCgoKY29udHJhY3QgQWJzdHJhY3RFTlMgewogICAgZnVuY3Rpb24gb3duZXIoYnl0ZXMzMiBub2RlKSBjb25zdGFudCByZXR1cm5zKGFkZHJlc3MpOwogICAgZnVuY3Rpb24gcmVzb2x2ZXIoYnl0ZXMzMiBub2RlKSBjb25zdGFudCByZXR1cm5zKGFkZHJlc3MpOwogICAgZnVuY3Rpb24gdHRsKGJ5dGVzMzIgbm9kZSkgY29uc3RhbnQgcmV0dXJucyh1aW50NjQpOwogICAgZnVuY3Rpb24gc2V0T3duZXIoYnl0ZXMzMiBub2RlLCBhZGRyZXNzIG93bmVyKTsKICAgIGZ1bmN0aW9uIHNldFN1Ym5vZGVPd25lcihieXRlczMyIG5vZGUsIGJ5dGVzMzIgbGFiZWwsIGFkZHJlc3Mgb3duZXIpOwogICAgZnVuY3Rpb24gc2V0UmVzb2x2ZXIoYnl0ZXMzMiBub2RlLCBhZGRyZXNzIHJlc29sdmVyKTsKICAgIGZ1bmN0aW9uIHNldFRUTChieXRlczMyIG5vZGUsIHVpbnQ2NCB0dGwpOwoKICAgIC8vIExvZ2dlZCB3aGVuIHRoZSBvd25lciBvZiBhIG5vZGUgYXNzaWducyBhIG5ldyBvd25lciB0byBhIHN1Ym5vZGUuCiAgICBldmVudCBOZXdPd25lcihieXRlczMyIGluZGV4ZWQgbm9kZSwgYnl0ZXMzMiBpbmRleGVkIGxhYmVsLCBhZGRyZXNzIG93bmVyKTsKCiAgICAvLyBMb2dnZWQgd2hlbiB0aGUgb3duZXIgb2YgYSBub2RlIHRyYW5zZmVycyBvd25lcnNoaXAgdG8gYSBuZXcgYWNjb3VudC4KICAgIGV2ZW50IFRyYW5zZmVyKGJ5dGVzMzIgaW5kZXhlZCBub2RlLCBhZGRyZXNzIG93bmVyKTsKCiAgICAvLyBMb2dnZWQgd2hlbiB0aGUgcmVzb2x2ZXIgZm9yIGEgbm9kZSBjaGFuZ2VzLgogICAgZXZlbnQgTmV3UmVzb2x2ZXIoYnl0ZXMzMiBpbmRleGVkIG5vZGUsIGFkZHJlc3MgcmVzb2x2ZXIpOwoKICAgIC8vIExvZ2dlZCB3aGVuIHRoZSBUVEwgb2YgYSBub2RlIGNoYW5nZXMKICAgIGV2ZW50IE5ld1RUTChieXRlczMyIGluZGV4ZWQgbm9kZSwgdWludDY0IHR0bCk7Cn0KCgovKioKICogQSBzaW1wbGUgcmVzb2x2ZXIgYW55b25lIGNhbiB1c2U7IG9ubHkgYWxsb3dzIHRoZSBvd25lciBvZiBhIG5vZGUgdG8gc2V0IGl0cwogKiBhZGRyZXNzLgogKi8KY29udHJhY3QgUHVibGljUmVzb2x2ZXIgewogICAgQWJzdHJhY3RFTlMgZW5zOwogICAgbWFwcGluZyhieXRlczMyPT5hZGRyZXNzKSBhZGRyZXNzZXM7CiAgICBtYXBwaW5nKGJ5dGVzMzI9PmJ5dGVzMzIpIGhhc2hlczsKCiAgICBtb2RpZmllciBvbmx5X293bmVyKGJ5dGVzMzIgbm9kZSkgewogICAgICAgIGlmKGVucy5vd25lcihub2RlKSAhPSBtc2cuc2VuZGVyKSB0aHJvdzsKICAgICAgICBfOwogICAgfQoKICAgIC8qKgogICAgICogQ29uc3RydWN0b3IuCiAgICAgKiBAcGFyYW0gZW5zQWRkciBUaGUgRU5TIHJlZ2lzdHJhciBjb250cmFjdC4KICAgICAqLwogICAgZnVuY3Rpb24gUHVibGljUmVzb2x2ZXIoQWJzdHJhY3RFTlMgZW5zQWRkcikgewogICAgICAgIGVucyA9IGVuc0FkZHI7CiAgICB9CgogICAgLyoqCiAgICAgKiBGYWxsYmFjayBmdW5jdGlvbi4KICAgICAqLwogICAgZnVuY3Rpb24oKSB7CiAgICAgICAgdGhyb3c7CiAgICB9CgogICAgLyoqCiAgICAgKiBSZXR1cm5zIHRydWUgaWYgdGhlIHNwZWNpZmllZCBub2RlIGhhcyB0aGUgc3BlY2lmaWVkIHJlY29yZCB0eXBlLgogICAgICogQHBhcmFtIG5vZGUgVGhlIEVOUyBub2RlIHRvIHF1ZXJ5LgogICAgICogQHBhcmFtIGtpbmQgVGhlIHJlY29yZCB0eXBlIG5hbWUsIGFzIHNwZWNpZmllZCBpbiBFSVAxMzcuCiAgICAgKiBAcmV0dXJuIFRydWUgaWYgdGhpcyByZXNvbHZlciBoYXMgYSByZWNvcmQgb2YgdGhlIHByb3ZpZGVkIHR5cGUgb24gdGhlCiAgICAgKiAgICAgICAgIHByb3ZpZGVkIG5vZGUuCiAgICAgKi8KICAgIGZ1bmN0aW9uIGhhcyhieXRlczMyIG5vZGUsIGJ5dGVzMzIga2luZCkgY29uc3RhbnQgcmV0dXJucyAoYm9vbCkgewogICAgICAgIHJldHVybiAoa2luZCA9PSAiYWRkciIgJiYgYWRkcmVzc2VzW25vZGVdICE9IDApIHx8IChraW5kID09ICJoYXNoIiAmJiBoYXNoZXNbbm9kZV0gIT0gMCk7CiAgICB9CgogICAgLyoqCiAgICAgKiBSZXR1cm5zIHRydWUgaWYgdGhlIHJlc29sdmVyIGltcGxlbWVudHMgdGhlIGludGVyZmFjZSBzcGVjaWZpZWQgYnkgdGhlIHByb3ZpZGVkIGhhc2guCiAgICAgKiBAcGFyYW0gaW50ZXJmYWNlSUQgVGhlIElEIG9mIHRoZSBpbnRlcmZhY2UgdG8gY2hlY2sgZm9yLgogICAgICogQHJldHVybiBUcnVlIGlmIHRoZSBjb250cmFjdCBpbXBsZW1lbnRzIHRoZSByZXF1ZXN0ZWQgaW50ZXJmYWNlLgogICAgICovCiAgICBmdW5jdGlvbiBzdXBwb3J0c0ludGVyZmFjZShieXRlczQgaW50ZXJmYWNlSUQpIGNvbnN0YW50IHJldHVybnMgKGJvb2wpIHsKICAgICAgICByZXR1cm4gaW50ZXJmYWNlSUQgPT0gMHgzYjNiNTdkZSB8fCBpbnRlcmZhY2VJRCA9PSAweGQ4Mzg5ZGM1OwogICAgfQoKICAgIC8qKgogICAgICogUmV0dXJucyB0aGUgYWRkcmVzcyBhc3NvY2lhdGVkIHdpdGggYW4gRU5TIG5vZGUuCiAgICAgKiBAcGFyYW0gbm9kZSBUaGUgRU5TIG5vZGUgdG8gcXVlcnkuCiAgICAgKiBAcmV0dXJuIFRoZSBhc3NvY2lhdGVkIGFkZHJlc3MuCiAgICAgKi8KICAgIGZ1bmN0aW9uIGFkZHIoYnl0ZXMzMiBub2RlKSBjb25zdGFudCByZXR1cm5zIChhZGRyZXNzIHJldCkgewogICAgICAgIHJldCA9IGFkZHJlc3Nlc1tub2RlXTsKICAgIH0KCiAgICAvKioKICAgICAqIFNldHMgdGhlIGFkZHJlc3MgYXNzb2NpYXRlZCB3aXRoIGFuIEVOUyBub2RlLgogICAgICogTWF5IG9ubHkgYmUgY2FsbGVkIGJ5IHRoZSBvd25lciBvZiB0aGF0IG5vZGUgaW4gdGhlIEVOUyByZWdpc3RyeS4KICAgICAqIEBwYXJhbSBub2RlIFRoZSBub2RlIHRvIHVwZGF0ZS4KICAgICAqIEBwYXJhbSBhZGRyIFRoZSBhZGRyZXNzIHRvIHNldC4KICAgICAqLwogICAgZnVuY3Rpb24gc2V0QWRkcihieXRlczMyIG5vZGUsIGFkZHJlc3MgYWRkcikgb25seV9vd25lcihub2RlKSB7CiAgICAgICAgYWRkcmVzc2VzW25vZGVdID0gYWRkcjsKICAgIH0KCiAgICAvKioKICAgICAqIFJldHVybnMgdGhlIGNvbnRlbnQgaGFzaCBhc3NvY2lhdGVkIHdpdGggYW4gRU5TIG5vZGUuCiAgICAgKiBOb3RlIHRoYXQgdGhpcyByZXNvdXJjZSB0eXBlIGlzIG5vdCBzdGFuZGFyZGl6ZWQsIGFuZCB3aWxsIGxpa2VseSBjaGFuZ2UKICAgICAqIGluIGZ1dHVyZSB0byBhIHJlc291cmNlIHR5cGUgYmFzZWQgb24gbXVsdGloYXNoLgogICAgICogQHBhcmFtIG5vZGUgVGhlIEVOUyBub2RlIHRvIHF1ZXJ5LgogICAgICogQHJldHVybiBUaGUgYXNzb2NpYXRlZCBjb250ZW50IGhhc2guCiAgICAgKi8KICAgIGZ1bmN0aW9uIGNvbnRlbnQoYnl0ZXMzMiBub2RlKSBjb25zdGFudCByZXR1cm5zIChieXRlczMyIHJldCkgewogICAgICAgIHJldCA9IGhhc2hlc1tub2RlXTsKICAgIH0KCiAgICAvKioKICAgICAqIFNldHMgdGhlIGNvbnRlbnQgaGFzaCBhc3NvY2lhdGVkIHdpdGggYW4gRU5TIG5vZGUuCiAgICAgKiBNYXkgb25seSBiZSBjYWxsZWQgYnkgdGhlIG93bmVyIG9mIHRoYXQgbm9kZSBpbiB0aGUgRU5TIHJlZ2lzdHJ5LgogICAgICogTm90ZSB0aGF0IHRoaXMgcmVzb3VyY2UgdHlwZSBpcyBub3Qgc3RhbmRhcmRpemVkLCBhbmQgd2lsbCBsaWtlbHkgY2hhbmdlCiAgICAgKiBpbiBmdXR1cmUgdG8gYSByZXNvdXJjZSB0eXBlIGJhc2VkIG9uIG11bHRpaGFzaC4KICAgICAqIEBwYXJhbSBub2RlIFRoZSBub2RlIHRvIHVwZGF0ZS4KICAgICAqIEBwYXJhbSBoYXNoIFRoZSBjb250ZW50IGhhc2ggdG8gc2V0CiAgICAgKi8KICAgIGZ1bmN0aW9uIHNldENvbnRlbnQoYnl0ZXMzMiBub2RlLCBieXRlczMyIGhhc2gpIG9ubHlfb3duZXIobm9kZSkgewogICAgICAgIGhhc2hlc1tub2RlXSA9IGhhc2g7CiAgICB9Cn0='.
	

]
