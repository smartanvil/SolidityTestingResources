Class {
	#name : #SRTf0d20ae17804be1e5fd400f04991aeb0ffed5a03,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTf0d20ae17804be1e5fd400f04991aeb0ffed5a03 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgovKiAgICAgICAgICAgICAgICAgIFBvd0gzRCBUb2tlbiBDb250cmFjdAovICAgU2VuZCBFVEggdG8gdGhlIENvbnRyYWN0IGFuZCByZWNlaXZlIFRva2VuIGluIGV4Y2hhbmdlCi8gICAgICAgX19fICAgICAgICAgICAgICAgICAgICAgICAgIF9fX19fICAgIF9fXyAKLyAgICAgIC8gXyBcIF9fXyBfXyAgICAgIF9fIC9cICAvXCB8X19fIC8gICAvICAgXAovICAgICAvIC9fKS8vIF8gXFwgXCAvXCAvIC8vIC9fLyAvICAgfF8gXCAgLyAvXCAvCi8gICAgLyBfX18vfCAoXykgfFwgViAgViAvLyBfXyAgLyAgIF9fXykgfC8gL18vLyAKLyAgICBcLyAgICAgXF9fXy8gIFxfL1xfLyBcLyAvXy8gICB8X19fXy8vX19fLCcgIAovICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKLyAgICAgICAJIF9fX19fICAgICAgICBfICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKLyAgICAgICAJL19fICAgXCBfX18gIHwgfCBfXyBfX18gIF8gX18gICAgICAgICAgICAgICAKLyAgICAgICAJICAvIC9cLy8gXyBcIHwgfC8gLy8gXyBcfCAnXyBcICAgICAgICAgICAgICAKLyAgICAgICAJIC8gLyAgfCAoXykgfHwgICA8fCAgX18vfCB8IHwgfCAgICAgICAgICAgICAKLyAgICAgICAJIFwvICAgIFxfX18vIHxffFxfXFxfX198fF98IHxffCAgICAgICAgICAgICAKKi8KCgpjb250cmFjdCBQb3dIM0RUb2tlbiB7CgogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsKCiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbENvbnRyaWJ1dGlvbiA9IDA7CiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbEJvbnVzVG9rZW5zSXNzdWVkID0gMDsKCiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseSA9IDA7CiAgICBib29sIHB1YmxpYyBwdXJjaGFzaW5nQWxsb3dlZCA9IHRydWU7CiAgICBhZGRyZXNzIG93bmVyID0gbXNnLnNlbmRlcjsKICAgIGZ1bmN0aW9uIG5hbWUoKSBjb25zdGFudCByZXR1cm5zIChzdHJpbmcpIHsgcmV0dXJuICJQb3dIM0QgVG9rZW4iOyB9CiAgICBmdW5jdGlvbiBzeW1ib2woKSBjb25zdGFudCByZXR1cm5zIChzdHJpbmcpIHsgcmV0dXJuICJQM0QiOyB9CiAgICBmdW5jdGlvbiBkZWNpbWFscygpIGNvbnN0YW50IHJldHVybnMgKHVpbnQ4KSB7IHJldHVybiAxODsgfQogICAgCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsgcmV0dXJuIGJhbGFuY2VzW19vd25lcl07IH0KICAgIAogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICAvLyBtaXRpZ2F0ZXMgdGhlIEVSQzIwIHNob3J0IGFkZHJlc3MgYXR0YWNrCiAgICAgICAgaWYobXNnLmRhdGEubGVuZ3RoIDwgKDIgKiAzMikgKyA0KSB7IHRocm93OyB9CgogICAgICAgIGlmIChfdmFsdWUgPT0gMCkgeyByZXR1cm4gZmFsc2U7IH0KCiAgICAgICAgdWludDI1NiBmcm9tQmFsYW5jZSA9IGJhbGFuY2VzW21zZy5zZW5kZXJdOwoKICAgICAgICBib29sIHN1ZmZpY2llbnRGdW5kcyA9IGZyb21CYWxhbmNlID49IF92YWx1ZTsKICAgICAgICBib29sIG92ZXJmbG93ZWQgPSBiYWxhbmNlc1tfdG9dICsgX3ZhbHVlIDwgYmFsYW5jZXNbX3RvXTsKICAgICAgICAKICAgICAgICBpZiAoc3VmZmljaWVudEZ1bmRzICYmICFvdmVyZmxvd2VkKSB7CiAgICAgICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdIC09IF92YWx1ZTsKICAgICAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfdmFsdWU7CiAgICAgICAgICAgIAogICAgICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0gZWxzZSB7IHJldHVybiBmYWxzZTsgfQogICAgfQogICAgCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICAvLyBtaXRpZ2F0ZXMgdGhlIEVSQzIwIHNob3J0IGFkZHJlc3MgYXR0YWNrCiAgICAgICAgaWYobXNnLmRhdGEubGVuZ3RoIDwgKDMgKiAzMikgKyA0KSB7IHRocm93OyB9CgogICAgICAgIGlmIChfdmFsdWUgPT0gMCkgeyByZXR1cm4gZmFsc2U7IH0KICAgICAgICAKICAgICAgICB1aW50MjU2IGZyb21CYWxhbmNlID0gYmFsYW5jZXNbX2Zyb21dOwogICAgICAgIHVpbnQyNTYgYWxsb3dhbmNlID0gYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl07CgogICAgICAgIGJvb2wgc3VmZmljaWVudEZ1bmRzID0gZnJvbUJhbGFuY2UgPD0gX3ZhbHVlOwogICAgICAgIGJvb2wgc3VmZmljaWVudEFsbG93YW5jZSA9IGFsbG93YW5jZSA8PSBfdmFsdWU7CiAgICAgICAgYm9vbCBvdmVyZmxvd2VkID0gYmFsYW5jZXNbX3RvXSArIF92YWx1ZSA+IGJhbGFuY2VzW190b107CgogICAgICAgIGlmIChzdWZmaWNpZW50RnVuZHMgJiYgc3VmZmljaWVudEFsbG93YW5jZSAmJiAhb3ZlcmZsb3dlZCkgewogICAgICAgICAgICBiYWxhbmNlc1tfdG9dICs9IF92YWx1ZTsKICAgICAgICAgICAgYmFsYW5jZXNbX2Zyb21dIC09IF92YWx1ZTsKICAgICAgICAgICAgCiAgICAgICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdIC09IF92YWx1ZTsKICAgICAgICAgICAgCiAgICAgICAgICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0gZWxzZSB7IHJldHVybiBmYWxzZTsgfQogICAgfQogICAgCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICAvLyBtaXRpZ2F0ZXMgdGhlIEVSQzIwIHNwZW5kL2FwcHJvdmFsIHJhY2UgY29uZGl0aW9uCiAgICAgICAgaWYgKF92YWx1ZSAhPSAwICYmIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdICE9IDApIHsgcmV0dXJuIGZhbHNlOyB9CiAgICAgICAgCiAgICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CiAgICAgICAgCiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHJldHVybiBhbGxvd2VkW19vd25lcl1bX3NwZW5kZXJdOwogICAgfQoKICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7CgogICAgZnVuY3Rpb24gZW5hYmxlUHVyY2hhc2luZygpIHsKICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lcikgeyB0aHJvdzsgfQoKICAgICAgICBwdXJjaGFzaW5nQWxsb3dlZCA9IHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gZGlzYWJsZVB1cmNoYXNpbmcoKSB7CiAgICAgICAgaWYgKG1zZy5zZW5kZXIgIT0gb3duZXIpIHsgdGhyb3c7IH0KCiAgICAgICAgcHVyY2hhc2luZ0FsbG93ZWQgPSBmYWxzZTsKICAgIH0KCiAgICBmdW5jdGlvbiB3aXRoZHJhd0ZvcmVpZ25Ub2tlbnMoYWRkcmVzcyBfdG9rZW5Db250cmFjdCkgcmV0dXJucyAoYm9vbCkgewogICAgICAgIGlmIChtc2cuc2VuZGVyICE9IG93bmVyKSB7IHRocm93OyB9CgogICAgICAgIEZvcmVpZ25Ub2tlbiB0b2tlbiA9IEZvcmVpZ25Ub2tlbihfdG9rZW5Db250cmFjdCk7CgogICAgICAgIHVpbnQyNTYgYW1vdW50ID0gdG9rZW4uYmFsYW5jZU9mKGFkZHJlc3ModGhpcykpOwogICAgICAgIHJldHVybiB0b2tlbi50cmFuc2Zlcihvd25lciwgYW1vdW50KTsKICAgIH0KCiAgICBmdW5jdGlvbiBnZXRTdGF0cygpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYsIHVpbnQyNTYsIHVpbnQyNTYsIGJvb2wpIHsKICAgICAgICByZXR1cm4gKHRvdGFsQ29udHJpYnV0aW9uLCB0b3RhbFN1cHBseSwgdG90YWxCb251c1Rva2Vuc0lzc3VlZCwgcHVyY2hhc2luZ0FsbG93ZWQpOwogICAgfQoKICAgIGZ1bmN0aW9uKCkgcGF5YWJsZSB7CiAgICAgICAgaWYgKCFwdXJjaGFzaW5nQWxsb3dlZCkgeyB0aHJvdzsgfQogICAgICAgIAogICAgICAgIGlmIChtc2cudmFsdWUgPT0gMCkgeyByZXR1cm47IH0KCiAgICAgICAgb3duZXIudHJhbnNmZXIobXNnLnZhbHVlKTsKICAgICAgICB0b3RhbENvbnRyaWJ1dGlvbiArPSBtc2cudmFsdWU7CgogICAgICAgIHVpbnQyNTYgdG9rZW5zSXNzdWVkID0gKG1zZy52YWx1ZSAqIDEwMCk7CgogICAgICAgIGlmIChtc2cudmFsdWUgPj0gMTAgZmlubmV5KSB7CiAgICAgICAgICAgIHRva2Vuc0lzc3VlZCArPSB0b3RhbENvbnRyaWJ1dGlvbjsKCiAgICAgICAgICAgIGJ5dGVzMjAgYm9udXNIYXNoID0gcmlwZW1kMTYwKGJsb2NrLmNvaW5iYXNlLCBibG9jay5udW1iZXIsIGJsb2NrLnRpbWVzdGFtcCk7CiAgICAgICAgICAgIGlmIChib251c0hhc2hbMF0gPT0gMCkgewogICAgICAgICAgICAgICAgdWludDggYm9udXNNdWx0aXBsaWVyID0KICAgICAgICAgICAgICAgICAgICAoKGJvbnVzSGFzaFsxXSAmIDB4MDEgIT0gMCkgPyAxIDogMCkgKyAoKGJvbnVzSGFzaFsxXSAmIDB4MDIgIT0gMCkgPyAxIDogMCkgKwogICAgICAgICAgICAgICAgICAgICgoYm9udXNIYXNoWzFdICYgMHgwNCAhPSAwKSA/IDEgOiAwKSArICgoYm9udXNIYXNoWzFdICYgMHgwOCAhPSAwKSA/IDEgOiAwKSArCiAgICAgICAgICAgICAgICAgICAgKChib251c0hhc2hbMV0gJiAweDEwICE9IDApID8gMSA6IDApICsgKChib251c0hhc2hbMV0gJiAweDIwICE9IDApID8gMSA6IDApICsKICAgICAgICAgICAgICAgICAgICAoKGJvbnVzSGFzaFsxXSAmIDB4NDAgIT0gMCkgPyAxIDogMCkgKyAoKGJvbnVzSGFzaFsxXSAmIDB4ODAgIT0gMCkgPyAxIDogMCk7CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIHVpbnQyNTYgYm9udXNUb2tlbnNJc3N1ZWQgPSAobXNnLnZhbHVlICogMTAwKSAqIGJvbnVzTXVsdGlwbGllcjsKICAgICAgICAgICAgICAgIHRva2Vuc0lzc3VlZCArPSBib251c1Rva2Vuc0lzc3VlZDsKCiAgICAgICAgICAgICAgICB0b3RhbEJvbnVzVG9rZW5zSXNzdWVkICs9IGJvbnVzVG9rZW5zSXNzdWVkOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICB0b3RhbFN1cHBseSArPSB0b2tlbnNJc3N1ZWQ7CiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gKz0gdG9rZW5zSXNzdWVkOwogICAgICAgIAogICAgICAgIFRyYW5zZmVyKGFkZHJlc3ModGhpcyksIG1zZy5zZW5kZXIsIHRva2Vuc0lzc3VlZCk7CiAgICB9Cn0KY29udHJhY3QgRm9yZWlnblRva2VuIHsKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nik7CiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wpOwp9'.
	

]
