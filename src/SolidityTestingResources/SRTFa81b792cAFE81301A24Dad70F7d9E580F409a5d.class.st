Class {
	#name : #SRTFa81b792cAFE81301A24Dad70F7d9E580F409a5d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTFa81b792cAFE81301A24Dad70F7d9E580F409a5d >> base64 [
	^ ''.
	

]
