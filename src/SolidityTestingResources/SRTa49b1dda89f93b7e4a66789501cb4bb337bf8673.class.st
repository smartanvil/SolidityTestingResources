Class {
	#name : #SRTa49b1dda89f93b7e4a66789501cb4bb337bf8673,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTa49b1dda89f93b7e4a66789501cb4bb337bf8673 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7CgoKLyoqCiAqIEB0aXRsZSBTYWZlTWF0aAogKiBAZGV2IE1hdGggb3BlcmF0aW9ucyB3aXRoIHNhZmV0eSBjaGVja3MgdGhhdCB0aHJvdyBvbiBlcnJvcgogKi8KbGlicmFyeSBTYWZlTWF0aCB7CgogIC8qKgogICogQGRldiBNdWx0aXBsaWVzIHR3byBudW1iZXJzLCB0aHJvd3Mgb24gb3ZlcmZsb3cuCiAgKi8KICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgaWYgKGEgPT0gMCkgewogICAgICByZXR1cm4gMDsKICAgIH0KICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGMgLyBhID09IGIpOwogICAgcmV0dXJuIGM7CiAgfQoKICAvKioKICAqIEBkZXYgSW50ZWdlciBkaXZpc2lvbiBvZiB0d28gbnVtYmVycywgdHJ1bmNhdGluZyB0aGUgcXVvdGllbnQuCiAgKi8KICBmdW5jdGlvbiBkaXYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgLy8gYXNzZXJ0KGIgPiAwKTsgLy8gU29saWRpdHkgYXV0b21hdGljYWxseSB0aHJvd3Mgd2hlbiBkaXZpZGluZyBieSAwCiAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgIC8vIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOyAvLyBUaGVyZSBpcyBubyBjYXNlIGluIHdoaWNoIHRoaXMgZG9lc24ndCBob2xkCiAgICByZXR1cm4gYzsKICB9CgogIC8qKgogICogQGRldiBTdWJzdHJhY3RzIHR3byBudW1iZXJzLCB0aHJvd3Mgb24gb3ZlcmZsb3cgKGkuZS4gaWYgc3VidHJhaGVuZCBpcyBncmVhdGVyIHRoYW4gbWludWVuZCkuCiAgKi8KICBmdW5jdGlvbiBzdWIodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICAvKioKICAqIEBkZXYgQWRkcyB0d28gbnVtYmVycywgdGhyb3dzIG9uIG92ZXJmbG93LgogICovCiAgZnVuY3Rpb24gYWRkKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgYXNzZXJ0KGMgPj0gYSk7CiAgICByZXR1cm4gYzsKICB9Cn0KCgoKCi8qKgogKiBAdGl0bGUgT3duYWJsZQogKiBAZGV2IFRoZSBPd25hYmxlIGNvbnRyYWN0IGhhcyBhbiBvd25lciBhZGRyZXNzLCBhbmQgcHJvdmlkZXMgYmFzaWMgYXV0aG9yaXphdGlvbiBjb250cm9sCiAqIGZ1bmN0aW9ucywgdGhpcyBzaW1wbGlmaWVzIHRoZSBpbXBsZW1lbnRhdGlvbiBvZiAidXNlciBwZXJtaXNzaW9ucyIuCiAqLwpjb250cmFjdCBPd25hYmxlIHsKICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKCgogIGV2ZW50IE93bmVyc2hpcFRyYW5zZmVycmVkKGFkZHJlc3MgaW5kZXhlZCBwcmV2aW91c093bmVyLCBhZGRyZXNzIGluZGV4ZWQgbmV3T3duZXIpOwoKCiAgLyoqCiAgICogQGRldiBUaGUgT3duYWJsZSBjb25zdHJ1Y3RvciBzZXRzIHRoZSBvcmlnaW5hbCBgb3duZXJgIG9mIHRoZSBjb250cmFjdCB0byB0aGUgc2VuZGVyCiAgICogYWNjb3VudC4KICAgKi8KICBmdW5jdGlvbiBPd25hYmxlKCkgcHVibGljIHsKICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICB9CgogIC8qKgogICAqIEBkZXYgVGhyb3dzIGlmIGNhbGxlZCBieSBhbnkgYWNjb3VudCBvdGhlciB0aGFuIHRoZSBvd25lci4KICAgKi8KICBtb2RpZmllciBvbmx5T3duZXIoKSB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgXzsKICB9CgogIC8qKgogICAqIEBkZXYgQWxsb3dzIHRoZSBjdXJyZW50IG93bmVyIHRvIHRyYW5zZmVyIGNvbnRyb2wgb2YgdGhlIGNvbnRyYWN0IHRvIGEgbmV3T3duZXIuCiAgICogQHBhcmFtIG5ld093bmVyIFRoZSBhZGRyZXNzIHRvIHRyYW5zZmVyIG93bmVyc2hpcCB0by4KICAgKi8KICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld093bmVyKSBwdWJsaWMgb25seU93bmVyIHsKICAgIHJlcXVpcmUobmV3T3duZXIgIT0gYWRkcmVzcygwKSk7CiAgICBPd25lcnNoaXBUcmFuc2ZlcnJlZChvd25lciwgbmV3T3duZXIpOwogICAgb3duZXIgPSBuZXdPd25lcjsKICB9Cgp9CgoKCmNvbnRyYWN0IFdlbENvaW5JQ08gaXMgT3duYWJsZSB7CgogIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwoKICAvLyBzdGFydCBhbmQgZW5kIHRpbWVzdGFtcHMgd2hlcmUgbWFpbi1pbnZlc3RtZW50cyBhcmUgYWxsb3dlZCAoYm90aCBpbmNsdXNpdmUpCiAgdWludDI1NiBwdWJsaWMgbWFpblNhbGVTdGFydFRpbWU7CiAgdWludDI1NiBwdWJsaWMgbWFpblNhbGVFbmRUaW1lOwoKICAvLyBtYXhpbXVtIGFtb3V0IG9mIHdlaSBmb3IgIG1haW4gc2FsZQogIC8vdWludDI1NiBwdWJsaWMgbWFpblNhbGVXZWlDYXA7CgogIC8vIG1heGltdW0gYW1vdXQgb2Ygd2VpIHRvIGFsbG93IGZvciBpbnZlc3RvcnMKICB1aW50MjU2IHB1YmxpYyBtYWluU2FsZU1pbmltdW1XZWk7CgogIC8vIGFkZHJlc3Mgd2hlcmUgZnVuZHMgYXJlIGNvbGxlY3RlZAogIGFkZHJlc3MgcHVibGljIHdhbGxldDsKCiAgLy8gYWRkcmVzcyBvZiBlcmMyMCB0b2tlbiBjb250cmFjdAogIGFkZHJlc3MgcHVibGljIHRva2VuOwoKICAvLyBob3cgbWFueSB0b2tlbiB1bml0cyBhIGJ1eWVyIGdldHMgcGVyIHdlaQogIHVpbnQyNTYgcHVibGljIHJhdGU7CgogIC8vIGJvbnVzIHBlcmNlbnQgdG8gYXBwbHkKICB1aW50MjU2IHB1YmxpYyBwZXJjZW50OwoKICAvLyBhbW91bnQgb2YgcmFpc2VkIG1vbmV5IGluIHdlaQogIC8vdWludDI1NiBwdWJsaWMgd2VpUmFpc2VkOwoKICBldmVudCBUb2tlblB1cmNoYXNlKGFkZHJlc3MgaW5kZXhlZCBwdXJjaGFzZXIsIGFkZHJlc3MgaW5kZXhlZCBiZW5lZmljaWFyeSwgdWludDI1NiB2YWx1ZSwgdWludDI1NiBhbW91bnQpOwoKICBmdW5jdGlvbiBXZWxDb2luSUNPKHVpbnQyNTYgX21haW5TYWxlU3RhcnRUaW1lLCB1aW50MjU2IF9tYWluU2FsZUVuZFRpbWUsIGFkZHJlc3MgX3dhbGxldCwgYWRkcmVzcyBfdG9rZW4pIHB1YmxpYyB7CgogICAgLy8gdGhlIGVuZCBvZiBtYWluIHNhbGUgY2FuJ3QgaGFwcGVuIGJlZm9yZSBpdCdzIHN0YXJ0CiAgICByZXF1aXJlKF9tYWluU2FsZVN0YXJ0VGltZSA8IF9tYWluU2FsZUVuZFRpbWUpOwogICAgcmVxdWlyZShfd2FsbGV0ICE9IDB4MCk7CgogICAgbWFpblNhbGVTdGFydFRpbWUgPSBfbWFpblNhbGVTdGFydFRpbWU7CiAgICBtYWluU2FsZUVuZFRpbWUgPSBfbWFpblNhbGVFbmRUaW1lOwogICAgd2FsbGV0ID0gX3dhbGxldDsKICAgIHRva2VuID0gX3Rva2VuOwogICAgcmF0ZSA9IDI1MDA7CiAgICBwZXJjZW50ID0gMDsKICAgIG1haW5TYWxlTWluaW11bVdlaSA9IDEwMDAwMDAwMDAwMDAwMDAwMDsgLy8gMC4xCiAgfQoKICAvLyBmYWxsYmFjayBmdW5jdGlvbiBjYW4gYmUgdXNlZCB0byBidXkgdG9rZW5zCiAgZnVuY3Rpb24gKCkgZXh0ZXJuYWwgcGF5YWJsZSB7CiAgICBidXlUb2tlbnMobXNnLnNlbmRlcik7CiAgfQoKICAvLyBsb3cgbGV2ZWwgdG9rZW4gcHVyY2hhc2UgZnVuY3Rpb24KICBmdW5jdGlvbiBidXlUb2tlbnMoYWRkcmVzcyBiZW5lZmljaWFyeSkgcHVibGljIHBheWFibGUgewoKICAgIHJlcXVpcmUoYmVuZWZpY2lhcnkgIT0gMHgwKTsKICAgIHJlcXVpcmUobXNnLnZhbHVlICE9IDB4MCk7CiAgICByZXF1aXJlKG1zZy52YWx1ZSA+PSBtYWluU2FsZU1pbmltdW1XZWkpOwogICAgcmVxdWlyZShub3cgPj0gbWFpblNhbGVTdGFydFRpbWUgJiYgbm93IDw9IG1haW5TYWxlRW5kVGltZSk7CgogICAgdWludDI1NiB3ZWlBbW91bnQgPSBtc2cudmFsdWU7CgogICAgLy8gY2FsY3VsYXRlIHRva2VuIGFtb3VudCB0byBiZSBjcmVhdGVkCiAgICB1aW50MjU2IHRva2VucyA9IHdlaUFtb3VudC5tdWwocmF0ZSk7CgogICAgLy8gYWRkIGJvbnVzIHRvIHRva2VucyBkZXBlbmRzIG9uIHRoZSBwZXJpb2QKICAgIHVpbnQyNTYgYm9udXNlZFRva2VucyA9IGFwcGx5Qm9udXModG9rZW5zLCBwZXJjZW50KTsKCiAgICByZXF1aXJlKHRva2VuLmNhbGwoYnl0ZXM0KGtlY2NhazI1NigidHJhbnNmZXIoYWRkcmVzcyx1aW50MjU2KSIpKSwgYmVuZWZpY2lhcnksIGJvbnVzZWRUb2tlbnMpKTsKCiAgICAvLyB0b2tlbi5taW50KGJlbmVmaWNpYXJ5LCBib251c2VkVG9rZW5zKTsKICAgIFRva2VuUHVyY2hhc2UobXNnLnNlbmRlciwgYmVuZWZpY2lhcnksIHdlaUFtb3VudCwgYm9udXNlZFRva2Vucyk7CgogICAgZm9yd2FyZEZ1bmRzKCk7CiAgfQoKICAvLyBzZXQgbmV3IGRhdGVzIGZvciBtYWluLXNhbGUgKGVtZXJnZW5jeSBjYXNlKQogIGZ1bmN0aW9uIHNldE1haW5TYWxlUGFyYW1ldGVycyh1aW50MjU2IF9tYWluU2FsZVN0YXJ0VGltZSwgdWludDI1NiBfbWFpblNhbGVFbmRUaW1lLCB1aW50MjU2IF9tYWluU2FsZU1pbmltdW1XZWkpIHB1YmxpYyBvbmx5T3duZXIgewogICAgcmVxdWlyZShfbWFpblNhbGVTdGFydFRpbWUgPCBfbWFpblNhbGVFbmRUaW1lKTsKICAgIG1haW5TYWxlU3RhcnRUaW1lID0gX21haW5TYWxlU3RhcnRUaW1lOwogICAgbWFpblNhbGVFbmRUaW1lID0gX21haW5TYWxlRW5kVGltZTsKICAgIG1haW5TYWxlTWluaW11bVdlaSA9IF9tYWluU2FsZU1pbmltdW1XZWk7CiAgfQoKICAvLyBzZXQgbmV3IHdhbGxldHMgKGVtZXJnZW5jeSBjYXNlKQogIGZ1bmN0aW9uIHNldFdhbGxldChhZGRyZXNzIF93YWxsZXQpIHB1YmxpYyBvbmx5T3duZXIgewogICAgcmVxdWlyZShfd2FsbGV0ICE9IDB4MCk7CiAgICB3YWxsZXQgPSBfd2FsbGV0OwogIH0KCiAgICAvLyBzZXQgbmV3IHJhdGUgKGVtZXJnZW5jeSBjYXNlKQogIGZ1bmN0aW9uIHNldFJhdGUodWludDI1NiBfcmF0ZSkgcHVibGljIG9ubHlPd25lciB7CiAgICByZXF1aXJlKF9yYXRlID4gMCk7CiAgICByYXRlID0gX3JhdGU7CiAgfQoKICAvLyBzZW5kIHRva2VucyB0byBzcGVjaWZpZWQgd2FsbGV0IHdhbGxldAogIGZ1bmN0aW9uIHRyYW5zZmVyVG9rZW5zKGFkZHJlc3MgX3dhbGxldCwgdWludDI1NiBfYW1vdW50KSBwdWJsaWMgb25seU93bmVyIHsKICAgIHJlcXVpcmUoX3dhbGxldCAhPSAweDApOwogICAgcmVxdWlyZShfYW1vdW50ICE9IDApOwogICAgcmVxdWlyZSh0b2tlbi5jYWxsKGJ5dGVzNChrZWNjYWsyNTYoInRyYW5zZmVyKGFkZHJlc3MsdWludDI1NikiKSksIF93YWxsZXQsIF9hbW91bnQpKTsKICB9CgoKICAvLyBAcmV0dXJuIHRydWUgaWYgbWFpbiBzYWxlIGV2ZW50IGhhcyBlbmRlZAogIGZ1bmN0aW9uIG1haW5TYWxlSGFzRW5kZWQoKSBleHRlcm5hbCBjb25zdGFudCByZXR1cm5zIChib29sKSB7CiAgICByZXR1cm4gbm93ID4gbWFpblNhbGVFbmRUaW1lOwogIH0KCiAgLy8gc2VuZCBldGhlciB0byB0aGUgZnVuZCBjb2xsZWN0aW9uIHdhbGxldAogIGZ1bmN0aW9uIGZvcndhcmRGdW5kcygpIGludGVybmFsIHsKICAgIHdhbGxldC50cmFuc2Zlcihtc2cudmFsdWUpOwogIH0KCgogIGZ1bmN0aW9uIGFwcGx5Qm9udXModWludDI1NiB0b2tlbnMsIHVpbnQyNTYgcGVyY2VudFRvQXBwbHkpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NiBib251c2VkVG9rZW5zKSB7CiAgICB1aW50MjU2IHRva2Vuc1RvQWRkID0gdG9rZW5zLm11bChwZXJjZW50VG9BcHBseSkuZGl2KDEwMCk7CiAgICByZXR1cm4gdG9rZW5zLmFkZCh0b2tlbnNUb0FkZCk7CiAgfQoKfQ=='.
	

]
