Class {
	#name : #SRTA87D9fCe01D66b54E3351D94e25dd6032628CAaa,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTA87D9fCe01D66b54E3351D94e25dd6032628CAaa >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgovKioKICogQHRpdGxlIEVSQzIwQmFzaWMKICogQGRldiBTaW1wbGVyIHZlcnNpb24gb2YgRVJDMjAgaW50ZXJmYWNlCiAqIEBkZXYgc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8xNzkKICovCmNvbnRyYWN0IEVSQzIwQmFzaWMgewogIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5OwogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIHdobykgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nik7CiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyB0bywgdWludDI1NiB2YWx1ZSkgcmV0dXJucyAoYm9vbCk7CiAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiB2YWx1ZSk7Cn0KCi8qKgogKiBAdGl0bGUgRVJDMjAgaW50ZXJmYWNlCiAqIEBkZXYgc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8yMAogKi8KY29udHJhY3QgRVJDMjAgaXMgRVJDMjBCYXNpYyB7CiAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3Mgb3duZXIsIGFkZHJlc3Mgc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nik7CiAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgZnJvbSwgYWRkcmVzcyB0bywgdWludDI1NiB2YWx1ZSkgcmV0dXJucyAoYm9vbCk7CiAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIHNwZW5kZXIsIHVpbnQyNTYgdmFsdWUpIHJldHVybnMgKGJvb2wpOwogIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBvd25lciwgYWRkcmVzcyBpbmRleGVkIHNwZW5kZXIsIHVpbnQyNTYgdmFsdWUpOwp9CgovKioKICogQHRpdGxlIFNhZmVNYXRoCiAqIEBkZXYgTWF0aCBvcGVyYXRpb25zIHdpdGggc2FmZXR5IGNoZWNrcyB0aGF0IHRocm93IG9uIGVycm9yCiAqLwpsaWJyYXJ5IFNhZmVNYXRoIHsKCiAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhICogYjsKICAgIGFzc2VydChhID09IDAgfHwgYyAvIGEgPT0gYik7CiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIGRpdih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgLy8gYXNzZXJ0KGIgPiAwKTsgLy8gU29saWRpdHkgYXV0b21hdGljYWxseSB0aHJvd3Mgd2hlbiBkaXZpZGluZyBieSAwCiAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgIC8vIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOyAvLyBUaGVyZSBpcyBubyBjYXNlIGluIHdoaWNoIHRoaXMgZG9lc24ndCBob2xkCiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgYXNzZXJ0KGMgPj0gYSk7CiAgICByZXR1cm4gYzsKICB9Cgp9Cgpjb250cmFjdCBPd25lZCB7CiAgICAvKioKICAgICAqIENvbnRyYWN0IG93bmVyIGFkZHJlc3MKICAgICAqLwogICAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CgogICAgLyoqCiAgICAgKiBAZGV2IERlbGVnYXRlIGNvbnRyYWN0IHRvIGFub3RoZXIgcGVyc29uCiAgICAgKiBAcGFyYW0gX293bmVyIE5ldyBvd25lciBhZGRyZXNzCiAgICAgKi8KICAgIGZ1bmN0aW9uIHNldE93bmVyKGFkZHJlc3MgX293bmVyKSBvbmx5T3duZXIKICAgIHsgb3duZXIgPSBfb3duZXI7IH0KCiAgICAvKioKICAgICAqIEBkZXYgT3duZXIgY2hlY2sgbW9kaWZpZXIKICAgICAqLwogICAgbW9kaWZpZXIgb25seU93bmVyIHsgaWYgKG1zZy5zZW5kZXIgIT0gb3duZXIpIHRocm93OyBfOyB9Cn0KCgpjb250cmFjdCBSdXNnYXNDcm93ZHNhbGUgaXMgT3duZWQgewogICAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQ7CgogICAgZXZlbnQgUHJpbnQoc3RyaW5nIF9uYW1lLCB1aW50IF92YWx1ZSk7CgogICAgdWludCBwdWJsaWMgRVRIVVNEID0gNTAwMDA7IC8vaW4gY2VudAogICAgYWRkcmVzcyBtYW5hZ2VyOwogICAgYWRkcmVzcyBwdWJsaWMgbXVsdGlzaWc7CiAgICBhZGRyZXNzIHB1YmxpYyBhZGRyZXNzT2ZFUkMyMFRvY2tlbjsKICAgIEVSQzIwIHB1YmxpYyB0b2tlbjsKCiAgICB1aW50IHB1YmxpYyBzdGFydElDTyA9IDE1MjIxOTUyMDA7CiAgICB1aW50IHB1YmxpYyBlbmRJQ08gPSAxNTI4ODQ3OTk5OwogICAgCiAgICB1aW50IHB1YmxpYyBwaGFzZTFQcmljZSA9IDE2NjY2NjY2NjsKICAgIHVpbnQgcHVibGljIHBoYXNlMlByaWNlID0gMTI1MDAwMDAwOwogICAgdWludCBwdWJsaWMgcGhhc2UzUHJpY2UgPSAxMDAwMDAwMDA7CiAgICB1aW50IHB1YmxpYyBwaGFzZTRQcmljZSA9IDgzMzMzMzMzOwogICAgdWludCBwdWJsaWMgcGhhc2U1UHJpY2UgPSA2MjUwMDAwMDsKICAgIHVpbnQgcHVibGljIHBoYXNlNlByaWNlID0gNTU1NTU1NTU7CiAgICB1aW50IHB1YmxpYyBwaGFzZTdQcmljZSA9IDUwMDAwMDA7CiAgICB1aW50IHB1YmxpYyBwaGFzZThQcmljZSA9IDQwMDAwMDA7CiAgICB1aW50IHB1YmxpYyBwaGFzZTlQcmljZSA9IDMwMDAwMDA7CgoKICAgIGZ1bmN0aW9uIFJ1c2dhc0Nyb3dkc2FsZSgpey8vKGFkZHJlc3MgX2FkZHJlc3NPZkVSQzIwVG9ja2VuKXsKICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgICAgICAgbWFuYWdlciA9IG1zZy5zZW5kZXI7CiAgICAgICAgbXVsdGlzaWcgPSBtc2cuc2VuZGVyOwogICAgICAgIC8vdG9rZW4gPSBFUkMyMChhZGRyZXNzT2ZFUkMyMFRvY2tlbik7CiAgICAgICAgLy90b2tlbiA9IEVSQzIwKF9hZGRyZXNzT2ZFUkMyMFRvY2tlbik7CiAgICB9CgogICAgZnVuY3Rpb24gdG9rZW5CYWxhbmNlKCkgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHJldHVybiB0b2tlbi5iYWxhbmNlT2YoYWRkcmVzcyh0aGlzKSk7CiAgICB9CgogICAgLyogVGhlIHRva2VuIGFkZHJlc3MgaXMgc2V0IHdoZW4gdGhlIGNvbnRyYWN0IGlzIGRlcGxveWVkICovCiAgICBmdW5jdGlvbiBzZXRBZGRyZXNzT2ZFUkMyMFRvY2tlbihhZGRyZXNzIF9hZGRyZXNzT2ZFUkMyMFRvY2tlbikgb25seU93bmVyIHsKICAgICAgICBhZGRyZXNzT2ZFUkMyMFRvY2tlbiA9IF9hZGRyZXNzT2ZFUkMyMFRvY2tlbjsKICAgICAgICB0b2tlbiA9IEVSQzIwKGFkZHJlc3NPZkVSQzIwVG9ja2VuKTsKCiAgICB9CiAgICAvKiBFVEgvVVNEIHByaWNlICovCiAgICAgICAgZnVuY3Rpb24gc2V0RVRIVVNEKCB1aW50MjU2IF9uZXdQcmljZSApIG9ubHlPd25lciB7CiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG1hbmFnZXIpOwogICAgICAgIEVUSFVTRCA9IF9uZXdQcmljZTsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2ZlclRva2VuKGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSkgb25seU93bmVyIHJldHVybnMgKGJvb2wpIHsKICAgICAgICByZXR1cm4gdG9rZW4udHJhbnNmZXIoX3RvLCBfdmFsdWUpOwogICAgfQoKICAgIGZ1bmN0aW9uKCkgcGF5YWJsZSB7CiAgICAgICAgZG9QdXJjaGFzZSgpOwogICAgfQoKICAgIGZ1bmN0aW9uIGRvUHVyY2hhc2UoKSBwYXlhYmxlIHsKICAgICAgICByZXF1aXJlKG5vdyA+PSBzdGFydElDTyAmJiBub3cgPCBlbmRJQ08pOwoKICAgICAgICByZXF1aXJlKG1zZy52YWx1ZSA+IDApOwoKICAgICAgICB1aW50IHN1bSA9IG1zZy52YWx1ZTsKCiAgICAgICAgdWludCB0b2tlbnNBbW91bnQ7CgogICAgICAgIGlmKG5vdyA8IHN0YXJ0SUNPICsgKDIxIGRheXMpKSB7CiAgICAgICAgICAgIHRva2Vuc0Ftb3VudCA9IHN1bS5tdWwoRVRIVVNEKS5tdWwocGhhc2UxUHJpY2UpLmRpdigxMDAwMDAwMDAwMDAwMDAwMDAwKTsvLy5tdWwodG9rZW4uZGVjaW1hbHMpOwogICAgICAgIH0gZWxzZSBpZihub3cgPiBzdGFydElDTyArICgyMSBkYXlzKSAmJiBub3cgPCBzdGFydElDTyArICgyOCBkYXlzKSkgewogICAgICAgICAgICB0b2tlbnNBbW91bnQgPSBzdW0ubXVsKEVUSFVTRCkubXVsKHBoYXNlMlByaWNlKS5kaXYoMTAwMDAwMDAwMDAwMDAwMDAwMCk7Ly8ubXVsKHRva2VuLmRlY2ltYWxzKTsKICAgICAgICB9IGVsc2UgaWYobm93ID4gc3RhcnRJQ08gKyAoMjggZGF5cykgJiYgbm93IDwgc3RhcnRJQ08gKyAoMzUgZGF5cykpIHsKICAgICAgICAgICAgdG9rZW5zQW1vdW50ID0gc3VtLm11bChFVEhVU0QpLm11bChwaGFzZTNQcmljZSkuZGl2KDEwMDAwMDAwMDAwMDAwMDAwMDApOy8vLm11bCh0b2tlbi5kZWNpbWFscyk7CiAgICAgICAgfWVsc2UgaWYobm93ID4gc3RhcnRJQ08gKyAoMzUgZGF5cykgJiYgbm93IDwgc3RhcnRJQ08gKyAoNDIgZGF5cykpIHsKICAgICAgICAgICAgdG9rZW5zQW1vdW50ID0gc3VtLm11bChFVEhVU0QpLm11bChwaGFzZTRQcmljZSkuZGl2KDEwMDAwMDAwMDAwMDAwMDAwMDApOy8vLm11bCh0b2tlbi5kZWNpbWFscyk7CiAgICAgICAgfWVsc2UgaWYobm93ID4gc3RhcnRJQ08gKyAoNDIgZGF5cykgJiYgbm93IDwgc3RhcnRJQ08gKyAoNDkgZGF5cykpIHsKICAgICAgICAgICAgdG9rZW5zQW1vdW50ID0gc3VtLm11bChFVEhVU0QpLm11bChwaGFzZTVQcmljZSkuZGl2KDEwMDAwMDAwMDAwMDAwMDAwMDApOy8vLm11bCh0b2tlbi5kZWNpbWFscyk7CiAgICAgICAgfWVsc2UgaWYobm93ID4gc3RhcnRJQ08gKyAoNDkgZGF5cykgJiYgbm93IDwgc3RhcnRJQ08gKyAoNTYgZGF5cykpIHsKICAgICAgICAgICAgdG9rZW5zQW1vdW50ID0gc3VtLm11bChFVEhVU0QpLm11bChwaGFzZTZQcmljZSkuZGl2KDEwMDAwMDAwMDAwMDAwMDAwMDApOy8vLm11bCh0b2tlbi5kZWNpbWFscyk7CiAgICAgICAgfWVsc2UgaWYobm93ID4gc3RhcnRJQ08gKyAoNTYgZGF5cykgJiYgbm93IDwgc3RhcnRJQ08gKyAoNjMgZGF5cykpIHsKICAgICAgICAgICAgdG9rZW5zQW1vdW50ID0gc3VtLm11bChFVEhVU0QpLm11bChwaGFzZTdQcmljZSkuZGl2KDEwMDAwMDAwMDAwMDAwMDAwMDApOy8vLm11bCh0b2tlbi5kZWNpbWFscyk7CiAgICAgICAgfWVsc2UgaWYobm93ID4gc3RhcnRJQ08gKyAoNjMgZGF5cykgJiYgbm93IDwgc3RhcnRJQ08gKyAoNzAgZGF5cykpIHsKICAgICAgICAgICAgdG9rZW5zQW1vdW50ID0gc3VtLm11bChFVEhVU0QpLm11bChwaGFzZThQcmljZSkuZGl2KDEwMDAwMDAwMDAwMDAwMDAwMDApOy8vLm11bCh0b2tlbi5kZWNpbWFscyk7CiAgICAgICAgfQogICAgICAgIGVsc2UKICAgICAgICB7CiAgICAgICAgICAgIHRva2Vuc0Ftb3VudCA9IHN1bS5tdWwoRVRIVVNEKS5tdWwocGhhc2U5UHJpY2UpLmRpdigxMDAwMDAwMDAwMDAwMDAwMDAwKTsKICAgICAgICB9CgogICAgICAgIGlmKHRva2VuQmFsYW5jZSgpID4gdG9rZW5zQW1vdW50KXsKICAgICAgICAgICAgcmVxdWlyZSh0b2tlbi50cmFuc2Zlcihtc2cuc2VuZGVyLCB0b2tlbnNBbW91bnQpKTsKICAgICAgICAgICAgbXVsdGlzaWcudHJhbnNmZXIobXNnLnZhbHVlKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBtYW5hZ2VyLnRyYW5zZmVyKG1zZy52YWx1ZSk7CiAgICAgICAgfQogICAgfQp9'.
	

]
