Class {
	#name : #SRTed9d813c4a82a9d76eba8ea666a7a0ab95f7bb29,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTed9d813c4a82a9d76eba8ea666a7a0ab95f7bb29 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTM7CgovKioKICogQHRpdGxlIFNhZmVNYXRoCiAqIEBkZXYgTWF0aCBvcGVyYXRpb25zIHdpdGggc2FmZXR5IGNoZWNrcyB0aGF0IHRocm93IG9uIGVycm9yCiAqLwpsaWJyYXJ5IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAKICAgIHVpbnQyNTYgYyA9IGEgLyBiOwogICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KfQoKLyoqCiAqIEB0aXRsZSBPd25hYmxlCiAqIEBkZXYgVGhlIE93bmFibGUgY29udHJhY3QgaGFzIGFuIG93bmVyIGFkZHJlc3MsIGFuZCBwcm92aWRlcyBiYXNpYyBhdXRob3JpemF0aW9uIGNvbnRyb2wKICogZnVuY3Rpb25zLCB0aGlzIHNpbXBsaWZpZXMgdGhlIGltcGxlbWVudGF0aW9uIG9mICJ1c2VyIHBlcm1pc3Npb25zIi4KICovCmNvbnRyYWN0IE93bmFibGUgewogIGFkZHJlc3MgcHVibGljIG93bmVyOwoKCiAgZXZlbnQgT3duZXJzaGlwVHJhbnNmZXJyZWQoYWRkcmVzcyBpbmRleGVkIHByZXZpb3VzT3duZXIsIGFkZHJlc3MgaW5kZXhlZCBuZXdPd25lcik7CgoKICAvKioKICAgKiBAZGV2IFRoZSBPd25hYmxlIGNvbnN0cnVjdG9yIHNldHMgdGhlIG9yaWdpbmFsIGBvd25lcmAgb2YgdGhlIGNvbnRyYWN0IHRvIHRoZSBzZW5kZXIKICAgKiBhY2NvdW50LgogICAqLwogIGZ1bmN0aW9uIE93bmFibGUoKSB7CiAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgfQoKCiAgLyoqCiAgICogQGRldiBUaHJvd3MgaWYgY2FsbGVkIGJ5IGFueSBhY2NvdW50IG90aGVyIHRoYW4gdGhlIG93bmVyLgogICAqLwogIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICBfOwogIH0KCgogIC8qKgogICAqIEBkZXYgQWxsb3dzIHRoZSBjdXJyZW50IG93bmVyIHRvIHRyYW5zZmVyIGNvbnRyb2wgb2YgdGhlIGNvbnRyYWN0IHRvIGEgbmV3T3duZXIuCiAgICogQHBhcmFtIG5ld093bmVyIFRoZSBhZGRyZXNzIHRvIHRyYW5zZmVyIG93bmVyc2hpcCB0by4KICAgKi8KICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld093bmVyKSBvbmx5T3duZXIgcHVibGljIHsKICAgIHJlcXVpcmUobmV3T3duZXIgIT0gYWRkcmVzcygwKSk7CiAgICBPd25lcnNoaXBUcmFuc2ZlcnJlZChvd25lciwgbmV3T3duZXIpOwogICAgb3duZXIgPSBuZXdPd25lcjsKICB9Cgp9Cgpjb250cmFjdCBBYnN0cmFjdFN0YXJiYXNlVG9rZW4gewogICAgZnVuY3Rpb24gaXNGdW5kcmFpc2VyKGFkZHJlc3MgZnVuZHJhaXNlckFkZHJlc3MpIHB1YmxpYyByZXR1cm5zIChib29sKTsKICAgIGZ1bmN0aW9uIGNvbXBhbnkoKSBwdWJsaWMgcmV0dXJucyAoYWRkcmVzcyk7CiAgICBmdW5jdGlvbiBhbGxvY2F0ZVRvQ3Jvd2RzYWxlUHVyY2hhc2VyKGFkZHJlc3MgdG8sIHVpbnQyNTYgdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKTsKICAgIGZ1bmN0aW9uIGFsbG9jYXRlVG9NYXJrZXRpbmdTdXBwb3J0ZXIoYWRkcmVzcyB0bywgdWludDI1NiB2YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpOwp9CgovKioKICogQHRpdGxlIENyb3dkc2FsZSBjb250cmFjdCAtIFN0YXJiYXNlIG1hcmtldGluZyBjYW1wYWlnbiBjb250cmFjdCB0byByZXdhcmQgc3VwcG9ydG9ycwogKiBAYXV0aG9yIFN0YXJiYXNlIFBURS4gTFRELiAtIDw8c3BhbiBjbGFzcz0iX19jZl9lbWFpbF9fIiBkYXRhLWNmZW1haWw9IjAzNmE2ZDY1NmM0MzcwNzc2MjcxNjE2MjcwNjYyZDYwNmMiPltlbWFpbCYjMTYwO3Byb3RlY3RlZF08L3NwYW4+PgogKi8KY29udHJhY3QgU3RhcmJhc2VNYXJrZXRpbmdDYW1wYWlnbiBpcyBPd25hYmxlIHsKICAgIC8qCiAgICAgKiAgRXZlbnRzCiAgICAgKi8KICAgIGV2ZW50IE5ld0NvbnRyaWJ1dG9yIChhZGRyZXNzIGluZGV4ZWQgY29udHJpYnV0b3JBZGRyZXNzLCB1aW50MjU2IHRva2VuQ291bnQpOwogICAgZXZlbnQgV2l0aGRyYXdDb250cmlidXRvcnNUb2tlbihhZGRyZXNzIGluZGV4ZWQgY29udHJpYnV0b3JBZGRyZXNzLCB1aW50MjU2IHRva2VuV2l0aGRyYXduKTsKCiAgICAvKioKICAgICAqICBFeHRlcm5hbCBjb250cmFjdHMKICAgICAqLwogICAgQWJzdHJhY3RTdGFyYmFzZVRva2VuIHB1YmxpYyBzdGFyYmFzZVRva2VuOwoKICAgIC8qKgogICAgICogVHlwZXMKICAgICAqLwogICAgc3RydWN0IENvbnRyaWJ1dG9yIHsKICAgICAgICB1aW50MjU2IHJld2FyZGVkVG9rZW5zOwogICAgICAgIG1hcHBpbmcgKGJ5dGVzMzIgPT4gYm9vbCkgY29udHJpYnV0aW9uczsgIC8vIGV4YW1wbGU6IGtlY2NhazI1NihiY20teGRhOThzZGYpID0+IHRydWUKICAgICAgICBib29sIGlzQ29udHJpYnV0b3I7CiAgICB9CgogICAgLyoqCiAgICAgKiAgU3RvcmFnZQogICAgICovCiAgICBhZGRyZXNzW10gcHVibGljIGNvbnRyaWJ1dG9yczsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gQ29udHJpYnV0b3IpIHB1YmxpYyBjb250cmlidXRvcjsKCiAgICAvKioKICAgICAqICBGdW5jdGlvbnMKICAgICAqLwoKICAgIC8qKgogICAgICogQGRldiBDb250cmFjdCBjb25zdHJ1Y3RvciBzZXRzIG93bmVyIGFkZHJlc3MuCiAgICAgKi8KICAgIGZ1bmN0aW9uIFN0YXJiYXNlTWFya2V0aW5nQ2FtcGFpZ24oKSB7CiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgfQoKICAgIC8qCiAgICAgKiAgRXh0ZXJuYWwgRnVuY3Rpb25zCiAgICAgKi8KCiAgICAvKioKICAgICAqIEBkZXYgU2V0dXAgZnVuY3Rpb24gc2V0cyBleHRlcm5hbCBjb250cmFjdHMnIGFkZHJlc3Nlcy4KICAgICAqIEBwYXJhbSBzdGFyYmFzZVRva2VuQWRkcmVzcyBUb2tlbiBhZGRyZXNzLgogICAgICovCiAgICBmdW5jdGlvbiBzZXR1cChhZGRyZXNzIHN0YXJiYXNlVG9rZW5BZGRyZXNzKQogICAgICAgIGV4dGVybmFsCiAgICAgICAgb25seU93bmVyCiAgICAgICAgcmV0dXJucyAoYm9vbCkKICAgIHsKICAgICAgICBhc3NlcnQoYWRkcmVzcyhzdGFyYmFzZVRva2VuKSA9PSAwKTsKICAgICAgICBzdGFyYmFzZVRva2VuID0gQWJzdHJhY3RTdGFyYmFzZVRva2VuKHN0YXJiYXNlVG9rZW5BZGRyZXNzKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICAvKioKICAgICAqIEBkZXYgQWxsb3dzIGZvciBtYXJrZXRpbmcgY29udHJpYnV0b3IncyByZXdhcmQgYWRkaW5nIGFuZCB3aXRoZHJhd2wKICAgICAqIEBwYXJhbSBjb250cmlidXRvckFkZHJlc3MgVGhlIGFkZHJlc3Mgb2YgdGhlIGNvbnRyaWJ1dG9yCiAgICAgKiBAcGFyYW0gdG9rZW5Db3VudCBUb2tlbiBudW1iZXIgdG8gYXdhcmRlZCBhbmQgdG8gYmUgd2l0aGRyYXduCiAgICAgKiBAcGFyYW0gY29udHJpYnV0aW9uSWQgSWQgb2YgY29udHJpYnV0aW9uIGZyb20gYm91bnR5IGFwcCBkYgogICAgICovCiAgICBmdW5jdGlvbiBkZWxpdmVyUmV3YXJkZWRUb2tlbnMoCiAgICAgICAgYWRkcmVzcyBjb250cmlidXRvckFkZHJlc3MsCiAgICAgICAgdWludDI1NiB0b2tlbkNvdW50LAogICAgICAgIHN0cmluZyBjb250cmlidXRpb25JZAogICAgKQogICAgICAgIGV4dGVybmFsCiAgICAgICAgb25seU93bmVyCiAgICAgICAgcmV0dXJucyhib29sKQogICAgewoKICAgICAgICBieXRlczMyIGlkID0ga2VjY2FrMjU2KGNvbnRyaWJ1dGlvbklkKTsKCiAgICAgICAgYXNzZXJ0KCFjb250cmlidXRvcltjb250cmlidXRvckFkZHJlc3NdLmNvbnRyaWJ1dGlvbnNbaWRdKTsKICAgICAgICBjb250cmlidXRvcltjb250cmlidXRvckFkZHJlc3NdLmNvbnRyaWJ1dGlvbnNbaWRdID0gdHJ1ZTsKCiAgICAgICAgY29udHJpYnV0b3JbY29udHJpYnV0b3JBZGRyZXNzXS5yZXdhcmRlZFRva2VucyA9IFNhZmVNYXRoLmFkZChjb250cmlidXRvcltjb250cmlidXRvckFkZHJlc3NdLnJld2FyZGVkVG9rZW5zLCB0b2tlbkNvdW50KTsKCiAgICAgICAgaWYgKCFjb250cmlidXRvcltjb250cmlidXRvckFkZHJlc3NdLmlzQ29udHJpYnV0b3IpIHsKICAgICAgICAgICAgY29udHJpYnV0b3JbY29udHJpYnV0b3JBZGRyZXNzXS5pc0NvbnRyaWJ1dG9yID0gdHJ1ZTsKICAgICAgICAgICAgY29udHJpYnV0b3JzLnB1c2goY29udHJpYnV0b3JBZGRyZXNzKTsKICAgICAgICAgICAgTmV3Q29udHJpYnV0b3IoY29udHJpYnV0b3JBZGRyZXNzLCB0b2tlbkNvdW50KTsKICAgICAgICB9CgogICAgICAgIHN0YXJiYXNlVG9rZW4uYWxsb2NhdGVUb01hcmtldGluZ1N1cHBvcnRlcihjb250cmlidXRvckFkZHJlc3MsIHRva2VuQ291bnQpOwogICAgICAgIFdpdGhkcmF3Q29udHJpYnV0b3JzVG9rZW4oY29udHJpYnV0b3JBZGRyZXNzLCB0b2tlbkNvdW50KTsKCiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgoKICAgIC8qKgogICAgICogIFB1YmxpYyBGdW5jdGlvbnMKICAgICAqLwoKICAgIC8qKgogICAgICogQGRldiBJbmZvcm1zIGFib3V0IGNvbnRyaWJ1dG9ycyByZXdhcmRlZFRva2VucyBhbmQgdHJhbnNmZXJyZWRSZXdhcmRUb2tlbnMgc3RhdHVzCiAgICAgKiBAcGFyYW0gY29udHJpYnV0b3JBZGRyZXNzIEEgY29udHJpYnV0b3IncyBhZGRyZXNzCiAgICAgKiBAcGFyYW0gY29udHJpYnV0aW9uSWQgSWQgb2YgY29udHJpYnV0aW9uIGZyb20gYm91bnR5IGFwcCBkYgogICAgICovCiAgICBmdW5jdGlvbiBnZXRDb250cmlidXRvckluZm8oYWRkcmVzcyBjb250cmlidXRvckFkZHJlc3MsIHN0cmluZyBjb250cmlidXRpb25JZCkKICAgICAgICBjb25zdGFudAogICAgICAgIHB1YmxpYwogICAgICAgIHJldHVybnMgKHVpbnQyNTYsIGJvb2wsIGJvb2wpCiAgICB7CiAgICAgICAgYnl0ZXMzMiBpZCA9IGtlY2NhazI1Nihjb250cmlidXRpb25JZCk7CgogICAgICAgIHJldHVybigKICAgICAgICAgIGNvbnRyaWJ1dG9yW2NvbnRyaWJ1dG9yQWRkcmVzc10ucmV3YXJkZWRUb2tlbnMsCiAgICAgICAgICBjb250cmlidXRvcltjb250cmlidXRvckFkZHJlc3NdLmNvbnRyaWJ1dGlvbnNbaWRdLAogICAgICAgICAgY29udHJpYnV0b3JbY29udHJpYnV0b3JBZGRyZXNzXS5pc0NvbnRyaWJ1dG9yCiAgICAgICAgKTsKICAgIH0KCiAgICAvKioKICAgICAqIEBkZXYgUmV0dXJucyBudW1iZXIgb2YgY29udHJpYnV0b3JzLgogICAgICovCiAgICBmdW5jdGlvbiBudW1iZXJPZkNvbnRyaWJ1dG9ycygpCiAgICAgICAgY29uc3RhbnQKICAgICAgICBwdWJsaWMKICAgICAgICByZXR1cm5zICh1aW50MjU2KQogICAgewogICAgICAgIHJldHVybiBjb250cmlidXRvcnMubGVuZ3RoOwogICAgfQp9'.
	

]
