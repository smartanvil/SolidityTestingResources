Class {
	#name : #SRTd48E165b0027E8055B3B7016A35078b23527a95d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTd48E165b0027E8055B3B7016A35078b23527a95d >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMjsKCgpjb250cmFjdCBvd25lZCB7CglhZGRyZXNzIHB1YmxpYyBvd25lcjsKCWFkZHJlc3MgcHVibGljIHNlcnZlcjsKCglmdW5jdGlvbiBvd25lZCgpIHsKCQlvd25lciA9IG1zZy5zZW5kZXI7CgkJc2VydmVyID0gbXNnLnNlbmRlcjsKCX0KCglmdW5jdGlvbiBjaGFuZ2VPd25lcihhZGRyZXNzIG5ld093bmVyKSBvbmx5T3duZXIgewoJCW93bmVyID0gbmV3T3duZXI7Cgl9CgoJZnVuY3Rpb24gY2hhbmdlU2VydmVyKGFkZHJlc3MgbmV3U2VydmVyKSBvbmx5T3duZXIgewoJCXNlcnZlciA9IG5ld1NlcnZlcjsKCX0KCgltb2RpZmllciBvbmx5T3duZXIgewoJCXJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CgkJXzsKCX0KCgltb2RpZmllciBvbmx5U2VydmVyIHsKCQlyZXF1aXJlKG1zZy5zZW5kZXIgPT0gc2VydmVyKTsKCQlfOwoJfQp9CgoKY29udHJhY3QgdG9rZW5SZWNpcGllbnQge2Z1bmN0aW9uIHJlY2VpdmVBcHByb3ZhbChhZGRyZXNzIF9mcm9tLCB1aW50MjU2IF92YWx1ZSwgYWRkcmVzcyBfdG9rZW4sIGJ5dGVzIF9leHRyYURhdGEpO30KCgpjb250cmFjdCBDU1Rva2VuIGlzIG93bmVkIHt1aW50OCBwdWJsaWMgZGVjaW1hbHM7CgoJdWludFtdIHB1YmxpYyBhZ2luZ1RpbWVzOwoKCWFkZHJlc3NbXSBwdWJsaWMgYWRkcmVzc0J5SW5kZXg7CgoJZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpOwoKCWZ1bmN0aW9uIG1pbnRUb2tlbihhZGRyZXNzIHRhcmdldCwgdWludDI1NiBtaW50ZWRBbW91bnQsIHVpbnQgYWdpbmdUaW1lKTsKCglmdW5jdGlvbiBhZGRBZ2luZ1RpbWUodWludCB0aW1lKTsKCglmdW5jdGlvbiBhbGxBZ2luZ1RpbWVzQWRkZWQoKTsKCglmdW5jdGlvbiBhZGRBZ2luZ1RpbWVzRm9yUG9vbChhZGRyZXNzIHBvb2xBZGRyZXNzLCB1aW50IGFnaW5nVGltZSk7CgoJZnVuY3Rpb24gY291bnRBZGRyZXNzZXMoKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGxlbmd0aCk7Cn0KCgpjb250cmFjdCBLaWNraWNvQ3Jvd2RzYWxlIGlzIG93bmVkIHsKCXVpbnRbXSBwdWJsaWMgSWNvU3RhZ2VQZXJpb2Q7CgoJYm9vbCBwdWJsaWMgSWNvQ2xvc2VkTWFudWFsbHkgPSBmYWxzZTsKCgl1aW50IHB1YmxpYyB0aHJlc2hvbGQgPSAyMDAwMDAgZXRoZXI7Cgl1aW50IHB1YmxpYyBnb2FsID0gNTAwMDAgZXRoZXI7CgoJdWludCBwdWJsaWMgdG90YWxDb2xsZWN0ZWQgPSAwOwoKCXVpbnQgcHVibGljIHByaWNlUGVyVG9rZW5JbldlaSA9IDMzMzMzMzM7CgoJdWludCBwdWJsaWMgYWdpbmdUaW1lID0gMTUzOTU5NDAwMDsKCgl1aW50IHByUG9vbEFnaW5nVGltZSA9IDE1MTMyNDIwMDA7CgoJdWludCBhZHZpc29yeVBvb2xBZ2luZ1RpbWUgPSAxNTM1NTMzMjAwOwoKCXVpbnQgYm91bnRpZXNQb29sQWdpbmdUaW1lID0gMTUxMDczNjQwMDsKCgl1aW50IGxvdHRlcnlQb29sQWdpbmdUaW1lID0gMTUxMjExODgwMDsKCgl1aW50IGFuZ2VsSW52ZXN0b3JzUG9vbEFnaW5nVGltZSA9IDE1MDY4NDg0MDA7CgoJdWludCBmb3VuZGVyc1Bvb2xBZ2luZ1RpbWUgPSAxNTM1NTMzMjAwOwoKCXVpbnQgY2hpbmFQb29sQWdpbmdUaW1lID0gMTUwOTUyNjgwMDsKCgl1aW50W10gcHVibGljIGJvbnVzZXM7CgoJdWludFtdIHB1YmxpYyBib251c2VzQWZ0ZXJDbG9zZTsKCglhZGRyZXNzIHB1YmxpYyBwclBvb2w7CgoJYWRkcmVzcyBwdWJsaWMgZm91bmRlcnM7CgoJYWRkcmVzcyBwdWJsaWMgYWR2aXNvcnk7CgoJYWRkcmVzcyBwdWJsaWMgYm91bnRpZXM7CgoJYWRkcmVzcyBwdWJsaWMgbG90dGVyeTsKCglhZGRyZXNzIHB1YmxpYyBhbmdlbEludmVzdG9yczsKCglhZGRyZXNzIHB1YmxpYyBjaGluYTsKCgl1aW50IHRva2VuTXVsdGlwbGllciA9IDEwOwoKCUNTVG9rZW4gcHVibGljIHRva2VuUmV3YXJkOwoJQ1NUb2tlbiBwdWJsaWMgb2xkVG9rZW5SZXdhcmQ7CgoJbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBwdWJsaWMgYmFsYW5jZU9mOwoKCWV2ZW50IEZ1bmRUcmFuc2ZlcihhZGRyZXNzIGJhY2tlciwgdWludCBhbW91bnQsIGJvb2wgaXNDb250cmlidXRpb24pOwoKCWJvb2wgcGFyYW1ldGVyc0hhdmVCZWVuU2V0ID0gZmFsc2U7CgoJZnVuY3Rpb24gS2lja2ljb0Nyb3dkc2FsZShhZGRyZXNzIF90b2tlbkFkZHJlc3MsIGFkZHJlc3MgX3ByUG9vbCwgYWRkcmVzcyBfZm91bmRlcnMsIGFkZHJlc3MgX2Fkdmlzb3J5LCBhZGRyZXNzIF9ib3VudGllcywgYWRkcmVzcyBfbG90dGVyeSwgYWRkcmVzcyBfYW5nZWxJbnZlc3RvcnMsIGFkZHJlc3MgX2NoaW5hLCBhZGRyZXNzIF9vbGRUb2tlbkFkZHJlc3MpIHsKCQl0b2tlblJld2FyZCA9IENTVG9rZW4oX3Rva2VuQWRkcmVzcyk7CgkJb2xkVG9rZW5SZXdhcmQgPSBDU1Rva2VuKF9vbGRUb2tlbkFkZHJlc3MpOwoKCQl0b2tlbk11bHRpcGxpZXIgPSB0b2tlbk11bHRpcGxpZXIgKiogdG9rZW5SZXdhcmQuZGVjaW1hbHMoKTsKCgkJLy8gYmluZCBwb29scwoJCXByUG9vbCA9IF9wclBvb2w7CgkJZm91bmRlcnMgPSBfZm91bmRlcnM7CgkJYWR2aXNvcnkgPSBfYWR2aXNvcnk7CgkJYm91bnRpZXMgPSBfYm91bnRpZXM7CgkJbG90dGVyeSA9IF9sb3R0ZXJ5OwoJCWFuZ2VsSW52ZXN0b3JzID0gX2FuZ2VsSW52ZXN0b3JzOwoJCWNoaW5hID0gX2NoaW5hOwoJfQoKCWZ1bmN0aW9uIHNldFBhcmFtcygpIG9ubHlPd25lciB7CgkJcmVxdWlyZSghcGFyYW1ldGVyc0hhdmVCZWVuU2V0KTsKCgkJcGFyYW1ldGVyc0hhdmVCZWVuU2V0ID0gdHJ1ZTsKCgkJdG9rZW5SZXdhcmQuYWRkQWdpbmdUaW1lc0ZvclBvb2wocHJQb29sLCBwclBvb2xBZ2luZ1RpbWUpOwoJCXRva2VuUmV3YXJkLmFkZEFnaW5nVGltZXNGb3JQb29sKGFkdmlzb3J5LCBhZHZpc29yeVBvb2xBZ2luZ1RpbWUpOwoJCXRva2VuUmV3YXJkLmFkZEFnaW5nVGltZXNGb3JQb29sKGJvdW50aWVzLCBib3VudGllc1Bvb2xBZ2luZ1RpbWUpOwoJCXRva2VuUmV3YXJkLmFkZEFnaW5nVGltZXNGb3JQb29sKGxvdHRlcnksIGxvdHRlcnlQb29sQWdpbmdUaW1lKTsKCQl0b2tlblJld2FyZC5hZGRBZ2luZ1RpbWVzRm9yUG9vbChhbmdlbEludmVzdG9ycywgYW5nZWxJbnZlc3RvcnNQb29sQWdpbmdUaW1lKTsKCgkJLy8gbWludCB0byBwb29scwoJCXRva2VuUmV3YXJkLm1pbnRUb2tlbihhZHZpc29yeSwgMTAwMDAwMDAgKiB0b2tlbk11bHRpcGxpZXIsIDApOwoJCXRva2VuUmV3YXJkLm1pbnRUb2tlbihib3VudGllcywgMjUwMDAwMDAgKiB0b2tlbk11bHRpcGxpZXIsIDApOwoJCXRva2VuUmV3YXJkLm1pbnRUb2tlbihsb3R0ZXJ5LCAxMDAwMDAwICogdG9rZW5NdWx0aXBsaWVyLCAwKTsKCQl0b2tlblJld2FyZC5taW50VG9rZW4oYW5nZWxJbnZlc3RvcnMsIDMwMDAwMDAwICogdG9rZW5NdWx0aXBsaWVyLCAwKTsKCQl0b2tlblJld2FyZC5taW50VG9rZW4ocHJQb29sLCAyMzAwMDAwMCAqIHRva2VuTXVsdGlwbGllciwgMCk7CgkJdG9rZW5SZXdhcmQubWludFRva2VuKGNoaW5hLCA4MDAwMDAwICogdG9rZW5NdWx0aXBsaWVyLCAwKTsKCgkJdG9rZW5SZXdhcmQuYWRkQWdpbmdUaW1lKGFnaW5nVGltZSk7CgkJdG9rZW5SZXdhcmQuYWRkQWdpbmdUaW1lKHByUG9vbEFnaW5nVGltZSk7CgkJdG9rZW5SZXdhcmQuYWRkQWdpbmdUaW1lKGFkdmlzb3J5UG9vbEFnaW5nVGltZSk7CgkJdG9rZW5SZXdhcmQuYWRkQWdpbmdUaW1lKGJvdW50aWVzUG9vbEFnaW5nVGltZSk7CgkJdG9rZW5SZXdhcmQuYWRkQWdpbmdUaW1lKGxvdHRlcnlQb29sQWdpbmdUaW1lKTsKCQl0b2tlblJld2FyZC5hZGRBZ2luZ1RpbWUoYW5nZWxJbnZlc3RvcnNQb29sQWdpbmdUaW1lKTsKCQl0b2tlblJld2FyZC5hZGRBZ2luZ1RpbWUoZm91bmRlcnNQb29sQWdpbmdUaW1lKTsKCQl0b2tlblJld2FyZC5hZGRBZ2luZ1RpbWUoY2hpbmFQb29sQWdpbmdUaW1lKTsKCQl0b2tlblJld2FyZC5hbGxBZ2luZ1RpbWVzQWRkZWQoKTsKCgkJSWNvU3RhZ2VQZXJpb2QucHVzaCgxNTA0MDExNjAwKTsKCQlJY29TdGFnZVBlcmlvZC5wdXNoKDE1MDY3MTg4MDApOwoKCQlib251c2VzLnB1c2goMTk5MCBmaW5uZXkpOwoJCWJvbnVzZXMucHVzaCgyOTkwIGZpbm5leSk7CgkJYm9udXNlcy5wdXNoKDQ5OTAgZmlubmV5KTsKCQlib251c2VzLnB1c2goNjk5MCBmaW5uZXkpOwoJCWJvbnVzZXMucHVzaCg5NTAwIGZpbm5leSk7CgkJYm9udXNlcy5wdXNoKDE0NTAwIGZpbm5leSk7CgkJYm9udXNlcy5wdXNoKDE5NTAwIGZpbm5leSk7CgkJYm9udXNlcy5wdXNoKDI5NTAwIGZpbm5leSk7CgkJYm9udXNlcy5wdXNoKDQ5NTAwIGZpbm5leSk7CgkJYm9udXNlcy5wdXNoKDc0NTAwIGZpbm5leSk7CgkJYm9udXNlcy5wdXNoKDk5IGV0aGVyKTsKCQlib251c2VzLnB1c2goMTQ5IGV0aGVyKTsKCQlib251c2VzLnB1c2goMTk5IGV0aGVyKTsKCQlib251c2VzLnB1c2goMjk5IGV0aGVyKTsKCQlib251c2VzLnB1c2goNDk5IGV0aGVyKTsKCQlib251c2VzLnB1c2goNzQ5IGV0aGVyKTsKCQlib251c2VzLnB1c2goOTk5IGV0aGVyKTsKCQlib251c2VzLnB1c2goMTQ5OSBldGhlcik7CgkJYm9udXNlcy5wdXNoKDE5OTkgZXRoZXIpOwoJCWJvbnVzZXMucHVzaCgyOTk5IGV0aGVyKTsKCQlib251c2VzLnB1c2goNDk5OSBldGhlcik7CgkJYm9udXNlcy5wdXNoKDc0OTkgZXRoZXIpOwoJCWJvbnVzZXMucHVzaCg5OTk5IGV0aGVyKTsKCQlib251c2VzLnB1c2goMTQ5OTkgZXRoZXIpOwoJCWJvbnVzZXMucHVzaCgxOTk5OSBldGhlcik7CgkJYm9udXNlcy5wdXNoKDQ5OTk5IGV0aGVyKTsKCQlib251c2VzLnB1c2goOTk5OTkgZXRoZXIpOwoKCQlib251c2VzQWZ0ZXJDbG9zZS5wdXNoKDIwMCk7CgkJYm9udXNlc0FmdGVyQ2xvc2UucHVzaCgxMDApOwoJCWJvbnVzZXNBZnRlckNsb3NlLnB1c2goNzUpOwoJCWJvbnVzZXNBZnRlckNsb3NlLnB1c2goNTApOwoJCWJvbnVzZXNBZnRlckNsb3NlLnB1c2goMjUpOwoJfQoKCWZ1bmN0aW9uIG1pbnQodWludCBhbW91bnQsIHVpbnQgdG9rZW5zLCBhZGRyZXNzIHNlbmRlcikgaW50ZXJuYWwgewoJCWJhbGFuY2VPZltzZW5kZXJdICs9IGFtb3VudDsKCQl0b3RhbENvbGxlY3RlZCArPSBhbW91bnQ7CgkJdG9rZW5SZXdhcmQubWludFRva2VuKHNlbmRlciwgdG9rZW5zLCBhZ2luZ1RpbWUpOwoJCXRva2VuUmV3YXJkLm1pbnRUb2tlbihmb3VuZGVycywgdG9rZW5zIC8gMTAsIGZvdW5kZXJzUG9vbEFnaW5nVGltZSk7Cgl9CgoJZnVuY3Rpb24gY29udHJhY3RCYWxhbmNlKCkgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7CgkJcmV0dXJuIHRoaXMuYmFsYW5jZTsKCX0KCglmdW5jdGlvbiBwcm9jZXNzUGF5bWVudChhZGRyZXNzIGZyb20sIHVpbnQgYW1vdW50LCBib29sIGlzQ3VzdG9tKSBpbnRlcm5hbCB7CgkJaWYoIWlzQ3VzdG9tKQoJCUZ1bmRUcmFuc2Zlcihmcm9tLCBhbW91bnQsIHRydWUpOwoJCXVpbnQgb3JpZ2luYWwgPSBhbW91bnQ7CgoJCXVpbnQgX3ByaWNlID0gcHJpY2VQZXJUb2tlbkluV2VpOwoJCXVpbnQgcmVtYWluID0gdGhyZXNob2xkIC0gdG90YWxDb2xsZWN0ZWQ7CgkJaWYgKHJlbWFpbiA8IGFtb3VudCkgewoJCQlhbW91bnQgPSByZW1haW47CgkJfQoKCQlmb3IgKHVpbnQgaSA9IDA7IGkgPCBib251c2VzLmxlbmd0aDsgaSsrKSB7CgkJCWlmIChhbW91bnQgPCBib251c2VzW2ldKSBicmVhazsKCgkJCWlmIChhbW91bnQgPj0gYm9udXNlc1tpXSAmJiAoaSA9PSBib251c2VzLmxlbmd0aCAtIDEgfHwgYW1vdW50IDwgYm9udXNlc1tpICsgMV0pKSB7CgkJCQlpZiAoaSA8IDE1KSB7CgkJCQkJX3ByaWNlID0gX3ByaWNlICogMTAwMCAvICgxMDAwICsgKChpICsgMSArIChpID4gMTEgPyAxIDogMCkpICogNSkpOwoJCQkJfQoJCQkJZWxzZSB7CgkJCQkJX3ByaWNlID0gX3ByaWNlICogMTAwMCAvICgxMDAwICsgKCg4ICsgaSAtIDE0KSAqIDEwKSk7CgkJCQl9CgkJCX0KCQl9CgoJCXVpbnQgdG9rZW5BbW91bnQgPSBhbW91bnQgLyBfcHJpY2U7CgkJdWludCBjdXJyZW50QW1vdW50ID0gdG9rZW5BbW91bnQgKiBfcHJpY2U7CgkJbWludChjdXJyZW50QW1vdW50LCB0b2tlbkFtb3VudCArIHRva2VuQW1vdW50ICogZ2V0Qm9udXNCeVJhaXNlZCgpIC8gMTAwMCwgZnJvbSk7CgkJdWludCBjaGFuZ2UgPSBvcmlnaW5hbCAtIGN1cnJlbnRBbW91bnQ7CgkJaWYgKGNoYW5nZSA+IDAgJiYgIWlzQ3VzdG9tKSB7CgkJCWlmIChmcm9tLnNlbmQoY2hhbmdlKSkgewoJCQkJRnVuZFRyYW5zZmVyKGZyb20sIGNoYW5nZSwgZmFsc2UpOwoJCQl9CgkJCWVsc2UgcmV2ZXJ0KCk7CgkJfQoJfQoKCWZ1bmN0aW9uIGdldEJvbnVzQnlSYWlzZWQoKSBpbnRlcm5hbCByZXR1cm5zICh1aW50MjU2KSB7CgkJdWludCByYWlzZWRJblBlcmNlbnQgPSB0b3RhbENvbGxlY3RlZCAqIDEwMCAvIGdvYWw7CgkJaWYgKHJhaXNlZEluUGVyY2VudCA+IDUwKSByZXR1cm4gMDsKCQlmb3IgKHVpbnQgaSA9IDA7IGkgPCBib251c2VzQWZ0ZXJDbG9zZS5sZW5ndGg7IGkrKykgewoJCQlpZiAoaSAqIDEwIDw9IHJhaXNlZEluUGVyY2VudCAmJiAoaSArIDEpICogMTAgPiByYWlzZWRJblBlcmNlbnQpIHsKCQkJCXJldHVybiBib251c2VzQWZ0ZXJDbG9zZVtpXTsKCQkJfQoJCX0KCQlyZXR1cm4gMDsKCX0KCglmdW5jdGlvbiBjbG9zZUlDTygpIG9ubHlPd25lciB7CgkJcmVxdWlyZShub3cgPj0gSWNvU3RhZ2VQZXJpb2RbMF0gJiYgbm93IDwgSWNvU3RhZ2VQZXJpb2RbMV0gJiYgIUljb0Nsb3NlZE1hbnVhbGx5KTsKCQlJY29DbG9zZWRNYW51YWxseSA9IHRydWU7Cgl9CgoJZnVuY3Rpb24gc2FmZVdpdGhkcmF3YWwodWludCBhbW91bnQpIG9ubHlPd25lciB7CgkJcmVxdWlyZSh0aGlzLmJhbGFuY2UgPj0gYW1vdW50KTsKCgkJLy8gbG9jayB3aXRoZHJhdyBpZiBzdGFnZSBub3QgY2xvc2VkCgkJaWYgKG5vdyA+PSBJY29TdGFnZVBlcmlvZFswXSAmJiBub3cgPCBJY29TdGFnZVBlcmlvZFsxXSkKCQlyZXF1aXJlKEljb0Nsb3NlZE1hbnVhbGx5IHx8IGlzUmVhY2hlZFRocmVzaG9sZCgpKTsKCgkJaWYgKG93bmVyLnNlbmQoYW1vdW50KSkgewoJCQlGdW5kVHJhbnNmZXIobXNnLnNlbmRlciwgYW1vdW50LCBmYWxzZSk7CgkJfQoJfQoKCWZ1bmN0aW9uIGlzUmVhY2hlZFRocmVzaG9sZCgpIGludGVybmFsIHJldHVybnMgKGJvb2wgcmVhY2hlZCkgewoJCXJldHVybiBwcmljZVBlclRva2VuSW5XZWkgPiAodGhyZXNob2xkIC0gdG90YWxDb2xsZWN0ZWQpOwoJfQoKCWZ1bmN0aW9uIGlzSWNvQ2xvc2VkKCkgY29uc3RhbnQgcmV0dXJucyAoYm9vbCBjbG9zZWQpIHsKCQlyZXR1cm4gKG5vdyA+PSBJY29TdGFnZVBlcmlvZFsxXSB8fCBJY29DbG9zZWRNYW51YWxseSB8fCBpc1JlYWNoZWRUaHJlc2hvbGQoKSk7Cgl9CgoJZnVuY3Rpb24gY3VzdG9tUGF5bWVudChhZGRyZXNzIF9yZWNpcGllbnQsIHVpbnQyNTYgX2Ftb3VudCkgb25seVNlcnZlciB7CgkJcmVxdWlyZShwYXJhbWV0ZXJzSGF2ZUJlZW5TZXQpOwoJCXJlcXVpcmUoX2Ftb3VudCA+PSAxMCBmaW5uZXkpOwoKCQkvLyB2YWxpZGF0ZSBieSBzdGFnZSBwZXJpb2RzCgkJcmVxdWlyZShub3cgPj0gSWNvU3RhZ2VQZXJpb2RbMF0gJiYgbm93IDwgSWNvU3RhZ2VQZXJpb2RbMV0pOwoJCS8vIHZhbGlkYXRlIGlmIGNsb3NlZCBtYW51YWxseSBvciByZWFjaGVkIHRoZSB0aHJlc2hvbGQKCQlyZXF1aXJlKCFJY29DbG9zZWRNYW51YWxseSk7CgkJcmVxdWlyZSghaXNSZWFjaGVkVGhyZXNob2xkKCkpOwoJCXByb2Nlc3NQYXltZW50KF9yZWNpcGllbnQsIF9hbW91bnQsIHRydWUpOwoJfQoKCWJvb2wgcHVibGljIGFsbG93TWFudWFsbHlNaW50VG9rZW5zID0gdHJ1ZTsKCWZ1bmN0aW9uIG1pbnRUb2tlbnMoYWRkcmVzc1tdIHJlY2lwaWVudHMpIG9ubHlTZXJ2ZXIgewoJCXJlcXVpcmUoYWxsb3dNYW51YWxseU1pbnRUb2tlbnMpOwoJCWZvcih1aW50IGkgPSAwOyBpIDwgcmVjaXBpZW50cy5sZW5ndGg7IGkrKykgewoJCQl0b2tlblJld2FyZC5taW50VG9rZW4ocmVjaXBpZW50c1tpXSwgb2xkVG9rZW5SZXdhcmQuYmFsYW5jZU9mKHJlY2lwaWVudHNbaV0pLCAxNTM4OTAyODAwKTsKCQl9Cgl9CgoJZnVuY3Rpb24gZGlzYWJsZU1hbnVhbGx5TWludFRva2VucygpIG9ubHlPd25lciB7CgkJYWxsb3dNYW51YWxseU1pbnRUb2tlbnMgPSBmYWxzZTsKCX0KCglmdW5jdGlvbigpIHBheWFibGUgewoJCXJlcXVpcmUocGFyYW1ldGVyc0hhdmVCZWVuU2V0KTsKCQlyZXF1aXJlKG1zZy52YWx1ZSA+PSA1MCBmaW5uZXkpOwoKCQkvLyB2YWxpZGF0ZSBieSBzdGFnZSBwZXJpb2RzCgkJcmVxdWlyZShub3cgPj0gSWNvU3RhZ2VQZXJpb2RbMF0gJiYgbm93IDwgSWNvU3RhZ2VQZXJpb2RbMV0pOwoJCS8vIHZhbGlkYXRlIGlmIGNsb3NlZCBtYW51YWxseSBvciByZWFjaGVkIHRoZSB0aHJlc2hvbGQKCQlyZXF1aXJlKCFJY29DbG9zZWRNYW51YWxseSk7CgkJcmVxdWlyZSghaXNSZWFjaGVkVGhyZXNob2xkKCkpOwoKCQlwcm9jZXNzUGF5bWVudChtc2cuc2VuZGVyLCBtc2cudmFsdWUsIGZhbHNlKTsKCX0KCglmdW5jdGlvbiBjaGFuZ2VUb2tlbk93bmVyKGFkZHJlc3MgX293bmVyKSBvbmx5T3duZXIgewoJCXRva2VuUmV3YXJkLmNoYW5nZU93bmVyKF9vd25lcik7Cgl9CgoJZnVuY3Rpb24ga2lsbCgpIG9ubHlPd25lciB7CgkJcmVxdWlyZShpc0ljb0Nsb3NlZCgpKTsKCQlpZih0aGlzLmJhbGFuY2UgPiAwKSB7CgkJCW93bmVyLnRyYW5zZmVyKHRoaXMuYmFsYW5jZSk7CgkJfQoJCWNoYW5nZVRva2VuT3duZXIob3duZXIpOwoJCXNlbGZkZXN0cnVjdChvd25lcik7Cgl9Cn0='.
	

]
