Class {
	#name : #SRT619033e18db36578b77700b1c510ede0cd91d163,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT619033e18db36578b77700b1c510ede0cd91d163 >> base64 [
	^ ''.
	

]
