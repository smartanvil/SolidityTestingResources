Class {
	#name : #SRT8d8194537110a4659d4bf0b8df030b0ced50b39e,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT8d8194537110a4659d4bf0b8df030b0ced50b39e >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7Cgpjb250cmFjdCBPd25hYmxlIHsKICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKCgogIGV2ZW50IE93bmVyc2hpcFRyYW5zZmVycmVkKGFkZHJlc3MgaW5kZXhlZCBwcmV2aW91c093bmVyLCBhZGRyZXNzIGluZGV4ZWQgbmV3T3duZXIpOwoKCiAgLyoqCiAgICogQGRldiBUaGUgT3duYWJsZSBjb25zdHJ1Y3RvciBzZXRzIHRoZSBvcmlnaW5hbCBgb3duZXJgIG9mIHRoZSBjb250cmFjdCB0byB0aGUgc2VuZGVyCiAgICogYWNjb3VudC4KICAgKi8KICBmdW5jdGlvbiBPd25hYmxlKCkgcHVibGljIHsKICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICB9CgoKICAvKioKICAgKiBAZGV2IFRocm93cyBpZiBjYWxsZWQgYnkgYW55IGFjY291bnQgb3RoZXIgdGhhbiB0aGUgb3duZXIuCiAgICovCiAgbW9kaWZpZXIgb25seU93bmVyKCkgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyKTsKICAgIF87CiAgfQoKCiAgLyoqCiAgICogQGRldiBBbGxvd3MgdGhlIGN1cnJlbnQgb3duZXIgdG8gdHJhbnNmZXIgY29udHJvbCBvZiB0aGUgY29udHJhY3QgdG8gYSBuZXdPd25lci4KICAgKiBAcGFyYW0gbmV3T3duZXIgVGhlIGFkZHJlc3MgdG8gdHJhbnNmZXIgb3duZXJzaGlwIHRvLgogICAqLwogIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpIHB1YmxpYyBvbmx5T3duZXIgewogICAgcmVxdWlyZShuZXdPd25lciAhPSBhZGRyZXNzKDApKTsKICAgIE93bmVyc2hpcFRyYW5zZmVycmVkKG93bmVyLCBuZXdPd25lcik7CiAgICBvd25lciA9IG5ld093bmVyOwogIH0KCn0KCmNvbnRyYWN0IFBhdXNhYmxlIGlzIE93bmFibGUgewogIGV2ZW50IFBhdXNlKCk7CiAgZXZlbnQgVW5wYXVzZSgpOwoKICBib29sIHB1YmxpYyBwYXVzZWQgPSBmYWxzZTsKCgogIC8qKgogICAqIEBkZXYgTW9kaWZpZXIgdG8gbWFrZSBhIGZ1bmN0aW9uIGNhbGxhYmxlIG9ubHkgd2hlbiB0aGUgY29udHJhY3QgaXMgbm90IHBhdXNlZC4KICAgKi8KICBtb2RpZmllciB3aGVuTm90UGF1c2VkKCkgewogICAgcmVxdWlyZSghcGF1c2VkKTsKICAgIF87CiAgfQoKICAvKioKICAgKiBAZGV2IE1vZGlmaWVyIHRvIG1ha2UgYSBmdW5jdGlvbiBjYWxsYWJsZSBvbmx5IHdoZW4gdGhlIGNvbnRyYWN0IGlzIHBhdXNlZC4KICAgKi8KICBtb2RpZmllciB3aGVuUGF1c2VkKCkgewogICAgcmVxdWlyZShwYXVzZWQpOwogICAgXzsKICB9CgogIC8qKgogICAqIEBkZXYgY2FsbGVkIGJ5IHRoZSBvd25lciB0byBwYXVzZSwgdHJpZ2dlcnMgc3RvcHBlZCBzdGF0ZQogICAqLwogIGZ1bmN0aW9uIHBhdXNlKCkgb25seU93bmVyIHdoZW5Ob3RQYXVzZWQgcHVibGljIHsKICAgIHBhdXNlZCA9IHRydWU7CiAgICBQYXVzZSgpOwogIH0KCiAgLyoqCiAgICogQGRldiBjYWxsZWQgYnkgdGhlIG93bmVyIHRvIHVucGF1c2UsIHJldHVybnMgdG8gbm9ybWFsIHN0YXRlCiAgICovCiAgZnVuY3Rpb24gdW5wYXVzZSgpIG9ubHlPd25lciB3aGVuUGF1c2VkIHB1YmxpYyB7CiAgICBwYXVzZWQgPSBmYWxzZTsKICAgIFVucGF1c2UoKTsKICB9Cn0KCmxpYnJhcnkgTWF0aCB7CiAgZnVuY3Rpb24gbWF4NjQodWludDY0IGEsIHVpbnQ2NCBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQ2NCkgewogICAgcmV0dXJuIGEgPj0gYiA/IGEgOiBiOwogIH0KCiAgZnVuY3Rpb24gbWluNjQodWludDY0IGEsIHVpbnQ2NCBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQ2NCkgewogICAgcmV0dXJuIGEgPCBiID8gYSA6IGI7CiAgfQoKICBmdW5jdGlvbiBtYXgyNTYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgcmV0dXJuIGEgPj0gYiA/IGEgOiBiOwogIH0KCiAgZnVuY3Rpb24gbWluMjU2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHJldHVybiBhIDwgYiA/IGEgOiBiOwogIH0KfQoKY29udHJhY3QgRGVzdHJ1Y3RpYmxlIGlzIE93bmFibGUgewoKICBmdW5jdGlvbiBEZXN0cnVjdGlibGUoKSBwdWJsaWMgcGF5YWJsZSB7IH0KCiAgLyoqCiAgICogQGRldiBUcmFuc2ZlcnMgdGhlIGN1cnJlbnQgYmFsYW5jZSB0byB0aGUgb3duZXIgYW5kIHRlcm1pbmF0ZXMgdGhlIGNvbnRyYWN0LgogICAqLwogIGZ1bmN0aW9uIGRlc3Ryb3koKSBvbmx5T3duZXIgcHVibGljIHsKICAgIHNlbGZkZXN0cnVjdChvd25lcik7CiAgfQoKICBmdW5jdGlvbiBkZXN0cm95QW5kU2VuZChhZGRyZXNzIF9yZWNpcGllbnQpIG9ubHlPd25lciBwdWJsaWMgewogICAgc2VsZmRlc3RydWN0KF9yZWNpcGllbnQpOwogIH0KfQoKY29udHJhY3QgUHJvZml0U2hhcmluZyBpcyBPd25hYmxlLCBEZXN0cnVjdGlibGUsIFBhdXNhYmxlIHsKICAgIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwoKICAgIHN0cnVjdCBQZXJpb2QgewogICAgICAgIHVpbnQxMjggZW5kVGltZTsKICAgICAgICB1aW50MTI4IGJsb2NrOwogICAgICAgIHVpbnQxMjggYmFsYW5jZTsKICAgIH0KCiAgICAvLyBwdWJsaWMKICAgIEJhbGFuY2VIaXN0b3J5VG9rZW4gcHVibGljIHRva2VuOwogICAgdWludDI1NiBwdWJsaWMgcGVyaW9kRHVyYXRpb247CiAgICBQZXJpb2QgcHVibGljIGN1cnJlbnRQZXJpb2Q7CiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gbWFwcGluZyh1aW50ID0+IGJvb2wpKSBwdWJsaWMgcGF5bWVudHM7CgogICAgLy8gaW50ZXJuYWwKCiAgICAvLyBldmVudHMKICAgIGV2ZW50IFBheW1lbnRDb21wbGV0ZWQoYWRkcmVzcyBpbmRleGVkIHJlcXVlc3RlciwgdWludCBpbmRleGVkIHBheW1lbnRQZXJpb2RCbG9jaywgdWludCBhbW91bnQpOwogICAgZXZlbnQgUGVyaW9kUmVzZXQodWludCBibG9jaywgdWludCBlbmRUaW1lLCB1aW50IGJhbGFuY2UsIHVpbnQgdG90YWxTdXBwbHkpOwoKICAgIC8vLyBAZGV2IENvbnN0cnVjdG9yIG9mIHRoZSBjb250cmFjdAogICAgZnVuY3Rpb24gUHJvZml0U2hhcmluZyhhZGRyZXNzIF90b2tlbkFkZHJlc3MpIHB1YmxpYyB7CiAgICAgICAgcGVyaW9kRHVyYXRpb24gPSA0IHdlZWtzOwogICAgICAgIHJlc2V0UGVyaW9kKCk7CiAgICAgICAgdG9rZW4gPSBCYWxhbmNlSGlzdG9yeVRva2VuKF90b2tlbkFkZHJlc3MpOwogICAgfQoKICAgIC8vLyBAZGV2IERlZmF1bHQgcGF5YWJsZSBmYWxsYmFjay4gCiAgICBmdW5jdGlvbiAoKSBwdWJsaWMgcGF5YWJsZSB7CiAgICB9CgogICAgLy8vIEBkZXYgV2l0aGRyYXdzIHRoZSBmdWxsIGFtb3VudCBzaGFyZWQgd2l0aCB0aGUgc2VuZGVyLgogICAgZnVuY3Rpb24gd2l0aGRyYXcoKSBwdWJsaWMgd2hlbk5vdFBhdXNlZCB7CiAgICAgICAgd2l0aGRyYXdGb3IobXNnLnNlbmRlcik7CiAgICB9CgogICAgLy8vIEBkZXYgQWxsb3dzIHNvbWVvbmUgdG8gY2FsbCB3aXRoZHJhdyBvbiBiZWhhbGYgb2Ygc29tZW9uZSBlbHNlLiAKICAgIC8vLyBVc2VmdWwgaWYgd2UgZXhwb3NlIHZpYSB3ZWIzIGJ1dCBtZXRhbWFzayBhY2NvdW50IGlzIGRpZmZlcmVudCB0aGFuIG93bmVyIG9mIHRva2Vucy4KICAgIGZ1bmN0aW9uIHdpdGhkcmF3Rm9yKGFkZHJlc3MgdG9rZW5Pd25lcikgcHVibGljIHdoZW5Ob3RQYXVzZWQgewogICAgICAgIC8vIEVuc3VyZSB0aGF0IHRoaXMgYWRkcmVzcyBoYXNuJ3QgYmVlbiBwcmV2aW91c2x5IHBhaWQgb3V0IGZvciB0aGlzIHBlcmlvZC4KICAgICAgICByZXF1aXJlKCFwYXltZW50c1t0b2tlbk93bmVyXVtjdXJyZW50UGVyaW9kLmJsb2NrXSk7CiAgICAgICAgCiAgICAgICAgLy8gQ2hlY2sgaWYgaXQgaXMgdGltZSB0byBjYWxjdWxhdGUgdGhlIG5leHQgcGF5b3V0IHBlcmlvZC4KICAgICAgICByZXNldFBlcmlvZCgpOwoKICAgICAgICAvLyBDYWxjdWxhdGUgdGhlIGFtb3VudCBvZiB0aGUgY3VycmVudCBwYXlvdXQgcGVyaW9kCiAgICAgICAgdWludCBwYXltZW50ID0gZ2V0UGF5bWVudFRvdGFsKHRva2VuT3duZXIpOwogICAgICAgIHJlcXVpcmUocGF5bWVudCA+IDApOwogICAgICAgIGFzc2VydCh0aGlzLmJhbGFuY2UgPj0gcGF5bWVudCk7CgogICAgICAgIHBheW1lbnRzW3Rva2VuT3duZXJdW2N1cnJlbnRQZXJpb2QuYmxvY2tdID0gdHJ1ZTsKICAgICAgICBQYXltZW50Q29tcGxldGVkKHRva2VuT3duZXIsIGN1cnJlbnRQZXJpb2QuYmxvY2ssIHBheW1lbnQpOwogICAgICAgIHRva2VuT3duZXIudHJhbnNmZXIocGF5bWVudCk7CiAgICB9CgogICAgLy8vIEBkZXYgUmVzZXRzIHRoZSBwZXJpb2QgZ2l2ZW4gdGhlIGR1cmF0aW9uIG9mIHRoZSBjdXJyZW50IHBlcmlvZAogICAgZnVuY3Rpb24gcmVzZXRQZXJpb2QoKSBpbnRlcm5hbCB7CiAgICAgICAgdWludCBub3dUaW1lID0gZ2V0Tm93KCk7CiAgICAgICAgaWYgKGN1cnJlbnRQZXJpb2QuZW5kVGltZSA8IG5vd1RpbWUpIHsKICAgICAgICAgICAgY3VycmVudFBlcmlvZC5lbmRUaW1lID0gdWludDEyOChub3dUaW1lLmFkZChwZXJpb2REdXJhdGlvbikpOyAKICAgICAgICAgICAgY3VycmVudFBlcmlvZC5ibG9jayA9IHVpbnQxMjgoYmxvY2subnVtYmVyKTsKICAgICAgICAgICAgY3VycmVudFBlcmlvZC5iYWxhbmNlID0gdWludDEyOCh0aGlzLmJhbGFuY2UpOwogICAgICAgICAgICBpZiAodG9rZW4gIT0gYWRkcmVzcygweDApKSB7CiAgICAgICAgICAgICAgICBQZXJpb2RSZXNldChibG9jay5udW1iZXIsIG5vd1RpbWUuYWRkKHBlcmlvZER1cmF0aW9uKSwgdGhpcy5iYWxhbmNlLCB0b2tlbi50b3RhbFN1cHBseSgpKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KCiAgICAvLy8gQGRldiBHZXRzIHRoZSB0b3RhbCBwYXltZW50IGFtb3VudCBmb3IgdGhlIHNlbmRlciBnaXZlbiB0aGUgY3VycmVudCBwZXJpb2QuCiAgICBmdW5jdGlvbiBnZXRQYXltZW50VG90YWwoYWRkcmVzcyB0b2tlbk93bmVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgICAgIGlmIChwYXltZW50c1t0b2tlbk93bmVyXVtjdXJyZW50UGVyaW9kLmJsb2NrXSkgewogICAgICAgICAgICByZXR1cm4gMDsKICAgICAgICB9CgogICAgICAgIC8vIEdldCB0aGUgYW1vdW50IG9mIGJhbGFuY2UgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgcGF5bWVudCBwZXJpb2QKICAgICAgICB1aW50IHRva2VuT3duZXJCYWxhbmNlID0gdG9rZW4uYmFsYW5jZU9mQXRCbG9jayh0b2tlbk93bmVyLCBjdXJyZW50UGVyaW9kLmJsb2NrKTsKCiAgICAgICAgLy8gQ2FsY3VsYXRlIHRoZSBhbW91bnQgb2YgdGhlIGN1cnJlbnQgcGF5b3V0IHBlcmlvZAogICAgICAgIHJldHVybiBjYWxjdWxhdGVQYXltZW50KHRva2VuT3duZXJCYWxhbmNlKTsKICAgIH0KCiAgICAvLy8gQGRldiBVcGRhdGVzIHRoZSB0b2tlbiBhZGRyZXNzIG9mIHRoZSBwYXltZW50IHR5cGUuCiAgICBmdW5jdGlvbiB1cGRhdGVUb2tlbihhZGRyZXNzIHRva2VuQWRkcmVzcykgcHVibGljIG9ubHlPd25lciB7CiAgICAgICAgdG9rZW4gPSBCYWxhbmNlSGlzdG9yeVRva2VuKHRva2VuQWRkcmVzcyk7CiAgICB9CgogICAgLy8vIEBkZXYgQ2FsY3VsYXRlcyB0aGUgcGF5bWVudCBnaXZlbiB0aGUgc2VuZGVyIGJhbGFuY2UgZm9yIHRoZSBjdXJyZW50IHBlcmlvZC4KICAgIGZ1bmN0aW9uIGNhbGN1bGF0ZVBheW1lbnQodWludCB0b2tlbk93bmVyQmFsYW5jZSkgcHVibGljIGNvbnN0YW50IHJldHVybnModWludCkgewogICAgICAgIHJldHVybiB0b2tlbk93bmVyQmFsYW5jZS5tdWwoY3VycmVudFBlcmlvZC5iYWxhbmNlKS5kaXYodG9rZW4udG90YWxTdXBwbHkoKSk7CiAgICB9CgogICAgLy8vIEBkZXYgSW50ZXJuYWwgZnVuY3Rpb24gZm9yIG1vY2tpbmcgcHVycG9zZXMKICAgIGZ1bmN0aW9uIGdldE5vdygpIGludGVybmFsIHZpZXcgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHJldHVybiBub3c7CiAgICB9CgogICAgLy8vIEBkZXYgVXBkYXRlcyB0aGUgcGVyaW9kIGR1cmF0aW9uCiAgICBmdW5jdGlvbiB1cGRhdGVQZXJpb2REdXJhdGlvbih1aW50IG5ld1BlcmlvZER1cmF0aW9uKSBwdWJsaWMgb25seU93bmVyIHsKICAgICAgICByZXF1aXJlKG5ld1BlcmlvZER1cmF0aW9uID4gMCk7CiAgICAgICAgcGVyaW9kRHVyYXRpb24gPSBuZXdQZXJpb2REdXJhdGlvbjsKICAgIH0KCiAgICAvLy8gQGRldiBGb3JjZXMgYSBwZXJpb2QgcmVzZXQKICAgIGZ1bmN0aW9uIGZvcmNlUmVzZXRQZXJpb2QoKSBwdWJsaWMgb25seU93bmVyIHsKICAgICAgICB1aW50IG5vd1RpbWUgPSBnZXROb3coKTsKICAgICAgICBjdXJyZW50UGVyaW9kLmVuZFRpbWUgPSB1aW50MTI4KG5vd1RpbWUuYWRkKHBlcmlvZER1cmF0aW9uKSk7IAogICAgICAgIGN1cnJlbnRQZXJpb2QuYmxvY2sgPSB1aW50MTI4KGJsb2NrLm51bWJlcik7CiAgICAgICAgY3VycmVudFBlcmlvZC5iYWxhbmNlID0gdWludDEyOCh0aGlzLmJhbGFuY2UpOwogICAgICAgIGlmICh0b2tlbiAhPSBhZGRyZXNzKDB4MCkpIHsKICAgICAgICAgICAgUGVyaW9kUmVzZXQoYmxvY2subnVtYmVyLCBub3dUaW1lLmFkZChwZXJpb2REdXJhdGlvbiksIHRoaXMuYmFsYW5jZSwgdG9rZW4udG90YWxTdXBwbHkoKSk7CiAgICAgICAgfQogICAgfQp9CgpsaWJyYXJ5IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgaWYgKGEgPT0gMCkgewogICAgICByZXR1cm4gMDsKICAgIH0KICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGMgLyBhID09IGIpOwogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBkaXYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgLy8gYXNzZXJ0KGIgPiAwKTsgLy8gU29saWRpdHkgYXV0b21hdGljYWxseSB0aHJvd3Mgd2hlbiBkaXZpZGluZyBieSAwCiAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgIC8vIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOyAvLyBUaGVyZSBpcyBubyBjYXNlIGluIHdoaWNoIHRoaXMgZG9lc24ndCBob2xkCiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhICsgYjsKICAgIGFzc2VydChjID49IGEpOwogICAgcmV0dXJuIGM7CiAgfQp9Cgpjb250cmFjdCBGdWxsRVJDMjAgewogIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBmcm9tLCBhZGRyZXNzIGluZGV4ZWQgdG8sIHVpbnQyNTYgdmFsdWUpOwogIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBvd25lciwgYWRkcmVzcyBpbmRleGVkIHNwZW5kZXIsIHVpbnQyNTYgdmFsdWUpOwogIAogIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5OwogIHVpbnQ4IHB1YmxpYyBkZWNpbWFsczsKCiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3Mgd2hvKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2KTsKICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIHRvLCB1aW50MjU2IHZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CiAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3Mgb3duZXIsIGFkZHJlc3Mgc3BlbmRlcikgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1Nik7CiAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgZnJvbSwgYWRkcmVzcyB0bywgdWludDI1NiB2YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpOwogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBzcGVuZGVyLCB1aW50MjU2IHZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7Cn0KCmNvbnRyYWN0IEJhbGFuY2VIaXN0b3J5VG9rZW4gaXMgRnVsbEVSQzIwIHsKICBmdW5jdGlvbiBiYWxhbmNlT2ZBdEJsb2NrKGFkZHJlc3Mgd2hvLCB1aW50MjU2IGJsb2NrTnVtYmVyKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2KTsKfQ=='.
	

]
