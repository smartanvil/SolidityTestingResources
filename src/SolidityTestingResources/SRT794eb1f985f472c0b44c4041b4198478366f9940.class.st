Class {
	#name : #SRT794eb1f985f472c0b44c4041b4198478366f9940,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT794eb1f985f472c0b44c4041b4198478366f9940 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgoKLyoqCiAqIEB0aXRsZSBPd25hYmxlCiAqIEBkZXYgVGhlIE93bmFibGUgY29udHJhY3QgaGFzIGFuIG93bmVyIGFkZHJlc3MsIGFuZCBwcm92aWRlcyBiYXNpYyBhdXRob3JpemF0aW9uIGNvbnRyb2wKICogZnVuY3Rpb25zLCB0aGlzIHNpbXBsaWZpZXMgdGhlIGltcGxlbWVudGF0aW9uIG9mICJ1c2VyIHBlcm1pc3Npb25zIi4KICovCmNvbnRyYWN0IE93bmFibGUgewogICAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CgogICAgZXZlbnQgT3duZXJzaGlwVHJhbnNmZXJyZWQoYWRkcmVzcyBpbmRleGVkIHByZXZpb3VzT3duZXIsIGFkZHJlc3MgaW5kZXhlZCBuZXdPd25lcik7CgogICAgLyoqCiAgICAqIEBkZXYgVGhyb3dzIGlmIGNhbGxlZCBieSBhbnkgYWNjb3VudCBvdGhlciB0aGFuIHRoZSBvd25lci4KICAgICovCiAgICBtb2RpZmllciBvbmx5T3duZXIoKSB7CiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyKTsKICAgICAgICBfOwogICAgfQoKICAgIC8qKgogICAgKiBAZGV2IFRoZSBPd25hYmxlIGNvbnN0cnVjdG9yIHNldHMgdGhlIG9yaWdpbmFsIGBvd25lcmAgb2YgdGhlIGNvbnRyYWN0IHRvIHRoZSBzZW5kZXIKICAgICogYWNjb3VudC4KICAgICovCiAgICBmdW5jdGlvbiBPd25hYmxlKCkgcHVibGljIHsKICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgICB9CgogICAgLyoqCiAgICAqIEBkZXYgQWxsb3dzIHRoZSBjdXJyZW50IG93bmVyIHRvIHRyYW5zZmVyIGNvbnRyb2wgb2YgdGhlIGNvbnRyYWN0IHRvIGEgbmV3T3duZXIuCiAgICAqIEBwYXJhbSBuZXdPd25lciBUaGUgYWRkcmVzcyB0byB0cmFuc2ZlciBvd25lcnNoaXAgdG8uCiAgICAqLwogICAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBuZXdPd25lcikgb25seU93bmVyIHB1YmxpYyB7CiAgICAgICAgcmVxdWlyZShuZXdPd25lciAhPSBhZGRyZXNzKDApKTsKICAgICAgICBPd25lcnNoaXBUcmFuc2ZlcnJlZChvd25lciwgbmV3T3duZXIpOwogICAgICAgIG93bmVyID0gbmV3T3duZXI7CiAgICB9Cgp9CgovKgogKiBFUkMyMEJhc2ljCiAqIFNpbXBsZXIgdmVyc2lvbiBvZiBFUkMyMCBpbnRlcmZhY2UKICogc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8yMAogKi8KY29udHJhY3QgRVJDMjBCYXNpYyB7CiAgICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KTsKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpOwogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50IHZhbHVlKTsKfQoKCmNvbnRyYWN0IEVSQzIyM0Jhc2ljIGlzIEVSQzIwQmFzaWMgewogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyB0bywgdWludCB2YWx1ZSwgYnl0ZXMgZGF0YSkgcHVibGljIHJldHVybnMgKGJvb2wpOwp9CgoKLyoKICogRVJDMjAgaW50ZXJmYWNlCiAqIHNlZSBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9pc3N1ZXMvMjAKICovCmNvbnRyYWN0IEVSQzIwIGlzIEVSQzIyM0Jhc2ljIHsKICAgIC8vIGFjdGl2ZSBzdXBwbHkgb2YgdG9rZW5zCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KTsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludCBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKTsKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKTsKICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBvd25lciwgYWRkcmVzcyBpbmRleGVkIHNwZW5kZXIsIHVpbnQyNTYgdmFsdWUpOwp9CgogLyoKICogQ29udHJhY3QgdGhhdCBpcyB3b3JraW5nIHdpdGggRVJDMjIzIHRva2VucwogKi8KCmNvbnRyYWN0IEVSQzIyM1JlY2VpdmluZ0NvbnRyYWN0IHsKICAgIGZ1bmN0aW9uIHRva2VuRmFsbGJhY2soYWRkcmVzcyBfZnJvbSwgdWludCBfdmFsdWUsIGJ5dGVzIF9kYXRhKSBwdWJsaWM7Cn0KCi8qKgogKiBAdGl0bGUgQ29udHJvbENlbnRyZUludGVyZmFjZQogKiBAZGV2IENvbnRyb2xDZW50cmVJbnRlcmZhY2UgaXMgYW4gaW50ZXJmYWNlIGZvciBwcm92aWRpbmcgY29tbW9ubHkgdXNlZCBmdW5jdGlvbgogKiBzaWduYXR1cmVzIHRvIHRoZSBDb250cm9sQ2VudHJlCiAqLwpjb250cmFjdCBDb250cm9sbGVySW50ZXJmYWNlIHsKCiAgICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KTsKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpOwogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nik7CiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3Mgb3duZXIsIGFkZHJlc3Mgc3BlbmRlciwgdWludDI1NiB2YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpOwogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBvd25lciwgYWRkcmVzcyB0bywgdWludCB2YWx1ZSwgYnl0ZXMgZGF0YSkgcHVibGljIHJldHVybnMgKGJvb2wpOwogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3Mgb3duZXIsIGFkZHJlc3MgZnJvbSwgYWRkcmVzcyB0bywgdWludDI1NiBhbW91bnQsIGJ5dGVzIGRhdGEpIHB1YmxpYyByZXR1cm5zIChib29sKTsKICAgIGZ1bmN0aW9uIG1pbnQoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX2Ftb3VudCkgcHVibGljIHJldHVybnMgKGJvb2wpOwp9Cgpjb250cmFjdCBUb2tlbiBpcyBPd25hYmxlLCBFUkMyMCB7CgogICAgZXZlbnQgTWludChhZGRyZXNzIGluZGV4ZWQgdG8sIHVpbnQyNTYgYW1vdW50KTsKICAgIGV2ZW50IE1pbnRUb2dnbGUoYm9vbCBzdGF0dXMpOwoKICAgIC8vIENvbnN0YW50IEZ1bmN0aW9ucwogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHJldHVybiBDb250cm9sbGVySW50ZXJmYWNlKG93bmVyKS5iYWxhbmNlT2YoX293bmVyKTsKICAgIH0KCiAgICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgcmV0dXJuIENvbnRyb2xsZXJJbnRlcmZhY2Uob3duZXIpLnRvdGFsU3VwcGx5KCk7CiAgICB9CgogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHJldHVybiBDb250cm9sbGVySW50ZXJmYWNlKG93bmVyKS5hbGxvd2FuY2UoX293bmVyLCBfc3BlbmRlcik7CiAgICB9CgogICAgZnVuY3Rpb24gbWludChhZGRyZXNzIF90bywgdWludDI1NiBfYW1vdW50KSBvbmx5T3duZXIgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgICAgICBieXRlcyBtZW1vcnkgZW1wdHk7CiAgICAgICAgX2NoZWNrRGVzdGluYXRpb24oYWRkcmVzcyh0aGlzKSwgX3RvLCBfYW1vdW50LCBlbXB0eSk7CiAgICAgICAgTWludChfdG8sIF9hbW91bnQpOwogICAgICAgIFRyYW5zZmVyKGFkZHJlc3MoMCksIF90bywgX2Ftb3VudCk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gbWludFRvZ2dsZShib29sIHN0YXR1cykgb25seU93bmVyIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICAgICAgTWludFRvZ2dsZShzdGF0dXMpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIC8vIHB1YmxpYyBmdW5jdGlvbnMKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICAgICAgQ29udHJvbGxlckludGVyZmFjZShvd25lcikuYXBwcm92ZShtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsKICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICAgICAgYnl0ZXMgbWVtb3J5IGVtcHR5OwogICAgICAgIHJldHVybiB0cmFuc2ZlcihfdG8sIF92YWx1ZSwgZW1wdHkpOwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sIHVpbnQgdmFsdWUsIGJ5dGVzIGRhdGEpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICAgICAgQ29udHJvbGxlckludGVyZmFjZShvd25lcikudHJhbnNmZXIobXNnLnNlbmRlciwgdG8sIHZhbHVlLCBkYXRhKTsKICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCB0bywgdmFsdWUpOwogICAgICAgIF9jaGVja0Rlc3RpbmF0aW9uKG1zZy5zZW5kZXIsIHRvLCB2YWx1ZSwgZGF0YSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgICAgICBieXRlcyBtZW1vcnkgZW1wdHk7CiAgICAgICAgcmV0dXJuIHRyYW5zZmVyRnJvbShfZnJvbSwgX3RvLCBfdmFsdWUsIGVtcHR5KTsKICAgIH0KCgogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF9hbW91bnQsIGJ5dGVzIF9kYXRhKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgICAgIENvbnRyb2xsZXJJbnRlcmZhY2Uob3duZXIpLnRyYW5zZmVyRnJvbShtc2cuc2VuZGVyLCBfZnJvbSwgX3RvLCBfYW1vdW50LCBfZGF0YSk7CiAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX2Ftb3VudCk7CiAgICAgICAgX2NoZWNrRGVzdGluYXRpb24oX2Zyb20sIF90bywgX2Ftb3VudCwgX2RhdGEpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIC8vIEludGVybmFsIEZ1bmN0aW9ucwogICAgZnVuY3Rpb24gX2NoZWNrRGVzdGluYXRpb24oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlLCBieXRlcyBfZGF0YSkgaW50ZXJuYWwgewogICAgICAgIHVpbnQyNTYgY29kZUxlbmd0aDsKICAgICAgICBhc3NlbWJseSB7CiAgICAgICAgICAgIGNvZGVMZW5ndGggOj0gZXh0Y29kZXNpemUoX3RvKQogICAgICAgIH0KICAgICAgICBpZihjb2RlTGVuZ3RoPjApIHsKICAgICAgICAgICAgRVJDMjIzUmVjZWl2aW5nQ29udHJhY3QgdW50cnVzdGVkUmVjZWl2ZXIgPSBFUkMyMjNSZWNlaXZpbmdDb250cmFjdChfdG8pOwogICAgICAgICAgICAvLyB1bnRydXN0ZWQgY29udHJhY3QgY2FsbAogICAgICAgICAgICB1bnRydXN0ZWRSZWNlaXZlci50b2tlbkZhbGxiYWNrKF9mcm9tLCBfdmFsdWUsIF9kYXRhKTsKICAgICAgICB9CiAgICB9Cn0KCgovKioKIFNpbXBsZSBUb2tlbiBiYXNlZCBvbiBPcGVuWmVwcGVsaW4gdG9rZW4gY29udHJhY3QKICovCmNvbnRyYWN0IEZvcmNlIGlzICBUb2tlbiB7CgogICAgc3RyaW5nIHB1YmxpYyBjb25zdGFudCBuYW1lID0gIkZvcmNlIjsKICAgIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgc3ltYm9sID0gIkZPUkNFIjsKICAgIHVpbnQ4IHB1YmxpYyBjb25zdGFudCBkZWNpbWFscyA9IDE4OwoKfQ=='.
	

]
