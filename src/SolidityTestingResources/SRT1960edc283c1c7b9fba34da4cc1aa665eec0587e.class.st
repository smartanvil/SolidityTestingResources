Class {
	#name : #SRT1960edc283c1c7b9fba34da4cc1aa665eec0587e,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT1960edc283c1c7b9fba34da4cc1aa665eec0587e >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7Cgpjb250cmFjdCBTYWZlTWF0aCB7CiAgICAvL2ludGVybmFscwoKICAgIGZ1bmN0aW9uIHNhZmVNdWwodWludCBhLCB1aW50IGIpIGludGVybmFsIHJldHVybnModWludCkgewogICAgICAgIHVpbnQgYyA9IGEgKiBiOwogICAgICAgIEFzc2VydChhID09IDAgfHwgYyAvIGEgPT0gYik7CiAgICAgICAgcmV0dXJuIGM7CiAgICB9CgogICAgZnVuY3Rpb24gc2FmZVN1Yih1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyh1aW50KSB7CiAgICAgICAgQXNzZXJ0KGIgPD0gYSk7CiAgICAgICAgcmV0dXJuIGEgLSBiOwogICAgfQoKICAgIGZ1bmN0aW9uIHNhZmVBZGQodWludCBhLCB1aW50IGIpIGludGVybmFsIHJldHVybnModWludCkgewogICAgICAgIHVpbnQgYyA9IGEgKyBiOwogICAgICAgIEFzc2VydChjID49IGEgJiYgYyA+PSBiKTsKICAgICAgICByZXR1cm4gYzsKICAgIH0KCiAgICBmdW5jdGlvbiBBc3NlcnQoYm9vbCBhc3NlcnRpb24pIGludGVybmFsIHsKICAgICAgICBpZiAoIWFzc2VydGlvbikgewogICAgICAgICAgICByZXZlcnQoKTsKICAgICAgICB9CiAgICB9Cn0KCmNvbnRyYWN0IEJBUCBpcyBTYWZlTWF0aCB7CiAgICAvKiBQdWJsaWMgdmFyaWFibGVzIG9mIHRoZSB0b2tlbiAqLwogICAgc3RyaW5nIHB1YmxpYyBzdGFuZGFyZCA9ICdFUkMyMCc7CiAgICBzdHJpbmcgcHVibGljIG5hbWUgPSAnQkFQIHRva2VuJzsKICAgIHN0cmluZyBwdWJsaWMgc3ltYm9sID0gJ0JBUCc7CiAgICB1aW50OCBwdWJsaWMgZGVjaW1hbHMgPSAwOwogICAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7CiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKICAgIHVpbnQgcHVibGljIHRva2Vuc1NvbGRUb0ludmVzdG9ycyA9IDA7CiAgICB1aW50IHB1YmxpYyBtYXhHb2FsSW5JQ08gPSAyMTAwMDAwMDAwOwogICAgLyogRnJvbSB0aGlzIHRpbWUgb24gdG9rZW5zIG1heSBiZSB0cmFuc2ZlcmVkIChhZnRlciBJQ08gMjNoNTkgMTAvMTEvMjAxNykqLwogICAgdWludDI1NiBwdWJsaWMgc3RhcnRUaW1lID0gMTUwODkzNjQwMDsKICAgIC8qIFRlbGxzIGlmIHRva2VucyBoYXZlIGJlZW4gYnVybmVkIGFscmVhZHkgKi8KICAgIGJvb2wgYnVybmVkOwogICAgYm9vbCBoYXNJQ09TdGFydGVkOwogICAgLyogVGhpcyB3YWxsZXQgd2lsbCBob2xkIHRva2VucyBhZnRlciBJQ08qLwogICAgYWRkcmVzcyB0b2tlbnNIb2xkZXIgPSAweDEyYkY4RTE5OEE2NDc0RkM2NWNFZTBlMUM2ZjFDN2YyMzMyNEM4RDU7CiAgICAvKiBUaGlzIGNyZWF0ZXMgYW4gYXJyYXkgd2l0aCBhbGwgYmFsYW5jZXMgKi8KICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIGJhbGFuY2VPZjsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgcHVibGljIGFsbG93YW5jZTsKCgogICAgLyogVGhpcyBnZW5lcmF0ZXMgYSBwdWJsaWMgZXZlbnQgb24gdGhlIGJsb2NrY2hhaW4gdGhhdCB3aWxsIG5vdGlmeSBjbGllbnRzICovCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHZhbHVlKTsKICAgIGV2ZW50IFRyYW5zZmVyVG9SZWZlcnJhbChhZGRyZXNzIGluZGV4ZWQgcmVmZXJyYWxBZGRyZXNzLCB1aW50MjU2IHZhbHVlKTsKICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBPd25lciwgYWRkcmVzcyBpbmRleGVkIHNwZW5kZXIsIHVpbnQyNTYgdmFsdWUpOwogICAgZXZlbnQgQnVybmVkKHVpbnQgYW1vdW50KTsKCiAgICBmdW5jdGlvbiBjaGFuZ2VUaW1lQW5kTWF4KHVpbnQgX3N0YXJ0LCB1aW50IF9tYXgpewogICAgICAgIHN0YXJ0VGltZSA9IF9zdGFydDsKICAgICAgICBtYXhHb2FsSW5JQ08gPSBfbWF4OwogICAgfQoKICAgIC8qIEluaXRpYWxpemVzIGNvbnRyYWN0IHdpdGggaW5pdGlhbCBzdXBwbHkgdG9rZW5zIHRvIHRoZSBjcmVhdG9yIG9mIHRoZSBjb250cmFjdCAqLwogICAgZnVuY3Rpb24gQkFQKCkgewogICAgICAgIG93bmVyID0gMHhCMjc1OTBiOWQzMjhiQTAzOTYyNzEzMDNlMjRkYjQ0MTMyNTMxNDExOwogICAgICAgIC8vIEdpdmUgdGhlIG93bmVyIGFsbCBpbml0aWFsIHRva2VucwogICAgICAgIGJhbGFuY2VPZltvd25lcl0gPSAyMjA1MDAwMDAwOwogICAgICAgIC8vIFVwZGF0ZSB0b3RhbCBzdXBwbHkKICAgICAgICB0b3RhbFN1cHBseSAgICAgID0gMjIwNTAwMDAwMDsKICAgIH0KCiAgICAvKiBTZW5kIHNvbWUgb2YgeW91ciB0b2tlbnMgdG8gYSBnaXZlbiBhZGRyZXNzICovCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgLy9jaGVjayBpZiB0aGUgY3Jvd2RzYWxlIGlzIGFscmVhZHkgb3ZlcgogICAgICAgIGlmIChub3cgPCBzdGFydFRpbWUpIHsKICAgICAgICAgICAgcmV2ZXJ0KCk7CiAgICAgICAgfQoKICAgICAgICAvL3ByZXZlbnQgb3duZXIgdHJhbnNmZXIgYWxsIHRva2VucyBpbW1lZGlhdGVseSBhZnRlciBJQ08gZW5kZWQKICAgICAgICBpZiAobXNnLnNlbmRlciA9PSBvd25lciAmJiAhYnVybmVkKSB7CiAgICAgICAgICAgIGJ1cm4oKTsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgLy8gU3VidHJhY3QgZnJvbSB0aGUgc2VuZGVyCiAgICAgICAgYmFsYW5jZU9mW21zZy5zZW5kZXJdID0gc2FmZVN1YihiYWxhbmNlT2ZbbXNnLnNlbmRlcl0sIF92YWx1ZSk7CiAgICAgICAgLy8gQWRkIHRoZSBzYW1lIHRvIHRoZSByZWNpcGllbnQKICAgICAgICBiYWxhbmNlT2ZbX3RvXSA9IHNhZmVBZGQoYmFsYW5jZU9mW190b10sIF92YWx1ZSk7CiAgICAgICAgLy8gTm90aWZ5IGFueW9uZSBsaXN0ZW5pbmcgdGhhdCB0aGlzIHRyYW5zZmVyIHRvb2sgcGxhY2UKICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CgogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKCiAgICAvKiBBbGxvdyBhbm90aGVyIGNvbnRyYWN0IG9yIHBlcnNvbiB0byBzcGVuZCBzb21lIHRva2VucyBpbiB5b3VyIGJlaGFsZiAqLwogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyhib29sIHN1Y2Nlc3MpIHsKICAgICAgICBpZiggbm93IDwgc3RhcnRUaW1lICYmIGhhc0lDT1N0YXJ0ZWQpIHsgLy8gZHVyaW5nIElDTyBvbmx5IGFsbG93IGV4ZWN1dGUgdGhpcyBmdW5jdGlvbiBvbmUgdGltZQogICAgICAgICAgICByZXZlcnQoKTsKICAgICAgICB9CiAgICAgICAgaGFzSUNPU3RhcnRlZCA9IHRydWU7CiAgICAgICAgYWxsb3dhbmNlW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsKICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsKCiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgLyogQSBjb250cmFjdCBvciAgcGVyc29uIGF0dGVtcHRzIHRvIGdldCB0aGUgdG9rZW5zIG9mIHNvbWVib2R5IGVsc2UuCiAgICAqICBUaGlzIGlzIG9ubHkgYWxsb3dlZCBpZiB0aGUgdG9rZW4gaG9sZGVyIGFwcHJvdmVkLiAqLwogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyhib29sIHN1Y2Nlc3MpIHsKICAgICAgICBpZiAobm93IDwgc3RhcnRUaW1lICYmIF9mcm9tICE9IG93bmVyKSByZXZlcnQoKTsgLy9jaGVjayBpZiB0aGUgY3Jvd2RzYWxlIGlzIGFscmVhZHkgb3ZlcgogICAgICAgIC8vcHJldmVudCB0aGUgb3duZXIgb2Ygc3BlbmRpbmcgaGlzIHNoYXJlIG9mIHRva2VucyBzbyB0aGF0IG93bmVyIGhhcyB0byBidXJuIHRoZSB0b2tlbiBsZWZ0IGFmdGVyIElDTwogICAgICAgIGlmIChfZnJvbSA9PSBvd25lciAmJiBub3cgPj0gc3RhcnRUaW1lICYmICFidXJuZWQpIHsKICAgICAgICAgICAgYnVybigpOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICAgIGlmIChub3cgPCBzdGFydFRpbWUpewogICAgICAgICAgICBpZihfdmFsdWUgPCBtYXhHb2FsSW5JQ08gKSB7CiAgICAgICAgICAgICAgICB0b2tlbnNTb2xkVG9JbnZlc3RvcnMgPSBzYWZlQWRkKHRva2Vuc1NvbGRUb0ludmVzdG9ycywgX3ZhbHVlKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIF92YWx1ZSA9IHNhZmVTdWIoX3ZhbHVlLCBtYXhHb2FsSW5JQ08pOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHZhciBfYWxsb3dhbmNlID0gYWxsb3dhbmNlW19mcm9tXVttc2cuc2VuZGVyXTsKICAgICAgICAvLyBTdWJ0cmFjdCBmcm9tIHRoZSBzZW5kZXIKICAgICAgICBiYWxhbmNlT2ZbX2Zyb21dID0gc2FmZVN1YihiYWxhbmNlT2ZbX2Zyb21dLCBfdmFsdWUpOwogICAgICAgIC8vIEFkZCB0aGUgc2FtZSB0byB0aGUgcmVjaXBpZW50CiAgICAgICAgYmFsYW5jZU9mW190b10gPSBzYWZlQWRkKGJhbGFuY2VPZltfdG9dLCBfdmFsdWUpOwogICAgICAgIGFsbG93YW5jZVtfZnJvbV1bbXNnLnNlbmRlcl0gPSBzYWZlU3ViKF9hbGxvd2FuY2UsIF92YWx1ZSk7CiAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKCiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gYnVybigpewogICAgICAgIC8vIGlmIHRva2VucyBoYXZlIG5vdCBiZWVuIGJ1cm5lZCBhbHJlYWR5IGFuZCB0aGUgSUNPIGVuZGVkIG9yIFRva2VucyBoYXZlIGJlZW4gc29sZCBvdXQgYmVmb3JlIElDTyBlbmQuCiAgICAgICAgaWYoIWJ1cm5lZCAmJiAoIG5vdyA+IHN0YXJ0VGltZSB8fCB0b2tlbnNTb2xkVG9JbnZlc3RvcnMgPj0gbWF4R29hbEluSUNPKSApIHsKICAgICAgICAgICAgLy8gY2hlY2tlZCBmb3Igb3ZlcmZsb3cgYWJvdmUKICAgICAgICAgICAgdG90YWxTdXBwbHkgPSBzYWZlU3ViKHRvdGFsU3VwcGx5LCBiYWxhbmNlT2Zbb3duZXJdKSArIDkwMDAwMDAwMDsKICAgICAgICAgICAgdWludCB0b2tlbnNMZWZ0ID0gYmFsYW5jZU9mW293bmVyXTsKICAgICAgICAgICAgYmFsYW5jZU9mW293bmVyXSA9IDA7CiAgICAgICAgICAgIGJhbGFuY2VPZlt0b2tlbnNIb2xkZXJdID0gOTAwMDAwMDAwOwogICAgICAgICAgICBzdGFydFRpbWUgPSBub3c7CiAgICAgICAgICAgIGJ1cm5lZCA9IHRydWU7CiAgICAgICAgICAgIEJ1cm5lZCh0b2tlbnNMZWZ0KTsKICAgICAgICB9CiAgICB9Cgp9'.
	

]
