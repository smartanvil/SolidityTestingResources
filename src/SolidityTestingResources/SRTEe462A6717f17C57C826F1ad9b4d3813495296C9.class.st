Class {
	#name : #SRTEe462A6717f17C57C826F1ad9b4d3813495296C9,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTEe462A6717f17C57C826F1ad9b4d3813495296C9 >> base64 [
	^ ''.
	

]
