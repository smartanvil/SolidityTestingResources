Class {
	#name : #SRT78b058ccda93816487C655367dCb79664A216AD2,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT78b058ccda93816487C655367dCb79664A216AD2 >> base64 [
	^ 'Ly8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlNpbXBsZSBEaWNlIEdhbWUKLy8KLy8KLy8gIEhlbGxvIHBsYXllciwgdGhpcyBpcyBhIEV0aGVyZXVtIGJhc2VkIGRpY2UgZ2FtZS4gWW91IG11c3QgZGVwb3NpdCBtaW5pbXVtIG9mICJNaW5EZXBvc2l0IiB0byBwbGF5ICgrdHJhbnNhY3Rpb24gY29zdCksIGlmIHlvdSBzZW5kIGxlc3MgaXQgd29udCBiZSBjb3VudGVkLiAKLy8gIFlvdSBoYXZlIGEgMjUlIGNoYW5jZSBvZiB3aW5uaW5nIHRoZSBlbnRpcmUgYmFsYW5jZSwgd2hhdGV2ZXIgdGhhdCBhbW91bnQgaXMuICBPbiBhdmVyYWdlIHRoYXQgbWVhbnMgdGhhdCAzIHBsYXllcnMgd2lsbCBkZXBvc2l0IGJlZm9yZSB5b3Ugd2lsbCB3aW4gdGhlIGJhbGFuY2UuCi8vICBBbHNvIGV2ZXJ5IDQwdGggcGxheWVyIHdpbGwgd2luIHRoZSBqYWNrcG90LCBzbyBtYWtlIHN1cmUgeW91IGFyZSB0aGF0IHBlcnNvbi4gVGhlIGphY2twb3Qgd2lsbCBiZSBjb25zaWRlcmFibHkgbW9yZSB0aGFuIHRoZSBiYWxhbmNlLCBzbyB5b3UgaGF2ZSB0aGUgY2hhbmNlIHRvIHdpbiBiaWcgaWYgeW91IGRlcG9zaXQgZmFzdCEgVGhlIGZlZSBhbmQgZGVwb3NpdCByYXRlIGNhbiBiZSBjaGFuZ2VkIGJ5IHRoZSBvd25lciwgYW5kIGl0J3MgcHVibGljbHkgdmlzaWJsZSwgYWZ0ZXIgdGhlIGRpY2UgaGFzIGEgYmlnIHZvbHVtZSwgdGhlIGZlZSB3aWxsIGJlIGxvd2VyZWQhCi8vICAKLy8gSW5pdGlhbCBNaW5pbXVtIERlcG9zaXQ6IDEwMCBmaW5uZXkhCi8vCi8vICBHb29kIEx1Y2sgYW5kIEhhdmUgRnVuIQovLwovLwovLyBUSElTIElTIEFOIEFUVEFDSE1FTlQgT0YgVEhFIEVUSFZFTlRVUkVTIEJVU0lORVNTOiAweGVlNDYyYTY3MTdmMTdjNTdjODI2ZjFhZDliNGQzODEzNDk1Mjk2YzkgCi8vCi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipTVEFSVApjb250cmFjdCBTaW1wbGVEaWNlIHsKCiAgc3RydWN0IGdhbWJsZXJhcnJheSB7CiAgICAgIGFkZHJlc3MgZXRoZXJBZGRyZXNzOwogICAgICB1aW50IGFtb3VudDsKICB9CgovLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqUFVCTElDIFZBUklBQkxFUwogIAogIGdhbWJsZXJhcnJheVtdIHB1YmxpYyBnYW1ibGVybGlzdDsKICB1aW50IHB1YmxpYyBHYW1ibGVyc19VbnRpbF9KYWNrcG90PTA7CiAgdWludCBwdWJsaWMgVG90YWxfR2FtYmxlcnM9MDsKICB1aW50IHB1YmxpYyBGZWVSYXRlPTU7CiAgdWludCBwdWJsaWMgQmFua3JvbGwgPSAwOwogIHVpbnQgcHVibGljIEphY2twb3QgPSAwOwogIHVpbnQgcHVibGljIFRvdGFsX0RlcG9zaXRzPTA7CiAgdWludCBwdWJsaWMgVG90YWxfUGF5b3V0cz0wOwogIHVpbnQgcHVibGljIE1pbkRlcG9zaXQ9MTAwIGZpbm5leTsKCiAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CiAgdWludCBGZWVzPTA7CiAgLy8gc2ltcGxlIHNpbmdsZS1zaWcgZnVuY3Rpb24gbW9kaWZpZXIKICBtb2RpZmllciBvbmx5b3duZXIgeyBpZiAobXNnLnNlbmRlciA9PSBvd25lcikgXzsgfQovLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqSU5JVAoKICBmdW5jdGlvbiBTaW1wbGVEaWNlKCkgewogICAgb3duZXIgPSAweGVlNDYyYTY3MTdmMTdjNTdjODI2ZjFhZDliNGQzODEzNDk1Mjk2Yzk7ICAvL3RoaXMgY29udHJhY3QgaXMgYW4gYXR0YWNobWVudCB0byBFdGhWZW50dXJlcwogIH0KCi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipUUklHR0VSCgogIGZ1bmN0aW9uKCkgewogICAgZW50ZXIoKTsKICB9CiAgCi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipFTlRFUgoKICBmdW5jdGlvbiBlbnRlcigpIHsKICAgIGlmIChtc2cudmFsdWUgPjEwIGZpbm5leSkgewoKICAgIHVpbnQgYW1vdW50PW1zZy52YWx1ZTsKICAgIHVpbnQgcGF5b3V0OwoKCiAgICAvLyBhZGQgYSBuZXcgcGFydGljaXBhbnQgdG8gdGhlIHN5c3RlbSBhbmQgY2FsY3VsYXRlIHRvdGFsIHBsYXllcnMKICAgIHVpbnQgbGlzdF9sZW5ndGggPSBnYW1ibGVybGlzdC5sZW5ndGg7CiAgICBUb3RhbF9HYW1ibGVycz1saXN0X2xlbmd0aCsxOwogICAgR2FtYmxlcnNfVW50aWxfSmFja3BvdD00MC0oVG90YWxfR2FtYmxlcnMgJSA0MCk7CiAgICBnYW1ibGVybGlzdC5sZW5ndGggKz0gMTsKICAgIGdhbWJsZXJsaXN0W2xpc3RfbGVuZ3RoXS5ldGhlckFkZHJlc3MgPSBtc2cuc2VuZGVyOwogICAgZ2FtYmxlcmxpc3RbbGlzdF9sZW5ndGhdLmFtb3VudCA9IGFtb3VudDsKCgoKICAgIC8vIHNldCBwYXlvdXQgdmFyaWFibGVzCiAgICAgVG90YWxfRGVwb3NpdHMrPWFtb3VudDsgICAgICAgCS8vdXBkYXRlIGRlcG9zaXRlZCBhbW91bnQKCSAgICAKICAgICAgRmVlcyAgID1hbW91bnQgKiBGZWVSYXRlLzEwMDsgICAgLy8gNSUgZmVlIHRvIHRoZSBvd25lcgogICAgICBhbW91bnQtPWFtb3VudCAqIEZlZVJhdGUvMTAwOwoJICAgIAogICAgICBCYW5rcm9sbCArPSBhbW91bnQqODAvMTAwOyAgICAgLy8gODAlIHRvIHRoZSBiYWxhbmNlCiAgICAgIGFtb3VudC09YW1vdW50KjgwLzEwMDsgIAoJICAgIAogICAgICBKYWNrcG90ICs9IGFtb3VudDsgICAgICAgICAgICAgICAJLy9yZW1haW5pbmcgdG8gdGhlIGphY2twb3QKCgogICAgLy8gcGF5b3V0IGZlZXMgdG8gdGhlIG93bmVyCiAgICAgaWYgKEZlZXMgIT0gMCkgCiAgICAgewoJdWludCBtaW5pbWFsPSAxOTkwIGZpbm5leTsKCWlmKEZlZXM8bWluaW1hbCkKCXsKICAgICAgCW93bmVyLnNlbmQoRmVlcyk7CQkvL3NlbmQgZmVlIHRvIG93bmVyCglUb3RhbF9QYXlvdXRzKz1GZWVzOyAgICAgICAgLy91cGRhdGUgcGFpZCBvdXQgYW1vdW50Cgl9CgllbHNlCgl7Cgl1aW50IFRpbWVzPSBGZWVzL21pbmltYWw7CgoJZm9yKHVpbnQgaT0wOyBpPFRpbWVzO2krKykgICAvLyBzZW5kIHRoZSBmZWVzIG91dCBpbiBwYWNrZXRzIGNvbXBhdGlibGUgdG8gRXRoVmVudHVyZXMgZGl2aWRlbmQgZnVuY3Rpb24KCWlmKEZlZXM+MCkKCXsKCW93bmVyLnNlbmQobWluaW1hbCk7CQkvL3NlbmQgZmVlIHRvIG93bmVyCglUb3RhbF9QYXlvdXRzKz1GZWVzOyAgICAgICAgLy91cGRhdGUgcGFpZCBvdXQgYW1vdW50CglGZWVzLT1taW5pbWFsOwoJfQoJfQogICAgIH0KIAogICAgaWYgKG1zZy52YWx1ZSA+PSBNaW5EZXBvc2l0KSAKICAgICB7CgkgICAgIAogICAvL3BheW91dCB0byBwYXJ0aWNpcGFudHMJCiAgICAgaWYobGlzdF9sZW5ndGglNDA9PTAgJiYgSmFja3BvdCA+IDApICAgCQkJCS8vZXZlcnkgNDB0aCBwbGF5ZXIgd2lucyB0aGUgamFja3BvdCBpZiAgaXQncyBub3QgMAoJewoJZ2FtYmxlcmxpc3RbbGlzdF9sZW5ndGhdLmV0aGVyQWRkcmVzcy5zZW5kKEphY2twb3QpOyAgICAgICAgIC8vc2VuZCBwYXkgb3V0IHRvIHBhcnRpY2lwYW50CglUb3RhbF9QYXlvdXRzICs9IEphY2twb3Q7ICAgICAgICAgICAgICAgCQkJCQkvL3VwZGF0ZSBwYWlkIG91dCBhbW91bnQgICAKCUphY2twb3Q9MDsJCQkJCQkJCQkvL2phY2twb3QgdXBkYXRlCgl9CiAgICAgZWxzZSAgIAkJCQkJCQkJCQkJLy95b3UgZWl0aGVyIHdpbiB0aGUgamFja3BvdCBvciB0aGUgYmFsYW5jZSwgYnV0IG5vdCBib3RoIGluIDEgcm91bmQKCWlmKHVpbnQoc2hhMyhnYW1ibGVybGlzdFtsaXN0X2xlbmd0aF0uZXRoZXJBZGRyZXNzLGxpc3RfbGVuZ3RoKSkrdWludChzaGEzKG1zZy5nYXMpKSAlIDQgPT0wICYmIEJhbmtyb2xsID4gMCkgCS8vaWYgdGhlIGhhc2hlZCBsZW5ndGggb2YgeW91ciBhZGRyZXNzIGlzIGV2ZW4sIAoJeyAJCQkJCQkJCQkJCQkgICAJCQkJCQkJCS8vd2hpY2ggaXMgYSAyNSUgY2hhbmNlLCB0aGVuIHlvdSBnZXQgcGFpZCBvdXQgYWxsIGJhbGFuY2UhCglnYW1ibGVybGlzdFtsaXN0X2xlbmd0aF0uZXRoZXJBZGRyZXNzLnNlbmQoQmFua3JvbGwpOyAgICAgICAgLy9zZW5kIHBheSBvdXQgdG8gcGFydGljaXBhbnQKCVRvdGFsX1BheW91dHMgKz0gQmFua3JvbGw7ICAgICAgICAgICAgICAgCQkJCQkvL3VwZGF0ZSBwYWlkIG91dCBhbW91bnQKCUJhbmtyb2xsID0gMDsgICAgICAgICAgICAgICAgICAgICAgCQkJCQkJLy9iYW5rcm9sbCB1cGRhdGUKCX0KICAgIAogICAgCiAgICAKICAgIC8vZW50ZXIgZnVuY3Rpb24gZW5kcwoJfQogICAgfQogIH0KCi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipORVcgT1dORVIKCiAgZnVuY3Rpb24gc2V0T3duZXIoYWRkcmVzcyBuZXdfb3duZXIpIG9ubHlvd25lciB7IC8vc2V0IG5ldyBvd25lciBvZiB0aGUgY2FzaW5vCiAgICAgIG93bmVyID0gbmV3X293bmVyOwogIH0KLy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlNFVCBNSU4gREVQT1NJVAoKICBmdW5jdGlvbiBzZXRNaW5EZXBvc2l0KHVpbnQgbmV3X21pbmRlcG9zaXQpIG9ubHlvd25lciB7IC8vc2V0IG5ldyBtaW5pbXVtIGRlcG9zaXQgcmF0ZQogICAgICBNaW5EZXBvc2l0ID0gbmV3X21pbmRlcG9zaXQ7CiAgfQovLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqU0VUIEZFRSBSQVRFCgogIGZ1bmN0aW9uIHNldEZlZVJhdGUodWludCBuZXdfZmVlcmF0ZSkgb25seW93bmVyIHsgLy9zZXQgbmV3IGZlZSByYXRlCiAgICAgIEZlZVJhdGUgPSBuZXdfZmVlcmF0ZTsKICB9Cn0='.
	

]
