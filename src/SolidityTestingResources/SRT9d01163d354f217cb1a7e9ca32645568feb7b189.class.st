Class {
	#name : #SRT9d01163d354f217cb1a7e9ca32645568feb7b189,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT9d01163d354f217cb1a7e9ca32645568feb7b189 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTc7Cgpjb250cmFjdCBPd25hYmxlIHsKICAgIAogICAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CgogICAgZXZlbnQgT3duZXJzaGlwVHJhbnNmZXJyZWQoYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvKTsKCiAgICBmdW5jdGlvbiBPd25hYmxlKCkgcHVibGljIHsKICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgICB9CgogICAgbW9kaWZpZXIgb25seU93bmVyIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgICAgIF87CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBfbmV3T3duZXIpIHB1YmxpYyBvbmx5T3duZXIgewogICAgICAgIHJlcXVpcmUoX25ld093bmVyICE9IDB4MCk7CiAgICAgICAgT3duZXJzaGlwVHJhbnNmZXJyZWQob3duZXIsIF9uZXdPd25lcik7CiAgICAgICAgb3duZXIgPSBfbmV3T3duZXI7CiAgICB9Cgp9CgpsaWJyYXJ5IFNhZmVNYXRoIHsKICAgIAogICAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCAgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgICAgIGFzc2VydChhID09IDAgfHwgYyAvIGEgPT0gYik7CiAgICAgICAgcmV0dXJuIGM7CiAgICB9CgogICAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgdWludDI1NiBjID0gYSAvIGI7CiAgICAgICAgcmV0dXJuIGM7CiAgICB9CgogICAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgYXNzZXJ0KGIgPD0gYSk7CiAgICAgICAgcmV0dXJuIGEgLSBiOwogICAgfQoKICAgIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgICAgIGFzc2VydChjID49IGEpOwogICAgICAgIHJldHVybiBjOwogICAgfQp9Cgpjb250cmFjdCBFUkMyMCB7CiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsKICAgIHVpbnQ4IHB1YmxpYyBkZWNpbWFsczsKICAgIHN0cmluZyBwdWJsaWMgbmFtZTsKICAgIHN0cmluZyBwdWJsaWMgc3ltYm9sOwogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3Mgd2hvKSBjb25zdGFudCBwdWJsaWMgcmV0dXJucyAodWludDI1Nik7CiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIHRvLCB1aW50MjU2IHZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHZhbHVlKTsKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIG93bmVyLCBhZGRyZXNzIHNwZW5kZXIpIGNvbnN0YW50IHB1YmxpYyByZXR1cm5zICh1aW50MjU2KTsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIGZyb20sIGFkZHJlc3MgdG8sIHVpbnQyNTYgdmFsdWUpIHB1YmxpYyAgcmV0dXJucyAoYm9vbCk7CiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3Mgc3BlbmRlciwgdWludDI1NiB2YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIG93bmVyLCBhZGRyZXNzIGluZGV4ZWQgc3BlbmRlciwgdWludDI1NiB2YWx1ZSk7Cn0KCmNvbnRyYWN0IFNITlogaXMgRVJDMjAsIE93bmFibGUgewogICAgCiAgICB1c2luZyBTYWZlTWF0aCBmb3IgdWludDI1NjsKICAgIAogICAgdWludDI1NiBwcml2YXRlIHRva2Vuc1NvbGQ7CiAgICAKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgYmFsYW5jZXM7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikpIGFsbG93YW5jZXM7CiAgCiAgICBldmVudCBUb2tlbnNJc3N1ZWQoYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvLCB1aW50MjU2IGFtb3VudCk7CgogICAgZnVuY3Rpb24gU0hOWigpIHB1YmxpYyB7CiAgICAgICAgdG90YWxTdXBwbHkgPSAxMDAwMDAwMDAwMDAwMDAwMDAwOwogICAgICAgIGRlY2ltYWxzID0gODsKICAgICAgICBuYW1lID0gIlNoaXp6bGVOaXp6bGUiOwogICAgICAgIHN5bWJvbCA9ICJTSE5aIjsKICAgICAgICBiYWxhbmNlc1t0aGlzXSA9IHRvdGFsU3VwcGx5OwogICAgfQoKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9hZGRyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHJldHVybiBiYWxhbmNlc1tfYWRkcl07CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX2Ftb3VudCkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgICAgICByZXF1aXJlKGJhbGFuY2VzW21zZy5zZW5kZXJdID49IF9hbW91bnQpOwogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gYmFsYW5jZXNbbXNnLnNlbmRlcl0uc3ViKF9hbW91bnQpOwogICAgICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfYW1vdW50KTsKICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF9hbW91bnQpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX2Ftb3VudCkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgICAgICBhbGxvd2FuY2VzW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF9hbW91bnQ7CiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF9hbW91bnQpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgcmV0dXJuIGFsbG93YW5jZXNbX293bmVyXVtfc3BlbmRlcl07CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF9hbW91bnQpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICAgICAgcmVxdWlyZShhbGxvd2FuY2VzW19mcm9tXVttc2cuc2VuZGVyXSA+PSBfYW1vdW50ICYmIGJhbGFuY2VzW19mcm9tXSA+PSBfYW1vdW50KTsKICAgICAgICBhbGxvd2FuY2VzW19mcm9tXVttc2cuc2VuZGVyXSA9IGFsbG93YW5jZXNbX2Zyb21dW21zZy5zZW5kZXJdLnN1YihfYW1vdW50KTsKICAgICAgICBiYWxhbmNlc1tfZnJvbV0gPSBiYWxhbmNlc1tfZnJvbV0uc3ViKF9hbW91bnQpOwogICAgICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfYW1vdW50KTsKICAgICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfYW1vdW50KTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gaXNzdWVUb2tlbnMoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX2Ftb3VudCkgcHVibGljIG9ubHlPd25lciB7CiAgICAgICAgcmVxdWlyZShfdG8gIT0gMHgwICYmIF9hbW91bnQgPiAwKTsKICAgICAgICBpZiAoYmFsYW5jZXNbdGhpc10gPD0gX2Ftb3VudCkgewogICAgICAgICAgICBiYWxhbmNlc1tfdG9dID0gYmFsYW5jZXNbX3RvXS5hZGQoYmFsYW5jZXNbdGhpc10pOwogICAgICAgICAgICBUcmFuc2ZlcigweDAsIF90bywgYmFsYW5jZXNbdGhpc10pOwogICAgICAgICAgICBiYWxhbmNlc1t0aGlzXSA9IDA7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgYmFsYW5jZXNbdGhpc10gPSBiYWxhbmNlc1t0aGlzXS5zdWIoX2Ftb3VudCk7CiAgICAgICAgICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfYW1vdW50KTsKICAgICAgICAgICAgVHJhbnNmZXIoMHgwLCBfdG8sIF9hbW91bnQpOwogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBnZXRUb3RhbFN1cHBseSgpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgcmV0dXJuIHRvdGFsU3VwcGx5OwogICAgfQp9Cgpjb250cmFjdCBUb2tlblNhbGUgaXMgT3duYWJsZSB7CgogICAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQyNTY7CgogICAgdWludDI1NiBwdWJsaWMgcmF0ZTsKICAgIHVpbnQyNTYgcHVibGljIEVUSGNhcDsKICAgIHVpbnQyNTYgcHVibGljIHRvdGFsUmFpc2VkOwogICAgU0hOWiBwdWJsaWMgdG9rZW47CgoKICAgIGZ1bmN0aW9uIFRva2VuU2FsZSgpIHB1YmxpYyB7CiAgICAgICAgdG9rZW4gPSBuZXcgU0hOWigpOwogICAgICAgIEVUSGNhcCA9IDU4OTgxMTk5OTk5OTk3MTcwMDAwMDAwMDsKICAgICAgICByYXRlID0gMTY5NTQ1NTUwMTA3NTsKICAgICAgICBvd25lciA9IDB4N2U4MjZFODVDYkE0ZDNBQWFhMUI0ODRmNTNCRTAxRDEwRjUyN0ZkNjsKICAgIH0KCiAgICBmdW5jdGlvbigpIHB1YmxpYyBwYXlhYmxlIHsKICAgICAgICBidXlUb2tlbnMobXNnLnNlbmRlcik7CiAgICB9CgogICAgZnVuY3Rpb24gYnV5VG9rZW5zKGFkZHJlc3MgX2JlbmVmaWNpYXJ5KSBwdWJsaWMgcGF5YWJsZSB7CiAgICAgICAgcmVxdWlyZShfYmVuZWZpY2lhcnkgIT0gMHgwICYmIHRvdGFsUmFpc2VkIDwgRVRIY2FwKTsKICAgICAgICB0b3RhbFJhaXNlZCA9IHRvdGFsUmFpc2VkLmFkZChtc2cudmFsdWUpOwogICAgICAgIHVpbnQyNTYgd2VpQW1vdW50ID0gbXNnLnZhbHVlOwogICAgICAgIGlmICh0b3RhbFJhaXNlZCA+IEVUSGNhcCkgewogICAgICAgICAgICBtc2cuc2VuZGVyLnRyYW5zZmVyKHRvdGFsUmFpc2VkLnN1YihFVEhjYXApKTsKICAgICAgICAgICAgd2VpQW1vdW50ID0gd2VpQW1vdW50LnN1Yih0b3RhbFJhaXNlZC5zdWIoRVRIY2FwKSk7CiAgICAgICAgICAgIHRvdGFsUmFpc2VkID0gdG90YWxSYWlzZWQuc3ViKHRvdGFsUmFpc2VkLnN1YihFVEhjYXApKTsKICAgICAgICB9CiAgICAgICAgdG9rZW4uaXNzdWVUb2tlbnMobXNnLnNlbmRlciwgd2VpQW1vdW50Lm11bChyYXRlKS5kaXYoMTAwMDAwMDAwMDAwMDAwMDAwMCkpOwogICAgICAgIGZvcndhcmRGdW5kcyh3ZWlBbW91bnQpOwogICAgfQoKICAgIGZ1bmN0aW9uIGZvcndhcmRGdW5kcyh1aW50MjU2IF9hbW91bnQpIGludGVybmFsIHsKICAgICAgICBvd25lci50cmFuc2ZlcihfYW1vdW50KTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gaXNzdWVUb2tlbnMoYWRkcmVzcyBfYmVuZWZpY2lhcnksIHVpbnQyNTYgX2Ftb3VudCkgb25seU93bmVyIHsKICAgICAgICByZXF1aXJlKF9iZW5lZmljaWFyeSAhPSAweDAgJiYgX2Ftb3VudCA+IDApOwogICAgICAgIHRva2VuLmlzc3VlVG9rZW5zKF9iZW5lZmljaWFyeSwgX2Ftb3VudC5tdWwoMTAwMDAwMDAwKSk7CiAgICAgICAgRVRIY2FwID0gRVRIY2FwLnN1YihfYW1vdW50Lm11bCgxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDApLmRpdihyYXRlKSk7CiAgICB9Cn0='.
	

]
