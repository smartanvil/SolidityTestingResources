Class {
	#name : #SRT9b8030daf507b8bda0b9f692d576a0e87ff62e59,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT9b8030daf507b8bda0b9f692d576a0e87ff62e59 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7CgpsaWJyYXJ5IFNhZmVNYXRoIHsKCiAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIGlmIChhID09IDApIHsKICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICB1aW50MjU2IGMgPSBhICogYjsKICAgIGFzc2VydChjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIC8vIGFzc2VydChiID4gMCk7IC8vIFNvbGlkaXR5IGF1dG9tYXRpY2FsbHkgdGhyb3dzIHdoZW4gZGl2aWRpbmcgYnkgMAogICAgdWludDI1NiBjID0gYSAvIGI7CiAgICAvLyBhc3NlcnQoYSA9PSBiICogYyArIGEgJSBiKTsgLy8gVGhlcmUgaXMgbm8gY2FzZSBpbiB3aGljaCB0aGlzIGRvZXNuJ3QgaG9sZAogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBzdWIodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KfQpjb250cmFjdCBPd25hYmxlIHsKICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKCiAgZXZlbnQgT3duZXJzaGlwVHJhbnNmZXJyZWQoYWRkcmVzcyBpbmRleGVkIHByZXZpb3VzT3duZXIsIGFkZHJlc3MgaW5kZXhlZCBuZXdPd25lcik7CgogIGZ1bmN0aW9uIE93bmFibGUoKSBwdWJsaWMgewogICAgb3duZXIgPSBtc2cuc2VuZGVyOwogIH0KCiAgbW9kaWZpZXIgb25seU93bmVyKCkgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyKTsKICAgIF87CiAgfQoKICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld093bmVyKSBwdWJsaWMgb25seU93bmVyIHsKICAgIHJlcXVpcmUobmV3T3duZXIgIT0gYWRkcmVzcygwKSk7CiAgICBPd25lcnNoaXBUcmFuc2ZlcnJlZChvd25lciwgbmV3T3duZXIpOwogICAgb3duZXIgPSBuZXdPd25lcjsKICB9Cgp9Cgpjb250cmFjdCBFUkMyMEJhc2ljIGlzIE93bmFibGUgewogIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1Nik7CiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3Mgd2hvKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2KTsKICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIHRvLCB1aW50MjU2IHZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CiAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiB2YWx1ZSk7Cn0KCmNvbnRyYWN0IEJhc2ljVG9rZW4gaXMgRVJDMjBCYXNpYyB7CiAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQyNTY7CgogIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsKCiAgdWludDI1NiB0b3RhbFN1cHBseV87CgogIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1NikgewogICAgcmV0dXJuIHRvdGFsU3VwcGx5XzsKICB9CgogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgIHJlcXVpcmUoX3RvICE9IGFkZHJlc3MoMCkpOwogICAgcmVxdWlyZShfdmFsdWUgPD0gYmFsYW5jZXNbbXNnLnNlbmRlcl0pOwoKICAgIC8vIFNhZmVNYXRoLnN1YiB3aWxsIHRocm93IGlmIHRoZXJlIGlzIG5vdCBlbm91Z2ggYmFsYW5jZS4KICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gYmFsYW5jZXNbbXNnLnNlbmRlcl0uc3ViKF92YWx1ZSk7CiAgICBiYWxhbmNlc1tfdG9dID0gYmFsYW5jZXNbX3RvXS5hZGQoX3ZhbHVlKTsKICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgIHJldHVybiB0cnVlOwogIH0KICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgewogICAgcmV0dXJuIGJhbGFuY2VzW19vd25lcl07CiAgfQp9CmNvbnRyYWN0IEp1c3RvIGlzIEJhc2ljVG9rZW4gewoKICBzdHJpbmcgcHVibGljIGNvbnN0YW50IHN5bWJvbCA9ICJKVE8iOwogIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgbmFtZSA9ICJKdXN0byI7CiAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgZGVjaW1hbHMgPSAxODsKICB1aW50MjU2IHB1YmxpYyB0b3RhbENyZWF0aW9uQ2FwID0gNDBlOSAqICgxMCoqdWludDI1NihkZWNpbWFscykpOwogIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5ID0gMDsKICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKICBhZGRyZXNzIHB1YmxpYyBmdW5kc1dhbGxldCA9IDB4YTBiODVhMzFBNTNiMDI0MjQwYzg5YTFDZjY1QkNDNDhiYjM0RGVEYTsKICB1aW50MjU2IHB1YmxpYyB0b2tlbkV4Y2hhbmdlUmF0ZSA9ICAyMDAwMDA7CiAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpIGJhbGFuY2VzOwogIG1hcHBpbmcoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBhbGxvd2VkOwogIAogIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwogIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpOwogIGZ1bmN0aW9uIEp1c3RvKCkgcHVibGljewogIG93bmVyID0gbXNnLnNlbmRlcjsKICB0aW1lT2ZMYXN0UHJvb2YgPSBub3c7CiAgfQpmdW5jdGlvbiAoKSBwdWJsaWMgcGF5YWJsZSB7CiAgY3JlYXRlKG1zZy5zZW5kZXIpOwogIGZ1bmRzV2FsbGV0LnRyYW5zZmVyKG1zZy52YWx1ZSk7Cn0KIGZ1bmN0aW9uIGNyZWF0ZShhZGRyZXNzIGJlbmVmaWNpYXJ5KXB1YmxpYyBwYXlhYmxlewogICAgdWludDI1NiBhbW91bnQgPSBtc2cudmFsdWU7CiAgIAogICAgaWYoYW1vdW50ID4gMCl7CiAgICAgIGJhbGFuY2VzW2JlbmVmaWNpYXJ5XSArPSBhbW91bnQgKiB0b2tlbkV4Y2hhbmdlUmF0ZTsKICAgICAgdG90YWxTdXBwbHkgKz0gYW1vdW50ICogdG9rZW5FeGNoYW5nZVJhdGU7CiAgICB9aWYodG90YWxTdXBwbHkgPiB0b3RhbENyZWF0aW9uQ2FwKSB7IHJldmVydCgpOwogICAgfQogIH0KZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7CiAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsKfQpmdW5jdGlvbiBjb2xsZWN0KHVpbnQyNTYgYW1vdW50KSBvbmx5T3duZXIgcHVibGljewogIG1zZy5zZW5kZXIudHJhbnNmZXIoYW1vdW50KTsKfQpmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfYW1vdW50KSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICBpZiAoYmFsYW5jZXNbbXNnLnNlbmRlcl0gPj0gX2Ftb3VudAogICAgICAgICYmIF9hbW91bnQgPiAwCiAgICAgICAgJiYgYmFsYW5jZXNbX3RvXSArIF9hbW91bnQgPiBiYWxhbmNlc1tfdG9dKSB7CiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gLT0gX2Ftb3VudDsKICAgICAgICBiYWxhbmNlc1tfdG9dICs9IF9hbW91bnQ7CiAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfYW1vdW50KTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQp9CmZ1bmN0aW9uIHRyYW5zZmVyRnJvbSgKICAgIGFkZHJlc3MgX2Zyb20sCiAgICBhZGRyZXNzIF90bywKICAgIHVpbnQyNTYgX2Ftb3VudAopIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgIGlmIChiYWxhbmNlc1tfZnJvbV0gPj0gX2Ftb3VudAogICAgICAgICYmIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID49IF9hbW91bnQKICAgICAgICAmJiBfYW1vdW50ID4gMAogICAgICAgICYmIGJhbGFuY2VzW190b10gKyBfYW1vdW50ID4gYmFsYW5jZXNbX3RvXSkgewogICAgICAgIGJhbGFuY2VzW19mcm9tXSAtPSBfYW1vdW50OwogICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdIC09IF9hbW91bnQ7CiAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfYW1vdW50OwogICAgICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF9hbW91bnQpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICB9Cn0KZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF9hbW91bnQpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX2Ftb3VudDsKICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfYW1vdW50KTsKICAgIHJldHVybiB0cnVlOwp9CmZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKSB7CiAgICByZXR1cm4gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsKfQogICAgYnl0ZXMzMiBwdWJsaWMgY3VycmVudENoYWxsZW5nZTsKICAgIHVpbnQgcHVibGljIHRpbWVPZkxhc3RQcm9vZjsKICAgIHVpbnQgcHVibGljIGRpZmZpY3VsdHkgPSAxMCoqMzI7CgpmdW5jdGlvbiBwcm9vZk9mV29yayh1aW50IG5vbmNlKXsKICAgICAgICBieXRlczggbiA9IGJ5dGVzOChrZWNjYWsyNTYobm9uY2UsIGN1cnJlbnRDaGFsbGVuZ2UpKTsgCiAgICAgICAgcmVxdWlyZShuID49IGJ5dGVzOChkaWZmaWN1bHR5KSk7CgogICAgICAgIHVpbnQgdGltZVNpbmNlTGFzdFByb29mID0gKG5vdyAtIHRpbWVPZkxhc3RQcm9vZik7IAogICAgICAgIHJlcXVpcmUodGltZVNpbmNlTGFzdFByb29mID49ICA1IHNlY29uZHMpOyAgCiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gKz0gdGltZVNpbmNlTGFzdFByb29mIC8gNjAgc2Vjb25kczsgCgogICAgICAgIGRpZmZpY3VsdHkgPSBkaWZmaWN1bHR5ICogMTAgbWludXRlcyAvIHRpbWVTaW5jZUxhc3RQcm9vZiArIDE7IAoKICAgICAgICB0aW1lT2ZMYXN0UHJvb2YgPSBub3c7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gUmVzZXQgdGhlIGNvdW50ZXIKICAgICAgICBjdXJyZW50Q2hhbGxlbmdlID0ga2VjY2FrMjU2KG5vbmNlLCBjdXJyZW50Q2hhbGxlbmdlLCBibG9jay5ibG9ja2hhc2goYmxvY2subnVtYmVyIC0gMSkpOyAgLy8gU2F2ZSBhIGhhc2ggdGhhdCB3aWxsIGJlIHVzZWQgYXMgdGhlIG5leHQgcHJvb2YKICAgIH0KfQ=='.
	

]
