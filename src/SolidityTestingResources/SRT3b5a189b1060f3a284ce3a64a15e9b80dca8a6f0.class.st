Class {
	#name : #SRT3b5a189b1060f3a284ce3a64a15e9b80dca8a6f0,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT3b5a189b1060f3a284ce3a64a15e9b80dca8a6f0 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7CgoKLy8gIlByb29mIG9mIENvbW1pdG1lbnQiIGZ1biBwcmUtbGF1bmNoIGNvbXBldGl0aW9uIGZvciBOQkFPbmxpbmUhCgovLyAgRnVsbCBkZXRhaWxzIGFuZCBnYW1lIHNtYXJ0IGNvbnRyYWN0IHdpbGwgc2hvcnRseSBiZSBhYmxlOgovLyAgfn4gaHR0cHM6Ly9uYmFvbmxpbmUuaW8gfn4KCi8vICBUaGlzIGNvbnRlc3Qgd2lsbCBhd2FyZCBzb21lIG9mIHRoZSBrZWVuIE5CQU9ubGluZSBwbGF5ZXJzCgovLyAgQUxMIEVUSEVSIERFUE9TSVRFRCBJTlRPIFRISVMgUFJPTU8gQ0FOIEJFIFdJVEhEUkFXTiBCWSBQTEFZRVIgQVQgQU5ZCi8vICBUSU1FIEJVVCBQUklaRVMgV0lMTCBCRSBEUkFXTjogU0FUVVJEQVkgMTRUSCBBUFJJTCAoTEFVTkNIKQovLyAgQVQgV0hJQ0ggUE9JTlQgQUxMIEVUSEVSIFdJTEwgQUxTTyBCRSBSRUZVTkRFRCBUTyBQTEFZRVJTCgoKLy8gIFBSSVpFUzoKLy8gIDAuNSBldGhlciAodG9wIGV0aCBkZXBvc2l0KQovLyAgMC4zNSBldGhlciAoMSByYW5kb20gZGVwb3NpdCkKLy8gIDAuMTUgZXRoZXIgKDEgcmFuZG9tIGRlcG9zaXQpCgpjb250cmFjdCBOQkFPbmxpbmVMYXVuY2hQcm9tb3Rpb24gewogICAgCiAgICAvLyBGaXJzdCBHb28gUGxheWVycyEKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSBwdWJsaWMgZGVwb3NpdHM7CiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gYm9vbCkgZGVwb3NpdG9yQWxyZWFkeVN0b3JlZDsKICAgIGFkZHJlc3NbXSBwdWJsaWMgZGVwb3NpdG9yczsKCiAgICAvLyBUbyB0cmlnZ2VyIGNvbnRlc3QgZW5kIG9ubHkKICAgIGFkZHJlc3MgcHVibGljIG93bmVyQWRkcmVzczsKICAgIAogICAgLy8gRmxhZyBzbyBjYW4gb25seSBiZSBhd2FyZGVkIG9uY2UKICAgIGJvb2wgcHVibGljIHByaXplc0F3YXJkZWQgPSBmYWxzZTsKICAgIAogICAgLy8gRXRoZXIgdG8gYmUgcmV0dXJuZWQgdG8gZGVwb3NpdG9yIG9uIGxhdW5jaAoJLy8gMWRheSA9IDg2NDAwCiAgICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCBMQVVOQ0hfREFURSA9IDE1MjM2Nzg0MDA7IC8vIFNhdHVyZGF5LCAxNCBBcHJpbCAyMDE4IDAwOjAwOjAwIChzZWNvbmRzKSBFVAogICAgCiAgICAvLyBQcm9vZiBvZiBDb21taXRtZW50IGNvbnRlc3QgcHJpemVzCiAgICB1aW50MjU2IHByaXZhdGUgY29uc3RhbnQgVE9QX0RFUE9TSVRfUFJJWkUgPSAwLjUgZXRoZXI7CiAgICB1aW50MjU2IHByaXZhdGUgY29uc3RhbnQgUkFORE9NX0RFUE9TSVRfUFJJWkUxID0gMC4zNSBldGhlcjsKICAgIHVpbnQyNTYgcHJpdmF0ZSBjb25zdGFudCBSQU5ET01fREVQT1NJVF9QUklaRTIgPSAwLjE1IGV0aGVyOwogICAgCiAgICBmdW5jdGlvbiBOQkFPbmxpbmVMYXVuY2hQcm9tb3Rpb24oKSBwdWJsaWMgcGF5YWJsZSB7CiAgICAgICAgcmVxdWlyZShtc2cudmFsdWUgPT0gMSBldGhlcik7IC8vIE93bmVyIG11c3QgcHJvdmlkZSBlbm91Z2ggZm9yIHByaXplcwogICAgICAgIG93bmVyQWRkcmVzcyA9IG1zZy5zZW5kZXI7CiAgICB9CiAgICAKICAgIAogICAgZnVuY3Rpb24gZGVwb3NpdCgpIGV4dGVybmFsIHBheWFibGUgewogICAgICAgIHVpbnQyNTYgZXhpc3RpbmcgPSBkZXBvc2l0c1ttc2cuc2VuZGVyXTsKICAgICAgICAKICAgICAgICAvLyBTYWZlbHkgc3RvcmUgdGhlIGV0aGVyIHNlbnQKICAgICAgICBkZXBvc2l0c1ttc2cuc2VuZGVyXSA9IFNhZmVNYXRoLmFkZChtc2cudmFsdWUsIGV4aXN0aW5nKTsKICAgICAgICAKICAgICAgICAvLyBGaW5hbGx5IHN0b3JlIGNvbnRlc3QgZGV0YWlscwogICAgICAgIGlmIChtc2cudmFsdWUgPj0gMC4wMSBldGhlciAmJiAhZGVwb3NpdG9yQWxyZWFkeVN0b3JlZFttc2cuc2VuZGVyXSkgewogICAgICAgICAgICBkZXBvc2l0b3JzLnB1c2gobXNnLnNlbmRlcik7CiAgICAgICAgICAgIGRlcG9zaXRvckFscmVhZHlTdG9yZWRbbXNnLnNlbmRlcl0gPSB0cnVlOwogICAgICAgIH0KICAgIH0KICAgIAogICAgZnVuY3Rpb24gcmVmdW5kKCkgZXh0ZXJuYWwgewogICAgICAgIC8vIFNhZmVseSB0cmFuc2ZlciBwbGF5ZXJzIGRlcG9zaXQgYmFjawogICAgICAgIHVpbnQyNTYgZGVwb3NpdEFtb3VudCA9IGRlcG9zaXRzW21zZy5zZW5kZXJdOwogICAgICAgIGRlcG9zaXRzW21zZy5zZW5kZXJdID0gMDsgLy8gQ2FuJ3Qgd2l0aGRyYXcgdHdpY2Ugb2J2aW91c2x5CiAgICAgICAgbXNnLnNlbmRlci50cmFuc2ZlcihkZXBvc2l0QW1vdW50KTsKICAgIH0KICAgIAogICAgCiAgICBmdW5jdGlvbiByZWZ1bmRQbGF5ZXIoYWRkcmVzcyBkZXBvc2l0b3IpIGV4dGVybmFsIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXJBZGRyZXNzKTsKICAgICAgICAKICAgICAgICAvLyBTYWZlbHkgdHJhbnNmZXIgYmFjayB0byBwbGF5ZXIKICAgICAgICB1aW50MjU2IGRlcG9zaXRBbW91bnQgPSBkZXBvc2l0c1tkZXBvc2l0b3JdOwogICAgICAgIGRlcG9zaXRzW2RlcG9zaXRvcl0gPSAwOyAvLyBDYW4ndCB3aXRoZHJhdyB0d2ljZSBvYnZpb3VzbHkKICAgICAgICAKICAgICAgICAvLyBTZW5kcyBiYWNrIHRvIGNvcnJlY3QgZGVwb3NpdG9yCiAgICAgICAgZGVwb3NpdG9yLnRyYW5zZmVyKGRlcG9zaXRBbW91bnQpOwogICAgfQogICAgCiAgICAKICAgIGZ1bmN0aW9uIGF3YXJkUHJpemVzKCkgZXh0ZXJuYWwgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lckFkZHJlc3MpOwogICAgICAgIHJlcXVpcmUobm93ID49IExBVU5DSF9EQVRFKTsKICAgICAgICByZXF1aXJlKCFwcml6ZXNBd2FyZGVkKTsKICAgICAgICAKICAgICAgICAvLyBFbnN1cmUgb25seSByYW4gb25jZQogICAgICAgIHByaXplc0F3YXJkZWQgPSB0cnVlOwogICAgICAgIAogICAgICAgIHVpbnQyNTYgaGlnaGVzdERlcG9zaXQ7CiAgICAgICAgYWRkcmVzcyBoaWdoZXN0RGVwb3NpdFdpbm5lcjsKICAgICAgICAKICAgICAgICBmb3IgKHVpbnQyNTYgaSA9IDA7IGkgPCBkZXBvc2l0b3JzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIGFkZHJlc3MgZGVwb3NpdG9yID0gZGVwb3NpdG9yc1tpXTsKICAgICAgICAgICAgCiAgICAgICAgICAgIC8vIE5vIHRpZSBhbGxvd2VkIQogICAgICAgICAgICBpZiAoZGVwb3NpdHNbZGVwb3NpdG9yXSA+IGhpZ2hlc3REZXBvc2l0KSB7CiAgICAgICAgICAgICAgICBoaWdoZXN0RGVwb3NpdCA9IGRlcG9zaXRzW2RlcG9zaXRvcl07CiAgICAgICAgICAgICAgICBoaWdoZXN0RGVwb3NpdFdpbm5lciA9IGRlcG9zaXRvcjsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICAKICAgICAgICB1aW50MjU2IG51bUNvbnRlc3RhbnRzID0gZGVwb3NpdG9ycy5sZW5ndGg7CiAgICAgICAgdWludDI1NiBzZWVkMSA9IG51bUNvbnRlc3RhbnRzICsgYmxvY2sudGltZXN0YW1wOwogICAgICAgIHVpbnQyNTYgc2VlZDIgPSBzZWVkMSArIChudW1Db250ZXN0YW50cyoyKTsKICAgICAgICAKICAgICAgICBhZGRyZXNzIHJhbmRvbURlcG9zaXRXaW5uZXIxID0gZGVwb3NpdG9yc1tyYW5kb21Db250ZXN0YW50KG51bUNvbnRlc3RhbnRzLCBzZWVkMSldOwogICAgICAgIGFkZHJlc3MgcmFuZG9tRGVwb3NpdFdpbm5lcjIgPSBkZXBvc2l0b3JzW3JhbmRvbUNvbnRlc3RhbnQobnVtQ29udGVzdGFudHMsIHNlZWQyKV07CiAgICAgICAgCiAgICAgICAgLy8gSnVzdCBpbmNhc2UKICAgICAgICB3aGlsZShyYW5kb21EZXBvc2l0V2lubmVyMiA9PSByYW5kb21EZXBvc2l0V2lubmVyMSkgewogICAgICAgICAgICBzZWVkMisrOwogICAgICAgICAgICByYW5kb21EZXBvc2l0V2lubmVyMiA9IGRlcG9zaXRvcnNbcmFuZG9tQ29udGVzdGFudChudW1Db250ZXN0YW50cywgc2VlZDIpXTsKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgaGlnaGVzdERlcG9zaXRXaW5uZXIudHJhbnNmZXIoVE9QX0RFUE9TSVRfUFJJWkUpOwogICAgICAgIHJhbmRvbURlcG9zaXRXaW5uZXIxLnRyYW5zZmVyKFJBTkRPTV9ERVBPU0lUX1BSSVpFMSk7CiAgICAgICAgcmFuZG9tRGVwb3NpdFdpbm5lcjIudHJhbnNmZXIoUkFORE9NX0RFUE9TSVRfUFJJWkUyKTsKICAgIH0KICAgIAogICAgCiAgICAvLyBSYW5kb20gZW5vdWdoIGZvciBzbWFsbCBjb250ZXN0CiAgICBmdW5jdGlvbiByYW5kb21Db250ZXN0YW50KHVpbnQyNTYgY29udGVzdGFudHMsIHVpbnQyNTYgc2VlZCkgY29uc3RhbnQgaW50ZXJuYWwgcmV0dXJucyAodWludDI1NiByZXN1bHQpewogICAgICAgIHJldHVybiBhZGRtb2QodWludDI1NihibG9jay5ibG9ja2hhc2goYmxvY2subnVtYmVyLTEpKSwgc2VlZCwgY29udGVzdGFudHMpOyAgIAogICAgfQp9CgpsaWJyYXJ5IFNhZmVNYXRoIHsKCiAgLyoqCiAgKiBAZGV2IE11bHRpcGxpZXMgdHdvIG51bWJlcnMsIHRocm93cyBvbiBvdmVyZmxvdy4KICAqLwogIGZ1bmN0aW9uIG11bCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICBpZiAoYSA9PSAwKSB7CiAgICAgIHJldHVybiAwOwogICAgfQogICAgdWludDI1NiBjID0gYSAqIGI7CiAgICBhc3NlcnQoYyAvIGEgPT0gYik7CiAgICByZXR1cm4gYzsKICB9CgogIC8qKgogICogQGRldiBJbnRlZ2VyIGRpdmlzaW9uIG9mIHR3byBudW1iZXJzLCB0cnVuY2F0aW5nIHRoZSBxdW90aWVudC4KICAqLwogIGZ1bmN0aW9uIGRpdih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAKICAgIHVpbnQyNTYgYyA9IGEgLyBiOwogICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICAgIHJldHVybiBjOwogIH0KCiAgLyoqCiAgKiBAZGV2IFN1YnN0cmFjdHMgdHdvIG51bWJlcnMsIHRocm93cyBvbiBvdmVyZmxvdyAoaS5lLiBpZiBzdWJ0cmFoZW5kIGlzIGdyZWF0ZXIgdGhhbiBtaW51ZW5kKS4KICAqLwogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIC8qKgogICogQGRldiBBZGRzIHR3byBudW1iZXJzLCB0aHJvd3Mgb24gb3ZlcmZsb3cuCiAgKi8KICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KfQ=='.
	

]
