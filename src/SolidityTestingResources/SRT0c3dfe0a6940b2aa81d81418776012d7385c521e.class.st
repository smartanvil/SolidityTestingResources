Class {
	#name : #SRT0c3dfe0a6940b2aa81d81418776012d7385c521e,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT0c3dfe0a6940b2aa81d81418776012d7385c521e >> base64 [
	^ ''.
	

]
