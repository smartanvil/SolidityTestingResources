Class {
	#name : #SRT835A44027Ee4e92BBD8874e5EDE9e5148B069e96,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT835A44027Ee4e92BBD8874e5EDE9e5148B069e96 >> base64 [
	^ ''.
	

]
