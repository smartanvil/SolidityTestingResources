Class {
	#name : #SRT7c697762236311acb0058e22bbade100612997be,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT7c697762236311acb0058e22bbade100612997be >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgovLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCi8vCi8vIFNOVEMgU2FpbnRDb2luIHRva2VuIHB1YmxpYyBzYWxlIGNvbnRyYWN0Ci8vCi8vIEZvciBkZXRhaWxzLCBwbGVhc2UgdmlzaXQ6IGh0dHBzOi8vc2FpbnRjb2luLmlvCi8vCi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCgovLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCi8vCi8vIFNhZmVNYXRoMwovLwovLyBBZGFwdGVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL09wZW5aZXBwZWxpbi96ZXBwZWxpbi1zb2xpZGl0eS9ibG9iL21hc3Rlci9jb250cmFjdHMvbWF0aC9TYWZlTWF0aC5zb2wKLy8gKG5vIG5lZWQgdG8gaW1wbGVtZW50IGRpdmlzaW9uKQovLwovLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgpsaWJyYXJ5IFNhZmVNYXRoMyB7CgogIGZ1bmN0aW9uIG11bCh1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50IGMpIHsKICAgIGMgPSBhICogYjsKICAgIGFzc2VydChhID09IDAgfHwgYyAvIGEgPT0gYik7CiAgfQoKICBmdW5jdGlvbiBzdWIodWludCBhLCB1aW50IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludCkgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICBmdW5jdGlvbiBhZGQodWludCBhLCB1aW50IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludCBjKSB7CiAgICBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICB9Cgp9CgoKLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQovLwovLyBPd25lZCBjb250cmFjdAovLwovLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgpjb250cmFjdCBPd25lZCB7CgogIGFkZHJlc3MgcHVibGljIG93bmVyOwogIGFkZHJlc3MgcHVibGljIG5ld093bmVyOwoKICAvLyBFdmVudHMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgogIGV2ZW50IE93bmVyc2hpcFRyYW5zZmVyUHJvcG9zZWQoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvKTsKICBldmVudCBPd25lcnNoaXBUcmFuc2ZlcnJlZChhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8pOwoKICAvLyBNb2RpZmllciAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgogIG1vZGlmaWVyIG9ubHlPd25lciB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgXzsKICB9CgogIC8vIEZ1bmN0aW9ucyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCiAgZnVuY3Rpb24gT3duZWQoKSBwdWJsaWMgewogICAgb3duZXIgPSBtc2cuc2VuZGVyOwogIH0KCiAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBfbmV3T3duZXIpIG9ubHlPd25lciBwdWJsaWMgewogICAgcmVxdWlyZShfbmV3T3duZXIgIT0gb3duZXIpOwogICAgcmVxdWlyZShfbmV3T3duZXIgIT0gYWRkcmVzcygweDApKTsKICAgIE93bmVyc2hpcFRyYW5zZmVyUHJvcG9zZWQob3duZXIsIF9uZXdPd25lcik7CiAgICBuZXdPd25lciA9IF9uZXdPd25lcjsKICB9CgogIGZ1bmN0aW9uIGFjY2VwdE93bmVyc2hpcCgpIHB1YmxpYyB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gbmV3T3duZXIpOwogICAgT3duZXJzaGlwVHJhbnNmZXJyZWQob3duZXIsIG5ld093bmVyKTsKICAgIG93bmVyID0gbmV3T3duZXI7CiAgICBuZXdPd25lciA9IGFkZHJlc3MoMHgwKTsKICB9Cgp9CgoKLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQovLwovLyBFUkMgVG9rZW4gU3RhbmRhcmQgIzIwIEludGVyZmFjZQovLyBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9ibG9iL21hc3Rlci9FSVBTL2VpcC0yMC10b2tlbi1zdGFuZGFyZC5tZAovLwovLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgpjb250cmFjdCBFUkMyMEludGVyZmFjZSB7CgogIC8vIEV2ZW50cyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCiAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50IF92YWx1ZSk7CiAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50IF92YWx1ZSk7CgogIC8vIEZ1bmN0aW9ucyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCiAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBjb25zdGFudCBwdWJsaWMgcmV0dXJucyAodWludCk7CiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCBwdWJsaWMgcmV0dXJucyAodWludCBiYWxhbmNlKTsKICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludCBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludCBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludCBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcHVibGljIHJldHVybnMgKHVpbnQgcmVtYWluaW5nKTsKCn0KCgovLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCi8vCi8vIEVSQyBUb2tlbiBTdGFuZGFyZCAjMjAKLy8KLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKY29udHJhY3QgRVJDMjBUb2tlbiBpcyBFUkMyMEludGVyZmFjZSwgT3duZWQgewogIAogIHVzaW5nIFNhZmVNYXRoMyBmb3IgdWludDsKCiAgdWludCBwdWJsaWMgdG9rZW5zSXNzdWVkVG90YWwgPSAwOwoKICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludCkgYmFsYW5jZXM7CiAgbWFwcGluZyhhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludCkpIGludGVybmFsIGFsbG93ZWQ7CgogIC8vIEZ1bmN0aW9ucyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCiAgLyogVG90YWwgdG9rZW4gc3VwcGx5ICovCgogIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgY29uc3RhbnQgcHVibGljIHJldHVybnMgKHVpbnQpIHsKICAgIHJldHVybiB0b2tlbnNJc3N1ZWRUb3RhbDsKICB9CgogIC8qIEdldCB0aGUgYWNjb3VudCBiYWxhbmNlIGZvciBhbiBhZGRyZXNzICovCgogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcHVibGljIHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgewogICAgcmV0dXJuIGJhbGFuY2VzW19vd25lcl07CiAgfQoKICAvKiBUcmFuc2ZlciB0aGUgYmFsYW5jZSBmcm9tIG93bmVyJ3MgYWNjb3VudCB0byBhbm90aGVyIGFjY291bnQgKi8KCiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgcmVxdWlyZShfdG8gIT0gYWRkcmVzcygwKSk7CiAgICByZXF1aXJlKF92YWx1ZSA8PSBiYWxhbmNlc1ttc2cuc2VuZGVyXSk7CgogICAgLy8gdXBkYXRlIGJhbGFuY2VzCiAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IGJhbGFuY2VzW21zZy5zZW5kZXJdLnN1YihfdmFsdWUpOwogICAgYmFsYW5jZXNbX3RvXSA9IGJhbGFuY2VzW190b10uYWRkKF92YWx1ZSk7CgogICAgLy8gbG9nIGV2ZW50CiAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIC8qIEFsbG93IF9zcGVuZGVyIHRvIHdpdGhkcmF3IGZyb20geW91ciBhY2NvdW50IHVwIHRvIF92YWx1ZSAqLwoKICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgLy8gYXBwcm92YWwgYW1vdW50IGNhbm5vdCBleGNlZWQgdGhlIGJhbGFuY2UKICAgIHJlcXVpcmUoYmFsYW5jZXNbbXNnLnNlbmRlcl0gPj0gX3ZhbHVlKTsKICAgICAgCiAgICAvLyB1cGRhdGUgYWxsb3dlZCBhbW91bnQKICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgCiAgICAvLyBsb2cgZXZlbnQKICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgcmV0dXJuIHRydWU7CiAgfQoKICAvKiBTcGVuZGVyIG9mIHRva2VucyB0cmFuc2ZlcnMgdG9rZW5zIGZyb20gdGhlIG93bmVyJ3MgYmFsYW5jZSAqLwogIC8qIE11c3QgYmUgcHJlLWFwcHJvdmVkIGJ5IG93bmVyICovCgogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICByZXF1aXJlKF90byAhPSBhZGRyZXNzKDApKTsKICAgIHJlcXVpcmUoX3ZhbHVlIDw9IGJhbGFuY2VzW19mcm9tXSk7CiAgICByZXF1aXJlKF92YWx1ZSA8PSBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSk7CgogICAgLy8gdXBkYXRlIGJhbGFuY2VzIGFuZCBhbGxvd2VkIGFtb3VudAogICAgYmFsYW5jZXNbX2Zyb21dID0gYmFsYW5jZXNbX2Zyb21dLnN1YihfdmFsdWUpOwogICAgYmFsYW5jZXNbX3RvXSA9IGJhbGFuY2VzW190b10uYWRkKF92YWx1ZSk7CiAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA9IGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdLnN1YihfdmFsdWUpOwoKICAgIC8vIGxvZyBldmVudAogICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgLyogUmV0dXJucyB0aGUgYW1vdW50IG9mIHRva2VucyBhcHByb3ZlZCBieSB0aGUgb3duZXIgKi8KICAvKiB0aGF0IGNhbiBiZSB0cmFuc2ZlcnJlZCBieSBzcGVuZGVyICovCgogIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcHVibGljIHJldHVybnMgKHVpbnQgcmVtYWluaW5nKSB7CiAgICByZXR1cm4gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsKICB9CgogIC8qKgogICAqIGFwcHJvdmUgc2hvdWxkIGJlIGNhbGxlZCB3aGVuIGFsbG93ZWRbX3NwZW5kZXJdID09IDAuIFRvIGluY3JlbWVudAogICAqIGFsbG93ZWQgdmFsdWUgaXMgYmV0dGVyIHRvIHVzZSB0aGlzIGZ1bmN0aW9uIHRvIGF2b2lkIDIgY2FsbHMgKGFuZCB3YWl0IHVudGlsCiAgICogdGhlIGZpcnN0IHRyYW5zYWN0aW9uIGlzIG1pbmVkKQogICAqIEZyb20gTW9ub2xpdGhEQU8gVG9rZW4uc29sCiAgICovCiAgZnVuY3Rpb24gaW5jcmVhc2VBcHByb3ZhbChhZGRyZXNzIF9zcGVuZGVyLCB1aW50IF9hZGRlZFZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXS5hZGQoX2FkZGVkVmFsdWUpOwoKICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIGRlY3JlYXNlQXBwcm92YWwoYWRkcmVzcyBfc3BlbmRlciwgdWludCBfc3VidHJhY3RlZFZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgdWludCBvbGRWYWx1ZSA9IGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdOwoKICAgIGlmIChfc3VidHJhY3RlZFZhbHVlID4gb2xkVmFsdWUpIHsKICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSAwOwogICAgfSBlbHNlIHsKICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBvbGRWYWx1ZS5zdWIoX3N1YnRyYWN0ZWRWYWx1ZSk7CiAgICB9CgogICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdKTsKICAgIHJldHVybiB0cnVlOwogIH0KfQoKY29udHJhY3QgU2FpbnRDb2luVG9rZW4gaXMgRVJDMjBUb2tlbiB7CiAgICAvKiBVdGlsaXR5IHZhcmlhYmxlICovCiAgCiAgICB1aW50IGNvbnN0YW50IEU2ID0gMTAqKjY7CiAgCiAgICAvKiBCYXNpYyB0b2tlbiBkYXRhICovCiAgCiAgICBzdHJpbmcgcHVibGljIGNvbnN0YW50IG5hbWUgPSAiU2FpbnQgQ29pbnMiOwogICAgc3RyaW5nIHB1YmxpYyBjb25zdGFudCBzeW1ib2wgPSAiU0FJTlQiOwogICAgdWludDggcHVibGljIGNvbnN0YW50IGRlY2ltYWxzID0gMDsKICAgIAogICAgLyogU2FpbnQgY29pbmRzIHBlciBFVEggKi8KICAKICAgIHVpbnQgcHVibGljIHRva2Vuc1BlckV0aCA9IDEwMDA7CgogICAgLyogRnVuZGF0aW9uIGNvbnRyYWN0IGFkZHJlc3NlcyAqLwogICAgCiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gYm9vbCkgcHVibGljIGdyYW50ZWRDb250cmFjdHM7CgogICAgLyogSGVscENvaW4gYWRkcmVzcyAqLwoKICAgIGFkZHJlc3MgcHVibGljIGhlbHBDb2luQWRkcmVzczsKCiAgICBldmVudCBHcmFudGVkT3JnYW5pemF0aW9uKGJvb2wgaXNHcmFudGVkKTsKCiAgICBmdW5jdGlvbiBTYWludENvaW5Ub2tlbihhZGRyZXNzIF9oZWxwQ29pbkFkZHJlc3MpIHB1YmxpYyB7IAogICAgICBoZWxwQ29pbkFkZHJlc3MgPSBfaGVscENvaW5BZGRyZXNzOyAgICAgICAgICAKICAgIH0KICAgIAogICAgZnVuY3Rpb24gc2V0SGVscENvaW5BZGRyZXNzKGFkZHJlc3MgbmV3SGVscENvaW5XYWxsZXRBZGRyZXNzKSBwdWJsaWMgb25seU93bmVyIHsKICAgICAgICBoZWxwQ29pbkFkZHJlc3MgPSBuZXdIZWxwQ29pbldhbGxldEFkZHJlc3M7CiAgICB9CgogICAgZnVuY3Rpb24gc2VuZFRvKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHsKICAgICAgICByZXF1aXJlKGlzQXV0aG9yaXplZChtc2cuc2VuZGVyKSk7CiAgICAgICAgcmVxdWlyZShiYWxhbmNlc1tfdG9dICsgX3ZhbHVlID49IGJhbGFuY2VzW190b10pOwogICAgICAgIAogICAgICAgIHVpbnQgdG9rZW5zID0gdG9rZW5zUGVyRXRoLm11bChfdmFsdWUpIC8gMSBldGhlcjsKICAgICAgICAKICAgICAgICBiYWxhbmNlc1tfdG9dICs9IHRva2VuczsKICAgICAgICB0b2tlbnNJc3N1ZWRUb3RhbCArPSB0b2tlbnM7CgogICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgdG9rZW5zKTsKICAgIH0KCiAgICBmdW5jdGlvbiBncmFudEFjY2VzcyhhZGRyZXNzIF9hZGRyZXNzKSBwdWJsaWMgb25seU93bmVyIHsKICAgICAgICBncmFudGVkQ29udHJhY3RzW19hZGRyZXNzXSA9IHRydWU7CiAgICAgICAgR3JhbnRlZE9yZ2FuaXphdGlvbihncmFudGVkQ29udHJhY3RzW19hZGRyZXNzXSk7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIHJldm9rZUFjY2VzcyhhZGRyZXNzIF9hZGRyZXNzKSBwdWJsaWMgb25seU93bmVyIHsKICAgICAgICBncmFudGVkQ29udHJhY3RzW19hZGRyZXNzXSA9IGZhbHNlOwogICAgICAgIEdyYW50ZWRPcmdhbml6YXRpb24oZ3JhbnRlZENvbnRyYWN0c1tfYWRkcmVzc10pOwogICAgfQoKICAgIGZ1bmN0aW9uIGlzQXV0aG9yaXplZChhZGRyZXNzIF9hZGRyZXNzKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAoYm9vbCkgewogICAgICAgIHJldHVybiBncmFudGVkQ29udHJhY3RzW19hZGRyZXNzXTsKICAgIH0KfQ=='.
	

]
