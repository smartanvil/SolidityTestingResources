Class {
	#name : #SRTb70835d7822ebb9426b56543e391846c107bd32c,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTb70835d7822ebb9426b56543e391846c107bd32c >> base64 [
	^ ''.
	

]
