Class {
	#name : #SRT79d03e5c093fee6f489a9bdc2f3e0103da9b5ef7,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT79d03e5c093fee6f489a9bdc2f3e0103da9b5ef7 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgoKY29udHJhY3QgVG9rZW4gewoKICAgIHVpbnQyNTYgY29uc3RhbnQgcHJpdmF0ZSBNQVhfVUlOVDI1NiA9IDIqKjI1NiAtIDE7CiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludCkgcHVibGljIGJhbGFuY2VzOwogICAgbWFwcGluZyhhZGRyZXNzID0+IG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50KSkgcHVibGljIGFsbG93ZWQ7CgogICAgc3RyaW5nIHB1YmxpYyBkZXNjcmlwdGlvbjsKICAgIHVpbnQ4IHB1YmxpYyBkZWNpbWFsczsKICAgIHN0cmluZyBwdWJsaWMgbG9nb1VSTDsKICAgIHN0cmluZyBwdWJsaWMgbmFtZTsKICAgIHN0cmluZyBwdWJsaWMgc3ltYm9sOwogICAgdWludCBwdWJsaWMgdG90YWxTdXBwbHk7CgogICAgYWRkcmVzcyBwdWJsaWMgY3JlYXRvcjsKCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsKICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpOwogICAgCiAgICBldmVudCBDcmVhdGVkKGFkZHJlc3MgY3JlYXRvciwgdWludCBzdXBwbHkpOwoKICAgIGZ1bmN0aW9uIFRva2VuKAogICAgICAgIHN0cmluZyBfZGVzY3JpcHRpb24sCiAgICAgICAgc3RyaW5nIF9sb2dvVVJMLAogICAgICAgIHN0cmluZyBfbmFtZSwKICAgICAgICBzdHJpbmcgX3N5bWJvbCwKICAgICAgICB1aW50MjU2IF90b3RhbFN1cHBseQogICAgKSBwdWJsaWMKICAgIHsKICAgICAgICBkZXNjcmlwdGlvbiA9IF9kZXNjcmlwdGlvbjsKICAgICAgICBsb2dvVVJMID0gX2xvZ29VUkw7CiAgICAgICAgbmFtZSA9IF9uYW1lOwogICAgICAgIHN5bWJvbCA9IF9zeW1ib2w7CiAgICAgICAgZGVjaW1hbHMgPSAxODsKICAgICAgICB0b3RhbFN1cHBseSA9IF90b3RhbFN1cHBseTsKCiAgICAgICAgY3JlYXRvciA9IHR4Lm9yaWdpbjsKICAgICAgICBDcmVhdGVkKGNyZWF0b3IsIF90b3RhbFN1cHBseSk7CiAgICAgICAgYmFsYW5jZXNbY3JlYXRvcl0gPSBfdG90YWxTdXBwbHk7CiAgICB9CgogICAgLy8gRG9uJ3QgbGV0IHBlb3BsZSByYW5kb21seSBzZW5kIEVUSCB0byBjb250cmFjdAogICAgZnVuY3Rpb24oKSBwdWJsaWMgcGF5YWJsZSB7CiAgICAgICAgcmV2ZXJ0KCk7CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgcmVxdWlyZShiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfdmFsdWUpOwogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdIC09IF92YWx1ZTsKICAgICAgICBiYWxhbmNlc1tfdG9dICs9IF92YWx1ZTsKICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIHVpbnQyNTYgYWxsb3dhbmNlID0gYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl07CiAgICAgICAgcmVxdWlyZShiYWxhbmNlc1tfZnJvbV0gPj0gX3ZhbHVlICYmIGFsbG93YW5jZSA+PSBfdmFsdWUpOwogICAgICAgIGJhbGFuY2VzW190b10gKz0gX3ZhbHVlOwogICAgICAgIGJhbGFuY2VzW19mcm9tXSAtPSBfdmFsdWU7CiAgICAgICAgaWYgKGFsbG93YW5jZSA8IE1BWF9VSU5UMjU2KSB7CiAgICAgICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdIC09IF92YWx1ZTsKICAgICAgICB9CiAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgewogICAgICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogICAgfQoKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsKICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKSB7CiAgICAgICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIHNldExvZ29VUkwoc3RyaW5nIHVybCkgcHVibGljIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gY3JlYXRvcik7CiAgICAgICAgbG9nb1VSTCA9IHVybDsKICAgIH0KfQoKLy8gU2FtcGxlIGNvbnN0cnVjdG9yIGFyZ3MKLy8gIjB4NTQ2ODY1MjA3NDZmNmI2NTZlMjA2NjZmNzIyMDYxNzc2NTczNmY2ZDY1MjA3MDY1NmY3MDZjNjUyZSIsICIweDY4NzQ3NDcwNzMzYTJmMmY2OTJlNjk2ZDY3NzU3MjJlNjM2ZjZkMmY1YTMzNjg3MTc1NmM0OTJlNmE3MDY3IiwgIjB4NDE3NzY1NzM2ZjZkNjUyMDU0NmY2YjY1NmUiLCAiMHg0MTU3NDUiLCAiMHg1MmI3ZDJkY2M4MGNkMmU0MDAwMDAwIgoKY29udHJhY3QgQ29pbnNsaW5nIHsKCiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKCiAgICBmdW5jdGlvbiBDb2luc2xpbmcoKSBwdWJsaWMgewogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgIH0KCiAgICBldmVudCBUb2tlbkNyZWF0ZWQoYWRkcmVzcyB0b2tlbik7CiAgICBmdW5jdGlvbiBzbGluZygKICAgICAgICBzdHJpbmcgX2Rlc2NyaXB0aW9uLAogICAgICAgIHN0cmluZyBfbG9nb1VSTCwKICAgICAgICBzdHJpbmcgX25hbWUsCiAgICAgICAgc3RyaW5nIF9zeW1ib2wsCiAgICAgICAgdWludCAgIF90b3RhbFN1cHBseQogICAgKSBwdWJsaWMgcGF5YWJsZSByZXR1cm5zIChUb2tlbiB0b2tlbikKICAgIHsKICAgICAgICB0b2tlbiA9IG5ldyBUb2tlbigKICAgICAgICAgICAgX2Rlc2NyaXB0aW9uLAogICAgICAgICAgICBfbG9nb1VSTCwKICAgICAgICAgICAgX25hbWUsCiAgICAgICAgICAgIF9zeW1ib2wsCiAgICAgICAgICAgIF90b3RhbFN1cHBseQogICAgICAgICk7CgogICAgICAgIFRva2VuQ3JlYXRlZCh0b2tlbik7CiAgICAgICAgcmV0dXJuIHRva2VuOwogICAgfQoKICAgIC8vIFRoaXMgYWxsb3dzIG1lIHRvIGNvbGxlY3QgdGhlIHJldmVudWUgcGFpZCBpbnRvIHRoZSBjb250cmFjdAogICAgZnVuY3Rpb24gdHJhbnNmZXIodWludCBhbW91bnQsIGFkZHJlc3MgdG8pIHB1YmxpYyB7CiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyKTsKICAgICAgICB0by50cmFuc2ZlcihhbW91bnQpOwogICAgfQp9'.
	

]
