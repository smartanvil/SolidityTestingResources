Class {
	#name : #SRT90a8ed56E469e16dF02151c1C3273de3fc917F6F,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT90a8ed56E469e16dF02151c1C3273de3fc917F6F >> base64 [
	^ ''.
	

]
