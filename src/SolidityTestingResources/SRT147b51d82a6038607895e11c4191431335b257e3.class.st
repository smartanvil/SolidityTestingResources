Class {
	#name : #SRT147b51d82a6038607895e11c4191431335b257e3,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT147b51d82a6038607895e11c4191431335b257e3 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgovKgogICAgMjAxOCBQcm94eWNhcmQKKi8KCi8vIEFic3RyYWN0IGNvbnRyYWN0IGZvciB0aGUgZnVsbCBFUkMgMjAgVG9rZW4gc3RhbmRhcmQKLy8gaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL0VJUHMvaXNzdWVzLzIwCgppbnRlcmZhY2UgRVJDMjBUb2tlbiB7CgkvLy8gQHBhcmFtIF9vd25lciBUaGUgYWRkcmVzcyBmcm9tIHdoaWNoIHRoZSBiYWxhbmNlIHdpbGwgYmUgcmV0cmlldmVkCgkvLy8gQHJldHVybiBUaGUgYmFsYW5jZQoJZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2KTsKCgkvLy8gQG5vdGljZSBzZW5kIGBfdmFsdWVgIHRva2VuIHRvIGBfdG9gIGZyb20gYG1zZy5zZW5kZXJgCgkvLy8gQHBhcmFtIF90byBUaGUgYWRkcmVzcyBvZiB0aGUgcmVjaXBpZW50CgkvLy8gQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IG9mIHRva2VuIHRvIGJlIHRyYW5zZmVycmVkCgkvLy8gQHJldHVybiBXaGV0aGVyIHRoZSB0cmFuc2ZlciB3YXMgc3VjY2Vzc2Z1bCBvciBub3QKCWZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpOwoKCS8vLyBAbm90aWNlIHNlbmQgYF92YWx1ZWAgdG9rZW4gdG8gYF90b2AgZnJvbSBgX2Zyb21gIG9uIHRoZSBjb25kaXRpb24gaXQgaXMgYXBwcm92ZWQgYnkgYF9mcm9tYAoJLy8vIEBwYXJhbSBfZnJvbSBUaGUgYWRkcmVzcyBvZiB0aGUgc2VuZGVyCgkvLy8gQHBhcmFtIF90byBUaGUgYWRkcmVzcyBvZiB0aGUgcmVjaXBpZW50CgkvLy8gQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IG9mIHRva2VuIHRvIGJlIHRyYW5zZmVycmVkCgkvLy8gQHJldHVybiBXaGV0aGVyIHRoZSB0cmFuc2ZlciB3YXMgc3VjY2Vzc2Z1bCBvciBub3QKCWZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKTsKCgkvLy8gQG5vdGljZSBgbXNnLnNlbmRlcmAgYXBwcm92ZXMgYF9zcGVuZGVyYCB0byBzcGVuZCBgX3ZhbHVlYCB0b2tlbnMKCS8vLyBAcGFyYW0gX3NwZW5kZXIgVGhlIGFkZHJlc3Mgb2YgdGhlIGFjY291bnQgYWJsZSB0byB0cmFuc2ZlciB0aGUgdG9rZW5zCgkvLy8gQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IG9mIHRva2VucyB0byBiZSBhcHByb3ZlZCBmb3IgdHJhbnNmZXIKCS8vLyBAcmV0dXJuIFdoZXRoZXIgdGhlIGFwcHJvdmFsIHdhcyBzdWNjZXNzZnVsIG9yIG5vdAoJZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpOwoKCS8vLyBAcGFyYW0gX293bmVyIFRoZSBhZGRyZXNzIG9mIHRoZSBhY2NvdW50IG93bmluZyB0b2tlbnMKCS8vLyBAcGFyYW0gX3NwZW5kZXIgVGhlIGFkZHJlc3Mgb2YgdGhlIGFjY291bnQgYWJsZSB0byB0cmFuc2ZlciB0aGUgdG9rZW5zCgkvLy8gQHJldHVybiBBbW91bnQgb2YgcmVtYWluaW5nIHRva2VucyBhbGxvd2VkIHRvIHNwZW50CglmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYpOwoKCWV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwoJZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7Cn0KCmNvbnRyYWN0IE93bmVkIHsKICAgIC8vLyBAbm90aWNlIFRoZSBhZGRyZXNzIG9mIHRoZSBvd25lciBpcyB0aGUgb25seSBhZGRyZXNzIHRoYXQgY2FuIGNhbGwKICAgIC8vLyAgYSBmdW5jdGlvbiB3aXRoIHRoaXMgbW9kaWZpZXIKICAgIG1vZGlmaWVyIG9ubHlPd25lciB7IHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7IF87IH0KCiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKCiAgICBmdW5jdGlvbiBPd25lZCgpIHB1YmxpYyB7IG93bmVyID0gbXNnLnNlbmRlcjt9CgogICAgLy8vIEBub3RpY2UgQ2hhbmdlcyB0aGUgb3duZXIgb2YgdGhlIGNvbnRyYWN0CiAgICAvLy8gQHBhcmFtIF9uZXdPd25lciBUaGUgbmV3IG93bmVyIG9mIHRoZSBjb250cmFjdAogICAgZnVuY3Rpb24gY2hhbmdlT3duZXIoYWRkcmVzcyBfbmV3T3duZXIpIG9ubHlPd25lciBwdWJsaWMgewogICAgICAgIG93bmVyID0gX25ld093bmVyOwogICAgfQp9CgpsaWJyYXJ5IFNhZmVNYXRoTW9kIHsvLyBQYXJ0aWFsIFNhZmVNYXRoIExpYnJhcnkKCiAgICBmdW5jdGlvbiBzdWIodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NiBjKSB7CiAgICAgICAgcmVxdWlyZSgoYyA9IGEgLSBiKSA8IGEpOwogICAgfQoKICAgIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2IGMpIHsKICAgICAgICByZXF1aXJlKChjID0gYSArIGIpID4gYSk7CiAgICB9Cn0KCmNvbnRyYWN0IEVQUlggaXMgT3duZWQsIEVSQzIwVG9rZW4gIHsKICAgIHVzaW5nIFNhZmVNYXRoTW9kIGZvciB1aW50MjU2OwoKICAgIC8qKgogICAgKiBAY29uc3RhbnQgbmFtZSBUaGUgbmFtZSBvZiB0aGUgdG9rZW4KICAgICogQGNvbnN0YW50IHN5bWJvbCAgVGhlIHN5bWJvbCB1c2VkIHRvIGRpc3BsYXkgdGhlIGN1cnJlbmN5CiAgICAqIEBjb25zdGFudCBkZWNpbWFscyAgVGhlIG51bWJlciBvZiBkZWNpbWFscyB1c2VkIHRvIGRpc3BsYXkgYSBiYWxhbmNlCiAgICAqIEBjb25zdGFudCB0b3RhbFN1cHBseSBUaGUgdG90YWwgbnVtYmVyIG9mIHRva2VucyB0aW1lcyAxMF4gb2YgdGhlIG51bWJlciBvZiBkZWNpbWFscwogICAgKiBAY29uc3RhbnQgTUFYX1VJTlQyNTYgTWFnaWMgbnVtYmVyIGZvciB1bmxpbWl0ZWQgYWxsb3dhbmNlCiAgICAqIEBzdG9yYWdlIGJhbGFuY2VPZiBIb2xkcyB0aGUgYmFsYW5jZXMgb2YgYWxsIHRva2VuIGhvbGRlcnMKICAgICogQHN0b3JhZ2UgYWxsb3dlZCBIb2xkcyB0aGUgYWxsb3dhYmxlIGJhbGFuY2UgdG8gYmUgdHJhbnNmZXJhYmxlIGJ5IGFub3RoZXIgYWRkcmVzcy4KICAgICovCgogICAgc3RyaW5nIGNvbnN0YW50IHB1YmxpYyBuYW1lID0gImVQcm94eSI7CgogICAgc3RyaW5nIGNvbnN0YW50IHB1YmxpYyBzeW1ib2wgPSAiZVBSWCI7CgogICAgdWludDggY29uc3RhbnQgcHVibGljIGRlY2ltYWxzID0gODsKCiAgICB1aW50MjU2IGNvbnN0YW50IHB1YmxpYyB0b3RhbFN1cHBseSA9IDUwMDAwMDAwZTg7CgkKCWFkZHJlc3MgcHVibGljIGlzc3VpbmdUb2tlbk93bmVyOwoKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIGJhbGFuY2VPZjsKCiAgICAvLyBgYWxsb3dlZGAgdHJhY2tzIGFueSBleHRyYSB0cmFuc2ZlciByaWdodHMgYXMgaW4gYWxsIEVSQzIwIHRva2VucwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBwdWJsaWMgYWxsb3dlZDsKCiAgICAvLyBGbGFnIHRoYXQgZGV0ZXJtaW5lcyBpZiB0aGUgdG9rZW4gaXMgdHJhbnNmZXJhYmxlIG9yIG5vdC4KICAgIGJvb2wgcHVibGljIHRyYW5zZmVyc0VuYWJsZWQ7CgoJLy8vLy8vLy8vLy8vLy8vLwoJLy8gRXZlbnRzCgkvLy8vLy8vLy8vLy8vLy8vCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsKICAgIGV2ZW50IFRyYW5zZmVyRnJvbShhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7CQogICAgZXZlbnQgQ2xhaW1lZFRva2VucyhhZGRyZXNzIGluZGV4ZWQgX3Rva2VuLCBhZGRyZXNzIGluZGV4ZWQgX093bmVyLCB1aW50MjU2IF9hbW91bnQpOwogICAgZXZlbnQgU3dhcHBlZFRva2VucyhhZGRyZXNzIGluZGV4ZWQgX293bmVyLCB1aW50MjU2IF9hbW91bnRPZmZlcmVkLCB1aW50MjU2IF9hbW91bnRSZWNlaXZlZCk7CiAKIAkvLy8vLy8vLy8vLy8vLy8vCgkvLyBDb25zdHJ1Y3RvcgoJLy8vLy8vLy8vLy8vLy8vLyAgIAogICAgZnVuY3Rpb24gRVBSWCgpIHB1YmxpYyB7IAoJCWlzc3VpbmdUb2tlbk93bmVyID0gbXNnLnNlbmRlcjsKICAgICAgICBiYWxhbmNlT2ZbaXNzdWluZ1Rva2VuT3duZXJdID0gdG90YWxTdXBwbHk7IAogICAgICAgIHRyYW5zZmVyc0VuYWJsZWQgPSB0cnVlOwogICAgfQoKCS8vLy8vLy8vLy8vLy8vLy8vLy8KCS8vIEVSQzIwIE1ldGhvZHMKCS8vLy8vLy8vLy8vLy8vLy8vLy8KCiAgICAvLy8gQG5vdGljZSBTZW5kIGBfYW1vdW50YCB0b2tlbnMgdG8gYF90b2AgZnJvbSBgbXNnLnNlbmRlcmAKICAgIC8vLyBAcGFyYW0gX3RvIFRoZSBhZGRyZXNzIG9mIHRoZSByZWNpcGllbnQKICAgIC8vLyBAcGFyYW0gX2Ftb3VudCBUaGUgYW1vdW50IG9mIHRva2VucyB0byBiZSB0cmFuc2ZlcnJlZAogICAgLy8vIEByZXR1cm4gV2hldGhlciB0aGUgdHJhbnNmZXIgd2FzIHN1Y2Nlc3NmdWwgb3Igbm90CiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfYW1vdW50KSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgaWYgKG1zZy5zZW5kZXIgIT0gb3duZXIpIHsKICAgICAgICAgICAgcmVxdWlyZSh0cmFuc2ZlcnNFbmFibGVkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGRvVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfYW1vdW50KTsKICAgIH0KCiAgICAvLy8gQG5vdGljZSBTZW5kIGBfYW1vdW50YCB0b2tlbnMgdG8gYF90b2AgZnJvbSBgX2Zyb21gIG9uIHRoZSBjb25kaXRpb24gaXQKICAgIC8vLyAgaXMgYXBwcm92ZWQgYnkgYF9mcm9tYAogICAgLy8vIEBwYXJhbSBfZnJvbSBUaGUgYWRkcmVzcyBob2xkaW5nIHRoZSB0b2tlbnMgYmVpbmcgdHJhbnNmZXJyZWQKICAgIC8vLyBAcGFyYW0gX3RvIFRoZSBhZGRyZXNzIG9mIHRoZSByZWNpcGllbnQKICAgIC8vLyBAcGFyYW0gX2Ftb3VudCBUaGUgYW1vdW50IG9mIHRva2VucyB0byBiZSB0cmFuc2ZlcnJlZAogICAgLy8vIEByZXR1cm4gVHJ1ZSBpZiB0aGUgdHJhbnNmZXIgd2FzIHN1Y2Nlc3NmdWwKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfYW1vdW50CiAgICApIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKCiAgICAgICAgLy8gVGhlIG93bmVyIG9mIHRoaXMgY29udHJhY3QgY2FuIG1vdmUgdG9rZW5zIGFyb3VuZCBhdCB3aWxsLAogICAgICAgIC8vICB0aGlzIGlzIGltcG9ydGFudCB0byByZWNvZ25pemUhIENvbmZpcm0gdGhhdCB5b3UgdHJ1c3QgdGhlCiAgICAgICAgLy8gIG93bmVyIG9mIHRoaXMgY29udHJhY3QKICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lcikgewogICAgICAgICAgICByZXF1aXJlKHRyYW5zZmVyc0VuYWJsZWQpOwoKICAgICAgICAgICAgLy8gVGhlIHN0YW5kYXJkIEVSQzIwIHRyYW5zZmVyRnJvbSBmdW5jdGlvbmFsaXR5CiAgICAgICAgICAgIC8vIHJlcXVpcmUoYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gPj0gX2Ftb3VudCk7CgkJCWFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID0gYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0uc3ViKF9hbW91bnQpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIGRvVHJhbnNmZXIoX2Zyb20sIF90bywgX2Ftb3VudCk7CiAgICB9CgogICAgLy8vIEBkZXYgVGhpcyBpcyB0aGUgYWN0dWFsIHRyYW5zZmVyIGZ1bmN0aW9uIGluIHRoZSB0b2tlbiBjb250cmFjdCwgaXQgY2FuCiAgICAvLy8gIG9ubHkgYmUgY2FsbGVkIGJ5IG90aGVyIGZ1bmN0aW9ucyBpbiB0aGlzIGNvbnRyYWN0LgogICAgLy8vIEBwYXJhbSBfZnJvbSBUaGUgYWRkcmVzcyBob2xkaW5nIHRoZSB0b2tlbnMgYmVpbmcgdHJhbnNmZXJyZWQKICAgIC8vLyBAcGFyYW0gX3RvIFRoZSBhZGRyZXNzIG9mIHRoZSByZWNpcGllbnQKICAgIC8vLyBAcGFyYW0gX2Ftb3VudCBUaGUgYW1vdW50IG9mIHRva2VucyB0byBiZSB0cmFuc2ZlcnJlZAogICAgLy8vIEByZXR1cm4gVHJ1ZSBpZiB0aGUgdHJhbnNmZXIgd2FzIHN1Y2Nlc3NmdWwKICAgIGZ1bmN0aW9uIGRvVHJhbnNmZXIoYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQgX2Ftb3VudAogICAgKSBpbnRlcm5hbCByZXR1cm5zKGJvb2wpIHsKCQoJCWlmKF9hbW91bnQgPT0gMCkgewoJCQlyZXR1cm4gdHJ1ZTsKCQl9CgoJCS8vIERvIG5vdCBhbGxvdyB0cmFuc2ZlciB0byAweDAgb3IgdGhlIHRva2VuIGNvbnRyYWN0IGl0c2VsZgoJCXJlcXVpcmUoKF90byAhPSAwKSAmJiAoX3RvICE9IGFkZHJlc3ModGhpcykpKTsKCgkJLyogU2FmZU1hdGhNT2Quc3ViIHdpbGwgdGhyb3cgaWYgdGhlcmUgaXMgbm90IGVub3VnaCBiYWxhbmNlCgkJICAgYW5kIGlmIHRoZSB0cmFuc2ZlciB2YWx1ZSBpcyAwLiAqLwoJCWJhbGFuY2VPZltfZnJvbV0gPSBiYWxhbmNlT2ZbX2Zyb21dLnN1YihfYW1vdW50KTsKCQliYWxhbmNlT2ZbX3RvXSA9IGJhbGFuY2VPZltfdG9dLmFkZChfYW1vdW50KTsKCgkJLy8gQW4gZXZlbnQgdG8gbWFrZSB0aGUgdHJhbnNmZXIgZWFzeSB0byBmaW5kIG9uIHRoZSBibG9ja2NoYWluCgkJVHJhbnNmZXIoX2Zyb20sIF90bywgX2Ftb3VudCk7CgogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIC8vLyBAcGFyYW0gX293bmVyIFRoZSBhZGRyZXNzIHRoYXQncyBiYWxhbmNlIGlzIGJlaW5nIHJlcXVlc3RlZAogICAgLy8vIEByZXR1cm4gVGhlIGJhbGFuY2Ugb2YgYF9vd25lcmAgYXQgdGhlIGN1cnJlbnQgYmxvY2sKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHJldHVybiBiYWxhbmNlT2ZbX293bmVyXTsKICAgIH0KCiAgICAvLy8gQG5vdGljZSBgbXNnLnNlbmRlcmAgYXBwcm92ZXMgYF9zcGVuZGVyYCB0byBzcGVuZCBgX2Ftb3VudGAgdG9rZW5zIG9uCiAgICAvLy8gIGl0cyBiZWhhbGYuIFRoaXMgaXMgYSBtb2RpZmllZCB2ZXJzaW9uIG9mIHRoZSBFUkMyMCBhcHByb3ZlIGZ1bmN0aW9uCiAgICAvLy8gIHRvIGJlIGEgbGl0dGxlIGJpdCBzYWZlcgogICAgLy8vIEBwYXJhbSBfc3BlbmRlciBUaGUgYWRkcmVzcyBvZiB0aGUgYWNjb3VudCBhYmxlIHRvIHRyYW5zZmVyIHRoZSB0b2tlbnMKICAgIC8vLyBAcGFyYW0gX2Ftb3VudCBUaGUgYW1vdW50IG9mIHRva2VucyB0byBiZSBhcHByb3ZlZCBmb3IgdHJhbnNmZXIKICAgIC8vLyBAcmV0dXJuIFRydWUgaWYgdGhlIGFwcHJvdmFsIHdhcyBzdWNjZXNzZnVsCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX2Ftb3VudCkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgICAgICByZXF1aXJlKHRyYW5zZmVyc0VuYWJsZWQpOwoKICAgICAgICAvKiBFbnN1cmVzIGFkZHJlc3MgIjB4MCIgaXMgbm90IGFzc2lnbmVkIGFsbG93YW5jZS4gKi8KICAgICAgICByZXF1aXJlKF9zcGVuZGVyICE9IGFkZHJlc3MoMCkpOwoKICAgICAgICAvLyBUbyBjaGFuZ2UgdGhlIGFwcHJvdmUgYW1vdW50IHlvdSBmaXJzdCBoYXZlIHRvIHJlZHVjZSB0aGUgYWRkcmVzc2VzYAogICAgICAgIC8vICBhbGxvd2FuY2UgdG8gemVybyBieSBjYWxsaW5nIGBhcHByb3ZlKF9zcGVuZGVyLDApYCBpZiBpdCBpcyBub3QKICAgICAgICAvLyAgYWxyZWFkeSAwIHRvIG1pdGlnYXRlIHRoZSByYWNlIGNvbmRpdGlvbiBkZXNjcmliZWQgaGVyZToKICAgICAgICAvLyAgaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL0VJUHMvaXNzdWVzLzIwI2lzc3VlY29tbWVudC0yNjM1MjQ3MjkKICAgICAgICByZXF1aXJlKChfYW1vdW50ID09IDApIHx8IChhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9PSAwKSk7CgogICAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX2Ftb3VudDsKICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX2Ftb3VudCk7CgkJCiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgLy8vIEBkZXYgVGhpcyBmdW5jdGlvbiBtYWtlcyBpdCBlYXN5IHRvIHJlYWQgdGhlIGBhbGxvd2VkW11gIG1hcAogICAgLy8vIEBwYXJhbSBfb3duZXIgVGhlIGFkZHJlc3Mgb2YgdGhlIGFjY291bnQgdGhhdCBvd25zIHRoZSB0b2tlbgogICAgLy8vIEBwYXJhbSBfc3BlbmRlciBUaGUgYWRkcmVzcyBvZiB0aGUgYWNjb3VudCBhYmxlIHRvIHRyYW5zZmVyIHRoZSB0b2tlbnMKICAgIC8vLyBAcmV0dXJuIEFtb3VudCBvZiByZW1haW5pbmcgdG9rZW5zIG9mIF9vd25lciB0aGF0IF9zcGVuZGVyIGlzIGFsbG93ZWQKICAgIC8vLyAgdG8gc3BlbmQKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcgogICAgKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2IHJlbWFpbmluZykgewogICAgICAgIHJldHVybiBhbGxvd2VkW19vd25lcl1bX3NwZW5kZXJdOwogICAgfQoKCS8vLy8vLy8vLy8vLy8vLy8KCS8vIEVuYWJsZSB0b2tlbnMgdHJhbnNmZXJzCgkvLy8vLy8vLy8vLy8vLy8vCgogICAgLy8vIEBub3RpY2UgRW5hYmxlcyB0b2tlbiBob2xkZXJzIHRvIHRyYW5zZmVyIHRoZWlyIHRva2VucyBmcmVlbHkgaWYgdHJ1ZQogICAgLy8vIEBwYXJhbSBfdHJhbnNmZXJzRW5hYmxlZCBUcnVlIGlmIHRyYW5zZmVycyBhcmUgYWxsb3dlZCBpbiB0aGUgY2xvbmUKICAgIGZ1bmN0aW9uIGVuYWJsZVRyYW5zZmVycyhib29sIF90cmFuc2ZlcnNFbmFibGVkKSBvbmx5T3duZXIgcHVibGljIHsKICAgICAgICB0cmFuc2ZlcnNFbmFibGVkID0gX3RyYW5zZmVyc0VuYWJsZWQ7CiAgICB9CgoJLy8vLy8vLy8vLwoJLy8gU2FmZXR5IE1ldGhvZHMKCS8vLy8vLy8vLy8KCiAgICAvLy8gQG5vdGljZSBUaGlzIG1ldGhvZCBjYW4gYmUgdXNlZCBieSB0aGUgb3duZXIgdG8gZXh0cmFjdCBtaXN0YWtlbmx5CiAgICAvLy8gIHNlbnQgdG9rZW5zIHRvIHRoaXMgY29udHJhY3QuCiAgICAvLy8gQHBhcmFtIF90b2tlbiBUaGUgYWRkcmVzcyBvZiB0aGUgdG9rZW4gY29udHJhY3QgdGhhdCB5b3Ugd2FudCB0byByZWNvdmVyCiAgICAvLy8gIHNldCB0byAwIGluIGNhc2UgeW91IHdhbnQgdG8gZXh0cmFjdCBldGhlci4KICAgIGZ1bmN0aW9uIGNsYWltVG9rZW5zKGFkZHJlc3MgX3Rva2VuKSBvbmx5T3duZXIgcHVibGljIHsKICAgICAgICAvLyBUcmFuc2ZlciBldGhlcgogICAgICAgIGlmIChfdG9rZW4gPT0gMHgwKSB7CiAgICAgICAgICAgIG93bmVyLnRyYW5zZmVyKHRoaXMuYmFsYW5jZSk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIEVSQzIwVG9rZW4gdG9rZW4gPSBFUkMyMFRva2VuKF90b2tlbik7CiAgICAgICAgdWludCBiYWxhbmNlID0gdG9rZW4uYmFsYW5jZU9mKHRoaXMpOwogICAgICAgIHRva2VuLnRyYW5zZmVyKG93bmVyLCBiYWxhbmNlKTsKICAgICAgICBDbGFpbWVkVG9rZW5zKF90b2tlbiwgb3duZXIsIGJhbGFuY2UpOwogICAgfQoKICAgIC8vLyBAbm90aWNlIFRoaXMgbWV0aG9kIGNhbiBiZSB1c2VkIGJ5IHVzZXJzIGhvbGRpbmcgb2xkIHByb3h5IHRva2VucwogICAgLy8vICB0byBzd2FwIGZvciBuZXcgdG9rZW5zIGF0IHRoZSByYXRpbyBvZiAxIDogMi4KICAgIGZ1bmN0aW9uIHN3YXBQcm94eVRva2VucygpIHB1YmxpYyB7CiAgICAgICAgRVJDMjBUb2tlbiBvbGRUb2tlbiA9IEVSQzIwVG9rZW4oMHg4MUJFOTFjN0U3NEFkMDk1N0I0MTU2Rjc4MjI2M2U3QjBCODhjRjdiKTsKICAgICAgICB1aW50MjU2IG9sZFRva2VuQmFsYW5jZSA9IG9sZFRva2VuLmJhbGFuY2VPZihtc2cuc2VuZGVyKTsKCiAgICAgICAgcmVxdWlyZShvbGRUb2tlbkJhbGFuY2UgPiAwKTsKCiAgICAgICAgLy8gVXNlciBtdXN0IGZpcnN0IGFwcHJvdmUgYWRkcmVzcyh0aGlzKSBhcyBhIHNwZW5kZXIgYnkgY2FsbGluZyB0aGUgYmVsb3cKICAgICAgICAvLyBhcHByb3ZlKDxhZGRyZXNzIG9mIHRoaXMgY29udHJhY3Q+LCBvbGRUb2tlbkJhbGFuY2UpOwoJCQogICAgICAgIC8vIENvbnZlcnQgb2xkIHByb3h5IHRva2VuIHRvIG5ldyB0b2tlbiBmb3IgYW55IHVzZXIgYXV0aG9yaXppbmcgdGhlIHRyYW5zZmVyCiAgICAgICAgaWYob2xkVG9rZW4udHJhbnNmZXJGcm9tKG1zZy5zZW5kZXIsIGlzc3VpbmdUb2tlbk93bmVyLCBvbGRUb2tlbkJhbGFuY2UpKSB7CiAgICAgICAgICAgIHJlcXVpcmUob2xkVG9rZW4uYmFsYW5jZU9mKG1zZy5zZW5kZXIpID09IDApOwoJCQkKICAgICAgICAgICAgLy8gVHJhbnNmZXIgbmV3IHRva2VuIHRvIHVzZXIKCQkJdWludDI1NiBuZXdUb2tlbkFtb3VudCA9IDIwMCAqIG9sZFRva2VuQmFsYW5jZTsKICAgICAgICAgICAgZG9UcmFuc2Zlcihpc3N1aW5nVG9rZW5Pd25lciwgbXNnLnNlbmRlciwgbmV3VG9rZW5BbW91bnQpOwoKICAgICAgICAgICAgU3dhcHBlZFRva2Vucyhtc2cuc2VuZGVyLCBvbGRUb2tlbkJhbGFuY2UsIG5ld1Rva2VuQW1vdW50KTsKICAgICAgICB9CiAgICAgICAgCiAgICB9Cgp9'.
	

]
