Class {
	#name : #SRTc8c6a31a4a806d3710a7b38b7b296d2fabccdba8,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTc8c6a31a4a806d3710a7b38b7b296d2fabccdba8 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTA7CgovLyBFbGl4aXIgKEVMSVgpCgpjb250cmFjdCBlbGl4aXIgewogICAgCnN0cmluZyBwdWJsaWMgbmFtZTsgCnN0cmluZyBwdWJsaWMgc3ltYm9sOyAKdWludDggcHVibGljIGRlY2ltYWxzOwp1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsKICAKLy8gQmFsYW5jZXMgZm9yIGVhY2ggYWNjb3VudAptYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikgYmFsYW5jZXM7Cgpib29sIHB1YmxpYyBiYWxhbmNlSW1wb3J0c0NvbXBsZXRlOwoKYWRkcmVzcyBleG9yQWRkcmVzczsKYWRkcmVzcyBkZXZBZGRyZXNzOwoKLy8gRXZlbnRzCmV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpOwpldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHZhbHVlKTsKICAKLy8gT3duZXIgb2YgYWNjb3VudCBhcHByb3ZlcyB0aGUgdHJhbnNmZXIgb2YgYW4gYW1vdW50IHRvIGFub3RoZXIgYWNjb3VudAptYXBwaW5nKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsKICAKZnVuY3Rpb24gZWxpeGlyKCkgewogICAgbmFtZSA9ICJlbGl4aXIiOwogICAgc3ltYm9sID0gIkVMSVgiOwogICAgZGVjaW1hbHMgPSAxODsKICAgIGRldkFkZHJlc3M9MHg4NTE5NkRhOTI2OUIyNGJEZjVGZkQyNjI0QUJCMzg3ZmNBMDUzODJCOwogICAgZXhvckFkZHJlc3M9MHg4OThiRjM5Y2Q2NzY1OGJkNjM1NzdmQjAwQTJBMzU3MWRBZWNiQzUzOwp9CgpmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgewogICAgcmV0dXJuIGJhbGFuY2VzW19vd25lcl07Cn0KCi8vIFRyYW5zZmVyIHRoZSBiYWxhbmNlIGZyb20gb3duZXIncyBhY2NvdW50IHRvIGFub3RoZXIgYWNjb3VudApmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfYW1vdW50KSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgIGlmIChiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfYW1vdW50IAogICAgICAgICYmIF9hbW91bnQgPiAwCiAgICAgICAgJiYgYmFsYW5jZXNbX3RvXSArIF9hbW91bnQgPiBiYWxhbmNlc1tfdG9dKSB7CiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gLT0gX2Ftb3VudDsKICAgICAgICBiYWxhbmNlc1tfdG9dICs9IF9hbW91bnQ7CiAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfYW1vdW50KTsgCiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KfQoKZnVuY3Rpb24gY3JlYXRlQW1vdW50RnJvbUVYT1JGb3JBZGRyZXNzKHVpbnQyNTYgYW1vdW50LGFkZHJlc3MgYWRkcmVzc1Byb2R1Y2luZykgcHVibGljIHsKICAgIGlmIChtc2cuc2VuZGVyPT1leG9yQWRkcmVzcykgewogICAgICAgIC8vZXh0cmEgYXV0aAogICAgICAgIGVsaXhvciBFWE9SQ29udHJhY3Q9ZWxpeG9yKGV4b3JBZGRyZXNzKTsKICAgICAgICBpZiAoRVhPUkNvbnRyYWN0LnJldHVybkFtb3VudE9mRUxJWEFkZHJlc3NDYW5Qcm9kdWNlKGFkZHJlc3NQcm9kdWNpbmcpPT1hbW91bnQpewogICAgICAgICAgICAvLyBUaGV5IGFyZSBidXJuaW5nIEVYT1IgdG8gbWFrZSBFTElYCiAgICAgICAgICAgIGJhbGFuY2VzW2FkZHJlc3NQcm9kdWNpbmddKz1hbW91bnQ7CiAgICAgICAgICAgIHRvdGFsU3VwcGx5Kz1hbW91bnQ7CiAgICAgICAgfQogICAgfQp9CgpmdW5jdGlvbiB0cmFuc2ZlckZyb20oCiAgICBhZGRyZXNzIF9mcm9tLAogICAgYWRkcmVzcyBfdG8sCiAgICB1aW50MjU2IF9hbW91bnQKKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgIGlmIChiYWxhbmNlc1tfZnJvbV0gPj0gX2Ftb3VudAogICAgICAgICYmIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID49IF9hbW91bnQKICAgICAgICAmJiBfYW1vdW50ID4gMAogICAgICAgICYmIGJhbGFuY2VzW190b10gKyBfYW1vdW50ID4gYmFsYW5jZXNbX3RvXSkgewogICAgICAgIGJhbGFuY2VzW19mcm9tXSAtPSBfYW1vdW50OwogICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdIC09IF9hbW91bnQ7CiAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfYW1vdW50OwogICAgICAgIHJldHVybiB0cnVlOwogICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICB9Cn0KCi8vIExvY2tzIHVwIGFsbCBjaGFuZ2VzIHRvIGJhbGFuY2VzCmZ1bmN0aW9uIGxvY2tCYWxhbmNlQ2hhbmdlcygpIHsKICAgIGlmICh0eC5vcmlnaW49PWRldkFkZHJlc3MpIHsgLy8gRGV2IGFkZHJlc3MKICAgICAgIGJhbGFuY2VJbXBvcnRzQ29tcGxldGU9dHJ1ZTsKICAgfQp9CgovLyBEZXZzIHdpbGwgdXBsb2FkIGJhbGFuY2VzIHNuYXBzaG90IG9mIGJsb2NrY2hhaW4gdmlhIHRoaXMgZnVuY3Rpb24uCmZ1bmN0aW9uIGltcG9ydEFtb3VudEZvckFkZHJlc3Nlcyh1aW50MjU2W10gYW1vdW50cyxhZGRyZXNzW10gYWRkcmVzc2VzVG9BZGRUbykgcHVibGljIHsKICAgaWYgKHR4Lm9yaWdpbj09ZGV2QWRkcmVzcykgeyAvLyBEZXYgYWRkcmVzcwogICAgICAgaWYgKCFiYWxhbmNlSW1wb3J0c0NvbXBsZXRlKSAgewogICAgICAgICAgIGZvciAodWludDI1NiBpPTA7aTxhZGRyZXNzZXNUb0FkZFRvLmxlbmd0aDtpKyspICB7CiAgICAgICAgICAgICAgICBhZGRyZXNzIGFkZHJlc3NUb0FkZFRvPWFkZHJlc3Nlc1RvQWRkVG9baV07CiAgICAgICAgICAgICAgICB1aW50MjU2IGFtb3VudD1hbW91bnRzW2ldOwogICAgICAgICAgICAgICAgYmFsYW5jZXNbYWRkcmVzc1RvQWRkVG9dKz1hbW91bnQ7CiAgICAgICAgICAgICAgICB0b3RhbFN1cHBseSs9YW1vdW50OwogICAgICAgICAgIH0KICAgICAgIH0KICAgfQp9CgovLyBFeHRyYSBiYWxhbmNlIHJlbW92YWwgaW4gY2FzZSBhbnkgaXNzdWVzIGFyaXNlLiBEbyBub3QgYW50aWNpcGF0ZSB1c2luZyB0aGlzIGZ1bmN0aW9uLgpmdW5jdGlvbiByZW1vdmVBbW91bnRGb3JBZGRyZXNzZXModWludDI1NltdIGFtb3VudHMsYWRkcmVzc1tdIGFkZHJlc3Nlc1RvUmVtb3ZlRnJvbSkgcHVibGljIHsKICAgaWYgKHR4Lm9yaWdpbj09ZGV2QWRkcmVzcykgeyAvLyBEZXYgYWRkcmVzcwogICAgICAgaWYgKCFiYWxhbmNlSW1wb3J0c0NvbXBsZXRlKSAgewogICAgICAgICAgIGZvciAodWludDI1NiBpPTA7aTxhZGRyZXNzZXNUb1JlbW92ZUZyb20ubGVuZ3RoO2krKykgIHsKICAgICAgICAgICAgICAgIGFkZHJlc3MgYWRkcmVzc1RvUmVtb3ZlRnJvbT1hZGRyZXNzZXNUb1JlbW92ZUZyb21baV07CiAgICAgICAgICAgICAgICB1aW50MjU2IGFtb3VudD1hbW91bnRzW2ldOwogICAgICAgICAgICAgICAgYmFsYW5jZXNbYWRkcmVzc1RvUmVtb3ZlRnJvbV0tPWFtb3VudDsKICAgICAgICAgICAgICAgIHRvdGFsU3VwcGx5LT1hbW91bnQ7CiAgICAgICAgICAgfQogICAgICAgfQogICB9Cn0KCi8vIE1hbnVhbCBvdmVycmlkZSBmb3IgdG90YWwgc3VwcGx5IGluIGNhc2UgYW55IGlzc3VlcyBhcmlzZS4gRG8gbm90IGFudGljaXBhdGUgdXNpbmcgdGhpcyBmdW5jdGlvbi4KZnVuY3Rpb24gcmVtb3ZlRnJvbVRvdGFsU3VwcGx5KHVpbnQyNTYgYW1vdW50KSBwdWJsaWMgewogICBpZiAodHgub3JpZ2luPT1kZXZBZGRyZXNzKSB7IC8vIERldiBhZGRyZXNzCiAgICAgICBpZiAoIWJhbGFuY2VJbXBvcnRzQ29tcGxldGUpICB7CiAgICAgICAgICAgIHRvdGFsU3VwcGx5LT1hbW91bnQ7CiAgICAgICB9CiAgIH0KfQoKCi8vIEFsbG93IF9zcGVuZGVyIHRvIHdpdGhkcmF3IGZyb20geW91ciBhY2NvdW50LCBtdWx0aXBsZSB0aW1lcywgdXAgdG8gdGhlIF92YWx1ZSBhbW91bnQuCi8vIElmIHRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkIGFnYWluIGl0IG92ZXJ3cml0ZXMgdGhlIGN1cnJlbnQgYWxsb3dhbmNlIHdpdGggX3ZhbHVlLgpmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX2Ftb3VudCkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF9hbW91bnQ7CiAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX2Ftb3VudCk7CiAgICByZXR1cm4gdHJ1ZTsKfQp9Cgpjb250cmFjdCBlbGl4b3IgewogICAgZnVuY3Rpb24gcmV0dXJuQW1vdW50T2ZFTElYQWRkcmVzc0NhblByb2R1Y2UoYWRkcmVzcyBwcm9kdWNpbmdBZGRyZXNzKSBwdWJsaWMgcmV0dXJucyh1aW50MjU2KTsKfQ=='.
	

]
