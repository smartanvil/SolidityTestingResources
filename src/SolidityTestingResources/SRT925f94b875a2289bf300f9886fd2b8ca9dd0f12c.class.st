Class {
	#name : #SRT925f94b875a2289bf300f9886fd2b8ca9dd0f12c,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT925f94b875a2289bf300f9886fd2b8ca9dd0f12c >> base64 [
	^ ''.
	

]
