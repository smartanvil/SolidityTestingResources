Class {
	#name : #SRT08e4f70109ccc5135f50cc359d24cb7686247df4,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT08e4f70109ccc5135f50cc359d24cb7686247df4 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7CgoKCgovKioKICogQHRpdGxlIFNhZmVNYXRoCiAqIEBkZXYgTWF0aCBvcGVyYXRpb25zIHdpdGggc2FmZXR5IGNoZWNrcyB0aGF0IHRocm93IG9uIGVycm9yCiAqLwpsaWJyYXJ5IFNhZmVNYXRoIHsKCiAgLyoqCiAgKiBAZGV2IE11bHRpcGxpZXMgdHdvIG51bWJlcnMsIHRocm93cyBvbiBvdmVyZmxvdy4KICAqLwogIGZ1bmN0aW9uIG11bCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICBpZiAoYSA9PSAwKSB7CiAgICAgIHJldHVybiAwOwogICAgfQogICAgdWludDI1NiBjID0gYSAqIGI7CiAgICBhc3NlcnQoYyAvIGEgPT0gYik7CiAgICByZXR1cm4gYzsKICB9CgogIC8qKgogICogQGRldiBJbnRlZ2VyIGRpdmlzaW9uIG9mIHR3byBudW1iZXJzLCB0cnVuY2F0aW5nIHRoZSBxdW90aWVudC4KICAqLwogIGZ1bmN0aW9uIGRpdih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAKICAgIHVpbnQyNTYgYyA9IGEgLyBiOwogICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICAgIHJldHVybiBjOwogIH0KCiAgLyoqCiAgKiBAZGV2IFN1YnN0cmFjdHMgdHdvIG51bWJlcnMsIHRocm93cyBvbiBvdmVyZmxvdyAoaS5lLiBpZiBzdWJ0cmFoZW5kIGlzIGdyZWF0ZXIgdGhhbiBtaW51ZW5kKS4KICAqLwogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIC8qKgogICogQGRldiBBZGRzIHR3byBudW1iZXJzLCB0aHJvd3Mgb24gb3ZlcmZsb3cuCiAgKi8KICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KfQoKCgoKLyoqCiAqIEB0aXRsZSBFbGlwdGljIGN1cnZlIHNpZ25hdHVyZSBvcGVyYXRpb25zCiAqCiAqIEBkZXYgQmFzZWQgb24gaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vYXhpYy81YjMzOTEyYzZmNjFhZTZmZDk2ZDZjNGE0N2FmZGU2ZAogKi8KCmxpYnJhcnkgRUNSZWNvdmVyeSB7CgogIC8qKgogICAqIEBkZXYgUmVjb3ZlciBzaWduZXIgYWRkcmVzcyBmcm9tIGEgbWVzc2FnZSBieSB1c2luZyBoaXMgc2lnbmF0dXJlCiAgICogQHBhcmFtIGhhc2ggYnl0ZXMzMiBtZXNzYWdlLCB0aGUgaGFzaCBpcyB0aGUgc2lnbmVkIG1lc3NhZ2UuIFdoYXQgaXMgcmVjb3ZlcmVkIGlzIHRoZSBzaWduZXIgYWRkcmVzcy4KICAgKiBAcGFyYW0gc2lnIGJ5dGVzIHNpZ25hdHVyZSwgdGhlIHNpZ25hdHVyZSBpcyBnZW5lcmF0ZWQgdXNpbmcgd2ViMy5ldGguc2lnbigpCiAgICovCiAgZnVuY3Rpb24gcmVjb3ZlcihieXRlczMyIGhhc2gsIGJ5dGVzIHNpZykgcHVibGljIHB1cmUgcmV0dXJucyAoYWRkcmVzcykgewogICAgYnl0ZXMzMiByOwogICAgYnl0ZXMzMiBzOwogICAgdWludDggdjsKCiAgICAvL0NoZWNrIHRoZSBzaWduYXR1cmUgbGVuZ3RoCiAgICBpZiAoc2lnLmxlbmd0aCAhPSA2NSkgewogICAgICByZXR1cm4gKGFkZHJlc3MoMCkpOwogICAgfQoKICAgIC8vIERpdmlkZSB0aGUgc2lnbmF0dXJlIGluIHIsIHMgYW5kIHYgdmFyaWFibGVzCiAgICBhc3NlbWJseSB7CiAgICAgIHIgOj0gbWxvYWQoYWRkKHNpZywgMzIpKQogICAgICBzIDo9IG1sb2FkKGFkZChzaWcsIDY0KSkKICAgICAgdiA6PSBieXRlKDAsIG1sb2FkKGFkZChzaWcsIDk2KSkpCiAgICB9CgogICAgLy8gVmVyc2lvbiBvZiBzaWduYXR1cmUgc2hvdWxkIGJlIDI3IG9yIDI4LCBidXQgMCBhbmQgMSBhcmUgYWxzbyBwb3NzaWJsZSB2ZXJzaW9ucwogICAgaWYgKHYgPCAyNykgewogICAgICB2ICs9IDI3OwogICAgfQoKICAgIC8vIElmIHRoZSB2ZXJzaW9uIGlzIGNvcnJlY3QgcmV0dXJuIHRoZSBzaWduZXIgYWRkcmVzcwogICAgaWYgKHYgIT0gMjcgJiYgdiAhPSAyOCkgewogICAgICByZXR1cm4gKGFkZHJlc3MoMCkpOwogICAgfSBlbHNlIHsKICAgICAgcmV0dXJuIGVjcmVjb3ZlcihoYXNoLCB2LCByLCBzKTsKICAgIH0KICB9Cgp9CgoKCi8vLyBAdGl0bGUgVW5pZGlyZWN0aW9uYWwgRXRoZXIgcGF5bWVudCBjaGFubmVscyBjb250cmFjdC4KY29udHJhY3QgVW5pZGlyZWN0aW9uYWwgewogICAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQyNTY7CgogICAgc3RydWN0IFBheW1lbnRDaGFubmVsIHsKICAgICAgICBhZGRyZXNzIHNlbmRlcjsKICAgICAgICBhZGRyZXNzIHJlY2VpdmVyOwogICAgICAgIHVpbnQyNTYgdmFsdWU7IC8vIFRvdGFsIGFtb3VudCBvZiBtb25leSBkZXBvc2l0ZWQgdG8gdGhlIGNoYW5uZWwuCgogICAgICAgIHVpbnQzMiBzZXR0bGluZ1BlcmlvZDsgLy8gSG93IG1hbnkgYmxvY2tzIHRvIHdhaXQgZm9yIHRoZSByZWNlaXZlciB0byBjbGFpbSBoZXIgZnVuZHMsIGFmdGVyIHNlbmRlciBzdGFydHMgc2V0dGxpbmcuCiAgICAgICAgdWludDI1NiBzZXR0bGluZ1VudGlsOyAvLyBTdGFydGluZyB3aXRoIHRoaXMgYmxvY2sgbnVtYmVyLCBhbnlvbmUgY2FuIHNldHRsZSB0aGUgY2hhbm5lbC4KICAgIH0KCiAgICBtYXBwaW5nIChieXRlczMyID0+IFBheW1lbnRDaGFubmVsKSBwdWJsaWMgY2hhbm5lbHM7CgogICAgZXZlbnQgRGlkT3BlbihieXRlczMyIGluZGV4ZWQgY2hhbm5lbElkLCBhZGRyZXNzIGluZGV4ZWQgc2VuZGVyLCBhZGRyZXNzIGluZGV4ZWQgcmVjZWl2ZXIsIHVpbnQyNTYgdmFsdWUpOwogICAgZXZlbnQgRGlkRGVwb3NpdChieXRlczMyIGluZGV4ZWQgY2hhbm5lbElkLCB1aW50MjU2IGRlcG9zaXQpOwogICAgZXZlbnQgRGlkQ2xhaW0oYnl0ZXMzMiBpbmRleGVkIGNoYW5uZWxJZCk7CiAgICBldmVudCBEaWRTdGFydFNldHRsaW5nKGJ5dGVzMzIgaW5kZXhlZCBjaGFubmVsSWQpOwogICAgZXZlbnQgRGlkU2V0dGxlKGJ5dGVzMzIgaW5kZXhlZCBjaGFubmVsSWQpOwoKICAgIC8qKiogQUNUSU9OUyBBTkQgQ09OU1RSQUlOVFMgKioqLwoKICAgIC8vLyBAbm90aWNlIE9wZW4gYSBuZXcgY2hhbm5lbCBiZXR3ZWVuIGBtc2cuc2VuZGVyYCBhbmQgYHJlY2VpdmVyYCwgYW5kIGRvIGFuIGluaXRpYWwgZGVwb3NpdCB0byB0aGUgY2hhbm5lbC4KICAgIC8vLyBAcGFyYW0gY2hhbm5lbElkIFVuaXF1ZSBpZGVudGlmaWVyIG9mIHRoZSBjaGFubmVsIHRvIGJlIGNyZWF0ZWQuCiAgICAvLy8gQHBhcmFtIHJlY2VpdmVyIFJlY2VpdmVyIG9mIHRoZSBmdW5kcywgY291bnRlci1wYXJ0eSBvZiBgbXNnLnNlbmRlcmAuCiAgICAvLy8gQHBhcmFtIHNldHRsaW5nUGVyaW9kIE51bWJlciBvZiBibG9ja3MgdG8gd2FpdCBmb3IgcmVjZWl2ZXIgdG8gYGNsYWltYCBoZXIgZnVuZHMgYWZ0ZXIgdGhlIHNlbmRlciBzdGFydHMgc2V0dGxpbmcgcGVyaW9kIChzZWUgYHN0YXJ0U2V0dGxpbmdgKS4KICAgIC8vLyBBZnRlciB0aGF0IHBlcmlvZCBpcyBvdmVyIGFueW9uZSBjb3VsZCBjYWxsIGBzZXR0bGVgLCBhbmQgbW92ZSBhbGwgdGhlIGNoYW5uZWwgZnVuZHMgdG8gdGhlIHNlbmRlci4KICAgIGZ1bmN0aW9uIG9wZW4oYnl0ZXMzMiBjaGFubmVsSWQsIGFkZHJlc3MgcmVjZWl2ZXIsIHVpbnQzMiBzZXR0bGluZ1BlcmlvZCkgcHVibGljIHBheWFibGUgewogICAgICAgIHJlcXVpcmUoaXNBYnNlbnQoY2hhbm5lbElkKSk7CgogICAgICAgIGNoYW5uZWxzW2NoYW5uZWxJZF0gPSBQYXltZW50Q2hhbm5lbCh7CiAgICAgICAgICAgIHNlbmRlcjogbXNnLnNlbmRlciwKICAgICAgICAgICAgcmVjZWl2ZXI6IHJlY2VpdmVyLAogICAgICAgICAgICB2YWx1ZTogbXNnLnZhbHVlLAogICAgICAgICAgICBzZXR0bGluZ1BlcmlvZDogc2V0dGxpbmdQZXJpb2QsCiAgICAgICAgICAgIHNldHRsaW5nVW50aWw6IDAKICAgICAgICB9KTsKCiAgICAgICAgRGlkT3BlbihjaGFubmVsSWQsIG1zZy5zZW5kZXIsIHJlY2VpdmVyLCBtc2cudmFsdWUpOwogICAgfQoKICAgIC8vLyBAbm90aWNlIEVuc3VyZSBgb3JpZ2luYCBhZGRyZXNzIGNhbiBkZXBvc2l0IG1vbmV5IGludG8gdGhlIGNoYW5uZWwgaWRlbnRpZmllZCBieSBgY2hhbm5lbElkYC4KICAgIC8vLyBAZGV2IENvbnN0cmFpbnQgYGRlcG9zaXRgIGNhbGwuCiAgICAvLy8gQHBhcmFtIGNoYW5uZWxJZCBJZGVudGlmaWVyIG9mIHRoZSBjaGFubmVsLgogICAgLy8vIEBwYXJhbSBvcmlnaW4gQ2FsbGVyIG9mIGBkZXBvc2l0YCBmdW5jdGlvbi4KICAgIGZ1bmN0aW9uIGNhbkRlcG9zaXQoYnl0ZXMzMiBjaGFubmVsSWQsIGFkZHJlc3Mgb3JpZ2luKSBwdWJsaWMgdmlldyByZXR1cm5zKGJvb2wpIHsKICAgICAgICBQYXltZW50Q2hhbm5lbCBtZW1vcnkgY2hhbm5lbCA9IGNoYW5uZWxzW2NoYW5uZWxJZF07CiAgICAgICAgYm9vbCBpc1NlbmRlciA9IGNoYW5uZWwuc2VuZGVyID09IG9yaWdpbjsKICAgICAgICByZXR1cm4gaXNPcGVuKGNoYW5uZWxJZCkgJiYgaXNTZW5kZXI7CiAgICB9CgogICAgLy8vIEBub3RpY2UgQWRkIG1vcmUgbW9uZXkgdG8gdGhlIGNvbnRyYWN0LgogICAgLy8vIEBwYXJhbSBjaGFubmVsSWQgSWRlbnRpZmllciBvZiB0aGUgY2hhbm5lbC4KICAgIGZ1bmN0aW9uIGRlcG9zaXQoYnl0ZXMzMiBjaGFubmVsSWQpIHB1YmxpYyBwYXlhYmxlIHsKICAgICAgICByZXF1aXJlKGNhbkRlcG9zaXQoY2hhbm5lbElkLCBtc2cuc2VuZGVyKSk7CgogICAgICAgIGNoYW5uZWxzW2NoYW5uZWxJZF0udmFsdWUgKz0gbXNnLnZhbHVlOwoKICAgICAgICBEaWREZXBvc2l0KGNoYW5uZWxJZCwgbXNnLnZhbHVlKTsKICAgIH0KCiAgICAvLy8gQG5vdGljZSBFbnN1cmUgYG9yaWdpbmAgYWRkcmVzcyBjYW4gc3RhcnQgc2V0dGxpbmcgdGhlIGNoYW5uZWwgaWRlbnRpZmllZCBieSBgY2hhbm5lbElkYC4KICAgIC8vLyBAZGV2IENvbnN0cmFpbnQgYHN0YXJ0U2V0dGxpbmdgIGNhbGwuCiAgICAvLy8gQHBhcmFtIGNoYW5uZWxJZCBJZGVudGlmaWVyIG9mIHRoZSBjaGFubmVsLgogICAgLy8vIEBwYXJhbSBvcmlnaW4gQ2FsbGVyIG9mIGBzdGFydFNldHRsaW5nYCBmdW5jdGlvbi4KICAgIGZ1bmN0aW9uIGNhblN0YXJ0U2V0dGxpbmcoYnl0ZXMzMiBjaGFubmVsSWQsIGFkZHJlc3Mgb3JpZ2luKSBwdWJsaWMgdmlldyByZXR1cm5zKGJvb2wpIHsKICAgICAgICBQYXltZW50Q2hhbm5lbCBtZW1vcnkgY2hhbm5lbCA9IGNoYW5uZWxzW2NoYW5uZWxJZF07CiAgICAgICAgYm9vbCBpc1NlbmRlciA9IGNoYW5uZWwuc2VuZGVyID09IG9yaWdpbjsKICAgICAgICByZXR1cm4gaXNPcGVuKGNoYW5uZWxJZCkgJiYgaXNTZW5kZXI7CiAgICB9CgogICAgLy8vIEBub3RpY2UgU2VuZGVyIGluaXRpYXRlcyBzZXR0bGluZyBvZiB0aGUgY29udHJhY3QuCiAgICAvLy8gQGRldiBBY3R1YWxseSBzZXQgYHNldHRsaW5nVW50aWxgIGZpZWxkIG9mIHRoZSBQYXltZW50Q2hhbm5lbCBzdHJ1Y3R1cmUuCiAgICAvLy8gQHBhcmFtIGNoYW5uZWxJZCBJZGVudGlmaWVyIG9mIHRoZSBjaGFubmVsLgogICAgZnVuY3Rpb24gc3RhcnRTZXR0bGluZyhieXRlczMyIGNoYW5uZWxJZCkgcHVibGljIHsKICAgICAgICByZXF1aXJlKGNhblN0YXJ0U2V0dGxpbmcoY2hhbm5lbElkLCBtc2cuc2VuZGVyKSk7CgogICAgICAgIFBheW1lbnRDaGFubmVsIHN0b3JhZ2UgY2hhbm5lbCA9IGNoYW5uZWxzW2NoYW5uZWxJZF07CiAgICAgICAgY2hhbm5lbC5zZXR0bGluZ1VudGlsID0gYmxvY2subnVtYmVyICsgY2hhbm5lbC5zZXR0bGluZ1BlcmlvZDsKCiAgICAgICAgRGlkU3RhcnRTZXR0bGluZyhjaGFubmVsSWQpOwogICAgfQoKICAgIC8vLyBAbm90aWNlIEVuc3VyZSBvbmUgY2FuIHNldHRsZSB0aGUgY2hhbm5lbCBpZGVudGlmaWVkIGJ5IGBjaGFubmVsSWRgLgogICAgLy8vIEBkZXYgQ2hlY2sgaWYgc2V0dGxpbmcgcGVyaW9kIGlzIG92ZXIgYnkgY29tcGFyaW5nIGBzZXR0bGluZ1VudGlsYCB0byBhIGN1cnJlbnQgYmxvY2sgbnVtYmVyLgogICAgLy8vIEBwYXJhbSBjaGFubmVsSWQgSWRlbnRpZmllciBvZiB0aGUgY2hhbm5lbC4KICAgIGZ1bmN0aW9uIGNhblNldHRsZShieXRlczMyIGNoYW5uZWxJZCkgcHVibGljIHZpZXcgcmV0dXJucyhib29sKSB7CiAgICAgICAgUGF5bWVudENoYW5uZWwgbWVtb3J5IGNoYW5uZWwgPSBjaGFubmVsc1tjaGFubmVsSWRdOwogICAgICAgIGJvb2wgaXNXYWl0aW5nT3ZlciA9IGlzU2V0dGxpbmcoY2hhbm5lbElkKSAmJiBibG9jay5udW1iZXIgPj0gY2hhbm5lbC5zZXR0bGluZ1VudGlsOwogICAgICAgIHJldHVybiBpc1NldHRsaW5nKGNoYW5uZWxJZCkgJiYgaXNXYWl0aW5nT3ZlcjsKICAgIH0KCiAgICAvLy8gQG5vdGljZSBNb3ZlIHRoZSBtb25leSB0byBzZW5kZXIsIGFuZCBjbG9zZSB0aGUgY2hhbm5lbC4KICAgIC8vLyBBZnRlciB0aGUgc2V0dGxpbmcgcGVyaW9kIGlzIG92ZXIsIGFuZCByZWNlaXZlciBoYXMgbm90IGNsYWltZWQgdGhlIGZ1bmRzLCBhbnlvbmUgY291bGQgY2FsbCB0aGF0LgogICAgLy8vIEBwYXJhbSBjaGFubmVsSWQgSWRlbnRpZmllciBvZiB0aGUgY2hhbm5lbC4KICAgIGZ1bmN0aW9uIHNldHRsZShieXRlczMyIGNoYW5uZWxJZCkgcHVibGljIHsKICAgICAgICByZXF1aXJlKGNhblNldHRsZShjaGFubmVsSWQpKTsKICAgICAgICBQYXltZW50Q2hhbm5lbCBzdG9yYWdlIGNoYW5uZWwgPSBjaGFubmVsc1tjaGFubmVsSWRdOwogICAgICAgIGNoYW5uZWwuc2VuZGVyLnRyYW5zZmVyKGNoYW5uZWwudmFsdWUpOwoKICAgICAgICBkZWxldGUgY2hhbm5lbHNbY2hhbm5lbElkXTsKICAgICAgICBEaWRTZXR0bGUoY2hhbm5lbElkKTsKICAgIH0KCiAgICAvLy8gQG5vdGljZSBFbnN1cmUgYG9yaWdpbmAgYWRkcmVzcyBjYW4gY2xhaW0gYHBheW1lbnRgIGFtb3VudCBvbiBjaGFubmVsIGlkZW50aWZpZWQgYnkgYGNoYW5uZWxJZGAuCiAgICAvLy8gQGRldiBDaGVjayBpZiBgc2lnbmF0dXJlYCBpcyBtYWRlIGJ5IHNlbmRlciBwYXJ0IG9mIHRoZSBjaGFubmVsLCBhbmQgaXMgZm9yIHBheW1lbnQgcHJvbWlzZSAoc2VlIGBwYXltZW50RGlnZXN0YCkuCiAgICAvLy8gQHBhcmFtIGNoYW5uZWxJZCBJZGVudGlmaWVyIG9mIHRoZSBjaGFubmVsLgogICAgLy8vIEBwYXJhbSBwYXltZW50IEFtb3VudCBjbGFpbWVkLgogICAgLy8vIEBwYXJhbSBvcmlnaW4gQ2FsbGVyIG9mIGBjbGFpbWAgZnVuY3Rpb24uCiAgICAvLy8gQHBhcmFtIHNpZ25hdHVyZSBTaWduYXR1cmUgZm9yIHRoZSBwYXltZW50IHByb21pc2UuCiAgICBmdW5jdGlvbiBjYW5DbGFpbShieXRlczMyIGNoYW5uZWxJZCwgdWludDI1NiBwYXltZW50LCBhZGRyZXNzIG9yaWdpbiwgYnl0ZXMgc2lnbmF0dXJlKSBwdWJsaWMgdmlldyByZXR1cm5zKGJvb2wpIHsKICAgICAgICBQYXltZW50Q2hhbm5lbCBtZW1vcnkgY2hhbm5lbCA9IGNoYW5uZWxzW2NoYW5uZWxJZF07CiAgICAgICAgYm9vbCBpc1JlY2VpdmVyID0gb3JpZ2luID09IGNoYW5uZWwucmVjZWl2ZXI7CiAgICAgICAgYnl0ZXMzMiBoYXNoID0gcmVjb3ZlcnlQYXltZW50RGlnZXN0KGNoYW5uZWxJZCwgcGF5bWVudCk7CiAgICAgICAgYm9vbCBpc1NpZ25lZCA9IGNoYW5uZWwuc2VuZGVyID09IEVDUmVjb3ZlcnkucmVjb3ZlcihoYXNoLCBzaWduYXR1cmUpOwoKICAgICAgICByZXR1cm4gaXNSZWNlaXZlciAmJiBpc1NpZ25lZDsKICAgIH0KCiAgICAvLy8gQG5vdGljZSBDbGFpbSB0aGUgZnVuZHMsIGFuZCBjbG9zZSB0aGUgY2hhbm5lbC4KICAgIC8vLyBAZGV2IENhbiBiZSBjbGFpbWVkIGJ5IGNoYW5uZWwgcmVjZWl2ZXIgb25seS4gR3VhcmRlZCBieSBgY2FuQ2xhaW1gLgogICAgLy8vIEBwYXJhbSBjaGFubmVsSWQgSWRlbnRpZmllciBvZiB0aGUgY2hhbm5lbC4KICAgIC8vLyBAcGFyYW0gcGF5bWVudCBBbW91bnQgY2xhaW1lZC4KICAgIC8vLyBAcGFyYW0gc2lnbmF0dXJlIFNpZ25hdHVyZSBmb3IgdGhlIHBheW1lbnQgcHJvbWlzZS4KICAgIGZ1bmN0aW9uIGNsYWltKGJ5dGVzMzIgY2hhbm5lbElkLCB1aW50MjU2IHBheW1lbnQsIGJ5dGVzIHNpZ25hdHVyZSkgcHVibGljIHsKICAgICAgICByZXF1aXJlKGNhbkNsYWltKGNoYW5uZWxJZCwgcGF5bWVudCwgbXNnLnNlbmRlciwgc2lnbmF0dXJlKSk7CgogICAgICAgIFBheW1lbnRDaGFubmVsIG1lbW9yeSBjaGFubmVsID0gY2hhbm5lbHNbY2hhbm5lbElkXTsKCiAgICAgICAgaWYgKHBheW1lbnQgPj0gY2hhbm5lbC52YWx1ZSkgewogICAgICAgICAgICBjaGFubmVsLnJlY2VpdmVyLnRyYW5zZmVyKGNoYW5uZWwudmFsdWUpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGNoYW5uZWwucmVjZWl2ZXIudHJhbnNmZXIocGF5bWVudCk7CiAgICAgICAgICAgIGNoYW5uZWwuc2VuZGVyLnRyYW5zZmVyKGNoYW5uZWwudmFsdWUuc3ViKHBheW1lbnQpKTsKICAgICAgICB9CgogICAgICAgIGRlbGV0ZSBjaGFubmVsc1tjaGFubmVsSWRdOwoKICAgICAgICBEaWRDbGFpbShjaGFubmVsSWQpOwogICAgfQoKICAgIC8qKiogQ0hBTk5FTCBTVEFURSAqKiovCgogICAgLy8vIEBub3RpY2UgQ2hlY2sgaWYgdGhlIGNoYW5uZWwgaXMgcHJlc2VudDogaW4gb3BlbiBvciBzZXR0bGluZyBzdGF0ZS4KICAgIC8vLyBAcGFyYW0gY2hhbm5lbElkIElkZW50aWZpZXIgb2YgdGhlIGNoYW5uZWwuCiAgICBmdW5jdGlvbiBpc1ByZXNlbnQoYnl0ZXMzMiBjaGFubmVsSWQpIHB1YmxpYyB2aWV3IHJldHVybnMoYm9vbCkgewogICAgICAgIHJldHVybiAhaXNBYnNlbnQoY2hhbm5lbElkKTsKICAgIH0KCiAgICAvLy8gQG5vdGljZSBDaGVjayBpZiB0aGUgY2hhbm5lbCBpcyBub3QgcHJlc2VudC4KICAgIC8vLyBAcGFyYW0gY2hhbm5lbElkIElkZW50aWZpZXIgb2YgdGhlIGNoYW5uZWwuCiAgICBmdW5jdGlvbiBpc0Fic2VudChieXRlczMyIGNoYW5uZWxJZCkgcHVibGljIHZpZXcgcmV0dXJucyhib29sKSB7CiAgICAgICAgUGF5bWVudENoYW5uZWwgbWVtb3J5IGNoYW5uZWwgPSBjaGFubmVsc1tjaGFubmVsSWRdOwogICAgICAgIHJldHVybiBjaGFubmVsLnNlbmRlciA9PSAwOwogICAgfQoKICAgIC8vLyBAbm90aWNlIENoZWNrIGlmIHRoZSBjaGFubmVsIGlzIGluIHNldHRsaW5nIHN0YXRlOiB3YWl0cyB0aWxsIHRoZSBzZXR0bGluZyBwZXJpb2QgaXMgb3Zlci4KICAgIC8vLyBAZGV2IEl0IGlzIHNldHRsaW5nLCBpZiBgc2V0dGxpbmdVbnRpbGAgaXMgc2V0IHRvIG5vbi16ZXJvLgogICAgLy8vIEBwYXJhbSBjaGFubmVsSWQgSWRlbnRpZmllciBvZiB0aGUgY2hhbm5lbC4KICAgIGZ1bmN0aW9uIGlzU2V0dGxpbmcoYnl0ZXMzMiBjaGFubmVsSWQpIHB1YmxpYyB2aWV3IHJldHVybnMoYm9vbCkgewogICAgICAgIFBheW1lbnRDaGFubmVsIG1lbW9yeSBjaGFubmVsID0gY2hhbm5lbHNbY2hhbm5lbElkXTsKICAgICAgICByZXR1cm4gY2hhbm5lbC5zZXR0bGluZ1VudGlsICE9IDA7CiAgICB9CgogICAgLy8vIEBub3RpY2UgQ2hlY2sgaWYgdGhlIGNoYW5uZWwgaXMgb3BlbjogcHJlc2VudCBhbmQgbm90IHNldHRsaW5nLgogICAgLy8vIEBwYXJhbSBjaGFubmVsSWQgSWRlbnRpZmllciBvZiB0aGUgY2hhbm5lbC4KICAgIGZ1bmN0aW9uIGlzT3BlbihieXRlczMyIGNoYW5uZWxJZCkgcHVibGljIHZpZXcgcmV0dXJucyhib29sKSB7CiAgICAgICAgcmV0dXJuIGlzUHJlc2VudChjaGFubmVsSWQpICYmICFpc1NldHRsaW5nKGNoYW5uZWxJZCk7CiAgICB9CgogICAgLyoqKiBQQVlNRU5UIERJR0VTVCAqKiovCgogICAgLy8vIEByZXR1cm4gSGFzaCBvZiB0aGUgcGF5bWVudCBwcm9taXNlIHRvIHNpZ24uCiAgICAvLy8gQHBhcmFtIGNoYW5uZWxJZCBJZGVudGlmaWVyIG9mIHRoZSBjaGFubmVsLgogICAgLy8vIEBwYXJhbSBwYXltZW50IEFtb3VudCB0byBzZW5kLCBhbmQgdG8gY2xhaW0gbGF0ZXIuCiAgICBmdW5jdGlvbiBwYXltZW50RGlnZXN0KGJ5dGVzMzIgY2hhbm5lbElkLCB1aW50MjU2IHBheW1lbnQpIHB1YmxpYyB2aWV3IHJldHVybnMoYnl0ZXMzMikgewogICAgICAgIHJldHVybiBrZWNjYWsyNTYoYWRkcmVzcyh0aGlzKSwgY2hhbm5lbElkLCBwYXltZW50KTsKICAgIH0KCiAgICAvLy8gQHJldHVybiBBY3R1YWxseSBzaWduZWQgaGFzaCBvZiB0aGUgcGF5bWVudCBwcm9taXNlLCBjb25zaWRlcmluZyAiRXRoZXJldW0gU2lnbmVkIE1lc3NhZ2UiIHByZWZpeC4KICAgIC8vLyBAcGFyYW0gY2hhbm5lbElkIElkZW50aWZpZXIgb2YgdGhlIGNoYW5uZWwuCiAgICAvLy8gQHBhcmFtIHBheW1lbnQgQW1vdW50IHRvIHNlbmQsIGFuZCB0byBjbGFpbSBsYXRlci4KICAgIGZ1bmN0aW9uIHJlY292ZXJ5UGF5bWVudERpZ2VzdChieXRlczMyIGNoYW5uZWxJZCwgdWludDI1NiBwYXltZW50KSBpbnRlcm5hbCB2aWV3IHJldHVybnMoYnl0ZXMzMikgewogICAgICAgIGJ5dGVzIG1lbW9yeSBwcmVmaXggPSAiXHgxOUV0aGVyZXVtIFNpZ25lZCBNZXNzYWdlOlxuMzIiOwogICAgICAgIHJldHVybiBrZWNjYWsyNTYocHJlZml4LCBwYXltZW50RGlnZXN0KGNoYW5uZWxJZCwgcGF5bWVudCkpOwogICAgfQp9'.
	

]
