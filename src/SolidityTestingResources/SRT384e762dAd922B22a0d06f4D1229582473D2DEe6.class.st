Class {
	#name : #SRT384e762dAd922B22a0d06f4D1229582473D2DEe6,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT384e762dAd922B22a0d06f4D1229582473D2DEe6 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMDsKCmNvbnRyYWN0IEljb25vbWlUb2tlbiB7CgogIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwogIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpOwogIGV2ZW50IEJsb2NrTG9ja1NldCh1aW50MjU2IF92YWx1ZSk7CiAgZXZlbnQgTmV3T3duZXIoYWRkcmVzcyBfbmV3T3duZXIpOwoKICBtb2RpZmllciBvbmx5T3duZXIgewogICAgaWYgKG1zZy5zZW5kZXIgPT0gb3duZXIpIHsKICAgICAgXzsKICAgIH0KICB9CgogIG1vZGlmaWVyIGJsb2NrTG9jayhhZGRyZXNzIF9zZW5kZXIpIHsKICAgIGlmICghaXNMb2NrZWQoKSB8fCBfc2VuZGVyID09IG93bmVyKSB7CiAgICAgIF87CiAgICB9CiAgfQoKICBtb2RpZmllciBjaGVja0lmVG9Db250cmFjdChhZGRyZXNzIF90bykgewogICAgaWYoX3RvICE9IGFkZHJlc3ModGhpcykpICB7CiAgICAgIF87CiAgICB9CiAgfQoKICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsKICBzdHJpbmcgcHVibGljIG5hbWU7CiAgdWludDggcHVibGljIGRlY2ltYWxzOwogIHN0cmluZyBwdWJsaWMgc3ltYm9sOwogIHN0cmluZyBwdWJsaWMgdmVyc2lvbiA9ICcwLjAuMSc7CiAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CiAgdWludDI1NiBwdWJsaWMgbG9ja2VkVW50aWxCbG9jazsKCiAgZnVuY3Rpb24gSWNvbm9taVRva2VuKAogICAgdWludDI1NiBfaW5pdGlhbEFtb3VudCwKICAgIHN0cmluZyBfdG9rZW5OYW1lLAogICAgdWludDggX2RlY2ltYWxVbml0cywKICAgIHN0cmluZyBfdG9rZW5TeW1ib2wsCiAgICB1aW50MjU2IF9sb2NrZWRVbnRpbEJsb2NrCiAgICApIHsKICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gX2luaXRpYWxBbW91bnQ7CiAgICB0b3RhbFN1cHBseSA9IF9pbml0aWFsQW1vdW50OwogICAgbmFtZSA9IF90b2tlbk5hbWU7CiAgICBkZWNpbWFscyA9IF9kZWNpbWFsVW5pdHM7CiAgICBzeW1ib2wgPSBfdG9rZW5TeW1ib2w7CiAgICBsb2NrZWRVbnRpbEJsb2NrID0gX2xvY2tlZFVudGlsQmxvY2s7CiAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgfQoKICAvKiBBcHByb3ZlcyBhbmQgdGhlbiBjYWxscyB0aGUgcmVjZWl2aW5nIGNvbnRyYWN0ICovCiAgZnVuY3Rpb24gYXBwcm92ZUFuZENhbGwoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUsIGJ5dGVzIF9leHRyYURhdGEpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewoKICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CgogICAgLy9jYWxsIHRoZSByZWNlaXZlQXBwcm92YWwgZnVuY3Rpb24gb24gdGhlIGNvbnRyYWN0IHlvdSB3YW50IHRvIGJlIG5vdGlmaWVkLiBUaGlzIGNyYWZ0cyB0aGUgZnVuY3Rpb24gc2lnbmF0dXJlIG1hbnVhbGx5IHNvIG9uZSBkb2Vzbid0IGhhdmUgdG8gaW5jbHVkZSBhIGNvbnRyYWN0IGluIGhlcmUganVzdCBmb3IgdGhpcy4KICAgIC8vcmVjZWl2ZUFwcHJvdmFsKGFkZHJlc3MgX2Zyb20sIHVpbnQyNTYgX3ZhbHVlLCBhZGRyZXNzIF90b2tlbkNvbnRyYWN0LCBieXRlcyBfZXh0cmFEYXRhKQogICAgLy9pdCBpcyBhc3N1bWVkIHRoYXQgd2hlbiBkb2VzIHRoaXMgdGhhdCB0aGUgY2FsbCAqc2hvdWxkKiBzdWNjZWVkLCBvdGhlcndpc2Ugb25lIHdvdWxkIHVzZSB2YW5pbGxhIGFwcHJvdmUgaW5zdGVhZC4KICAgIGlmKCFfc3BlbmRlci5jYWxsKGJ5dGVzNChzaGEzKCJyZWNlaXZlQXBwcm92YWwoYWRkcmVzcyx1aW50MjU2LGFkZHJlc3MsYnl0ZXMpIikpLCBtc2cuc2VuZGVyLCBfdmFsdWUsIHRoaXMsIF9leHRyYURhdGEpKSB7IHRocm93OyB9CiAgICByZXR1cm4gdHJ1ZTsKCiAgfQoKICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIGJsb2NrTG9jayhtc2cuc2VuZGVyKSBjaGVja0lmVG9Db250cmFjdChfdG8pIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewoKICAgIGlmIChiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfdmFsdWUgJiYgX3ZhbHVlID4gMCkgewogICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgIGJhbGFuY2VzW190b10gKz0gX3ZhbHVlOwogICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICAgIHJldHVybiB0cnVlOwogICAgfSBlbHNlIHsKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQoKICB9CgogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIGJsb2NrTG9jayhfZnJvbSkgY2hlY2tJZlRvQ29udHJhY3QoX3RvKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKCiAgICBpZiAoYmFsYW5jZXNbX2Zyb21dID49IF92YWx1ZSAmJiBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA+PSBfdmFsdWUgJiYgX3ZhbHVlID4gMCkgewogICAgICBiYWxhbmNlc1tfdG9dICs9IF92YWx1ZTsKICAgICAgYmFsYW5jZXNbX2Zyb21dIC09IF92YWx1ZTsKICAgICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOwogICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0gZWxzZSB7CiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KCiAgfQoKICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgewogICAgcmV0dXJuIGJhbGFuY2VzW19vd25lcl07CiAgfQoKICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpIHsKICAgIHJldHVybiBhbGxvd2VkW19vd25lcl1bX3NwZW5kZXJdOwogIH0KCiAgZnVuY3Rpb24gc2V0QmxvY2tMb2NrKHVpbnQyNTYgX2xvY2tlZFVudGlsQmxvY2spIG9ubHlPd25lciByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgIGxvY2tlZFVudGlsQmxvY2sgPSBfbG9ja2VkVW50aWxCbG9jazsKICAgIEJsb2NrTG9ja1NldChfbG9ja2VkVW50aWxCbG9jayk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIGlzTG9ja2VkKCkgY29uc3RhbnQgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICByZXR1cm4gbG9ja2VkVW50aWxCbG9jayA+IGJsb2NrLm51bWJlcjsKICB9CgogIGZ1bmN0aW9uIHJlcGxhY2VPd25lcihhZGRyZXNzIF9uZXdPd25lcikgb25seU93bmVyIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgb3duZXIgPSBfbmV3T3duZXI7CiAgICBOZXdPd25lcihfbmV3T3duZXIpOwogICAgcmV0dXJuIHRydWU7CiAgfQoKICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIGJhbGFuY2VzOwogIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsKfQoKCmNvbnRyYWN0IEljb25vbWlUb2tlblRlc3QgaXMgSWNvbm9taVRva2VuIHsKICBmdW5jdGlvbiBJY29ub21pVG9rZW5UZXN0KAogICAgdWludDI1NiBfaW5pdGlhbEFtb3VudCwKICAgIHN0cmluZyBfdG9rZW5OYW1lLAogICAgdWludDggX2RlY2ltYWxVbml0cywKICAgIHN0cmluZyBfdG9rZW5TeW1ib2wsCiAgICB1aW50MjU2IF9sb2NrZWRVbnRpbEJsb2NrCiAgICApIEljb25vbWlUb2tlbihfaW5pdGlhbEFtb3VudCwgX3Rva2VuTmFtZSwgX2RlY2ltYWxVbml0cywgX3Rva2VuU3ltYm9sLCBfbG9ja2VkVW50aWxCbG9jaykgewogIH0KCiAgZnVuY3Rpb24gZGVzdHJ1Y3QoKSBvbmx5T3duZXIgewogICAgc2VsZmRlc3RydWN0KG93bmVyKTsKICB9Cn0='.
	

]
