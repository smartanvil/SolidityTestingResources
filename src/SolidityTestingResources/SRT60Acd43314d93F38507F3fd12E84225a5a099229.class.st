Class {
	#name : #SRT60Acd43314d93F38507F3fd12E84225a5a099229,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT60Acd43314d93F38507F3fd12E84225a5a099229 >> base64 [
	^ 'Ly8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKkVUSCBCQU5LCi8vCi8vIEl0J3MgYW4gRXRoQmFuaywgZXZlcnkgZGVwb3NpdG9yIGVhcm5zIGludGVyZXN0IG9uIHRoZWlyIGRlcG9zaXRzIHdoZW4gYSBuZXcgZGVwb3NpdG9yIGpvaW5zIQovLwovLyBUaGUgaW50ZXJlc3QgcmF0ZSBpcyBkZWZpbmVkIGJ5IHRoZSAiSW50ZXJlc3RfUmF0ZSIgdmFyaWFibGUsIGFuZCBpcyBpbml0aWFsbHkgc2V0IHRvIDIlLCBhbmQgbWF5IGJlIGNoYW5nZWQgbGF0ZXIhCi8vCi8vIFRoZSBCYW5rIHdpbGwgZXhpc3QgZm9yIGxvbmcgYmVjYXVzZSBpdCBvbmx5IHBheXMgb3V0IHdoZW4gdGhlIGJhbGFuY2UgaXMgYWJvdmUgNjAlLiBBbmQgaWYgdGhlIGJhbGFuY2UgaXMgYmVsb3cgODAlIGl0IHBheXMgb3V0IG9ubHkgaGFsZiB0aGUgaW50ZXJlc3QuCi8vCi8vIE1pbmltdW0gRGVwb3NpdDogMC4yIEV0aGVyICgyMDAgRmlubmV5KQovLwovLwovLyBJdCBpcyBhIGxvbmcgdGVybSBwcm9qZWN0LCBzbyBoYXZlIGZ1biBzYXZpbmcgeW91ciBFdGhlciBoZXJlIQovLwovLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqU1RBUlQKY29udHJhY3QgRXRoQmFuayB7CgogIHN0cnVjdCBJbnZlc3RvckFycmF5IAoJewogICAgICAJYWRkcmVzcyBldGhlckFkZHJlc3M7CiAgICAgIAl1aW50IGFtb3VudDsKICAJfQoKICBJbnZlc3RvckFycmF5W10gcHVibGljIGRlcG9zaXRvcnM7CgovLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqUFVCTElDIFZBUklBQkxFUwoKICB1aW50IHB1YmxpYyBUb3RhbF9TYXZlcnM9MDsKICB1aW50IHB1YmxpYyBGZWVzPTA7CiAgdWludCBwdWJsaWMgQmFsYW5jZSA9IDA7CiAgdWludCBwdWJsaWMgVG90YWxfRGVwb3NpdGVkPTA7CiAgdWludCBwdWJsaWMgVG90YWxfUGFpZF9PdXQ9MDsKICB1aW50IHB1YmxpYyBJbnRlcmVzdF9SYXRlPTI7IC8vIHRoZSBpbnRlcmVzdCByYXRlIHBheW91dCBmb3IgZGVwb3NpdHMhCnN0cmluZyBwdWJsaWMgTWVzc2FnZT0iV2VsY29tZSB0byBFdGhCYW5rIjsKCQogIGFkZHJlc3MgcHVibGljIG93bmVyOwoKICAvLyBzaW1wbGUgc2luZ2xlLXNpZyBmdW5jdGlvbiBtb2RpZmllcgogIG1vZGlmaWVyIG9ubHlvd25lciB7IGlmIChtc2cuc2VuZGVyID09IG93bmVyKSBfOyB9Ci8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipJTklUCgogIGZ1bmN0aW9uIEV0aEJhbmsoKSB7CiAgICBvd25lciA9IDB4RWU0NjJBNjcxN2YxN0M1N0M4MjZGMWFkOWI0ZDM4MTM0OTUyOTZDOTsgIC8vdGhpcyBjb250cmFjdCBpcyBhbiBhdHRhY2htZW50IHRvIEV0aFZlbnR1cmVzCiAgfQoKLy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlRSSUdHRVIKCiAgZnVuY3Rpb24oKSB7CiAgICBlbnRlcigpOwogIH0KICAKLy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKkVOVEVSCgogIGZ1bmN0aW9uIGVudGVyKCkgewogICAgaWYgKG1zZy52YWx1ZSA+IDIwMCBmaW5uZXkpIHsKCiAgICB1aW50IGFtb3VudD1tc2cudmFsdWU7CgoKICAgIC8vIGFkZCBhIG5ldyBwYXJ0aWNpcGFudCB0byB0aGUgc3lzdGVtIGFuZCBjYWxjdWxhdGUgdG90YWwgcGxheWVycwogICAgVG90YWxfU2F2ZXJzPWRlcG9zaXRvcnMubGVuZ3RoKzE7CiAgICBkZXBvc2l0b3JzLmxlbmd0aCArPSAxOwogICAgZGVwb3NpdG9yc1tkZXBvc2l0b3JzLmxlbmd0aC0xXS5ldGhlckFkZHJlc3MgPSBtc2cuc2VuZGVyOwogICAgZGVwb3NpdG9yc1tkZXBvc2l0b3JzLmxlbmd0aC0xXS5hbW91bnQgPSBhbW91bnQ7CgoKCiAgICAvLyBjb2xsZWN0IEZlZXMgYW5kIHVwZGF0ZSBjb250cmFjdCBCYWxhbmNlIGFuZCBkZXBvc2l0ZWQgYW1vdW50CiAgICAgIAlGZWVzICA9IGFtb3VudCAqIEludGVyZXN0X1JhdGUgLyAxMDA7ICAgIC8vIGZlZSB0byB0aGUgb3duZXIKICAgICAgCVRvdGFsX0RlcG9zaXRlZCs9YW1vdW50OyAgICAgICAJCS8vdXBkYXRlIGRlcG9zaXRlZCBhbW91bnQKCWFtb3VudC09YW1vdW50ICogSW50ZXJlc3RfUmF0ZSAvIDEwMDsJLy8gbWludXMgdGhlIGZlZSBmcm9tIGFtb3VudAogICAgICAJQmFsYW5jZSArPSBhbW91bnQ7ICAgICAgICAgICAgICAgLy8gQmFsYW5jZSB1cGRhdGUKCgovLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqRXRoVmVudHVyZXNGaW5hbCBGZWUgUGx1Z2luCiAgICAvLyBwYXlvdXQgRmVlcyB0byB0aGUgb3duZXIKICAgICBpZiAoRmVlcyAhPSAwKSAKICAgICB7Cgl1aW50IG1pbmltYWw9IDE5OTAgZmlubmV5OwoJaWYoRmVlczxtaW5pbWFsKQoJewogICAgICAJb3duZXIuc2VuZChGZWVzKTsJCS8vc2VuZCBmZWUgdG8gb3duZXIKCVRvdGFsX1BhaWRfT3V0Kz1GZWVzOyAgICAgICAgLy91cGRhdGUgcGFpZCBvdXQgYW1vdW50Cgl9CgllbHNlCgl7Cgl1aW50IFRpbWVzPSBGZWVzL21pbmltYWw7CgoJZm9yKHVpbnQgaT0wOyBpPFRpbWVzO2krKykgICAvLyBzZW5kIHRoZSBGZWVzIG91dCBpbiBwYWNrZXRzIGNvbXBhdGlibGUgdG8gRXRoVmVudHVyZXMgZGl2aWRlbmQgZnVuY3Rpb24KCWlmKEZlZXM+MCkKCXsKCW93bmVyLnNlbmQobWluaW1hbCk7CQkvL3NlbmQgZmVlIHRvIG93bmVyCglUb3RhbF9QYWlkX091dCs9RmVlczsgICAgICAgIC8vdXBkYXRlIHBhaWQgb3V0IGFtb3VudAoJRmVlcy09bWluaW1hbDsKCX0KCX0KICAgICB9Ci8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipFbmQgUGx1Z2luIAogLy9sb29wIHZhcmlhYmxlcwogICAgdWludCBwYXlvdXQ7CiAgICB1aW50IG5yPTA7CgppZihUb3RhbF9EZXBvc2l0ZWQgKiA4MC8xMDAgPCBCYWxhbmNlICkgIC8vaWYgYmFsYW5jZSBpcyBhdCA4MCUgb3IgaGlnaGVyLCB0aGVuIHBheSBkZXBvc2l0b3JzCnsKICAKCgkKICAgIHdoaWxlIChCYWxhbmNlID4gZGVwb3NpdG9yc1tucl0uYW1vdW50ICogSW50ZXJlc3RfUmF0ZS8xMDAgJiYgbnI8ZGVwb3NpdG9ycy5sZW5ndGgpICAvL2V4aXQgY29uZGl0aW9uIHRvIGF2b2lkIGluZmluaXRlIGxvb3AKICAgIHsgCiAgICAgIHBheW91dCA9IGRlcG9zaXRvcnNbbnJdLmFtb3VudCAqSW50ZXJlc3RfUmF0ZS8xMDA7ICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9jYWxjdWxhdGUgcGF5IG91dAogICAgICBkZXBvc2l0b3JzW25yXS5ldGhlckFkZHJlc3Muc2VuZChwYXlvdXQpOyAgICAgICAgICAgICAgICAgICAgICAgIAkJLy9zZW5kIHBheSBvdXQgdG8gcGFydGljaXBhbnQKICAgICAgQmFsYW5jZSAtPSBkZXBvc2l0b3JzW25yXS5hbW91bnQgKkludGVyZXN0X1JhdGUvMTAwOyAgICAgICAgICAgICAgICAgICAgICAgICAvL0JhbGFuY2UgdXBkYXRlCiAgICAgIFRvdGFsX1BhaWRfT3V0ICs9IGRlcG9zaXRvcnNbbnJdLmFtb3VudCAqSW50ZXJlc3RfUmF0ZS8xMDA7ICAgICAgICAgICAgICAgICAvL3VwZGF0ZSBwYWlkIG91dCBhbW91bnQKICAgICAgbnIgKz0gMTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9nbyB0byBuZXh0IHBhcnRpY2lwYW50CiAgICB9CiAgICAKCU1lc3NhZ2U9IlRoZSBGdWxsIEludGVyZXN0IGhhcyBiZWVuIHBhaWQgdG8gRGVwb3NpdG9ycyEiOwp9IAplbHNlICAKewppZihUb3RhbF9EZXBvc2l0ZWQgKiA2MC8xMDAgPCBCYWxhbmNlICkgIC8vaWYgYmFsYW5jZSBpcyBhdCA2MCUgb3IgaGlnaGVyLCB0aGVuIHBheSBkZXBvc2l0b3JzIHdpdGggaGFsZiBpbnRlcmVzdAp7CiAgCgoJCiAgICB3aGlsZSAoQmFsYW5jZSA+IGRlcG9zaXRvcnNbbnJdLmFtb3VudCAqIEludGVyZXN0X1JhdGUvMjAwICYmIG5yPGRlcG9zaXRvcnMubGVuZ3RoKSAgLy9leGl0IGNvbmRpdGlvbiB0byBhdm9pZCBpbmZpbml0ZSBsb29wCiAgICB7IAogICAgICBwYXlvdXQgPSBkZXBvc2l0b3JzW25yXS5hbW91bnQgKkludGVyZXN0X1JhdGUvMjAwOyAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vY2FsY3VsYXRlIHBheSBvdXQKICAgICAgZGVwb3NpdG9yc1tucl0uZXRoZXJBZGRyZXNzLnNlbmQocGF5b3V0KTsgICAgICAgICAgICAgICAgICAgICAgICAJCS8vc2VuZCBwYXkgb3V0IHRvIHBhcnRpY2lwYW50CiAgICAgIEJhbGFuY2UgLT0gZGVwb3NpdG9yc1tucl0uYW1vdW50ICpJbnRlcmVzdF9SYXRlLzIwMDsgICAgICAgICAgICAgICAgICAgICAgICAgLy9CYWxhbmNlIHVwZGF0ZQogICAgICBUb3RhbF9QYWlkX091dCArPSBkZXBvc2l0b3JzW25yXS5hbW91bnQgKkludGVyZXN0X1JhdGUvMjAwOyAgICAgICAgICAgICAgICAgLy91cGRhdGUgcGFpZCBvdXQgYW1vdW50CiAgICAgIG5yICs9IDE7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vZ28gdG8gbmV4dCBwYXJ0aWNpcGFudAogICAgfQogICAgCglNZXNzYWdlPSJGdW5kcyBhcmUgYmV0d2VlbiA2MCUgYW5kIDgwJSwgc28gb25seSBIYWxmIEludGVyZXN0IGhhcyBiZWVuIHBhaWQhIjsKfSAKZWxzZSBNZXNzYWdlPSJGdW5kcyBhcmUgYmVsb3cgNjAlLCBubyBpbnRlcmVzdCBwYXlvdXQgdW50aWwgbmV3IERlcG9zaXRvcnMgam9pbiEiOwoKCgp9CgogIH0KCi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipTRVQgSU5URVJFU1QgUkFURQp9CgogIGZ1bmN0aW9uIFNldF9JbnRlcmVzdF9SYXRlKHVpbnQgbmV3X2ludGVyZXN0KSBvbmx5b3duZXIgIC8vc2V0IG5ldyBpbnRlcmVzdCByYXRlCgl7CiAgICAgIAlJbnRlcmVzdF9SYXRlID0gbmV3X2ludGVyZXN0OwoJTWVzc2FnZT0iVGhlIEJhbmsgaGFzIGNoYW5nZWQgaXQncyBJbnRlcmVzdCBSYXRlcyEiOwogIAl9Cgp9'.
	

]
