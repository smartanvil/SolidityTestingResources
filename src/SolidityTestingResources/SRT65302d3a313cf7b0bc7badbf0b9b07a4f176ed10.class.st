Class {
	#name : #SRT65302d3a313cf7b0bc7badbf0b9b07a4f176ed10,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT65302d3a313cf7b0bc7badbf0b9b07a4f176ed10 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuNDsKCgovKioKKiBAdGl0bGUgU2FmZU1hdGgKKiBAZGV2IE1hdGggb3BlcmF0aW9ucyB3aXRoIHNhZmV0eSBjaGVja3MgdGhhdCB0aHJvdyBvbiBlcnJvcgoqLwpsaWJyYXJ5IFNhZmVNYXRoIHsKCiAvKioKICogQGRldiBNdWx0aXBsaWVzIHR3byBudW1iZXJzLCB0aHJvd3Mgb24gb3ZlcmZsb3cuCiAqLwogZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgaWYgKGEgPT0gMCkgewogICAgIHJldHVybiAwOwogICB9CiAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICBhc3NlcnQoYyAvIGEgPT0gYik7CiAgIHJldHVybiBjOwogfQoKIC8qKgogKiBAZGV2IEludGVnZXIgZGl2aXNpb24gb2YgdHdvIG51bWJlcnMsIHRydW5jYXRpbmcgdGhlIHF1b3RpZW50LgogKi8KIGZ1bmN0aW9uIGRpdih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgIC8vIGFzc2VydChiID4gMCk7IC8vIFNvbGlkaXR5IGF1dG9tYXRpY2FsbHkgdGhyb3dzIHdoZW4gZGl2aWRpbmcgYnkgMAogICB1aW50MjU2IGMgPSBhIC8gYjsKICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICAgcmV0dXJuIGM7CiB9CgogLyoqCiAqIEBkZXYgU3Vic3RyYWN0cyB0d28gbnVtYmVycywgdGhyb3dzIG9uIG92ZXJmbG93IChpLmUuIGlmIHN1YnRyYWhlbmQgaXMgZ3JlYXRlciB0aGFuIG1pbnVlbmQpLgogKi8KIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgIGFzc2VydChiIDw9IGEpOwogICByZXR1cm4gYSAtIGI7CiB9CgogLyoqCiAqIEBkZXYgQWRkcyB0d28gbnVtYmVycywgdGhyb3dzIG9uIG92ZXJmbG93LgogKi8KIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICBhc3NlcnQoYyA+PSBhKTsKICAgcmV0dXJuIGM7CiB9Cn0KCgpjb250cmFjdCBUb2tlbiB7CgogICAgLy8vIEByZXR1cm4gdG90YWwgYW1vdW50IG9mIHRva2VucwogICAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHN1cHBseSkge30KCiAgICAvLy8gQHBhcmFtIF9vd25lciBUaGUgYWRkcmVzcyBmcm9tIHdoaWNoIHRoZSBiYWxhbmNlIHdpbGwgYmUgcmV0cmlldmVkCiAgICAvLy8gQHJldHVybiBUaGUgYmFsYW5jZQogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpIHt9CgogICAgLy8vIEBub3RpY2Ugc2VuZCBgX3ZhbHVlYCB0b2tlbiB0byBgX3RvYCBmcm9tIGBtc2cuc2VuZGVyYAogICAgLy8vIEBwYXJhbSBfdG8gVGhlIGFkZHJlc3Mgb2YgdGhlIHJlY2lwaWVudAogICAgLy8vIEBwYXJhbSBfdmFsdWUgVGhlIGFtb3VudCBvZiB0b2tlbiB0byBiZSB0cmFuc2ZlcnJlZAogICAgLy8vIEByZXR1cm4gV2hldGhlciB0aGUgdHJhbnNmZXIgd2FzIHN1Y2Nlc3NmdWwgb3Igbm90CiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcykge30KCiAgICAvLy8gQG5vdGljZSBzZW5kIGBfdmFsdWVgIHRva2VuIHRvIGBfdG9gIGZyb20gYF9mcm9tYCBvbiB0aGUgY29uZGl0aW9uIGl0IGlzIGFwcHJvdmVkIGJ5IGBfZnJvbWAKICAgIC8vLyBAcGFyYW0gX2Zyb20gVGhlIGFkZHJlc3Mgb2YgdGhlIHNlbmRlcgogICAgLy8vIEBwYXJhbSBfdG8gVGhlIGFkZHJlc3Mgb2YgdGhlIHJlY2lwaWVudAogICAgLy8vIEBwYXJhbSBfdmFsdWUgVGhlIGFtb3VudCBvZiB0b2tlbiB0byBiZSB0cmFuc2ZlcnJlZAogICAgLy8vIEByZXR1cm4gV2hldGhlciB0aGUgdHJhbnNmZXIgd2FzIHN1Y2Nlc3NmdWwgb3Igbm90CiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHt9CgogICAgLy8vIEBub3RpY2UgYG1zZy5zZW5kZXJgIGFwcHJvdmVzIGBfYWRkcmAgdG8gc3BlbmQgYF92YWx1ZWAgdG9rZW5zCiAgICAvLy8gQHBhcmFtIF9zcGVuZGVyIFRoZSBhZGRyZXNzIG9mIHRoZSBhY2NvdW50IGFibGUgdG8gdHJhbnNmZXIgdGhlIHRva2VucwogICAgLy8vIEBwYXJhbSBfdmFsdWUgVGhlIGFtb3VudCBvZiB3ZWkgdG8gYmUgYXBwcm92ZWQgZm9yIHRyYW5zZmVyCiAgICAvLy8gQHJldHVybiBXaGV0aGVyIHRoZSBhcHByb3ZhbCB3YXMgc3VjY2Vzc2Z1bCBvciBub3QKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcykge30KCiAgICAvLy8gQHBhcmFtIF9vd25lciBUaGUgYWRkcmVzcyBvZiB0aGUgYWNjb3VudCBvd25pbmcgdG9rZW5zCiAgICAvLy8gQHBhcmFtIF9zcGVuZGVyIFRoZSBhZGRyZXNzIG9mIHRoZSBhY2NvdW50IGFibGUgdG8gdHJhbnNmZXIgdGhlIHRva2VucwogICAgLy8vIEByZXR1cm4gQW1vdW50IG9mIHJlbWFpbmluZyB0b2tlbnMgYWxsb3dlZCB0byBzcGVudAogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHJlbWFpbmluZykge30KCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsKICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpOwoKfQoKY29udHJhY3QgU3RhbmRhcmRUb2tlbiBpcyBUb2tlbiB7CgogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBpZiAoYmFsYW5jZXNbbXNnLnNlbmRlcl0gPj0gX3ZhbHVlICYmIF92YWx1ZSA+IDApIHsKICAgICAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOwogICAgICAgICAgICBiYWxhbmNlc1tfdG9dICs9IF92YWx1ZTsKICAgICAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9IGVsc2UgeyByZXR1cm4gZmFsc2U7IH0KICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBpZiAoYmFsYW5jZXNbX2Zyb21dID49IF92YWx1ZSAmJiBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA+PSBfdmFsdWUgJiYgX3ZhbHVlID4gMCkgewogICAgICAgICAgICBiYWxhbmNlc1tfdG9dICs9IF92YWx1ZTsKICAgICAgICAgICAgYmFsYW5jZXNbX2Zyb21dIC09IF92YWx1ZTsKICAgICAgICAgICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOwogICAgICAgICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9IGVsc2UgeyByZXR1cm4gZmFsc2U7IH0KICAgIH0KCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgewogICAgICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogICAgfQoKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpIHsKICAgICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07CiAgICB9CgogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsKICAgIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5Owp9Cgpjb250cmFjdCBDcnlzdGFsUmVpZ25TaGFyZCBpcyBTdGFuZGFyZFRva2VuIHsKICB1c2luZyBTYWZlTWF0aCBmb3IgdWludDsKCiAgICBzdHJpbmcgcHVibGljIG5hbWU7IAogICAgdWludDggcHVibGljIGRlY2ltYWxzOyAgICAgICAgICAgIAogICAgc3RyaW5nIHB1YmxpYyBzeW1ib2w7IAogICAgc3RyaW5nIHB1YmxpYyB2ZXJzaW9uID0gJ0gxLjAnOwogICAgdWludDI1NiBwdWJsaWMgdW5pdHNPbmVFdGhDYW5CdXk7CiAgICB1aW50MjU2IHB1YmxpYyBwcmVTYWxlUHJpY2U7CiAgICB1aW50MjU2IHB1YmxpYyBwcmVBbHBoYVByaWNlOwogICAgdWludDI1NiBwdWJsaWMgdG90YWxFdGhJbldlaTsKICAgIGFkZHJlc3MgcHVibGljIGZ1bmRzV2FsbGV0OwogICAgYWRkcmVzcyBwdWJsaWMgZHJvcFdhbGxldCA9IDB4ODhkMzhGNmNiMmFGMjUwQWI4ZjFGQTI0ODUxYmEzMTJiMGM0ODY3NTsKICAgIGFkZHJlc3MgcHVibGljIGNvbXBXYWxsZXQgPSAweENmNzk0ODk2YzE3ODhGNzk5ZGMxNDEwMTViM2FBYWUwNzIxZTdjMjc7CiAgICBhZGRyZXNzIHB1YmxpYyBtYXJrZXRpbmdXYWxsZXQgPSAweDQ5Y2M3MWEzYThjN0QxNEJmNmE4Njg3MTdDODFiMjQ4NTA2NDAyRDg7CiAgICB1aW50MjU2IHB1YmxpYyBib251c0VUSCA9IDA7CiAgICB1aW50MjU2IHB1YmxpYyBib251c0NSUyA9IDA7CiAgICB1aW50IHB1YmxpYyBzdGFydCA9IDE1MTk0NzcyMDA7CiAgICB1aW50IHB1YmxpYyBtaW50Q291bnQgPSAwOwoKCiAgICBmdW5jdGlvbiBDcnlzdGFsUmVpZ25TaGFyZCgpIHsKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IDE2NDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwOwogICAgICAgIGJhbGFuY2VzW2Ryb3BXYWxsZXRdID0gMTY0MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA7CiAgICAgICAgYmFsYW5jZXNbY29tcFdhbGxldF0gPSAxNjQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDsKICAgICAgICBiYWxhbmNlc1ttYXJrZXRpbmdXYWxsZXRdID0gODAwMDAwMDAwMDAwMDAwMDAwMDAwMDA7CiAgICAgICAgdG90YWxTdXBwbHkgPSA1MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDsgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICBuYW1lID0gIkNyeXN0YWwgUmVpZ24gU2hhcmQiOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICBkZWNpbWFscyA9IDE4OyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICBzeW1ib2wgPSAiQ1JTIjsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgdW5pdHNPbmVFdGhDYW5CdXkgPSAxMDAwOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgcHJlU2FsZVByaWNlID0gMjAwMDsKICAgICAgICBwcmVBbHBoYVByaWNlID0gMTMwMDsKICAgICAgICBmdW5kc1dhbGxldCA9IG1zZy5zZW5kZXI7ICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgfQoKICAgIGZ1bmN0aW9uKCkgcGF5YWJsZXsKICAgICAgICB0b3RhbEV0aEluV2VpID0gdG90YWxFdGhJbldlaSArIG1zZy52YWx1ZTsKICAgICAgICB1aW50MjU2IGFtb3VudCA9IG1zZy52YWx1ZSAqIHVuaXRzT25lRXRoQ2FuQnV5OwogICAgICAgIGlmIChub3cgPCAxNTIxMDI4ODAwKXsKICAgICAgICAgICAgYW1vdW50ID0gbXNnLnZhbHVlICogcHJlU2FsZVByaWNlOwogICAgICAgIH0KICAgICAgICBlbHNlIGlmIChub3cgPCAxNTI0NTcxMjAwKSB7CiAgICAgICAgICBhbW91bnQgPSBtc2cudmFsdWUgKiBwcmVBbHBoYVByaWNlOwogICAgICAgIH0KICAgICAgICBpZiAoYmFsYW5jZXNbZnVuZHNXYWxsZXRdIDwgYW1vdW50KSB7CiAgICAgICAgICAgIG1zZy5zZW5kZXIudHJhbnNmZXIobXNnLnZhbHVlKTsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgYmFsYW5jZXNbZnVuZHNXYWxsZXRdID0gYmFsYW5jZXNbZnVuZHNXYWxsZXRdIC0gYW1vdW50OwogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gYmFsYW5jZXNbbXNnLnNlbmRlcl0gKyBhbW91bnQ7CgogICAgICAgIFRyYW5zZmVyKGZ1bmRzV2FsbGV0LCBtc2cuc2VuZGVyLCBhbW91bnQpOwoKICAgICAgICBmdW5kc1dhbGxldC50cmFuc2Zlcihtc2cudmFsdWUpOwogICAgfQoKICAgIGZ1bmN0aW9uIGFwcHJvdmVBbmRDYWxsKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlLCBieXRlcyBfZXh0cmFEYXRhKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsKICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsKICAgICAgICBpZighX3NwZW5kZXIuY2FsbChieXRlczQoYnl0ZXMzMihzaGEzKCJyZWNlaXZlQXBwcm92YWwoYWRkcmVzcyx1aW50MjU2LGFkZHJlc3MsYnl0ZXMpIikpKSwgbXNnLnNlbmRlciwgX3ZhbHVlLCB0aGlzLCBfZXh0cmFEYXRhKSkgeyB0aHJvdzsgfQogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIG1pbnQoKXsKICAgICAgaWYgKG5vdyA+PSBzdGFydCArICg1IHllYXJzICogbWludENvdW50KSAmJiBtc2cuc2VuZGVyID09IGZ1bmRzV2FsbGV0KSB7CiAgICAgICAgYmFsYW5jZXNbZHJvcFdhbGxldF0gKz0gMTY0MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA7CiAgICAgICAgbWludENvdW50Kys7CiAgICAgICAgdG90YWxTdXBwbHkgKz0gMTY0MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA7CiAgICAgIH0KICAgIH0KCiAgICAgIGZ1bmN0aW9uIHRpbGVEcm9wKGFkZHJlc3NbXSB3aW5uZXJzKSByZXR1cm5zKGJvb2wgc3VjY2Vzcyl7CiAgICAgIGlmKG1zZy5zZW5kZXIgPT0gZnVuZHNXYWxsZXQpewogICAgICAgIHVpbnQyNTYgYW1vdW50ID0gMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDsKICAgICAgICBmb3IodWludCB3aW5MaXN0ID0gMDsgd2luTGlzdCA8IHdpbm5lcnMubGVuZ3RoOyB3aW5MaXN0KyspewogICAgICAgICAgd2lubmVyc1t3aW5MaXN0XS50cmFuc2Zlcihib251c0VUSC5kaXYoNjQpKTsKICAgICAgICAgIGJhbGFuY2VzW3dpbm5lcnNbd2luTGlzdF1dID0gYmFsYW5jZXNbd2lubmVyc1t3aW5MaXN0XV0gKyBhbW91bnQ7CiAgICAgICAgICBib251c0VUSCAtPSBib251c0VUSC5kaXYoNjQpOwogICAgICAgICAgICBpZiAoYmFsYW5jZXNbZHJvcFdhbGxldF0gPj0gYW1vdW50KSB7CiAgICAgICAgICAgIGJhbGFuY2VzW2Ryb3BXYWxsZXRdID0gYmFsYW5jZXNbZHJvcFdhbGxldF0gLSBhbW91bnQ7CiAgICAgICAgICAgIGJhbGFuY2VzW3dpbm5lcnNbd2luTGlzdF1dID0gYmFsYW5jZXNbd2lubmVyc1t3aW5MaXN0XV0gKyBib251c0NSUy5kaXYoNjQpOwogICAgICAgICAgICBib251c0NSUyAtPSBib251c0NSUy5kaXYoNjQpOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICBUcmFuc2Zlcihkcm9wV2FsbGV0LCBtc2cuc2VuZGVyLCBhbW91bnQpOyAvLyBCcm9hZGNhc3QgYSBtZXNzYWdlIHRvIHRoZSBibG9ja2NoYWluCiAgICAgICAgfQoKICAgICAgICBiYWxhbmNlc1tmdW5kc1dhbGxldF0gPSBiYWxhbmNlc1tmdW5kc1dhbGxldF0gKyBib251c0NSUzsKICAgICAgICBib251c0NSUyA9IDA7CiAgICAgICAgVHJhbnNmZXIoZnVuZHNXYWxsZXQsIG1zZy5zZW5kZXIsIGJvbnVzRVRIKTsgLy8gQnJvYWRjYXN0IGEgbWVzc2FnZSB0byB0aGUgYmxvY2tjaGFpbgogICAgICAgIGZ1bmRzV2FsbGV0LnRyYW5zZmVyKGJvbnVzRVRIKTsKICAgICAgICBib251c0VUSCA9IDA7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfQogICAgICAgIGVsc2V7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGZ1bmN0aW9uIHB1cmNoYXNlRVRIKCkgcGF5YWJsZSByZXR1cm5zKGJvb2wgc3VjY2Vzcyl7CiAgICAgICAgICBib251c0VUSCArPSAgKG1zZy52YWx1ZS5kaXYoNSkpLm11bCg0KTsKICAgICAgICAgIFRyYW5zZmVyKGZ1bmRzV2FsbGV0LCBtc2cuc2VuZGVyLCAobXNnLnZhbHVlLmRpdig1KSkpOwogICAgICAgICAgZnVuZHNXYWxsZXQudHJhbnNmZXIobXNnLnZhbHVlLmRpdig1KSk7CiAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9CgogICAgICAgIGZ1bmN0aW9uIHB1cmNoYXNlQ1JTKHVpbnQyNTYgYW1vdW50KSBwdWJsaWMgcmV0dXJucyhib29sIHN1Y2Nlc3Mpey8vCiAgICAgICAgICBpZihiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBhbW91bnQpewogICAgICAgICAgICBiYWxhbmNlc1tmdW5kc1dhbGxldF0gPSBiYWxhbmNlc1tmdW5kc1dhbGxldF0gKyBhbW91bnQuZGl2KDUpOwogICAgICAgICAgICBib251c0NSUyArPSAoYW1vdW50LmRpdig1KSkubXVsKDQpOwogICAgICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IGJhbGFuY2VzW21zZy5zZW5kZXJdIC0gYW1vdW50OwogICAgICAgICAgfQoKICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgfQoKCgoKCn0='.
	

]
