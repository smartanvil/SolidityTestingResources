Class {
	#name : #SRT6dd4e4aad29a40edd6a409b9c1625186c9855b4d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT6dd4e4aad29a40edd6a409b9c1625186c9855b4d >> base64 [
	^ ''.
	

]
