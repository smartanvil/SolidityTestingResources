Class {
	#name : #SRT579D22cd30B642fF29f04FB8fD804a6A878138Ae,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT579D22cd30B642fF29f04FB8fD804a6A878138Ae >> base64 [
	^ ''.
	

]
