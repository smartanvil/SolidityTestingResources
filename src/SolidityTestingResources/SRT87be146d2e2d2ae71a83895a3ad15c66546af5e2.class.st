Class {
	#name : #SRT87be146d2e2d2ae71a83895a3ad15c66546af5e2,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT87be146d2e2d2ae71a83895a3ad15c66546af5e2 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuODsKCgovKioKICogQHRpdGxlIEVSQzIwCiAqLwpjb250cmFjdCBFUkMyMCB7CiAgICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgdG90YWxTdXBwbHkpOwogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpOwogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKTsKICAgIAogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50MjU2IF92YWx1ZSk7CiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKTsKfQoKCi8qKgogKiBAdGl0bGUgTWFpbnN0cmVldFRva2VuCiAqLwpjb250cmFjdCBNYWluc3RyZWV0VG9rZW4gaXMgRVJDMjAgewogICAgCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQpIG93bmVyTUlUOwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQpKSBhbGxvd2VkOwogICAgdWludCBwdWJsaWMgdG90YWxNSVQ7CiAgICB1aW50IHB1YmxpYyBzdGFydDsKICAgIAogICAgYWRkcmVzcyBwdWJsaWMgbWFpbnN0cmVldENyb3dkZnVuZDsKCiAgICBhZGRyZXNzIHB1YmxpYyBpbnRlbGxpc3lzOwogICAgCiAgICBib29sIHB1YmxpYyB0ZXN0aW5nOwoKICAgIG1vZGlmaWVyIGZyb21Dcm93ZGZ1bmQoKSB7CiAgICAgICAgaWYgKG1zZy5zZW5kZXIgIT0gbWFpbnN0cmVldENyb3dkZnVuZCkgewogICAgICAgICAgICB0aHJvdzsKICAgICAgICB9CiAgICAgICAgXzsKICAgIH0KICAgIAogICAgbW9kaWZpZXIgaXNBY3RpdmUoKSB7CiAgICAgICAgaWYgKGJsb2NrLnRpbWVzdGFtcCA8IHN0YXJ0KSB7CiAgICAgICAgICAgIHRocm93OwogICAgICAgIH0KICAgICAgICBfOwogICAgfQoKICAgIG1vZGlmaWVyIGlzTm90QWN0aXZlKCkgewogICAgICAgIGlmICghdGVzdGluZyAmJiBibG9jay50aW1lc3RhbXAgPj0gc3RhcnQpIHsKICAgICAgICAgICAgdGhyb3c7CiAgICAgICAgfQogICAgICAgIF87CiAgICB9CgogICAgbW9kaWZpZXIgcmVjaXBpZW50SXNWYWxpZChhZGRyZXNzIHJlY2lwaWVudCkgewogICAgICAgIGlmIChyZWNpcGllbnQgPT0gMCB8fCByZWNpcGllbnQgPT0gYWRkcmVzcyh0aGlzKSkgewogICAgICAgICAgICB0aHJvdzsKICAgICAgICB9CiAgICAgICAgXzsKICAgIH0KCiAgICBtb2RpZmllciBzZW5kZXJIYXNTdWZmaWNpZW50KHVpbnQgTUlUKSB7CiAgICAgICAgaWYgKG93bmVyTUlUW21zZy5zZW5kZXJdIDwgTUlUKSB7CiAgICAgICAgICAgIHRocm93OwogICAgICAgIH0KICAgICAgICBfOwogICAgfQoKICAgIG1vZGlmaWVyIHRyYW5zZmVyQXBwcm92ZWQoYWRkcmVzcyBmcm9tLCB1aW50IE1JVCkgewogICAgICAgIGlmIChhbGxvd2VkW2Zyb21dW21zZy5zZW5kZXJdIDwgTUlUIHx8IG93bmVyTUlUW2Zyb21dIDwgTUlUKSB7CiAgICAgICAgICAgIHRocm93OwogICAgICAgIH0KICAgICAgICBfOwogICAgfQoKICAgIG1vZGlmaWVyIGFsbG93YW5jZUlzWmVybyhhZGRyZXNzIHNwZW5kZXIsIHVpbnQgdmFsdWUpIHsKICAgICAgICAvLyBUbyBjaGFuZ2UgdGhlIGFwcHJvdmUgYW1vdW50IHlvdSBmaXJzdCBoYXZlIHRvIHJlZHVjZSB0aGUgYWRkcmVzc2VzJiMxODA7CiAgICAgICAgLy8gYWxsb3dhbmNlIHRvIHplcm8gYnkgY2FsbGluZyBgYXBwcm92ZShfc3BlbmRlciwwKWAgaWYgaXQgaXMgbm90CiAgICAgICAgLy8gYWxyZWFkeSAwIHRvIG1pdGlnYXRlIHRoZSByYWNlIGNvbmRpdGlvbiBkZXNjcmliZWQgaGVyZToKICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9pc3N1ZXMvMjAjaXNzdWVjb21tZW50LTI2MzUyNDcyOQogICAgICAgIGlmICgodmFsdWUgIT0gMCkgJiYgKGFsbG93ZWRbbXNnLnNlbmRlcl1bc3BlbmRlcl0gIT0gMCkpIHsKICAgICAgICAgICAgdGhyb3c7CiAgICAgICAgfQogICAgICAgIF87CiAgICB9CgogICAgLyoqCiAgICAgKiBAZGV2IFRva2VucyBoYXZlIGJlZW4gYWRkZWQgdG8gYW4gYWRkcmVzcyBieSB0aGUgY3Jvd2RmdW5kaW5nIGNvbnRyYWN0LgogICAgICogQHBhcmFtIHJlY2lwaWVudCBBZGRyZXNzIHJlY2VpdmluZyB0aGUgTUlULgogICAgICogQHBhcmFtIE1JVCBBbW91bnQgb2YgTUlUIGFkZGVkLgogICAgICovCiAgICBldmVudCBUb2tlbnNBZGRlZChhZGRyZXNzIGluZGV4ZWQgcmVjaXBpZW50LCB1aW50IE1JVCk7CgogICAgLyoqCiAgICAgKiBAZGV2IENvbnN0cnVjdG9yLgogICAgICogQHBhcmFtIF9tYWluc3RyZWV0Q3Jvd2RmdW5kIEFkZHJlc3Mgb2YgY3Jvd2RmdW5kIGNvbnRyYWN0LgogICAgICogQHBhcmFtIF9pbnRlbGxpc3lzIEFkZHJlc3MgdG8gcmVjZWl2ZSBpbnRlbGxpc3lzJyB0b2tlbnMuCiAgICAgKiBAcGFyYW0gX3N0YXJ0IFRpbWVzdGFtcCB3aGVuIHRoZSB0b2tlbiBiZWNvbWVzIGFjdGl2ZS4KICAgICAqLwogICAgZnVuY3Rpb24gTWFpbnN0cmVldFRva2VuKGFkZHJlc3MgX21haW5zdHJlZXRDcm93ZGZ1bmQsIGFkZHJlc3MgX2ludGVsbGlzeXMsIHVpbnQgX3N0YXJ0LCBib29sIF90ZXN0aW5nKSB7CiAgICAgICAgbWFpbnN0cmVldENyb3dkZnVuZCA9IF9tYWluc3RyZWV0Q3Jvd2RmdW5kOwogICAgICAgIGludGVsbGlzeXMgPSBfaW50ZWxsaXN5czsKICAgICAgICBzdGFydCA9IF9zdGFydDsKICAgICAgICB0ZXN0aW5nID0gX3Rlc3Rpbmc7CiAgICB9CiAgICAKICAgIC8qKgogICAgICogQGRldiBBZGQgdG8gdG9rZW4gYmFsYW5jZSBvbiBhZGRyZXNzLiBNdXN0IGJlIGZyb20gY3Jvd2RmdW5kLgogICAgICogQHBhcmFtIHJlY2lwaWVudCBBZGRyZXNzIHRvIGFkZCB0b2tlbnMgdG8uCiAgICAgKiBAcmV0dXJuIE1JVCBBbW91bnQgb2YgTUlUIHRvIGFkZC4KICAgICAqLwogICAgZnVuY3Rpb24gYWRkVG9rZW5zKGFkZHJlc3MgcmVjaXBpZW50LCB1aW50IE1JVCkgZXh0ZXJuYWwgaXNOb3RBY3RpdmUgZnJvbUNyb3dkZnVuZCB7CiAgICAgICAgb3duZXJNSVRbcmVjaXBpZW50XSArPSBNSVQ7CiAgICAgICAgdWludCBpbnRlbGxpc3lzTUlUID0gTUlUIC8gMTA7CiAgICAgICAgb3duZXJNSVRbaW50ZWxsaXN5c10gKz0gaW50ZWxsaXN5c01JVDsKICAgICAgICB0b3RhbE1JVCArPSBNSVQgKyBpbnRlbGxpc3lzTUlUOwogICAgICAgIFRva2Vuc0FkZGVkKHJlY2lwaWVudCwgTUlUKTsKICAgICAgICBUb2tlbnNBZGRlZChpbnRlbGxpc3lzLCBpbnRlbGxpc3lzTUlUKTsKICAgIH0KCiAgICAvKioKICAgICAqIEBkZXYgSW1wbGVtZW50cyBFUkMyMCB0b3RhbFN1cHBseSgpCiAgICAgKi8KICAgIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiB0b3RhbFN1cHBseSkgewogICAgICAgIHRvdGFsU3VwcGx5ID0gdG90YWxNSVQ7CiAgICB9CgogICAgLyoqCiAgICAgKiBAZGV2IEltcGxlbWVudHMgRVJDMjAgYmFsYW5jZU9mKCkKICAgICAqLwogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpIHsKICAgICAgICBiYWxhbmNlID0gb3duZXJNSVRbX293bmVyXTsKICAgIH0KCiAgICAvKioKICAgICAqIEBkZXYgSW1wbGVtZW50cyBFUkMyMCB0cmFuc2ZlcigpCiAgICAgKi8KICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgaXNBY3RpdmUgcmVjaXBpZW50SXNWYWxpZChfdG8pIHNlbmRlckhhc1N1ZmZpY2llbnQoX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBvd25lck1JVFttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgb3duZXJNSVRbX3RvXSArPSBfdmFsdWU7CiAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIC8qKgogICAgICogQGRldiBJbXBsZW1lbnRzIEVSQzIwIHRyYW5zZmVyRnJvbSgpCiAgICAgKi8KICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIGlzQWN0aXZlIHJlY2lwaWVudElzVmFsaWQoX3RvKSB0cmFuc2ZlckFwcHJvdmVkKF9mcm9tLCBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIG93bmVyTUlUW190b10gKz0gX3ZhbHVlOwogICAgICAgIG93bmVyTUlUW19mcm9tXSAtPSBfdmFsdWU7CiAgICAgICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOwogICAgICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgLyoqCiAgICAgKiBAZGV2IEltcGxlbWVudHMgRVJDMjAgYXBwcm92ZSgpCiAgICAgKi8KICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIGlzQWN0aXZlIGFsbG93YW5jZUlzWmVybyhfc3BlbmRlciwgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsKICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICAvKioKICAgICAqIEBkZXYgSW1wbGVtZW50cyBFUkMyMCBhbGxvd2FuY2UoKQogICAgICovCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKSB7CiAgICAgICAgcmVtYWluaW5nID0gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsKICAgIH0KCn0='.
	

]
