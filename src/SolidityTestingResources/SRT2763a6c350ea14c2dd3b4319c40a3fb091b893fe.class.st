Class {
	#name : #SRT2763a6c350ea14c2dd3b4319c40a3fb091b893fe,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT2763a6c350ea14c2dd3b4319c40a3fb091b893fe >> base64 [
	^ ''.
	

]
