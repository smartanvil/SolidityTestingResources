Class {
	#name : #SRT774a6a79515756b50b66b85b09d792e3a5378dac,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT774a6a79515756b50b66b85b09d792e3a5378dac >> base64 [
	^ ''.
	

]
