Class {
	#name : #SRT937ee62efc6a3b3f498ef59bca5e9f59cf4166ca,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT937ee62efc6a3b3f498ef59bca5e9f59cf4166ca >> base64 [
	^ ''.
	

]
