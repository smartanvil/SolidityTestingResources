Class {
	#name : #SRT13407d93f343148bf03eacf482441dd526cd7ebd,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT13407d93f343148bf03eacf482441dd526cd7ebd >> base64 [
	^ ''.
	

]
