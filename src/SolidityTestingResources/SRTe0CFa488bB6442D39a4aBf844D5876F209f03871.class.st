Class {
	#name : #SRTe0CFa488bB6442D39a4aBf844D5876F209f03871,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTe0CFa488bB6442D39a4aBf844D5876F209f03871 >> base64 [
	^ 'Y29udHJhY3QgZEV0aGVyZXVtbG90dGVyeU5ldCB7CgkvKgoJCWRFdGhlcmV1bWxvdHRlcnlOZXQKCQlDb2RlZCBieTogaUZBCgkJaHR0cHM6Ly9kLmV0aGVyZXVtbG90dGVyeS5uZXQKCQl2ZXI6IDIuMC4wCgkqLwoJCgkvKgoJCVZhcnMKCSovCglhZGRyZXNzIHByaXZhdGUgb3duZXI7Cgl1aW50IHByaXZhdGUgY29uc3RhbnQgZmVlID0gNTsKCXVpbnQgcHJpdmF0ZSBjb25zdGFudCBpbnZlc3RvckZlZSA9IDUwOwoJdWludCBwcml2YXRlIGNvbnN0YW50IHByZXBhcmVCbG9ja0RlbGF5ID0gNDsKCXVpbnQgcHJpdmF0ZSBjb25zdGFudCByb2xsTG9zc0Jsb2NrRGVsYXkgPSAzMDsKCXVpbnQgcHJpdmF0ZSBjb25zdGFudCBpbnZlc3RVbml0ID0gMSBldGhlcjsKCXVpbnQgcHJpdmF0ZSBjb25zdGFudCBleHRyYVJhdGUgPSAxMzA7Cgl1aW50IHByaXZhdGUgY29uc3RhbnQgbWluaW11bVJvbGxQcmljZSA9IDEwIGZpbm5leTsKCXVpbnQgcHJpdmF0ZSBjb25zdGFudCBpbnZlc3RNaW5EdXJhdGlvbiA9IDEgZGF5czsKCXVpbnQgcHJpdmF0ZSBjb25zdGFudCBCZXN0Um9sbFJhdGUgPSAyNjsKCQogICAgYm9vbCBwdWJsaWMgQ29udHJhY3RFbmFibGVkID0gdHJ1ZTsKICAgIHVpbnQgcHVibGljIENvbnRyYWN0RGlzYWJsZWRCbG9jazsKCXVpbnQgcHVibGljIEphY2twb3Q7Cgl1aW50IHB1YmxpYyBSb2xsQ291bnQ7Cgl1aW50IHB1YmxpYyBKYWNrcG90SGl0czsKCQoJdWludCBwcml2YXRlIGphY2twb3RfOwoJdWludCBwcml2YXRlIGV4dHJhSmFja3BvdF87Cgl1aW50IHByaXZhdGUgZmVlVmFsdWU7Cgl1aW50IHByaXZhdGUgcGxheWVyc1BvdDsKCQoJc3RydWN0IHJvbGxzX3MgewoJCXVpbnQgYmxvY2tOdW1iZXI7CgkJYnl0ZXMzMiBleHRyYUhhc2g7CgkJYm9vbCB2YWxpZDsKCQl1aW50IHZhbHVlOwoJCXVpbnQgZ2FtZTsKCX0KCQoJbWFwcGluZyhhZGRyZXNzID0+IHJvbGxzX3NbXSkgcHJpdmF0ZSBwbGF5ZXJzOwoJCglzdHJ1Y3QgaW52ZXN0b3JzX3MgewoJCWFkZHJlc3Mgb3duZXI7CgkJdWludCB2YWx1ZTsKCQl1aW50IGJhbGFuY2U7CgkJYm9vbCBsaXZlOwoJCWJvb2wgdmFsaWQ7CgkJdWludCB0aW1lc3RhbXA7Cgl9CgkKCWludmVzdG9yc19zW10gaW52ZXN0b3JzOwoJCglzdHJpbmcgY29uc3RhbnQgcHVibGljIEluZm9ybWF0aW9uID0gImh0dHBzOi8vZC5ldGhlcmV1bWxvdHRlcnkubmV0IjsKCQoJLyoKCQlEZXBsb3kKCSovCglmdW5jdGlvbiBkRXRoZXJldW1sb3R0ZXJ5TmV0KCkgewoJCW93bmVyID0gbXNnLnNlbmRlcjsKCX0KCQoJLyogCgkJQ29uc3RhbnMgZnVuY3Rpb25zCgkqLwoJZnVuY3Rpb24gQ2hhbmNlT2ZXaW5uaW5nKHVpbnQgVmFsdWUpIGNvbnN0YW50IHJldHVybnModWludCBSYXRlLCB1aW50IEJldCkgewoJICAgIGlmIChqYWNrcG90XyA9PSAwKSB7CgkgICAgICAgIFJhdGUgPSAwOwoJICAgICAgICBCZXQgPSAwOwoJICAgICAgICByZXR1cm47CgkgICAgfQoJCWlmIChWYWx1ZSA8IG1pbmltdW1Sb2xsUHJpY2UpIHsKCQkJVmFsdWUgPSBtaW5pbXVtUm9sbFByaWNlOwoJCX0KCQlSYXRlID0gZ2V0UmF0ZShWYWx1ZSk7CgkJQmV0ID0gZ2V0UmVhbEJldChSYXRlKTsKCQlpZiAoVmFsdWUgPCBCZXQpIHsKCQkgICAgUmF0ZSsrOwoJCSAgICBCZXQgPSBnZXRSZWFsQmV0KFJhdGUpOwoJCX0KCQlpZiAoUmF0ZSA8IEJlc3RSb2xsUmF0ZSkgeyAKCQkgICAgUmF0ZSA9IEJlc3RSb2xsUmF0ZTsKCQkgICAgQmV0ID0gZ2V0UmVhbEJldChSYXRlKTsKICAgICAgICB9Cgl9CglmdW5jdGlvbiBCZXRQcmljZUxpbWl0KCkgY29uc3RhbnQgcmV0dXJucyh1aW50IG1pbix1aW50IG1heCkgewoJCW1pbiA9IG1pbmltdW1Sb2xsUHJpY2U7CgkJbWF4ID0gZ2V0UmVhbEJldChCZXN0Um9sbFJhdGUpOwoJfQoJZnVuY3Rpb24gSW52ZXN0b3JzKHVpbnQgaWQpIGNvbnN0YW50IHJldHVybnMoYWRkcmVzcyBPd25lciwgdWludCBJbnZlc3RtZW50LCB1aW50IEJhbGFuY2UsIGJvb2wgTGl2ZSkgewoJCWlmIChpZCA8IGludmVzdG9ycy5sZW5ndGgpIHsKCQkJT3duZXIgPSBpbnZlc3RvcnNbaWRdLm93bmVyOwoJCQlJbnZlc3RtZW50ID0gaW52ZXN0b3JzW2lkXS52YWx1ZTsKCQkJQmFsYW5jZSA9IGludmVzdG9yc1tpZF0uYmFsYW5jZTsKCQkJTGl2ZSA9IGludmVzdG9yc1tpZF0ubGl2ZTsKCQl9IGVsc2UgewoJCQlPd25lciA9IDA7CgkJCUludmVzdG1lbnQgPSAwOwoJCQlCYWxhbmNlID0gMDsKCQkJTGl2ZSA9IGZhbHNlOwoJCX0KCX0KCQoJLyoKCQlFeHRlcm5hbCBmdW5jdGlvbnMKCSovCgkvKiBGYWxsYmFjayAqLwoJZnVuY3Rpb24gKCkgewoJCVByZXBhcmVSb2xsKDApOwoJfQoJLyogRm9yIEludmVzdG9ycyAqLwoJZnVuY3Rpb24gSW52ZXN0KCkgT25seUVuYWJsZWQgZXh0ZXJuYWwgewoJCXVpbnQgdmFsdWVfID0gbXNnLnZhbHVlOwoJCWlmICh2YWx1ZV8gPCBpbnZlc3RVbml0KSB7IHRocm93OyB9CgkJaWYgKHZhbHVlXyAlIGludmVzdFVuaXQgPiAwKSB7IAoJCQlpZiAoICEgbXNnLnNlbmRlci5zZW5kKHZhbHVlXyAlIGludmVzdFVuaXQpKSB7IHRocm93OyB9IAoJCQl2YWx1ZV8gPSB2YWx1ZV8gLSAodmFsdWVfICUgaW52ZXN0VW5pdCk7CgkJfQoJCWZvciAoIHVpbnQgYT0wIDsgYSA8IGludmVzdG9ycy5sZW5ndGggOyBhKysgKSB7CgkJCWlmICggISBpbnZlc3RvcnNbYV0udmFsaWQpIHsKCQkJCW5ld0ludmVzdChhLG1zZy5zZW5kZXIsdmFsdWVfKTsKCQkJCXJldHVybjsKCQkJfQoJCX0KCQlpbnZlc3RvcnMubGVuZ3RoKys7CgkJbmV3SW52ZXN0KGludmVzdG9ycy5sZW5ndGgtMSxtc2cuc2VuZGVyLHZhbHVlXyk7Cgl9CglmdW5jdGlvbiBHZXRNeUludmVzdEZlZSgpIGV4dGVybmFsIHsKCQlyZUZ1bmQoKTsKCQl1aW50IGJhbGFuY2VfOwoJCWZvciAoIHVpbnQgYT0wIDsgYSA8IGludmVzdG9ycy5sZW5ndGggOyBhKysgKSB7CgkJCWlmIChpbnZlc3RvcnNbYV0ub3duZXIgPT0gbXNnLnNlbmRlciAmJiAhIGludmVzdG9yc1thXS52YWxpZCkgewoJCQkJYmFsYW5jZV8gPSBpbnZlc3RvcnNbYV0uYmFsYW5jZTsKCQkJCWludmVzdG9yc1thXS52YWxpZCA9IGZhbHNlOwoJCQl9CgkJfQoJCWlmIChiYWxhbmNlXyA+IDApIHsgaWYgKCAhIG1zZy5zZW5kZXIuc2VuZChiYWxhbmNlXykpIHsgdGhyb3c7IH0gfQoJfQoJZnVuY3Rpb24gQ2FuY2VsTXlJbnZlc3QoKSBleHRlcm5hbCB7CgkJcmVGdW5kKCk7CgkJdWludCBiYWxhbmNlXzsKCQlmb3IgKCB1aW50IGE9MCA7IGEgPCBpbnZlc3RvcnMubGVuZ3RoIDsgYSsrICkgewoJCQlpZiAoKGludmVzdG9yc1thXS5vd25lciA9PSBtc2cuc2VuZGVyICYmIGludmVzdG9yc1thXS52YWxpZCkpIHsKCQkJICAgIGlmIChpbnZlc3RvcnNbYV0udGltZXN0YW1wIDwgbm93IHx8ICEgQ29udHJhY3RFbmFibGVkKSB7CiAgICAJCQkJaWYgKGludmVzdG9yc1thXS5saXZlKSB7CiAgICAJCQkJCWJhbGFuY2VfID0gaW52ZXN0b3JzW2FdLnZhbHVlICsgaW52ZXN0b3JzW2FdLmJhbGFuY2U7CiAgICAJCQkJCWphY2twb3RfIC09IGludmVzdG9yc1thXS52YWx1ZTsKICAgIAkJCQkJZGVsZXRlIGludmVzdG9yc1thXTsKICAgIAkJCQl9IGVsc2UgewogICAgCQkJCQliYWxhbmNlXyA9IGludmVzdG9yc1thXS5iYWxhbmNlOwogICAgCQkJCQlkZWxldGUgaW52ZXN0b3JzW2FdOwogICAgCQkJCX0KCQkJICAgIH0KCQkJfQoJCX0KCQlzZXRKYWNrcG90KCk7CgkJaWYgKGJhbGFuY2VfID4gMCkgeyBpZiAoICEgbXNnLnNlbmRlci5zZW5kKGJhbGFuY2VfKSkgeyB0aHJvdzsgfSB9Cgl9CgkvKiBGb3IgUGxheWVycyAqLwoJZnVuY3Rpb24gRG9Sb2xsKCkgZXh0ZXJuYWwgewoJCXJlRnVuZCgpOwoJCXVpbnQgdmFsdWVfOwoJCWJvb2wgZm91bmQ7CgkJZm9yICggdWludCBhPTAgOyBhIDwgcGxheWVyc1ttc2cuc2VuZGVyXS5sZW5ndGggOyBhKysgKSB7CgkJCWlmIChwbGF5ZXJzW21zZy5zZW5kZXJdW2FdLnZhbGlkKSB7CgkJCSAgICBpZiAocGxheWVyc1ttc2cuc2VuZGVyXVthXS5ibG9ja051bWJlcityb2xsTG9zc0Jsb2NrRGVsYXkgPD0gYmxvY2subnVtYmVyKSB7CgkJCSAgICAgICAgdWludCBmZWVWYWx1ZV8gPSBwbGF5ZXJzW21zZy5zZW5kZXJdW2FdLnZhbHVlLzI7CgkJCSAgICAgICAgZmVlVmFsdWUgKz0gZmVlVmFsdWVfOwoJCQkgICAgICAgIGludmVzdG9yQWRkRmVlKHBsYXllcnNbbXNnLnNlbmRlcl1bYV0udmFsdWUgLSBmZWVWYWx1ZV8pOwoJCQkJCXBsYXllcnNQb3QgLT0gcGxheWVyc1ttc2cuc2VuZGVyXVthXS52YWx1ZTsKCQkJCQlkZWxldGUgcGxheWVyc1ttc2cuc2VuZGVyXVthXTsKCQkJCQlmb3VuZCA9IHRydWU7CgkJCQkJY29udGludWU7CgkJCSAgICB9CgkJCQlpZiAoICEgQ29udHJhY3RFbmFibGVkIHx8IGphY2twb3RfID09IDAgfHwgcGxheWVyc1ttc2cuc2VuZGVyXVthXS5nYW1lICE9IEphY2twb3RIaXRzKSB7CgkJCQkJdmFsdWVfICs9IHBsYXllcnNbbXNnLnNlbmRlcl1bYV0udmFsdWU7CgkJCQkJcGxheWVyc1BvdCAtPSBwbGF5ZXJzW21zZy5zZW5kZXJdW2FdLnZhbHVlOwoJCQkJCWRlbGV0ZSBwbGF5ZXJzW21zZy5zZW5kZXJdW2FdOwoJCQkJCWZvdW5kID0gdHJ1ZTsKCQkJCQljb250aW51ZTsKCQkJCX0KCQkJCWlmIChwbGF5ZXJzW21zZy5zZW5kZXJdW2FdLmJsb2NrTnVtYmVyIDwgYmxvY2subnVtYmVyKSB7CgkJCQkJdmFsdWVfICs9IG1ha2VSb2xsKGEpOwoJCQkJCXBsYXllcnNQb3QgLT0gcGxheWVyc1ttc2cuc2VuZGVyXVthXS52YWx1ZTsKCQkJCQlkZWxldGUgcGxheWVyc1ttc2cuc2VuZGVyXVthXTsKCQkJCQlmb3VuZCA9IHRydWU7CgkJCQkJY29udGludWU7CgkJCQl9CgkJCX0KCQl9CgkJaWYgKHZhbHVlXyA+IDApIHsgaWYgKG1zZy5zZW5kZXIuc2VuZCh2YWx1ZV8pKSB7IHRocm93OyB9IH0KCQlpZiAoICEgZm91bmQpIHsgdGhyb3c7IH0KCX0KCWZ1bmN0aW9uIFByZXBhcmVSb2xsKHVpbnQgc2VlZCkgT25seUVuYWJsZWQgewoJCWlmIChtc2cudmFsdWUgPCBtaW5pbXVtUm9sbFByaWNlKSB7IHRocm93OyB9CgkJaWYgKGphY2twb3RfID09IDApIHsgdGhyb3c7IH0KCQl1aW50IF9yYXRlID0gZ2V0UmF0ZShtc2cudmFsdWUpOwoJCXVpbnQgX3JlYWxCZXQgPSBnZXRSZWFsQmV0KF9yYXRlKTsKCQlpZiAobXNnLnZhbHVlIDwgX3JlYWxCZXQpIHsKCQkgICAgX3JhdGUrKzsKCQkgICAgX3JlYWxCZXQgPSBnZXRSZWFsQmV0KF9yYXRlKTsKCQl9CgkJaWYgKF9yYXRlIDwgQmVzdFJvbGxSYXRlKSB7IAoJCSAgICBfcmF0ZSA9IEJlc3RSb2xsUmF0ZTsKCQkgICAgX3JlYWxCZXQgPSBnZXRSZWFsQmV0KF9yYXRlKTsKICAgICAgICB9CgkJaWYgKG1zZy52YWx1ZS1fcmVhbEJldCA+IDApIHsKCQkJaWYgKCAhIG1zZy5zZW5kZXIuc2VuZCggbXNnLnZhbHVlLV9yZWFsQmV0ICkpIHsgdGhyb3c7IH0KCQl9CgkJZm9yICh1aW50IGEgPSAwIDsgYSA8IHBsYXllcnNbbXNnLnNlbmRlcl0ubGVuZ3RoIDsgYSsrKSB7CgkJCWlmICggISBwbGF5ZXJzW21zZy5zZW5kZXJdW2FdLnZhbGlkKSB7CgkJCQlwcmVwYXJlUm9sbCggYSwgX3JlYWxCZXQsIHNlZWQgKTsKCQkJCXJldHVybjsKCQkJfQoJCX0KCQlwbGF5ZXJzW21zZy5zZW5kZXJdLmxlbmd0aCsrOwoJCXByZXBhcmVSb2xsKCBwbGF5ZXJzW21zZy5zZW5kZXJdLmxlbmd0aC0xLCBfcmVhbEJldCwgc2VlZCApOwoJfQoJLyogRm9yIE93bmVyICovCglmdW5jdGlvbiBPd25lckNsb3NlQ29udHJhY3QoKSBleHRlcm5hbCBPbmx5T3duZXIgewoJCXJlRnVuZCgpOwoJCWlmICggISBDb250cmFjdEVuYWJsZWQpIHsKCQkgICAgaWYgKENvbnRyYWN0RGlzYWJsZWRCbG9jayA8IGJsb2NrLm51bWJlcikgewoJCSAgICAgICAgdWludCBiYWxhbmNlXyA9IHRoaXMuYmFsYW5jZTsKCQkgICAgICAgIGZvciAoIHVpbnQgYT0wIDsgYSA8IGludmVzdG9ycy5sZW5ndGggOyBhKysgKSB7CgkJICAgICAgICAgICAgYmFsYW5jZV8gLT0gaW52ZXN0b3JzW2FdLmJhbGFuY2U7CgkJICAgICAgICB9CgkJICAgICAgICBpZiAoYmFsYW5jZV8gPiAwKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKCAhIG1zZy5zZW5kZXIuc2VuZChiYWxhbmNlXykpIHsgdGhyb3c7IH0KCQkgICAgICAgIH0KCQkgICAgfQoJCX0gZWxzZSB7CiAgICAJCUNvbnRyYWN0RW5hYmxlZCA9IGZhbHNlOwogICAgCQlDb250cmFjdERpc2FibGVkQmxvY2sgPSBibG9jay5udW1iZXIrcm9sbExvc3NCbG9ja0RlbGF5OwogICAgCQlmZWVWYWx1ZSArPSBleHRyYUphY2twb3RfOwogICAgCQlleHRyYUphY2twb3RfID0gMDsKCQl9Cgl9CglmdW5jdGlvbiBPd25lckdldEZlZSgpIGV4dGVybmFsIE9ubHlPd25lciB7CgkJcmVGdW5kKCk7CgkJaWYgKGZlZVZhbHVlID09IDApIHsgdGhyb3c7IH0KCQlpZiAoICEgb3duZXIuc2VuZChmZWVWYWx1ZSkpIHsgdGhyb3c7IH0KCQlmZWVWYWx1ZSA9IDA7Cgl9CgkKCS8qCgkJUHJpdmF0ZSBmdW5jdGlvbnMKCSovCglmdW5jdGlvbiBuZXdJbnZlc3QodWludCBpbnZlc3RvcnNJRCwgYWRkcmVzcyBpbnZlc3RvciwgdWludCB2YWx1ZSkgcHJpdmF0ZSB7CgkJaW52ZXN0b3JzW2ludmVzdG9yc0lEXS5vd25lciA9IGludmVzdG9yOwoJCWludmVzdG9yc1tpbnZlc3RvcnNJRF0udmFsdWUgPSB2YWx1ZTsKCQlpbnZlc3RvcnNbaW52ZXN0b3JzSURdLmJhbGFuY2UgPSAwOwoJCWludmVzdG9yc1tpbnZlc3RvcnNJRF0udmFsaWQgPSB0cnVlOwoJCWludmVzdG9yc1tpbnZlc3RvcnNJRF0ubGl2ZSA9IHRydWU7CgkJaW52ZXN0b3JzW2ludmVzdG9yc0lEXS50aW1lc3RhbXAgPSBub3cgKyBpbnZlc3RNaW5EdXJhdGlvbjsKCQlqYWNrcG90XyArPSB2YWx1ZTsKCQlzZXRKYWNrcG90KCk7Cgl9CglmdW5jdGlvbiBzZXRKYWNrcG90KCkgcHJpdmF0ZSB7CgkJSmFja3BvdCA9IGV4dHJhSmFja3BvdF8gKyBqYWNrcG90XzsKCX0KCWZ1bmN0aW9uIG1ha2VSb2xsKHVpbnQgaWQpIHByaXZhdGUgcmV0dXJucyh1aW50IHdpbikgewoJCXVpbnQgZmVlVmFsdWVfID0gcGxheWVyc1ttc2cuc2VuZGVyXVtpZF0udmFsdWUgKiBmZWUgLyAxMDAgOwoJCWZlZVZhbHVlICs9IGZlZVZhbHVlXzsKCQl1aW50IGludmVzdG9yRmVlXyA9IHBsYXllcnNbbXNnLnNlbmRlcl1baWRdLnZhbHVlICogaW52ZXN0b3JGZWUgLyAxMDA7CgkJaW52ZXN0b3JBZGRGZWUoaW52ZXN0b3JGZWVfKTsKCQlleHRyYUphY2twb3RfICs9IHBsYXllcnNbbXNnLnNlbmRlcl1baWRdLnZhbHVlIC0gZmVlVmFsdWVfIC0gaW52ZXN0b3JGZWVfOwoJCXNldEphY2twb3QoKTsKCQlieXRlczMyIGhhc2hfID0gcGxheWVyc1ttc2cuc2VuZGVyXVtpZF0uZXh0cmFIYXNoOwoJCWZvciAoIHVpbnQgYSA9IDEgOyBhIDw9IHByZXBhcmVCbG9ja0RlbGF5IDsgYSsrICkgewoJCQloYXNoXyA9IHNoYTMoaGFzaF8sIGJsb2NrLmJsb2NraGFzaChwbGF5ZXJzW21zZy5zZW5kZXJdW2lkXS5ibG9ja051bWJlciAtIHByZXBhcmVCbG9ja0RlbGF5K2EpKTsKCQl9CgkJdWludCBfcmF0ZSA9IGdldFJhdGUocGxheWVyc1ttc2cuc2VuZGVyXVtpZF0udmFsdWUpOwoJCXVpbnQgYmlnTnVtYmVyID0gdWludDY0KGhhc2hfKTsKCQlpZiAoYmlnTnVtYmVyICUgX3JhdGUgPT0gMCApIHsKCQkJd2luID0gSmFja3BvdDsKCQkJZm9yICggYT0wIDsgYSA8IGludmVzdG9ycy5sZW5ndGggOyBhKysgKSB7CgkJCQlpbnZlc3RvcnNbYV0ubGl2ZSA9IGZhbHNlOwoJCQl9CgkJCUphY2twb3RIaXRzKys7CgkJCWV4dHJhSmFja3BvdF8gPSAwOwoJCQlqYWNrcG90XyA9IDA7CgkJCUphY2twb3QgPSAwOwoJCX0KCQlSb2xsRXZlbnQobXNnLnNlbmRlciwgX3JhdGUsIGJpZ051bWJlciAlIF9yYXRlLCBiaWdOdW1iZXIgLHdpbik7CgkJZGVsZXRlIHBsYXllcnNbbXNnLnNlbmRlcl1baWRdOwoJfQoJZnVuY3Rpb24gaW52ZXN0b3JBZGRGZWUodWludCB2YWx1ZSkgcHJpdmF0ZSB7CgkJYm9vbCBkb25lOwoJCWZvciAoIHVpbnQgYT0wIDsgYSA8IGludmVzdG9ycy5sZW5ndGggOyBhKysgKSB7CgkJCWlmIChpbnZlc3RvcnNbYV0ubGl2ZSkgewoJCQkJaW52ZXN0b3JzW2FdLmJhbGFuY2UgKz0gdmFsdWUgKiBpbnZlc3RvcnNbYV0udmFsdWUgLyBqYWNrcG90XzsKCQkJCWRvbmUgPSB0cnVlOwoJCQl9CgkJfQoJCWlmICggISBkb25lKSB7CgkJCWZlZVZhbHVlICs9IHZhbHVlOwoJCX0KCX0KCWZ1bmN0aW9uIHJlRnVuZCgpIHByaXZhdGUgeyBpZiAobXNnLnZhbHVlID4gMCkgeyBpZiAoICEgbXNnLnNlbmRlci5zZW5kKG1zZy52YWx1ZSkpIHsgdGhyb3c7IH0gfSB9CglmdW5jdGlvbiBwcmVwYXJlUm9sbCh1aW50IHJvbGxJRCwgdWludCBiZXQsIHVpbnQgc2VlZCkgcHJpdmF0ZSB7CgkJcGxheWVyc1ttc2cuc2VuZGVyXVtyb2xsSURdLmJsb2NrTnVtYmVyID0gYmxvY2subnVtYmVyICsgcHJlcGFyZUJsb2NrRGVsYXk7CgkJcGxheWVyc1ttc2cuc2VuZGVyXVtyb2xsSURdLmV4dHJhSGFzaCA9IHNoYTMoUm9sbENvdW50LCBub3csIHNlZWQpOwoJCXBsYXllcnNbbXNnLnNlbmRlcl1bcm9sbElEXS52YWxpZCA9IHRydWU7CgkJcGxheWVyc1ttc2cuc2VuZGVyXVtyb2xsSURdLnZhbHVlID0gYmV0OwoJCXBsYXllcnNbbXNnLnNlbmRlcl1bcm9sbElEXS5nYW1lID0gSmFja3BvdEhpdHM7CgkJUm9sbENvdW50Kys7CgkJcGxheWVyc1BvdCArPSBiZXQ7CgkJUHJlcGFyZVJvbGxFdmVudChtc2cuc2VuZGVyLCBwbGF5ZXJzW21zZy5zZW5kZXJdW3JvbGxJRF0uYmxvY2tOdW1iZXIsIGJldCk7Cgl9CgkKCS8qCgkJSW50ZXJuYWwgZnVuY3Rpb25zCgkqLwkKCWZ1bmN0aW9uIGdldFJhdGUodWludCB2YWx1ZSkgaW50ZXJuYWwgcmV0dXJucyh1aW50KXsKCQlyZXR1cm4gamFja3BvdF8gKiAxMDAwMDAwIC8gdmFsdWUgKiAxMDAgLyBpbnZlc3RvckZlZSAqIGV4dHJhUmF0ZSAvIDEwMCAvIDEwMDAwMDA7Cgl9CglmdW5jdGlvbiBnZXRSZWFsQmV0KHVpbnQgcmF0ZSkgaW50ZXJuYWwgcmV0dXJucyAodWludCkgewoJCXJldHVybiBqYWNrcG90XyAqIDEwMDAwMDAgLyAoIHJhdGUgKiAxMDAwMDAwICogaW52ZXN0b3JGZWUgLyBleHRyYVJhdGUpOwoJfQoJCgkvKgoJCUV2ZW50cwoJKi8JCglldmVudCBSb2xsRXZlbnQoYWRkcmVzcyBQbGF5ZXIsIHVpbnQgUmF0ZSwgdWludCBSZXN1bHQsIHVpbnQgTnVtYmVyLCB1aW50IFdpbik7CglldmVudCBQcmVwYXJlUm9sbEV2ZW50KGFkZHJlc3MgUGxheWVyLCB1aW50IEJsb2NrLCB1aW50IEJldCk7CgkKCS8qCgkJTW9kaWZpZGVycwoJKi8KCW1vZGlmaWVyIE9ubHlPd25lcigpIHsgaWYgKG93bmVyICE9IG1zZy5zZW5kZXIpIHsgdGhyb3c7IH0gXzsgfQltb2RpZmllciBPbmx5RW5hYmxlZCgpIHsgaWYgKCAhIENvbnRyYWN0RW5hYmxlZCkgeyB0aHJvdzsgfSBfOyB9fQ=='.
	

]
