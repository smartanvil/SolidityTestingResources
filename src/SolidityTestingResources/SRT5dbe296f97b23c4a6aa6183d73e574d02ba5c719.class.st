Class {
	#name : #SRT5dbe296f97b23c4a6aa6183d73e574d02ba5c719,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT5dbe296f97b23c4a6aa6183d73e574d02ba5c719 >> base64 [
	^ ''.
	

]
