Class {
	#name : #SRTFA67C39935dE407b98172AB9A07291603E98A51A,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTFA67C39935dE407b98172AB9A07291603E98A51A >> base64 [
	^ ''.
	

]
