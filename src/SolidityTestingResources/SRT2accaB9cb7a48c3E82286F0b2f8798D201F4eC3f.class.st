Class {
	#name : #SRT2accaB9cb7a48c3E82286F0b2f8798D201F4eC3f,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT2accaB9cb7a48c3E82286F0b2f8798D201F4eC3f >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTU7Cgpjb250cmFjdCBPd25lZCB7CgogICAgYWRkcmVzcyBvd25lcjsKICAgIAogICAgZnVuY3Rpb24gT3duZWQoKSB7IG93bmVyID0gbXNnLnNlbmRlcjsgfQoKICAgIG1vZGlmaWVyIG9ubHlPd25lciB7CiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyKTsKICAgICAgICBfOwogICAgfQp9Cgpjb250cmFjdCBUb2tlbkVJUDIwIHsKCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSk7CiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpOwoKICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7CiAgICAKfQoKY29udHJhY3QgVG9rZW5Ob3RpZmllciB7CgogICAgZnVuY3Rpb24gcmVjZWl2ZUFwcHJvdmFsKGFkZHJlc3MgZnJvbSwgdWludDI1NiBfYW1vdW50LCBhZGRyZXNzIF90b2tlbiwgYnl0ZXMgX2RhdGEpOwp9CgpsaWJyYXJ5IFNhZmVNYXRoTGliIHsKCiAgICB1aW50IGNvbnN0YW50IFdBRCA9IDEwICoqIDE4OwogICAgdWludCBjb25zdGFudCBSQVkgPSAxMCAqKiAyNzsKCiAgICBmdW5jdGlvbiBhZGQodWludCB4LCB1aW50IHkpIGludGVybmFsIHJldHVybnMgKHVpbnQgeikgewogICAgICAgIHJlcXVpcmUoKHogPSB4ICsgeSkgPj0geCk7CiAgICB9CgogICAgZnVuY3Rpb24gc3ViKHVpbnQgeCwgdWludCB5KSBpbnRlcm5hbCByZXR1cm5zICh1aW50IHopIHsKICAgICAgICByZXF1aXJlKCh6ID0geCAtIHkpIDw9IHgpOwogICAgfQoKICAgIGZ1bmN0aW9uIG11bCh1aW50IHgsIHVpbnQgeSkgaW50ZXJuYWwgcmV0dXJucyAodWludCB6KSB7CiAgICAgICAgcmVxdWlyZSh5ID09IDAgfHwgKHogPSB4ICogeSkgLyB5ID09IHgpOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlcih1aW50IHgsIHVpbnQgeSkgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludCB6KSB7CiAgICAgICAgcmV0dXJuIG11bCgoeCAvIDEwMCksIHkpOwogICAgfQoKICAgIGZ1bmN0aW9uIG1pbih1aW50IHgsIHVpbnQgeSkgaW50ZXJuYWwgcmV0dXJucyAodWludCB6KSB7CiAgICAgICAgcmV0dXJuIHggPD0geSA/IHggOiB5OwogICAgfQoKICAgIGZ1bmN0aW9uIG1heCh1aW50IHgsIHVpbnQgeSkgaW50ZXJuYWwgcmV0dXJucyAodWludCB6KSB7CiAgICAgICAgcmV0dXJuIHggPj0geSA/IHggOiB5OwogICAgfQoKICAgIGZ1bmN0aW9uIGltaW4oaW50IHgsIGludCB5KSBpbnRlcm5hbCByZXR1cm5zIChpbnQgeikgewogICAgICAgIHJldHVybiB4IDw9IHkgPyB4IDogeTsKICAgIH0KCiAgICBmdW5jdGlvbiBpbWF4KGludCB4LCBpbnQgeSkgaW50ZXJuYWwgcmV0dXJucyAoaW50IHopIHsKICAgICAgICByZXR1cm4geCA+PSB5ID8geCA6IHk7CiAgICB9CgogICAgZnVuY3Rpb24gd211bCh1aW50IHgsIHVpbnQgeSkgaW50ZXJuYWwgcmV0dXJucyAodWludCB6KSB7CiAgICAgICAgeiA9IGFkZChtdWwoeCwgeSksIFdBRCAvIDIpIC8gV0FEOwogICAgfQoKICAgIGZ1bmN0aW9uIHJtdWwodWludCB4LCB1aW50IHkpIGludGVybmFsIHJldHVybnMgKHVpbnQgeikgewogICAgICAgIHogPSBhZGQobXVsKHgsIHkpLCBSQVkgLyAyKSAvIFJBWTsKICAgIH0KCiAgICBmdW5jdGlvbiB3ZGl2KHVpbnQgeCwgdWludCB5KSBpbnRlcm5hbCByZXR1cm5zICh1aW50IHopIHsKICAgICAgICB6ID0gYWRkKG11bCh4LCBXQUQpLCB5IC8gMikgLyB5OwogICAgfQoKICAgIGZ1bmN0aW9uIHJkaXYodWludCB4LCB1aW50IHkpIGludGVybmFsIHJldHVybnMgKHVpbnQgeikgewogICAgICAgIHogPSBhZGQobXVsKHgsIFJBWSksIHkgLyAyKSAvIHk7CiAgICB9CgogICAgZnVuY3Rpb24gd3Blcih1aW50IHgsIHVpbnQgeSkgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludCB6KSB7CiAgICAgICAgcmV0dXJuIHdtdWwod2Rpdih4LCAxMDApLCB5KTsKICAgIH0KCiAgICAvLyBUaGlzIGZhbW91cyBhbGdvcml0aG0gaXMgY2FsbGVkICJleHBvbmVudGlhdGlvbiBieSBzcXVhcmluZyIKICAgIC8vIGFuZCBjYWxjdWxhdGVzIHhebiB3aXRoIHggYXMgZml4ZWQtcG9pbnQgYW5kIG4gYXMgcmVndWxhciB1bnNpZ25lZC4KICAgIC8vCiAgICAvLyBJdCdzIE8obG9nIG4pLCBpbnN0ZWFkIG9mIE8obikgZm9yIG5haXZlIHJlcGVhdGVkIG11bHRpcGxpY2F0aW9uLgogICAgLy8KICAgIC8vIFRoZXNlIGZhY3RzIGFyZSB3aHkgaXQgd29ya3M6CiAgICAvLwogICAgLy8gIElmIG4gaXMgZXZlbiwgdGhlbiB4Xm4gPSAoeF4yKV4obi8yKS4KICAgIC8vICBJZiBuIGlzIG9kZCwgIHRoZW4geF5uID0geCAqIHheKG4tMSksCiAgICAvLyAgIGFuZCBhcHBseWluZyB0aGUgZXF1YXRpb24gZm9yIGV2ZW4geCBnaXZlcwogICAgLy8gICAgeF5uID0geCAqICh4XjIpXigobi0xKSAvIDIpLgogICAgLy8KICAgIC8vICBBbHNvLCBFVk0gZGl2aXNpb24gaXMgZmxvb3JpbmcgYW5kCiAgICAvLyAgICBmbG9vclsobi0xKSAvIDJdID0gZmxvb3JbbiAvIDJdLgogICAgLy8KICAgIGZ1bmN0aW9uIHJwb3codWludCB4LCB1aW50IG4pIGludGVybmFsIHJldHVybnMgKHVpbnQgeikgewogICAgICAgIHogPSBuICUgMiAhPSAwID8geCA6IFJBWTsKCiAgICAgICAgZm9yIChuIC89IDI7IG4gIT0gMDsgbiAvPSAyKSB7CiAgICAgICAgICAgIHggPSBybXVsKHgsIHgpOwoKICAgICAgICAgICAgaWYgKG4gJSAyICE9IDApIHsKICAgICAgICAgICAgICAgIHogPSBybXVsKHosIHgpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKfQoKY29udHJhY3QgQmF0dGxlVG9rZW4gaXMgT3duZWQsIFRva2VuRUlQMjAgewogICAgdXNpbmcgU2FmZU1hdGhMaWIgZm9yIHVpbnQyNTY7CiAgICAKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgYmFsYW5jZXM7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikpIGFsbG93ZWQ7CiAgICAKICAgIHN0cmluZyAgcHVibGljIGNvbnN0YW50IG5hbWUgICAgICAgID0gIkJhdHRsZSI7CiAgICBzdHJpbmcgIHB1YmxpYyBjb25zdGFudCBzeW1ib2wgICAgICA9ICJCVEwiOwogICAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgZGVjaW1hbHMgICAgPSAxODsKICAgIHVpbnQyNTYgcHVibGljIGNvbnN0YW50IHRvdGFsU3VwcGx5ID0gMTAwMDAwMCAqICgxMCAqKiBkZWNpbWFscyk7CgogICAgZnVuY3Rpb24gQmF0dGxlVG9rZW4oYWRkcmVzcyBfYmF0dGxlQWRkcmVzcykgewogICAgICAgIGJhbGFuY2VzW293bmVyXSA9IHRvdGFsU3VwcGx5OwogICAgICAgIHJlcXVpcmUoYXBwcm92ZShfYmF0dGxlQWRkcmVzcywgdG90YWxTdXBwbHkpKTsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGlmIChiYWxhbmNlc1ttc2cuc2VuZGVyXSA8IF92YWx1ZSkgewogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gYmFsYW5jZXNbbXNnLnNlbmRlcl0uc3ViKF92YWx1ZSk7CiAgICAgICAgYXNzZXJ0KGJhbGFuY2VzW21zZy5zZW5kZXJdID49IDApOwogICAgICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfdmFsdWUpOwogICAgICAgIGFzc2VydChiYWxhbmNlc1tfdG9dIDw9IHRvdGFsU3VwcGx5KTsKICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgaWYgKGJhbGFuY2VzW19mcm9tXSA8IF92YWx1ZSB8fCBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA8IF92YWx1ZSkgewogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICAgIGJhbGFuY2VzW19mcm9tXSA9IGJhbGFuY2VzW19mcm9tXS5zdWIoX3ZhbHVlKTsKICAgICAgICBhc3NlcnQoYmFsYW5jZXNbX2Zyb21dID49IDApOwogICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID0gYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0uc3ViKF92YWx1ZSk7CiAgICAgICAgYmFsYW5jZXNbX3RvXSA9IGJhbGFuY2VzW190b10uYWRkKF92YWx1ZSk7CiAgICAgICAgYXNzZXJ0KGJhbGFuY2VzW190b10gPD0gdG90YWxTdXBwbHkpOyAgICAgICAgCiAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsKICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBhcHByb3ZlQW5kQ2FsbChhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSwgYnl0ZXMgX2V4dHJhRGF0YSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgaWYgKCFhcHByb3ZlKF9zcGVuZGVyLCBfdmFsdWUpKSB7CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICAgICAgVG9rZW5Ob3RpZmllcihfc3BlbmRlcikucmVjZWl2ZUFwcHJvdmFsKG1zZy5zZW5kZXIsIF92YWx1ZSwgdGhpcywgX2V4dHJhRGF0YSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpIHsKICAgICAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsKICAgIH0KCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKSB7CiAgICAgICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07CiAgICB9Cn0='.
	

]
