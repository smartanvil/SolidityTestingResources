Class {
	#name : #SRTa9e2320d9e6c17eb45a921cb2698b42256f5e142,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTa9e2320d9e6c17eb45a921cb2698b42256f5e142 >> base64 [
	^ ''.
	

]
