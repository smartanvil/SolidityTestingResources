Class {
	#name : #SRTd64dce6f3f3e27b7afc5eda41ebab00556eaf946,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTd64dce6f3f3e27b7afc5eda41ebab00556eaf946 >> base64 [
	^ ''.
	

]
