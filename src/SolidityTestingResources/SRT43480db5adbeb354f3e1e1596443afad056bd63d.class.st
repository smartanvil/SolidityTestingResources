Class {
	#name : #SRT43480db5adbeb354f3e1e1596443afad056bd63d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT43480db5adbeb354f3e1e1596443afad056bd63d >> base64 [
	^ ''.
	

]
