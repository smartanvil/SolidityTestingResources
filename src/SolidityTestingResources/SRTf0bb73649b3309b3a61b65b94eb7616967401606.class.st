Class {
	#name : #SRTf0bb73649b3309b3a61b65b94eb7616967401606,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTf0bb73649b3309b3a61b65b94eb7616967401606 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMjsKCmNvbnRyYWN0IFNPQ1Rva2VuIHsKICAgIC8qIFRoaXMgY3JlYXRlcyBhbiBhcnJheSB3aXRoIGFsbCBiYWxhbmNlcyAqLwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBwdWJsaWMgYmFsYW5jZU9mOwoKICAgIC8qIEluaXRpYWxpemVzIGNvbnRyYWN0IHdpdGggaW5pdGlhbCBzdXBwbHkgdG9rZW5zIHRvIHRoZSBjcmVhdG9yIG9mIHRoZSBjb250cmFjdCAqLwogICAgZnVuY3Rpb24gU09DVG9rZW4oCiAgICAgICAgdWludDI1NiBpbml0aWFsU3VwcGx5CiAgICAgICAgKSB7CiAgICAgICAgYmFsYW5jZU9mW21zZy5zZW5kZXJdID0gaW5pdGlhbFN1cHBseTsgICAgICAgICAgICAgIC8vIEdpdmUgdGhlIGNyZWF0b3IgYWxsIGluaXRpYWwgdG9rZW5zCiAgICB9CgogICAgLyogU2VuZCBjb2lucyAqLwogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSB7CiAgICAgICAgaWYgKGJhbGFuY2VPZlttc2cuc2VuZGVyXSA8IF92YWx1ZSkgdGhyb3c7ICAgICAgICAgICAvLyBDaGVjayBpZiB0aGUgc2VuZGVyIGhhcyBlbm91Z2gKICAgICAgICBpZiAoYmFsYW5jZU9mW190b10gKyBfdmFsdWUgPCBiYWxhbmNlT2ZbX3RvXSkgdGhyb3c7IC8vIENoZWNrIGZvciBvdmVyZmxvd3MKICAgICAgICBiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOyAgICAgICAgICAgICAgICAgICAgIC8vIFN1YnRyYWN0IGZyb20gdGhlIHNlbmRlcgogICAgICAgIGJhbGFuY2VPZltfdG9dICs9IF92YWx1ZTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gQWRkIHRoZSBzYW1lIHRvIHRoZSByZWNpcGllbnQKICAgIH0KfQoKCmNvbnRyYWN0IFNPQ1Rva2VuU2FsZSB7CiAgICBhZGRyZXNzIHB1YmxpYyBiZW5lZmljaWFyeTsKICAgIHVpbnQgcHVibGljIGZ1bmRpbmdHb2FsOyAKCXVpbnQgcHVibGljIGFtb3VudFJhaXNlZDsgCgl1aW50IHB1YmxpYyBkZWFkbGluZTsgCgl1aW50IHB1YmxpYyBwcmljZTsKICAgIFNPQ1Rva2VuIHB1YmxpYyB0b2tlblJld2FyZDsKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSBwdWJsaWMgYmFsYW5jZU9mOwogICAgYm9vbCBmdW5kaW5nR29hbFJlYWNoZWQgPSBmYWxzZTsKICAgIHVpbnQgc29mdE1hcmtldGluZ0xpbWl0ID0gMjUgKiAxIGV0aGVyOwkKICAgIGV2ZW50IEdvYWxSZWFjaGVkKGFkZHJlc3MgYmVuZWZpY2lhcnksIHVpbnQgYW1vdW50UmFpc2VkKTsKICAgIGV2ZW50IEZ1bmRUcmFuc2ZlcihhZGRyZXNzIGJhY2tlciwgdWludCBhbW91bnQsIGJvb2wgaXNDb250cmlidXRpb24pOwogICAgYm9vbCBjcm93ZHNhbGVDbG9zZWQgPSBmYWxzZTsKCiAgICAvKiBkYXRhIHN0cnVjdHVyZSB0byBob2xkIGluZm9ybWF0aW9uIGFib3V0IGNhbXBhaWduIGNvbnRyaWJ1dG9ycyAqLwoKICAgIC8qICBhdCBpbml0aWFsaXphdGlvbiwgc2V0dXAgdGhlIG93bmVyICovCiAgICBmdW5jdGlvbiBTT0NUb2tlblNhbGUoCiAgICAgICAgYWRkcmVzcyBpZlN1Y2Nlc3NmdWxTZW5kVG8sCiAgICAgICAgdWludCBmdW5kaW5nR29hbEluRXRoZXJzLAogICAgICAgIHVpbnQgZHVyYXRpb25Jbk1pbnV0ZXMsCiAgICAgICAgdWludCBwcmljZVBlckV0aGVyLAogICAgICAgIFNPQ1Rva2VuIGFkZHJlc3NPZlRva2VuVXNlZEFzUmV3YXJkCiAgICApIHsKICAgICAgICBiZW5lZmljaWFyeSA9IGlmU3VjY2Vzc2Z1bFNlbmRUbzsKICAgICAgICBmdW5kaW5nR29hbCA9IGZ1bmRpbmdHb2FsSW5FdGhlcnMgKiAxIGV0aGVyOwogICAgICAgIGRlYWRsaW5lID0gbm93ICsgZHVyYXRpb25Jbk1pbnV0ZXMgKiAxIG1pbnV0ZXM7CiAgICAgICAgcHJpY2UgPSAxIGV0aGVyIC8gcHJpY2VQZXJFdGhlcjsKICAgICAgICB0b2tlblJld2FyZCA9IFNPQ1Rva2VuKGFkZHJlc3NPZlRva2VuVXNlZEFzUmV3YXJkKTsKICAgIH0KCiAgICAvKiBUaGUgZnVuY3Rpb24gd2l0aG91dCBuYW1lIGlzIHRoZSBkZWZhdWx0IGZ1bmN0aW9uIHRoYXQgaXMgY2FsbGVkIHdoZW5ldmVyIGFueW9uZSBzZW5kcyBmdW5kcyB0byBhIGNvbnRyYWN0ICovCiAgICBmdW5jdGlvbiAoKSBwYXlhYmxlIHsKICAgICAgICBpZiAoY3Jvd2RzYWxlQ2xvc2VkKSB0aHJvdzsKICAgICAgICB1aW50IGFtb3VudCA9IG1zZy52YWx1ZTsKICAgICAgICBiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPSBhbW91bnQ7CiAgICAgICAgYW1vdW50UmFpc2VkICs9IGFtb3VudDsKICAgICAgICB0b2tlblJld2FyZC50cmFuc2Zlcihtc2cuc2VuZGVyLCBhbW91bnQgLyBwcmljZSk7CiAgICAgICAgRnVuZFRyYW5zZmVyKG1zZy5zZW5kZXIsIGFtb3VudCwgdHJ1ZSk7CiAgICB9CgogICAgbW9kaWZpZXIgYWZ0ZXJEZWFkbGluZSgpIHsgaWYgKG5vdyA+PSBkZWFkbGluZSkgXzsgfQoKICAgIC8qIGNoZWNrcyBpZiB0aGUgZ29hbCBvciB0aW1lIGxpbWl0IGhhcyBiZWVuIHJlYWNoZWQgYW5kIGVuZHMgdGhlIGNhbXBhaWduICovCiAgICBmdW5jdGlvbiBjaGVja0dvYWxSZWFjaGVkKCkgYWZ0ZXJEZWFkbGluZSB7CiAgICAgICAgaWYgKGFtb3VudFJhaXNlZCA+PSBmdW5kaW5nR29hbCl7CiAgICAgICAgICAgIGZ1bmRpbmdHb2FsUmVhY2hlZCA9IHRydWU7CiAgICAgICAgICAgIEdvYWxSZWFjaGVkKGJlbmVmaWNpYXJ5LCBhbW91bnRSYWlzZWQpOwogICAgICAgIH0KICAgICAgICBjcm93ZHNhbGVDbG9zZWQgPSB0cnVlOwogICAgfQoKCiAgICBmdW5jdGlvbiB3aXRoZHJhd2FsKHVpbnQgYW1vdW50KSB7CiAgICAgICAgaWYgKG1zZy5zZW5kZXIgPT0gYmVuZWZpY2lhcnkpIHsKICAgICAgICAgICAgaWYgKGJlbmVmaWNpYXJ5LnNlbmQoYW1vdW50ICogMSBmaW5uZXkpKSB7CiAgICAJCQlGdW5kVHJhbnNmZXIoYmVuZWZpY2lhcnksIGFtb3VudCAqIDEgZmlubmV5LCBmYWxzZSk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CQoJCiAgICBmdW5jdGlvbiBzYWZlV2l0aGRyYXdhbCgpIGFmdGVyRGVhZGxpbmUgewogICAgICAgIGlmIChhbW91bnRSYWlzZWQgPCBzb2Z0TWFya2V0aW5nTGltaXQpIHsKICAgICAgICAgICAgdWludCBhbW91bnQgPSBiYWxhbmNlT2ZbbXNnLnNlbmRlcl07CiAgICAgICAgICAgIGJhbGFuY2VPZlttc2cuc2VuZGVyXSA9IDA7CiAgICAgICAgICAgIGlmIChhbW91bnQgPiAwKSB7CiAgICAgICAgICAgICAgICBpZiAobXNnLnNlbmRlci5zZW5kKGFtb3VudCkpIHsKICAgICAgICAgICAgICAgICAgICBGdW5kVHJhbnNmZXIobXNnLnNlbmRlciwgYW1vdW50LCBmYWxzZSk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIGJhbGFuY2VPZlttc2cuc2VuZGVyXSA9IGFtb3VudDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKGZ1bmRpbmdHb2FsUmVhY2hlZCAmJiBiZW5lZmljaWFyeSA9PSBtc2cuc2VuZGVyKSB7CiAgICAgICAgICAgIGlmIChiZW5lZmljaWFyeS5zZW5kKHRoaXMuYmFsYW5jZSkpIHsKICAgICAgICAgICAgICAgIEZ1bmRUcmFuc2ZlcihiZW5lZmljaWFyeSwgdGhpcy5iYWxhbmNlLCBmYWxzZSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBmdW5kaW5nR29hbFJlYWNoZWQgPSBmYWxzZTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQ=='.
	

]
