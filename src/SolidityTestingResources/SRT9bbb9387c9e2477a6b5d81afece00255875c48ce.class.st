Class {
	#name : #SRT9bbb9387c9e2477a6b5d81afece00255875c48ce,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT9bbb9387c9e2477a6b5d81afece00255875c48ce >> base64 [
	^ ''.
	

]
