Class {
	#name : #SRTe1eda226759825e236831714bcdc0ca0b21fd862,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTe1eda226759825e236831714bcdc0ca0b21fd862 >> base64 [
	^ ''.
	

]
