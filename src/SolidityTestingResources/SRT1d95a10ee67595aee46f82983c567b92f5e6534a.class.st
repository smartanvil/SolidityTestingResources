Class {
	#name : #SRT1d95a10ee67595aee46f82983c567b92f5e6534a,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT1d95a10ee67595aee46f82983c567b92f5e6534a >> base64 [
	^ ''.
	

]
