Class {
	#name : #SRT35baa72038f127f9f8c8f9b491049f64f377914d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT35baa72038f127f9f8c8f9b491049f64f377914d >> base64 [
	^ ''.
	

]
