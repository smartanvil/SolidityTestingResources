Class {
	#name : #SRT8D8Ff7EA7015326d7fef637e4e9461207c8ff412,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT8D8Ff7EA7015326d7fef637e4e9461207c8ff412 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7CgpwcmFnbWEgc29saWRpdHkgXjAuNC4xMTsKCmxpYnJhcnkgTWF0aCB7CiAgZnVuY3Rpb24gbWF4NjQodWludDY0IGEsIHVpbnQ2NCBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50NjQpIHsKICAgIHJldHVybiBhID49IGIgPyBhIDogYjsKICB9CgogIGZ1bmN0aW9uIG1pbjY0KHVpbnQ2NCBhLCB1aW50NjQgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDY0KSB7CiAgICByZXR1cm4gYSA8IGIgPyBhIDogYjsKICB9CgogIGZ1bmN0aW9uIG1heDI1Nih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgcmV0dXJuIGEgPj0gYiA/IGEgOiBiOwogIH0KCiAgZnVuY3Rpb24gbWluMjU2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICByZXR1cm4gYSA8IGIgPyBhIDogYjsKICB9Cn0KCmNvbnRyYWN0IEVSQzIwQmFzaWMgewogIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5OwogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIHdobykgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nik7CiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyB0bywgdWludDI1NiB2YWx1ZSkgcmV0dXJucyAoYm9vbCk7CiAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiB2YWx1ZSk7Cn0KCmNvbnRyYWN0IE93bmFibGUgewogIGFkZHJlc3MgcHVibGljIG93bmVyOwoKCiAgLyoqCiAgICogQGRldiBUaGUgT3duYWJsZSBjb25zdHJ1Y3RvciBzZXRzIHRoZSBvcmlnaW5hbCBgb3duZXJgIG9mIHRoZSBjb250cmFjdCB0byB0aGUgc2VuZGVyCiAgICogYWNjb3VudC4KICAgKi8KICBmdW5jdGlvbiBPd25hYmxlKCkgewogICAgb3duZXIgPSBtc2cuc2VuZGVyOwogIH0KCgogIC8qKgogICAqIEBkZXYgVGhyb3dzIGlmIGNhbGxlZCBieSBhbnkgYWNjb3VudCBvdGhlciB0aGFuIHRoZSBvd25lci4KICAgKi8KICBtb2RpZmllciBvbmx5T3duZXIoKSB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgXzsKICB9CgoKICAvKioKICAgKiBAZGV2IEFsbG93cyB0aGUgY3VycmVudCBvd25lciB0byB0cmFuc2ZlciBjb250cm9sIG9mIHRoZSBjb250cmFjdCB0byBhIG5ld093bmVyLgogICAqIEBwYXJhbSBuZXdPd25lciBUaGUgYWRkcmVzcyB0byB0cmFuc2ZlciBvd25lcnNoaXAgdG8uCiAgICovCiAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBuZXdPd25lcikgb25seU93bmVyIHsKICAgIGlmIChuZXdPd25lciAhPSBhZGRyZXNzKDApKSB7CiAgICAgIG93bmVyID0gbmV3T3duZXI7CiAgICB9CiAgfQoKfQoKY29udHJhY3QgSUNPQnV5ZXIgaXMgT3duYWJsZSB7CgogIC8vIENvbnRyYWN0IGFsbG93cyBFdGhlciB0byBiZSBwYWlkIGludG8gaXQKICAvLyBDb250cmFjdCBhbGxvd3MgdG9rZW5zIC8gRXRoZXIgdG8gYmUgZXh0cmFjdGVkIG9ubHkgdG8gb3duZXIgYWNjb3VudAoKICAvL05vdGlmeSBvbiBlY29ub21pYyBldmVudHMKICBldmVudCBFdGhlclJlY2VpdmVkKGFkZHJlc3MgaW5kZXhlZCBfY29udHJpYnV0b3IsIHVpbnQyNTYgX2Ftb3VudCk7CiAgZXZlbnQgRXRoZXJXaXRoZHJhd24odWludDI1NiBfYW1vdW50KTsKICBldmVudCBUb2tlbnNXaXRoZHJhd24odWludDI1NiBfYmFsYW5jZSk7CiAgZXZlbnQgSUNPUHVyY2hhc2VkKHVpbnQyNTYgX2Ftb3VudCk7CgogIC8vTm90aWZ5IG9uIGNvbnRyYWN0IHVwZGF0ZXMKICBldmVudCBJQ09TdGFydEJsb2NrQ2hhbmdlZCh1aW50MjU2IF9pY29TdGFydEJsb2NrKTsKICBldmVudCBJQ09TdGFydFRpbWVDaGFuZ2VkKHVpbnQyNTYgX2ljb1N0YXJ0VGltZSk7CiAgZXZlbnQgRXhlY3V0b3JDaGFuZ2VkKGFkZHJlc3MgX2V4ZWN1dG9yKTsKICBldmVudCBDcm93ZFNhbGVDaGFuZ2VkKGFkZHJlc3MgX2Nyb3dkU2FsZSk7CiAgZXZlbnQgVG9rZW5DaGFuZ2VkKGFkZHJlc3MgX3Rva2VuKTsKICBldmVudCBQdXJjaGFzZUNhcENoYW5nZWQodWludDI1NiBfcHVyY2hhc2VDYXApOwogIGV2ZW50IE1pbmltdW1Db250cmlidXRpb25DaGFuZ2VkKHVpbnQyNTYgX21pbmltdW1Db250cmlidXRpb24pOwoKICAvLyBvbmx5IG93bmVyIGNhbiBjaGFuZ2UgdGhlc2UKICAvLyBFYXJsaWVzdCBibG9jayBudW1iZXIgY29udHJhY3QgaXMgYWxsb3dlZCB0byBidXkgaW50byB0aGUgY3Jvd2RzYWxlLgogIHVpbnQyNTYgcHVibGljIGljb1N0YXJ0QmxvY2s7CiAgLy8gRWFybGllc3QgdGltZSBjb250cmFjdCBpcyBhbGxvd2VkIHRvIGJ1eSBpbnRvIHRoZSBjcm93ZHNhbGUuCiAgdWludDI1NiBwdWJsaWMgaWNvU3RhcnRUaW1lOwogIC8vIFRoZSBjcm93ZHNhbGUgYWRkcmVzcy4KICBhZGRyZXNzIHB1YmxpYyBjcm93ZFNhbGU7CiAgLy8gVGhlIGFkZHJlc3MgdGhhdCBjYW4gdHJpZ2dlciBJQ08gcHVyY2hhc2UgKG1heSBiZSBkaWZmZXJlbnQgdG8gb3duZXIpCiAgYWRkcmVzcyBwdWJsaWMgZXhlY3V0b3I7CiAgLy8gVGhlIGFtb3VudCBmb3IgZWFjaCBJQ08gcHVyY2hhc2UKICB1aW50MjU2IHB1YmxpYyBwdXJjaGFzZUNhcDsKICAvLyBNaW5pbXVtIGNvbnRyaWJ1dGlvbiBhbW91bnQKICB1aW50MjU2IHB1YmxpYyBtaW5pbXVtQ29udHJpYnV0aW9uID0gMC4xIGV0aGVyOwoKICBtb2RpZmllciBvbmx5RXhlY3V0b3JPck93bmVyKCkgewogICAgcmVxdWlyZSgobXNnLnNlbmRlciA9PSBleGVjdXRvcikgfHwgKG1zZy5zZW5kZXIgPT0gb3duZXIpKTsKICAgIF87CiAgfQoKICBmdW5jdGlvbiBJQ09CdXllcihhZGRyZXNzIF9leGVjdXRvciwgYWRkcmVzcyBfY3Jvd2RTYWxlLCB1aW50MjU2IF9pY29TdGFydEJsb2NrLCB1aW50MjU2IF9pY29TdGFydFRpbWUsIHVpbnQyNTYgX3B1cmNoYXNlQ2FwKSB7CiAgICBleGVjdXRvciA9IF9leGVjdXRvcjsKICAgIGNyb3dkU2FsZSA9IF9jcm93ZFNhbGU7CiAgICBpY29TdGFydEJsb2NrID0gX2ljb1N0YXJ0QmxvY2s7CiAgICBpY29TdGFydFRpbWUgPSBfaWNvU3RhcnRUaW1lOwogICAgcHVyY2hhc2VDYXAgPSBfcHVyY2hhc2VDYXA7CiAgfQoKICBmdW5jdGlvbiBjaGFuZ2VDcm93ZFNhbGUoYWRkcmVzcyBfY3Jvd2RTYWxlKSBvbmx5RXhlY3V0b3JPck93bmVyIHsKICAgIGNyb3dkU2FsZSA9IF9jcm93ZFNhbGU7CiAgICBDcm93ZFNhbGVDaGFuZ2VkKGNyb3dkU2FsZSk7CiAgfQoKICBmdW5jdGlvbiBjaGFuZ2VJQ09TdGFydEJsb2NrKHVpbnQyNTYgX2ljb1N0YXJ0QmxvY2spIG9ubHlFeGVjdXRvck9yT3duZXIgewogICAgaWNvU3RhcnRCbG9jayA9IF9pY29TdGFydEJsb2NrOwogICAgSUNPU3RhcnRCbG9ja0NoYW5nZWQoaWNvU3RhcnRCbG9jayk7CiAgfQoKICBmdW5jdGlvbiBjaGFuZ2VNaW5pbXVtQ29udHJpYnV0aW9uKHVpbnQyNTYgX21pbmltdW1Db250cmlidXRpb24pIG9ubHlFeGVjdXRvck9yT3duZXIgewogICAgbWluaW11bUNvbnRyaWJ1dGlvbiA9IF9taW5pbXVtQ29udHJpYnV0aW9uOwogICAgTWluaW11bUNvbnRyaWJ1dGlvbkNoYW5nZWQobWluaW11bUNvbnRyaWJ1dGlvbik7CiAgfQoKICBmdW5jdGlvbiBjaGFuZ2VJQ09TdGFydFRpbWUodWludDI1NiBfaWNvU3RhcnRUaW1lKSBvbmx5RXhlY3V0b3JPck93bmVyIHsKICAgIGljb1N0YXJ0VGltZSA9IF9pY29TdGFydFRpbWU7CiAgICBJQ09TdGFydFRpbWVDaGFuZ2VkKGljb1N0YXJ0VGltZSk7CiAgfQoKICBmdW5jdGlvbiBjaGFuZ2VQdXJjaGFzZUNhcCh1aW50MjU2IF9wdXJjaGFzZUNhcCkgb25seUV4ZWN1dG9yT3JPd25lciB7CiAgICBwdXJjaGFzZUNhcCA9IF9wdXJjaGFzZUNhcDsKICAgIFB1cmNoYXNlQ2FwQ2hhbmdlZChwdXJjaGFzZUNhcCk7CiAgfQoKICBmdW5jdGlvbiBjaGFuZ2VFeGVjdXRvcihhZGRyZXNzIF9leGVjdXRvcikgb25seU93bmVyIHsKICAgIGV4ZWN1dG9yID0gX2V4ZWN1dG9yOwogICAgRXhlY3V0b3JDaGFuZ2VkKF9leGVjdXRvcik7CiAgfQoKICAvLyBmdW5jdGlvbiBhbGxvd3MgYWxsIEV0aGVyIHRvIGJlIGRyYWluZWQgZnJvbSBjb250cmFjdCBieSBvd25lcgogIGZ1bmN0aW9uIHdpdGhkcmF3RXRoZXIoKSBvbmx5T3duZXIgewogICAgcmVxdWlyZSh0aGlzLmJhbGFuY2UgIT0gMCk7CiAgICBvd25lci50cmFuc2Zlcih0aGlzLmJhbGFuY2UpOwogICAgRXRoZXJXaXRoZHJhd24odGhpcy5iYWxhbmNlKTsKICB9CgogIC8vIGZ1bmN0aW9uIGFsbG93cyBhbGwgdG9rZW5zIHRvIGJlIHRyYW5zZmVycmVkIHRvIG93bmVyCiAgZnVuY3Rpb24gd2l0aGRyYXdUb2tlbnMoYWRkcmVzcyBfdG9rZW4pIG9ubHlPd25lciB7CiAgICBFUkMyMEJhc2ljIHRva2VuID0gRVJDMjBCYXNpYyhfdG9rZW4pOwogICAgLy8gUmV0cmlldmUgY3VycmVudCB0b2tlbiBiYWxhbmNlIG9mIGNvbnRyYWN0LgogICAgdWludDI1NiBjb250cmFjdFRva2VuQmFsYW5jZSA9IHRva2VuLmJhbGFuY2VPZihhZGRyZXNzKHRoaXMpKTsKICAgIC8vIERpc2FsbG93IHRva2VuIHdpdGhkcmF3YWxzIGlmIHRoZXJlIGFyZSBubyB0b2tlbnMgdG8gd2l0aGRyYXcuCiAgICByZXF1aXJlKGNvbnRyYWN0VG9rZW5CYWxhbmNlICE9IDApOwogICAgLy8gU2VuZCB0aGUgZnVuZHMuICBUaHJvd3Mgb24gZmFpbHVyZSB0byBwcmV2ZW50IGxvc3Mgb2YgZnVuZHMuCiAgICBhc3NlcnQodG9rZW4udHJhbnNmZXIob3duZXIsIGNvbnRyYWN0VG9rZW5CYWxhbmNlKSk7CiAgICBUb2tlbnNXaXRoZHJhd24oY29udHJhY3RUb2tlbkJhbGFuY2UpOwogIH0KCiAgLy8gQnV5cyB0b2tlbnMgaW4gdGhlIGNyb3dkc2FsZSBhbmQgcmV3YXJkcyB0aGUgY2FsbGVyLCBjYWxsYWJsZSBieSBhbnlvbmUuCiAgZnVuY3Rpb24gYnV5SUNPKCkgewogICAgLy8gU2hvcnQgY2lyY3VpdCB0byBzYXZlIGdhcyBpZiB0aGUgZWFybGllc3QgYmxvY2sgbnVtYmVyIGhhc24ndCBiZWVuIHJlYWNoZWQuCiAgICBpZiAoKGljb1N0YXJ0QmxvY2sgIT0gMCkgJiYgKGdldEJsb2NrTnVtYmVyKCkgPCBpY29TdGFydEJsb2NrKSkgcmV0dXJuOwogICAgLy8gU2hvcnQgY2lyY3VpdCB0byBzYXZlIGdhcyBpZiB0aGUgZWFybGllc3QgYnV5IHRpbWUgaGFzbid0IGJlZW4gcmVhY2hlZC4KICAgIGlmICgoaWNvU3RhcnRUaW1lICE9IDApICYmIChnZXROb3coKSA8IGljb1N0YXJ0VGltZSkpIHJldHVybjsKICAgIC8vIFJldHVybiBpZiBubyBiYWxhbmNlCiAgICBpZiAodGhpcy5iYWxhbmNlIDwgbWluaW11bUNvbnRyaWJ1dGlvbikgcmV0dXJuOwoKICAgIC8vIFB1cmNoYXNlIHRva2VucyBmcm9tIElDTyBjb250cmFjdCAoYXNzdW1pbmcgY2FsbCB0byBJQ08gZmFsbGJhY2sgZnVuY3Rpb24pCiAgICB1aW50MjU2IHB1cmNoYXNlQW1vdW50ID0gTWF0aC5taW4yNTYodGhpcy5iYWxhbmNlLCBwdXJjaGFzZUNhcCk7CiAgICBhc3NlcnQoY3Jvd2RTYWxlLmNhbGwudmFsdWUocHVyY2hhc2VBbW91bnQpKCkpOwogICAgSUNPUHVyY2hhc2VkKHB1cmNoYXNlQW1vdW50KTsKICB9CgogIC8vIEZhbGxiYWNrIGZ1bmN0aW9uIGFjY2VwdHMgZXRoZXIgYW5kIGxvZ3MgdGhpcy4KICAvLyBDYW4gYmUgY2FsbGVkIGJ5IGFueW9uZSB0byBmdW5kIGNvbnRyYWN0LgogIGZ1bmN0aW9uICgpIHBheWFibGUgewogICAgRXRoZXJSZWNlaXZlZChtc2cuc2VuZGVyLCBtc2cudmFsdWUpOwogIH0KCiAgLy9GdW5jdGlvbiBpcyBtb2NrZWQgZm9yIHRlc3RzCiAgZnVuY3Rpb24gZ2V0QmxvY2tOdW1iZXIoKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICByZXR1cm4gYmxvY2subnVtYmVyOwogIH0KCiAgLy9GdW5jdGlvbiBpcyBtb2NrZWQgZm9yIHRlc3RzCiAgZnVuY3Rpb24gZ2V0Tm93KCkgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgcmV0dXJuIG5vdzsKICB9Cgp9'.
	

]
