Class {
	#name : #SRT716525973aa2f59a6bb80b001f089da754b2c3be,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT716525973aa2f59a6bb80b001f089da754b2c3be >> base64 [
	^ ''.
	

]
