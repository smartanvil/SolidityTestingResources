Class {
	#name : #SRTabeeb06752a6da54773f00508baabb1c279f32d2,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTabeeb06752a6da54773f00508baabb1c279f32d2 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7CgovKgoKVGVuWCBCdXllcgo9PT09PT09PT09PT09PT09PT09PT09PT0KCkJ1eXMgVGVuWCB0b2tlbnMgZnJvbSB0aGUgY3Jvd2RzYWxlIG9uIHlvdXIgYmVoYWxmLgpBdXRob3I6IC91L0NpbnRpeAoKKi8KCi8vIEVSQzIwIEludGVyZmFjZTogaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL0VJUHMvaXNzdWVzLzIwCi8vIFdlbGwsIGFsbW9zdC4gIFBBWSB0b2tlbnMgdGhyb3cgb24gdHJhbnNmZXIgZmFpbHVyZSBpbnN0ZWFkIG9mIHJldHVybmluZyBmYWxzZS4KY29udHJhY3QgRVJDMjAgewogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSk7CiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50IGJhbGFuY2UpOwp9CgovLyBJbnRlcmZhY2UgdG8gVGVuWCBJQ08gQ29udHJhY3QKY29udHJhY3QgTWFpblNhbGUgewogIGFkZHJlc3MgcHVibGljIG11bHRpc2lnVmF1bHQ7CiAgdWludCBwdWJsaWMgYWx0RGVwb3NpdHM7CiAgZnVuY3Rpb24gY3JlYXRlVG9rZW5zKGFkZHJlc3MgcmVjaXBpZW50KSBwYXlhYmxlOwp9Cgpjb250cmFjdCBUZW5YQnV5ZXIgewogIC8vIFN0b3JlIHRoZSBhbW91bnQgb2YgRVRIIGRlcG9zaXRlZCBieSBlYWNoIGFjY291bnQuCiAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50KSBwdWJsaWMgYmFsYW5jZXM7CiAgLy8gU3RvcmUgd2hldGhlciBvciBub3QgZWFjaCBhY2NvdW50IHdvdWxkIGhhdmUgbWFkZSBpdCBpbnRvIHRoZSBjcm93ZHNhbGUuCiAgbWFwcGluZyAoYWRkcmVzcyA9PiBib29sKSBwdWJsaWMgY2hlY2tlZF9pbjsKICAvLyBCb3VudHkgZm9yIGV4ZWN1dGluZyBidXkuCiAgdWludDI1NiBwdWJsaWMgYm91bnR5OwogIC8vIFRyYWNrIHdoZXRoZXIgdGhlIGNvbnRyYWN0IGhhcyBib3VnaHQgdGhlIHRva2VucyB5ZXQuCiAgYm9vbCBwdWJsaWMgYm91Z2h0X3Rva2VuczsKICAvLyBSZWNvcmQgdGhlIHRpbWUgdGhlIGNvbnRyYWN0IGJvdWdodCB0aGUgdG9rZW5zLgogIHVpbnQgcHVibGljIHRpbWVfYm91Z2h0OwogIC8vIEVtZXJnZW5jeSBraWxsIHN3aXRjaCBpbiBjYXNlIGEgY3JpdGljYWwgYnVnIGlzIGZvdW5kLgogIGJvb2wga2lsbF9zd2l0Y2g7CiAgCiAgLy8gSGFyZCBDYXAgb2YgVGVuWCBDcm93ZHNhbGUKICB1aW50IGhhcmRjYXAgPSAyMDAwMDAgZXRoZXI7CiAgLy8gUmF0aW8gb2YgUEFZIHRva2VucyByZWNlaXZlZCB0byBFVEggY29udHJpYnV0ZWQgKDM1MCArIDIwJSBmaXJzdC1kYXkgYm9udXMpCiAgdWludCBwYXlfcGVyX2V0aCA9IDQyMDsKICAKICAvLyBUaGUgVGVuWCBUb2tlbiBTYWxlIGFkZHJlc3MuCiAgTWFpblNhbGUgcHVibGljIHNhbGUgPSBNYWluU2FsZSgweGQ0M0QwOUVjMWJDNWU1N0M4RjNEMGM2NDAyMGQ0MDNiMDRjN2Y3ODMpOwogIC8vIFRlblggUEFZIFRva2VuIENvbnRyYWN0IGFkZHJlc3MuCiAgRVJDMjAgcHVibGljIHRva2VuID0gRVJDMjAoMHhCOTcwNDg2MjhEQjZCNjYxRDRDMmFBODMzZTk1RGJlMUE5MDVCMjgwKTsKICAvLyBUaGUgZGV2ZWxvcGVyIGFkZHJlc3MuCiAgYWRkcmVzcyBkZXZlbG9wZXIgPSAweDAwMEZiODM2OTY3N2IzMDY1ZEU1ODIxYTg2QmM5NTUxZDVlNUVBYjk7CiAgCiAgLy8gQWxsb3dzIHRoZSBkZXZlbG9wZXIgdG8gc2h1dCBkb3duIGV2ZXJ5dGhpbmcgZXhjZXB0IHdpdGhkcmF3YWxzIGluIGVtZXJnZW5jaWVzLgogIGZ1bmN0aW9uIGFjdGl2YXRlX2tpbGxfc3dpdGNoKCkgewogICAgLy8gT25seSBhbGxvdyB0aGUgZGV2ZWxvcGVyIHRvIGFjdGl2YXRlIHRoZSBraWxsIHN3aXRjaC4KICAgIGlmIChtc2cuc2VuZGVyICE9IGRldmVsb3BlcikgdGhyb3c7CiAgICAvLyBJcnJldmVyc2libHkgYWN0aXZhdGUgdGhlIGtpbGwgc3dpdGNoLgogICAga2lsbF9zd2l0Y2ggPSB0cnVlOwogIH0KICAKICAvLyBXaXRoZHJhd3MgYWxsIEVUSCBkZXBvc2l0ZWQgb3IgUEFZIHB1cmNoYXNlZCBieSB0aGUgc2VuZGVyLgogIGZ1bmN0aW9uIHdpdGhkcmF3KCl7CiAgICAvLyBJZiBjYWxsZWQgYmVmb3JlIHRoZSBJQ08sIGNhbmNlbCBjYWxsZXIncyBwYXJ0aWNpcGF0aW9uIGluIHRoZSBzYWxlLgogICAgaWYgKCFib3VnaHRfdG9rZW5zKSB7CiAgICAgIC8vIFN0b3JlIHRoZSB1c2VyJ3MgYmFsYW5jZSBwcmlvciB0byB3aXRoZHJhd2FsIGluIGEgdGVtcG9yYXJ5IHZhcmlhYmxlLgogICAgICB1aW50IGV0aF9hbW91bnQgPSBiYWxhbmNlc1ttc2cuc2VuZGVyXTsKICAgICAgLy8gVXBkYXRlIHRoZSB1c2VyJ3MgYmFsYW5jZSBwcmlvciB0byBzZW5kaW5nIEVUSCB0byBwcmV2ZW50IHJlY3Vyc2l2ZSBjYWxsLgogICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IDA7CiAgICAgIC8vIFJldHVybiB0aGUgdXNlcidzIGZ1bmRzLiAgVGhyb3dzIG9uIGZhaWx1cmUgdG8gcHJldmVudCBsb3NzIG9mIGZ1bmRzLgogICAgICBtc2cuc2VuZGVyLnRyYW5zZmVyKGV0aF9hbW91bnQpOwogICAgfQogICAgLy8gV2l0aGRyYXcgdGhlIHNlbmRlcidzIHRva2VucyBpZiB0aGUgY29udHJhY3QgaGFzIGFscmVhZHkgcHVyY2hhc2VkIHRoZW0uCiAgICBlbHNlIHsKICAgICAgLy8gU3RvcmUgdGhlIHVzZXIncyBQQVkgYmFsYW5jZSBpbiBhIHRlbXBvcmFyeSB2YXJpYWJsZSAoMSBFVEhXZWkgLT4gNDIwIFBBWVdlaSkuCiAgICAgIHVpbnQgcGF5X2Ftb3VudCA9IGJhbGFuY2VzW21zZy5zZW5kZXJdICogcGF5X3Blcl9ldGg7CiAgICAgIC8vIFVwZGF0ZSB0aGUgdXNlcidzIGJhbGFuY2UgcHJpb3IgdG8gc2VuZGluZyBQQVkgdG8gcHJldmVudCByZWN1cnNpdmUgY2FsbC4KICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSAwOwogICAgICAvLyBObyBmZWUgZm9yIHdpdGhkcmF3aW5nIGlmIHRoZSB1c2VyIHdvdWxkIGhhdmUgbWFkZSBpdCBpbnRvIHRoZSBjcm93ZHNhbGUgYWxvbmUuCiAgICAgIHVpbnQgZmVlID0gMDsKICAgICAgLy8gMSUgZmVlIGlmIHRoZSB1c2VyIGRpZG4ndCBjaGVjayBpbiBkdXJpbmcgdGhlIGNyb3dkc2FsZS4KICAgICAgaWYgKCFjaGVja2VkX2luW21zZy5zZW5kZXJdKSB7CiAgICAgICAgZmVlID0gcGF5X2Ftb3VudCAvIDEwMDsKICAgICAgfQogICAgICAvLyBTZW5kIHRoZSBmdW5kcy4gIFRocm93cyBvbiBmYWlsdXJlIHRvIHByZXZlbnQgbG9zcyBvZiBmdW5kcy4KICAgICAgdG9rZW4udHJhbnNmZXIobXNnLnNlbmRlciwgcGF5X2Ftb3VudCAtIGZlZSk7CiAgICAgIHRva2VuLnRyYW5zZmVyKGRldmVsb3BlciwgZmVlKTsKICAgIH0KICB9CiAgCiAgLy8gQWxsb3cgYW55b25lIHRvIGNvbnRyaWJ1dGUgdG8gdGhlIGJ1eSBleGVjdXRpb24gYm91bnR5LgogIGZ1bmN0aW9uIGFkZF90b19ib3VudHkoKSBwYXlhYmxlIHsKICAgIC8vIERpc2FsbG93IGFkZGluZyB0byBib3VudHkgaWYga2lsbCBzd2l0Y2ggaXMgYWN0aXZlLgogICAgaWYgKGtpbGxfc3dpdGNoKSB0aHJvdzsKICAgIC8vIERpc2FsbG93IGFkZGluZyB0byB0aGUgYm91bnR5IGlmIGNvbnRyYWN0IGhhcyBhbHJlYWR5IGJvdWdodCB0aGUgdG9rZW5zLgogICAgaWYgKGJvdWdodF90b2tlbnMpIHRocm93OwogICAgLy8gVXBkYXRlIGJvdW50eSB0byBpbmNsdWRlIHJlY2VpdmVkIGFtb3VudC4KICAgIGJvdW50eSArPSBtc2cudmFsdWU7CiAgfQogIAogIC8vIEJ1eXMgdG9rZW5zIGluIHRoZSBjcm93ZHNhbGUgYW5kIHJld2FyZHMgdGhlIGNhbGxlciwgY2FsbGFibGUgYnkgYW55b25lLgogIGZ1bmN0aW9uIGJ1eSgpewogICAgLy8gU2hvcnQgY2lyY3VpdCB0byBzYXZlIGdhcyBpZiB0aGUgY29udHJhY3QgaGFzIGFscmVhZHkgYm91Z2h0IHRva2Vucy4KICAgIGlmIChib3VnaHRfdG9rZW5zKSByZXR1cm47CiAgICAvLyBEaXNhbGxvdyBidXlpbmcgaW50byB0aGUgY3Jvd2RzYWxlIGlmIGtpbGwgc3dpdGNoIGlzIGFjdGl2ZS4KICAgIGlmIChraWxsX3N3aXRjaCkgdGhyb3c7CiAgICAvLyBSZWNvcmQgdGhhdCB0aGUgY29udHJhY3QgaGFzIGJvdWdodCB0aGUgdG9rZW5zLgogICAgYm91Z2h0X3Rva2VucyA9IHRydWU7CiAgICAvLyBSZWNvcmQgdGhlIHRpbWUgdGhlIGNvbnRyYWN0IGJvdWdodCB0aGUgdG9rZW5zLgogICAgdGltZV9ib3VnaHQgPSBub3c7CiAgICAvLyBUcmFuc2ZlciBhbGwgdGhlIGZ1bmRzIChsZXNzIHRoZSBib3VudHkpIHRvIHRoZSBUZW5YIGNyb3dkc2FsZSBjb250cmFjdAogICAgLy8gdG8gYnV5IHRva2Vucy4gIFRocm93cyBpZiB0aGUgY3Jvd2RzYWxlIGhhc24ndCBzdGFydGVkIHlldCBvciBoYXMKICAgIC8vIGFscmVhZHkgY29tcGxldGVkLCBwcmV2ZW50aW5nIGxvc3Mgb2YgZnVuZHMuCiAgICBzYWxlLmNyZWF0ZVRva2Vucy52YWx1ZSh0aGlzLmJhbGFuY2UgLSBib3VudHkpKGFkZHJlc3ModGhpcykpOwogICAgLy8gU2VuZCB0aGUgY2FsbGVyIHRoZWlyIGJvdW50eSBmb3IgYnV5aW5nIHRva2VucyBmb3IgdGhlIGNvbnRyYWN0LgogICAgbXNnLnNlbmRlci50cmFuc2Zlcihib3VudHkpOwogIH0KICAKICAvLyBBIGhlbHBlciBmdW5jdGlvbiBmb3IgdGhlIGRlZmF1bHQgZnVuY3Rpb24sIGFsbG93aW5nIGNvbnRyYWN0cyB0byBpbnRlcmFjdC4KICBmdW5jdGlvbiBkZWZhdWx0X2hlbHBlcigpIHBheWFibGUgewogICAgLy8gVHJlYXQgMCBFVEggdHJhbnNhY3Rpb25zIGFzIGNoZWNrIGlucyBhbmQgd2l0aGRyYXdhbCByZXF1ZXN0cy4KICAgIGlmIChtc2cudmFsdWUgPT0gMCkgewogICAgICAvLyBDaGVjayBpbiBkdXJpbmcgdGhlIGJvbnVzIHBlcmlvZC4KICAgICAgaWYgKGJvdWdodF90b2tlbnMgJiYgKG5vdyA8IHRpbWVfYm91Z2h0ICsgMSBkYXlzKSkgewogICAgICAgIC8vIE9ubHkgYWxsb3cgY2hlY2tpbmcgaW4gYmVmb3JlIHRoZSBjcm93ZHNhbGUgaGFzIHJlYWNoZWQgdGhlIGNhcC4KICAgICAgICBpZiAoc2FsZS5tdWx0aXNpZ1ZhdWx0KCkuYmFsYW5jZSArIHNhbGUuYWx0RGVwb3NpdHMoKSA+IGhhcmRjYXApIHRocm93OwogICAgICAgIC8vIE1hcmsgdXNlciBhcyBjaGVja2VkIGluLCBtZWFuaW5nIHRoZXkgd291bGQgaGF2ZSBiZWVuIGFibGUgdG8gZW50ZXIgYWxvbmUuCiAgICAgICAgY2hlY2tlZF9pblttc2cuc2VuZGVyXSA9IHRydWU7CiAgICAgIH0KICAgICAgLy8gV2l0aGRyYXcgZnVuZHMgaWYgdGhlIGNyb3dkc2FsZSBoYXNuJ3QgYmVndW4geWV0IG9yIGlmIHRoZSBib251cyBwZXJpb2QgaXMgb3Zlci4KICAgICAgZWxzZSB7CiAgICAgICAgd2l0aGRyYXcoKTsKICAgICAgfQogICAgfQogICAgLy8gRGVwb3NpdCB0aGUgdXNlcidzIGZ1bmRzIGZvciB1c2UgaW4gcHVyY2hhc2luZyB0b2tlbnMuCiAgICBlbHNlIHsKICAgICAgLy8gRGlzYWxsb3cgZGVwb3NpdHMgaWYga2lsbCBzd2l0Y2ggaXMgYWN0aXZlLgogICAgICBpZiAoa2lsbF9zd2l0Y2gpIHRocm93OwogICAgICAvLyBPbmx5IGFsbG93IGRlcG9zaXRzIGlmIHRoZSBjb250cmFjdCBoYXNuJ3QgYWxyZWFkeSBwdXJjaGFzZWQgdGhlIHRva2Vucy4KICAgICAgaWYgKGJvdWdodF90b2tlbnMpIHRocm93OwogICAgICAvLyBVcGRhdGUgcmVjb3JkcyBvZiBkZXBvc2l0ZWQgRVRIIHRvIGluY2x1ZGUgdGhlIHJlY2VpdmVkIGFtb3VudC4KICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gKz0gbXNnLnZhbHVlOwogICAgfQogIH0KICAKICAvLyBEZWZhdWx0IGZ1bmN0aW9uLiAgQ2FsbGVkIHdoZW4gYSB1c2VyIHNlbmRzIEVUSCB0byB0aGUgY29udHJhY3QuCiAgZnVuY3Rpb24gKCkgcGF5YWJsZSB7CiAgICAvLyBEZWxlZ2F0ZSB0byB0aGUgaGVscGVyIGZ1bmN0aW9uLgogICAgZGVmYXVsdF9oZWxwZXIoKTsKICB9Cn0='.
	

]
