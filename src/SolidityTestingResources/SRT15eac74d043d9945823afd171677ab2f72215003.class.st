Class {
	#name : #SRT15eac74d043d9945823afd171677ab2f72215003,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT15eac74d043d9945823afd171677ab2f72215003 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTU7Cgpjb250cmFjdCBDb250cm9sbGFibGUgewogIGFkZHJlc3MgcHVibGljIGNvbnRyb2xsZXI7CgoKICAvKioKICAgKiBAZGV2IFRoZSBPd25hYmxlIGNvbnN0cnVjdG9yIHNldHMgdGhlIG9yaWdpbmFsIGBvd25lcmAgb2YgdGhlIGNvbnRyYWN0IHRvIHRoZSBzZW5kZXIgYWNjb3VudC4KICAgKi8KICBmdW5jdGlvbiBDb250cm9sbGFibGUoKSBwdWJsaWMgewogICAgY29udHJvbGxlciA9IG1zZy5zZW5kZXI7CiAgfQoKICAvKioKICAgKiBAZGV2IFRocm93cyBpZiBjYWxsZWQgYnkgYW55IGFjY291bnQgb3RoZXIgdGhhbiB0aGUgb3duZXIuCiAgICovCiAgbW9kaWZpZXIgb25seUNvbnRyb2xsZXIoKSB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gY29udHJvbGxlcik7CiAgICBfOwogIH0KCiAgLyoqCiAgICogQGRldiBBbGxvd3MgdGhlIGN1cnJlbnQgb3duZXIgdG8gdHJhbnNmZXIgY29udHJvbCBvZiB0aGUgY29udHJhY3QgdG8gYSBuZXdPd25lci4KICAgKiBAcGFyYW0gbmV3Q29udHJvbGxlciBUaGUgYWRkcmVzcyB0byB0cmFuc2ZlciBvd25lcnNoaXAgdG8uCiAgICovCiAgZnVuY3Rpb24gdHJhbnNmZXJDb250cm9sKGFkZHJlc3MgbmV3Q29udHJvbGxlcikgcHVibGljIG9ubHlDb250cm9sbGVyIHsKICAgIGlmIChuZXdDb250cm9sbGVyICE9IGFkZHJlc3MoMCkpIHsKICAgICAgY29udHJvbGxlciA9IG5ld0NvbnRyb2xsZXI7CiAgICB9CiAgfQoKfQoKY29udHJhY3QgT3duYWJsZSB7CiAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CgoKICAvKioKICAgKiBAZGV2IFRoZSBPd25hYmxlIGNvbnN0cnVjdG9yIHNldHMgdGhlIG9yaWdpbmFsIGBvd25lcmAgb2YgdGhlIGNvbnRyYWN0IHRvIHRoZSBzZW5kZXIgYWNjb3VudC4KICAgKi8KICBmdW5jdGlvbiBPd25hYmxlKCkgcHVibGljIHsKICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICB9CgogIC8qKgogICAqIEBkZXYgVGhyb3dzIGlmIGNhbGxlZCBieSBhbnkgYWNjb3VudCBvdGhlciB0aGFuIHRoZSBvd25lci4KICAgKi8KICBtb2RpZmllciBvbmx5T3duZXIoKSB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgXzsKICB9CgogIC8qKgogICAqIEBkZXYgQWxsb3dzIHRoZSBjdXJyZW50IG93bmVyIHRvIHRyYW5zZmVyIGNvbnRyb2wgb2YgdGhlIGNvbnRyYWN0IHRvIGEgbmV3T3duZXIuCiAgICogQHBhcmFtIG5ld093bmVyIFRoZSBhZGRyZXNzIHRvIHRyYW5zZmVyIG93bmVyc2hpcCB0by4KICAgKi8KICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld093bmVyKSBwdWJsaWMgb25seU93bmVyIHsKICAgIGlmIChuZXdPd25lciAhPSBhZGRyZXNzKDApKSB7CiAgICAgIG93bmVyID0gbmV3T3duZXI7CiAgICB9CiAgfQoKfQoKY29udHJhY3QgUGF1c2FibGUgaXMgT3duYWJsZSB7CiAgZXZlbnQgUGF1c2UoKTsKICBldmVudCBVbnBhdXNlKCk7CgogIGJvb2wgcHVibGljIHBhdXNlZCA9IGZhbHNlOwoKICBmdW5jdGlvbiBQYXVzYWJsZSgpIHB1YmxpYyB7fQoKICAvKioKICAgKiBAZGV2IG1vZGlmaWVyIHRvIGFsbG93IGFjdGlvbnMgb25seSB3aGVuIHRoZSBjb250cmFjdCBJUyBwYXVzZWQKICAgKi8KICBtb2RpZmllciB3aGVuTm90UGF1c2VkKCkgewogICAgcmVxdWlyZSghcGF1c2VkKTsKICAgIF87CiAgfQoKICAvKioKICAgKiBAZGV2IG1vZGlmaWVyIHRvIGFsbG93IGFjdGlvbnMgb25seSB3aGVuIHRoZSBjb250cmFjdCBJUyBOT1QgcGF1c2VkCiAgICovCiAgbW9kaWZpZXIgd2hlblBhdXNlZCB7CiAgICByZXF1aXJlKHBhdXNlZCk7CiAgICBfOwogIH0KCiAgLyoqCiAgICogQGRldiBjYWxsZWQgYnkgdGhlIG93bmVyIHRvIHBhdXNlLCB0cmlnZ2VycyBzdG9wcGVkIHN0YXRlCiAgICovCiAgZnVuY3Rpb24gcGF1c2UoKSBwdWJsaWMgb25seU93bmVyIHdoZW5Ob3RQYXVzZWQgcmV0dXJucyAoYm9vbCkgewogICAgcGF1c2VkID0gdHJ1ZTsKICAgIFBhdXNlKCk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIC8qKgogICAqIEBkZXYgY2FsbGVkIGJ5IHRoZSBvd25lciB0byB1bnBhdXNlLCByZXR1cm5zIHRvIG5vcm1hbCBzdGF0ZQogICAqLwogIGZ1bmN0aW9uIHVucGF1c2UoKSBwdWJsaWMgb25seU93bmVyIHdoZW5QYXVzZWQgcmV0dXJucyAoYm9vbCkgewogICAgcGF1c2VkID0gZmFsc2U7CiAgICBVbnBhdXNlKCk7CiAgICByZXR1cm4gdHJ1ZTsKICB9Cn0KCmxpYnJhcnkgU2FmZU1hdGggewogIGZ1bmN0aW9uIG11bCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSAqIGI7CiAgICBhc3NlcnQoYSA9PSAwIHx8IGMgLyBhID09IGIpOwogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBkaXYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIC8vIGFzc2VydChiID4gMCk7IC8vIFNvbGlkaXR5IGF1dG9tYXRpY2FsbHkgdGhyb3dzIHdoZW4gZGl2aWRpbmcgYnkgMAogICAgdWludDI1NiBjID0gYSAvIGI7CiAgICAvLyBhc3NlcnQoYSA9PSBiICogYyArIGEgJSBiKTsgLy8gVGhlcmUgaXMgbm8gY2FzZSBpbiB3aGljaCB0aGlzIGRvZXNuJ3QgaG9sZAogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBzdWIodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIGFzc2VydChiIDw9IGEpOwogICAgcmV0dXJuIGEgLSBiOwogIH0KCiAgZnVuY3Rpb24gYWRkKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhICsgYjsKICAgIGFzc2VydChjID49IGEpOwogICAgcmV0dXJuIGM7CiAgfQp9Cgpjb250cmFjdCBUb2tlblNhbGUgaXMgUGF1c2FibGUgewoKICB1c2luZyBTYWZlTWF0aCBmb3IgdWludDI1NjsKCiAgUHJvb2ZUb2tlbkludGVyZmFjZSBwdWJsaWMgcHJvb2ZUb2tlbjsKICB1aW50MjU2IHB1YmxpYyB0b3RhbFdlaVJhaXNlZDsKICB1aW50MjU2IHB1YmxpYyB0b2tlbnNNaW50ZWQ7CiAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7CiAgdWludDI1NiBwdWJsaWMgY29udHJpYnV0b3JzOwogIHVpbnQyNTYgcHVibGljIGRlY2ltYWxzTXVsdGlwbGllcjsKICB1aW50MjU2IHB1YmxpYyBzdGFydFRpbWU7CiAgdWludDI1NiBwdWJsaWMgZW5kVGltZTsKICB1aW50MjU2IHB1YmxpYyByZW1haW5pbmdUb2tlbnM7CiAgdWludDI1NiBwdWJsaWMgYWxsb2NhdGVkVG9rZW5zOwoKICBib29sIHB1YmxpYyBmaW5hbGl6ZWQ7CiAgYm9vbCBwdWJsaWMgcHJvb2ZUb2tlbnNBbGxvY2F0ZWQ7CiAgYWRkcmVzcyBwdWJsaWMgcHJvb2ZNdWx0aVNpZyA9IDB4OTk4OTJBYzZEQTFiMzg1MTE2N0NiOTU5ZkU5NDU5MjZiY2E4OWYwOTsKCiAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgQkFTRV9QUklDRV9JTl9XRUkgPSA4ODAwMDAwMDAwMDAwMDAwMDsKICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCBQVUJMSUNfVE9LRU5TID0gMTE4MTAzMSAqICgxMCAqKiAxOCk7CiAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgVE9UQUxfUFJFU0FMRV9UT0tFTlMgPSAxMTIzODY3MTI5MjQ3MjU1MDg4MDI0MDA7CiAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgVE9LRU5TX0FMTE9DQVRFRF9UT19QUk9PRiA9IDExODEwMzEgKiAoMTAgKiogMTgpOwoKCgogIHVpbnQyNTYgcHVibGljIHRva2VuQ2FwID0gUFVCTElDX1RPS0VOUyAtIFRPVEFMX1BSRVNBTEVfVE9LRU5TOwogIHVpbnQyNTYgcHVibGljIGNhcCA9IHRva2VuQ2FwIC8gKDEwICoqIDE4KTsKICB1aW50MjU2IHB1YmxpYyB3ZWlDYXAgPSBjYXAgKiBCQVNFX1BSSUNFX0lOX1dFSTsKCiAgdWludDI1NiBwdWJsaWMgZmlyc3REaXNjb3VudFByaWNlID0gKEJBU0VfUFJJQ0VfSU5fV0VJICogODUpIC8gMTAwOwogIHVpbnQyNTYgcHVibGljIHNlY29uZERpc2NvdW50UHJpY2UgPSAoQkFTRV9QUklDRV9JTl9XRUkgKiA5MCkgLyAxMDA7CiAgdWludDI1NiBwdWJsaWMgdGhpcmREaXNjb3VudFByaWNlID0gKEJBU0VfUFJJQ0VfSU5fV0VJICogOTUpIC8gMTAwOwoKICB1aW50MjU2IHB1YmxpYyBmaXJzdERpc2NvdW50Q2FwID0gKHdlaUNhcCAqIDUpIC8gMTAwOwogIHVpbnQyNTYgcHVibGljIHNlY29uZERpc2NvdW50Q2FwID0gKHdlaUNhcCAqIDEwKSAvIDEwMDsKICB1aW50MjU2IHB1YmxpYyB0aGlyZERpc2NvdW50Q2FwID0gKHdlaUNhcCAqIDIwKSAvIDEwMDsKCiAgYm9vbCBwdWJsaWMgc3RhcnRlZCA9IGZhbHNlOwoKICBldmVudCBUb2tlblB1cmNoYXNlKGFkZHJlc3MgaW5kZXhlZCBwdXJjaGFzZXIsIGFkZHJlc3MgaW5kZXhlZCBiZW5lZmljaWFyeSwgdWludDI1NiB2YWx1ZSwgdWludDI1NiBhbW91bnQpOwogIGV2ZW50IE5ld0Nsb25lZFRva2VuKGFkZHJlc3MgaW5kZXhlZCBfY2xvbmVUb2tlbik7CiAgZXZlbnQgT25UcmFuc2ZlcihhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludCBfYW1vdW50KTsKICBldmVudCBPbkFwcHJvdmUoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQgX2Ftb3VudCk7CiAgZXZlbnQgTG9nSW50KHN0cmluZyBfbmFtZSwgdWludDI1NiBfdmFsdWUpOwogIGV2ZW50IEZpbmFsaXplZCgpOwoKICBmdW5jdGlvbiBUb2tlblNhbGUoYWRkcmVzcyBfdG9rZW5BZGRyZXNzLCB1aW50MjU2IF9zdGFydFRpbWUsIHVpbnQyNTYgX2VuZFRpbWUpIHB1YmxpYyB7CiAgICByZXF1aXJlKF90b2tlbkFkZHJlc3MgIT0gMHgwKTsKICAgIHJlcXVpcmUoX3N0YXJ0VGltZSA+IDApOwogICAgcmVxdWlyZShfZW5kVGltZSA+IF9zdGFydFRpbWUpOwoKICAgIHN0YXJ0VGltZSA9IF9zdGFydFRpbWU7CiAgICBlbmRUaW1lID0gX2VuZFRpbWU7CiAgICBwcm9vZlRva2VuID0gUHJvb2ZUb2tlbkludGVyZmFjZShfdG9rZW5BZGRyZXNzKTsKCiAgICBkZWNpbWFsc011bHRpcGxpZXIgPSAoMTAgKiogMTgpOwogIH0KCgogIC8qKgogICAqIEhpZ2ggbGV2ZWwgdG9rZW4gcHVyY2hhc2UgZnVuY3Rpb24KICAgKi8KICBmdW5jdGlvbigpIHB1YmxpYyBwYXlhYmxlIHsKICAgIGJ1eVRva2Vucyhtc2cuc2VuZGVyKTsKICB9CgogIC8qKgogICAqIExvdyBsZXZlbCB0b2tlbiBwdXJjaGFzZSBmdW5jdGlvbgogICAqIEBwYXJhbSBfYmVuZWZpY2lhcnkgd2lsbCByZWNlaXZlIHRoZSB0b2tlbnMuCiAgICovCiAgZnVuY3Rpb24gYnV5VG9rZW5zKGFkZHJlc3MgX2JlbmVmaWNpYXJ5KSBwdWJsaWMgcGF5YWJsZSB3aGVuTm90UGF1c2VkIHdoZW5Ob3RGaW5hbGl6ZWQgewogICAgcmVxdWlyZShfYmVuZWZpY2lhcnkgIT0gMHgwKTsKICAgIHJlcXVpcmUodmFsaWRQdXJjaGFzZSgpKTsKCiAgICB1aW50MjU2IHdlaUFtb3VudCA9IG1zZy52YWx1ZTsKICAgIHVpbnQyNTYgcHJpY2VJbldlaSA9IGdldFByaWNlSW5XZWkoKTsKICAgIHRvdGFsV2VpUmFpc2VkID0gdG90YWxXZWlSYWlzZWQuYWRkKHdlaUFtb3VudCk7CgogICAgdWludDI1NiB0b2tlbnMgPSB3ZWlBbW91bnQubXVsKGRlY2ltYWxzTXVsdGlwbGllcikuZGl2KHByaWNlSW5XZWkpOwogICAgdG9rZW5zTWludGVkID0gdG9rZW5zTWludGVkLmFkZCh0b2tlbnMpOwogICAgcmVxdWlyZSh0b2tlbnNNaW50ZWQgPCB0b2tlbkNhcCk7CgogICAgY29udHJpYnV0b3JzID0gY29udHJpYnV0b3JzLmFkZCgxKTsKCiAgICBwcm9vZlRva2VuLm1pbnQoX2JlbmVmaWNpYXJ5LCB0b2tlbnMpOwogICAgVG9rZW5QdXJjaGFzZShtc2cuc2VuZGVyLCBfYmVuZWZpY2lhcnksIHdlaUFtb3VudCwgdG9rZW5zKTsKICAgIGZvcndhcmRGdW5kcygpOwogIH0KCgogIC8qKgogICAqIEdldCB0aGUgcHJpY2UgaW4gd2VpIGZvciBjdXJyZW50IHByZW1pdW0KICAgKiBAcmV0dXJuIHByaWNlIHt1aW50MjU2fQogICAqLwogIGZ1bmN0aW9uIGdldFByaWNlSW5XZWkoKSBjb25zdGFudCBwdWJsaWMgcmV0dXJucyAodWludDI1NikgewoKICAgIHVpbnQyNTYgcHJpY2U7CgogICAgaWYgKHRvdGFsV2VpUmFpc2VkIDwgZmlyc3REaXNjb3VudENhcCkgewogICAgICBwcmljZSA9IGZpcnN0RGlzY291bnRQcmljZTsKICAgIH0gZWxzZSBpZiAodG90YWxXZWlSYWlzZWQgPCBzZWNvbmREaXNjb3VudENhcCkgewogICAgICBwcmljZSA9IHNlY29uZERpc2NvdW50UHJpY2U7CiAgICB9IGVsc2UgaWYgKHRvdGFsV2VpUmFpc2VkIDwgdGhpcmREaXNjb3VudENhcCkgewogICAgICBwcmljZSA9IHRoaXJkRGlzY291bnRQcmljZTsKICAgIH0gZWxzZSB7CiAgICAgIHByaWNlID0gQkFTRV9QUklDRV9JTl9XRUk7CiAgICB9CgogICAgcmV0dXJuIHByaWNlOwogIH0KCiAgLyoqCiAgKiBGb3J3YXJkcyBmdW5kcyB0byB0aGUgdG9rZW5zYWxlIHdhbGxldAogICovCiAgZnVuY3Rpb24gZm9yd2FyZEZ1bmRzKCkgaW50ZXJuYWwgewogICAgcHJvb2ZNdWx0aVNpZy50cmFuc2Zlcihtc2cudmFsdWUpOwogIH0KCgogIC8qKgogICogVmFsaWRhdGVzIHRoZSBwdXJjaGFzZSAocGVyaW9kLCBtaW5pbXVtIGFtb3VudCwgd2l0aGluIGNhcCkKICAqIEByZXR1cm4ge2Jvb2x9IHZhbGlkCiAgKi8KICBmdW5jdGlvbiB2YWxpZFB1cmNoYXNlKCkgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAoYm9vbCkgewogICAgdWludDI1NiBjdXJyZW50ID0gbm93OwogICAgYm9vbCBwcmVzYWxlU3RhcnRlZCA9IChjdXJyZW50ID49IHN0YXJ0VGltZSB8fCBzdGFydGVkKTsKICAgIGJvb2wgcHJlc2FsZU5vdEVuZGVkID0gY3VycmVudCA8PSBlbmRUaW1lOwogICAgYm9vbCBub25aZXJvUHVyY2hhc2UgPSBtc2cudmFsdWUgIT0gMDsKICAgIHJldHVybiBub25aZXJvUHVyY2hhc2UgJiYgcHJlc2FsZVN0YXJ0ZWQgJiYgcHJlc2FsZU5vdEVuZGVkOwogIH0KCiAgLyoqCiAgKiBSZXR1cm5zIHRoZSB0b3RhbCBQcm9vZiB0b2tlbiBzdXBwbHkKICAqIEByZXR1cm4gdG90YWxTdXBwbHkge3VpbnQyNTZ9IFByb29mIFRva2VuIFRvdGFsIFN1cHBseQogICovCiAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgcmV0dXJuIHByb29mVG9rZW4udG90YWxTdXBwbHkoKTsKICB9CgogIC8qKgogICogUmV0dXJucyB0b2tlbiBob2xkZXIgUHJvb2YgVG9rZW4gYmFsYW5jZQogICogQHBhcmFtIF9vd25lciB7YWRkcmVzc30gVG9rZW4gaG9sZGVyIGFkZHJlc3MKICAqIEByZXR1cm4gYmFsYW5jZSB7dWludDI1Nn0gQ29ycmVzcG9uZGluZyB0b2tlbiBob2xkZXIgYmFsYW5jZQogICovCiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgcmV0dXJuIHByb29mVG9rZW4uYmFsYW5jZU9mKF9vd25lcik7CiAgfQoKICAvKioKICAqIENoYW5nZSB0aGUgUHJvb2YgVG9rZW4gY29udHJvbGxlcgogICogQHBhcmFtIF9uZXdDb250cm9sbGVyIHthZGRyZXNzfSBOZXcgUHJvb2YgVG9rZW4gY29udHJvbGxlcgogICovCiAgZnVuY3Rpb24gY2hhbmdlQ29udHJvbGxlcihhZGRyZXNzIF9uZXdDb250cm9sbGVyKSBvbmx5T3duZXIgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgIHByb29mVG9rZW4udHJhbnNmZXJDb250cm9sKF9uZXdDb250cm9sbGVyKTsKICAgIHJldHVybiB0cnVlOwogIH0KCgogIGZ1bmN0aW9uIGVuYWJsZVRyYW5zZmVycygpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICBpZiAobm93IDwgZW5kVGltZSkgewogICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgfQogICAgcHJvb2ZUb2tlbi5lbmFibGVUcmFuc2ZlcnModHJ1ZSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIGxvY2tUcmFuc2ZlcnMoKSBwdWJsaWMgb25seU93bmVyIHJldHVybnMgKGJvb2wpIHsKICAgIHJlcXVpcmUobm93IDwgZW5kVGltZSk7CiAgICBwcm9vZlRva2VuLmVuYWJsZVRyYW5zZmVycyhmYWxzZSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIGVuYWJsZU1hc3RlclRyYW5zZmVycygpIHB1YmxpYyBvbmx5T3duZXIgcmV0dXJucyAoYm9vbCkgewogICAgcHJvb2ZUb2tlbi5lbmFibGVNYXN0ZXJUcmFuc2ZlcnModHJ1ZSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIGxvY2tNYXN0ZXJUcmFuc2ZlcnMoKSBwdWJsaWMgb25seU93bmVyIHJldHVybnMgKGJvb2wpIHsKICAgIHByb29mVG9rZW4uZW5hYmxlTWFzdGVyVHJhbnNmZXJzKGZhbHNlKTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgZnVuY3Rpb24gZm9yY2VTdGFydCgpIHB1YmxpYyBvbmx5T3duZXIgcmV0dXJucyAoYm9vbCkgewogICAgc3RhcnRlZCA9IHRydWU7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIGFsbG9jYXRlUHJvb2ZUb2tlbnMoKSBwdWJsaWMgb25seU93bmVyIHdoZW5Ob3RGaW5hbGl6ZWQgcmV0dXJucyAoYm9vbCkgewogICAgcmVxdWlyZSghcHJvb2ZUb2tlbnNBbGxvY2F0ZWQpOwogICAgcHJvb2ZUb2tlbi5taW50KHByb29mTXVsdGlTaWcsIFRPS0VOU19BTExPQ0FURURfVE9fUFJPT0YpOwogICAgcHJvb2ZUb2tlbnNBbGxvY2F0ZWQgPSB0cnVlOwogICAgcmV0dXJuIHRydWU7CiAgfQoKICBmdW5jdGlvbiBmaW5hbGl6ZSgpIHB1YmxpYyBvbmx5T3duZXIgcmV0dXJucyAoYm9vbCkgewogICAgcmVxdWlyZShwYXVzZWQpOwogICAgcmVxdWlyZShwcm9vZlRva2Vuc0FsbG9jYXRlZCk7CgogICAgcHJvb2ZUb2tlbi5maW5pc2hNaW50aW5nKCk7CiAgICBwcm9vZlRva2VuLmVuYWJsZVRyYW5zZmVycyh0cnVlKTsKICAgIEZpbmFsaXplZCgpOwoKICAgIGZpbmFsaXplZCA9IHRydWU7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgoKICBmdW5jdGlvbiBpc0NvbnRyYWN0KGFkZHJlc3MgX2FkZHIpIGNvbnN0YW50IGludGVybmFsIHJldHVybnMgKGJvb2wpIHsKICAgIHVpbnQgc2l6ZTsKICAgIGlmIChfYWRkciA9PSAwKQogICAgICByZXR1cm4gZmFsc2U7CiAgICBhc3NlbWJseSB7CiAgICAgICAgc2l6ZSA6PSBleHRjb2Rlc2l6ZShfYWRkcikKICAgIH0KICAgIHJldHVybiBzaXplPjA7CiAgfQoKICBtb2RpZmllciB3aGVuTm90RmluYWxpemVkKCkgewogICAgcmVxdWlyZSghZmluYWxpemVkKTsKICAgIF87CiAgfQoKfQoKY29udHJhY3QgUHJvb2ZUb2tlbkludGVyZmFjZSBpcyBDb250cm9sbGFibGUgewoKICBldmVudCBNaW50KGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiBhbW91bnQpOwogIGV2ZW50IE1pbnRGaW5pc2hlZCgpOwogIGV2ZW50IENsYWltZWRUb2tlbnMoYWRkcmVzcyBpbmRleGVkIF90b2tlbiwgYWRkcmVzcyBpbmRleGVkIF9vd25lciwgdWludCBfYW1vdW50KTsKICBldmVudCBOZXdDbG9uZVRva2VuKGFkZHJlc3MgaW5kZXhlZCBfY2xvbmVUb2tlbiwgdWludCBfc25hcHNob3RCbG9jayk7CiAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF9hbW91bnQpOwogIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBmcm9tLCBhZGRyZXNzIGluZGV4ZWQgdG8sIHVpbnQyNTYgdmFsdWUpOwoKICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50KTsKICBmdW5jdGlvbiB0b3RhbFN1cHBseUF0KHVpbnQgX2Jsb2NrTnVtYmVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyh1aW50KTsKICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpOwogIGZ1bmN0aW9uIGJhbGFuY2VPZkF0KGFkZHJlc3MgX293bmVyLCB1aW50IF9ibG9ja051bWJlcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQpOwogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF9hbW91bnQpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfYW1vdW50KSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX2Ftb3VudCkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgZnVuY3Rpb24gYXBwcm92ZUFuZENhbGwoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfYW1vdW50LCBieXRlcyBfZXh0cmFEYXRhKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHJlbWFpbmluZyk7CiAgZnVuY3Rpb24gbWludChhZGRyZXNzIF9vd25lciwgdWludCBfYW1vdW50KSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CiAgZnVuY3Rpb24gaW1wb3J0UHJlc2FsZUJhbGFuY2VzKGFkZHJlc3NbXSBfYWRkcmVzc2VzLCB1aW50MjU2W10gX2JhbGFuY2VzLCBhZGRyZXNzIF9wcmVzYWxlQWRkcmVzcykgcHVibGljIHJldHVybnMgKGJvb2wpOwogIGZ1bmN0aW9uIGxvY2tQcmVzYWxlQmFsYW5jZXMoKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CiAgZnVuY3Rpb24gZmluaXNoTWludGluZygpIHB1YmxpYyByZXR1cm5zIChib29sKTsKICBmdW5jdGlvbiBlbmFibGVUcmFuc2ZlcnMoYm9vbCBfdmFsdWUpIHB1YmxpYzsKICBmdW5jdGlvbiBlbmFibGVNYXN0ZXJUcmFuc2ZlcnMoYm9vbCBfdmFsdWUpIHB1YmxpYzsKICBmdW5jdGlvbiBjcmVhdGVDbG9uZVRva2VuKHVpbnQgX3NuYXBzaG90QmxvY2ssIHN0cmluZyBfY2xvbmVUb2tlbk5hbWUsIHN0cmluZyBfY2xvbmVUb2tlblN5bWJvbCkgcHVibGljIHJldHVybnMgKGFkZHJlc3MpOwoKfQ=='.
	

]
