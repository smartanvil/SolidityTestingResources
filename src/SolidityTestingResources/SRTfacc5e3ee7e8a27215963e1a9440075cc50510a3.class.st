Class {
	#name : #SRTfacc5e3ee7e8a27215963e1a9440075cc50510a3,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTfacc5e3ee7e8a27215963e1a9440075cc50510a3 >> base64 [
	^ ''.
	

]
