Class {
	#name : #SRT2bb10945e9f0c9483022dc473ab4951bc2a77d0f,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT2bb10945e9f0c9483022dc473ab4951bc2a77d0f >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTc7CgovLwovLyBTd2FybSBWb3RpbmcgTVZQCi8vIFNpbmdsZSB1c2UgY29udHJhY3QgdG8gbWFuYWdlIGxpcXVpZGl0eSB2b3RlIHNob3J0bHkgYWZ0ZXIgU3dhcm0gVFMKLy8gQXV0aG9yOiBNYXggS2F5ZQovLwovLwovLyBBcmNoaXRlY3R1cmU6Ci8vICogQmFsbG90IGF1dGhvcml0eSBkZWNsYXJlcyBwdWJsaWMga2V5IHdpdGggd2hpY2ggdG8gZW5jcnlwdCBiYWxsb3RzCi8vICogVXNlcnMgc3VibWl0IGVuY3J5cHRlZCBiYWxsb3RzIGFzIGJsb2JzCi8vICogVGhlc2UgYmFsbG90cyBhcmUgdHJhY2tlZCBieSB0aGUgRVRIIGFkZHJlc3Mgb2YgdGhlIHNlbmRlcgovLyAqIEZvbGxvd2luZyB0aGUgY29uY2x1c2lvbiBvZiB0aGUgYmFsbG90LCB0aGUgc2VjcmV0IGtleSBpcyBwcm92aWRlZAovLyAgIGJ5IHRoZSBiYWxsb3QgYXV0aG9yaXR5LCBhbmQgYWxsIHVzZXJzIG1heSB0cmFuc3BhcmVudGx5IGFuZAovLyAgIGluZGVwZW5kZW50bHkgdmFsaWRhdGUgdGhlIHJlc3VsdHMKLy8KLy8gTm90ZXM6Ci8vICogU2luY2UgYmFsbG90cyBhcmUgZW5jcnlwdGVkIHRoZSBvbmx5IHZhbGlkYXRpb24gd2UgY2FuIGRvIGlzIGxlbmd0aAovLwoKCmNvbnRyYWN0IFN3YXJtVm90aW5nTVZQIHsKICAgIC8vLy8gKiogU3RvcmFnZSBWYXJpYWJsZXMKCiAgICAvLyBTdGQgb3duZXIgcGF0dGVybgogICAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CgogICAgLy8gdGVzdCBtb2RlIC0gb3BlcmF0aW9ucyBsaWtlIGNoYW5naW5nIHN0YXJ0L2VuZCB0aW1lcwogICAgYm9vbCBwdWJsaWMgdGVzdE1vZGUgPSBmYWxzZTsKCiAgICAvLyBNYXBzIHRvIHN0b3JlIGJhbGxvdHMsIGFsb25nIHdpdGggY29ycmVzcG9uZGluZyBsb2cgb2Ygdm90ZXJzLgogICAgLy8gU2hvdWxkIG9ubHkgYmUgbW9kaWZpZWQgdGhyb3VnaCBgYWRkQmFsbG90QW5kVm90ZXJgIGludGVybmFsIGZ1bmN0aW9uCiAgICBtYXBwaW5nKHVpbnQyNTYgPT4gYnl0ZXMzMikgcHVibGljIGVuY3J5cHRlZEJhbGxvdHM7CiAgICBtYXBwaW5nKHVpbnQyNTYgPT4gYnl0ZXMzMikgcHVibGljIGFzc29jaWF0ZWRQdWJrZXlzOwogICAgbWFwcGluZyh1aW50MjU2ID0+IGFkZHJlc3MpIHB1YmxpYyBhc3NvY2lhdGVkQWRkcmVzc2VzOwogICAgdWludDI1NiBwdWJsaWMgblZvdGVzQ2FzdCA9IDA7CgogICAgLy8gVXNlIGEgbWFwIGZvciB2b3RlcnMgdG8gbG9vayB1cCB0aGVpciBiYWxsb3QKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSBwdWJsaWMgdm90ZXJUb0JhbGxvdElEOwoKICAgIC8vIFB1YmxpYyBrZXkgd2l0aCB3aGljaCB0byBlbmNyeXB0IGJhbGxvdHMgLSBjdXJ2ZTI1NTE5CiAgICBieXRlczMyIHB1YmxpYyBiYWxsb3RFbmNyeXB0aW9uUHVia2V5OwoKICAgIC8vIFByaXZhdGUga2V5IHRvIGJlIHNldCBhZnRlciBiYWxsb3QgY29uY2x1c2lvbiAtIGN1cnZlMjU1MTkKICAgIGJ5dGVzMzIgcHVibGljIGJhbGxvdEVuY3J5cHRpb25TZWNrZXk7CiAgICBib29sIHNlY2tleVJldmVhbGVkID0gZmFsc2U7CgogICAgLy8gVGltZXN0YW1wcyBmb3Igc3RhcnQgYW5kIGVuZCBvZiBiYWxsb3QgKFVUQykKICAgIHVpbnQyNTYgcHVibGljIHN0YXJ0VGltZTsKICAgIHVpbnQyNTYgcHVibGljIGVuZFRpbWU7CgogICAgLy8gQmFubmVkIGFkZHJlc3NlcyAtIG5lY2Vzc2FyeSB0byBiYW4gU3dhcm0gRnVuZCBmcm9tIHZvdGluZyBpbiB0aGVpciBvd24gYmFsbG90CiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gYm9vbCkgcHVibGljIGJhbm5lZEFkZHJlc3NlczsKICAgIC8vIFRPRE86IElzIHRoaXMgdGhlIHJpZ2h0IGFkZHJlc3M/CiAgICBhZGRyZXNzIHB1YmxpYyBzd2FybUZ1bmRBZGRyZXNzID0gMHg4QmY3YjJENTM2RDI4NkI5YzVBZDlkOTlGNjA4ZTlFMjE0REU2M2YwOwoKCiAgICAvLy8vICoqIEV2ZW50cwogICAgZXZlbnQgQ3JlYXRlZEJhbGxvdChhZGRyZXNzIGNyZWF0b3IsIHVpbnQyNTYgc3RhcnQsIHVpbnQyNTYgZW5kLCBieXRlczMyIGVuY1B1YmtleSk7CiAgICBldmVudCBGYWlsZWRWb3RlKGFkZHJlc3Mgdm90ZXIsIHN0cmluZyByZWFzb24pOwogICAgZXZlbnQgU3VjY2Vzc2Z1bFZvdGUoYWRkcmVzcyB2b3RlciwgYnl0ZXMzMiBiYWxsb3QsIGJ5dGVzMzIgcHVia2V5KTsKICAgIGV2ZW50IFNlY2tleVJldmVhbGVkKGJ5dGVzMzIgc2VjcmV0S2V5KTsKICAgIGV2ZW50IFRlc3RpbmdFbmFibGVkKCk7CiAgICBldmVudCBFcnJvcihzdHJpbmcgZXJyb3IpOwoKCiAgICAvLy8vICoqIE1vZGlmaWVycwoKICAgIG1vZGlmaWVyIG5vdEJhbm5lZCB7CiAgICAgICAgaWYgKCFiYW5uZWRBZGRyZXNzZXNbbXNnLnNlbmRlcl0pIHsgIC8vIGVuc3VyZSBiYW5uZWQgYWRkcmVzc2VzIGNhbm5vdCB2b3RlCiAgICAgICAgICAgIF87CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgRXJyb3IoIkJhbm5lZCBhZGRyZXNzIik7CiAgICAgICAgfQogICAgfQoKICAgIG1vZGlmaWVyIG9ubHlPd25lciB7CiAgICAgICAgaWYgKG1zZy5zZW5kZXIgPT0gb3duZXIpIHsgIC8vIGZhaWwgaWYgbXNnLnNlbmRlciBpcyBub3QgdGhlIG93bmVyCiAgICAgICAgICAgIF87CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgRXJyb3IoIk5vdCBvd25lciIpOwogICAgICAgIH0KICAgIH0KCiAgICBtb2RpZmllciBiYWxsb3RPcGVuIHsKICAgICAgICBpZiAoYmxvY2sudGltZXN0YW1wID4gc3RhcnRUaW1lICYmIGJsb2NrLnRpbWVzdGFtcCA8IGVuZFRpbWUpIHsKICAgICAgICAgICAgXzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBFcnJvcigiQmFsbG90IG5vdCBvcGVuIik7CiAgICAgICAgfQogICAgfQoKICAgIG1vZGlmaWVyIG9ubHlUZXN0aW5nIHsKICAgICAgICBpZiAodGVzdE1vZGUpIHsKICAgICAgICAgICAgXzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBFcnJvcigiVGVzdGluZyBkaXNhYmxlZCIpOwogICAgICAgIH0KICAgIH0KCiAgICAvLy8vICoqIEZ1bmN0aW9ucwoKICAgIC8vIENvbnN0cnVjdG9yIGZ1bmN0aW9uIC0gaW5pdCBjb3JlIHBhcmFtcyBvbiBkZXBsb3kKICAgIGZ1bmN0aW9uIFN3YXJtVm90aW5nTVZQKHVpbnQyNTYgX3N0YXJ0VGltZSwgdWludDI1NiBfZW5kVGltZSwgYnl0ZXMzMiBfZW5jUEssIGJvb2wgZW5hYmxlVGVzdGluZykgcHVibGljIHsKICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7CgogICAgICAgIHN0YXJ0VGltZSA9IF9zdGFydFRpbWU7CiAgICAgICAgZW5kVGltZSA9IF9lbmRUaW1lOwogICAgICAgIGJhbGxvdEVuY3J5cHRpb25QdWJrZXkgPSBfZW5jUEs7CgogICAgICAgIGJhbm5lZEFkZHJlc3Nlc1tzd2FybUZ1bmRBZGRyZXNzXSA9IHRydWU7CgogICAgICAgIGlmIChlbmFibGVUZXN0aW5nKSB7CiAgICAgICAgICAgIHRlc3RNb2RlID0gdHJ1ZTsKICAgICAgICAgICAgVGVzdGluZ0VuYWJsZWQoKTsKICAgICAgICB9CiAgICB9CgogICAgLy8gQmFsbG90IHN1Ym1pc3Npb24KICAgIGZ1bmN0aW9uIHN1Ym1pdEJhbGxvdChieXRlczMyIGVuY3J5cHRlZEJhbGxvdCwgYnl0ZXMzMiBzZW5kZXJQdWJrZXkpIG5vdEJhbm5lZCBiYWxsb3RPcGVuIHB1YmxpYyB7CiAgICAgICAgYWRkQmFsbG90QW5kVm90ZXIoZW5jcnlwdGVkQmFsbG90LCBzZW5kZXJQdWJrZXkpOwogICAgfQoKICAgIC8vIEludGVybmFsIGZ1bmN0aW9uIHRvIGVuc3VyZSBhdG9taWNpdHkgb2Ygdm90ZXIgbG9nCiAgICBmdW5jdGlvbiBhZGRCYWxsb3RBbmRWb3RlcihieXRlczMyIGVuY3J5cHRlZEJhbGxvdCwgYnl0ZXMzMiBzZW5kZXJQdWJrZXkpIGludGVybmFsIHsKICAgICAgICB1aW50MjU2IGJhbGxvdE51bWJlciA9IG5Wb3Rlc0Nhc3Q7CiAgICAgICAgZW5jcnlwdGVkQmFsbG90c1tiYWxsb3ROdW1iZXJdID0gZW5jcnlwdGVkQmFsbG90OwogICAgICAgIGFzc29jaWF0ZWRQdWJrZXlzW2JhbGxvdE51bWJlcl0gPSBzZW5kZXJQdWJrZXk7CiAgICAgICAgYXNzb2NpYXRlZEFkZHJlc3Nlc1tiYWxsb3ROdW1iZXJdID0gbXNnLnNlbmRlcjsKICAgICAgICB2b3RlclRvQmFsbG90SURbbXNnLnNlbmRlcl0gPSBiYWxsb3ROdW1iZXI7CiAgICAgICAgblZvdGVzQ2FzdCArPSAxOwogICAgICAgIFN1Y2Nlc3NmdWxWb3RlKG1zZy5zZW5kZXIsIGVuY3J5cHRlZEJhbGxvdCwgc2VuZGVyUHVia2V5KTsKICAgIH0KCiAgICAvLyBBbGxvdyB0aGUgb3duZXIgdG8gcmV2ZWFsIHRoZSBzZWNyZXQga2V5IGFmdGVyIGJhbGxvdCBjb25jbHVzaW9uCiAgICBmdW5jdGlvbiByZXZlYWxTZWNrZXkoYnl0ZXMzMiBfc2VjS2V5KSBvbmx5T3duZXIgcHVibGljIHsKICAgICAgICByZXF1aXJlKGJsb2NrLnRpbWVzdGFtcCA+IGVuZFRpbWUpOwoKICAgICAgICBiYWxsb3RFbmNyeXB0aW9uU2Vja2V5ID0gX3NlY0tleTsKICAgICAgICBzZWNrZXlSZXZlYWxlZCA9IHRydWU7ICAvLyB0aGlzIGZsYWcgYWxsb3dzIHRoZSBjb250cmFjdCB0byBiZSBsb2NrZWQKICAgICAgICBTZWNrZXlSZXZlYWxlZChfc2VjS2V5KTsKICAgIH0KCiAgICAvLyBIZWxwZXJzCiAgICBmdW5jdGlvbiBnZXRFbmNQdWJrZXkoKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAoYnl0ZXMzMikgewogICAgICAgIHJldHVybiBiYWxsb3RFbmNyeXB0aW9uUHVia2V5OwogICAgfQoKICAgIGZ1bmN0aW9uIGdldEVuY1NlY2tleSgpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zIChieXRlczMyKSB7CiAgICAgICAgcmV0dXJuIGJhbGxvdEVuY3J5cHRpb25TZWNrZXk7CiAgICB9CgogICAgZnVuY3Rpb24gZ2V0QmFsbG90T3B0aW9ucygpIHB1YmxpYyBwdXJlIHJldHVybnMgKHVpbnQ4WzJdWzRdKSB7CiAgICAgICAgLy8gTk9URTogc3RvcmluZyBhIDR4MiBhcnJheSBpbiBzdG9yYWdlIG5lYXJseSBkb3VibGVkIHRoZSBnYXMgY29zdAogICAgICAgIC8vIG9mIGRlcGxveW1lbnQgLSBjb21wcm9taXNlIGlzIHRvIGNyZWF0ZSBhIGNvbnN0YW50IGZ1bmN0aW9uCiAgICAgICAgcmV0dXJuIFsKICAgICAgICAgICAgWzgsIDQyXSwKICAgICAgICAgICAgWzQyLCA4XSwKICAgICAgICAgICAgWzE2LCA0Ml0sCiAgICAgICAgICAgIFs0LCA4NF0KICAgICAgICBdOwogICAgfQogICAgCiAgICAvLyBiYWxsb3QgcGFyYW1zIC0gYWxsb3dzIHRoZSBmcm9udGVuZCB0byBkbyBzb21lIGNoZWNraW5nCiAgICBmdW5jdGlvbiBnZXRCYWxsb3RPcHROdW1iZXIoKSBwdWJsaWMgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgcmV0dXJuIDQ7CiAgICB9CgogICAgLy8gVGVzdCBmdW5jdGlvbnMKICAgIGZ1bmN0aW9uIHNldEVuZFRpbWUodWludDI1NiBuZXdFbmRUaW1lKSBvbmx5VGVzdGluZyBvbmx5T3duZXIgcHVibGljIHsKICAgICAgICBlbmRUaW1lID0gbmV3RW5kVGltZTsKICAgIH0KCiAgICBmdW5jdGlvbiBiYW5BZGRyZXNzKGFkZHJlc3MgX2FkZHIpIG9ubHlUZXN0aW5nIG9ubHlPd25lciBwdWJsaWMgewogICAgICAgIGJhbm5lZEFkZHJlc3Nlc1tfYWRkcl0gPSB0cnVlOwogICAgfQp9'.
	

]
