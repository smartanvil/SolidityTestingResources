Class {
	#name : #SRT3e3b657d3f28f909d17de9a91762781af66ffbbd,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT3e3b657d3f28f909d17de9a91762781af66ffbbd >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7CgoKLyoqCiAqIEB0aXRsZSBTYWZlTWF0aAogKiBAZGV2IE1hdGggb3BlcmF0aW9ucyB3aXRoIHNhZmV0eSBjaGVja3MgdGhhdCB0aHJvdyBvbiBlcnJvcgogKi8KbGlicmFyeSBTYWZlTWF0aCB7CgogIC8qKgogICogQGRldiBNdWx0aXBsaWVzIHR3byBudW1iZXJzLCB0aHJvd3Mgb24gb3ZlcmZsb3cuCiAgKi8KICAgIGZ1bmN0aW9uIG11bCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgaWYgKGEgPT0gMCkgewogICAgICAgICAgICByZXR1cm4gMDsKICAgICAgICB9CiAgICAgICAgdWludDI1NiBjID0gYSAqIGI7CiAgICAgICAgYXNzZXJ0KGMgLyBhID09IGIpOwogICAgICAgIHJldHVybiBjOwogICAgfQoKICAvKioKICAqIEBkZXYgSW50ZWdlciBkaXZpc2lvbiBvZiB0d28gbnVtYmVycywgdHJ1bmNhdGluZyB0aGUgcXVvdGllbnQuCiAgKi8KICAgIGZ1bmN0aW9uIGRpdih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAKICAgICAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgIC8vIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOyAvLyBUaGVyZSBpcyBubyBjYXNlIGluIHdoaWNoIHRoaXMgZG9lc24ndCBob2xkCiAgICAgICAgcmV0dXJuIGM7CiAgICB9CgogIC8qKgogICogQGRldiBTdWJzdHJhY3RzIHR3byBudW1iZXJzLCB0aHJvd3Mgb24gb3ZlcmZsb3cgKGkuZS4gaWYgc3VidHJhaGVuZCBpcyBncmVhdGVyIHRoYW4gbWludWVuZCkuCiAgKi8KICAgIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgYXNzZXJ0KGIgPD0gYSk7CiAgICAgICAgcmV0dXJuIGEgLSBiOwogICAgfQoKICAvKioKICAqIEBkZXYgQWRkcyB0d28gbnVtYmVycywgdGhyb3dzIG9uIG92ZXJmbG93LgogICovCiAgICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgICAgIGFzc2VydChjID49IGEpOwogICAgICAgIHJldHVybiBjOwogICAgfQp9CgoKaW50ZXJmYWNlIEVSQzIwQmFzaWMgewogIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1Nik7CiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3Mgd2hvKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2KTsKICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIHRvLCB1aW50MjU2IHZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CiAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiB2YWx1ZSk7Cn0KCgpjb250cmFjdCBQb3N0RmFjdG9yeSB7CiAgICB1c2luZyBTYWZlTWF0aCBmb3IgdWludDI1NjsKCiAgICBzdHJpbmcgcHVibGljIG5hbWUgPSAiS2FybWEgRmFjdG9yeSI7CiAgICBzdHJpbmcgcHVibGljIGNvbnN0YW50IFNZTUJPTCA9ICJLQyI7CgogICAgdWludDI1NiBwcml2YXRlIHBvc3RJZCA9IDE7CiAgICAvLyBwb3N0IElEcyBzdGFydCBhdCAxLCBqdXN0IGxpa2UgYXJyYXlzIGRvIDopCgogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nICh1aW50MjU2ID0+IGJvb2wpKSB1cHZvdGVkUG9zdDsKCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKHVpbnQyNTYgPT4gYm9vbCkpIGRvd252b3RlZFBvc3Q7CgogICAgLy8gY2hlY2tzIGlmIGEgcG9zdCBleGlzdHMKICAgIG1hcHBpbmcgKHVpbnQyNTYgPT4gYm9vbCkgcG9zdEV4aXN0czsKCiAgICBzdHJ1Y3QgUG9zdCB7CiAgICAgICAgc3RyaW5nIGxpbms7CiAgICAgICAgYWRkcmVzcyBwb3N0ZXI7CiAgICAgICAgdWludDI1NiB2b3RlQ291bnQ7CiAgICAgICAgdWludDY0IGRhdGVQb3N0ZWQ7CiAgICB9CgogICAgbWFwcGluZyAodWludDI1NiA9PiBQb3N0KSBwb3N0czsgLy8gdGllcyBwb3N0SWQgdG8gYSBwb3N0CgogICAgbWFwcGluZyhzdHJpbmcgPT4gdWludDI1NikgbGlua1RvUG9zdElkOyAvLyBUaWVzIGEgcG9zdCdzIGxpbmsgdG8gaXQncyBJRAoKICAgIGZ1bmN0aW9uIGNyZWF0ZVBvc3Qoc3RyaW5nIF9saW5rKSBwdWJsaWMgcmV0dXJucyh1aW50MjU2KSB7CgogICAgICAgIFBvc3QgbWVtb3J5IHBvc3QgPSBQb3N0KHsKICAgICAgICAgICAgbGluazogX2xpbmssCiAgICAgICAgICAgIHBvc3RlcjogbXNnLnNlbmRlciwKICAgICAgICAgICAgdm90ZUNvdW50OiAwLAogICAgICAgICAgICBkYXRlUG9zdGVkOiB1aW50NjQobm93KQogICAgICAgIH0pOwoKICAgICAgICBwb3N0c1twb3N0SWRdID0gcG9zdDsKICAgICAgICBsaW5rVG9Qb3N0SWRbX2xpbmtdID0gcG9zdElkOwogICAgICAgIHBvc3RFeGlzdHNbcG9zdElkXSA9IHRydWU7CgogICAgICAgIHVpbnQyNTYgY3VycmVudFBvc3RJZCA9IHBvc3RJZDsKICAgICAgICBpbmNyZW1lbnRwb3N0SWQoKTsKCiAgICAgICAgcmV0dXJuIGN1cnJlbnRQb3N0SWQ7CiAgICB9CgogICAgZnVuY3Rpb24gdXBkb290KHVpbnQyNTYgX3Bvc3RJZCkgcHVibGljIHsKICAgICAgICByZXF1aXJlKHBvc3RFeGlzdHNbX3Bvc3RJZF0pOwogICAgICAgIHVwdm90ZWRQb3N0W21zZy5zZW5kZXJdW19wb3N0SWRdID0gdHJ1ZTsKICAgICAgICBkb3dudm90ZWRQb3N0W21zZy5zZW5kZXJdW19wb3N0SWRdID0gZmFsc2U7CiAgICAgICAgcG9zdHNbX3Bvc3RJZF0udm90ZUNvdW50ID0gcG9zdHNbX3Bvc3RJZF0udm90ZUNvdW50LmFkZCgxKTsKICAgIH0KCiAgICBmdW5jdGlvbiBkb3duZG9vdCh1aW50MjU2IF9wb3N0SWQpIHB1YmxpYyB7CiAgICAgICAgcmVxdWlyZShwb3N0RXhpc3RzW19wb3N0SWRdKTsKICAgICAgICByZXF1aXJlKHBvc3RzW19wb3N0SWRdLnZvdGVDb3VudCA+PSAxKTsKICAgICAgICB1cHZvdGVkUG9zdFttc2cuc2VuZGVyXVtfcG9zdElkXSA9IGZhbHNlOwogICAgICAgIGRvd252b3RlZFBvc3RbbXNnLnNlbmRlcl1bX3Bvc3RJZF0gPSB0cnVlOwogICAgICAgIHBvc3RzW19wb3N0SWRdLnZvdGVDb3VudCA9IHBvc3RzW19wb3N0SWRdLnZvdGVDb3VudC5zdWIoMSk7CiAgICB9CgogICAgZnVuY3Rpb24gZ2V0UG9zdExpbmsodWludDI1NiBfcG9zdElkKSBwdWJsaWMgdmlldyByZXR1cm5zKHN0cmluZykgewogICAgICAgIHJldHVybiBwb3N0c1tfcG9zdElkXS5saW5rOwogICAgfQoKICAgIGZ1bmN0aW9uIGdldFBvc3RQb3N0ZXIodWludDI1NiBfcG9zdElkKSBwdWJsaWMgdmlldyByZXR1cm5zKGFkZHJlc3MpIHsKICAgICAgICByZXR1cm4gcG9zdHNbX3Bvc3RJZF0ucG9zdGVyOwogICAgfQoKICAgIGZ1bmN0aW9uIGdldFBvc3RWb3RlQ291bnQodWludDI1NiBfcG9zdElkKSBwdWJsaWMgdmlldyByZXR1cm5zKHVpbnQyNTYpIHsKICAgICAgICByZXR1cm4gcG9zdHNbX3Bvc3RJZF0udm90ZUNvdW50OwogICAgfQoKICAgIGZ1bmN0aW9uIGdldExpbmtUb1Bvc3RJZChzdHJpbmcgX2xpbmspIHB1YmxpYyB2aWV3IHJldHVybnModWludDI1NikgewogICAgICAgIHJldHVybiBsaW5rVG9Qb3N0SWRbX2xpbmtdOwogICAgfQoKICAgIGZ1bmN0aW9uIGdldERhdGVQb3N0ZWQodWludDI1NiBfcG9zdElkKSBwdWJsaWMgdmlldyByZXR1cm5zKHVpbnQ2NCkgewogICAgICAgIHJldHVybiBwb3N0c1tfcG9zdElkXS5kYXRlUG9zdGVkOwogICAgfQoKICAgIGZ1bmN0aW9uIGluY3JlbWVudHBvc3RJZCgpIGludGVybmFsIHsKICAgICAgICBwb3N0SWQgPSBwb3N0SWQuYWRkKDEpOwogICAgfQoKfQoKCmNvbnRyYWN0IEthcm1hQ2VudGVyIGlzIFBvc3RGYWN0b3J5IHsKICAgIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwoKICAgIC8vIFRoZSBLYXJtYUNvaW4gdG9rZW4gYmVpbmcgbWludGVkCiAgICBFUkMyMEJhc2ljIHB1YmxpYyB0b2tlbjsKICAgIAogICAgLy8gTXkgd2FsbGV0CiAgICBhZGRyZXNzIHByaXZhdGUgY29udHJvbGxlcjsKCiAgICBldmVudCBHYW1lV29uKGFkZHJlc3MgaW5kZXhlZCB3aW5uZXIsIHVpbnQyNTYgdmFsdWVVbmxvY2tlZCk7CgogICAgLy9Db25zdHJ1Y3RvcgogICAgZnVuY3Rpb24gS2FybWFDZW50ZXIoRVJDMjBCYXNpYyBfdG9rZW4pIHB1YmxpYyB7CiAgICAgICAgdG9rZW4gPSBfdG9rZW47CiAgICAgICAgY29udHJvbGxlciA9IG1zZy5zZW5kZXI7CiAgICB9CgogICAgZnVuY3Rpb24gKCkgcHVibGljIHBheWFibGUgewogICAgICAgIGNvbnRyb2xsZXIudHJhbnNmZXIobXNnLnZhbHVlKTsKICAgIH0KCiAgICBmdW5jdGlvbiB1cGRvb3QodWludDI1NiBfcG9zdElkKSBwdWJsaWMgewogICAgICAgIHJlcXVpcmUocG9zdEV4aXN0c1tfcG9zdElkXSk7CiAgICAgICAgcmVxdWlyZSh0b2tlbi5iYWxhbmNlT2YobXNnLnNlbmRlcikgPiAwKTsKICAgICAgICB1cHZvdGVkUG9zdFttc2cuc2VuZGVyXVtfcG9zdElkXSA9IHRydWU7CiAgICAgICAgZG93bnZvdGVkUG9zdFttc2cuc2VuZGVyXVtfcG9zdElkXSA9IGZhbHNlOwogICAgICAgIHBvc3RzW19wb3N0SWRdLnZvdGVDb3VudCA9IHBvc3RzW19wb3N0SWRdLnZvdGVDb3VudC5hZGQoMSk7CiAgICAgICAgYWRkcmVzcyBwb3N0ZXIgPSBwb3N0c1tfcG9zdElkXS5wb3N0ZXI7CiAgICAgICAgdG9rZW4udHJhbnNmZXIocG9zdGVyLCAxKTsKICAgIH0KCiAgICBmdW5jdGlvbiBkb3duZG9vdCh1aW50MjU2IF9wb3N0SWQpIHB1YmxpYyB7CiAgICAgICAgcmVxdWlyZShwb3N0RXhpc3RzW19wb3N0SWRdKTsKICAgICAgICByZXF1aXJlKHBvc3RzW19wb3N0SWRdLnZvdGVDb3VudCA+PSAxKTsKICAgICAgICB1cHZvdGVkUG9zdFttc2cuc2VuZGVyXVtfcG9zdElkXSA9IGZhbHNlOwogICAgICAgIGRvd252b3RlZFBvc3RbbXNnLnNlbmRlcl1bX3Bvc3RJZF0gPSB0cnVlOwogICAgICAgIHBvc3RzW19wb3N0SWRdLnZvdGVDb3VudCA9IHBvc3RzW19wb3N0SWRdLnZvdGVDb3VudC5zdWIoMSk7CiAgICB9Cgp9'.
	

]
