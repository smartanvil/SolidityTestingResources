Class {
	#name : #SRTb61802C06FC7D5beA7D8B4853e6a7Fcb53c6A8B0,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTb61802C06FC7D5beA7D8B4853e6a7Fcb53c6A8B0 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7Cgpjb250cmFjdCBTYWZlTWF0aCB7CgoKICAgIGZ1bmN0aW9uIHNhZmVBZGQodWludDI1NiB4LCB1aW50MjU2IHkpIGludGVybmFsIHJldHVybnModWludDI1NikgewogICAgICB1aW50MjU2IHogPSB4ICsgeTsKICAgICAgYXNzZXJ0KCh6ID49IHgpICYmICh6ID49IHkpKTsKICAgICAgcmV0dXJuIHo7CiAgICB9CgogICAgZnVuY3Rpb24gc2FmZVN1YnRyYWN0KHVpbnQyNTYgeCwgdWludDI1NiB5KSBpbnRlcm5hbCByZXR1cm5zKHVpbnQyNTYpIHsKICAgICAgYXNzZXJ0KHggPj0geSk7CiAgICAgIHVpbnQyNTYgeiA9IHggLSB5OwogICAgICByZXR1cm4gejsKICAgIH0KCiAgICBmdW5jdGlvbiBzYWZlTXVsdCh1aW50MjU2IHgsIHVpbnQyNTYgeSkgaW50ZXJuYWwgcmV0dXJucyh1aW50MjU2KSB7CiAgICAgIHVpbnQyNTYgeiA9IHggKiB5OwogICAgICBhc3NlcnQoKHggPT0gMCl8fCh6L3ggPT0geSkpOwogICAgICByZXR1cm4gejsKICAgIH0KCn0KCmNvbnRyYWN0IFRva2VuIHsKICAgIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5OwogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpOwogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKTsKICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7Cn0KCgovKiAgRVJDIDIwIHRva2VuICovCmNvbnRyYWN0IFN0YW5kYXJkVG9rZW4gaXMgVG9rZW4gewoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgIGlmIChiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfdmFsdWUgJiYgX3ZhbHVlID4gMCkgewogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdIC09IF92YWx1ZTsKICAgICAgICBiYWxhbmNlc1tfdG9dICs9IF92YWx1ZTsKICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgIGlmIChiYWxhbmNlc1tfZnJvbV0gPj0gX3ZhbHVlICYmIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID49IF92YWx1ZSAmJiBfdmFsdWUgPiAwKSB7CiAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfdmFsdWU7CiAgICAgICAgYmFsYW5jZXNbX2Zyb21dIC09IF92YWx1ZTsKICAgICAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgewogICAgICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogICAgfQoKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpIHsKICAgICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07CiAgICB9CgogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsKfQoKY29udHJhY3QgSG9seUNvaW4gaXMgU3RhbmRhcmRUb2tlbiwgU2FmZU1hdGggewoKICAgIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgbmFtZSA9ICJIb2x5Q29pbiI7CiAgICBzdHJpbmcgcHVibGljIGNvbnN0YW50IHN5bWJvbCA9ICJIT0xZIjsKICAgIHVpbnQyNTYgcHVibGljIGNvbnN0YW50IGRlY2ltYWxzID0gMTg7CiAgICBzdHJpbmcgcHVibGljIHZlcnNpb24gPSAiMS4wIjsKCiAgICBhZGRyZXNzIHB1YmxpYyBldGhGdW5kRGVwb3NpdDsKICAgIGFkZHJlc3MgcHVibGljIGhvbHlGb3VuZGVyc0Z1bmREZXBvc2l0OwogICAgYWRkcmVzcyBwdWJsaWMgaG9seUJvdW50eUZ1bmREZXBvc2l0OwoKICAgIGJvb2wgcHVibGljIGlzRmluYWxpemVkOwogICAgdWludDI1NiBwdWJsaWMgZnVuZGluZ1N0YXJ0VW5peFRpbWVzdGFtcDsKICAgIHVpbnQyNTYgcHVibGljIGZ1bmRpbmdFbmRVbml4VGltZXN0YW1wOwogICAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgZm91bmRlcnNGdW5kID0gMjQwMCAqICgxMCoqMykgKiAxMCoqZGVjaW1hbHM7IC8vIDIuNE0gSG9seUNvaW5zCiAgICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCBib3VudHlGdW5kID0gNjAwICogKDEwKiozKSAqIDEwKipkZWNpbWFsczsgLy8gMC42TSBIb2x5Q29pbnMKICAgIHVpbnQyNTYgcHVibGljIGNvbnN0YW50IGNvbnZlcnNpb25SYXRlID0gOTAwOyAvLyA5MDAgSG9seUNvaW5zID0gMSBFVEgKCiAgICBmdW5jdGlvbiB0b2tlblJhdGUoKSBjb25zdGFudCByZXR1cm5zKHVpbnQpIHsKICAgICAgICByZXR1cm4gY29udmVyc2lvblJhdGU7CiAgICB9CgogICAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgdG9rZW5DcmVhdGlvbkNhcCA9ICAxMiAqICgxMCoqNikgKiAxMCoqZGVjaW1hbHM7IC8vIDEyTSBIb2x5Q29pbnMgbWF4aW11bQoKCiAgICAvLyBldmVudHMKICAgIGV2ZW50IENyZWF0ZUhPTFkoYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwoKICAgIC8vIGNvbnN0cnVjdG9yCiAgICBmdW5jdGlvbiBIb2x5Q29pbigKICAgICAgICBhZGRyZXNzIF9ldGhGdW5kRGVwb3NpdCwKICAgICAgICBhZGRyZXNzIF9ob2x5Rm91bmRlcnNGdW5kRGVwb3NpdCwKICAgICAgICBhZGRyZXNzIF9ob2x5Qm91bnR5RnVuZERlcG9zaXQsCiAgICAgICAgdWludDI1NiBfZnVuZGluZ1N0YXJ0VW5peFRpbWVzdGFtcCwKICAgICAgICB1aW50MjU2IF9mdW5kaW5nRW5kVW5peFRpbWVzdGFtcCkKICAgIHsKICAgICAgaXNGaW5hbGl6ZWQgPSBmYWxzZTsKICAgICAgZXRoRnVuZERlcG9zaXQgPSBfZXRoRnVuZERlcG9zaXQ7CiAgICAgIGhvbHlGb3VuZGVyc0Z1bmREZXBvc2l0ID0gX2hvbHlGb3VuZGVyc0Z1bmREZXBvc2l0OwogICAgICBob2x5Qm91bnR5RnVuZERlcG9zaXQgPSBfaG9seUJvdW50eUZ1bmREZXBvc2l0OwogICAgICBmdW5kaW5nU3RhcnRVbml4VGltZXN0YW1wID0gX2Z1bmRpbmdTdGFydFVuaXhUaW1lc3RhbXA7CiAgICAgIGZ1bmRpbmdFbmRVbml4VGltZXN0YW1wID0gX2Z1bmRpbmdFbmRVbml4VGltZXN0YW1wOwogICAgICB0b3RhbFN1cHBseSA9IGZvdW5kZXJzRnVuZCArIGJvdW50eUZ1bmQ7CiAgICAgIGJhbGFuY2VzW2hvbHlGb3VuZGVyc0Z1bmREZXBvc2l0XSA9IGZvdW5kZXJzRnVuZDsKICAgICAgYmFsYW5jZXNbaG9seUJvdW50eUZ1bmREZXBvc2l0XSA9IGJvdW50eUZ1bmQ7CiAgICAgIENyZWF0ZUhPTFkoaG9seUZvdW5kZXJzRnVuZERlcG9zaXQsIGZvdW5kZXJzRnVuZCk7CiAgICAgIENyZWF0ZUhPTFkoaG9seUJvdW50eUZ1bmREZXBvc2l0LCBib3VudHlGdW5kKTsKICAgIH0KCgogICAgZnVuY3Rpb24gbWFrZVRva2VucygpIHBheWFibGUgIHsKICAgICAgaWYgKGlzRmluYWxpemVkKSB0aHJvdzsKICAgICAgaWYgKGJsb2NrLnRpbWVzdGFtcCA8IGZ1bmRpbmdTdGFydFVuaXhUaW1lc3RhbXApIHRocm93OwogICAgICBpZiAoYmxvY2sudGltZXN0YW1wID4gZnVuZGluZ0VuZFVuaXhUaW1lc3RhbXApIHRocm93OwogICAgICBpZiAobXNnLnZhbHVlIDwgMTAwIGZpbm5leSB8fCBtc2cudmFsdWUgPiAxMDAgZXRoZXIpIHRocm93OyAvLyAxMDAgZmlubmV5ID0gMC4xIGV0aGVyCgogICAgICB1aW50MjU2IHRva2VucyA9IHNhZmVNdWx0KG1zZy52YWx1ZSwgdG9rZW5SYXRlKCkpOwoKICAgICAgdWludDI1NiBjaGVja2VkU3VwcGx5ID0gc2FmZUFkZCh0b3RhbFN1cHBseSwgdG9rZW5zKTsKCiAgICAgIGlmICh0b2tlbkNyZWF0aW9uQ2FwIDwgY2hlY2tlZFN1cHBseSkgdGhyb3c7CgogICAgICB0b3RhbFN1cHBseSA9IGNoZWNrZWRTdXBwbHk7CiAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdICs9IHRva2VuczsKICAgICAgQ3JlYXRlSE9MWShtc2cuc2VuZGVyLCB0b2tlbnMpOwogICAgfQoKICAgIGZ1bmN0aW9uKCkgcGF5YWJsZSB7CiAgICAgICAgbWFrZVRva2VucygpOwogICAgfQoKICAgIGZ1bmN0aW9uIGZpbmFsaXplKCkgZXh0ZXJuYWwgewogICAgICBpZiAoaXNGaW5hbGl6ZWQpIHRocm93OwogICAgICBpZiAobXNnLnNlbmRlciAhPSBldGhGdW5kRGVwb3NpdCkgdGhyb3c7CgogICAgICBpZihibG9jay50aW1lc3RhbXAgPD0gZnVuZGluZ0VuZFVuaXhUaW1lc3RhbXAgJiYgdG90YWxTdXBwbHkgIT0gdG9rZW5DcmVhdGlvbkNhcCkgdGhyb3c7CgogICAgICBpc0ZpbmFsaXplZCA9IHRydWU7CiAgICAgIGlmKCFldGhGdW5kRGVwb3NpdC5zZW5kKHRoaXMuYmFsYW5jZSkpIHRocm93OwogICAgfQoKCgp9'.
	

]
