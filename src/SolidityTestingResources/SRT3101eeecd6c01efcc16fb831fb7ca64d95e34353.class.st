Class {
	#name : #SRT3101eeecd6c01efcc16fb831fb7ca64d95e34353,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT3101eeecd6c01efcc16fb831fb7ca64d95e34353 >> base64 [
	^ ''.
	

]
