Class {
	#name : #SRT01b3ec4aae1b8729529beb4965f27d008788b0eb,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT01b3ec4aae1b8729529beb4965f27d008788b0eb >> base64 [
	^ ''.
	

]
