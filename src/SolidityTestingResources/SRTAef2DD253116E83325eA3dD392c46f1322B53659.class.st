Class {
	#name : #SRTAef2DD253116E83325eA3dD392c46f1322B53659,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTAef2DD253116E83325eA3dD392c46f1322B53659 >> base64 [
	^ ''.
	

]
