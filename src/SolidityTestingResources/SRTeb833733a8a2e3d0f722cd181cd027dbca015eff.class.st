Class {
	#name : #SRTeb833733a8a2e3d0f722cd181cd027dbca015eff,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTeb833733a8a2e3d0f722cd181cd027dbca015eff >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7Cgpjb250cmFjdCBPd25hYmxlIHsKICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKCgogIC8qKiAKICAgKiBAZGV2IFRoZSBPd25hYmxlIGNvbnN0cnVjdG9yIHNldHMgdGhlIG9yaWdpbmFsIGBvd25lcmAgb2YgdGhlIGNvbnRyYWN0IHRvIHRoZSBzZW5kZXIKICAgKiBhY2NvdW50LgogICAqLwogIGZ1bmN0aW9uIE93bmFibGUoKSBpbnRlcm5hbCB7CiAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgfQoKCiAgLyoqCiAgICogQGRldiBUaHJvd3MgaWYgY2FsbGVkIGJ5IGFueSBhY2NvdW50IG90aGVyIHRoYW4gdGhlIG93bmVyLiAKICAgKi8KICBtb2RpZmllciBvbmx5T3duZXIoKSB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgXzsKICB9CgoKICAvKioKICAgKiBAZGV2IEFsbG93cyB0aGUgY3VycmVudCBvd25lciB0byB0cmFuc2ZlciBjb250cm9sIG9mIHRoZSBjb250cmFjdCB0byBhIG5ld093bmVyLgogICAqIEBwYXJhbSBuZXdPd25lciBUaGUgYWRkcmVzcyB0byB0cmFuc2ZlciBvd25lcnNoaXAgdG8uIAogICAqLwogIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpIG9ubHlPd25lciBwdWJsaWMgewogICAgcmVxdWlyZShuZXdPd25lciAhPSBhZGRyZXNzKDApKTsKICAgIG93bmVyID0gbmV3T3duZXI7CiAgfQoKfQoKLyoqCiAqIEludGVyZmFjZSBmb3IgdGhlIHN0YW5kYXJkIHRva2VuLgogKiBCYXNlZCBvbiBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9ibG9iL21hc3Rlci9FSVBTL2VpcC0yMC10b2tlbi1zdGFuZGFyZC5tZAogKi8KaW50ZXJmYWNlIEVJUDIwVG9rZW4gewogIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgZXh0ZXJuYWwgdmlldyByZXR1cm5zICh1aW50MjU2KTsKICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyB3aG8pIGV4dGVybmFsIHZpZXcgcmV0dXJucyAodWludDI1Nik7CiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyB0bywgdWludDI1NiB2YWx1ZSkgZXh0ZXJuYWwgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvLCB1aW50MjU2IHZhbHVlKSBleHRlcm5hbCByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBzcGVuZGVyLCB1aW50MjU2IHZhbHVlKSBleHRlcm5hbCByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIG93bmVyLCBhZGRyZXNzIHNwZW5kZXIpIGV4dGVybmFsIHZpZXcgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpOwogIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBmcm9tLCBhZGRyZXNzIGluZGV4ZWQgdG8sIHVpbnQyNTYgdmFsdWUpOwogIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBvd25lciwgYWRkcmVzcyBpbmRleGVkIHNwZW5kZXIsIHVpbnQyNTYgdmFsdWUpOwp9CgoKLy8gVGhlIG93bmVyIG9mIHRoaXMgY29udHJhY3Qgc2hvdWxkIGJlIGFuIGV4dGVybmFsbHkgb3duZWQgYWNjb3VudApjb250cmFjdCBIdW1hblByb3RvY29sSW52ZXN0bWVudCBpcyBPd25hYmxlIHsKCiAgLy8gQWRkcmVzcyBvZiB0aGUgdGFyZ2V0IGNvbnRyYWN0CiAgYWRkcmVzcyBwdWJsaWMgaW52ZXN0bWVudF9hZGRyZXNzID0gMHg1NTcwNEU4Q2IxNUFGMTA1NGUyMWE3YTU5RmIwQ0JEYTZCZDA0NEI3OwogIC8vIE1ham9yIHBhcnRuZXIgYWRkcmVzcwogIGFkZHJlc3MgcHVibGljIG1ham9yX3BhcnRuZXJfYWRkcmVzcyA9IDB4NWE4OUQ5ZjFDMzgyQ2FBYTY2RWUwNDVhZWI4NTEwRjEyMDViQzhiZjsKICAvLyBNaW5vciBwYXJ0bmVyIGFkZHJlc3MKICBhZGRyZXNzIHB1YmxpYyBtaW5vcl9wYXJ0bmVyX2FkZHJlc3MgPSAweEM3ODdDM2Y2Rjc1RDcxOTUzNjFiNjQzMThDRTAxOWY5MDUwN2Y4MDY7CiAgLy8gVGhpcmQgcGFydG5lciBhZGRyZXNzCiAgYWRkcmVzcyBwdWJsaWMgdGhpcmRfcGFydG5lcl9hZGRyZXNzID0gMHhEYTJjRWEzRGJhQzMwODM1RDE2MkRmMTFEMjFBYzZDYmYzNTVhQzlGOwogIC8vIEFkZGl0aW9uYWwgZ2FzIHVzZWQgZm9yIHRyYW5zZmVycy4KICB1aW50IHB1YmxpYyBnYXMgPSAxMDAwOwoKICAvLyBQYXltZW50cyB0byB0aGlzIGNvbnRyYWN0IHJlcXVpcmUgYSBiaXQgb2YgZ2FzLiAxMDBrIHNob3VsZCBiZSBlbm91Z2guCiAgZnVuY3Rpb24oKSBwYXlhYmxlIHB1YmxpYyB7CiAgICBleGVjdXRlX3RyYW5zZmVyKG1zZy52YWx1ZSk7CiAgfQoKICAvLyBUcmFuc2ZlciBzb21lIGZ1bmRzIHRvIHRoZSB0YXJnZXQgaW52ZXN0bWVudCBhZGRyZXNzLgogIGZ1bmN0aW9uIGV4ZWN1dGVfdHJhbnNmZXIodWludCB0cmFuc2Zlcl9hbW91bnQpIGludGVybmFsIHsKICAgIC8vIE1ham9yIGZlZSBpcyAzMCUgKiAoMS8xMSkgKiB2YWx1ZSA9IDMgKiB2YWx1ZSAvICgxMCAqIDExKQogICAgdWludCBtYWpvcl9mZWUgPSB0cmFuc2Zlcl9hbW91bnQgKiAzIC8gKDEwICogMTEpOwogICAgLy8gTWlub3IgZmVlIGlzIDIwJSAqICgxLzExKSAqIHZhbHVlID0gMiAqIHZhbHVlIC8gKDEwICogMTEpCiAgICB1aW50IG1pbm9yX2ZlZSA9IHRyYW5zZmVyX2Ftb3VudCAqIDIgLyAoMTAgKiAxMSk7CiAgICAvLyBUaGlyZCBmZWUgaXMgNTAlICogKDEvMTEpICogdmFsdWUgPSA1ICogdmFsdWUgLyAoMTAgKiAxMSkKICAgIHVpbnQgdGhpcmRfZmVlID0gdHJhbnNmZXJfYW1vdW50ICogNSAvICgxMCAqIDExKTsKCiAgICByZXF1aXJlKG1ham9yX3BhcnRuZXJfYWRkcmVzcy5jYWxsLmdhcyhnYXMpLnZhbHVlKG1ham9yX2ZlZSkoKSk7CiAgICByZXF1aXJlKG1pbm9yX3BhcnRuZXJfYWRkcmVzcy5jYWxsLmdhcyhnYXMpLnZhbHVlKG1pbm9yX2ZlZSkoKSk7CiAgICByZXF1aXJlKHRoaXJkX3BhcnRuZXJfYWRkcmVzcy5jYWxsLmdhcyhnYXMpLnZhbHVlKHRoaXJkX2ZlZSkoKSk7CgogICAgLy8gU2VuZCB0aGUgcmVzdAogICAgdWludCBpbnZlc3RtZW50X2Ftb3VudCA9IHRyYW5zZmVyX2Ftb3VudCAtIG1ham9yX2ZlZSAtIG1pbm9yX2ZlZSAtIHRoaXJkX2ZlZTsKICAgIHJlcXVpcmUoaW52ZXN0bWVudF9hZGRyZXNzLmNhbGwuZ2FzKGdhcykudmFsdWUoaW52ZXN0bWVudF9hbW91bnQpKCkpOwogIH0KCiAgLy8gU2V0cyB0aGUgYW1vdW50IG9mIGFkZGl0aW9uYWwgZ2FzIGFsbG93ZWQgdG8gYWRkcmVzc2VzIGNhbGxlZAogIC8vIEBkZXYgVGhpcyBhbGxvd3MgdHJhbnNmZXJzIHRvIG11bHRpc2lncyB0aGF0IHVzZSBtb3JlIHRoYW4gMjMwMCBnYXMgaW4gdGhlaXIgZmFsbGJhY2sgZnVuY3Rpb24uCiAgLy8gIAogIGZ1bmN0aW9uIHNldF90cmFuc2Zlcl9nYXModWludCB0cmFuc2Zlcl9nYXMpIHB1YmxpYyBvbmx5T3duZXIgewogICAgZ2FzID0gdHJhbnNmZXJfZ2FzOwogIH0KCiAgLy8gV2UgY2FuIHVzZSB0aGlzIGZ1bmN0aW9uIHRvIG1vdmUgdW53YW50ZWQgdG9rZW5zIGluIHRoZSBjb250cmFjdAogIGZ1bmN0aW9uIGFwcHJvdmVfdW53YW50ZWRfdG9rZW5zKEVJUDIwVG9rZW4gdG9rZW4sIGFkZHJlc3MgZGVzdCwgdWludCB2YWx1ZSkgcHVibGljIG9ubHlPd25lciB7CiAgICB0b2tlbi5hcHByb3ZlKGRlc3QsIHZhbHVlKTsKICB9CgogIC8vIFRoaXMgY29udHJhY3QgaXMgZGVzaWduZWQgdG8gaGF2ZSBubyBiYWxhbmNlLgogIC8vIEhvd2V2ZXIsIHdlIGluY2x1ZGUgdGhpcyBmdW5jdGlvbiB0byBhdm9pZCBzdHVjayB2YWx1ZSBieSBzb21lIHVua25vd24gbWlzaGFwLgogIGZ1bmN0aW9uIGVtZXJnZW5jeV93aXRoZHJhdygpIHB1YmxpYyBvbmx5T3duZXIgewogICAgcmVxdWlyZShtc2cuc2VuZGVyLmNhbGwuZ2FzKGdhcykudmFsdWUodGhpcy5iYWxhbmNlKSgpKTsKICB9Cgp9'.
	

]
