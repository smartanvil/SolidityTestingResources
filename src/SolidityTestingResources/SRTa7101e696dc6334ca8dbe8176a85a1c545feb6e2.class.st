Class {
	#name : #SRTa7101e696dc6334ca8dbe8176a85a1c545feb6e2,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTa7101e696dc6334ca8dbe8176a85a1c545feb6e2 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7Cgpjb250cmFjdCBTYWZlTWF0aCB7CiAgICAvL2ludGVybmFscwoKICAgIGZ1bmN0aW9uIHNhZmVNdWwodWludCBhLCB1aW50IGIpIGludGVybmFsIHJldHVybnModWludCkgewogICAgICAgIHVpbnQgYyA9IGEgKiBiOwogICAgICAgIEFzc2VydChhID09IDAgfHwgYyAvIGEgPT0gYik7CiAgICAgICAgcmV0dXJuIGM7CiAgICB9CgogICAgZnVuY3Rpb24gc2FmZVN1Yih1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyh1aW50KSB7CiAgICAgICAgQXNzZXJ0KGIgPD0gYSk7CiAgICAgICAgcmV0dXJuIGEgLSBiOwogICAgfQoKICAgIGZ1bmN0aW9uIHNhZmVBZGQodWludCBhLCB1aW50IGIpIGludGVybmFsIHJldHVybnModWludCkgewogICAgICAgIHVpbnQgYyA9IGEgKyBiOwogICAgICAgIEFzc2VydChjID49IGEgJiYgYyA+PSBiKTsKICAgICAgICByZXR1cm4gYzsKICAgIH0KCiAgICBmdW5jdGlvbiBBc3NlcnQoYm9vbCBhc3NlcnRpb24pIGludGVybmFsIHsKICAgICAgICBpZiAoIWFzc2VydGlvbikgewogICAgICAgICAgICByZXZlcnQoKTsKICAgICAgICB9CiAgICB9Cn0KCmNvbnRyYWN0IEJBUCBpcyBTYWZlTWF0aCB7CiAgICAvKiBQdWJsaWMgdmFyaWFibGVzIG9mIHRoZSB0b2tlbiAqLwogICAgc3RyaW5nIHB1YmxpYyBzdGFuZGFyZCA9ICdFUkMyMCc7CiAgICBzdHJpbmcgcHVibGljIG5hbWUgPSAnQkFQIHRva2VuJzsKICAgIHN0cmluZyBwdWJsaWMgc3ltYm9sID0gJ0JBUCc7CiAgICB1aW50OCBwdWJsaWMgZGVjaW1hbHMgPSAwOwogICAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7CiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKICAgIHVpbnQgcHVibGljIHRva2Vuc1NvbGRUb0ludmVzdG9ycyA9IDA7CiAgICB1aW50IHB1YmxpYyBtYXhHb2FsSW5JQ08gPSAyMTAwMDAwMDAwOwogICAgLyogRnJvbSB0aGlzIHRpbWUgb24gdG9rZW5zIG1heSBiZSB0cmFuc2ZlcmVkIChhZnRlciBJQ08gMjNoNTkgMTAvMTEvMjAxNykqLwogICAgdWludDI1NiBwdWJsaWMgc3RhcnRUaW1lID0gMTUwOTAwODQwMDsKICAgIC8qIFRlbGxzIGlmIHRva2VucyBoYXZlIGJlZW4gYnVybmVkIGFscmVhZHkgKi8KICAgIGJvb2wgYnVybmVkOwogICAgYm9vbCBoYXNJQ09TdGFydGVkOwogICAgLyogVGhpcyB3YWxsZXQgd2lsbCBob2xkIHRva2VucyBhZnRlciBJQ08qLwogICAgYWRkcmVzcyB0b2tlbnNIb2xkZXIgPSAweDEyYkY4RTE5OEE2NDc0RkM2NWNFZTBlMUM2ZjFDN2YyMzMyNEM4RDU7CiAgICAvKiBUaGlzIGNyZWF0ZXMgYW4gYXJyYXkgd2l0aCBhbGwgYmFsYW5jZXMgKi8KICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIGJhbGFuY2VPZjsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgcHVibGljIGFsbG93YW5jZTsKCgogICAgLyogVGhpcyBnZW5lcmF0ZXMgYSBwdWJsaWMgZXZlbnQgb24gdGhlIGJsb2NrY2hhaW4gdGhhdCB3aWxsIG5vdGlmeSBjbGllbnRzICovCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHZhbHVlKTsKICAgIGV2ZW50IFRyYW5zZmVyVG9SZWZlcnJhbChhZGRyZXNzIGluZGV4ZWQgcmVmZXJyYWxBZGRyZXNzLCB1aW50MjU2IHZhbHVlKTsKICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBPd25lciwgYWRkcmVzcyBpbmRleGVkIHNwZW5kZXIsIHVpbnQyNTYgdmFsdWUpOwogICAgZXZlbnQgQnVybmVkKHVpbnQgYW1vdW50KTsKCiAgICAvKiBJbml0aWFsaXplcyBjb250cmFjdCB3aXRoIGluaXRpYWwgc3VwcGx5IHRva2VucyB0byB0aGUgY3JlYXRvciBvZiB0aGUgY29udHJhY3QgKi8KICAgIGZ1bmN0aW9uIEJBUCgpIHsKICAgICAgICBvd25lciA9IDB4QjI3NTkwYjlkMzI4YkEwMzk2MjcxMzAzZTI0ZGI0NDEzMjUzMTQxMTsKICAgICAgICAvLyBHaXZlIHRoZSBvd25lciBhbGwgaW5pdGlhbCB0b2tlbnMKICAgICAgICBiYWxhbmNlT2Zbb3duZXJdID0gMjIwNTAwMDAwMDsKICAgICAgICAvLyBVcGRhdGUgdG90YWwgc3VwcGx5CiAgICAgICAgdG90YWxTdXBwbHkgICAgICA9IDIyMDUwMDAwMDA7CiAgICB9CgogICAgLyogU2VuZCBzb21lIG9mIHlvdXIgdG9rZW5zIHRvIGEgZ2l2ZW4gYWRkcmVzcyAqLwogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zKGJvb2wgc3VjY2VzcykgewogICAgICAgIC8vY2hlY2sgaWYgdGhlIGNyb3dkc2FsZSBpcyBhbHJlYWR5IG92ZXIKICAgICAgICBpZiAobm93IDwgc3RhcnRUaW1lKSB7CiAgICAgICAgICAgIHJldmVydCgpOwogICAgICAgIH0KCiAgICAgICAgLy9wcmV2ZW50IG93bmVyIHRyYW5zZmVyIGFsbCB0b2tlbnMgaW1tZWRpYXRlbHkgYWZ0ZXIgSUNPIGVuZGVkCiAgICAgICAgaWYgKG1zZy5zZW5kZXIgPT0gb3duZXIgJiYgIWJ1cm5lZCkgewogICAgICAgICAgICBidXJuKCk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIC8vIFN1YnRyYWN0IGZyb20gdGhlIHNlbmRlcgogICAgICAgIGJhbGFuY2VPZlttc2cuc2VuZGVyXSA9IHNhZmVTdWIoYmFsYW5jZU9mW21zZy5zZW5kZXJdLCBfdmFsdWUpOwogICAgICAgIC8vIEFkZCB0aGUgc2FtZSB0byB0aGUgcmVjaXBpZW50CiAgICAgICAgYmFsYW5jZU9mW190b10gPSBzYWZlQWRkKGJhbGFuY2VPZltfdG9dLCBfdmFsdWUpOwogICAgICAgIC8vIE5vdGlmeSBhbnlvbmUgbGlzdGVuaW5nIHRoYXQgdGhpcyB0cmFuc2ZlciB0b29rIHBsYWNlCiAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwoKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCgogICAgLyogQWxsb3cgYW5vdGhlciBjb250cmFjdCBvciBwZXJzb24gdG8gc3BlbmQgc29tZSB0b2tlbnMgaW4geW91ciBiZWhhbGYgKi8KICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgaWYoIG5vdyA8IHN0YXJ0VGltZSAmJiBoYXNJQ09TdGFydGVkKSB7IC8vIGR1cmluZyBJQ08gb25seSBhbGxvdyBleGVjdXRlIHRoaXMgZnVuY3Rpb24gb25lIHRpbWUKICAgICAgICAgICAgcmV2ZXJ0KCk7CiAgICAgICAgfQogICAgICAgIGhhc0lDT1N0YXJ0ZWQgPSB0cnVlOwogICAgICAgIGFsbG93YW5jZVttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CgogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIC8qIEEgY29udHJhY3Qgb3IgIHBlcnNvbiBhdHRlbXB0cyB0byBnZXQgdGhlIHRva2VucyBvZiBzb21lYm9keSBlbHNlLgogICAgKiAgVGhpcyBpcyBvbmx5IGFsbG93ZWQgaWYgdGhlIHRva2VuIGhvbGRlciBhcHByb3ZlZC4gKi8KICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgaWYgKG5vdyA8IHN0YXJ0VGltZSAmJiBfZnJvbSAhPSBvd25lcikgcmV2ZXJ0KCk7IC8vY2hlY2sgaWYgdGhlIGNyb3dkc2FsZSBpcyBhbHJlYWR5IG92ZXIKICAgICAgICAvL3ByZXZlbnQgdGhlIG93bmVyIG9mIHNwZW5kaW5nIGhpcyBzaGFyZSBvZiB0b2tlbnMgc28gdGhhdCBvd25lciBoYXMgdG8gYnVybiB0aGUgdG9rZW4gbGVmdCBhZnRlciBJQ08KICAgICAgICBpZiAoX2Zyb20gPT0gb3duZXIgJiYgbm93ID49IHN0YXJ0VGltZSAmJiAhYnVybmVkKSB7CiAgICAgICAgICAgIGJ1cm4oKTsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICBpZiAobm93IDwgc3RhcnRUaW1lKXsKICAgICAgICAgICAgaWYoX3ZhbHVlIDwgbWF4R29hbEluSUNPICkgewogICAgICAgICAgICAgICAgdG9rZW5zU29sZFRvSW52ZXN0b3JzID0gc2FmZUFkZCh0b2tlbnNTb2xkVG9JbnZlc3RvcnMsIF92YWx1ZSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBfdmFsdWUgPSBzYWZlU3ViKF92YWx1ZSwgbWF4R29hbEluSUNPKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICB2YXIgX2FsbG93YW5jZSA9IGFsbG93YW5jZVtfZnJvbV1bbXNnLnNlbmRlcl07CiAgICAgICAgLy8gU3VidHJhY3QgZnJvbSB0aGUgc2VuZGVyCiAgICAgICAgYmFsYW5jZU9mW19mcm9tXSA9IHNhZmVTdWIoYmFsYW5jZU9mW19mcm9tXSwgX3ZhbHVlKTsKICAgICAgICAvLyBBZGQgdGhlIHNhbWUgdG8gdGhlIHJlY2lwaWVudAogICAgICAgIGJhbGFuY2VPZltfdG9dID0gc2FmZUFkZChiYWxhbmNlT2ZbX3RvXSwgX3ZhbHVlKTsKICAgICAgICBhbGxvd2FuY2VbX2Zyb21dW21zZy5zZW5kZXJdID0gc2FmZVN1YihfYWxsb3dhbmNlLCBfdmFsdWUpOwogICAgICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7CgogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGJ1cm4oKXsKICAgICAgICAvLyBpZiB0b2tlbnMgaGF2ZSBub3QgYmVlbiBidXJuZWQgYWxyZWFkeSBhbmQgdGhlIElDTyBlbmRlZCBvciBUb2tlbnMgaGF2ZSBiZWVuIHNvbGQgb3V0IGJlZm9yZSBJQ08gZW5kLgogICAgICAgIGlmKCFidXJuZWQgJiYgKCBub3cgPiBzdGFydFRpbWUgfHwgdG9rZW5zU29sZFRvSW52ZXN0b3JzID49IG1heEdvYWxJbklDTykgKSB7CiAgICAgICAgICAgIC8vIGNoZWNrZWQgZm9yIG92ZXJmbG93IGFib3ZlCiAgICAgICAgICAgIHRvdGFsU3VwcGx5ID0gc2FmZVN1Yih0b3RhbFN1cHBseSwgYmFsYW5jZU9mW293bmVyXSkgKyA5MDAwMDAwMDA7CiAgICAgICAgICAgIHVpbnQgdG9rZW5zTGVmdCA9IGJhbGFuY2VPZltvd25lcl07CiAgICAgICAgICAgIGJhbGFuY2VPZltvd25lcl0gPSAwOwogICAgICAgICAgICBiYWxhbmNlT2ZbdG9rZW5zSG9sZGVyXSA9IDkwMDAwMDAwMDsKICAgICAgICAgICAgc3RhcnRUaW1lID0gbm93OwogICAgICAgICAgICBidXJuZWQgPSB0cnVlOwogICAgICAgICAgICBCdXJuZWQodG9rZW5zTGVmdCk7CiAgICAgICAgfQogICAgfQoKfQ=='.
	

]
