Class {
	#name : #SRT09287b5f9eb273023facd94ab5a61f5af749ecc8,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT09287b5f9eb273023facd94ab5a61f5af749ecc8 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTY7CgovKiAKICogR2lnYSBHaXZpbmcgQ29pbiBhbmQgSUNPIENvbnRyYWN0LgogKiAxNSwwMDAsMDAwIENvaW5zIFRvdGFsLgogKiAxMiwwMDAsMDAwIENvaW5zIGF2YWlsYWJsZSBmb3IgcHVyY2hhc2UuCiAqLwpjb250cmFjdCBUb2tlbiB7ICAgCiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSk7CiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKTsKICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7Cn0KCmNvbnRyYWN0IFN0YW5kYXJkVG9rZW4gaXMgVG9rZW4gewogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsKCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsgICAgICAgCiAgICAgICAgYWRkcmVzcyBzZW5kZXIgPSBtc2cuc2VuZGVyOwogICAgICAgIHJlcXVpcmUoYmFsYW5jZXNbc2VuZGVyXSA+PSBfdmFsdWUpOwogICAgICAgIGJhbGFuY2VzW3NlbmRlcl0gLT0gX3ZhbHVlOwogICAgICAgIGJhbGFuY2VzW190b10gKz0gX3ZhbHVlOwogICAgICAgIFRyYW5zZmVyKHNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsgICAgICAKICAgICAgICByZXF1aXJlKGJhbGFuY2VzW19mcm9tXSA+PSBfdmFsdWUgJiYgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gPj0gX3ZhbHVlKTsKICAgICAgICBiYWxhbmNlc1tfdG9dICs9IF92YWx1ZTsKICAgICAgICBiYWxhbmNlc1tfZnJvbV0gLT0gX3ZhbHVlOwogICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdIC09IF92YWx1ZTsKICAgICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgewogICAgICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogICAgfQoKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsKICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHJlbWFpbmluZykgewogICAgICByZXR1cm4gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsKICAgIH0gICAgCn0KCmxpYnJhcnkgU2FmZU1hdGggewogIGZ1bmN0aW9uIG11bCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSAqIGI7CiAgICBhc3NlcnQoYSA9PSAwIHx8IGMgLyBhID09IGIpOwogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBkaXYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHJldHVybnMgKHVpbnQyNTYpIHsgICAgCiAgICB1aW50MjU2IGMgPSBhIC8gYjsgICAgCiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgYXNzZXJ0KGMgPj0gYSk7CiAgICByZXR1cm4gYzsKICB9Cn0KCmNvbnRyYWN0IEdpZ2FHaXZpbmdUb2tlbiBpcyBTdGFuZGFyZFRva2VuIHsKICAgIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwogICAgICAgICAKICAgIHVpbnQyNTYgcHJpdmF0ZSBmdW5kaW5nR29hbDsKICAgIHVpbnQyNTYgcHJpdmF0ZSBhbW91bnRSYWlzZWQ7CgogICAgdWludDI1NiBwcml2YXRlIGNvbnN0YW50IFBIQVNFXzFfUFJJQ0UgPSAxNjAwMDAwMDAwMDAwMDAwOwogICAgdWludDI1NiBwcml2YXRlIGNvbnN0YW50IFBIQVNFXzJfUFJJQ0UgPSAyMDAwMDAwMDAwMDAwMDAwOyAKICAgIHVpbnQyNTYgcHJpdmF0ZSBjb25zdGFudCBQSEFTRV8zX1BSSUNFID0gMjUwMDAwMDAwMDAwMDAwMDsgCiAgICB1aW50MjU2IHByaXZhdGUgY29uc3RhbnQgUEhBU0VfNF9QUklDRSA9IDQwMDAwMDAwMDAwMDAwMDA7CiAgICB1aW50MjU2IHByaXZhdGUgY29uc3RhbnQgUEhBU0VfNV9QUklDRSA9IDUwMDAwMDAwMDAwMDAwMDA7IAogICAgdWludDI1NiBwcml2YXRlIGNvbnN0YW50IERVUkFUSU9OID0gNSB3ZWVrczsgIAoKICAgIHVpbnQyNTYgcHVibGljIGNvbnN0YW50IFRPVEFMX1RPS0VOUyA9IDE1MDAwMDAwOwogICAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgIENST1dEU0FMRV9UT0tFTlMgPSAxMjAwMDAwMDsgIAogICAgc3RyaW5nIHB1YmxpYyBjb25zdGFudCBWRVJTSU9OID0gIkdDLjYiOwoKICAgIHVpbnQyNTYgcHVibGljIHN0YXJ0VGltZTsKICAgIHVpbnQyNTYgcHVibGljIHRva2VuU3VwcGx5OwogCiAgICBhZGRyZXNzIHB1YmxpYyBjcmVhdG9yOwogICAgYWRkcmVzcyBwdWJsaWMgYmVuZWZpY2lhcnk7CgogICAgc3RyaW5nIHB1YmxpYyBuYW1lID0gIkdpZ2EgQ29pbiI7CiAgICBzdHJpbmcgcHVibGljIHN5bWJvbCA9ICJHQyI7CiAgICB1aW50MjU2IHB1YmxpYyBkZWNpbWFscyA9IDA7ICAKICAgIAogICAgLy8gR2lnYUdpdmluZ1Rva2VuIHB1YmxpYyB0b2tlblJld2FyZDsKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSBwdWJsaWMgZXRoQmFsYW5jZU9mOwogICAgYm9vbCBwdWJsaWMgZnVuZGluZ0dvYWxSZWFjaGVkID0gZmFsc2U7CiAgICBib29sIHB1YmxpYyBjcm93ZHNhbGVDbG9zZWQgPSBmYWxzZTsKCiAgICBldmVudCBHb2FsUmVhY2hlZChhZGRyZXNzIGdvYWxCZW5lZmljaWFyeSwgdWludDI1NiB0b3RhbEFtb3VudFJhaXNlZCk7CiAgICBldmVudCBGdW5kVHJhbnNmZXIoYWRkcmVzcyBiYWNrZXIsIHVpbnQyNTYgYW1vdW50LCBib29sIGlzQ29udHJpYnV0aW9uKTsKCiAgICBmdW5jdGlvbiBHaWdhR2l2aW5nVG9rZW4gKGFkZHJlc3MgaWNvQmVuZWZpY2lhcnkpIHB1YmxpYyB7CiAgICAgICAgY3JlYXRvciA9IG1zZy5zZW5kZXI7CiAgICAgICAgYmVuZWZpY2lhcnkgPSBpY29CZW5lZmljaWFyeTsKICAgICAgICB0b3RhbFN1cHBseSA9IFRPVEFMX1RPS0VOUzsgICAgICAgICAKICAgICAgICAKICAgICAgICBiYWxhbmNlc1tiZW5lZmljaWFyeV0gPSBUT1RBTF9UT0tFTlMuc3ViKENST1dEU0FMRV9UT0tFTlMpOwogICAgICAgIFRyYW5zZmVyKDB4MCwgaWNvQmVuZWZpY2lhcnksIFRPVEFMX1RPS0VOUy5zdWIoQ1JPV0RTQUxFX1RPS0VOUykpOwoKICAgICAgICBiYWxhbmNlc1t0aGlzXSA9IENST1dEU0FMRV9UT0tFTlM7CiAgICAgICAgVHJhbnNmZXIoMHgwLCB0aGlzLCBDUk9XRFNBTEVfVE9LRU5TKTsgICAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIGZ1bmRpbmdHb2FsID0gMTAwMCBldGhlcjsgICAgICAgICAKICAgICAgICBzdGFydFRpbWUgPSAxNTEwNzY1MjAwOyAgICAgICAgICAgICAgCiAgICAgICAgdG9rZW5TdXBwbHkgPSAxMjAwMDAwMDsKICAgIH0gICAKICAKICAgIGZ1bmN0aW9uIGFwcHJvdmVBbmRDYWxsKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlLCBieXRlcyBfZXh0cmFEYXRhKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CiAgICAgICAgcmVxdWlyZShfc3BlbmRlci5jYWxsKGJ5dGVzNChieXRlczMyKHNoYTMoInJlY2VpdmVBcHByb3ZhbChhZGRyZXNzLHVpbnQyNTYsYWRkcmVzcyxieXRlcykiKSkpLCBtc2cuc2VuZGVyLCBfdmFsdWUsIHRoaXMsIF9leHRyYURhdGEpKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0gCiAgCiAgICBmdW5jdGlvbiAoKSBwdWJsaWMgcGF5YWJsZSB7CiAgICAgICAgcmVxdWlyZShub3cgPj0gc3RhcnRUaW1lKTsKICAgICAgICByZXF1aXJlKG5vdyA8PSBzdGFydFRpbWUgKyBEVVJBVElPTik7CiAgICAgICAgcmVxdWlyZSghY3Jvd2RzYWxlQ2xvc2VkKTsKICAgICAgICByZXF1aXJlKG1zZy52YWx1ZSA+IDApOwogICAgICAgIHVpbnQyNTYgYW1vdW50ID0gbXNnLnZhbHVlOwogICAgICAgIHVpbnQyNTYgY29pblRvdGFsID0gMDsgICAgICAKICAgICAgICAKICAgICAgICBpZiAobm93ID4gc3RhcnRUaW1lICsgNCB3ZWVrcykgewogICAgICAgICAgICBjb2luVG90YWwgPSBhbW91bnQuZGl2KFBIQVNFXzVfUFJJQ0UpOwogICAgICAgIH0gZWxzZSBpZiAobm93ID4gc3RhcnRUaW1lICsgMyB3ZWVrcykgewogICAgICAgICAgICBjb2luVG90YWwgPSBhbW91bnQuZGl2KFBIQVNFXzRfUFJJQ0UpOwogICAgICAgIH0gZWxzZSBpZiAobm93ID4gc3RhcnRUaW1lICsgMiB3ZWVrcykgewogICAgICAgICAgICBjb2luVG90YWwgPSBhbW91bnQuZGl2KFBIQVNFXzNfUFJJQ0UpOwogICAgICAgIH0gZWxzZSBpZiAobm93ID4gc3RhcnRUaW1lICsgMSB3ZWVrcykgewogICAgICAgICAgICBjb2luVG90YWwgPSBhbW91bnQuZGl2KFBIQVNFXzJfUFJJQ0UpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGNvaW5Ub3RhbCA9IGFtb3VudC5kaXYoUEhBU0VfMV9QUklDRSk7CiAgICAgICAgfQogICAgICAgCiAgICAgICAgZXRoQmFsYW5jZU9mW21zZy5zZW5kZXJdID0gZXRoQmFsYW5jZU9mW21zZy5zZW5kZXJdLmFkZChhbW91bnQpOwogICAgICAgIGFtb3VudFJhaXNlZCA9IGFtb3VudFJhaXNlZC5hZGQoYW1vdW50KTsKICAgICAgICB0b2tlblN1cHBseSA9IHRva2VuU3VwcGx5LnN1Yihjb2luVG90YWwpOwogICAgICAgIHRyYW5zZmVyKG1zZy5zZW5kZXIsIGNvaW5Ub3RhbCk7CiAgICAgICAgRnVuZFRyYW5zZmVyKG1zZy5zZW5kZXIsIGFtb3VudCwgdHJ1ZSk7CiAgICB9ICAKCiAgICBtb2RpZmllciBhZnRlckRlYWRsaW5lKCkgeyAKICAgICAgICBpZiAobm93ID49IChzdGFydFRpbWUgKyBEVVJBVElPTikpIHsKICAgICAgICAgICAgXzsKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gY2hlY2tHb2FsUmVhY2hlZCgpIHB1YmxpYyBhZnRlckRlYWRsaW5lIHsKICAgICAgICBpZiAoYW1vdW50UmFpc2VkID49IGZ1bmRpbmdHb2FsKSB7CiAgICAgICAgICAgIGZ1bmRpbmdHb2FsUmVhY2hlZCA9IHRydWU7CiAgICAgICAgICAgIEdvYWxSZWFjaGVkKGJlbmVmaWNpYXJ5LCBhbW91bnRSYWlzZWQpOwogICAgICAgIH0KICAgICAgICBjcm93ZHNhbGVDbG9zZWQgPSB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIHNhZmVXaXRoZHJhd2FsKCkgcHVibGljIGFmdGVyRGVhZGxpbmUgewogICAgICAgIGlmICghZnVuZGluZ0dvYWxSZWFjaGVkKSB7CiAgICAgICAgICAgIHVpbnQgYW1vdW50ID0gZXRoQmFsYW5jZU9mW21zZy5zZW5kZXJdOwogICAgICAgICAgICBldGhCYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPSAwOwogICAgICAgICAgICBpZiAoYW1vdW50ID4gMCkgewogICAgICAgICAgICAgICAgaWYgKG1zZy5zZW5kZXIuc2VuZChhbW91bnQpKSB7CiAgICAgICAgICAgICAgICAgICAgRnVuZFRyYW5zZmVyKG1zZy5zZW5kZXIsIGFtb3VudCwgZmFsc2UpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBldGhCYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPSBhbW91bnQ7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmIChmdW5kaW5nR29hbFJlYWNoZWQgJiYgYmVuZWZpY2lhcnkgPT0gbXNnLnNlbmRlcikgewogICAgICAgICAgICBpZiAoYmVuZWZpY2lhcnkuc2VuZChhbW91bnRSYWlzZWQpKSB7CiAgICAgICAgICAgICAgICB0aGlzLnRyYW5zZmVyKG1zZy5zZW5kZXIsIHRva2VuU3VwcGx5KTsKICAgICAgICAgICAgICAgIEZ1bmRUcmFuc2ZlcihiZW5lZmljaWFyeSwgYW1vdW50UmFpc2VkLCBmYWxzZSk7ICAgICAgICAgICAgICAgIAogICAgICAgICAgICB9IGVsc2UgeyAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgZnVuZGluZ0dvYWxSZWFjaGVkID0gZmFsc2U7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Cn0='.
	

]
