Class {
	#name : #SRT6d2f190e6fd3bece517cb817254e8411249656a6,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT6d2f190e6fd3bece517cb817254e8411249656a6 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMjsKCmNvbnRyYWN0IEFkZHJlc3NPd25lcnNoaXBWZXJpZmljYXRpb24gewogICAgbWFwcGluZyhhZGRyZXNzID0+IG1hcHBpbmcgKHVpbnQzMiA9PiBhZGRyZXNzKSkgX3JlcXVlc3RzOyAgICAgICAgLy8gUGVuZGluZyByZXF1ZXN0cyAodHJhbnNhY3RlZSBhZGRyZXNzID0+IChkZXBvc2l0ID0+IHRyYW5zYWN0b3IgYWRkcmVzcykKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQzMikpIF9yZXF1ZXN0c1JldmVyc2U7IC8vIFVzZWQgZm9yIHJldmVyc2UgbG9va3VwcyAgKHRyYW5zYWN0ZWUgYWRkcmVzcyA9PiAodHJhbnNhY3RvciBhZGRyZXNzID0+IGRlcG9zaXQpCiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MzIpKSBfdmVyaWZpY2F0aW9uczsgICAvLyBWZXJpZmllZCByZXF1ZXN0cyAodHJhbnNhY3RvciBhZGRyZXNzID0+ICh0cmFuc2FjdGVlIGFkZHJlc3MgPT4gZGVwb3NpdCkKCiAgICBldmVudCBSZXF1ZXN0RXZlbnQoYWRkcmVzcyBpbmRleGVkIHRyYW5zYWN0b3IsIGFkZHJlc3MgaW5kZXhlZCB0cmFuc2FjdGVlLCB1aW50MzIgaW5kZXhlZCBkZXBvc2l0KTsgICAgICAvLyBFdmVudCBpcyB0cmlnZ2VyZWQgd2hlbiBhIG5ldyByZXF1ZXN0IGlzIGFkZGVkCiAgICBldmVudCBSZW1vdmVSZXF1ZXN0RXZlbnQoYWRkcmVzcyBpbmRleGVkIHRyYW5zYWN0b3IsIGFkZHJlc3MgaW5kZXhlZCB0cmFuc2FjdGVlKTsgICAgICAgICAgICAgICAgICAgICAgICAvLyBFdmVudCBpcyB0cmlnZ2VyZWQgd2hlbiBhbiB1bnZlcmlmaWVkIHJlcXVlc3QgaXMgcmVtb3ZlZAogICAgZXZlbnQgVmVyaWZpY2F0aW9uRXZlbnQoYWRkcmVzcyBpbmRleGVkIHRyYW5zYWN0b3IsIGFkZHJlc3MgaW5kZXhlZCB0cmFuc2FjdGVlLCB1aW50MzIgaW5kZXhlZCBkZXBvc2l0KTsgLy8gRXZlbnQgaXMgdHJpZ2dlcmVkIHdoZW4gc29tZW9uZSBwcm92ZXMgb3duZXJzaGlwIG9mIGFuIGFkZHJlc3MKICAgIGV2ZW50IFJldm9rZUV2ZW50KGFkZHJlc3MgaW5kZXhlZCB0cmFuc2FjdG9yLCBhZGRyZXNzIGluZGV4ZWQgdHJhbnNhY3RlZSwgdWludDMyIGluZGV4ZWQgZGVwb3NpdCk7ICAgICAgIC8vIEV2ZW50IGlzIHRyaWdnZXJlZCB3aGVuIGVpdGhlciBwYXJ0eSByZW1vdmVzIGEgdHJ1c3QKCiAgICBmdW5jdGlvbiBBZGRyZXNzT3duZXJzaGlwVmVyaWZpY2F0aW9uKCkge30KCiAgICAvLyBVc2VkIHRvIHZlcmlmeSBwZW5kaW5nIHJlcXVlc3RzIGJ5IHRyYW5zYWN0ZWUgc2VuZGluZyBkZXBvc2l0IHRvIHRoaXMgY29udHJhY3QKICAgIGZ1bmN0aW9uICgpIHBheWFibGUgewogICAgICAgIHVpbnQzMiB2YWx1ZSA9IHVpbnQzMihtc2cudmFsdWUpOwoKICAgICAgICBpZiAoIV9yZXF1ZXN0RXhpc3RzKG1zZy5zZW5kZXIsIHZhbHVlKSkgewogICAgICAgICAgICB0aHJvdzsKICAgICAgICB9CgogICAgICAgIC8vIEdldCBtYXRjaGluZyB0cmFuc2FjdG9yIGZvciByZXF1ZXN0CiAgICAgICAgYWRkcmVzcyB0cmFuc2FjdG9yID0gX3JlcXVlc3RzW21zZy5zZW5kZXJdW3ZhbHVlXTsKCiAgICAgICAgLy8gU2F2ZSBuZXcgVmVyaWZpY2F0aW9uCiAgICAgICAgX3NhdmVWZXJpZmljYXRpb24odHJhbnNhY3RvciwgbXNnLnNlbmRlciwgdmFsdWUpOwoKICAgICAgICAvLyBBbmQgdGhlbiBkZWxldGUgdGhlIHZlcmlmaWVkIHJlcXVlc3QKICAgICAgICBfZGVsZXRlUmVxdWVzdCh0cmFuc2FjdG9yLCBtc2cuc2VuZGVyKTsKCiAgICAgICAgVmVyaWZpY2F0aW9uRXZlbnQodHJhbnNhY3RvciwgbXNnLnNlbmRlciwgdmFsdWUpOwogICAgfQoKICAgIC8vIFJlcXVlc3QgYSBuZXcgdmVyaWZpY2F0aW9uIGFzIHRyYW5zYWN0b3IKICAgIGZ1bmN0aW9uIHJlcXVlc3QoYWRkcmVzcyB0cmFuc2FjdGVlLCB1aW50MzIgZGVwb3NpdCkgewogICAgICAgIC8vIFRocm93IGlmIHNlbmRlciB3YXN0ZXMgYmxvY2tjaGFpbiBzcGFjZQogICAgICAgIGlmICh0cmFuc2FjdGVlID09IG1zZy5zZW5kZXIpIHsKICAgICAgICAgICAgdGhyb3c7CiAgICAgICAgfQoKICAgICAgICAvLyBEZXBvc2l0IGNhbid0IGJlIDAgYmVjYXVzZSBhbGwgdWludCdzIGdldCBpbml0aWFsaXplZCB0byAwIGluIF9yZXF1ZXN0cwogICAgICAgIGlmIChkZXBvc2l0ID09IDApIHsKICAgICAgICAgICAgdGhyb3c7CiAgICAgICAgfQoKICAgICAgICAvLyBUaHJvdyBpZiB0cmFuc2FjdGVlIGFscmVhZHkgcHJvdmlkZWQgdmVyaWZpY2F0aW9uIHRvIHRyYW5zYWN0b3IKICAgICAgICBpZih2ZXJpZnkobXNnLnNlbmRlciwgdHJhbnNhY3RlZSkpIHsKICAgICAgICAgICAgdGhyb3c7CiAgICAgICAgfQoKICAgICAgICAvLyBUaHJvdyBpZiB0cmFuc2FjdGVlIGFscmVhZHkgaGFzIGEgcGVuZGluZyByZXF1ZXN0IGZvciB0aGlzIGV4YWN0IGRlcG9zaXQKICAgICAgICBpZiAoX3JlcXVlc3RFeGlzdHModHJhbnNhY3RlZSwgZGVwb3NpdCkpIHsKICAgICAgICAgICAgdGhyb3c7CiAgICAgICAgfQoKICAgICAgICBpZiAoX3JlcXVlc3RFeGlzdHNSZXZlcnNlKG1zZy5zZW5kZXIsIHRyYW5zYWN0ZWUpKSB7CiAgICAgICAgICAgIHRocm93OwogICAgICAgIH0KCiAgICAgICAgX3NhdmVSZXF1ZXN0KG1zZy5zZW5kZXIsIHRyYW5zYWN0ZWUsIGRlcG9zaXQpOwoKICAgICAgICBSZXF1ZXN0RXZlbnQobXNnLnNlbmRlciwgdHJhbnNhY3RlZSwgZGVwb3NpdCk7CiAgICB9CgogICAgLy8gUmV0dXJucyBhbW91bnQgb2Ygd2VpIHRyYW5zYWN0ZWUgaGFzIHRvIHNlbmQgdG8gZnVsbGZpbGwgdHJhbnNhY3RvcidzIHJlcXVlc3QKICAgIGZ1bmN0aW9uIGdldFJlcXVlc3QoYWRkcmVzcyB0cmFuc2FjdG9yLCBhZGRyZXNzIHRyYW5zYWN0ZWUpIHJldHVybnMgKHVpbnQzMiBkZXBvc2l0KSB7CiAgICAgICAgcmV0dXJuIF9yZXF1ZXN0c1JldmVyc2VbdHJhbnNhY3RlZV1bdHJhbnNhY3Rvcl07CiAgICB9CgogICAgLy8gUmVtb3ZlcyBhIHBlbmRpbmcgcmVxdWVzdCBhcyB0cmFuc2FjdG9yIG9yIHRyYW5zYWN0ZWUKICAgIGZ1bmN0aW9uIHJlbW92ZVJlcXVlc3QoYWRkcmVzcyB0cmFuc2FjdG9yLCBhZGRyZXNzIHRyYW5zYWN0ZWUpIHJldHVybnMgKHVpbnQzMikgewogICAgICAgIC8vIE9ubHkgdHJhbnNhY3RvciBhbmQgdHJhbnNhY3RlZSBjYW4gdHJpZ2dlciByZW1vdmFsIG9mIHRoZWlyIHJlcXVlc3QKICAgICAgICBpZiAobXNnLnNlbmRlciAhPSB0cmFuc2FjdG9yICYmIG1zZy5zZW5kZXIgIT0gdHJhbnNhY3RlZSkgewogICAgICAgICAgICB0aHJvdzsKICAgICAgICB9CgogICAgICAgIF9kZWxldGVSZXF1ZXN0KHRyYW5zYWN0b3IsIHRyYW5zYWN0ZWUpOwoKICAgICAgICBSZW1vdmVSZXF1ZXN0RXZlbnQodHJhbnNhY3RvciwgdHJhbnNhY3RlZSk7CiAgICB9CgogICAgLy8gIFJldHVybnMgdHJ1ZSBpZiB0cmFuc2FjdGVlIGhhcyBhbHJlYWR5IHByb3ZlbiB0aGVpciBhZGRyZXNzIG93bmVyc2hpcCB0byB0cmFuc2FjdG9yIGluIHRoZSBwYXN0CiAgICBmdW5jdGlvbiB2ZXJpZnkoYWRkcmVzcyB0cmFuc2FjdG9yLCBhZGRyZXNzIHRyYW5zYWN0ZWUpIHJldHVybnMgKGJvb2wpIHsKICAgICAgICByZXR1cm4gX3ZlcmlmaWNhdGlvbnNbdHJhbnNhY3Rvcl1bdHJhbnNhY3RlZV0gIT0gMDsKICAgIH0KCiAgICAvLyBSZW1vdmVzIGFuIGV4aXN0aW5nIHZlcmlmaWNhdGlvbiBhbmQgcmV0dXJucyB0aGUgZGVwb3NpdGVkIGFtb3VudCB0byB0cmFuc2FjdGVlCiAgICAvLyBDYW4gYmUgY2FsbGVkIGJ5IGVpdGhlciB0cmFuc2FjdG9yIG9yIHRyYW5zYWN0ZWUKICAgIGZ1bmN0aW9uIHJldm9rZShhZGRyZXNzIHRyYW5zYWN0b3IsIGFkZHJlc3MgdHJhbnNhY3RlZSkgewogICAgICAgIC8vIE9ubHkgdHJhbnNhY3RvciBhbmQgdHJhbnNhY3RlZSBjYW4gdHJpZ2dlciByZW1vdmFsIG9mIHRoZWlyIHZlcmlmaWNhdGlvbgogICAgICAgIGlmIChtc2cuc2VuZGVyICE9IHRyYW5zYWN0b3IgJiYgbXNnLnNlbmRlciAhPSB0cmFuc2FjdGVlKSB7CiAgICAgICAgICAgIHRocm93OwogICAgICAgIH0KCiAgICAgICAgLy8gVGhyb3cgaWYgdmVyaWZpY2F0aW9uIGRvZXMgbm90IGV4aXN0CiAgICAgICAgaWYoIXZlcmlmeSh0cmFuc2FjdG9yLCB0cmFuc2FjdGVlKSkgewogICAgICAgICAgICB0aHJvdzsKICAgICAgICB9CgogICAgICAgIHVpbnQzMiBkZXBvc2l0ID0gX3ZlcmlmaWNhdGlvbnNbdHJhbnNhY3Rvcl1bdHJhbnNhY3RlZV07CgogICAgICAgIC8vIERlbGV0ZSB2ZXJpZmljYXRpb24KICAgICAgICBkZWxldGUgX3ZlcmlmaWNhdGlvbnNbdHJhbnNhY3Rvcl1bdHJhbnNhY3RlZV07CgogICAgICAgIC8vIFNlbmQgZGVwb3NpdCB0byB0cmFuc2FjdGVlCiAgICAgICAgaWYgKCF0cmFuc2FjdGVlLmNhbGwudmFsdWUoZGVwb3NpdCkuZ2FzKDIzMDAwKSgpKSB7CiAgICAgICAgICAgIHRocm93OwogICAgICAgIH0KCiAgICAgICAgUmV2b2tlRXZlbnQodHJhbnNhY3RvciwgdHJhbnNhY3RlZSwgZGVwb3NpdCk7CiAgICB9CgogICAgLy8gSW50ZXJuYWw6IFNhdmUgYSBuZXcgcmVxdWVzdAogICAgZnVuY3Rpb24gX3NhdmVSZXF1ZXN0KGFkZHJlc3MgdHJhbnNhY3RvciwgYWRkcmVzcyB0cmFuc2FjdGVlLCB1aW50MzIgZGVwb3NpdCkgaW50ZXJuYWwgewogICAgICAgIF9yZXF1ZXN0c1t0cmFuc2FjdGVlXVtkZXBvc2l0XSA9IHRyYW5zYWN0b3I7CiAgICAgICAgX3JlcXVlc3RzUmV2ZXJzZVt0cmFuc2FjdGVlXVt0cmFuc2FjdG9yXSA9IGRlcG9zaXQ7CiAgICB9CgogICAgLy8gSW50ZXJuYWw6IFJlbW92ZSBhIGZ1bGxmaWxsZWQgcmVxdWVzdAogICAgZnVuY3Rpb24gX2RlbGV0ZVJlcXVlc3QoYWRkcmVzcyB0cmFuc2FjdG9yLCBhZGRyZXNzIHRyYW5zYWN0ZWUpIGludGVybmFsIHsKICAgICAgICB1aW50MzIgZGVwb3NpdCA9IF9yZXF1ZXN0c1JldmVyc2VbdHJhbnNhY3RlZV1bdHJhbnNhY3Rvcl07CgogICAgICAgIGRlbGV0ZSBfcmVxdWVzdHNbdHJhbnNhY3RlZV1bZGVwb3NpdF07CiAgICAgICAgZGVsZXRlIF9yZXF1ZXN0c1JldmVyc2VbdHJhbnNhY3RlZV1bdHJhbnNhY3Rvcl07CiAgICB9CgogICAgLy8gSW50ZXJuYWw6IFRlc3QgaWYgYSByZXF1ZXN0IGV4aXN0cyB3aGVuIHlvdSBrbm93IHRyYW5zYWN0ZWUgYW5kIGRlcG9zaXQKICAgIGZ1bmN0aW9uIF9yZXF1ZXN0RXhpc3RzKGFkZHJlc3MgdHJhbnNhY3RlZSwgdWludDMyIGRlcG9zaXQpIGludGVybmFsIHJldHVybnMoYm9vbCkgewogICAgICAgIHJldHVybiBfcmVxdWVzdHNbdHJhbnNhY3RlZV1bZGVwb3NpdF0gIT0gMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwOwogICAgfQoKICAgIC8vIEludGVybmFsOiBUZXN0IGlmIGEgcmVxdWVzdCBleGlzdHMgd2hlbiB5b3Uga25vdyB0cmFuc2FjdGVlIGFuZCB0cmFuc2FjdG9yCiAgICBmdW5jdGlvbiBfcmVxdWVzdEV4aXN0c1JldmVyc2UoYWRkcmVzcyB0cmFuc2FjdG9yLCBhZGRyZXNzIHRyYW5zYWN0ZWUpIGludGVybmFsIHJldHVybnMoYm9vbCkgewogICAgICAgIHJldHVybiBfcmVxdWVzdHNSZXZlcnNlW3RyYW5zYWN0ZWVdW3RyYW5zYWN0b3JdICE9IDA7CiAgICB9CgogICAgLy8gSW50ZXJuYWw6IFNhdmUgYSBuZXcgdmVyaWZpY2F0aW9uCiAgICBmdW5jdGlvbiBfc2F2ZVZlcmlmaWNhdGlvbihhZGRyZXNzIHRyYW5zYWN0b3IsIGFkZHJlc3MgdHJhbnNhY3RlZSwgdWludDMyIGRlcG9zaXQpIGludGVybmFsIHsKICAgICAgICBfdmVyaWZpY2F0aW9uc1t0cmFuc2FjdG9yXVt0cmFuc2FjdGVlXSA9IGRlcG9zaXQ7CiAgICB9Cn0='.
	

]
