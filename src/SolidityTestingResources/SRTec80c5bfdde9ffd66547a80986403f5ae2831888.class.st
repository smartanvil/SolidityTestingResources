Class {
	#name : #SRTec80c5bfdde9ffd66547a80986403f5ae2831888,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTec80c5bfdde9ffd66547a80986403f5ae2831888 >> base64 [
	^ ''.
	

]
