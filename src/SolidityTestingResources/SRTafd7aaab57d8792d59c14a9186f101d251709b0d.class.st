Class {
	#name : #SRTafd7aaab57d8792d59c14a9186f101d251709b0d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTafd7aaab57d8792d59c14a9186f101d251709b0d >> base64 [
	^ ''.
	

]
