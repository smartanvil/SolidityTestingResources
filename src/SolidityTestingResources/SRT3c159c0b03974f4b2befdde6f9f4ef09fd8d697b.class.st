Class {
	#name : #SRT3c159c0b03974f4b2befdde6f9f4ef09fd8d697b,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT3c159c0b03974f4b2befdde6f9f4ef09fd8d697b >> base64 [
	^ ''.
	

]
