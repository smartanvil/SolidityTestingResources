Class {
	#name : #SRTe7617c36fb3837d673b704ab5acadf839394a9c3,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTe7617c36fb3837d673b704ab5acadf839394a9c3 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7Cgpjb250cmFjdCBFUkMyMF9UcmFuc2ZlcmFibGUgewogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgYWRkcikgcHVibGljIHJldHVybnModWludCk7CiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIHRvLCB1aW50IHZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7Cn0KCmNvbnRyYWN0IFRpbWVMb2NrZWRSZXdhcmRGYXVjZXQgewoKICAgIC8vID09PT09PT09PT09IENPTkZJRyBTVEFSVCA9PT09PT09PT09PSAKICAgIGFkZHJlc3MgY29uc3RhbnQgcHVibGljIE1VTFRJU0lHX09XTkVSID0gMHhlMThBZjBkREE3NGZDNEVlOTBiQ0IzN0U0NWI0QkQ2MjNkQzZlMDk5OwogICAgYWRkcmVzcyBjb25zdGFudCBwdWJsaWMgVEVBTV9XQUxMRVQgPSAweDAwOGNkQzliODlBRDY3N0NFZjdGMkMwNTVlZkM5N2QzNjA2YTUwQmQ7CgogICAgRVJDMjBfVHJhbnNmZXJhYmxlIHB1YmxpYyB0b2tlbiA9IEVSQzIwX1RyYW5zZmVyYWJsZSgweDdDNUEwQ0U5MjY3RUQxOUIyMkY4Y2FlNjUzRjE5OGUzRThkYWYwOTgpOwogICAgdWludCAgcHVibGljIExPQ0tfUkVMQVNFX1RJTUUgPSBub3cgKyAxNSBtaW51dGVzOyAvL2Jsb2NrLnRpbWVzdGFtcCg0MDExMjIxKSA9PSAxNDk5ODQ2NTkxCiAgICB1aW50ICBwdWJsaWMgV0lUSERSQVdBTF9FTkRfVElNRSA9IExPQ0tfUkVMQVNFX1RJTUUgKyAxMCBtaW51dGVzOwogICAgLy8gPT09PT09PT09PT0gQ09ORklHIEVORCA9PT09PT09PT09PQoKICAgIGFkZHJlc3NbXSBwdWJsaWMgdGVhbV9hY2NvdW50czsKICAgIHVpbnQgICAgICBwdWJsaWMgbG9ja2VkX3NpbmNlID0gMDsKICAgIHVpbnQgICAgICBhbW91bnRfdG9fZGlzdHJpYnV0ZTsKCiAgICBmdW5jdGlvbiBhbGxfdGVhbV9hY2NvdW50cygpIGV4dGVybmFsIGNvbnN0YW50IHJldHVybnMoYWRkcmVzc1tdKSB7CiAgICAgICAgcmV0dXJuIHRlYW1fYWNjb3VudHM7CiAgICB9CgogICAgZnVuY3Rpb24gdGltZVRvVW5sb2NrRERISE1NKCkgZXh0ZXJuYWwgY29uc3RhbnQgcmV0dXJucyh1aW50WzNdKSB7CiAgICAgICAgaWYgKExPQ0tfUkVMQVNFX1RJTUUgPiBub3cpIHsKICAgICAgICAgICAgdWludCBkaWZmID0gTE9DS19SRUxBU0VfVElNRSAtIG5vdzsKICAgICAgICAgICAgdWludCBkZCA9IGRpZmYgLyAxIGRheXM7CiAgICAgICAgICAgIHVpbnQgaGggPSBkaWZmICUgMSBkYXlzIC8gMSBob3VyczsKICAgICAgICAgICAgdWludCBtbSA9IGRpZmYgJSAxIGhvdXJzIC8gMSBtaW51dGVzOwogICAgICAgICAgICByZXR1cm4gW2RkLGhoLG1tXTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXR1cm4gW3VpbnQoMCksIHVpbnQoMCksIHVpbnQoMCldOwogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBzdGFydCgpIGV4dGVybmFsCiAgICBvbmx5KE1VTFRJU0lHX09XTkVSKQogICAgaW5TdGF0ZShTdGF0ZS5JTklUKXsKICAgICAgICBsb2NrZWRfc2luY2UgPSBub3c7CiAgICB9CgogICAgZnVuY3Rpb24gKCkgcGF5YWJsZSB7CiAgICAgICAgbXNnLnNlbmRlci50cmFuc2Zlcihtc2cudmFsdWUpOyAvL3BheSBiYWNrIHdob2xlIGFtb3VudCBzZW50CgogICAgICAgIFN0YXRlIHN0YXRlID0gX3N0YXRlKCk7CiAgICAgICAgaWYgKHN0YXRlPT1TdGF0ZS5JTklUKSB7CiAgICAgICAgICAgIC8vY29sbGVjdCBhZGRyZXNzZXMgZm9yIHBheW91dAogICAgICAgICAgICByZXF1aXJlKGluZGV4T2YodGVhbV9hY2NvdW50cyxtc2cuc2VuZGVyKT09LTEpOwogICAgICAgICAgICB0ZWFtX2FjY291bnRzLnB1c2gobXNnLnNlbmRlcik7CiAgICAgICAgfSBlbHNlIGlmIChzdGF0ZT09U3RhdGUuV0lUSERSQVdBTCkgewogICAgICAgICAgICAvLyBzZXR1cCBhbW91bnQgdG8gZGlzdHJpYnV0ZQogICAgICAgICAgICBpZiAoYW1vdW50X3RvX2Rpc3RyaWJ1dGU9PTApIGFtb3VudF90b19kaXN0cmlidXRlID0gdG9rZW4uYmFsYW5jZU9mKHRoaXMpOwogICAgICAgICAgICAvL3BheW91dCBwcm9jZXNzaW5nCiAgICAgICAgICAgIHJlcXVpcmUoaW5kZXhPZih0ZWFtX2FjY291bnRzLCBtc2cuc2VuZGVyKT49MCk7CiAgICAgICAgICAgIHRva2VuLnRyYW5zZmVyKG1zZy5zZW5kZXIsICBhbW91bnRfdG9fZGlzdHJpYnV0ZSAvIHRlYW1fYWNjb3VudHMubGVuZ3RoKTsKICAgICAgICB9IGVsc2UgaWYgKHN0YXRlPT1TdGF0ZS5DTE9TRUQpIHsKICAgICAgICAgICAgLy9jb2xsZWN0IHVuY2xhaW1lZCB0b2tlbiB0byB0ZWFtIHdhbGxldAogICAgICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gVEVBTV9XQUxMRVQpOwogICAgICAgICAgICB2YXIgYmFsYW5jZSA9IHRva2VuLmJhbGFuY2VPZih0aGlzKTsKICAgICAgICAgICAgdG9rZW4udHJhbnNmZXIobXNnLnNlbmRlciwgYmFsYW5jZSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV2ZXJ0KCk7CiAgICAgICAgfQogICAgfQoKCiAgICBlbnVtIFN0YXRlIHtJTklULCBMT0NLRUQsIFdJVEhEUkFXQUwsIENMT1NFRH0KICAgIHN0cmluZ1s0XSBsYWJlbHMgPSBbIklOSVQiLCAiTE9DS0VEIiwgIldJVEhEUkFXQUwiLCAiQ0xPU0VEIl07CgogICAgZnVuY3Rpb24gX3N0YXRlKCkgaW50ZXJuYWwgcmV0dXJucyhTdGF0ZSkgewogICAgICAgIGlmIChsb2NrZWRfc2luY2UgPT0gMCkgICAgICAgICAgICAgICByZXR1cm4gU3RhdGUuSU5JVDsKICAgICAgICBlbHNlIGlmIChub3cgPCBMT0NLX1JFTEFTRV9USU1FKSAgICAgcmV0dXJuIFN0YXRlLkxPQ0tFRDsKICAgICAgICBlbHNlIGlmIChub3cgPCBXSVRIRFJBV0FMX0VORF9USU1FKSAgcmV0dXJuIFN0YXRlLldJVEhEUkFXQUw7CiAgICAgICAgZWxzZSByZXR1cm4gU3RhdGUuQ0xPU0VEOwogICAgfQoKICAgIGZ1bmN0aW9uIHN0YXRlKCkgY29uc3RhbnQgcHVibGljIHJldHVybnMoc3RyaW5nKSB7CiAgICAgICAgcmV0dXJuIGxhYmVsc1t1aW50KF9zdGF0ZSgpKV07CiAgICB9CgogICAgZnVuY3Rpb24gaW5kZXhPZihhZGRyZXNzW10gc3RvcmFnZSBhZGRycywgYWRkcmVzcyBhZGRyKSBpbnRlcm5hbCByZXR1cm5zIChpbnQpewogICAgICAgICBmb3IodWludCBpPTA7IGk8YWRkcnMubGVuZ3RoOyArK2kpIHsKICAgICAgICAgICAgaWYgKGFkZHIgPT0gYWRkcnNbaV0pIHJldHVybiBpbnQoaSk7CiAgICAgICAgfQogICAgICAgIHJldHVybiAtMTsKICAgIH0KCiAgICAvL2ZhaWxzIGlmIHN0YXRlIGRvc24ndCBtYXRjaAogICAgbW9kaWZpZXIgaW5TdGF0ZShTdGF0ZSBzKSB7CiAgICAgICAgaWYgKF9zdGF0ZSgpICE9IHMpIHJldmVydCgpOwogICAgICAgIF87CiAgICB9CgogICAgbW9kaWZpZXIgb25seShhZGRyZXNzIGFsbG93ZWQpIHsKICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBhbGxvd2VkKSByZXZlcnQoKTsKICAgICAgICBfOwogICAgfQoKfQ=='.
	

]
