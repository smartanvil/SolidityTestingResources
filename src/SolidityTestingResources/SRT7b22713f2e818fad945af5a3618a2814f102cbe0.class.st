Class {
	#name : #SRT7b22713f2e818fad945af5a3618a2814f102cbe0,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT7b22713f2e818fad945af5a3618a2814f102cbe0 >> base64 [
	^ ''.
	

]
