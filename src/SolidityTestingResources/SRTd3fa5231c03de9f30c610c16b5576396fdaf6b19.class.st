Class {
	#name : #SRTd3fa5231c03de9f30c610c16b5576396fdaf6b19,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTd3fa5231c03de9f30c610c16b5576396fdaf6b19 >> base64 [
	^ ''.
	

]
