Class {
	#name : #SRTbff422e9af8e453314639d4665745a9a39aa0592,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTbff422e9af8e453314639d4665745a9a39aa0592 >> base64 [
	^ ''.
	

]
