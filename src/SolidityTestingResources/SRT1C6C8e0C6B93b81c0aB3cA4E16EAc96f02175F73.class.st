Class {
	#name : #SRT1C6C8e0C6B93b81c0aB3cA4E16EAc96f02175F73,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT1C6C8e0C6B93b81c0aB3cA4E16EAc96f02175F73 >> base64 [
	^ ''.
	

]
