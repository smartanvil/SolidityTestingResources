Class {
	#name : #SRT011585ba96aa16b803e239defd807465073b883c,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT011585ba96aa16b803e239defd807465073b883c >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuNzsKCi8vLyBAdGl0bGUgRWFybHlQdXJjaGFzZSBjb250cmFjdCAtIEtlZXAgdHJhY2sgb2YgcHVyY2hhc2VkIGFtb3VudCBieSBFYXJseSBQdXJjaGFzZXJzCi8vLyBQcm9qZWN0IGJ5IFN5bmNocm9MaWZlIFRlYW0gKGh0dHBzOi8vc3luY2hyb2xpZmUub3JnKQovLy8gVGhpcyBzbWFydCBjb250cmFjdCBkZXZlbG9wZWQgYnkgU3RhcmJhc2UgLSBUb2tlbiBmdW5kaW5nICYgcGF5bWVudCBQbGF0Zm9ybSBmb3IgaW5ub3ZhdGl2ZSBwcm9qZWN0cyA8c3VwcG9ydFthdF1zdGFyYmFzZS5jbz4KCmNvbnRyYWN0IFNZQ0Vhcmx5UHVyY2hhc2UgewogICAgLyoKICAgICAqICBQcm9wZXJ0aWVzCiAgICAgKi8KICAgIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgUFVSQ0hBU0VfQU1PVU5UX1VOSVQgPSAnRVRIJzsgICAgLy8gRXRoZXIKICAgIHVpbnQgcHVibGljIGNvbnN0YW50IFdFSV9NSU5JTVVNX1BVUkNIQVNFID0gNDAgKiAxMCAqKiAxODsKICAgIHVpbnQgcHVibGljIGNvbnN0YW50IFdFSV9NQVhJTVVNX0VBUkxZUFVSQ0hBU0UgPSA3MDAwICogMTAgKiogMTg7CiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKICAgIEVhcmx5UHVyY2hhc2VbXSBwdWJsaWMgZWFybHlQdXJjaGFzZXM7CiAgICB1aW50IHB1YmxpYyBlYXJseVB1cmNoYXNlQ2xvc2VkQXQ7CiAgICB1aW50IHB1YmxpYyB0b3RhbEVhcmx5UHVyY2hhc2VSYWlzZWQ7CiAgICBhZGRyZXNzIHB1YmxpYyBzeWNDcm93ZHNhbGU7CgoKICAgIC8qCiAgICAgKiAgVHlwZXMKICAgICAqLwogICAgc3RydWN0IEVhcmx5UHVyY2hhc2UgewogICAgICAgIGFkZHJlc3MgcHVyY2hhc2VyOwogICAgICAgIHVpbnQgYW1vdW50OyAgICAgICAgLy8gQW1vdW50IGluIFdlaSggPSAxLyAxMF4xOCBFdGhlcikKICAgICAgICB1aW50IHB1cmNoYXNlZEF0OyAgIC8vIHRpbWVzdGFtcAogICAgfQoKICAgIC8qCiAgICAgKiAgTW9kaWZpZXJzCiAgICAgKi8KICAgIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lcikgewogICAgICAgICAgICB0aHJvdzsKICAgICAgICB9CiAgICAgICAgXzsKICAgIH0KCiAgICBtb2RpZmllciBvbmx5RWFybHlQdXJjaGFzZVRlcm0oKSB7CiAgICAgICAgaWYgKGVhcmx5UHVyY2hhc2VDbG9zZWRBdCA+IDApIHsKICAgICAgICAgICAgdGhyb3c7CiAgICAgICAgfQogICAgICAgIF87CiAgICB9CgogICAgLy8vIEBkZXYgQ29udHJhY3QgY29uc3RydWN0b3IgZnVuY3Rpb24KICAgIGZ1bmN0aW9uIFNZQ0Vhcmx5UHVyY2hhc2UoKSB7CiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgfQoKICAgIC8qCiAgICAgKiAgQ29udHJhY3QgZnVuY3Rpb25zCiAgICAgKi8KICAgIC8vLyBAZGV2IFJldHVybnMgZWFybHkgcHVyY2hhc2VkIGFtb3VudCBieSBwdXJjaGFzZXIncyBhZGRyZXNzCiAgICAvLy8gQHBhcmFtIHB1cmNoYXNlciBQdXJjaGFzZXIgYWRkcmVzcwogICAgZnVuY3Rpb24gcHVyY2hhc2VkQW1vdW50QnkoYWRkcmVzcyBwdXJjaGFzZXIpCiAgICAgICAgZXh0ZXJuYWwKICAgICAgICBjb25zdGFudAogICAgICAgIHJldHVybnMgKHVpbnQgYW1vdW50KQogICAgewogICAgICAgIGZvciAodWludCBpOyBpIDwgZWFybHlQdXJjaGFzZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgaWYgKGVhcmx5UHVyY2hhc2VzW2ldLnB1cmNoYXNlciA9PSBwdXJjaGFzZXIpIHsKICAgICAgICAgICAgICAgIGFtb3VudCArPSBlYXJseVB1cmNoYXNlc1tpXS5hbW91bnQ7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CgogICAgLy8vIEBkZXYgU2V0dXAgZnVuY3Rpb24gc2V0cyBleHRlcm5hbCBjb250cmFjdHMnIGFkZHJlc3Nlcy4KICAgIC8vLyBAcGFyYW0gX3N5Y0Nyb3dkc2FsZSBTWUMgdG9rZW4gY3Jvd2RzYWxlIGFkZHJlc3MuCiAgICBmdW5jdGlvbiBzZXR1cChhZGRyZXNzIF9zeWNDcm93ZHNhbGUpCiAgICAgICAgZXh0ZXJuYWwKICAgICAgICBvbmx5T3duZXIKICAgICAgICByZXR1cm5zIChib29sKQogICAgewogICAgICAgIGlmIChhZGRyZXNzKF9zeWNDcm93ZHNhbGUpID09IDApIHsKICAgICAgICAgICAgc3ljQ3Jvd2RzYWxlID0gX3N5Y0Nyb3dkc2FsZTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfQogICAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KCiAgICAvLy8gQGRldiBSZXR1cm5zIG51bWJlciBvZiBlYXJseSBwdXJjaGFzZXMKICAgIGZ1bmN0aW9uIG51bWJlck9mRWFybHlQdXJjaGFzZXMoKQogICAgICAgIGV4dGVybmFsCiAgICAgICAgY29uc3RhbnQKICAgICAgICByZXR1cm5zICh1aW50KQogICAgewogICAgICAgIHJldHVybiBlYXJseVB1cmNoYXNlcy5sZW5ndGg7CiAgICB9CgogICAgLy8vIEBkZXYgQXBwZW5kIGFuIGVhcmx5IHB1cmNoYXNlIGxvZwogICAgLy8vIEBwYXJhbSBwdXJjaGFzZXIgUHVyY2hhc2VyIGFkZHJlc3MKICAgIC8vLyBAcGFyYW0gYW1vdW50IFB1cmNoYXNlIGFtb3VudAogICAgLy8vIEBwYXJhbSBwdXJjaGFzZWRBdCBUaW1lc3RhbXAgb2YgcHVyY2hhc2VkIGRhdGUKICAgIGZ1bmN0aW9uIGFwcGVuZEVhcmx5UHVyY2hhc2UoYWRkcmVzcyBwdXJjaGFzZXIsIHVpbnQgYW1vdW50LCB1aW50IHB1cmNoYXNlZEF0KQogICAgICAgIGludGVybmFsCiAgICAgICAgb25seUVhcmx5UHVyY2hhc2VUZXJtCiAgICAgICAgcmV0dXJucyAoYm9vbCkKICAgIHsKICAgICAgICBpZiAocHVyY2hhc2VkQXQgPT0gMCB8fCBwdXJjaGFzZWRBdCA+IG5vdykgewogICAgICAgICAgICB0aHJvdzsKICAgICAgICB9CgogICAgICAgIGlmKHRvdGFsRWFybHlQdXJjaGFzZVJhaXNlZCArIGFtb3VudCA+PSBXRUlfTUFYSU1VTV9FQVJMWVBVUkNIQVNFKXsKICAgICAgICAgICBwdXJjaGFzZXIuc2VuZCh0b3RhbEVhcmx5UHVyY2hhc2VSYWlzZWQgKyBhbW91bnQgLSBXRUlfTUFYSU1VTV9FQVJMWVBVUkNIQVNFKTsKICAgICAgICAgICBlYXJseVB1cmNoYXNlcy5wdXNoKEVhcmx5UHVyY2hhc2UocHVyY2hhc2VyLCBXRUlfTUFYSU1VTV9FQVJMWVBVUkNIQVNFIC0gdG90YWxFYXJseVB1cmNoYXNlUmFpc2VkLCBwdXJjaGFzZWRBdCkpOwogICAgICAgICAgIHRvdGFsRWFybHlQdXJjaGFzZVJhaXNlZCArPSBXRUlfTUFYSU1VTV9FQVJMWVBVUkNIQVNFIC0gdG90YWxFYXJseVB1cmNoYXNlUmFpc2VkOwogICAgICAgIH0KICAgICAgICBlbHNlewogICAgICAgICAgIGVhcmx5UHVyY2hhc2VzLnB1c2goRWFybHlQdXJjaGFzZShwdXJjaGFzZXIsIGFtb3VudCwgcHVyY2hhc2VkQXQpKTsKICAgICAgICAgICB0b3RhbEVhcmx5UHVyY2hhc2VSYWlzZWQgKz0gYW1vdW50OwogICAgICAgIH0KCiAgICAgICAgaWYodG90YWxFYXJseVB1cmNoYXNlUmFpc2VkID49IFdFSV9NQVhJTVVNX0VBUkxZUFVSQ0hBU0UpewogICAgICAgICAgICBlYXJseVB1cmNoYXNlQ2xvc2VkQXQgPSBub3c7CiAgICAgICAgfQogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIC8vLyBAZGV2IENsb3NlIGVhcmx5IHB1cmNoYXNlIHRlcm0KICAgIGZ1bmN0aW9uIGNsb3NlRWFybHlQdXJjaGFzZSgpCiAgICAgICAgb25seU93bmVyCiAgICAgICAgcmV0dXJucyAoYm9vbCkKICAgIHsKICAgICAgICBlYXJseVB1cmNoYXNlQ2xvc2VkQXQgPSBub3c7CiAgICB9CgogICAgZnVuY3Rpb24gd2l0aGRyYXcodWludCB3aXRoZHJhd2FsQW1vdW50KSBvbmx5T3duZXIgewogICAgICAgICAgaWYoIW93bmVyLnNlbmQod2l0aGRyYXdhbEFtb3VudCkpIHRocm93OyAgLy8gc2VuZCBjb2xsZWN0ZWQgRVRIIHRvIFN5bmNocm9MaWZlIHRlYW0KICAgIH0KCiAgICBmdW5jdGlvbiB3aXRoZHJhd0FsbCgpIG9ubHlPd25lciB7CiAgICAgICAgICBpZighb3duZXIuc2VuZCh0aGlzLmJhbGFuY2UpKSB0aHJvdzsgIC8vIHNlbmQgYWxsIGNvbGxlY3RlZCBFVEggdG8gU3luY2hyb0xpZmUgdGVhbQogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpIG9ubHlPd25lciB7CiAgICAgICAgb3duZXIgPSBuZXdPd25lcjsKICAgIH0KCiAgICAvLy8gQGRldiBCeSBzZW5kaW5nIEV0aGVyIHRvIHRoZSBjb250cmFjdCwgZWFybHkgcHVyY2hhc2Ugd2lsbCBiZSByZWNvcmRlZC4KICAgIGZ1bmN0aW9uICgpIHBheWFibGV7CiAgICAgICAgcmVxdWlyZShtc2cudmFsdWUgPj0gV0VJX01JTklNVU1fUFVSQ0hBU0UpOwogICAgICAgIGFwcGVuZEVhcmx5UHVyY2hhc2UobXNnLnNlbmRlciwgbXNnLnZhbHVlLCBibG9jay50aW1lc3RhbXApOwogICAgfQp9'.
	

]
