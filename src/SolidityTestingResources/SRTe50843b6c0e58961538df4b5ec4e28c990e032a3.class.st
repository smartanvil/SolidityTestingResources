Class {
	#name : #SRTe50843b6c0e58961538df4b5ec4e28c990e032a3,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTe50843b6c0e58961538df4b5ec4e28c990e032a3 >> base64 [
	^ ''.
	

]
