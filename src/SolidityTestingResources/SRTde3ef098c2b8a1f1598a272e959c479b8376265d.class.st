Class {
	#name : #SRTde3ef098c2b8a1f1598a272e959c479b8376265d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTde3ef098c2b8a1f1598a272e959c479b8376265d >> base64 [
	^ ''.
	

]
