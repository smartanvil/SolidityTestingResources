Class {
	#name : #SRT42718620862272dc629979a2db3e7efe69876eb0,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT42718620862272dc629979a2db3e7efe69876eb0 >> base64 [
	^ ''.
	

]
