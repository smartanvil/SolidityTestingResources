Class {
	#name : #SRT5db2d4a2e6d06f9afe906fc33036f77ebe87b59b,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT5db2d4a2e6d06f9afe906fc33036f77ebe87b59b >> base64 [
	^ ''.
	

]
