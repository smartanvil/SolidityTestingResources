Class {
	#name : #SRTCCcA48874780f9c42b162c9617bC6324c5142C22,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTCCcA48874780f9c42b162c9617bC6324c5142C22 >> base64 [
	^ ''.
	

]
