Class {
	#name : #SRT5eb5226d2b4b32af62c732982ad681789e083315,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT5eb5226d2b4b32af62c732982ad681789e083315 >> base64 [
	^ ''.
	

]
