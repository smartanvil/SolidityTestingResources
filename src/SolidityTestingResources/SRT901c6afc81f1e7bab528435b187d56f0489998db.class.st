Class {
	#name : #SRT901c6afc81f1e7bab528435b187d56f0489998db,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT901c6afc81f1e7bab528435b187d56f0489998db >> base64 [
	^ ''.
	

]
