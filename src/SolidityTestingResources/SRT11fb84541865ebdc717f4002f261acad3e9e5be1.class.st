Class {
	#name : #SRT11fb84541865ebdc717f4002f261acad3e9e5be1,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT11fb84541865ebdc717f4002f261acad3e9e5be1 >> base64 [
	^ ''.
	

]
