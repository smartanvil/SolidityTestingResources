Class {
	#name : #SRT7A8Ef7E8c8f16B9D6F39069ce03d752Af23b46d6,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT7A8Ef7E8c8f16B9D6F39069ce03d752Af23b46d6 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgovKgpjcmVhdGVkIGJ5IElnb3IgU3R1bGVua292IAoqLwoKY29udHJhY3QgT0JTX1YxewogCglhZGRyZXNzIHB1YmxpYyBvd25lcjsgLy9GYWJyaWMgb3duZXIKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiBhZGRyZXNzKSAgICBwdWJsaWMgdG9rZW5zMm93bmVyczsgICAgICAgIC8vIHRva2VucyB0byBvd25lcnMgICAgCiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gYWRkcmVzcyBbXSkgcHVibGljIG93bmVyczJ0b2tlbnM7ICAgICAgICAvLyBvd25lcnMgdG8gdG9rZW5zCiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gYWRkcmVzcykgICAgcHVibGljIHRtcEFkZHIyY29udHJhY3RBZGRyOyAvLyB0bXAgYWRkciBjb250cmFjdCB0byBjb250cmFjdAogICAgCiAgICAvL0V2ZW50CiAgICBldmVudCBldm50Q3JlYXRlQ29udHJhY3QoYWRkcmVzcyBfYWRkclRtcCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRyZXNzIF9hZGRyVG9rZW4sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkcmVzcyBfb3duZXIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkcmVzcyBfYWRkckJyb2tlciwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1aW50MjU2IF9zdXBwbHksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RyaW5nICAgX25hbWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7IAogICAgLy9Db25zdHJ1Y3RvcgoJZnVuY3Rpb24gT0JTX1YxKCkgcHVibGljewoJCW93bmVyID0gbXNnLnNlbmRlcjsKCX0KICAgIAogICAgLy9DcmVhdGUgY29udHJhY3QKICAgIGZ1bmN0aW9uIGNyZWF0ZUNvbnRyYWN0IChhZGRyZXNzIF9vd25lciwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZHJlc3MgX2FkZHJUbXAsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdWludDI1NiBfc3VwcGx5LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RyaW5nICAgX25hbWUpIHB1YmxpY3sKICAgICAgICAvL09ubHkgZmFicmljIG93bmVyIG1heSBjcmVhdGUgVG9rZW4KICAgICAgICBpZiAob3duZXIgIT0gbXNnLnNlbmRlcikgcmV2ZXJ0KCk7CgogICAgICAgIC8vQ3JlYXRlIGNvbnRyYWN0CiAgICAgICAgYWRkcmVzcyBhZGRyVG9rZW4gPSBuZXcgTXlPYnMoIF9vd25lciwgX3N1cHBseSwgX25hbWUsICIiLCAwLCBtc2cuc2VuZGVyKTsKCiAgICAgICAgLy9TYXZlIGluZm8gZm9yIHB1YmxpYwogICAgICAgIHRva2VuczJvd25lcnNbYWRkclRva2VuXSAgICAgICA9IF9vd25lcjsJCgkJb3duZXJzMnRva2Vuc1tfb3duZXJdLnB1c2goYWRkclRva2VuKTsKICAgICAgICB0bXBBZGRyMmNvbnRyYWN0QWRkcltfYWRkclRtcF0gPSBhZGRyVG9rZW47CiAgICAgICAgCiAgICAgICAgLy9TZW5kIGV2ZW50CiAgICAgICAgZXZudENyZWF0ZUNvbnRyYWN0KF9hZGRyVG1wLCBhZGRyVG9rZW4sIF9vd25lciwgbXNnLnNlbmRlciwgX3N1cHBseSwgX25hbWUpOyAKICAgIH0gICAgCn0KCmNvbnRyYWN0IE15T2JzeyAKCiAgICAvL0FkZHJlc3NlcwogICAgYWRkcmVzcyBwdWJsaWMgYWRkck93bmVyOyAgICAgICAgICAgLy9hZGRyIG9mZmljaWFsIG93bmVyCiAgICBhZGRyZXNzIHB1YmxpYyBhZGRyRmFicmljQ29udHJhY3Q7ICAvL2FkZHIgZmFicmljIGNvbnRyYWN0LCB0aGF0IGNyZWF0ZSB0aGlzIHRva2VuCiAgICBhZGRyZXNzIHB1YmxpYyBhZGRyQnJva2VyOyAgICAgICAgICAvL2FkZHIgYnJva2VyIGFjY291bnQsIHRoYXQgbWF5IGNhbGwgdHJhbnNmZXJGcm9tCgogICAgLy9EZWZpbmUgdG9rZW4KICAgIHN0cmluZyBwdWJsaWMgIG5hbWU7ICAgICAgICAgICAgICAgIC8vdG9rZW4gbmFtZSAgICA9J1RfTicsIGV4YW1wbGUgVF8xLFRfMTIsLi4uZXRjCiAgICBzdHJpbmcgcHVibGljICBzeW1ib2w7ICAgICAgICAgICAgICAvL3Rva2VuIHN5bWJvbCAgPScnCiAgICB1aW50OCAgcHVibGljICBkZWNpbWFsczsgICAgICAgICAgICAvL3Rva2VuIGRlY2ltYWwgPSAwCiAgICB1aW50MjU2IHB1YmxpYyBzdXBwbHk7ICAgICAgICAgICAgICAvL3Rva2VuIGNvdW50CgogICAgLy9CYWxhbmNlIG9mIGFjY291bnRzCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBiYWxhbmNlczsgCgogICAgLy9FdmVudHMgCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHZhbHVlKTsKICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludCBfdmFsdWUpOwogICAgCiAgICAvL0luaXRpYWxpemVzIGNvbnRyYWN0IAogICAgZnVuY3Rpb24gTXlPYnMoIGFkZHJlc3MgX293bmVyLCB1aW50MjU2IF9zdXBwbHksIHN0cmluZyBfbmFtZSwgc3RyaW5nIF9zeW1ib2wsIHVpbnQ4IF9kZWNpbWFscywgYWRkcmVzcyBfYWRkckJyb2tlcikgcHVibGljewogICAgICAgIGlmIChfc3VwcGx5ID09IDApIHJldmVydCgpOwogICAgICAgIAogICAgICAgIC8vU2V0IGFkZHJlc3NlcwogICAgICAgIGFkZHJPd25lciAgICAgICAgICA9IF9vd25lcjsgICAgICAvL2FkZHIgb2ZmaWNpYWwgb3duZXIKICAgICAgICBhZGRyRmFicmljQ29udHJhY3QgPSBtc2cuc2VuZGVyOyAgLy9hZGRyIGZhYnJpYyBjb250cmFjdAogICAgICAgIGFkZHJCcm9rZXIgICAgICAgICA9IF9hZGRyQnJva2VyOyAvL2FkZHIgYnJva2VyIGFjY291bnQsIHRoYXQgbWF5IGNhbGwgdHJhbnNmZXJGcm9tCgogICAgICAgIC8vT3duZXIgZ2V0IGFsbCB0b2tlbnMKICAgICAgICBiYWxhbmNlc1tfb3duZXJdICAgPSBfc3VwcGx5OwoKICAgICAgICAvL0RlZmluZSB0b2tlbgogICAgICAgIG5hbWUgICAgID0gX25hbWU7ICAgICAKICAgICAgICBzeW1ib2wgICA9IF9zeW1ib2w7CiAgICAgICAgZGVjaW1hbHMgPSBfZGVjaW1hbHM7CiAgICAgICAgc3VwcGx5ICAgPSBfc3VwcGx5OwogICAgfQoKICAgIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICByZXR1cm4gc3VwcGx5OwogICAgfQoKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcilwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogICAgfQoKICAgIC8qIFNlbmQgY29pbnMgKi8KICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSlwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgICAgIC8qIGlmIHRoZSBzZW5kZXIgZG9lbnN0IGhhdmUgZW5vdWdoIGJhbGFuY2UgdGhlbiBzdG9wICovCiAgICAgICAgaWYgKGJhbGFuY2VzW21zZy5zZW5kZXJdIDwgX3ZhbHVlKSByZXR1cm4gZmFsc2U7CiAgICAgICAgaWYgKGJhbGFuY2VzW190b10gKyBfdmFsdWUgPCBiYWxhbmNlc1tfdG9dKSByZXR1cm4gZmFsc2U7CiAgICAgICAgCiAgICAgICAgLyogQWRkIGFuZCBzdWJ0cmFjdCBuZXcgYmFsYW5jZXMgKi8KICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfdmFsdWU7CiAgICAgICAgCiAgICAgICAgLyogTm90aWZpeSBhbnlvbmUgbGlzdGVuaW5nIHRoYXQgdGhpcyB0cmFuc2ZlciB0b29rIHBsYWNlICovCiAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbSggYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlIClwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgICAgIC8vT25seSBicm9rZXIgY2FuIGNhbGwgdGhpcwogICAgICAgIGlmIChhZGRyQnJva2VyICE9IG1zZy5zZW5kZXIpIHJldHVybiBmYWxzZTsKICAgICAgICAKICAgICAgICAvKiBpZiB0aGUgc2VuZGVyIGRvZW5zdCBoYXZlIGVub3VnaCBiYWxhbmNlIHRoZW4gc3RvcCAqLwogICAgICAgIGlmIChiYWxhbmNlc1tfZnJvbV0gPCBfdmFsdWUpIHJldHVybiBmYWxzZTsKICAgICAgICBpZiAoYmFsYW5jZXNbX3RvXSArIF92YWx1ZSA8IGJhbGFuY2VzW190b10pIHJldHVybiBmYWxzZTsKICAgICAgICAKICAgICAgICAvKiBBZGQgYW5kIHN1YnRyYWN0IG5ldyBiYWxhbmNlcyAqLwogICAgICAgIGJhbGFuY2VzW19mcm9tXSAtPSBfdmFsdWU7CiAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfdmFsdWU7CiAgICAgICAgCiAgICAgICAgLyogTm90aWZpeSBhbnlvbmUgbGlzdGVuaW5nIHRoYXQgdGhpcyB0cmFuc2ZlciB0b29rIHBsYWNlICovCiAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KfQ=='.
	

]
