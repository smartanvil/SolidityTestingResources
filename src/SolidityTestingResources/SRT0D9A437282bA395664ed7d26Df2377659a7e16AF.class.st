Class {
	#name : #SRT0D9A437282bA395664ed7d26Df2377659a7e16AF,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT0D9A437282bA395664ed7d26Df2377659a7e16AF >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTU7CgovKioKICogQHRpdGxlIFNhZmVNYXRoCiAqIEBkZXYgTWF0aCBvcGVyYXRpb25zIHdpdGggc2FmZXR5IGNoZWNrcyB0aGF0IHRocm93IG9uIGVycm9yCiAqLwpsaWJyYXJ5IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAKICAgIHVpbnQyNTYgYyA9IGEgLyBiOwogICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KfQoKLyoqCiAqIEB0aXRsZSBPd25hYmxlCiAqIEBkZXYgVGhlIE93bmFibGUgY29udHJhY3QgaGFzIGFuIG93bmVyIGFkZHJlc3MsIGFuZCBwcm92aWRlcyBiYXNpYyBhdXRob3JpemF0aW9uIGNvbnRyb2wKICogZnVuY3Rpb25zLCB0aGlzIHNpbXBsaWZpZXMgdGhlIGltcGxlbWVudGF0aW9uIG9mICJ1c2VyIHBlcm1pc3Npb25zIi4KICovCmNvbnRyYWN0IE93bmFibGUgewogIGFkZHJlc3MgcHVibGljIG93bmVyOwoKCiAgZXZlbnQgT3duZXJzaGlwVHJhbnNmZXJyZWQoYWRkcmVzcyBpbmRleGVkIHByZXZpb3VzT3duZXIsIGFkZHJlc3MgaW5kZXhlZCBuZXdPd25lcik7CgoKICAvKioKICAgKiBAZGV2IFRoZSBPd25hYmxlIGNvbnN0cnVjdG9yIHNldHMgdGhlIG9yaWdpbmFsIGBvd25lcmAgb2YgdGhlIGNvbnRyYWN0IHRvIHRoZSBzZW5kZXIKICAgKiBhY2NvdW50LgogICAqLwogIGZ1bmN0aW9uIE93bmFibGUoKSB7CiAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgfQoKCiAgLyoqCiAgICogQGRldiBUaHJvd3MgaWYgY2FsbGVkIGJ5IGFueSBhY2NvdW50IG90aGVyIHRoYW4gdGhlIG93bmVyLgogICAqLwogIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICBfOwogIH0KCgogIC8qKgogICAqIEBkZXYgQWxsb3dzIHRoZSBjdXJyZW50IG93bmVyIHRvIHRyYW5zZmVyIGNvbnRyb2wgb2YgdGhlIGNvbnRyYWN0IHRvIGEgbmV3T3duZXIuCiAgICogQHBhcmFtIG5ld093bmVyIFRoZSBhZGRyZXNzIHRvIHRyYW5zZmVyIG93bmVyc2hpcCB0by4KICAgKi8KICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld093bmVyKSBvbmx5T3duZXIgcHVibGljIHsKICAgIHJlcXVpcmUobmV3T3duZXIgIT0gYWRkcmVzcygwKSk7CiAgICBPd25lcnNoaXBUcmFuc2ZlcnJlZChvd25lciwgbmV3T3duZXIpOwogICAgb3duZXIgPSBuZXdPd25lcjsKICB9Cgp9CgoKLyoqCiAqIEB0aXRsZSBQYXVzYWJsZQogKiBAZGV2IEJhc2UgY29udHJhY3Qgd2hpY2ggYWxsb3dzIGNoaWxkcmVuIHRvIGltcGxlbWVudCBhbiBlbWVyZ2VuY3kgc3RvcCBtZWNoYW5pc20uCiAqLwpjb250cmFjdCBQYXVzYWJsZSBpcyBPd25hYmxlIHsKICBldmVudCBQYXVzZSgpOwogIGV2ZW50IFVucGF1c2UoKTsKCiAgYm9vbCBwdWJsaWMgcGF1c2VkID0gZmFsc2U7CgoKICAvKioKICAgKiBAZGV2IE1vZGlmaWVyIHRvIG1ha2UgYSBmdW5jdGlvbiBjYWxsYWJsZSBvbmx5IHdoZW4gdGhlIGNvbnRyYWN0IGlzIG5vdCBwYXVzZWQuCiAgICovCiAgbW9kaWZpZXIgd2hlbk5vdFBhdXNlZCgpIHsKICAgIHJlcXVpcmUoIXBhdXNlZCk7CiAgICBfOwogIH0KCiAgLyoqCiAgICogQGRldiBNb2RpZmllciB0byBtYWtlIGEgZnVuY3Rpb24gY2FsbGFibGUgb25seSB3aGVuIHRoZSBjb250cmFjdCBpcyBwYXVzZWQuCiAgICovCiAgbW9kaWZpZXIgd2hlblBhdXNlZCgpIHsKICAgIHJlcXVpcmUocGF1c2VkKTsKICAgIF87CiAgfQoKICAvKioKICAgKiBAZGV2IGNhbGxlZCBieSB0aGUgb3duZXIgdG8gcGF1c2UsIHRyaWdnZXJzIHN0b3BwZWQgc3RhdGUKICAgKi8KICBmdW5jdGlvbiBwYXVzZSgpIG9ubHlPd25lciB3aGVuTm90UGF1c2VkIHB1YmxpYyB7CiAgICBwYXVzZWQgPSB0cnVlOwogICAgUGF1c2UoKTsKICB9CgogIC8qKgogICAqIEBkZXYgY2FsbGVkIGJ5IHRoZSBvd25lciB0byB1bnBhdXNlLCByZXR1cm5zIHRvIG5vcm1hbCBzdGF0ZQogICAqLwogIGZ1bmN0aW9uIHVucGF1c2UoKSBvbmx5T3duZXIgd2hlblBhdXNlZCBwdWJsaWMgewogICAgcGF1c2VkID0gZmFsc2U7CiAgICBVbnBhdXNlKCk7CiAgfQp9CgoKCgoKCgoKCi8qCiBUaGlzIGlzIGEgc2ltcGxlIGNvbnRyYWN0IHRoYXQgaXMgdXNlZCB0byB0cmFjayBpbmNvbWluZyBwYXltZW50cy4KIEFzIHNvb24gYXMgYSBwYXltZW50IGlzIHJlY2VpdmVkLCBhbiBldmVudCBpcyB0cmlnZ2VyZWQgdG8gbG9nIHRoZSB0cmFuc2FjdGlvbi4KIEFsbCBmdW5kcyBhcmUgaW1tZWRpYXRlbHkgZm9yd2FyZGVkIHRvIHRoZSBvd25lci4KIFRoZSBzZW5kZXIgbXVzdCBpbmNsdWRlIGEgcGF5bWVudCBjb2RlIGFzIGEgcGF5bG9hZCBhbmQgdGhlIGNvbnRyYWN0IGNhbiBjb25kaXRpb25hbGx5IGVuZm9yY2UgdGhlCiBzZW5kaW5nIGFkZHJlc3MgbWF0Y2hlcyB0aGUgcGF5bWVudCBjb2RlLgogVGhlIHBheW1lbnQgY29kZSBpcyB0aGUgZmlyc3QgOCBieXRlcyBvZiB0aGUga2VjY2FrL3NoYTMgaGFzaCBvZiB0aGUgYWRkcmVzcyB0aGF0IHRoZSB1c2VyIGhhcyBzcGVjaWZpZWQgaW4gdGhlIHNhbGUuCiovCmNvbnRyYWN0IFNhbGVUcmFja2VyIGlzIFBhdXNhYmxlIHsKICB1c2luZyBTYWZlTWF0aCBmb3IgdWludDI1NjsKCiAgLy8gRXZlbnQgdG8gYWxsb3cgbW9uaXRvcmluZyBpbmNvbWluZyBwYXltZW50cwogIGV2ZW50IFB1cmNoYXNlTWFkZSAoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBieXRlczggX3BheW1lbnRDb2RlLCB1aW50MjU2IF92YWx1ZSk7CgogIC8vIFRyYWNraW5nIG9mIHB1cmNoYXNlIHRvdGFsIGluIHdlaSBtYWRlIHBlciBzZW5kaW5nIGFkZHJlc3MKICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIHB1cmNoYXNlczsKCiAgLy8gVHJhY2tpbmcgb2YgcHVyY2hhc2VyIGFkZHJlc3NlcyBmb3IgbG9va3VwIG9mZmxpbmUKICBhZGRyZXNzW10gcHVibGljIHB1cmNoYXNlckFkZHJlc3NlczsKCiAgLy8gRmxhZyB0byBlbmZvcmNlIHBheW1lbnRzIHNvdXJjZSBhZGRyZXNzIG1hdGNoaW5nIHRoZSBwYXltZW50IGNvZGUKICBib29sIHB1YmxpYyBlbmZvcmNlQWRkcmVzc01hdGNoOwoKICAvLyBDb25zdHJ1Y3RvciB0byBzdGFydCB0aGUgY29udHJhY3QgaW4gYSBwYXVzZWQgc3RhdGUKICBmdW5jdGlvbiBTYWxlVHJhY2tlcihib29sIF9lbmZvcmNlQWRkcmVzc01hdGNoKSB7CiAgICBlbmZvcmNlQWRkcmVzc01hdGNoID0gX2VuZm9yY2VBZGRyZXNzTWF0Y2g7CiAgICBwYXVzZSgpOwogIH0KCiAgLy8gU2V0dGVyIGZvciB0aGUgZW5mb3JjZSBmbGFnIC0gb25seSB1cGRhdGFibGUgYnkgdGhlIG93bmVyCiAgZnVuY3Rpb24gc2V0RW5mb3JjZUFkZHJlc3NNYXRjaChib29sIF9lbmZvcmNlQWRkcmVzc01hdGNoKSBvbmx5T3duZXIgcHVibGljIHsKICAgIGVuZm9yY2VBZGRyZXNzTWF0Y2ggPSBfZW5mb3JjZUFkZHJlc3NNYXRjaDsKICB9CgogIC8vIFB1cmNoYXNlIGZ1bmN0aW9uIGFsbG93cyBpbmNvbWluZyBwYXltZW50cyB3aGVuIG5vdCBwYXVzZWQgLSByZXF1aXJlcyBwYXltZW50IGNvZGUKICBmdW5jdGlvbiBwdXJjaGFzZShieXRlczggcGF5bWVudENvZGUpIHdoZW5Ob3RQYXVzZWQgcHVibGljIHBheWFibGUgewoKICAgIC8vIFZlcmlmeSB0aGV5IGhhdmUgc2VudCBFVEggaW4KICAgIHJlcXVpcmUobXNnLnZhbHVlICE9IDApOwoKICAgIC8vIFZlcmlmeSB0aGUgcGF5bWVudCBjb2RlIHdhcyBpbmNsdWRlZAogICAgcmVxdWlyZShwYXltZW50Q29kZSAhPSAwKTsKCiAgICAvLyBJZiBwYXltZW50IGZyb20gYWRkcmVzc2VzIGFyZSBiZWluZyBlbmZvcmNlZCwgZW5zdXJlIHRoZSBjb2RlIG1hdGNoZXMgdGhlIHNlbmRlciBhZGRyZXNzCiAgICBpZiAoZW5mb3JjZUFkZHJlc3NNYXRjaCkgewoKICAgICAgLy8gR2V0IHRoZSBmaXJzdCA4IGJ5dGVzIG9mIHRoZSBoYXNoIG9mIHRoZSBhZGRyZXNzCiAgICAgIGJ5dGVzOCBjYWxjdWxhdGVkUGF5bWVudENvZGUgPSBieXRlczgoc2hhMyhtc2cuc2VuZGVyKSk7CgogICAgICAvLyBGYWlsIGlmIHRoZSBzZW5kZXIgY29kZSBkb2VzIG5vdCBtYXRjaAogICAgICByZXF1aXJlKGNhbGN1bGF0ZWRQYXltZW50Q29kZSA9PSBwYXltZW50Q29kZSk7CiAgICB9CgogICAgLy8gU2F2ZSBvZmYgdGhlIGV4aXN0aW5nIHB1cmNoYXNlIGFtb3VudCBmb3IgdGhpcyB1c2VyCiAgICB1aW50MjU2IGV4aXN0aW5nUHVyY2hhc2VBbW91bnQgPSBwdXJjaGFzZXNbbXNnLnNlbmRlcl07CgogICAgLy8gSWYgdGhleSBoYXZlIG5vdCBwdXJjaGFzZWQgYmVmb3JlICgwIHZhbHVlKSwgdGhlbiBzYXZlIGl0IG9mZgogICAgaWYgKGV4aXN0aW5nUHVyY2hhc2VBbW91bnQgPT0gMCkgewogICAgICBwdXJjaGFzZXJBZGRyZXNzZXMucHVzaChtc2cuc2VuZGVyKTsKICAgIH0KCiAgICAvLyBBZGQgdGhlIG5ldyBwdXJjaGFzZSB2YWx1ZSB0byB0aGUgZXhpc3RpbmcgdmFsdWUgYWxyZWFkeSBiZWluZyB0cmFja2VkCiAgICBwdXJjaGFzZXNbbXNnLnNlbmRlcl0gPSBleGlzdGluZ1B1cmNoYXNlQW1vdW50LmFkZChtc2cudmFsdWUpOyAgICAKCiAgICAvLyBUcmFuc2ZlciBvdXQgdG8gdGhlIG93bmVyIHdhbGxldAogICAgb3duZXIudHJhbnNmZXIobXNnLnZhbHVlKTsKCiAgICAvLyBUcmlnZ2VyIHRoZSBldmVudCBmb3IgYSBuZXcgcHVyY2hhc2UKICAgIFB1cmNoYXNlTWFkZShtc2cuc2VuZGVyLCBwYXltZW50Q29kZSwgbXNnLnZhbHVlKTsKICB9CgogIC8vIEFsbG93cyBvd25lciB0byBzd2VlcCBhbnkgRVRIIHNvbWVob3cgdHJhcHBlZCBpbiB0aGUgY29udHJhY3QuCiAgZnVuY3Rpb24gc3dlZXAoKSBvbmx5T3duZXIgcHVibGljIHsKICAgIG93bmVyLnRyYW5zZmVyKHRoaXMuYmFsYW5jZSk7CiAgfQoKICAvLyBHZXQgdGhlIG51bWJlciBvZiBhZGRyZXNzZXMgdGhhdCBoYXZlIGNvbnRyaWJ1dGVkIHRvIHRoZSBzYWxlCiAgZnVuY3Rpb24gZ2V0UHVyY2hhc2VyQWRkcmVzc0NvdW50KCkgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQpIHsKICAgIHJldHVybiBwdXJjaGFzZXJBZGRyZXNzZXMubGVuZ3RoOwogIH0KCn0='.
	

]
