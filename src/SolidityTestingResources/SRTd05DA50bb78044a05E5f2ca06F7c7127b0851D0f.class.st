Class {
	#name : #SRTd05DA50bb78044a05E5f2ca06F7c7127b0851D0f,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTd05DA50bb78044a05E5f2ca06F7c7127b0851D0f >> base64 [
	^ ''.
	

]
