Class {
	#name : #SRT002842529757eab873cce9c251087e1b993f9200,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT002842529757eab873cce9c251087e1b993f9200 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgoKbGlicmFyeSBTYWZlTWF0aCB7CiAgICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgICAgIGlmIChhID09IDApIHsKICAgICAgICAgICAgcmV0dXJuIDA7CiAgICAgICAgfQogICAgICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgICAgIGFzc2VydChjIC8gYSA9PSBiKTsKICAgICAgICByZXR1cm4gYzsKICAgIH0KCiAgICBmdW5jdGlvbiBkaXYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgICAgIC8vIGFzc2VydChiID4gMCk7IC8vIFNvbGlkaXR5IGF1dG9tYXRpY2FsbHkgdGhyb3dzIHdoZW4gZGl2aWRpbmcgYnkgMAogICAgICAgIHVpbnQyNTYgYyA9IGEgLyBiOwogICAgICAgIC8vIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOyAvLyBUaGVyZSBpcyBubyBjYXNlIGluIHdoaWNoIHRoaXMgZG9lc24ndCBob2xkCiAgICAgICAgcmV0dXJuIGM7CiAgICB9CgogICAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICBhc3NlcnQoYiA8PSBhKTsKICAgICAgICByZXR1cm4gYSAtIGI7CiAgICB9CgogICAgZnVuY3Rpb24gYWRkKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICB1aW50MjU2IGMgPSBhICsgYjsKICAgICAgICBhc3NlcnQoYyA+PSBhKTsKICAgICAgICByZXR1cm4gYzsKICAgIH0KfQoKCmNvbnRyYWN0IFN0dXBpZFRva2VuIHsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKTsKfQoKCmNvbnRyYWN0IFN0dXBpZENyb3dkc2FsZSB7CgogICAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQyNTY7CgogICAgU3R1cGlkVG9rZW4gcHVibGljIHRva2VuOwoKICAgIC8vVG9rZW5zIHBlciAxIGV0aAogICAgdWludDI1NiBjb25zdGFudCBwdWJsaWMgcmF0ZSA9IDEwMDAwOwogICAgCiAgICB1aW50MjU2IGNvbnN0YW50IHB1YmxpYyBnb2FsID0gMjAwMDAwMDAgKiAoMTAgKiogMTgpOwogICAgdWludDI1NiBwdWJsaWMgc3RhcnRUaW1lOwogICAgdWludDI1NiBwdWJsaWMgZW5kVGltZTsKICAgIHVpbnQyNTYgcHVibGljIHdlaVJhaXNlZDsKICAgIHVpbnQyNTYgcHVibGljIHRva2Vuc1NvbGQ7CgogICAgYm9vbCBwdWJsaWMgY3Jvd2RzYWxlQWN0aXZlID0gdHJ1ZTsKCiAgICBhZGRyZXNzIHB1YmxpYyB3YWxsZXQ7CiAgICBhZGRyZXNzIHB1YmxpYyB0b2tlbk93bmVyOwoKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsKCiAgICBldmVudCBUb2tlblB1cmNoYXNlKGFkZHJlc3MgaW5kZXhlZCBwdXJjaGFzZXIsIGFkZHJlc3MgaW5kZXhlZCBiZW5lZmljaWFyeSwgdWludDI1NiB2YWx1ZSwgdWludDI1NiBhbW91bnQpOwoKICAgIC8qKgogICAgKiBAcGFyYW0gX3N0YXJ0VGltZSBVbml4IHRpbWVzdGFtcAogICAgKiBAcGFyYW0gX2VuZFRpbWUgVW5peCB0aW1lc3RhbXAKICAgICogQHBhcmFtIF93YWxsZXQgRXRoZXJldW0gYWRkcmVzcyB0byB3aGljaCB0aGUgaW52ZXN0ZWQgZnVuZHMgYXJlIGZvcndhcmRlZAogICAgKiBAcGFyYW0gX3Rva2VuIEFkZHJlc3Mgb2YgdGhlIHRva2VuIHRoYXQgd2lsbCBiZSByZXdhcmRlZCBmb3IgdGhlIGludmVzdG9ycwogICAgKiBAcGFyYW0gX3Rva2VuT3duZXIgQWRkcmVzcyBvZiB0aGUgdG9rZW4gb3duZXIgd2hvIGNhbiBleGVjdXRlIHJlc3RyaWN0ZWQgZnVuY3Rpb25zCiAgICAqLwogICAgZnVuY3Rpb24gU3R1cGlkQ3Jvd2RzYWxlKHVpbnQyNTYgX3N0YXJ0VGltZSwgdWludDI1NiBfZW5kVGltZSwgYWRkcmVzcyBfd2FsbGV0LCBhZGRyZXNzIF90b2tlbiwgYWRkcmVzcyBfdG9rZW5Pd25lcikgcHVibGljIHsKICAgICAgICByZXF1aXJlKF9zdGFydFRpbWUgPCBfZW5kVGltZSk7CiAgICAgICAgcmVxdWlyZShfd2FsbGV0ICE9IGFkZHJlc3MoMCkpOwogICAgICAgIHJlcXVpcmUoX3Rva2VuICE9IGFkZHJlc3MoMCkpOwogICAgICAgIHJlcXVpcmUoX3Rva2VuT3duZXIgIT0gYWRkcmVzcygwKSk7CgogICAgICAgIHN0YXJ0VGltZSA9IF9zdGFydFRpbWU7CiAgICAgICAgZW5kVGltZSA9IF9lbmRUaW1lOwoKICAgICAgICB3YWxsZXQgPSBfd2FsbGV0OwogICAgICAgIHRva2VuT3duZXIgPSBfdG9rZW5Pd25lcjsKICAgICAgICB0b2tlbiA9IFN0dXBpZFRva2VuKF90b2tlbik7CiAgICB9CgogICAgLy8gZmFsbGJhY2sgZnVuY3Rpb24gY2FuIGJlIHVzZWQgdG8gYnV5IHRva2VucwogICAgZnVuY3Rpb24gKCkgZXh0ZXJuYWwgcGF5YWJsZSB7CiAgICAgICAgYnV5VG9rZW5zKG1zZy5zZW5kZXIpOwogICAgfQoKICAgIC8vIGxvdyBsZXZlbCB0b2tlbiBwdXJjaGFzZSBmdW5jdGlvbgogICAgZnVuY3Rpb24gYnV5VG9rZW5zKGFkZHJlc3MgaW52ZXN0b3IpIHB1YmxpYyBwYXlhYmxlIHsKICAgICAgICByZXF1aXJlKGludmVzdG9yICE9IGFkZHJlc3MoMCkpOwogICAgICAgIHJlcXVpcmUobm93ID49IHN0YXJ0VGltZSAmJiBub3cgPD0gZW5kVGltZSk7CiAgICAgICAgcmVxdWlyZShjcm93ZHNhbGVBY3RpdmUpOwogICAgICAgIHJlcXVpcmUobXNnLnZhbHVlICE9IDApOwoKICAgICAgICB1aW50MjU2IHdlaUFtb3VudCA9IG1zZy52YWx1ZTsKCiAgICAgICAgLy8gY2FsY3VsYXRlIHRva2VuIGFtb3VudCB0byBiZSBjcmVhdGVkCiAgICAgICAgdWludDI1NiB0b2tlbnMgPSB3ZWlBbW91bnQubXVsKHJhdGUpOwoKICAgICAgICByZXF1aXJlKHRva2Vuc1NvbGQuYWRkKHRva2VucykgPD0gZ29hbCk7CgogICAgICAgIC8vIHVwZGF0ZSBzdGF0ZQogICAgICAgIHdlaVJhaXNlZCA9IHdlaVJhaXNlZC5hZGQod2VpQW1vdW50KTsKICAgICAgICB0b2tlbnNTb2xkID0gdG9rZW5zU29sZC5hZGQodG9rZW5zKTsKICAgICAgICBiYWxhbmNlc1tpbnZlc3Rvcl0gPSBiYWxhbmNlc1tpbnZlc3Rvcl0uYWRkKHdlaUFtb3VudCk7CgogICAgICAgIGFzc2VydCh0b2tlbi50cmFuc2ZlckZyb20odG9rZW5Pd25lciwgaW52ZXN0b3IsIHRva2VucykpOwogICAgICAgIFRva2VuUHVyY2hhc2UobXNnLnNlbmRlciwgaW52ZXN0b3IsIHdlaUFtb3VudCwgdG9rZW5zKTsKCiAgICAgICAgd2FsbGV0LnRyYW5zZmVyKG1zZy52YWx1ZSk7CiAgICB9CgogICAgZnVuY3Rpb24gc2V0Q3Jvd2RzYWxlQWN0aXZlKGJvb2wgX2Nyb3dkc2FsZUFjdGl2ZSkgcHVibGljIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gdG9rZW5Pd25lcik7CiAgICAgICAgY3Jvd2RzYWxlQWN0aXZlID0gX2Nyb3dkc2FsZUFjdGl2ZTsKICAgIH0KCiAgICAvKioKICAgICAgICAqIEBkZXYgR2V0cyB0aGUgYmFsYW5jZSBvZiB0aGUgc3BlY2lmaWVkIGFkZHJlc3MuCiAgICAgICAgKiBAcGFyYW0gX293bmVyIFRoZSBhZGRyZXNzIHRvIHF1ZXJ5IHRoZSB0aGUgYmFsYW5jZSBvZi4KICAgICAgICAqIEByZXR1cm4gQW4gdWludDI1NiByZXByZXNlbnRpbmcgdGhlIGFtb3VudCBvd25lZCBieSB0aGUgcGFzc2VkIGFkZHJlc3MuCiAgICAgICAgKi8KICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgZXh0ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7CiAgICAgICAgcmV0dXJuIGJhbGFuY2VzW19vd25lcl07CiAgICB9Cn0='.
	

]
