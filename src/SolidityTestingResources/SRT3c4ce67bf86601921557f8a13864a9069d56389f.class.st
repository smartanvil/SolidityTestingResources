Class {
	#name : #SRT3c4ce67bf86601921557f8a13864a9069d56389f,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT3c4ce67bf86601921557f8a13864a9069d56389f >> base64 [
	^ ''.
	

]
