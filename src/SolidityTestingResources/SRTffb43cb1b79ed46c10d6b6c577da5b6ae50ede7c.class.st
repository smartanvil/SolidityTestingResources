Class {
	#name : #SRTffb43cb1b79ed46c10d6b6c577da5b6ae50ede7c,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTffb43cb1b79ed46c10d6b6c577da5b6ae50ede7c >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTY7CgovL1NhZmVNYXRoIC0gTWF0aCBvcGVyYXRpb25zIHdpdGggc2FmZXR5IGNoZWNrcyB0aGF0IHRocm93IG9uIGVycm9yCiAgICAKbGlicmFyeSBTYWZlTWF0aCB7CiAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhICogYjsKICAgIGFzc2VydChhID09IDAgfHwgYyAvIGEgPT0gYik7CiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIGRpdih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgLy8gYXNzZXJ0KGIgPiAwKTsgLy8gU29saWRpdHkgYXV0b21hdGljYWxseSB0aHJvd3Mgd2hlbiBkaXZpZGluZyBieSAwCiAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgIC8vIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOyAvLyBUaGVyZSBpcyBubyBjYXNlIGluIHdoaWNoIHRoaXMgZG9lc24ndCBob2xkCiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgYXNzZXJ0KGMgPj0gYSk7CiAgICByZXR1cm4gYzsKICB9Cn0KCmludGVyZmFjZSB0b2tlbiB7IAogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyByZWNlaXZlciwgdWludCBhbW91bnQpOyAKfQoKY29udHJhY3QgRUNUMkNyb3dkc2FsZSB7CiAgCiAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQyNTY7CgogIGFkZHJlc3MgcHVibGljIHdhbGxldDsKICBhZGRyZXNzIGFkZHJlc3NPZlRva2VuVXNlZEFzUmV3YXJkOwogIHRva2VuIHRva2VuUmV3YXJkOwogIHVpbnQyNTYgcHVibGljIHN0YXJ0VGltZTsKICB1aW50MjU2IHB1YmxpYyBlbmRUaW1lOwogIHVpbnQgcHVibGljIGZ1bmRpbmdHb2FsOwogIHVpbnQgcHVibGljIG1pbmltdW1GdW5kaW5nR29hbDsKICB1aW50MjU2IHB1YmxpYyBwcmljZTsKICB1aW50MjU2IHB1YmxpYyB3ZWlSYWlzZWQ7CiAgdWludDI1NiBwdWJsaWMgc3RhZ2UxQm91bnR5OwogIHVpbnQyNTYgcHVibGljIHN0YWdlMkJvdW50eTsKICB1aW50MjU2IHB1YmxpYyBzdGFnZTNCb3VudHk7CiAgdWludDI1NiBwdWJsaWMgc3RhZ2U0Qm91bnR5OwogCiAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBiYWxhbmNlT2Y7CiAgYm9vbCBmdW5kaW5nR29hbFJlYWNoZWQgPSBmYWxzZTsKICBib29sIGNyb3dkc2FsZUNsb3NlZCA9IGZhbHNlOwogCiAgZXZlbnQgVG9rZW5QdXJjaGFzZShhZGRyZXNzIGluZGV4ZWQgcHVyY2hhc2VyLCBhZGRyZXNzIGluZGV4ZWQgYmVuZWZpY2lhcnksIHVpbnQyNTYgdmFsdWUsIHVpbnQyNTYgYW1vdW50KTsKICBldmVudCBGdW5kVHJhbnNmZXIoYWRkcmVzcyBiYWNrZXIsIHVpbnQgYW1vdW50LCBib29sIGlzQ29udHJpYnV0aW9uKTsKICBldmVudCBHb2FsUmVhY2hlZChhZGRyZXNzIHJlY2lwaWVudCwgdWludCB0b3RhbEFtb3VudFJhaXNlZCk7CiAgCiAgbW9kaWZpZXIgaXNNaW5pbXVtKCkgewogICAgICAgICBpZihtc2cudmFsdWUgPCAxMDAwMDAwMDAwMDAwMDAwKSByZXZlcnQgKCk7CiAgICAgICAgXzsKICAgIH0KICAgIAogIG1vZGlmaWVyIGFmdGVyRGVhZGxpbmUoKSB7IAogICAgICBpZiAobm93IDw9IGVuZFRpbWUpIHJldmVydCAoKTsKICAgICAgXzsKICB9ICAgIAoKICBmdW5jdGlvbiBFQ1QyQ3Jvd2RzYWxlKAogICkgewogICAgd2FsbGV0ID0gMHg1NUJlQTFBMDMzNUE4RWE1NjU3MmI4RTY2ZjE3MTk2MjkwQ2E2NDY3OwogICAgYWRkcmVzc09mVG9rZW5Vc2VkQXNSZXdhcmQgPSAweDNhNzk5ZUQ3MkJjZUY2ZmM5OEFlRTc1MEM1QUNDMzUyQ0RCQTVmNmM7CiAgICBwcmljZSA9IDEwMCAqIDEgZmlubmV5OwogICAgZnVuZGluZ0dvYWwgPSAzMCAqIDEgZmlubmV5OwogICAgbWluaW11bUZ1bmRpbmdHb2FsID0gMTAgKiAxIGZpbm5leTsKICAgIHRva2VuUmV3YXJkID0gdG9rZW4oYWRkcmVzc09mVG9rZW5Vc2VkQXNSZXdhcmQpOwogICAgc3RhcnRUaW1lID0gMTUxMTM1MjAwMDsgLy8xMjowMCBVVEMKICAgIHN0YWdlMUJvdW50eSA9IDE1MTEzNTMyMDA7IC8vMTI6MjAgVVRDIDUwJQogICAgc3RhZ2UyQm91bnR5ID0gMTUxMTM1NDQwMDsgLy8xMjo0MCBVVEMgNDAlCiAgICBzdGFnZTNCb3VudHkgPSAxNTExMzU1NjAwOyAvLzEzOjAwIFVUQyAyNSUKICAgIHN0YWdlNEJvdW50eSA9IDE1MTEzNTc0MDA7IC8vMTM6MzAgVVRDIDEwJQogICAgZW5kVGltZSA9IDE1MTEzNTkyMDA7IC8vMTU6MDAgVVRDIDAlCiAgfQoKICAvLyBmYWxsYmFjayBmdW5jdGlvbiBjYW4gYmUgdXNlZCB0byBidXkgdG9rZW5zCiAgZnVuY3Rpb24gKCkgcGF5YWJsZSBpc01pbmltdW17CiAgICBidXlUb2tlbnMobXNnLnNlbmRlcik7CiAgfQoKICAvLyBsb3cgbGV2ZWwgdG9rZW4gcHVyY2hhc2UgZnVuY3Rpb24KICBmdW5jdGlvbiBidXlUb2tlbnMoYWRkcmVzcyBiZW5lZmljaWFyeSkgcGF5YWJsZSB7CiAgICByZXF1aXJlKGJlbmVmaWNpYXJ5ICE9IDB4MCk7CiAgICByZXF1aXJlKHZhbGlkUHVyY2hhc2UoKSk7CgogICAgdWludDI1NiB3ZWlBbW91bnQgPSBtc2cudmFsdWU7CgogICAgLy8gY2FsY3VsYXRlIHRva2VuIGFtb3VudCB0byBiZSBzZW50CiAgICB1aW50MjU2IHRva2VucyA9ICh3ZWlBbW91bnQpICogcHJpY2U7CiAgICAKICAgIGlmKG5vdyA8IHN0YWdlMUJvdW50eSl7CiAgICAgIHRva2VucyArPSAodG9rZW5zICogNTApIC8gMTAwOwogICAgfWVsc2UgaWYobm93IDwgc3RhZ2UyQm91bnR5KXsKICAgICAgdG9rZW5zICs9ICh0b2tlbnMgKiA0MCkgLyAxMDA7CiAgICB9ZWxzZSBpZihub3cgPCBzdGFnZTNCb3VudHkpewogICAgICB0b2tlbnMgKz0gKHRva2VucyAqIDI1KSAvIDEwMDsKICAgIH1lbHNlIGlmKG5vdyA8IHN0YWdlNEJvdW50eSl7CiAgICAgIHRva2VucyArPSAodG9rZW5zICogMTApIC8gMTAwOyAgCiAgICB9CiAgICAvLyB1cGRhdGUgc3RhdGUKICAgIGJhbGFuY2VPZlttc2cuc2VuZGVyXSArPSB3ZWlBbW91bnQ7CiAgICB3ZWlSYWlzZWQgPSB3ZWlSYWlzZWQuYWRkKHdlaUFtb3VudCk7CiAgICB0b2tlblJld2FyZC50cmFuc2ZlcihiZW5lZmljaWFyeSwgdG9rZW5zKTsKICAgIFRva2VuUHVyY2hhc2UobXNnLnNlbmRlciwgYmVuZWZpY2lhcnksIHdlaUFtb3VudCwgdG9rZW5zKTsKICB9CiAgCiAgCiAgLy93aXRoZHJhd2FsIG9yIHJlZnVuZCBmb3IgaW52ZXN0b3IgYW5kIGJlbmVmaWNpYXJ5CiAgZnVuY3Rpb24gc2FmZVdpdGhkcmF3YWwoKSBhZnRlckRlYWRsaW5lIHsKICAgICAgICBpZiAod2VpUmFpc2VkIDwgZnVuZGluZ0dvYWwgJiYgd2VpUmFpc2VkIDwgbWluaW11bUZ1bmRpbmdHb2FsKSB7CiAgICAgICAgICAgIHVpbnQgYW1vdW50ID0gYmFsYW5jZU9mW21zZy5zZW5kZXJdOwogICAgICAgICAgICBiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPSAwOwogICAgICAgICAgICBpZiAoYW1vdW50ID4gMCkgewogICAgICAgICAgICAgICAgaWYgKG1zZy5zZW5kZXIuc2VuZChhbW91bnQpKSB7CiAgICAgICAgICAgICAgICAgICAgRnVuZFRyYW5zZmVyKG1zZy5zZW5kZXIsIGFtb3VudCwgZmFsc2UpOwogICAgICAgICAgICAgICAgICAgIC8qdG9rZW5SZXdhcmQuYnVybkZyb20obXNnLnNlbmRlciwgcHJpY2UgKiBhbW91bnQpOyovCiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIGJhbGFuY2VPZlttc2cuc2VuZGVyXSA9IGFtb3VudDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKCh3ZWlSYWlzZWQgPj0gZnVuZGluZ0dvYWwgfHwgd2VpUmFpc2VkID49IG1pbmltdW1GdW5kaW5nR29hbCkgJiYgd2FsbGV0ID09IG1zZy5zZW5kZXIpIHsKICAgICAgICAgICAgaWYgKHdhbGxldC5zZW5kKHdlaVJhaXNlZCkpIHsKICAgICAgICAgICAgICAgIEZ1bmRUcmFuc2Zlcih3YWxsZXQsIHdlaVJhaXNlZCwgZmFsc2UpOwogICAgICAgICAgICAgICAgR29hbFJlYWNoZWQod2FsbGV0LCB3ZWlSYWlzZWQpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgLy9JZiB3ZSBmYWlsIHRvIHNlbmQgdGhlIGZ1bmRzIHRvIGJlbmVmaWNpYXJ5LCB1bmxvY2sgZnVuZGVycyBiYWxhbmNlCiAgICAgICAgICAgICAgICBmdW5kaW5nR29hbFJlYWNoZWQgPSBmYWxzZTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KICAgIAogICAgLy8gd2l0aGRyYXdFdGggd2hlbiBtaW5pbXVtIGNhcCBpcyByZWFjaGVkCiAgZnVuY3Rpb24gd2l0aGRyYXdFdGgoKSBwcml2YXRlewogICAgICAgIHJlcXVpcmUodGhpcy5iYWxhbmNlICE9IDApOwogICAgICAgIHJlcXVpcmUod2VpUmFpc2VkID49IG1pbmltdW1GdW5kaW5nR29hbCk7CgogICAgICAgIHBlbmRpbmdFdGhXaXRoZHJhd2FsID0gdGhpcy5iYWxhbmNlOwogIH0KICAgIHVpbnQgcGVuZGluZ0V0aFdpdGhkcmF3YWw7CgogIC8vIEByZXR1cm4gdHJ1ZSBpZiB0aGUgdHJhbnNhY3Rpb24gY2FuIGJ1eSB0b2tlbnMKICBmdW5jdGlvbiB2YWxpZFB1cmNoYXNlKCkgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAoYm9vbCkgewogICAgYm9vbCB3aXRoaW5QZXJpb2QgPSBub3cgPj0gc3RhcnRUaW1lICYmIG5vdyA8PSBlbmRUaW1lOwogICAgYm9vbCBub25aZXJvUHVyY2hhc2UgPSBtc2cudmFsdWUgIT0gMDsKICAgIHJldHVybiB3aXRoaW5QZXJpb2QgJiYgbm9uWmVyb1B1cmNoYXNlOwogIH0KCiAgLy8gQHJldHVybiB0cnVlIGlmIGNyb3dkc2FsZSBldmVudCBoYXMgZW5kZWQKICBmdW5jdGlvbiBoYXNFbmRlZCgpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zIChib29sKSB7CiAgICByZXR1cm4gbm93ID4gZW5kVGltZTsKICB9CiAKfQ=='.
	

]
