Class {
	#name : #SRT9d6cde970c30e45311cff3d1f3f9a8dd24ff70f1,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT9d6cde970c30e45311cff3d1f3f9a8dd24ff70f1 >> base64 [
	^ ''.
	

]
