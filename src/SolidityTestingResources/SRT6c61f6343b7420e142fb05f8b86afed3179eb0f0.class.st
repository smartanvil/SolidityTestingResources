Class {
	#name : #SRT6c61f6343b7420e142fb05f8b86afed3179eb0f0,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT6c61f6343b7420e142fb05f8b86afed3179eb0f0 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7Cgpjb250cmFjdCBTYWZlTWF0aCB7CgogICAgLyogZnVuY3Rpb24gYXNzZXJ0KGJvb2wgYXNzZXJ0aW9uKSBpbnRlcm5hbCB7ICovCiAgICAvKiAgIGlmICghYXNzZXJ0aW9uKSB7ICovCiAgICAvKiAgICAgdGhyb3c7ICovCiAgICAvKiAgIH0gKi8KICAgIC8qIH0gICAgICAvLyBhc3NlcnQgbm8gbG9uZ2VyIG5lZWRlZCBvbmNlIHNvbGlkaXR5IGlzIG9uIDAuNC4xMCAqLwoKICAgIGZ1bmN0aW9uIHNhZmVBZGQodWludDI1NiB4LCB1aW50MjU2IHkpIGludGVybmFsIHJldHVybnModWludDI1NikgewogICAgICB1aW50MjU2IHogPSB4ICsgeTsKICAgICAgYXNzZXJ0KCh6ID49IHgpICYmICh6ID49IHkpKTsKICAgICAgcmV0dXJuIHo7CiAgICB9CgogICAgZnVuY3Rpb24gc2FmZVN1Yih1aW50MjU2IHgsIHVpbnQyNTYgeSkgaW50ZXJuYWwgcmV0dXJucyh1aW50MjU2KSB7CiAgICAgIGFzc2VydCh4ID49IHkpOwogICAgICB1aW50MjU2IHogPSB4IC0geTsKICAgICAgcmV0dXJuIHo7CiAgICB9CgogICAgZnVuY3Rpb24gc2FmZU11bHQodWludDI1NiB4LCB1aW50MjU2IHkpIGludGVybmFsIHJldHVybnModWludDI1NikgewogICAgICB1aW50MjU2IHogPSB4ICogeTsKICAgICAgYXNzZXJ0KCh4ID09IDApfHwoei94ID09IHkpKTsKICAgICAgcmV0dXJuIHo7CiAgICB9Cgp9Cgpjb250cmFjdCBPd25hYmxlIHsKCWFkZHJlc3MgcHVibGljIG93bmVyOwoJZnVuY3Rpb24gT3duYWJsZSgpIHtvd25lciA9IG1zZy5zZW5kZXI7fQoJbW9kaWZpZXIgb25seU93bmVyKCkgewoJCWlmIChtc2cuc2VuZGVyICE9IG93bmVyKSB0aHJvdzsKCQlfOwoJfQoKfQoKY29udHJhY3QgVG9rZW4gewogICAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7CiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSk7CiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpOwogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50MjU2IF92YWx1ZSk7CiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKTsKfQoKLyogIEVSQyAyMCB0b2tlbiAqLwpjb250cmFjdCBTdGFuZGFyZFRva2VuIGlzIFRva2VuIHsKCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICBpZiAoYmFsYW5jZXNbbXNnLnNlbmRlcl0gPj0gX3ZhbHVlICYmIF92YWx1ZSA+IDApIHsKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfdmFsdWU7CiAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICBpZiAoYmFsYW5jZXNbX2Zyb21dID49IF92YWx1ZSAmJiBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA+PSBfdmFsdWUgJiYgX3ZhbHVlID4gMCkgewogICAgICAgIGJhbGFuY2VzW190b10gKz0gX3ZhbHVlOwogICAgICAgIGJhbGFuY2VzW19mcm9tXSAtPSBfdmFsdWU7CiAgICAgICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOwogICAgICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpIHsKICAgICAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsKICAgIH0KCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsKICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKSB7CiAgICAgIHJldHVybiBhbGxvd2VkW19vd25lcl1bX3NwZW5kZXJdOwogICAgfQoKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgYmFsYW5jZXM7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikpIGFsbG93ZWQ7Cn0KCmNvbnRyYWN0IFhDVG9rZW4gaXMgU3RhbmRhcmRUb2tlbixTYWZlTWF0aCxPd25hYmxlIHsKCiAgICAvLyBtZXRhZGF0YQogICAgc3RyaW5nIHB1YmxpYyBjb25zdGFudCBuYW1lID0gIlRUQyBUb2tlbiI7CiAgICBzdHJpbmcgcHVibGljIGNvbnN0YW50IHN5bWJvbCA9ICJUVEMiOwogICAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgZGVjaW1hbHMgPSA4OwogICAgc3RyaW5nIHB1YmxpYyB2ZXJzaW9uID0gIjEuMCI7CiAgICAKICAgIC8vIHRvdGFsIGNhcAogICAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgdG9rZW5DcmVhdGlvbkNhcCA9IDIwMDAgKiAoMTAqKjYpICogMTAqKmRlY2ltYWxzOwogICAgLy8gaW5pdCBhbW91bnQKICAgIHVpbnQyNTYgcHVibGljIGNvbnN0YW50IHRva2VuQ3JlYXRpb25Jbml0ID0gMTAwMCAqICgxMCoqNikgKiAxMCoqZGVjaW1hbHM7CiAgICAvLyBUaGUgYW1vdW50IG9mIFhDVG9rZW5zIHRoYXQgY2FuIGJlIG1pbnQKICAgIHVpbnQyNTYgcHVibGljIGNvbnN0YW50IHRva2VuTWludENhcCA9IDEwMDAgKiAoMTAqKjYpICogMTAqKmRlY2ltYWxzOwogICAgLy8gVGhlIGFtb3VudCBvZiBYQ1Rva2VucyB0aGF0IGhhdmUgYmVlbiBtaW50ZWQKICAgIHVpbnQyNTYgcHVibGljIHRva2VuTWludGVkU3VwcGx5OwogICAgCiAgICBhZGRyZXNzIHB1YmxpYyBpbml0RGVwb3NpdEFjY291bnQ7CiAgICBhZGRyZXNzIHB1YmxpYyBtaW50RGVwb3NpdEFjY291bnQ7CiAgICAKCWJvb2wgcHVibGljIG1pbnRGaW5pc2hlZDsKCQoJZXZlbnQgTWludCh1aW50MjU2IGFtb3VudCk7CglldmVudCBNaW50RmluaXNoZWQoKTsKCiAgICBmdW5jdGlvbiBYQ1Rva2VuKAogICAgICAgIGFkZHJlc3MgX2luaXRGdW5kRGVwb3NpdEFjY291bnQsCiAgICAgICAgYWRkcmVzcyBfbWludEZ1bmREZXBvc2l0QWNjb3VudAogICAgICAgICkgewogICAgICAgIGluaXREZXBvc2l0QWNjb3VudCA9IF9pbml0RnVuZERlcG9zaXRBY2NvdW50OwogICAgICAgIG1pbnREZXBvc2l0QWNjb3VudCA9IF9taW50RnVuZERlcG9zaXRBY2NvdW50OwogICAgICAgIGJhbGFuY2VzW2luaXREZXBvc2l0QWNjb3VudF0gPSB0b2tlbkNyZWF0aW9uSW5pdDsKICAgICAgICB0b3RhbFN1cHBseSA9IHRva2VuQ3JlYXRpb25Jbml0OwogICAgICAgIHRva2VuTWludGVkU3VwcGx5ID0gMDsKICAgICAgICBtaW50RmluaXNoZWQgPSBmYWxzZTsKICAgIH0KICAgIAogICAgbW9kaWZpZXIgY2FuTWludCgpIHsKCQlpZihtaW50RmluaXNoZWQpIHRocm93OwoJCV87Cgl9CgkKICAgIC8vIFRoZSByZW1haW5pbmcgYW1vdW50IG9mIHRva2VucyB0aGF0IGNhbiBiZSBtaW50ZWQuCglmdW5jdGlvbiByZW1haW5NaW50VG9rZW5BbW91bnQoKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHJlbWFpbk1pbnRUb2tlbkFtb3VudCkgewoJICAgIHJldHVybiBzYWZlU3ViKHRva2VuTWludENhcCwgdG9rZW5NaW50ZWRTdXBwbHkpOwoJfQoKCS8vIG1pbnQgdG9rZW4KCWZ1bmN0aW9uIG1pbnQodWludDI1NiBfdG9rZW5BbW91bnQpIG9ubHlPd25lciBjYW5NaW50IHJldHVybnMgKGJvb2wpIHsKCQlpZihfdG9rZW5BbW91bnQgPD0gMCkgdGhyb3c7CgkJdWludDI1NiBjaGVja2VkU3VwcGx5ID0gc2FmZUFkZCh0b2tlbk1pbnRlZFN1cHBseSwgX3Rva2VuQW1vdW50KTsKCQlpZihjaGVja2VkU3VwcGx5ID4gdG9rZW5NaW50Q2FwKSB0aHJvdzsKCQlpZihjaGVja2VkU3VwcGx5ID09IHRva2VuTWludENhcCl7IC8vIG1pbnQgZmluaXNoCgkJICAgIG1pbnRGaW5pc2hlZCA9IHRydWU7CgkJICAgIE1pbnRGaW5pc2hlZCgpOwoJCX0KCQl0b2tlbk1pbnRlZFN1cHBseSA9IGNoZWNrZWRTdXBwbHk7CgkJdG90YWxTdXBwbHkgPSBzYWZlQWRkKHRvdGFsU3VwcGx5LCBfdG9rZW5BbW91bnQpOwoJCWJhbGFuY2VzW21pbnREZXBvc2l0QWNjb3VudF0gPSBzYWZlQWRkKGJhbGFuY2VzW21pbnREZXBvc2l0QWNjb3VudF0sIF90b2tlbkFtb3VudCk7CgkJTWludChfdG9rZW5BbW91bnQpOwoJCXJldHVybiB0cnVlOwoJfQoJCgkvLyBEbyBub3QgYWxsb3cgZGlyZWN0IGRlcG9zaXRzLgogICAgZnVuY3Rpb24gKCkgZXh0ZXJuYWwgewogICAgICAgIHRocm93OwogICAgfQoJCn0='.
	

]
