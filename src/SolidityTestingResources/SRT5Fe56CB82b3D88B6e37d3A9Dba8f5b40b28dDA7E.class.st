Class {
	#name : #SRT5Fe56CB82b3D88B6e37d3A9Dba8f5b40b28dDA7E,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT5Fe56CB82b3D88B6e37d3A9Dba8f5b40b28dDA7E >> base64 [
	^ ''.
	

]
