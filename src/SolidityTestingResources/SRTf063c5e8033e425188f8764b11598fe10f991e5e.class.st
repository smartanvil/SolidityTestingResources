Class {
	#name : #SRTf063c5e8033e425188f8764b11598fe10f991e5e,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTf063c5e8033e425188f8764b11598fe10f991e5e >> base64 [
	^ ''.
	

]
