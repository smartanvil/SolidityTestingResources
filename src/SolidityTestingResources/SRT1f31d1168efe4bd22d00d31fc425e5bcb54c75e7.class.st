Class {
	#name : #SRT1f31d1168efe4bd22d00d31fc425e5bcb54c75e7,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT1f31d1168efe4bd22d00d31fc425e5bcb54c75e7 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7Cgpjb250cmFjdCBvd25lZCB7CiAgICAvLyBPd25lcidzIGFkZHJlc3MKICAgIGFkZHJlc3MgcHVibGljIG93bmVyOwoKICAgIC8vIEhhcmRjb2RlZCBhZGRyZXNzIG9mIHN1cGVyIG93bmVyIChmb3Igc2VjdXJpdHkgcmVhc29ucykKICAgIGFkZHJlc3MgaW50ZXJuYWwgc3VwZXJfb3duZXIgPSAweDYzMENDNGM4M2ZDYzExMjFmZUQwNDExMjYyMjdkMjVCYmViNTE5NTk7CiAgICAKICAgIC8vIEhhcmRjb2RlZCBhZGRyZXNzZXMgb2YgZm91bmRlcnMgZm9yIHdpdGhkcmF3IGFmdGVyIGdyYWNlUGVyaW9kIGlzIHN1Y2NlZWQgKGZvciBzZWN1cml0eSByZWFzb25zKQogICAgYWRkcmVzc1syXSBpbnRlcm5hbCBmb3VuZGVyc0FkZHJlc3NlcyA9IFsKICAgICAgICAweDJmMDcyRjAwMzI4QjYxNzYyNTdDMjFFNjQ5MjU3NjA5OTA1NjEwMDEsCiAgICAgICAgMHgyNjQwZDRiM2JhRjNGNkNGOWJCNTczMkZlMzdmRTFhOTczNWEzMkNFCiAgICBdOwoKICAgIC8vIENvbnN0cnVjdG9yIG9mIHBhcmVudCB0aGUgY29udHJhY3QKICAgIGZ1bmN0aW9uIG93bmVkKCkgcHVibGljIHsKICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgICAgICAgc3VwZXJfb3duZXIgPSBtc2cuc2VuZGVyOwogICAgfQoKICAgIC8vIE1vZGlmaWVyIGZvciBvd25lcidzIGZ1bmN0aW9ucyBvZiB0aGUgY29udHJhY3QKICAgIG1vZGlmaWVyIG9ubHlPd25lciB7CiAgICAgICAgaWYgKChtc2cuc2VuZGVyICE9IG93bmVyKSAmJiAobXNnLnNlbmRlciAhPSBzdXBlcl9vd25lcikpIHJldmVydCgpOwogICAgICAgIF87CiAgICB9CgogICAgLy8gTW9kaWZpZXIgZm9yIHN1cGVyLW93bmVyJ3MgZnVuY3Rpb25zIG9mIHRoZSBjb250cmFjdAogICAgbW9kaWZpZXIgb25seVN1cGVyT3duZXIgewogICAgICAgIGlmIChtc2cuc2VuZGVyICE9IHN1cGVyX293bmVyKSByZXZlcnQoKTsKICAgICAgICBfOwogICAgfQoKICAgIC8vIFJldHVybiB0cnVlIGlmIHNlbmRlciBpcyBvd25lciBvciBzdXBlci1vd25lciBvZiB0aGUgY29udHJhY3QKICAgIGZ1bmN0aW9uIGlzT3duZXIoKSBpbnRlcm5hbCByZXR1cm5zKGJvb2wgc3VjY2VzcykgewogICAgICAgIGlmICgobXNnLnNlbmRlciA9PSBvd25lcikgfHwgKG1zZy5zZW5kZXIgPT0gc3VwZXJfb3duZXIpKSByZXR1cm4gdHJ1ZTsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICB9CgogICAgLy8gQ2hhbmdlIHRoZSBvd25lciBvZiB0aGUgY29udHJhY3QKICAgIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpICBwdWJsaWMgb25seVN1cGVyT3duZXIgewogICAgICAgIG93bmVyID0gbmV3T3duZXI7CiAgICB9Cn0KCgpjb250cmFjdCBTVGVYX1dMIGlzIG93bmVkIHsKCS8vIEVSQzIwIAoJc3RyaW5nIHB1YmxpYyBzdGFuZGFyZCA9ICdUb2tlbiAwLjEnOwogICAgc3RyaW5nIHB1YmxpYyBuYW1lOwogICAgc3RyaW5nIHB1YmxpYyBzeW1ib2w7CiAgICB1aW50OCBwdWJsaWMgZGVjaW1hbHM7CiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsKICAgIC8vIC0tLQogICAgCiAgICB1aW50MjU2IHB1YmxpYyBldGhSYWlzZWQ7CiAgICB1aW50MjU2IHB1YmxpYyBzb2xkU3VwcGx5OwogICAgdWludDI1NiBwdWJsaWMgY3VyUHJpY2U7CiAgICB1aW50MjU2IHB1YmxpYyBtaW5CdXlQcmljZTsKICAgIHVpbnQyNTYgcHVibGljIG1heEJ1eVByaWNlOwogICAgCiAgICAvLyBXaGl0ZSBsaXN0IHN0YXJ0IGFuZCBzdG9wIGJsb2NrcwogICAgdWludDI1NiBwdWJsaWMgd2xTdGFydEJsb2NrOwogICAgdWludDI1NiBwdWJsaWMgd2xTdG9wQmxvY2s7CgogICAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBiYWxhbmNlT2Y7CiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpKSBwdWJsaWMgYWxsb3dhbmNlOwogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiB2YWx1ZSk7CiAgICBldmVudCBCdXJuKGFkZHJlc3MgaW5kZXhlZCBmcm9tLCB1aW50MjU2IHZhbHVlKTsKICAgIAogICAgLy8gQ29uc3RydWN0b3IKICAgIGZ1bmN0aW9uIFNUZVhfV0woKSBwdWJsaWMgeyAgICAgICAgCiAgICAJdG90YWxTdXBwbHkgPSAxMDAwMDAwMDAwMDAwMDAwOyAvLyAxME0gd2l0aCBkZWNpbWFsID0gOAogICAgCWJhbGFuY2VPZlt0aGlzXSA9IHRvdGFsU3VwcGx5OwogICAgCXNvbGRTdXBwbHkgPSAwOwogICAgICAgIGRlY2ltYWxzID0gODsKICAgICAgICAKICAgICAgICBuYW1lID0gIlNUZVggV2hpdGUgTGlzdCI7CiAgICAgICAgc3ltYm9sID0gIlNURShXTCkiOwogICAgICAgIAogICAgICAgIG1pbkJ1eVByaWNlID0gMjA1MDAwMDA7IC8vIG1pbiBwcmljZSBpcyAwLjAwMjA1IEVUSCBmb3IgMSBTVEUKICAgICAgICBtYXhCdXlQcmljZSA9IDI0OTAwMDAwOyAvLyBtYXggcHJpY2UgaXMgMC4wMDI0OSBFVEggZm9yIDEgU1RFCiAgICAgICAgY3VyUHJpY2UgPSBtaW5CdXlQcmljZTsKICAgICAgICAKICAgICAgICB3bFN0YXJ0QmxvY2sgPSA1MDcxODA5OwogICAgICAgIHdsU3RvcEJsb2NrID0gd2xTdGFydEJsb2NrICsgMjg3MDAwOwogICAgfQogICAgCiAgICAvLyBDYWxscyB3aGVuIHNlbmQgRXRoZXJldW0gdG8gdGhlIGNvbnRyYWN0CiAgICBmdW5jdGlvbigpIGludGVybmFsIHBheWFibGUgewogICAgCWlmICggbXNnLnZhbHVlIDwgMTAwMDAwMDAwMDAwMDAwMDAwICkgcmV2ZXJ0KCk7IC8vIG1pbiB0cmFuc2FjdGlvbiBpcyAwLjEgRVRICiAgICAJaWYgKCAoIGJsb2NrLm51bWJlciA+PSB3bFN0b3BCbG9jayApIHx8ICggYmxvY2subnVtYmVyIDwgd2xTdGFydEJsb2NrICkgKSByZXZlcnQoKTsgICAgCQogICAgCQogICAgCXVpbnQyNTYgYWRkX2J5X2Jsb2NrcyA9ICgoKGJsb2NrLm51bWJlci13bFN0YXJ0QmxvY2spKjEwMDAwMDApLyh3bFN0b3BCbG9jay13bFN0YXJ0QmxvY2spKihtYXhCdXlQcmljZS1taW5CdXlQcmljZSkpLzEwMDAwMDA7CiAgICAJdWludDI1NiBhZGRfYnlfc29sZGVkID0gKChzb2xkU3VwcGx5KjEwMDAwMDApL3RvdGFsU3VwcGx5KihtYXhCdXlQcmljZS1taW5CdXlQcmljZSkpLzEwMDAwMDA7CiAgICAJCiAgICAJLy8gVGhlIHByaWNlIGlzIGNhbGN1bGF0ZWQgZnJvbSBibG9ja3MgYW5kIHNvbGQgc3VwcGx5CiAgICAJaWYgKCBhZGRfYnlfYmxvY2tzID4gYWRkX2J5X3NvbGRlZCApIHsKICAgIAkJY3VyUHJpY2UgPSBtaW5CdXlQcmljZSArIGFkZF9ieV9ibG9ja3M7CiAgICAJfSBlbHNlIHsKICAgIAkJY3VyUHJpY2UgPSBtaW5CdXlQcmljZSArIGFkZF9ieV9zb2xkZWQ7CiAgICAJfQogICAgCQogICAgCWlmICggY3VyUHJpY2UgPiBtYXhCdXlQcmljZSApIGN1clByaWNlID0gbWF4QnV5UHJpY2U7CiAgICAJCiAgICAJdWludDI1NiBhbW91bnQgPSBtc2cudmFsdWUgLyBjdXJQcmljZTsKICAgIAkKICAgIAlpZiAoIGJhbGFuY2VPZlt0aGlzXSA8IGFtb3VudCApIHJldmVydCgpOwogICAgCQogICAgCWJhbGFuY2VPZlt0aGlzXSAtPSBhbW91bnQ7CiAgICAgICAgYmFsYW5jZU9mW21zZy5zZW5kZXJdICs9IGFtb3VudDsKICAgICAgICBzb2xkU3VwcGx5ICs9IGFtb3VudDsKICAgICAgICBldGhSYWlzZWQgKz0gbXNnLnZhbHVlOwogICAgCQogICAgICAgIFRyYW5zZmVyKDB4MCwgbXNnLnNlbmRlciwgYW1vdW50KTsKICAgIH0KICAgIAoJLy8gRVJDMjAgdHJhbnNmZXIKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHsKICAgIAlyZXZlcnQoKTsKICAgIH0KCgkvLyBFUkMyMCBhcHByb3ZlCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyhib29sIHN1Y2Nlc3MpIHsKICAgICAgICByZXZlcnQoKTsKICAgIH0KCgkvLyBFUkMyMCB0cmFuc2ZlckZyb20KICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zKGJvb2wgc3VjY2VzcykgewogICAgCXJldmVydCgpOwogICAgfQogICAgCiAgICAvLyBBZG1pbiBmdW5jdGlvbgogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tQWRtaW4oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgb25seU93bmVyIHJldHVybnMoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgaWYgKF90byA9PSAweDApIHJldmVydCgpOwogICAgICAgIGlmIChiYWxhbmNlT2ZbX2Zyb21dIDwgX3ZhbHVlKSByZXZlcnQoKTsKICAgICAgICBpZiAoKGJhbGFuY2VPZltfdG9dICsgX3ZhbHVlKSA8IGJhbGFuY2VPZltfdG9dKSByZXZlcnQoKTsgLy8gQ2hlY2sgZm9yIG92ZXJmbG93cwoKICAgICAgICBiYWxhbmNlT2ZbX2Zyb21dIC09IF92YWx1ZTsKICAgICAgICBiYWxhbmNlT2ZbX3RvXSArPSBfdmFsdWU7CgogICAgICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgICAKICAgIC8vIFNldCBtaW4vbWF4IHByaWNlcwogICAgZnVuY3Rpb24gc2V0UHJpY2VzKHVpbnQyNTYgX21pbkJ1eVByaWNlLCB1aW50MjU2IF9tYXhCdXlQcmljZSkgcHVibGljIG9ubHlPd25lciB7CiAgICAJbWluQnV5UHJpY2UgPSBfbWluQnV5UHJpY2U7CiAgICAJbWF4QnV5UHJpY2UgPSBfbWF4QnV5UHJpY2U7CiAgICB9CiAgICAKICAgIC8vIFNldCBzdGFydCBhbmQgc3RvcCBibG9ja3Mgb2YgV2hpdGUgTGlzdAogICAgZnVuY3Rpb24gc2V0U3RhcnRTdG9wQmxvY2tzKHVpbnQyNTYgX3dsU3RhcnRCbG9jaywgdWludDI1NiBfd2xTdG9wQmxvY2spIHB1YmxpYyBvbmx5T3duZXIgewogICAgCXdsU3RhcnRCbG9jayA9IF93bFN0YXJ0QmxvY2s7CiAgICAJd2xTdG9wQmxvY2sgPSBfd2xTdG9wQmxvY2s7CiAgICB9CiAgICAKICAgIC8vIFdpdGhkcmF3CiAgICBmdW5jdGlvbiB3aXRoZHJhd1RvRm91bmRlcnModWludDI1NiBhbW91bnQpIHB1YmxpYyBvbmx5T3duZXIgewogICAgCXVpbnQyNTYgYW1vdW50X3RvX3dpdGhkcmF3ID0gYW1vdW50ICogMTAwMDAwMDAwMDAwMDAwMDsgLy8gMC4wMDEgRVRICiAgICAgICAgaWYgKHRoaXMuYmFsYW5jZSA8IGFtb3VudF90b193aXRoZHJhdykgcmV2ZXJ0KCk7CiAgICAgICAgYW1vdW50X3RvX3dpdGhkcmF3ID0gYW1vdW50X3RvX3dpdGhkcmF3IC8gZm91bmRlcnNBZGRyZXNzZXMubGVuZ3RoOwogICAgICAgIHVpbnQ4IGkgPSAwOwogICAgICAgIHVpbnQ4IGVycm9ycyA9IDA7CiAgICAgICAgCiAgICAgICAgZm9yIChpID0gMDsgaSA8IGZvdW5kZXJzQWRkcmVzc2VzLmxlbmd0aDsgaSsrKSB7CgkJCWlmICghZm91bmRlcnNBZGRyZXNzZXNbaV0uc2VuZChhbW91bnRfdG9fd2l0aGRyYXcpKSB7CgkJCQllcnJvcnMrKzsKCQkJfQoJCX0KICAgIH0KICAgIAogICAgLy8gUmVtb3ZlIHdoaXRlIGxpc3QgY29udHJhY3QgYWZ0ZXIgU1RFIHdpbGwgYmUgZGlzdHJpYnV0ZWQKICAgIGZ1bmN0aW9uIGFmdGVyU1RFRGlzdHJpYnV0ZWQoKSBwdWJsaWMgb25seVN1cGVyT3duZXIgewogICAgCXVpbnQyNTYgYW1vdW50X3RvX3dpdGhkcmF3ID0gdGhpcy5iYWxhbmNlOwogICAgICAgIGFtb3VudF90b193aXRoZHJhdyA9IGFtb3VudF90b193aXRoZHJhdyAvIGZvdW5kZXJzQWRkcmVzc2VzLmxlbmd0aDsKICAgICAgICB1aW50OCBpID0gMDsKICAgICAgICB1aW50OCBlcnJvcnMgPSAwOwogICAgICAgIAogICAgICAgIGZvciAoaSA9IDA7IGkgPCBmb3VuZGVyc0FkZHJlc3Nlcy5sZW5ndGg7IGkrKykgewoJCQlpZiAoIWZvdW5kZXJzQWRkcmVzc2VzW2ldLnNlbmQoYW1vdW50X3RvX3dpdGhkcmF3KSkgewoJCQkJZXJyb3JzKys7CgkJCX0KCQl9CgkJCiAgICAJc3VpY2lkZShmb3VuZGVyc0FkZHJlc3Nlc1swXSk7CiAgICB9Cn0='.
	

]
