Class {
	#name : #SRT41643089590c305b56521b06563954447019f5e6,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT41643089590c305b56521b06563954447019f5e6 >> base64 [
	^ ''.
	

]
