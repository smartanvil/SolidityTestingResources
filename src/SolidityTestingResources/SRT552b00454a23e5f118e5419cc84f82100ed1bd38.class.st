Class {
	#name : #SRT552b00454a23e5f118e5419cc84f82100ed1bd38,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT552b00454a23e5f118e5419cc84f82100ed1bd38 >> base64 [
	^ ''.
	

]
