Class {
	#name : #SRTa7b311b636322b11eea274b81928f1fac5b05e21,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTa7b311b636322b11eea274b81928f1fac5b05e21 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7CiAKbGlicmFyeSBTYWZlTWF0aCB7CiAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiBmdW5jdGlvbiBkaXYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPiAwKTsgLy8gU29saWRpdHkgYXV0b21hdGljYWxseSB0aHJvd3Mgd2hlbiBkaXZpZGluZyBieSAwCiAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOyAvLyBUaGVyZSBpcyBubyBjYXNlIGluIHdoaWNoIHRoaXMgZG9lc24ndCBob2xkCiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhICsgYjsKICAgIGFzc2VydChjID49IGEpOwogICAgcmV0dXJuIGM7CiAgfQp9Cgpjb250cmFjdCBPd25hYmxlIHsKICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKCgogIGV2ZW50IE93bmVyc2hpcFRyYW5zZmVycmVkKGFkZHJlc3MgaW5kZXhlZCBwcmV2aW91c093bmVyLCBhZGRyZXNzIGluZGV4ZWQgbmV3T3duZXIpOwoKCiAgLyoqCiAgICogQGRldiBUaGUgT3duYWJsZSBjb25zdHJ1Y3RvciBzZXRzIHRoZSBvcmlnaW5hbCBgb3duZXJgIG9mIHRoZSBjb250cmFjdCB0byB0aGUgc2VuZGVyCiAgICogYWNjb3VudC4KICAgKi8KICBmdW5jdGlvbiBPd25hYmxlKCkgcHVibGljIHsKICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICB9CgoKICAvKioKICAgKiBAZGV2IFRocm93cyBpZiBjYWxsZWQgYnkgYW55IGFjY291bnQgb3RoZXIgdGhhbiB0aGUgb3duZXIuCiAgICovCiAgbW9kaWZpZXIgb25seU93bmVyKCkgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyKTsKICAgIF87CiAgfQoKCiAgLyoqCiAgICogQGRldiBBbGxvd3MgdGhlIGN1cnJlbnQgb3duZXIgdG8gdHJhbnNmZXIgY29udHJvbCBvZiB0aGUgY29udHJhY3QgdG8gYSBuZXdPd25lci4KICAgKiBAcGFyYW0gbmV3T3duZXIgVGhlIGFkZHJlc3MgdG8gdHJhbnNmZXIgb3duZXJzaGlwIHRvLgogICAqLwogIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpIG9ubHlPd25lciBwdWJsaWMgewogICAgcmVxdWlyZShuZXdPd25lciAhPSBhZGRyZXNzKDApKTsKICAgIE93bmVyc2hpcFRyYW5zZmVycmVkKG93bmVyLCBuZXdPd25lcik7CiAgICBvd25lciA9IG5ld093bmVyOwogIH0KCn0KCi8qKgogKiBAdGl0bGUgRVJDMjBCYXNpYwogKiBAZGV2IFNpbXBsZXIgdmVyc2lvbiBvZiBFUkMyMCBpbnRlcmZhY2UKICogQGRldiBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL0VJUHMvaXNzdWVzLzE3OQogKi8KY29udHJhY3QgRVJDMjBCYXNpYyB7CiAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7CiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3Mgd2hvKSBjb25zdGFudCBwdWJsaWMgcmV0dXJucyAodWludDI1Nik7CiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyB0bywgdWludDI1NiB2YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpOwogIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBmcm9tLCBhZGRyZXNzIGluZGV4ZWQgdG8sIHVpbnQyNTYgdmFsdWUpOwp9CgovKioKICogQHRpdGxlIEJhc2ljIHRva2VuCiAqIEBkZXYgQmFzaWMgdmVyc2lvbiBvZiBTdGFuZGFyZFRva2VuLCB3aXRoIG5vIGFsbG93YW5jZXMuCiAqLwpjb250cmFjdCBCYXNpY1Rva2VuIGlzIEVSQzIwQmFzaWMgewogIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwoKICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikgdG9rZW5CYWxhbmNlczsKCiAgLyoqCiAgKiBAZGV2IHRyYW5zZmVyIHRva2VuIGZvciBhIHNwZWNpZmllZCBhZGRyZXNzCiAgKiBAcGFyYW0gX3RvIFRoZSBhZGRyZXNzIHRvIHRyYW5zZmVyIHRvLgogICogQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IHRvIGJlIHRyYW5zZmVycmVkLgogICovCiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgcmVxdWlyZSh0b2tlbkJhbGFuY2VzW21zZy5zZW5kZXJdPj1fdmFsdWUpOwogICAgdG9rZW5CYWxhbmNlc1ttc2cuc2VuZGVyXSA9IHRva2VuQmFsYW5jZXNbbXNnLnNlbmRlcl0uc3ViKF92YWx1ZSk7CiAgICB0b2tlbkJhbGFuY2VzW190b10gPSB0b2tlbkJhbGFuY2VzW190b10uYWRkKF92YWx1ZSk7CiAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIC8qKgogICogQGRldiBHZXRzIHRoZSBiYWxhbmNlIG9mIHRoZSBzcGVjaWZpZWQgYWRkcmVzcy4KICAqIEBwYXJhbSBfb3duZXIgVGhlIGFkZHJlc3MgdG8gcXVlcnkgdGhlIHRoZSBiYWxhbmNlIG9mLgogICogQHJldHVybiBBbiB1aW50MjU2IHJlcHJlc2VudGluZyB0aGUgYW1vdW50IG93bmVkIGJ5IHRoZSBwYXNzZWQgYWRkcmVzcy4KICAqLwogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcHVibGljIHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgewogICAgcmV0dXJuIHRva2VuQmFsYW5jZXNbX293bmVyXTsKICB9Cn0KCmNvbnRyYWN0IEV0aGVycGF5Q29pbiBpcyBCYXNpY1Rva2VuLE93bmFibGUgewoKICAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQyNTY7CiAgIAogICBzdHJpbmcgcHVibGljIGNvbnN0YW50IG5hbWUgPSAiRXRoZXJwYXkiOwogICBzdHJpbmcgcHVibGljIGNvbnN0YW50IHN5bWJvbCA9ICJFUEMiOwogICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCBkZWNpbWFscyA9IDQ7CiAgIHVpbnQyNTYgcHVibGljIGJ1eVByaWNlID0gMTExICogMTAgKiogMTIgOyAgIC8vIHBlciB0b2tlbiB0aGUgcHJpY2UgaXMgMi4yMjIyKjEwXi00IGV0aCwgdGhpcyBwcmljZSBpcyBlcXVpdmFsZW50IGluIHdlaQogICBhZGRyZXNzIHB1YmxpYyBldGhTdG9yZSA9IDB4OTMzMjUyQTRGZDQ1RDEyQkMwZWE0MjExNDI3RUFFOTM0OTEyZDAwMjsKICAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgSU5JVElBTF9TVVBQTFkgPSAyMTAwMDAwMDsKICAgZXZlbnQgRGVidWcoc3RyaW5nIG1lc3NhZ2UsIGFkZHJlc3MgYWRkciwgdWludDI1NiBudW1iZXIpOwogICBldmVudCBNZXNzYWdlKHN0cmluZyBtZXNzYWdlKTsKICAgIHN0cmluZyBidXlNZXNzYWdlOwogICAvLyBmYWxsYmFjayBmdW5jdGlvbiBjYW4gYmUgdXNlZCB0byBidXkgdG9rZW5zCiAgIGZ1bmN0aW9uICgpIHB1YmxpYyBwYXlhYmxlIHsKICAgIGJ1eShtc2cuc2VuZGVyKTsKICAgfQogIAogICAvKioKICAgKiBAZGV2IENvbnRydWN0b3IgdGhhdCBnaXZlcyBtc2cuc2VuZGVyIGFsbCBvZiBleGlzdGluZyB0b2tlbnMuCiAgICovCiAgIC8vVE9ETzogQ2hhbmdlIHRoZSBuYW1lIG9mIHRoZSBjb25zdHJ1Y3RvcgogICAgZnVuY3Rpb24gRXRoZXJwYXlDb2luKCkgcHVibGljIHsKICAgICAgICBvd25lciA9IGV0aFN0b3JlOwogICAgICAgIHRvdGFsU3VwcGx5ID0gSU5JVElBTF9TVVBQTFk7CiAgICAgICAgdG9rZW5CYWxhbmNlc1tvd25lcl0gPSBJTklUSUFMX1NVUFBMWSAqICgxMCAqKiB1aW50MjU2KGRlY2ltYWxzKSk7ICAgLy9TaW5jZSB3ZSBkaXZpZGVkIHRoZSB0b2tlbiBpbnRvIDEwXjE4IHBhcnRzCiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGJ1eShhZGRyZXNzIGJlbmVmaWNpYXJ5KSBwYXlhYmxlIHB1YmxpYyB7CiAgICAgICAgdWludCBhbW91bnQgPSBtc2cudmFsdWUuZGl2KGJ1eVByaWNlKTsgICAgICAgICAgICAgICAgICAgIC8vIGNhbGN1bGF0ZXMgdGhlIGFtb3VudAogICAgICAgIGFtb3VudCA9IGFtb3VudCAqICgxMCAqKiB1aW50MjU2KGRlY2ltYWxzKSk7CiAgICAgICAgcmVxdWlyZSh0b2tlbkJhbGFuY2VzW293bmVyXSA+PSBhbW91bnQpOyAgICAgICAgICAgICAgIC8vIGNoZWNrcyBpZiBpdCBoYXMgZW5vdWdoIHRvIHNlbGwKICAgICAgICB0b2tlbkJhbGFuY2VzW2JlbmVmaWNpYXJ5XSA9IHRva2VuQmFsYW5jZXNbYmVuZWZpY2lhcnldLmFkZChhbW91bnQpOyAgICAgICAgICAgICAgICAgIC8vIGFkZHMgdGhlIGFtb3VudCB0byBidXllcidzIGJhbGFuY2UKICAgICAgICB0b2tlbkJhbGFuY2VzW293bmVyXSA9IHRva2VuQmFsYW5jZXNbb3duZXJdLnN1YihhbW91bnQpOyAgICAgICAgICAgICAgICAgICAgICAgIC8vIHN1YnRyYWN0cyBhbW91bnQgZnJvbSBzZWxsZXIncyBiYWxhbmNlCiAgICAgICAgVHJhbnNmZXIob3duZXIsIGJlbmVmaWNpYXJ5LCBhbW91bnQpOyAgICAgICAgICAgICAgIC8vIGV4ZWN1dGUgYW4gZXZlbnQgcmVmbGVjdGluZyB0aGUgY2hhbmdlCiAgICAgICAgZXRoU3RvcmUudHJhbnNmZXIobXNnLnZhbHVlKTsgICAgICAgICAgICAgICAgICAgICAgIC8vc2VuZCB0aGUgZXRoIHRvIHRoZSBhZGRyZXNzIHdoZXJlIGV0aCBzaG91bGQgYmUgY29sbGVjdGVkCiAgICAgICAgYnV5TWVzc2FnZSA9ICJUaGFuayB5b3UgZm9yIHBhcnRpY2lwYXRpbmcgaW4gRXRoZXJwYXlDb2luIElDTyI7CiAgICAgICAgTWVzc2FnZShidXlNZXNzYWdlKTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gZ2V0VG9rZW5CYWxhbmNlKCkgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7CiAgICAgICAgYmFsYW5jZSA9IHRva2VuQmFsYW5jZXNbbXNnLnNlbmRlcl0uZGl2ICgxMCoqZGVjaW1hbHMpOyAvLyBzaG93IHRva2VuIGJhbGFuY2UgaW4gZnVsbCB0b2tlbnMgbm90IHBhcnQKICAgIH0KIAogICAgZnVuY3Rpb24gY2hhbmdlQnV5UHJpY2UodWludCBuZXdQcmljZSkgcHVibGljIG9ubHlPd25lciB7CiAgICAgICAgYnV5UHJpY2UgPSBuZXdQcmljZTsKICAgIH0KfQ=='.
	

]
