Class {
	#name : #SRTe1e8eabd8fcf08ed50ae1f2ed4710c1a1f38542c,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTe1e8eabd8fcf08ed50ae1f2ed4710c1a1f38542c >> base64 [
	^ ''.
	

]
