Class {
	#name : #SRT5c8bc089E0B5D7Acc066020872F5968708f25BF3,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT5c8bc089E0B5D7Acc066020872F5968708f25BF3 >> base64 [
	^ ''.
	

]
