Class {
	#name : #SRTdfd8e9fda3ac12884e35eaea35d763517bb79176,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTdfd8e9fda3ac12884e35eaea35d763517bb79176 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTA7Cgpjb250cmFjdCBTYWZlTWF0aCB7CgoKICAgIGZ1bmN0aW9uIHNhZmVBZGQodWludDI1NiB4LCB1aW50MjU2IHkpIGludGVybmFsIHJldHVybnModWludDI1NikgewogICAgICB1aW50MjU2IHogPSB4ICsgeTsKICAgICAgYXNzZXJ0KCh6ID49IHgpICYmICh6ID49IHkpKTsKICAgICAgcmV0dXJuIHo7CiAgICB9CgogICAgZnVuY3Rpb24gc2FmZVN1YnRyYWN0KHVpbnQyNTYgeCwgdWludDI1NiB5KSBpbnRlcm5hbCByZXR1cm5zKHVpbnQyNTYpIHsKICAgICAgYXNzZXJ0KHggPj0geSk7CiAgICAgIHVpbnQyNTYgeiA9IHggLSB5OwogICAgICByZXR1cm4gejsKICAgIH0KCiAgICBmdW5jdGlvbiBzYWZlTXVsdCh1aW50MjU2IHgsIHVpbnQyNTYgeSkgaW50ZXJuYWwgcmV0dXJucyh1aW50MjU2KSB7CiAgICAgIHVpbnQyNTYgeiA9IHggKiB5OwogICAgICBhc3NlcnQoKHggPT0gMCl8fCh6L3ggPT0geSkpOwogICAgICByZXR1cm4gejsKICAgIH0KCn0KCmNvbnRyYWN0IFRva2VuIHsKICAgIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5OwogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpOwogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKTsKICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7Cn0KCgovKiAgRVJDIDIwIHRva2VuICovCmNvbnRyYWN0IFN0YW5kYXJkVG9rZW4gaXMgVG9rZW4gewoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgIGlmIChiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfdmFsdWUgJiYgX3ZhbHVlID4gMCkgewogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdIC09IF92YWx1ZTsKICAgICAgICBiYWxhbmNlc1tfdG9dICs9IF92YWx1ZTsKICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgIGlmIChiYWxhbmNlc1tfZnJvbV0gPj0gX3ZhbHVlICYmIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID49IF92YWx1ZSAmJiBfdmFsdWUgPiAwKSB7CiAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfdmFsdWU7CiAgICAgICAgYmFsYW5jZXNbX2Zyb21dIC09IF92YWx1ZTsKICAgICAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgewogICAgICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogICAgfQoKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpIHsKICAgICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07CiAgICB9CgogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsKfQoKY29udHJhY3QgU1BJTlRva2VuIGlzIFN0YW5kYXJkVG9rZW4sIFNhZmVNYXRoIHsKCiAgICBzdHJpbmcgcHVibGljIGNvbnN0YW50IG5hbWUgPSAiRVRIRVJTUElOIjsKICAgIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgc3ltYm9sID0gIlNQSU4iOwogICAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgZGVjaW1hbHMgPSAxODsKICAgIHN0cmluZyBwdWJsaWMgdmVyc2lvbiA9ICIyLjAiOwoKICAgIGFkZHJlc3MgcHVibGljIGV0aEZ1bmREZXBvc2l0OwogICAgYWRkcmVzcyBwdWJsaWMgU1BJTkZ1bmREZXBvc2l0OwoKICAgIGJvb2wgcHVibGljIGlzRmluYWxpemVkOwogICAgdWludDI1NiBwdWJsaWMgZnVuZGluZ1N0YXJ0QmxvY2s7CiAgICB1aW50MjU2IHB1YmxpYyBmdW5kaW5nRW5kQmxvY2s7CiAgICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCBTUElORnVuZCA9IDIwMDAgKiAoMTAqKjMpICogMTAqKmRlY2ltYWxzOwoKICAgIGZ1bmN0aW9uIHRva2VuUmF0ZSgpIGNvbnN0YW50IHJldHVybnModWludCkgewogICAgICAgIGlmIChibG9jay5udW1iZXI+PWZ1bmRpbmdTdGFydEJsb2NrICYmIGJsb2NrLm51bWJlcjxmdW5kaW5nU3RhcnRCbG9jaysyNTApIHJldHVybiAxMzAwOwogICAgICAgIGlmIChibG9jay5udW1iZXI+PWZ1bmRpbmdTdGFydEJsb2NrICYmIGJsb2NrLm51bWJlcjxmdW5kaW5nU3RhcnRCbG9jayszMzYwMCkgcmV0dXJuIDEwMDA7CiAgICAgICAgaWYgKGJsb2NrLm51bWJlcj49ZnVuZGluZ1N0YXJ0QmxvY2sgJiYgYmxvY2subnVtYmVyPGZ1bmRpbmdTdGFydEJsb2NrKzY3MjAwKSByZXR1cm4gNzUwOwogICAgICAgIGlmIChibG9jay5udW1iZXI+PWZ1bmRpbmdTdGFydEJsb2NrICYmIGJsb2NrLm51bWJlcjxmdW5kaW5nU3RhcnRCbG9jaysxMDA4MDApIHJldHVybiA2MDA7CiAgICAgICAgcmV0dXJuIDUwMDsKICAgIH0KCiAgICAvLyBUb3RhbCBDYXAgaXMgMTBNCiAgICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCB0b2tlbkNyZWF0aW9uQ2FwID0gIDEwICogKDEwKio2KSAqIDEwKipkZWNpbWFsczsKCgogICAgLy8gZXZlbnRzCiAgICBldmVudCBDcmVhdGVTUElOKGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsKCiAgICAvLyBjb25zdHJ1Y3RvcgogICAgZnVuY3Rpb24gU1BJTlRva2VuKAogICAgICAgIGFkZHJlc3MgX2V0aEZ1bmREZXBvc2l0LAogICAgICAgIGFkZHJlc3MgX1NQSU5GdW5kRGVwb3NpdCwKICAgICAgICB1aW50MjU2IF9mdW5kaW5nU3RhcnRCbG9jaywKICAgICAgICB1aW50MjU2IF9mdW5kaW5nRW5kQmxvY2spCiAgICB7CiAgICAgIGlzRmluYWxpemVkID0gZmFsc2U7CiAgICAgIGV0aEZ1bmREZXBvc2l0ID0gX2V0aEZ1bmREZXBvc2l0OwogICAgICBTUElORnVuZERlcG9zaXQgPSBfU1BJTkZ1bmREZXBvc2l0OwogICAgICBmdW5kaW5nU3RhcnRCbG9jayA9IF9mdW5kaW5nU3RhcnRCbG9jazsKICAgICAgZnVuZGluZ0VuZEJsb2NrID0gX2Z1bmRpbmdFbmRCbG9jazsKICAgICAgdG90YWxTdXBwbHkgPSBTUElORnVuZDsKICAgICAgYmFsYW5jZXNbU1BJTkZ1bmREZXBvc2l0XSA9IFNQSU5GdW5kOwogICAgICBDcmVhdGVTUElOKFNQSU5GdW5kRGVwb3NpdCwgU1BJTkZ1bmQpOwogICAgfQoKCiAgICBmdW5jdGlvbiBtYWtlVG9rZW5zKCkgcGF5YWJsZSAgewogICAgICBpZiAoaXNGaW5hbGl6ZWQpIHRocm93OwogICAgICBpZiAoYmxvY2subnVtYmVyIDwgZnVuZGluZ1N0YXJ0QmxvY2spIHRocm93OwogICAgICBpZiAoYmxvY2subnVtYmVyID4gZnVuZGluZ0VuZEJsb2NrKSB0aHJvdzsKICAgICAgaWYgKG1zZy52YWx1ZSA9PSAwKSB0aHJvdzsKCiAgICAgIHVpbnQyNTYgdG9rZW5zID0gc2FmZU11bHQobXNnLnZhbHVlLCB0b2tlblJhdGUoKSk7CgogICAgICB1aW50MjU2IGNoZWNrZWRTdXBwbHkgPSBzYWZlQWRkKHRvdGFsU3VwcGx5LCB0b2tlbnMpOwoKICAgICAgaWYgKHRva2VuQ3JlYXRpb25DYXAgPCBjaGVja2VkU3VwcGx5KSB0aHJvdzsKCiAgICAgIHRvdGFsU3VwcGx5ID0gY2hlY2tlZFN1cHBseTsKICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gKz0gdG9rZW5zOwogICAgICBDcmVhdGVTUElOKG1zZy5zZW5kZXIsIHRva2Vucyk7CiAgICB9CgogICAgZnVuY3Rpb24oKSBwYXlhYmxlIHsKICAgICAgICBtYWtlVG9rZW5zKCk7CiAgICB9CgogICAgZnVuY3Rpb24gZmluYWxpemUoKSBleHRlcm5hbCB7CiAgICAgIGlmIChpc0ZpbmFsaXplZCkgdGhyb3c7CiAgICAgIGlmIChtc2cuc2VuZGVyICE9IGV0aEZ1bmREZXBvc2l0KSB0aHJvdzsKCiAgICAgIGlmKGJsb2NrLm51bWJlciA8PSBmdW5kaW5nRW5kQmxvY2sgJiYgdG90YWxTdXBwbHkgIT0gdG9rZW5DcmVhdGlvbkNhcCkgdGhyb3c7CgogICAgICBpc0ZpbmFsaXplZCA9IHRydWU7CiAgICAgIGlmKCFldGhGdW5kRGVwb3NpdC5zZW5kKHRoaXMuYmFsYW5jZSkpIHRocm93OwogICAgfQoKCgp9'.
	

]
