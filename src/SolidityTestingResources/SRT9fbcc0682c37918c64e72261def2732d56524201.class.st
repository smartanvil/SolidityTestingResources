Class {
	#name : #SRT9fbcc0682c37918c64e72261def2732d56524201,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT9fbcc0682c37918c64e72261def2732d56524201 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTY7CgovKioKICogQHRpdGxlIE93bmFibGUKICogQGRldiBUaGUgT3duYWJsZSBjb250cmFjdCBoYXMgYW4gb3duZXIgYWRkcmVzcywgYW5kIHByb3ZpZGVzIGJhc2ljIGF1dGhvcml6YXRpb24gY29udHJvbAogKiBmdW5jdGlvbnMsIHRoaXMgc2ltcGxpZmllcyB0aGUgaW1wbGVtZW50YXRpb24gb2YgInVzZXIgcGVybWlzc2lvbnMiLgogKi8KY29udHJhY3QgT3duYWJsZSB7CgogICAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CgogICAgLyoqCiAgICAqIEBkZXYgVGhlIE93bmFibGUgY29uc3RydWN0b3Igc2V0cyB0aGUgb3JpZ2luYWwgYG93bmVyYCBvZiB0aGUgY29udHJhY3QgdG8gdGhlIHNlbmRlcgogICAgKiBhY2NvdW50LgogICAgKi8KICAgIGZ1bmN0aW9uIE93bmFibGUoKSBwdWJsaWMgewogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgIH0KCiAgICAvKioKICAgICogQGRldiBUaHJvd3MgaWYgY2FsbGVkIGJ5IGFueSBhY2NvdW50IG90aGVyIHRoYW4gdGhlIG93bmVyLgogICAgKi8KICAgIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgICAgIF87CiAgICB9CgogICAgLyoqCiAgICAqIEBkZXYgQWxsb3dzIHRoZSBjdXJyZW50IG93bmVyIHRvIHRyYW5zZmVyIGNvbnRyb2wgb2YgdGhlIGNvbnRyYWN0IHRvIGEgbmV3T3duZXIuCiAgICAqIEBwYXJhbSBuZXdPd25lciBUaGUgYWRkcmVzcyB0byB0cmFuc2ZlciBvd25lcnNoaXAgdG8uCiAgICAqLwogICAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBuZXdPd25lcikgb25seU93bmVyIHB1YmxpYyB7CiAgICAgICAgcmVxdWlyZShuZXdPd25lciAhPSBhZGRyZXNzKDApKTsKICAgICAgICBvd25lciA9IG5ld093bmVyOwogICAgfQoKfQoKY29udHJhY3QgU09MVG9rZW4gaXMgT3duYWJsZXsKCiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikpIGFsbG93ZWQ7CgogICAgc3RyaW5nIHB1YmxpYyBjb25zdGFudCBuYW1lID0gIlNPTCI7CiAgICBzdHJpbmcgcHVibGljIGNvbnN0YW50IHN5bWJvbCA9ICJTT0wiOwogICAgdWludDMyIHB1YmxpYyBjb25zdGFudCBkZWNpbWFscyA9IDE4OwoKICAgIHVpbnQgY29uc3RhbnQgc3RhcnQgPSAxNTIyNTY2MDAwOyAvLyBBcHJpbCAxc3QsIDIwMTggYXQgMDk6MDBBTSAoVVRDKzIpCiAgICB1aW50IGNvbnN0YW50IHBlcmlvZCA9IDgwOwogICAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgaGFyZGNhcCA9IDUwMDAwICogMSBldGhlcjsKCiAgICBib29sIHB1YmxpYyB0cmFuc2ZlckFsbG93ZWQgPSBmYWxzZTsKICAgIGJvb2wgcHVibGljIG1pbnRpbmdGaW5pc2hlZCA9IGZhbHNlOwoKICAgIG1vZGlmaWVyIHdoZW5UcmFuc2ZlckFsbG93ZWQoKSB7CiAgICAgICAgaWYobXNnLnNlbmRlciAhPSBvd25lcil7CiAgICAgICAgICAgIHJlcXVpcmUodHJhbnNmZXJBbGxvd2VkKTsKICAgICAgICB9CiAgICAgICAgXzsKICAgIH0KCiAgICBtb2RpZmllciBzYWxlSXNPbigpIHsKICAgICAgICByZXF1aXJlKG5vdyA+IHN0YXJ0ICYmIG5vdyA8IHN0YXJ0ICsgcGVyaW9kICogMSBkYXlzKTsKICAgICAgICBfOwogICAgfQoKICAgIG1vZGlmaWVyIGNhbk1pbnQoKSB7CiAgICAgICAgcmVxdWlyZSghbWludGluZ0ZpbmlzaGVkKTsKICAgICAgICBfOwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgd2hlblRyYW5zZmVyQWxsb3dlZCBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgICAgIHJlcXVpcmUoX3RvICE9IGFkZHJlc3MoMCkpOwogICAgICAgIHJlcXVpcmUoX3ZhbHVlIDw9IGJhbGFuY2VzW21zZy5zZW5kZXJdKTsKCiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtIF92YWx1ZTsKICAgICAgICBiYWxhbmNlc1tfdG9dID0gYmFsYW5jZXNbX3RvXSArIF92YWx1ZTsKICAgICAgICAvL2Fzc2VydChiYWxhbmNlc1tfdG9dID49IF92YWx1ZSk7IG5vIG5lZWQgdG8gY2hlY2ssIHNpbmNlIG1pbnQgaGFzIGxpbWl0ZWQgaGFyZGNhcAogICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHB1YmxpYyByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpIHsKICAgICAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSB3aGVuVHJhbnNmZXJBbGxvd2VkIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICAgICAgcmVxdWlyZShfdG8gIT0gYWRkcmVzcygwKSk7CiAgICAgICAgcmVxdWlyZShfdmFsdWUgPD0gYmFsYW5jZXNbX2Zyb21dKTsKICAgICAgICByZXF1aXJlKF92YWx1ZSA8PSBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSk7CgogICAgICAgIGJhbGFuY2VzW19mcm9tXSA9IGJhbGFuY2VzW19mcm9tXSAtIF92YWx1ZTsKICAgICAgICBiYWxhbmNlc1tfdG9dID0gYmFsYW5jZXNbX3RvXSArIF92YWx1ZTsKICAgICAgICAvL2Fzc2VydChiYWxhbmNlc1tfdG9dID49IF92YWx1ZSk7IG5vIG5lZWQgdG8gY2hlY2ssIHNpbmNlIG1pbnQgaGFzIGxpbWl0ZWQgaGFyZGNhcAogICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID0gYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gLSBfdmFsdWU7CiAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgICAgIC8vTk9URTogVG8gcHJldmVudCBhdHRhY2sgdmVjdG9ycyBsaWtlIHRoZSBvbmUgZGlzY3Vzc2VkIGhlcmU6CiAgICAgICAgLy9odHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9pc3N1ZXMvMjAjaXNzdWVjb21tZW50LTI2MzUyNDcyOSwKICAgICAgICAvL2NsaWVudHMgU0hPVUxEIG1ha2Ugc3VyZSB0byBjcmVhdGUgdXNlciBpbnRlcmZhY2VzIGluIHN1Y2ggYSB3YXkKICAgICAgICAvL3RoYXQgdGhleSBzZXQgdGhlIGFsbG93YW5jZSBmaXJzdCB0byAwIGJlZm9yZSBzZXR0aW5nIGl0IHRvIGFub3RoZXIgdmFsdWUgZm9yIHRoZSBzYW1lIHNwZW5kZXIuCgogICAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKSB7CiAgICAgICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07CiAgICB9CgogICAgZnVuY3Rpb24gYWxsb3dUcmFuc2ZlcigpIG9ubHlPd25lciBwdWJsaWMgewogICAgICAgIHRyYW5zZmVyQWxsb3dlZCA9IHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gbWludChhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIG9ubHlPd25lciBzYWxlSXNPbiBjYW5NaW50IHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICAgICAgcmVxdWlyZShfdG8gIT0gYWRkcmVzcygwKSk7CgogICAgICAgIGlmKF92YWx1ZSArIHRvdGFsU3VwcGx5IDw9IGhhcmRjYXApewoKICAgICAgICAgICAgdG90YWxTdXBwbHkgPSB0b3RhbFN1cHBseSArIF92YWx1ZTsKCiAgICAgICAgICAgIGFzc2VydCh0b3RhbFN1cHBseSA+PSBfdmFsdWUpOwoKICAgICAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBiYWxhbmNlc1ttc2cuc2VuZGVyXSArIF92YWx1ZTsKICAgICAgICAgICAgYXNzZXJ0KGJhbGFuY2VzW21zZy5zZW5kZXJdID49IF92YWx1ZSk7CiAgICAgICAgICAgIE1pbnQobXNnLnNlbmRlciwgX3ZhbHVlKTsKCiAgICAgICAgICAgIHRyYW5zZmVyKF90bywgX3ZhbHVlKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gZmluaXNoTWludGluZygpIG9ubHlPd25lciBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgICAgIG1pbnRpbmdGaW5pc2hlZCA9IHRydWU7CiAgICAgICAgTWludEZpbmlzaGVkKCk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgLyoqCiAgICAgKiBAZGV2IEJ1cm5zIGEgc3BlY2lmaWMgYW1vdW50IG9mIHRva2Vucy4KICAgICAqIEBwYXJhbSBfdmFsdWUgVGhlIGFtb3VudCBvZiB0b2tlbiB0byBiZSBidXJuZWQuCiAgICAgKi8KICAgIGZ1bmN0aW9uIGJ1cm4odWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICAgICAgcmVxdWlyZShfdmFsdWUgPD0gYmFsYW5jZXNbbXNnLnNlbmRlcl0pOwogICAgICAgIC8vIG5vIG5lZWQgdG8gcmVxdWlyZSB2YWx1ZSA8PSB0b3RhbFN1cHBseSwgc2luY2UgdGhhdCB3b3VsZCBpbXBseSB0aGUKICAgICAgICAvLyBzZW5kZXIncyBiYWxhbmNlIGlzIGdyZWF0ZXIgdGhhbiB0aGUgdG90YWxTdXBwbHksIHdoaWNoICpzaG91bGQqIGJlIGFuIGFzc2VydGlvbiBmYWlsdXJlCiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtIF92YWx1ZTsKICAgICAgICB0b3RhbFN1cHBseSA9IHRvdGFsU3VwcGx5IC0gX3ZhbHVlOwogICAgICAgIEJ1cm4obXNnLnNlbmRlciwgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBidXJuRnJvbShhZGRyZXNzIF9mcm9tLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIHJlcXVpcmUoX3ZhbHVlIDw9IGJhbGFuY2VzW19mcm9tXSk7CiAgICAgICAgcmVxdWlyZShfdmFsdWUgPD0gYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0pOwogICAgICAgIGJhbGFuY2VzW19mcm9tXSA9IGJhbGFuY2VzW19mcm9tXSAtIF92YWx1ZTsKICAgICAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA9IGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdIC0gX3ZhbHVlOwogICAgICAgIHRvdGFsU3VwcGx5ID0gdG90YWxTdXBwbHkgLSBfdmFsdWU7CiAgICAgICAgQnVybihfZnJvbSwgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHZhbHVlKTsKCiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBzcGVuZGVyLCB1aW50MjU2IHZhbHVlKTsKCiAgICBldmVudCBNaW50KGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiBhbW91bnQpOwoKICAgIGV2ZW50IE1pbnRGaW5pc2hlZCgpOwoKICAgIGV2ZW50IEJ1cm4oYWRkcmVzcyBpbmRleGVkIGJ1cm5lciwgdWludDI1NiB2YWx1ZSk7Cgp9'.
	

]
