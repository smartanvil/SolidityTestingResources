Class {
	#name : #SRT041d26dcceda7fd82898cd7dce0ae7da6031ee51,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT041d26dcceda7fd82898cd7dce0ae7da6031ee51 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7Cgpjb250cmFjdCBTaW1wbGVBdWN0aW9uIHsKICAgIC8vIFBhcmFtZXRlcnMgb2YgdGhlIGF1Y3Rpb24uIFRpbWVzIGFyZSBlaXRoZXIKICAgIC8vIGFic29sdXRlIHVuaXggdGltZXN0YW1wcyAoc2Vjb25kcyBzaW5jZSAxOTcwLTAxLTAxKQogICAgLy8gb3IgdGltZSBwZXJpb2RzIGluIHNlY29uZHMuCiAgICBhZGRyZXNzIHB1YmxpYyBiZW5lZmljaWFyeTsKICAgIHVpbnQgcHVibGljIGF1Y3Rpb25TdGFydDsKICAgIHVpbnQgcHVibGljIGJpZGRpbmdUaW1lOwoKICAgIC8vIEN1cnJlbnQgc3RhdGUgb2YgdGhlIGF1Y3Rpb24uCiAgICBhZGRyZXNzIHB1YmxpYyBoaWdoZXN0QmlkZGVyOwogICAgdWludCBwdWJsaWMgaGlnaGVzdEJpZDsKCiAgICAvLyBBbGxvd2VkIHdpdGhkcmF3YWxzIG9mIHByZXZpb3VzIGJpZHMKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50KSBwZW5kaW5nUmV0dXJuczsKCiAgICAvLyBTZXQgdG8gdHJ1ZSBhdCB0aGUgZW5kLCBkaXNhbGxvd3MgYW55IGNoYW5nZQogICAgYm9vbCBlbmRlZDsKCiAgICAvLyBFdmVudHMgdGhhdCB3aWxsIGJlIGZpcmVkIG9uIGNoYW5nZXMuCiAgICBldmVudCBIaWdoZXN0QmlkSW5jcmVhc2VkKGFkZHJlc3MgYmlkZGVyLCB1aW50IGFtb3VudCk7CiAgICBldmVudCBBdWN0aW9uRW5kZWQoYWRkcmVzcyB3aW5uZXIsIHVpbnQgYW1vdW50KTsKCiAgICAvLyBUaGUgZm9sbG93aW5nIGlzIGEgc28tY2FsbGVkIG5hdHNwZWMgY29tbWVudCwKICAgIC8vIHJlY29nbml6YWJsZSBieSB0aGUgdGhyZWUgc2xhc2hlcy4KICAgIC8vIEl0IHdpbGwgYmUgc2hvd24gd2hlbiB0aGUgdXNlciBpcyBhc2tlZCB0bwogICAgLy8gY29uZmlybSBhIHRyYW5zYWN0aW9uLgoKICAgIC8vLyBDcmVhdGUgYSBzaW1wbGUgYXVjdGlvbiB3aXRoIGBfYmlkZGluZ1RpbWVgCiAgICAvLy8gc2Vjb25kcyBiaWRkaW5nIHRpbWUgb24gYmVoYWxmIG9mIHRoZQogICAgLy8vIGJlbmVmaWNpYXJ5IGFkZHJlc3MgYF9iZW5lZmljaWFyeWAuCiAgICBmdW5jdGlvbiBTaW1wbGVBdWN0aW9uKCkgewogICAgICAgIGJlbmVmaWNpYXJ5ID0gMHhjMjc1Mjc1MUU2QjkxNzM2ZDVhMmU4RTMxMzM2REM3QzcyMjBlOEZDOwogICAgICAgIGF1Y3Rpb25TdGFydCA9IG5vdzsKICAgICAgICBiaWRkaW5nVGltZSA9IDYwMDsKICAgIH0KCiAgICAvLy8gQmlkIG9uIHRoZSBhdWN0aW9uIHdpdGggdGhlIHZhbHVlIHNlbnQKICAgIC8vLyB0b2dldGhlciB3aXRoIHRoaXMgdHJhbnNhY3Rpb24uCiAgICAvLy8gVGhlIHZhbHVlIHdpbGwgb25seSBiZSByZWZ1bmRlZCBpZiB0aGUKICAgIC8vLyBhdWN0aW9uIGlzIG5vdCB3b24uCiAgICBmdW5jdGlvbiBiaWQoKSBwYXlhYmxlIHsKICAgICAgICAvLyBObyBhcmd1bWVudHMgYXJlIG5lY2Vzc2FyeSwgYWxsCiAgICAgICAgLy8gaW5mb3JtYXRpb24gaXMgYWxyZWFkeSBwYXJ0IG9mCiAgICAgICAgLy8gdGhlIHRyYW5zYWN0aW9uLiBUaGUga2V5d29yZCBwYXlhYmxlCiAgICAgICAgLy8gaXMgcmVxdWlyZWQgZm9yIHRoZSBmdW5jdGlvbiB0bwogICAgICAgIC8vIGJlIGFibGUgdG8gcmVjZWl2ZSBFdGhlci4KCiAgICAgICAgLy8gUmV2ZXJ0IHRoZSBjYWxsIGlmIHRoZSBiaWRkaW5nCiAgICAgICAgLy8gcGVyaW9kIGlzIG92ZXIuCiAgICAgICAgcmVxdWlyZShub3cgPD0gKGF1Y3Rpb25TdGFydCArIGJpZGRpbmdUaW1lKSk7CgogICAgICAgIC8vIElmIHRoZSBiaWQgaXMgbm90IGhpZ2hlciwgc2VuZCB0aGUKICAgICAgICAvLyBtb25leSBiYWNrLgogICAgICAgIHJlcXVpcmUobXNnLnZhbHVlID4gaGlnaGVzdEJpZCk7CgogICAgICAgIGlmIChoaWdoZXN0QmlkZGVyICE9IDApIHsKICAgICAgICAgICAgLy8gU2VuZGluZyBiYWNrIHRoZSBtb25leSBieSBzaW1wbHkgdXNpbmcKICAgICAgICAgICAgLy8gaGlnaGVzdEJpZGRlci5zZW5kKGhpZ2hlc3RCaWQpIGlzIGEgc2VjdXJpdHkgcmlzawogICAgICAgICAgICAvLyBiZWNhdXNlIGl0IGNhbiBiZSBwcmV2ZW50ZWQgYnkgdGhlIGNhbGxlciBieSBlLmcuCiAgICAgICAgICAgIC8vIHJhaXNpbmcgdGhlIGNhbGwgc3RhY2sgdG8gMTAyMy4gSXQgaXMgYWx3YXlzIHNhZmVyCiAgICAgICAgICAgIC8vIHRvIGxldCB0aGUgcmVjaXBpZW50cyB3aXRoZHJhdyB0aGVpciBtb25leSB0aGVtc2VsdmVzLgogICAgICAgICAgICBwZW5kaW5nUmV0dXJuc1toaWdoZXN0QmlkZGVyXSArPSBoaWdoZXN0QmlkOwogICAgICAgIH0KICAgICAgICBoaWdoZXN0QmlkZGVyID0gbXNnLnNlbmRlcjsKICAgICAgICBoaWdoZXN0QmlkID0gbXNnLnZhbHVlOwogICAgICAgIEhpZ2hlc3RCaWRJbmNyZWFzZWQobXNnLnNlbmRlciwgbXNnLnZhbHVlKTsKICAgIH0KCiAgICAvLy8gV2l0aGRyYXcgYSBiaWQgdGhhdCB3YXMgb3ZlcmJpZC4KICAgIGZ1bmN0aW9uIHdpdGhkcmF3KCkgcmV0dXJucyAoYm9vbCkgewogICAgICAgIHVpbnQgYW1vdW50ID0gcGVuZGluZ1JldHVybnNbbXNnLnNlbmRlcl07CiAgICAgICAgaWYgKGFtb3VudCA+IDApIHsKICAgICAgICAgICAgLy8gSXQgaXMgaW1wb3J0YW50IHRvIHNldCB0aGlzIHRvIHplcm8gYmVjYXVzZSB0aGUgcmVjaXBpZW50CiAgICAgICAgICAgIC8vIGNhbiBjYWxsIHRoaXMgZnVuY3Rpb24gYWdhaW4gYXMgcGFydCBvZiB0aGUgcmVjZWl2aW5nIGNhbGwKICAgICAgICAgICAgLy8gYmVmb3JlIGBzZW5kYCByZXR1cm5zLgogICAgICAgICAgICBwZW5kaW5nUmV0dXJuc1ttc2cuc2VuZGVyXSA9IDA7CgogICAgICAgICAgICBpZiAoIW1zZy5zZW5kZXIuc2VuZChhbW91bnQpKSB7CiAgICAgICAgICAgICAgICAvLyBObyBuZWVkIHRvIGNhbGwgdGhyb3cgaGVyZSwganVzdCByZXNldCB0aGUgYW1vdW50IG93aW5nCiAgICAgICAgICAgICAgICBwZW5kaW5nUmV0dXJuc1ttc2cuc2VuZGVyXSA9IGFtb3VudDsKICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIC8vIFVzZXJzIHdhbnQgdG8ga25vdyB3aGVuIHRoZSBhdWN0aW9uIGVuZHMsIHNlY29uZHMgZnJvbSAxOTcwLTAxLTAxCiAgICBmdW5jdGlvbiBhdWN0aW9uRW5kVGltZSgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICByZXR1cm4gYXVjdGlvblN0YXJ0ICsgYmlkZGluZ1RpbWU7CiAgICB9CiAgICAKICAgIC8vLyBFbmQgdGhlIGF1Y3Rpb24gYW5kIHNlbmQgdGhlIGhpZ2hlc3QgYmlkCiAgICAvLy8gdG8gdGhlIGJlbmVmaWNpYXJ5LgogICAgZnVuY3Rpb24gYXVjdGlvbkVuZCgpIHsKICAgICAgICAvLyBJdCBpcyBhIGdvb2QgZ3VpZGVsaW5lIHRvIHN0cnVjdHVyZSBmdW5jdGlvbnMgdGhhdCBpbnRlcmFjdAogICAgICAgIC8vIHdpdGggb3RoZXIgY29udHJhY3RzIChpLmUuIHRoZXkgY2FsbCBmdW5jdGlvbnMgb3Igc2VuZCBFdGhlcikKICAgICAgICAvLyBpbnRvIHRocmVlIHBoYXNlczoKICAgICAgICAvLyAxLiBjaGVja2luZyBjb25kaXRpb25zCiAgICAgICAgLy8gMi4gcGVyZm9ybWluZyBhY3Rpb25zIChwb3RlbnRpYWxseSBjaGFuZ2luZyBjb25kaXRpb25zKQogICAgICAgIC8vIDMuIGludGVyYWN0aW5nIHdpdGggb3RoZXIgY29udHJhY3RzCiAgICAgICAgLy8gSWYgdGhlc2UgcGhhc2VzIGFyZSBtaXhlZCB1cCwgdGhlIG90aGVyIGNvbnRyYWN0IGNvdWxkIGNhbGwKICAgICAgICAvLyBiYWNrIGludG8gdGhlIGN1cnJlbnQgY29udHJhY3QgYW5kIG1vZGlmeSB0aGUgc3RhdGUgb3IgY2F1c2UKICAgICAgICAvLyBlZmZlY3RzIChldGhlciBwYXlvdXQpIHRvIGJlIHBlcmZvcm1lZCBtdWx0aXBsZSB0aW1lcy4KICAgICAgICAvLyBJZiBmdW5jdGlvbnMgY2FsbGVkIGludGVybmFsbHkgaW5jbHVkZSBpbnRlcmFjdGlvbiB3aXRoIGV4dGVybmFsCiAgICAgICAgLy8gY29udHJhY3RzLCB0aGV5IGFsc28gaGF2ZSB0byBiZSBjb25zaWRlcmVkIGludGVyYWN0aW9uIHdpdGgKICAgICAgICAvLyBleHRlcm5hbCBjb250cmFjdHMuCgogICAgICAgIC8vIDEuIENvbmRpdGlvbnMKICAgICAgICByZXF1aXJlKG5vdyA+PSAoYXVjdGlvblN0YXJ0ICsgYmlkZGluZ1RpbWUpKTsgLy8gYXVjdGlvbiBkaWQgbm90IHlldCBlbmQKICAgICAgICByZXF1aXJlKCFlbmRlZCk7IC8vIHRoaXMgZnVuY3Rpb24gaGFzIGFscmVhZHkgYmVlbiBjYWxsZWQKCiAgICAgICAgLy8gMi4gRWZmZWN0cwogICAgICAgIGVuZGVkID0gdHJ1ZTsKICAgICAgICBBdWN0aW9uRW5kZWQoaGlnaGVzdEJpZGRlciwgaGlnaGVzdEJpZCk7CgogICAgICAgIC8vIDMuIEludGVyYWN0aW9uCiAgICAgICAgYmVuZWZpY2lhcnkudHJhbnNmZXIoaGlnaGVzdEJpZCk7CiAgICB9Cn0='.
	

]
