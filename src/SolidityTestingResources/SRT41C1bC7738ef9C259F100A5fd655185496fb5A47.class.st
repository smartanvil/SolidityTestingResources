Class {
	#name : #SRT41C1bC7738ef9C259F100A5fd655185496fb5A47,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT41C1bC7738ef9C259F100A5fd655185496fb5A47 >> base64 [
	^ ''.
	

]
