Class {
	#name : #SRTf88629b22dcd3b3eff99b63f7380bac3f939d8a8,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTf88629b22dcd3b3eff99b63f7380bac3f939d8a8 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMjA7CgovLyB2LjEuMC4wICAyMDE4LjA0LjAyCmNvbnRyYWN0IHNvY2NlckdvIHsKICAgIGFkZHJlc3MgcHJpdmF0ZSBvd25lcjsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gYm9vbCkgcHJpdmF0ZSBhZG1pbnM7CiAgICAKICAgIHVpbnQyNTYgZ2FtZUlkID0gMDsKICAgIGFkZHJlc3MgY2FsbEFkZHIgPSAweDA7CiAgICAKICAgIGV2ZW50IHNob3dQbGF5ZXJBZGRyZXNzKGFkZHJlc3MpOwogICAgZXZlbnQgc2hvd1BsYXllckJldCh1aW50MjU2KTsKICAgIGV2ZW50IHNob3dCZXRMZWZ0KHVpbnQyNTYpOwogICAgZXZlbnQgc2hvd0JldFJpZ2h0KHVpbnQyNTYpOwogICAgZXZlbnQgc2hvd1Jlc3VsdCh1aW50MjU2KTsKICAgIGV2ZW50IHNob3dDb3VudCh1aW50MjU2KTsKICAgIGV2ZW50IHNob3dUaW1lU3RhbXAodWludDI1Nik7CiAgICBldmVudCBzaG93V2luVmFsdWUodWludDI1Nik7CiAgICAKICAgIC8vIFdpbiBsaW1pdAogICAgdWludFtdIHByaXZhdGUgc2xvdF9saW1pdDsKICAgIAogICAgLy8gRGV2IGZlZQogICAgdWludDI1NiBmZWUgPSA5OTsKICAgIAogICAgLy8gU2xvdCAxfjEwIHdpbiBsaW1pdCBzZXR0aW5ncwogICAgZnVuY3Rpb24gU2V0TGltaXQodWludCBfc2xvdCwgdWludCB3aW5fbGltaXQpIG9ubHlBZG1pbnMoKSBwdWJsaWMgewogICAgICAgIHJlcXVpcmUoX3Nsb3QgPiAwICYmIF9zbG90IDwgMTIpOwogICAgICAgIHNsb3RfbGltaXRbX3Nsb3QgLSAxXSA9IHdpbl9saW1pdDsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gc29jY2VyR28oKSBwdWJsaWMgewogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgICAgICBhZG1pbnNbb3duZXJdID0gdHJ1ZTsKICAgICAgICAKICAgICAgICAvLyBSVFAgOTclIH4gOTglCiAgICAgICAgc2xvdF9saW1pdC5sZW5ndGggPSAxMTsKICAgICAgICBzbG90X2xpbWl0WzBdID0gMTE3MDsKICAgICAgICBzbG90X2xpbWl0WzFdID0gNjExOwogICAgICAgIHNsb3RfbGltaXRbMl0gPSA0MTY7CiAgICAgICAgc2xvdF9saW1pdFszXSA9IDMxNTsKICAgICAgICBzbG90X2xpbWl0WzRdID0gMjUzOwogICAgICAgIHNsb3RfbGltaXRbNV0gPSAyMTI7CiAgICAgICAgc2xvdF9saW1pdFs2XSA9IDE4MjsKICAgICAgICBzbG90X2xpbWl0WzddID0gMTU5OwogICAgICAgIHNsb3RfbGltaXRbOF0gPSAxNDE7CiAgICAgICAgc2xvdF9saW1pdFs5XSA9IDEyNzsKICAgICAgICBzbG90X2xpbWl0WzEwXSA9IDExNTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gY29udHJhY3RCYWxhbmNlKCkgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHJldHVybiB0aGlzLmJhbGFuY2U7CiAgICB9CiAgICAKICAgIC8vIEJldCBsaW1pdAogICAgdWludDI1NiBwcml2YXRlIG1pbl92YWx1ZSA9IDAuMSBldGhlcjsKICAgIHVpbnQyNTYgcHJpdmF0ZSBtYXhfdmFsdWUgPSAwLjMgZXRoZXI7CiAgICAKICAgIC8vIFNldEJldExpbWl0CiAgICBmdW5jdGlvbiBzZXRCZXRMaW1pdCh1aW50MjU2IG1pbiwgdWludDI1NiBtYXgpIHB1YmxpYyBvbmx5QWRtaW5zKCkgewogICAgICAgIHVpbnQyNTYgYmFzZV9iZXQgPSAwLjEgZXRoZXI7CiAgICAgICAgbWluX3ZhbHVlID0gYmFzZV9iZXQgKiBtaW47CiAgICAgICAgbWF4X3ZhbHVlID0gYmFzZV9iZXQgKiBtYXg7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIHNldENhbGxlZUNvbnRyYWN0KGFkZHJlc3MgX2NhbGxlcikgcHVibGljIG9ubHlBZG1pbnMoKSB7CiAgICAgICAgY2FsbEFkZHIgPSBfY2FsbGVyOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBwbGF5VHlwZXModWludCBfc2xvdF9jb3VudCkgaW50ZXJuYWwgcmV0dXJucyAodWludCkgewogICAgICAgIHJldHVybiAoc2xvdF9saW1pdFtfc2xvdF9jb3VudCAtIDFdKTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gZ2V0UmFuZG9tKGFkZHJlc3MgX2NhbGwpIGludGVybmFsIHJldHVybnModWludCkgewogICAgICAgIENhbGxlZSBjID0gQ2FsbGVlKF9jYWxsKTsKICAgICAgICByZXR1cm4gYy5yYW5kb20oY29udHJhY3RCYWxhbmNlKCksIG1zZy52YWx1ZSwgbXNnLnNlbmRlcik7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIHNldERldmZlZSh1aW50MjU2IF92YWx1ZSkgaW50ZXJuYWwgb25seUFkbWlucygpIHsKICAgICAgICBmZWUgPSBfdmFsdWU7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGJ1eSh1aW50MjU2IF9sZWZ0LCB1aW50MjU2IF9yaWdodCkKICAgIHB1YmxpYwogICAgcGF5YWJsZQogICAgewogICAgICAgIHJlcXVpcmUoX2xlZnQgPj0gMSAmJiBfbGVmdCA8PSAxMyk7CiAgICAgICAgcmVxdWlyZShfcmlnaHQgPj0gMSAmJiBfcmlnaHQgPD0gMTMpOwogICAgICAgIHJlcXVpcmUoX3JpZ2h0IC0gX2xlZnQgPj0gMSk7CiAgICAgICAgcmVxdWlyZShtc2cudmFsdWUgPj0gbWluX3ZhbHVlKTsKICAgICAgICByZXF1aXJlKG1zZy52YWx1ZSA8PSBtYXhfdmFsdWUpOwogICAgICAgIAogICAgICAgIHVpbnQyNTYgYmV0VmFsdWUgPSBtc2cudmFsdWU7CiAgICAgICAgdWludDI1NiByZXN1bHQgPSBnZXRSYW5kb20oY2FsbEFkZHIpOwogICAgICAgIHVpbnQyNTYgdHlwZXMgPSBwbGF5VHlwZXMoX3JpZ2h0IC0gX2xlZnQgLSAxKTsKICAgICAgICB1aW50MjU2IHdpblZhbHVlID0gMDsKICAgICAgICBnYW1lSWQrKzsKICAgICAgICAKICAgICAgICBpZiAocmVzdWx0ID4gX2xlZnQgJiYgcmVzdWx0IDwgX3JpZ2h0KSB7CiAgICAgICAgICAgIHdpblZhbHVlID0gYmV0VmFsdWUgKiB0eXBlcyAvIDEwMDsKICAgICAgICAgICAgbXNnLnNlbmRlci50cmFuc2Zlcigod2luVmFsdWUgKiBmZWUpIC8gMTAwKTsKICAgICAgICB9CgogICAgICAgIHNob3dQbGF5ZXJBZGRyZXNzKG1zZy5zZW5kZXIpOwogICAgICAgIHNob3dQbGF5ZXJCZXQoYmV0VmFsdWUpOwogICAgICAgIHNob3dCZXRMZWZ0KF9sZWZ0KTsKICAgICAgICBzaG93QmV0UmlnaHQoX3JpZ2h0KTsKICAgICAgICBzaG93UmVzdWx0KHJlc3VsdCk7CiAgICAgICAgc2hvd0NvdW50KGdhbWVJZCk7CiAgICAgICAgc2hvd1RpbWVTdGFtcChub3cpOwogICAgICAgIHNob3dXaW5WYWx1ZSh3aW5WYWx1ZSk7CiAgICB9CiAgICAKICAgIC8qIERlcG9pdCAqLwogICAgZnVuY3Rpb24oKSBwYXlhYmxlIHB1YmxpYyB7IH0KICAgIAogICAgLyogV2l0aGRyYXcgKi8KICAgIGZ1bmN0aW9uIHdpdGhkcmF3QWxsKCkgb25seU93bmVyKCkgCiAgICBwdWJsaWMgCiAgICB7CiAgICAgICAgb3duZXIudHJhbnNmZXIodGhpcy5iYWxhbmNlKTsKICAgIH0KCiAgICBmdW5jdGlvbiB3aXRoZHJhd0Ftb3VudCh1aW50MjU2IF9hbW91bnQpIG9ubHlPd25lcigpIAogICAgcHVibGljIAogICAgewogICAgICAgIHVpbnQyNTYgdmFsdWUgPSAxLjAgZXRoZXI7CiAgICAgICAgb3duZXIudHJhbnNmZXIoX2Ftb3VudCAqIHZhbHVlKTsKICAgIH0KICAgIAogICAgLyogTW9kaWZpZXJzICovCiAgICBtb2RpZmllciBvbmx5T3duZXIoKSAKICAgIHsKICAgICAgICByZXF1aXJlKG93bmVyID09IG1zZy5zZW5kZXIpOwogICAgICAgIF87CiAgICB9CgogICAgbW9kaWZpZXIgb25seUFkbWlucygpIAogICAgewogICAgICAgIHJlcXVpcmUoYWRtaW5zW21zZy5zZW5kZXJdKTsKICAgICAgICBfOwogICAgfQogIAogICAgLyogT3duZXIgKi8KICAgIGZ1bmN0aW9uIHNldE93bmVyIChhZGRyZXNzIF9vd25lcikgb25seU93bmVyKCkgCiAgICBwdWJsaWMgCiAgICB7CiAgICAgICAgb3duZXIgPSBfb3duZXI7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGFkZEFkbWluIChhZGRyZXNzIF9hZG1pbikgb25seU93bmVyKCkgCiAgICBwdWJsaWMgCiAgICB7CiAgICAgICAgYWRtaW5zW19hZG1pbl0gPSB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIHJlbW92ZUFkbWluIChhZGRyZXNzIF9hZG1pbikgb25seU93bmVyKCkgCiAgICBwdWJsaWMgCiAgICB7CiAgICAgICAgZGVsZXRlIGFkbWluc1tfYWRtaW5dOwogICAgfQp9CgoKY29udHJhY3QgQ2FsbGVlIHsKICAgIGZ1bmN0aW9uIHJhbmRvbSh1aW50MjU2IF9iYWxhbmNlLCB1aW50MjU2IF92YWx1ZSwgYWRkcmVzcyBfcGxheWVyKSByZXR1cm5zKHVpbnQpOwp9'.
	

]
