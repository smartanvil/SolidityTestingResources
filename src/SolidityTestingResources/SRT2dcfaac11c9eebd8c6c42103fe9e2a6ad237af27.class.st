Class {
	#name : #SRT2dcfaac11c9eebd8c6c42103fe9e2a6ad237af27,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT2dcfaac11c9eebd8c6c42103fe9e2a6ad237af27 >> base64 [
	^ ''.
	

]
