Class {
	#name : #SRT267808e5246d14ac39720aa62da5b33651b680ce,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT267808e5246d14ac39720aa62da5b33651b680ce >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5ID49MC40LjQ7CgovL2Zyb20gWmVwcGVsaW4KY29udHJhY3QgU2FmZU1hdGggewogICAgZnVuY3Rpb24gc2FmZU11bCh1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgewogICAgICAgIHVpbnQgYyA9IGEgKiBiOwogICAgICAgIGFzc2VydChhID09IDAgfHwgYyAvIGEgPT0gYik7CiAgICAgICAgcmV0dXJuIGM7CiAgICB9CgogICAgZnVuY3Rpb24gc2FmZVN1Yih1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgewogICAgICAgIGFzc2VydChiIDw9IGEpOwogICAgICAgIHJldHVybiBhIC0gYjsKICAgIH0KCiAgICBmdW5jdGlvbiBzYWZlQWRkKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7CiAgICAgICAgdWludCBjID0gYSArIGI7CiAgICAgICAgYXNzZXJ0KGM+PWEgJiYgYz49Yik7CiAgICAgICAgcmV0dXJuIGM7CiAgICB9CgogICAgZnVuY3Rpb24gYXNzZXJ0KGJvb2wgYXNzZXJ0aW9uKSBpbnRlcm5hbCB7CiAgICAgICAgaWYgKCFhc3NlcnRpb24pIHRocm93OwogICAgfQp9Cgpjb250cmFjdCBPd25lZCB7CiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKCiAgICBmdW5jdGlvbiBPd25lZCgpIHsKICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgICB9CgogICAgbW9kaWZpZXIgb25seU93bmVyKCkgewogICAgICAgIGlmIChtc2cuc2VuZGVyICE9IG93bmVyKSB0aHJvdzsKICAgICAgICBfOwogICAgfQoKICAgIGFkZHJlc3MgbmV3T3duZXI7CgogICAgZnVuY3Rpb24gY2hhbmdlT3duZXIoYWRkcmVzcyBfbmV3T3duZXIpIG9ubHlPd25lciB7CiAgICAgICAgbmV3T3duZXIgPSBfbmV3T3duZXI7CiAgICB9CgogICAgZnVuY3Rpb24gYWNjZXB0T3duZXJzaGlwKCkgewogICAgICAgIGlmIChtc2cuc2VuZGVyID09IG5ld093bmVyKSB7CiAgICAgICAgICAgIG93bmVyID0gbmV3T3duZXI7CiAgICAgICAgfQogICAgfQp9Cgpjb250cmFjdCBGaW5hbGl6YWJsZSBpcyBPd25lZCB7CiAgICBib29sIHB1YmxpYyBmaW5hbGl6ZWQ7CgogICAgZnVuY3Rpb24gZmluYWxpemUoKSBvbmx5T3duZXIgewogICAgICAgIGZpbmFsaXplZCA9IHRydWU7CiAgICB9CgogICAgbW9kaWZpZXIgbm90RmluYWxpemVkKCkgewogICAgICAgIGlmIChmaW5hbGl6ZWQpIHRocm93OwogICAgICAgIF87CiAgICB9Cn0KCmNvbnRyYWN0IElUb2tlbiB7CiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludCBfdmFsdWUpIHJldHVybnMgKGJvb2wpOwogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3Mgb3duZXIpIHJldHVybnModWludCk7Cn0KCmNvbnRyYWN0IFRva2VuUmVjZWl2YWJsZSBpcyBPd25lZCB7CiAgICBldmVudCBsb2dUb2tlblRyYW5zZmVyKGFkZHJlc3MgdG9rZW4sIGFkZHJlc3MgdG8sIHVpbnQgYW1vdW50KTsKCiAgICBmdW5jdGlvbiBjbGFpbVRva2VucyhhZGRyZXNzIF90b2tlbiwgYWRkcmVzcyBfdG8pIG9ubHlPd25lciByZXR1cm5zIChib29sKSB7CiAgICAgICAgSVRva2VuIHRva2VuID0gSVRva2VuKF90b2tlbik7CiAgICAgICAgdWludCBiYWxhbmNlID0gdG9rZW4uYmFsYW5jZU9mKHRoaXMpOwogICAgICAgIGlmICh0b2tlbi50cmFuc2ZlcihfdG8sIGJhbGFuY2UpKSB7CiAgICAgICAgICAgIGxvZ1Rva2VuVHJhbnNmZXIoX3Rva2VuLCBfdG8sIGJhbGFuY2UpOwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQp9Cgpjb250cmFjdCBFdmVudERlZmluaXRpb25zIHsKICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBmcm9tLCBhZGRyZXNzIGluZGV4ZWQgdG8sIHVpbnQgdmFsdWUpOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIG93bmVyLCBhZGRyZXNzIGluZGV4ZWQgc3BlbmRlciwgdWludCB2YWx1ZSk7Cn0KCmNvbnRyYWN0IFRva2VuIGlzIEZpbmFsaXphYmxlLCBUb2tlblJlY2VpdmFibGUsIFNhZmVNYXRoLCBFdmVudERlZmluaXRpb25zIHsKCiAgICBzdHJpbmcgcHVibGljIG5hbWUgPSAiRnVuRmFpciI7CiAgICB1aW50OCBwdWJsaWMgZGVjaW1hbHMgPSA4OwogICAgc3RyaW5nIHB1YmxpYyBzeW1ib2wgPSAiRlVOIjsKCiAgICBDb250cm9sbGVyIGNvbnRyb2xsZXI7CiAgICBhZGRyZXNzIG93bmVyOwoKICAgIG1vZGlmaWVyIG9ubHlDb250cm9sbGVyKCkgewogICAgICAgIGFzc2VydChtc2cuc2VuZGVyID09IGFkZHJlc3MoY29udHJvbGxlcikpOwogICAgICAgIF87CiAgICB9CgogICAgZnVuY3Rpb24gc2V0Q29udHJvbGxlcihhZGRyZXNzIF9jKSBvbmx5T3duZXIgbm90RmluYWxpemVkIHsKICAgICAgICBjb250cm9sbGVyID0gQ29udHJvbGxlcihfYyk7CiAgICB9CgogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgYSkgY29uc3RhbnQgcmV0dXJucyAodWludCkgewogICAgICAgIHJldHVybiBjb250cm9sbGVyLmJhbGFuY2VPZihhKTsKICAgIH0KCiAgICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQpIHsKICAgICAgICByZXR1cm4gY29udHJvbGxlci50b3RhbFN1cHBseSgpOwogICAgfQoKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludCkgewogICAgICAgIHJldHVybiBjb250cm9sbGVyLmFsbG93YW5jZShfb3duZXIsIF9zcGVuZGVyKTsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludCBfdmFsdWUpCiAgICBvbmx5UGF5bG9hZFNpemUoMikKICAgIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgc3VjY2VzcyA9IGNvbnRyb2xsZXIudHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgICAgIGlmIChzdWNjZXNzKSB7CiAgICAgICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSkKICAgIG9ubHlQYXlsb2FkU2l6ZSgzKQogICAgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICBzdWNjZXNzID0gY29udHJvbGxlci50cmFuc2ZlckZyb20obXNnLnNlbmRlciwgX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICBpZiAoc3VjY2VzcykgewogICAgICAgICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQgX3ZhbHVlKQogICAgb25seVBheWxvYWRTaXplKDIpCiAgICByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICAvL3Byb21vdGUgc2FmZSB1c2VyIGJlaGF2aW9yCiAgICAgICAgaWYgKGNvbnRyb2xsZXIuYWxsb3dhbmNlKG1zZy5zZW5kZXIsIF9zcGVuZGVyKSA+IDApIHRocm93OwoKICAgICAgICBzdWNjZXNzID0gY29udHJvbGxlci5hcHByb3ZlKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgICAgIGlmIChzdWNjZXNzKSB7CiAgICAgICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBpbmNyZWFzZUFwcHJvdmFsIChhZGRyZXNzIF9zcGVuZGVyLCB1aW50IF9hZGRlZFZhbHVlKQogICAgb25seVBheWxvYWRTaXplKDIpCiAgICByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBzdWNjZXNzID0gY29udHJvbGxlci5pbmNyZWFzZUFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfYWRkZWRWYWx1ZSk7CiAgICAgICAgaWYgKHN1Y2Nlc3MpIHsKICAgICAgICAgICAgdWludCBuZXd2YWwgPSBjb250cm9sbGVyLmFsbG93YW5jZShtc2cuc2VuZGVyLCBfc3BlbmRlcik7CiAgICAgICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBuZXd2YWwpOwogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBkZWNyZWFzZUFwcHJvdmFsIChhZGRyZXNzIF9zcGVuZGVyLCB1aW50IF9zdWJ0cmFjdGVkVmFsdWUpCiAgICBvbmx5UGF5bG9hZFNpemUoMikKICAgIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIHN1Y2Nlc3MgPSBjb250cm9sbGVyLmRlY3JlYXNlQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF9zdWJ0cmFjdGVkVmFsdWUpOwogICAgICAgIGlmIChzdWNjZXNzKSB7CiAgICAgICAgICAgIHVpbnQgbmV3dmFsID0gY29udHJvbGxlci5hbGxvd2FuY2UobXNnLnNlbmRlciwgX3NwZW5kZXIpOwogICAgICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgbmV3dmFsKTsKICAgICAgICB9CiAgICB9CgogICAgbW9kaWZpZXIgb25seVBheWxvYWRTaXplKHVpbnQgbnVtd29yZHMpIHsKICAgICAgICBhc3NlcnQobXNnLmRhdGEubGVuZ3RoID49IG51bXdvcmRzICogMzIgKyA0KTsKICAgICAgICBfOwogICAgfQoKICAgIGZ1bmN0aW9uIGJ1cm4odWludCBfYW1vdW50KSB7CiAgICAgICAgY29udHJvbGxlci5idXJuKG1zZy5zZW5kZXIsIF9hbW91bnQpOwogICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIDB4MCwgX2Ftb3VudCk7CiAgICB9CgogICAgZnVuY3Rpb24gY29udHJvbGxlclRyYW5zZmVyKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSkKICAgIG9ubHlDb250cm9sbGVyIHsKICAgICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwogICAgfQoKICAgIGZ1bmN0aW9uIGNvbnRyb2xsZXJBcHByb3ZlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyLCB1aW50IF92YWx1ZSkKICAgIG9ubHlDb250cm9sbGVyIHsKICAgICAgICBBcHByb3ZhbChfb3duZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgfQoKICAgIC8vbXVsdGktYXBwcm92ZSwgbXVsdGktdHJhbnNmZXIKCiAgICBib29sIHB1YmxpYyBtdWx0aWxvY2tlZDsKCiAgICBtb2RpZmllciBub3RNdWx0aWxvY2tlZCB7CiAgICAgICAgYXNzZXJ0KCFtdWx0aWxvY2tlZCk7CiAgICAgICAgXzsKICAgIH0KCiAgICAvL2RvIHdlIHdhbnQgbG9jayBwZXJtYW5lbnQ/IEkgdGhpbmsgc28uCiAgICBmdW5jdGlvbiBsb2NrTXVsdGlzKCkgb25seU93bmVyIHsKICAgICAgICBtdWx0aWxvY2tlZCA9IHRydWU7CiAgICB9CgogICAgLy9tdWx0aSBmdW5jdGlvbnMganVzdCBpc3N1ZSBldmVudHMsIHRvIGZpeCBpbml0aWFsIGV2ZW50IGhpc3RvcnkKCiAgICBmdW5jdGlvbiBtdWx0aVRyYW5zZmVyKHVpbnRbXSBiaXRzKSBvbmx5T3duZXIgbm90TXVsdGlsb2NrZWQgewogICAgICAgIGlmIChiaXRzLmxlbmd0aCAlIDMgIT0gMCkgdGhyb3c7CiAgICAgICAgZm9yICh1aW50IGk9MDsgaTxiaXRzLmxlbmd0aDsgaSArPSAzKSB7CiAgICAgICAgICAgIGFkZHJlc3MgZnJvbSA9IGFkZHJlc3MoYml0c1tpXSk7CiAgICAgICAgICAgIGFkZHJlc3MgdG8gPSBhZGRyZXNzKGJpdHNbaSsxXSk7CiAgICAgICAgICAgIHVpbnQgYW1vdW50ID0gYml0c1tpKzJdOwogICAgICAgICAgICBUcmFuc2Zlcihmcm9tLCB0bywgYW1vdW50KTsKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gbXVsdGlBcHByb3ZlKHVpbnRbXSBiaXRzKSBvbmx5T3duZXIgbm90TXVsdGlsb2NrZWQgewogICAgICAgIGlmIChiaXRzLmxlbmd0aCAlIDMgIT0gMCkgdGhyb3c7CiAgICAgICAgZm9yICh1aW50IGk9MDsgaTxiaXRzLmxlbmd0aDsgaSArPSAzKSB7CiAgICAgICAgICAgIGFkZHJlc3Mgb3duZXIgPSBhZGRyZXNzKGJpdHNbaV0pOwogICAgICAgICAgICBhZGRyZXNzIHNwZW5kZXIgPSBhZGRyZXNzKGJpdHNbaSsxXSk7CiAgICAgICAgICAgIHVpbnQgYW1vdW50ID0gYml0c1tpKzJdOwogICAgICAgICAgICBBcHByb3ZhbChvd25lciwgc3BlbmRlciwgYW1vdW50KTsKICAgICAgICB9CiAgICB9CgogICAgc3RyaW5nIHB1YmxpYyBtb3RkOwogICAgZXZlbnQgTW90ZChzdHJpbmcgbWVzc2FnZSk7CiAgICBmdW5jdGlvbiBzZXRNb3RkKHN0cmluZyBfbSkgb25seU93bmVyIHsKICAgICAgICBtb3RkID0gX207CiAgICAgICAgTW90ZChfbSk7CiAgICB9Cn0KCmNvbnRyYWN0IENvbnRyb2xsZXIgaXMgT3duZWQsIEZpbmFsaXphYmxlIHsKICAgIExlZGdlciBwdWJsaWMgbGVkZ2VyOwogICAgVG9rZW4gcHVibGljIHRva2VuOwogICAgYWRkcmVzcyBwdWJsaWMgb2xkVG9rZW47CiAgICBhZGRyZXNzIHB1YmxpYyBFdGhlckRlbHRhOwoKICAgIGZ1bmN0aW9uIHNldEV0aGVyRGVsdGEoYWRkcmVzcyBfYWRkcikgb25seU93bmVyIHsKICAgICAgICBFdGhlckRlbHRhID0gX2FkZHI7CiAgICB9CgogICAgZnVuY3Rpb24gc2V0T2xkVG9rZW4oYWRkcmVzcyBfdG9rZW4pIG9ubHlPd25lciB7CiAgICAgICAgb2xkVG9rZW4gPSBfdG9rZW47CiAgICB9CgogICAgZnVuY3Rpb24gc2V0VG9rZW4oYWRkcmVzcyBfdG9rZW4pIG9ubHlPd25lciB7CiAgICAgICAgdG9rZW4gPSBUb2tlbihfdG9rZW4pOwogICAgfQoKICAgIGZ1bmN0aW9uIHNldExlZGdlcihhZGRyZXNzIF9sZWRnZXIpIG9ubHlPd25lciB7CiAgICAgICAgbGVkZ2VyID0gTGVkZ2VyKF9sZWRnZXIpOwogICAgfQoKICAgIG1vZGlmaWVyIG9ubHlUb2tlbigpIHsKICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBhZGRyZXNzKHRva2VuKSAmJiBtc2cuc2VuZGVyICE9IG9sZFRva2VuKSB0aHJvdzsKICAgICAgICBfOwogICAgfQoKICAgIG1vZGlmaWVyIG9ubHlOZXdUb2tlbigpIHsKICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBhZGRyZXNzKHRva2VuKSkgdGhyb3c7CglfOwogICAgfQoKICAgIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgY29uc3RhbnQgcmV0dXJucyAodWludCkgewogICAgICAgIHJldHVybiBsZWRnZXIudG90YWxTdXBwbHkoKTsKICAgIH0KCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfYSkgb25seVRva2VuIGNvbnN0YW50IHJldHVybnMgKHVpbnQpIHsKICAgICAgICByZXR1cm4gTGVkZ2VyKGxlZGdlcikuYmFsYW5jZU9mKF9hKTsKICAgIH0KCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpCiAgICBvbmx5VG9rZW4gY29uc3RhbnQgcmV0dXJucyAodWludCkgewogICAgICAgIHJldHVybiBsZWRnZXIuYWxsb3dhbmNlKF9vd25lciwgX3NwZW5kZXIpOwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSkKICAgIG9ubHlUb2tlbgogICAgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgYXNzZXJ0KG1zZy5zZW5kZXIgIT0gb2xkVG9rZW4gfHwgX2Zyb20gPT0gRXRoZXJEZWx0YSk7CiAgICAgICAgYm9vbCBvayA9IGxlZGdlci50cmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwoJaWYgKG9rICYmIG1zZy5zZW5kZXIgPT0gb2xkVG9rZW4pCgkgICAgdG9rZW4uY29udHJvbGxlclRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7CglyZXR1cm4gb2s7CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX3NwZW5kZXIsIGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSkKICAgIG9ubHlUb2tlbgogICAgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgYXNzZXJ0KG1zZy5zZW5kZXIgIT0gb2xkVG9rZW4gfHwgX2Zyb20gPT0gRXRoZXJEZWx0YSk7CiAgICAgICAgYm9vbCBvayA9IGxlZGdlci50cmFuc2ZlckZyb20oX3NwZW5kZXIsIF9mcm9tLCBfdG8sIF92YWx1ZSk7CglpZiAob2sgJiYgbXNnLnNlbmRlciA9PSBvbGRUb2tlbikKCSAgICB0b2tlbi5jb250cm9sbGVyVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKCXJldHVybiBvazsKICAgIH0KCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyLCB1aW50IF92YWx1ZSkKICAgIG9ubHlOZXdUb2tlbgogICAgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgcmV0dXJuIGxlZGdlci5hcHByb3ZlKF9vd25lciwgX3NwZW5kZXIsIF92YWx1ZSk7CiAgICB9CgogICAgZnVuY3Rpb24gaW5jcmVhc2VBcHByb3ZhbCAoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQgX2FkZGVkVmFsdWUpCiAgICBvbmx5TmV3VG9rZW4KICAgIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIHJldHVybiBsZWRnZXIuaW5jcmVhc2VBcHByb3ZhbChfb3duZXIsIF9zcGVuZGVyLCBfYWRkZWRWYWx1ZSk7CiAgICB9CgogICAgZnVuY3Rpb24gZGVjcmVhc2VBcHByb3ZhbCAoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQgX3N1YnRyYWN0ZWRWYWx1ZSkKICAgIG9ubHlOZXdUb2tlbgogICAgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgcmV0dXJuIGxlZGdlci5kZWNyZWFzZUFwcHJvdmFsKF9vd25lciwgX3NwZW5kZXIsIF9zdWJ0cmFjdGVkVmFsdWUpOwogICAgfQoKICAgIGZ1bmN0aW9uIGJ1cm4oYWRkcmVzcyBfb3duZXIsIHVpbnQgX2Ftb3VudCkgb25seU5ld1Rva2VuIHsKICAgICAgICBsZWRnZXIuYnVybihfb3duZXIsIF9hbW91bnQpOwogICAgfQp9Cgpjb250cmFjdCBMZWRnZXIgaXMgT3duZWQsIFNhZmVNYXRoLCBGaW5hbGl6YWJsZSB7CiAgICBhZGRyZXNzIHB1YmxpYyBjb250cm9sbGVyOwogICAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQpIHB1YmxpYyBiYWxhbmNlT2Y7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludCkpIHB1YmxpYyBhbGxvd2FuY2U7CiAgICB1aW50IHB1YmxpYyB0b3RhbFN1cHBseTsKCiAgICBmdW5jdGlvbiBzZXRDb250cm9sbGVyKGFkZHJlc3MgX2NvbnRyb2xsZXIpIG9ubHlPd25lciBub3RGaW5hbGl6ZWQgewogICAgICAgIGNvbnRyb2xsZXIgPSBfY29udHJvbGxlcjsKICAgIH0KCiAgICBtb2RpZmllciBvbmx5Q29udHJvbGxlcigpIHsKICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBjb250cm9sbGVyKSB0aHJvdzsKICAgICAgICBfOwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSkKICAgIG9ubHlDb250cm9sbGVyCiAgICByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBpZiAoYmFsYW5jZU9mW19mcm9tXSA8IF92YWx1ZSkgcmV0dXJuIGZhbHNlOwoKICAgICAgICBiYWxhbmNlT2ZbX2Zyb21dID0gc2FmZVN1YihiYWxhbmNlT2ZbX2Zyb21dLCBfdmFsdWUpOwogICAgICAgIGJhbGFuY2VPZltfdG9dID0gc2FmZUFkZChiYWxhbmNlT2ZbX3RvXSwgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfc3BlbmRlciwgYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQgX3ZhbHVlKQogICAgb25seUNvbnRyb2xsZXIKICAgIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGlmIChiYWxhbmNlT2ZbX2Zyb21dIDwgX3ZhbHVlKSByZXR1cm4gZmFsc2U7CgogICAgICAgIHZhciBhbGxvd2VkID0gYWxsb3dhbmNlW19mcm9tXVtfc3BlbmRlcl07CiAgICAgICAgaWYgKGFsbG93ZWQgPCBfdmFsdWUpIHJldHVybiBmYWxzZTsKCiAgICAgICAgYmFsYW5jZU9mW190b10gPSBzYWZlQWRkKGJhbGFuY2VPZltfdG9dLCBfdmFsdWUpOwogICAgICAgIGJhbGFuY2VPZltfZnJvbV0gPSBzYWZlU3ViKGJhbGFuY2VPZltfZnJvbV0sIF92YWx1ZSk7CiAgICAgICAgYWxsb3dhbmNlW19mcm9tXVtfc3BlbmRlcl0gPSBzYWZlU3ViKGFsbG93ZWQsIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlciwgdWludCBfdmFsdWUpCiAgICBvbmx5Q29udHJvbGxlcgogICAgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgLy9yZXF1aXJlIHVzZXIgdG8gc2V0IHRvIHplcm8gYmVmb3JlIHJlc2V0dGluZyB0byBub256ZXJvCiAgICAgICAgaWYgKChfdmFsdWUgIT0gMCkgJiYgKGFsbG93YW5jZVtfb3duZXJdW19zcGVuZGVyXSAhPSAwKSkgewogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQoKICAgICAgICBhbGxvd2FuY2VbX293bmVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gaW5jcmVhc2VBcHByb3ZhbCAoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQgX2FkZGVkVmFsdWUpCiAgICBvbmx5Q29udHJvbGxlcgogICAgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgdWludCBvbGRWYWx1ZSA9IGFsbG93YW5jZVtfb3duZXJdW19zcGVuZGVyXTsKICAgICAgICBhbGxvd2FuY2VbX293bmVyXVtfc3BlbmRlcl0gPSBzYWZlQWRkKG9sZFZhbHVlLCBfYWRkZWRWYWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gZGVjcmVhc2VBcHByb3ZhbCAoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQgX3N1YnRyYWN0ZWRWYWx1ZSkKICAgIG9ubHlDb250cm9sbGVyCiAgICByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICB1aW50IG9sZFZhbHVlID0gYWxsb3dhbmNlW19vd25lcl1bX3NwZW5kZXJdOwogICAgICAgIGlmIChfc3VidHJhY3RlZFZhbHVlID4gb2xkVmFsdWUpIHsKICAgICAgICAgICAgYWxsb3dhbmNlW19vd25lcl1bX3NwZW5kZXJdID0gMDsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBhbGxvd2FuY2VbX293bmVyXVtfc3BlbmRlcl0gPSBzYWZlU3ViKG9sZFZhbHVlLCBfc3VidHJhY3RlZFZhbHVlKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZXZlbnQgTG9nTWludChhZGRyZXNzIGluZGV4ZWQgb3duZXIsIHVpbnQgYW1vdW50KTsKICAgIGV2ZW50IExvZ01pbnRpbmdTdG9wcGVkKCk7CgogICAgZnVuY3Rpb24gbWludChhZGRyZXNzIF9hLCB1aW50IF9hbW91bnQpIG9ubHlPd25lciBtaW50aW5nQWN0aXZlIHsKICAgICAgICBiYWxhbmNlT2ZbX2FdICs9IF9hbW91bnQ7CiAgICAgICAgdG90YWxTdXBwbHkgKz0gX2Ftb3VudDsKICAgICAgICBMb2dNaW50KF9hLCBfYW1vdW50KTsKICAgIH0KCiAgICAvKgogICAgZnVuY3Rpb24gbXVsdGlNaW50KHVpbnRbXSBiaXRzKSBvbmx5T3duZXIgbWludGluZ0FjdGl2ZSB7CiAgICAgICAgZm9yICh1aW50IGk9MDsgaTxiaXRzLmxlbmd0aDsgaSsrKSB7CgkgICAgYWRkcmVzcyBhID0gYWRkcmVzcyhiaXRzW2ldPj45Nik7CgkgICAgdWludCBhbW91bnQgPSBiaXRzW2ldJigoMTw8OTYpIC0gMSk7CgkgICAgbWludChhLCBhbW91bnQpOwogICAgICAgIH0KICAgIH0KICAgICovCgogICAgYm9vbCBwdWJsaWMgbWludGluZ1N0b3BwZWQ7CgogICAgZnVuY3Rpb24gc3RvcE1pbnRpbmcoKSBvbmx5T3duZXIgewogICAgICAgIG1pbnRpbmdTdG9wcGVkID0gdHJ1ZTsKICAgICAgICBMb2dNaW50aW5nU3RvcHBlZCgpOwogICAgfQoKICAgIG1vZGlmaWVyIG1pbnRpbmdBY3RpdmUoKSB7CiAgICAgICAgaWYgKG1pbnRpbmdTdG9wcGVkKSB0aHJvdzsKICAgICAgICBfOwogICAgfQoKICAgIGZ1bmN0aW9uIGJ1cm4oYWRkcmVzcyBfb3duZXIsIHVpbnQgX2Ftb3VudCkgb25seUNvbnRyb2xsZXIgewogICAgICAgIGJhbGFuY2VPZltfb3duZXJdID0gc2FmZVN1YihiYWxhbmNlT2ZbX293bmVyXSwgX2Ftb3VudCk7CiAgICAgICAgdG90YWxTdXBwbHkgPSBzYWZlU3ViKHRvdGFsU3VwcGx5LCBfYW1vdW50KTsKICAgIH0KfQ=='.
	

]
