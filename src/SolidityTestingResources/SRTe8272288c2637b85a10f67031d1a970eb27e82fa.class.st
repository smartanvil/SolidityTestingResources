Class {
	#name : #SRTe8272288c2637b85a10f67031d1a970eb27e82fa,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTe8272288c2637b85a10f67031d1a970eb27e82fa >> base64 [
	^ ''.
	

]
