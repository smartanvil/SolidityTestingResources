Class {
	#name : #SRTAef38fBFBF932D1AeF3B808Bc8fBd8Cd8E1f8BC5,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTAef38fBFBF932D1AeF3B808Bc8fBd8Cd8E1f8BC5 >> base64 [
	^ ''.
	

]
