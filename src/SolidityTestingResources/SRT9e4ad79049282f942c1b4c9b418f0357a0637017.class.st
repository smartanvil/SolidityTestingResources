Class {
	#name : #SRT9e4ad79049282f942c1b4c9b418f0357a0637017,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT9e4ad79049282f942c1b4c9b418f0357a0637017 >> base64 [
	^ ''.
	

]
