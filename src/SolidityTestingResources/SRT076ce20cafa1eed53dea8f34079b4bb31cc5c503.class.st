Class {
	#name : #SRT076ce20cafa1eed53dea8f34079b4bb31cc5c503,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT076ce20cafa1eed53dea8f34079b4bb31cc5c503 >> base64 [
	^ ''.
	

]
