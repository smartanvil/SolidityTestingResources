Class {
	#name : #SRTba4c70cbdfb04336c5865b0c7e71ce4834b63757,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTba4c70cbdfb04336c5865b0c7e71ce4834b63757 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7Cgpjb250cmFjdCBCaXRjb2luR2FsYXh5IHsKICAgIHN0cmluZyBwdWJsaWMgc3ltYm9sID0gIkJUQ0ciOwogICAgc3RyaW5nIHB1YmxpYyBuYW1lID0gIkJpdGNvaW5HYWxheHkiOwogICAgdWludDggcHVibGljIGNvbnN0YW50IGRlY2ltYWxzID0gODsKICAgIHVpbnQyNTYgX3RvdGFsU3VwcGx5ID0gMDsKCXVpbnQyNTYgX21heFRvdGFsU3VwcGx5ID0gMjEwMDAwMDAwMDAwMDAwMDsKCXVpbnQyNTYgX21pbmluZ1Jld2FyZCA9IDEwMDAwMDAwMDAwOyAvLzEgQlRDRyAtIFRvIGJlIGhhbHZlZCBldmVyeSA0IHllYXJzCgl1aW50MjU2IF9tYXhNaW5pbmdSZXdhcmQgPSAxMDAwMDAwMDAwMDAwOyAvLzUwIEJUQ0cgLSBUbyBiZSBoYWx2ZWQgZXZlcnkgNCB5ZWFycwoJdWludDI1NiBfcmV3YXJkSGFsdmluZ1RpbWVQZXJpb2QgPSAxMjYyMjc3MDQ7IC8vNCB5ZWFycwoJdWludDI1NiBfbmV4dFJld2FyZEhhbHZpbmcgPSBub3cgKyBfcmV3YXJkSGFsdmluZ1RpbWVQZXJpb2Q7Cgl1aW50MjU2IF9yZXdhcmRUaW1lUGVyaW9kID0gNjAwOyAvLzEwIG1pbnV0ZXMKCXVpbnQyNTYgX3Jld2FyZFN0YXJ0ID0gbm93OwoJdWludDI1NiBfcmV3YXJkRW5kID0gbm93ICsgX3Jld2FyZFRpbWVQZXJpb2Q7Cgl1aW50MjU2IF9jdXJyZW50TWluZWQgPSAwOwogICAgCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsKICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpOwogCiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikgYmFsYW5jZXM7CiAKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBhbGxvd2VkOwogCiAgICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7ICAgICAgICAKCQlyZXR1cm4gX3RvdGFsU3VwcGx5OwogICAgfQogCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpIHsKICAgICAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsKICAgIH0KIAogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX2Ftb3VudCkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGlmIChiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfYW1vdW50IAogICAgICAgICAgICAmJiBfYW1vdW50ID4gMAogICAgICAgICAgICAmJiBiYWxhbmNlc1tfdG9dICsgX2Ftb3VudCA+IGJhbGFuY2VzW190b10pIHsKICAgICAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gLT0gX2Ftb3VudDsKICAgICAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfYW1vdW50OwogICAgICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF9hbW91bnQpOwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgfQogCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oCiAgICAgICAgYWRkcmVzcyBfZnJvbSwKICAgICAgICBhZGRyZXNzIF90bywKICAgICAgICB1aW50MjU2IF9hbW91bnQKICAgICkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGlmIChiYWxhbmNlc1tfZnJvbV0gPj0gX2Ftb3VudAogICAgICAgICAgICAmJiBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA+PSBfYW1vdW50CiAgICAgICAgICAgICYmIF9hbW91bnQgPiAwCiAgICAgICAgICAgICYmIGJhbGFuY2VzW190b10gKyBfYW1vdW50ID4gYmFsYW5jZXNbX3RvXSkgewogICAgICAgICAgICBiYWxhbmNlc1tfZnJvbV0gLT0gX2Ftb3VudDsKICAgICAgICAgICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gLT0gX2Ftb3VudDsKICAgICAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfYW1vdW50OwogICAgICAgICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfYW1vdW50KTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgIH0KIAogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF9hbW91bnQpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF9hbW91bnQ7CiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF9hbW91bnQpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQogCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHJlbWFpbmluZykgewogICAgICAgIHJldHVybiBhbGxvd2VkW19vd25lcl1bX3NwZW5kZXJdOwogICAgfQoJCglmdW5jdGlvbiBNaW5lKCkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykKCXsKCQlpZiAobm93IDwgX3Jld2FyZEVuZCAmJiBfY3VycmVudE1pbmVkID49IF9tYXhNaW5pbmdSZXdhcmQpCgkJCXJldmVydCgpOwoJCWVsc2UgaWYgKG5vdyA+PSBfcmV3YXJkRW5kKQoJCXsKCQkJX3Jld2FyZFN0YXJ0ID0gbm93OwoJCQlfcmV3YXJkRW5kID0gbm93ICsgX3Jld2FyZFRpbWVQZXJpb2Q7CgkJCV9jdXJyZW50TWluZWQgPSAwOwoJCX0KCQoJCWlmIChub3cgPj0gX25leHRSZXdhcmRIYWx2aW5nKQoJCXsKCQkJX25leHRSZXdhcmRIYWx2aW5nID0gbm93ICsgX3Jld2FyZEhhbHZpbmdUaW1lUGVyaW9kOwoJCQlfbWluaW5nUmV3YXJkID0gX21pbmluZ1Jld2FyZCAvIDI7CgkJCV9tYXhNaW5pbmdSZXdhcmQgPSBfbWF4TWluaW5nUmV3YXJkIC8gMjsKCQkJX2N1cnJlbnRNaW5lZCA9IDA7CgkJCV9yZXdhcmRTdGFydCA9IG5vdzsKCQkJX3Jld2FyZEVuZCA9IG5vdyArIF9yZXdhcmRUaW1lUGVyaW9kOwoJCX0JCgkJCgkJaWYgKChfY3VycmVudE1pbmVkIDwgX21heE1pbmluZ1Jld2FyZCkgJiYgKF90b3RhbFN1cHBseSA8IF9tYXhUb3RhbFN1cHBseSkpCgkJewoJCQliYWxhbmNlc1ttc2cuc2VuZGVyXSArPSBfbWluaW5nUmV3YXJkOwoJCQlfY3VycmVudE1pbmVkICs9IF9taW5pbmdSZXdhcmQ7CgkJCV90b3RhbFN1cHBseSArPSBfbWluaW5nUmV3YXJkOwoJCQlUcmFuc2Zlcih0aGlzLCBtc2cuc2VuZGVyLCBfbWluaW5nUmV3YXJkKTsKCQkJcmV0dXJuIHRydWU7CgkJfQkJCQkKCQlyZXR1cm4gZmFsc2U7Cgl9CgkKCWZ1bmN0aW9uIE1heFRvdGFsU3VwcGx5KCkgcHVibGljIGNvbnN0YW50IHJldHVybnModWludDI1NikKCXsKCQlyZXR1cm4gX21heFRvdGFsU3VwcGx5OwoJfQoJCglmdW5jdGlvbiBNaW5pbmdSZXdhcmQoKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyh1aW50MjU2KQoJewoJCXJldHVybiBfbWluaW5nUmV3YXJkOwoJfQoJCglmdW5jdGlvbiBNYXhNaW5pbmdSZXdhcmQoKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyh1aW50MjU2KQoJewoJCXJldHVybiBfbWF4TWluaW5nUmV3YXJkOwoJfQoJCglmdW5jdGlvbiBSZXdhcmRIYWx2aW5nVGltZVBlcmlvZCgpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zKHVpbnQyNTYpCgl7CgkJcmV0dXJuIF9yZXdhcmRIYWx2aW5nVGltZVBlcmlvZDsKCX0KCQoJZnVuY3Rpb24gTmV4dFJld2FyZEhhbHZpbmcoKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyh1aW50MjU2KQoJewoJCXJldHVybiBfbmV4dFJld2FyZEhhbHZpbmc7Cgl9CgkKCWZ1bmN0aW9uIFJld2FyZFRpbWVQZXJpb2QoKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyh1aW50MjU2KQoJewoJCXJldHVybiBfcmV3YXJkVGltZVBlcmlvZDsKCX0KCQoJZnVuY3Rpb24gUmV3YXJkU3RhcnQoKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyh1aW50MjU2KQoJewoJCXJldHVybiBfcmV3YXJkU3RhcnQ7Cgl9CgkKCWZ1bmN0aW9uIFJld2FyZEVuZCgpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zKHVpbnQyNTYpCgl7CgkJcmV0dXJuIF9yZXdhcmRFbmQ7Cgl9CgkKCWZ1bmN0aW9uIEN1cnJlbnRNaW5lZCgpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zKHVpbnQyNTYpCgl7CgkJcmV0dXJuIF9jdXJyZW50TWluZWQ7Cgl9CgkKCWZ1bmN0aW9uIFRpbWVOb3coKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyh1aW50MjU2KQoJewoJCXJldHVybiBub3c7Cgl9Cn0='.
	

]
