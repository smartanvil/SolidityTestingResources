Class {
	#name : #SRT093e5c256ff8b32c7f1377f4c20e331674c77f00,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT093e5c256ff8b32c7f1377f4c20e331674c77f00 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTY7Cgpjb250cmFjdCBEaWduaXR5IHsKCiAgIHN0cmluZyBwdWJsaWMgc3RhbmRhcmQgPSAnVG9rZW4gMC4xJzsKICAgc3RyaW5nIHB1YmxpYyBuYW1lOwogICBzdHJpbmcgcHVibGljIHN5bWJvbDsKICAgdWludDggcHVibGljIGRlY2ltYWxzOwogICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsKCiAgICAvL0FkbWlucyBkZWNsYXJhdGlvbgogICAgYWRkcmVzcyBwcml2YXRlIGFkbWluMTsKCiAgICAvL1VzZXIgc3RydWN0CiAgICBzdHJ1Y3QgVXNlciB7CiAgICAgICAgYm9vbCBmcm96ZW47CiAgICAgICAgYm9vbCBiYW5uZWQ7CiAgICAgICAgdWludDI1NiBiYWxhbmNlOwogICAgICAgIGJvb2wgaXNzZXQ7CiAgICB9CiAgICAvL01hcHBpbmdzCiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gVXNlcikgcHJpdmF0ZSB1c2VyczsKCiAgICBhZGRyZXNzW10gcHJpdmF0ZSBiYWxhbmNlc0tleXM7CgogICAgLy9FdmVudHMKICAgIGV2ZW50IEZyb3plbkZ1bmRzKGFkZHJlc3MgaW5kZXhlZCB0YXJnZXQsIGJvb2wgaW5kZXhlZCBmcm96ZW4pOwogICAgZXZlbnQgQmFuQWNjb3VudChhZGRyZXNzIGluZGV4ZWQgYWNjb3VudCwgYm9vbCBpbmRleGVkIGJhbm5lZCk7CiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHZhbHVlKTsKICAgIGV2ZW50IE1pbnRlZChhZGRyZXNzIGluZGV4ZWQgdG8sIHVpbnQyNTYgaW5kZXhlZCB2YWx1ZSk7CgogICAgLy9NYWluIGNvbnRyYWN0IGZ1bmN0aW9uCiAgICBmdW5jdGlvbiBEaWduaXR5ICgpIHB1YmxpYyB7CiAgICAgICAgLy9zZXR0aW5nIHVwIGFkbWlucwogICAgICAgIGFkbWluMSA9IDB4NjEzNWY4OGQxNTFEOTVCYzViQkNCYThGNUUxNTRFYjg0QzI1OEJiRTsKCiAgICAgICAgdG90YWxTdXBwbHkgPSAzMDAwMDAwMDAwMDAwMDAwMDA7CgogICAgICAgIC8vdXNlciBjcmVhdGlvbgogICAgICAgIHVzZXJzW2FkbWluMV0gPSBVc2VyKGZhbHNlLCBmYWxzZSwgdG90YWxTdXBwbHksIHRydWUpOwoKICAgICAgICBpZighaGFzS2V5KGFkbWluMSkpIHsKICAgICAgICAgICAgYmFsYW5jZXNLZXlzLnB1c2gobXNnLnNlbmRlcik7CiAgICAgICAgfQoKICAgICAgICBuYW1lID0gJ0RpZ25pdHknOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gU2V0IHRoZSBuYW1lIGZvciBkaXNwbGF5IHB1cnBvc2VzCiAgICAgICAgc3ltYm9sID0gJ0RJRyc7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFNldCB0aGUgc3ltYm9sIGZvciBkaXNwbGF5IHB1cnBvc2VzCiAgICAgICAgZGVjaW1hbHMgPSA4OyAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBBbW91bnQgb2YgZGVjaW1hbHMgZm9yIGRpc3BsYXkgcHVycG9zZXMKICAgIH0KCiAgICAvL01vZGlmaWVyIHRvIGxpbWl0IGFjY2VzcyB0byBhZG1pbiBmdW5jdGlvbnMKICAgIG1vZGlmaWVyIG9ubHlBZG1pbiB7CiAgICAgICAgaWYoIShtc2cuc2VuZGVyID09IGFkbWluMSkpIHsKICAgICAgICAgICAgcmV2ZXJ0KCk7CiAgICAgICAgfQogICAgICAgIF87CiAgICB9CgogICAgbW9kaWZpZXIgdW5iYW5uZWQgewogICAgICAgIGlmKHVzZXJzW21zZy5zZW5kZXJdLmJhbm5lZCkgewogICAgICAgICAgICByZXZlcnQoKTsKICAgICAgICB9CiAgICAgICAgXzsKICAgIH0KCiAgICBtb2RpZmllciB1bmZyb3plbiB7CiAgICAgICAgaWYodXNlcnNbbXNnLnNlbmRlcl0uZnJvemVuKSB7CiAgICAgICAgICAgIHJldmVydCgpOwogICAgICAgIH0KICAgICAgICBfOwogICAgfQoKCiAgICAvL0FkbWlucyBnZXR0ZXJzCiAgICBmdW5jdGlvbiBnZXRGaXJzdEFkbWluKCkgb25seUFkbWluIHB1YmxpYyBjb25zdGFudCByZXR1cm5zIChhZGRyZXNzKSB7CiAgICAgICAgcmV0dXJuIGFkbWluMTsKICAgIH0KCgoKICAgIC8vQWRtaW5pc3RyYXRpdmUgYWN0aW9ucwogICAgZnVuY3Rpb24gbWludFRva2VuKHVpbnQyNTYgbWludGVkQW1vdW50KSBvbmx5QWRtaW4gcHVibGljIHsKICAgICAgICBpZighdXNlcnNbbXNnLnNlbmRlcl0uaXNzZXQpewogICAgICAgICAgICB1c2Vyc1ttc2cuc2VuZGVyXSA9IFVzZXIoZmFsc2UsIGZhbHNlLCAwLCB0cnVlKTsKICAgICAgICB9CiAgICAgICAgaWYoIWhhc0tleShtc2cuc2VuZGVyKSl7CiAgICAgICAgICAgIGJhbGFuY2VzS2V5cy5wdXNoKG1zZy5zZW5kZXIpOwogICAgICAgIH0KICAgICAgICB1c2Vyc1ttc2cuc2VuZGVyXS5iYWxhbmNlICs9IG1pbnRlZEFtb3VudDsKICAgICAgICB0b3RhbFN1cHBseSArPSBtaW50ZWRBbW91bnQ7CiAgICAgICAgTWludGVkKG1zZy5zZW5kZXIsIG1pbnRlZEFtb3VudCk7CiAgICB9CgogICAgZnVuY3Rpb24gdXNlckJhbm5pbmcgKGFkZHJlc3MgYmFuVXNlcikgb25seUFkbWluIHB1YmxpYyB7CiAgICAgICAgaWYoIXVzZXJzW2JhblVzZXJdLmlzc2V0KXsKICAgICAgICAgICAgdXNlcnNbYmFuVXNlcl0gPSBVc2VyKGZhbHNlLCBmYWxzZSwgMCwgdHJ1ZSk7CiAgICAgICAgfQogICAgICAgIHVzZXJzW2JhblVzZXJdLmJhbm5lZCA9IHRydWU7CiAgICAgICAgdmFyIHVzZXJCYWxhbmNlID0gdXNlcnNbYmFuVXNlcl0uYmFsYW5jZTsKICAgICAgICAKICAgICAgICB1c2Vyc1tnZXRGaXJzdEFkbWluKCldLmJhbGFuY2UgKz0gdXNlckJhbGFuY2U7CiAgICAgICAgdXNlcnNbYmFuVXNlcl0uYmFsYW5jZSA9IDA7CiAgICAgICAgCiAgICAgICAgQmFuQWNjb3VudChiYW5Vc2VyLCB0cnVlKTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gZGVzdHJveUNvaW5zIChhZGRyZXNzIGFkZHJlc3NUb0Rlc3Ryb3ksIHVpbnQyNTYgYW1vdW50KSBvbmx5QWRtaW4gcHVibGljIHsKICAgICAgICB1c2Vyc1thZGRyZXNzVG9EZXN0cm95XS5iYWxhbmNlIC09IGFtb3VudDsgICAgCiAgICAgICAgdG90YWxTdXBwbHkgLT0gYW1vdW50OwogICAgfQoKICAgIGZ1bmN0aW9uIHRva2VuRnJlZXppbmcgKGFkZHJlc3MgZnJlZXpBY2NvdW50LCBib29sIGlzRnJvemVuKSBvbmx5QWRtaW4gcHVibGljewogICAgICAgIGlmKCF1c2Vyc1tmcmVlekFjY291bnRdLmlzc2V0KXsKICAgICAgICAgICAgdXNlcnNbZnJlZXpBY2NvdW50XSA9IFVzZXIoZmFsc2UsIGZhbHNlLCAwLCB0cnVlKTsKICAgICAgICB9CiAgICAgICAgdXNlcnNbZnJlZXpBY2NvdW50XS5mcm96ZW4gPSBpc0Zyb3plbjsKICAgICAgICBGcm96ZW5GdW5kcyhmcmVlekFjY291bnQsIGlzRnJvemVuKTsKICAgIH0KCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyB0YXJnZXQpIHB1YmxpYyByZXR1cm5zICh1aW50MjU2KXsKICAgICAgICBpZighdXNlcnNbdGFyZ2V0XS5pc3NldCl7CiAgICAgICAgICAgIHVzZXJzW3RhcmdldF0gPSBVc2VyKGZhbHNlLCBmYWxzZSwgMCwgdHJ1ZSk7CiAgICAgICAgfQogICAgICAgIHJldHVybiB1c2Vyc1t0YXJnZXRdLmJhbGFuY2U7CiAgICB9CgogICAgZnVuY3Rpb24gaGFzS2V5KGFkZHJlc3Mga2V5KSBwcml2YXRlIGNvbnN0YW50IHJldHVybnMgKGJvb2wpewogICAgICAgIGZvcih1aW50MjU2IGk9MDtpPGJhbGFuY2VzS2V5cy5sZW5ndGg7aSsrKXsKICAgICAgICAgICAgYWRkcmVzcyB2YWx1ZSA9IGJhbGFuY2VzS2V5c1tpXTsKICAgICAgICAgICAgaWYodmFsdWUgPT0ga2V5KXsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KCiAgICAvL1VzZXIgYWN0aW9ucwogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSB1bmJhbm5lZCB1bmZyb3plbiBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSAgewogICAgICAgIGlmKCF1c2Vyc1ttc2cuc2VuZGVyXS5pc3NldCl7CiAgICAgICAgICAgIHVzZXJzW21zZy5zZW5kZXJdID0gVXNlcihmYWxzZSwgZmFsc2UsIDAsIHRydWUpOwogICAgICAgIH0KICAgICAgICBpZighdXNlcnNbX3RvXS5pc3NldCl7CiAgICAgICAgICAgIHVzZXJzW190b10gPSBVc2VyKGZhbHNlLCBmYWxzZSwgMCwgdHJ1ZSk7CiAgICAgICAgfQogICAgICAgIGlmKCFoYXNLZXkobXNnLnNlbmRlcikpewogICAgICAgICAgICBiYWxhbmNlc0tleXMucHVzaChtc2cuc2VuZGVyKTsKICAgICAgICB9CiAgICAgICAgaWYoIWhhc0tleShfdG8pKXsKICAgICAgICAgICAgYmFsYW5jZXNLZXlzLnB1c2goX3RvKTsKICAgICAgICB9CiAgICAgICAgaWYodXNlcnNbbXNnLnNlbmRlcl0uYmFsYW5jZSA8IF92YWx1ZSB8fCB1c2Vyc1tfdG9dLmJhbGFuY2UgKyBfdmFsdWUgPCB1c2Vyc1tfdG9dLmJhbGFuY2UpewogICAgICAgICAgICByZXZlcnQoKTsKICAgICAgICB9CgogICAgICAgIHVzZXJzW21zZy5zZW5kZXJdLmJhbGFuY2UgLT0gX3ZhbHVlOwogICAgICAgIHVzZXJzW190b10uYmFsYW5jZSArPSBfdmFsdWU7CiAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGhhc05leHRLZXkodWludDI1NiBiYWxhbmNlc0luZGV4KSBvbmx5QWRtaW4gcHVibGljIGNvbnN0YW50IHJldHVybnMgKGJvb2wpIHsKICAgICAgICByZXR1cm4gYmFsYW5jZXNJbmRleCA8IGJhbGFuY2VzS2V5cy5sZW5ndGg7CiAgICB9CgogICAgZnVuY3Rpb24gbmV4dEtleSh1aW50MjU2IGJhbGFuY2VzSW5kZXgpIG9ubHlBZG1pbiBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAoYWRkcmVzcykgewogICAgICAgIGlmKCFoYXNOZXh0S2V5KGJhbGFuY2VzSW5kZXgpKXsKICAgICAgICAgICAgcmV2ZXJ0KCk7CiAgICAgICAgfQogICAgICAgIHJldHVybiBiYWxhbmNlc0tleXNbYmFsYW5jZXNJbmRleF07CiAgICB9Cgp9'.
	

]
