Class {
	#name : #SRT3978a8942fc6d5e57b53b3a179452fc876046426,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT3978a8942fc6d5e57b53b3a179452fc876046426 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7CgovKioKCSogQHRpdGxlIFNhZmVNYXRoCgkqIEBkZXYgTWF0aCBvcGVyYXRpb25zIHdpdGggc2FmZXR5IGNoZWNrcyB0aGF0IHRocm93IG9uIGVycm9yCiovCmxpYnJhcnkgU2FmZU1hdGggewoJZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CgkJdWludDI1NiBjID0gYSAqIGI7CgkJYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKCQlyZXR1cm4gYzsKCX0KCQoJZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CgkJLy8gYXNzZXJ0KGIgPiAwKTsgLy8gU29saWRpdHkgYXV0b21hdGljYWxseSB0aHJvd3Mgd2hlbiBkaXZpZGluZyBieSAwCgkJdWludDI1NiBjID0gYSAvIGI7CgkJLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKCQlyZXR1cm4gYzsKCX0KCQoJZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CgkJYXNzZXJ0KGIgPD0gYSk7CgkJcmV0dXJuIGEgLSBiOwoJfQoJCglmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKCQl1aW50MjU2IGMgPSBhICsgYjsKCQlhc3NlcnQoYyA+PSBhKTsKCQlyZXR1cm4gYzsKCX0KCQoJZnVuY3Rpb24gdG9VSU5UMTEyKHVpbnQyNTYgYSkgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyh1aW50MTEyKSB7CgkJYXNzZXJ0KHVpbnQxMTIoYSkgPT0gYSk7CgkJcmV0dXJuIHVpbnQxMTIoYSk7Cgl9CgkKCWZ1bmN0aW9uIHRvVUlOVDEyMCh1aW50MjU2IGEpIGludGVybmFsIGNvbnN0YW50IHJldHVybnModWludDEyMCkgewoJCWFzc2VydCh1aW50MTIwKGEpID09IGEpOwoJCXJldHVybiB1aW50MTIwKGEpOwoJfQoJCglmdW5jdGlvbiB0b1VJTlQxMjgodWludDI1NiBhKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zKHVpbnQxMjgpIHsKCQlhc3NlcnQodWludDEyOChhKSA9PSBhKTsKCQlyZXR1cm4gdWludDEyOChhKTsKCX0KCQoJZnVuY3Rpb24gcGVyY2VudCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewoJCXVpbnQyNTYgYyA9IChiKmEvMTAwKSA7CgkJYXNzZXJ0KGMgPD0gYSk7CgkJcmV0dXJuIGM7Cgl9Cn0KCmNvbnRyYWN0IE93bmVkIHsKCQoJYWRkcmVzcyBwdWJsaWMgb3duZXI7CgkKCWZ1bmN0aW9uIE93bmVkKCkgewoJCW93bmVyID0gbXNnLnNlbmRlcjsKCX0KCQoJbW9kaWZpZXIgb25seU93bmVyKCkgewoJCXJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CgkJXzsKCX0KCQoJZnVuY3Rpb24gc2V0T3duZXIoYWRkcmVzcyBfbmV3T3duZXIpIG9ubHlPd25lciB7CgkJb3duZXIgPSBfbmV3T3duZXI7Cgl9Cn0KCi8qKgoJKiBAdGl0bGUgRVJDMjBCYXNpYwoJKiBAZGV2IFNpbXBsZXIgdmVyc2lvbiBvZiBFUkMyMCBpbnRlcmZhY2UKCSogQGRldiBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL0VJUHMvaXNzdWVzLzE3OQoqLwpjb250cmFjdCBFUkMyMEJhc2ljIHsKCWZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIHdobykgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpOwoJZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyB0bywgdWludDI1NiB2YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpOwoJZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiB2YWx1ZSk7Cn0KCi8qKgoJKiBAdGl0bGUgRVJDMjAgaW50ZXJmYWNlCgkqIEBkZXYgc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8yMAoqLwpjb250cmFjdCBFUkMyMCBpcyBFUkMyMEJhc2ljIHsKCWZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIG93bmVyLCBhZGRyZXNzIHNwZW5kZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KTsKCWZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIGZyb20sIGFkZHJlc3MgdG8sIHVpbnQyNTYgdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKTsKCWZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBzcGVuZGVyLCB1aW50MjU2IHZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CglldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBzcGVuZGVyLCB1aW50MjU2IHZhbHVlKTsKfQoKLyoqCgkqIEB0aXRsZSBCYXNpYyB0b2tlbgoJKiBAZGV2IEJhc2ljIHZlcnNpb24gb2YgU3RhbmRhcmRUb2tlbiwgd2l0aCBubyBhbGxvd2FuY2VzLgoqLwpjb250cmFjdCBCYXNpY1Rva2VuIGlzIEVSQzIwQmFzaWMgewoJdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQyNTY7CgkKCXN0cnVjdCBBY2NvdW50IHsKCQl1aW50MjU2IGJhbGFuY2VzOwoJCXVpbnQyNTYgcmF3VG9rZW5zOwoJCXVpbnQzMiBsYXN0TWludGVkVGltZXN0YW1wOwoJfQoJCgkvLyBCYWxhbmNlcyBmb3IgZWFjaCBhY2NvdW50CgltYXBwaW5nKGFkZHJlc3MgPT4gQWNjb3VudCkgYWNjb3VudHM7CgkKCQoJLyoqCgkJKiBAZGV2IHRyYW5zZmVyIHRva2VuIGZvciBhIHNwZWNpZmllZCBhZGRyZXNzCgkJKiBAcGFyYW0gX3RvIFRoZSBhZGRyZXNzIHRvIHRyYW5zZmVyIHRvLgoJCSogQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IHRvIGJlIHRyYW5zZmVycmVkLgoJKi8KCWZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKCQlyZXF1aXJlKF90byAhPSBhZGRyZXNzKDApKTsKCQlyZXF1aXJlKF92YWx1ZSA8PSBhY2NvdW50c1ttc2cuc2VuZGVyXS5iYWxhbmNlcyk7CgkJCgkJLy8gU2FmZU1hdGguc3ViIHdpbGwgdGhyb3cgaWYgdGhlcmUgaXMgbm90IGVub3VnaCBiYWxhbmNlLgoJCWFjY291bnRzW21zZy5zZW5kZXJdLmJhbGFuY2VzID0gYWNjb3VudHNbbXNnLnNlbmRlcl0uYmFsYW5jZXMuc3ViKF92YWx1ZSk7CgkJYWNjb3VudHNbX3RvXS5iYWxhbmNlcyA9IGFjY291bnRzW190b10uYmFsYW5jZXMuYWRkKF92YWx1ZSk7CgkJVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwoJCXJldHVybiB0cnVlOwoJfQoJCgkvKioKCQkqIEBkZXYgR2V0cyB0aGUgYmFsYW5jZSBvZiB0aGUgc3BlY2lmaWVkIGFkZHJlc3MuCgkJKiBAcGFyYW0gX293bmVyIFRoZSBhZGRyZXNzIHRvIHF1ZXJ5IHRoZSB0aGUgYmFsYW5jZSBvZi4KCQkqIEByZXR1cm4gQW4gdWludDI1NiByZXByZXNlbnRpbmcgdGhlIGFtb3VudCBvd25lZCBieSB0aGUgcGFzc2VkIGFkZHJlc3MuCgkqLwoJZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7CgkJcmV0dXJuIGFjY291bnRzW19vd25lcl0uYmFsYW5jZXM7Cgl9CgkKfQoKLyoqCgkqIEB0aXRsZSBTdGFuZGFyZCBFUkMyMCB0b2tlbgoJKgoJKiBAZGV2IEltcGxlbWVudGF0aW9uIG9mIHRoZSBiYXNpYyBzdGFuZGFyZCB0b2tlbi4KCSogQGRldiBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9pc3N1ZXMvMjAKCSogQGRldiBCYXNlZCBvbiBjb2RlIGJ5IEZpcnN0Qmxvb2Q6IGh0dHBzOi8vZ2l0aHViLmNvbS9GaXJzdGJsb29kaW8vdG9rZW4vYmxvYi9tYXN0ZXIvc21hcnRfY29udHJhY3QvRmlyc3RCbG9vZFRva2VuLnNvbAoqLwpjb250cmFjdCBTdGFuZGFyZFRva2VuIGlzIEVSQzIwLCBCYXNpY1Rva2VuIHsKCQoJbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBpbnRlcm5hbCBhbGxvd2VkOwoJCgkKCS8qKgoJCSogQGRldiBUcmFuc2ZlciB0b2tlbnMgZnJvbSBvbmUgYWRkcmVzcyB0byBhbm90aGVyCgkJKiBAcGFyYW0gX2Zyb20gYWRkcmVzcyBUaGUgYWRkcmVzcyB3aGljaCB5b3Ugd2FudCB0byBzZW5kIHRva2VucyBmcm9tCgkJKiBAcGFyYW0gX3RvIGFkZHJlc3MgVGhlIGFkZHJlc3Mgd2hpY2ggeW91IHdhbnQgdG8gdHJhbnNmZXIgdG8KCQkqIEBwYXJhbSBfdmFsdWUgdWludDI1NiB0aGUgYW1vdW50IG9mIHRva2VucyB0byBiZSB0cmFuc2ZlcnJlZAoJKi8KCWZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CgkJcmVxdWlyZShfdG8gIT0gYWRkcmVzcygwKSk7CgkJcmVxdWlyZShfdmFsdWUgPD0gYWNjb3VudHNbX2Zyb21dLmJhbGFuY2VzKTsKCQlyZXF1aXJlKF92YWx1ZSA8PSBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSk7CgkJCgkJYWNjb3VudHNbX2Zyb21dLmJhbGFuY2VzID0gYWNjb3VudHNbX2Zyb21dLmJhbGFuY2VzLnN1YihfdmFsdWUpOwoJCWFjY291bnRzW190b10uYmFsYW5jZXMgPSBhY2NvdW50c1tfdG9dLmJhbGFuY2VzLmFkZChfdmFsdWUpOwoJCWFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID0gYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0uc3ViKF92YWx1ZSk7CgkJVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKCQlyZXR1cm4gdHJ1ZTsKCX0KCQoJLyoqCgkJKiBAZGV2IEFwcHJvdmUgdGhlIHBhc3NlZCBhZGRyZXNzIHRvIHNwZW5kIHRoZSBzcGVjaWZpZWQgYW1vdW50IG9mIHRva2VucyBvbiBiZWhhbGYgb2YgbXNnLnNlbmRlci4KCQkqCgkJKiBCZXdhcmUgdGhhdCBjaGFuZ2luZyBhbiBhbGxvd2FuY2Ugd2l0aCB0aGlzIG1ldGhvZCBicmluZ3MgdGhlIHJpc2sgdGhhdCBzb21lb25lIG1heSB1c2UgYm90aCB0aGUgb2xkCgkJKiBhbmQgdGhlIG5ldyBhbGxvd2FuY2UgYnkgdW5mb3J0dW5hdGUgdHJhbnNhY3Rpb24gb3JkZXJpbmcuIE9uZSBwb3NzaWJsZSBzb2x1dGlvbiB0byBtaXRpZ2F0ZSB0aGlzCgkJKiByYWNlIGNvbmRpdGlvbiBpcyB0byBmaXJzdCByZWR1Y2UgdGhlIHNwZW5kZXIncyBhbGxvd2FuY2UgdG8gMCBhbmQgc2V0IHRoZSBkZXNpcmVkIHZhbHVlIGFmdGVyd2FyZHM6CgkJKiBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9pc3N1ZXMvMjAjaXNzdWVjb21tZW50LTI2MzUyNDcyOQoJCSogQHBhcmFtIF9zcGVuZGVyIFRoZSBhZGRyZXNzIHdoaWNoIHdpbGwgc3BlbmQgdGhlIGZ1bmRzLgoJCSogQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IG9mIHRva2VucyB0byBiZSBzcGVudC4KCSovCglmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewoJCWFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwoJCUFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwoJCXJldHVybiB0cnVlOwoJfQoJCgkvKioKCQkqIEBkZXYgRnVuY3Rpb24gdG8gY2hlY2sgdGhlIGFtb3VudCBvZiB0b2tlbnMgdGhhdCBhbiBvd25lciBhbGxvd2VkIHRvIGEgc3BlbmRlci4KCQkqIEBwYXJhbSBfb3duZXIgYWRkcmVzcyBUaGUgYWRkcmVzcyB3aGljaCBvd25zIHRoZSBmdW5kcy4KCQkqIEBwYXJhbSBfc3BlbmRlciBhZGRyZXNzIFRoZSBhZGRyZXNzIHdoaWNoIHdpbGwgc3BlbmQgdGhlIGZ1bmRzLgoJCSogQHJldHVybiBBIHVpbnQyNTYgc3BlY2lmeWluZyB0aGUgYW1vdW50IG9mIHRva2VucyBzdGlsbCBhdmFpbGFibGUgZm9yIHRoZSBzcGVuZGVyLgoJKi8KCWZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKSB7CgkJcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07Cgl9CgkKCS8qKgoJCSogYXBwcm92ZSBzaG91bGQgYmUgY2FsbGVkIHdoZW4gYWxsb3dlZFtfc3BlbmRlcl0gPT0gMC4gVG8gaW5jcmVtZW50CgkJKiBhbGxvd2VkIHZhbHVlIGlzIGJldHRlciB0byB1c2UgdGhpcyBmdW5jdGlvbiB0byBhdm9pZCAyIGNhbGxzIChhbmQgd2FpdCB1bnRpbAoJCSogdGhlIGZpcnN0IHRyYW5zYWN0aW9uIGlzIG1pbmVkKQoJCSogRnJvbSBNb25vbGl0aERBTyBUb2tlbi5zb2wKCSovCglmdW5jdGlvbiBpbmNyZWFzZUFwcHJvdmFsIChhZGRyZXNzIF9zcGVuZGVyLCB1aW50IF9hZGRlZFZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CgkJYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXS5hZGQoX2FkZGVkVmFsdWUpOwoJCUFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSk7CgkJcmV0dXJuIHRydWU7Cgl9CgkKCWZ1bmN0aW9uIGRlY3JlYXNlQXBwcm92YWwgKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQgX3N1YnRyYWN0ZWRWYWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewoJCXVpbnQgb2xkVmFsdWUgPSBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXTsKCQlpZiAoX3N1YnRyYWN0ZWRWYWx1ZSA+IG9sZFZhbHVlKSB7CgkJCWFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gMDsKCQkJfSBlbHNlIHsKCQkJYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBvbGRWYWx1ZS5zdWIoX3N1YnRyYWN0ZWRWYWx1ZSk7CgkJfQoJCUFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSk7CgkJcmV0dXJuIHRydWU7Cgl9CgkKfQoKY29udHJhY3QgVEVDIGlzIFN0YW5kYXJkVG9rZW4sIE93bmVkIHsKCXN0cmluZyBwdWJsaWMgY29uc3RhbnQgbmFtZSAgICA9ICJURUNIVFJBREVDT0lOIjsgIAoJdWludDggcHVibGljIGNvbnN0YW50IGRlY2ltYWxzID0gODsgICAgICAgICAgICAgICAKCXN0cmluZyBwdWJsaWMgY29uc3RhbnQgc3ltYm9sICA9ICJURUMiOwoJYm9vbCBwdWJsaWMgY2FuQ2xhaW1Ub2tlbiA9IGZhbHNlOwoJdWludDI1NiBwdWJsaWMgY29uc3RhbnQgbWF4U3VwcGx5ICA9IDMwMDAwMDAwMCoxMCoqdWludDI1NihkZWNpbWFscyk7Cgl1aW50MjU2IHB1YmxpYyBjb25zdGFudCBkYXRlSW5pdD0xNTE2OTI0ODAwIDsKCQoJLyogICAgICAgICAgNTAgZGF5cyAgICAgMTJtb250aHMgICAxMm1vbnRocwoJCXwtLS0tLS0tLS0tLS0tLS0tLS18LS14LS14LS14LS18LS14LS14LS14LS18LS0tLS0tLS0tLS0tPgoJCTAxLTI2LTE4ICAgIElDTyAgICAgICAgIExFTkQoKikgICAgICAgRUNPICAgIEZJTkFMSVpFRAoJCSAgICAgICAgICAgICAgICAgICAgICAgIERFVgoJCSAgICAgICAgICAgICAgICAgICAgICAgIE1BUksKCQkgICAgICAgICAgICAgICAgICAgICAgICBBRE1JTgoJCSgqKTogMTAwJSB0b2tlbnMKCSovCgl1aW50MjU2IHB1YmxpYyBjb25zdGFudCBkYXRlSUNPPWRhdGVJbml0ICsgNTAgZGF5czsKCXVpbnQyNTYgcHVibGljIGNvbnN0YW50IGRhdGVSZWxlYXNlMz1kYXRlSUNPICsgOTAgZGF5czsKCXVpbnQyNTYgcHVibGljIGNvbnN0YW50IGRhdGVSZWxlYXNlNj1kYXRlUmVsZWFzZTMgKyA5MCBkYXlzOwoJdWludDI1NiBwdWJsaWMgY29uc3RhbnQgZGF0ZVJlbGVhc2U5PWRhdGVSZWxlYXNlNiArIDkwIGRheXM7Cgl1aW50MjU2IHB1YmxpYyBjb25zdGFudCBkYXRlUmVsZWFzZTEyPWRhdGVSZWxlYXNlOSArIDkwIGRheXM7CgkKCXVpbnQyNTYgcHVibGljIGNvbnN0YW50IGRhdGVFY29SZWxlYXNlMz1kYXRlUmVsZWFzZTEyICsgOTAgZGF5czsKCXVpbnQyNTYgcHVibGljIGNvbnN0YW50IGRhdGVFY29SZWxlYXNlNj1kYXRlRWNvUmVsZWFzZTMgKyA5MCBkYXlzOwoJdWludDI1NiBwdWJsaWMgY29uc3RhbnQgZGF0ZUVjb1JlbGVhc2U5PWRhdGVFY29SZWxlYXNlNiArIDkwIGRheXM7Cgl1aW50MjU2IHB1YmxpYyBjb25zdGFudCBkYXRlRWNvUmVsZWFzZTEyPWRhdGVFY29SZWxlYXNlOSArIDkwIGRheXM7CgoJYm9vbCBwdWJsaWMgaXNBbGxvY2F0ZWRJQ089ZmFsc2U7CgkKCWJvb2wgcHVibGljIGlzQWxsb2NhdGVkTGVuZGluZz1mYWxzZTsKCQoJYm9vbCBwdWJsaWMgaXNBbGxvY2F0ZWQzPWZhbHNlOwoJYm9vbCBwdWJsaWMgaXNBbGxvY2F0ZWQ2PWZhbHNlOwoJYm9vbCBwdWJsaWMgaXNBbGxvY2F0ZWQ5PWZhbHNlOwoJYm9vbCBwdWJsaWMgaXNBbGxvY2F0ZWQxMj1mYWxzZTsKCQoJYm9vbCBwdWJsaWMgaXNFY29BbGxvY2F0ZWQzPWZhbHNlOwoJYm9vbCBwdWJsaWMgaXNFY29BbGxvY2F0ZWQ2PWZhbHNlOwoJYm9vbCBwdWJsaWMgaXNFY29BbGxvY2F0ZWQ5PWZhbHNlOwoJYm9vbCBwdWJsaWMgaXNFY29BbGxvY2F0ZWQxMj1mYWxzZTsKCQoJZW51bSBTdGFnZSB7CgkJRmluYWxpemVkLAoJCUlDTywKCQlSZWxlYXNlMywKCQlSZWxlYXNlNiwKCQlSZWxlYXNlOSwKCQlSZWxlYXNlMTIsCgkJRWNvMywKCQlFY282LAoJCUVjbzksCgkJRWNvMTIKCX0KCQoJc3RydWN0IFN1cHBsaWVzIHsKCQl1aW50MjU2IHRvdGFsOwoJCXVpbnQyNTYgcmF3VG9rZW5zOwoJfQoJCgkvL3RoZSBzdGFnZSBmb3IgcmVsZWFzaW5nIFRva2VucwoJc3RydWN0IFN0YWdlUmVsZWFzZSB7CgkJdWludDI1NiByYXdUb2tlbnM7CgkJdWludDI1NiB0b3RhbFJhd1Rva2VuczsKCX0KCQoJU3VwcGxpZXMgc3VwcGxpZXM7CglTdGFnZVJlbGVhc2UgcHVibGljIHN0YWdlSUNPPVN0YWdlUmVsZWFzZShtYXhTdXBwbHkucGVyY2VudCgyMSksbWF4U3VwcGx5LnBlcmNlbnQoMjEpKTsKCVN0YWdlUmVsZWFzZSBwdWJsaWMgc3RhZ2VMZW5kaW5nPVN0YWdlUmVsZWFzZShtYXhTdXBwbHkucGVyY2VudCgyNSksbWF4U3VwcGx5LnBlcmNlbnQoMjUpKTsKCVN0YWdlUmVsZWFzZSBwdWJsaWMgc3RhZ2VEZXZlbG9wPVN0YWdlUmVsZWFzZShtYXhTdXBwbHkucGVyY2VudCgzNSksbWF4U3VwcGx5LnBlcmNlbnQoMzUpKTsKCVN0YWdlUmVsZWFzZSBwdWJsaWMgc3RhZ2VNYXJrZXRpbmc9U3RhZ2VSZWxlYXNlKG1heFN1cHBseS5wZXJjZW50KDUpLG1heFN1cHBseS5wZXJjZW50KDUpKTsKCVN0YWdlUmVsZWFzZSBwdWJsaWMgc3RhZ2VBZG1pbj1TdGFnZVJlbGVhc2UobWF4U3VwcGx5LnBlcmNlbnQoMiksIG1heFN1cHBseS5wZXJjZW50KDIpKTsKCVN0YWdlUmVsZWFzZSBwdWJsaWMgc3RhZ2VFY289U3RhZ2VSZWxlYXNlKG1heFN1cHBseS5wZXJjZW50KDEyKSwgbWF4U3VwcGx5LnBlcmNlbnQoMTIpKTsKCQoJLy8gU2VuZCBiYWNrIGV0aGVyIAoJZnVuY3Rpb24gKCkgewoJCXJldmVydCgpOwoJfQoJLy9nZXR0ZXIgdG90YWxTdXBwbHkKCWZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgdG90YWwpIHsKCQlyZXR1cm4gc3VwcGxpZXMudG90YWw7Cgl9CgkKCWZ1bmN0aW9uIG1pbnRUb2tlbihhZGRyZXNzIF9vd25lciwgdWludDI1NiBfYW1vdW50LCBib29sIF9pc1Jhdykgb25seU93bmVyIGludGVybmFsIHsKCQlyZXF1aXJlKF9hbW91bnQuYWRkKHN1cHBsaWVzLnRvdGFsKTw9bWF4U3VwcGx5KTsKCQlpZiAoX2lzUmF3KSB7CgkJCWFjY291bnRzW19vd25lcl0ucmF3VG9rZW5zPV9hbW91bnQuYWRkKGFjY291bnRzW19vd25lcl0ucmF3VG9rZW5zKTsKCQkJc3VwcGxpZXMucmF3VG9rZW5zPV9hbW91bnQuYWRkKHN1cHBsaWVzLnJhd1Rva2Vucyk7CgkJCX0gZWxzZSB7CgkJCWFjY291bnRzW19vd25lcl0uYmFsYW5jZXM9X2Ftb3VudC5hZGQoYWNjb3VudHNbX293bmVyXS5iYWxhbmNlcyk7CgkJfQoJCXN1cHBsaWVzLnRvdGFsPV9hbW91bnQuYWRkKHN1cHBsaWVzLnRvdGFsKTsKCQlUcmFuc2ZlcigwLCBfb3duZXIsIF9hbW91bnQpOwoJfQoJCglmdW5jdGlvbiB0cmFuc2ZlclJhdyhhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CgkJcmVxdWlyZShfdG8gIT0gYWRkcmVzcygwKSk7CgkJcmVxdWlyZShfdmFsdWUgPD0gYWNjb3VudHNbbXNnLnNlbmRlcl0ucmF3VG9rZW5zKTsKCQkKCQkKCQkvLyBTYWZlTWF0aC5zdWIgd2lsbCB0aHJvdyBpZiB0aGVyZSBpcyBub3QgZW5vdWdoIGJhbGFuY2UuCgkJYWNjb3VudHNbbXNnLnNlbmRlcl0ucmF3VG9rZW5zID0gYWNjb3VudHNbbXNnLnNlbmRlcl0ucmF3VG9rZW5zLnN1YihfdmFsdWUpOwoJCWFjY291bnRzW190b10ucmF3VG9rZW5zID0gYWNjb3VudHNbX3RvXS5yYXdUb2tlbnMuYWRkKF92YWx1ZSk7CgkJVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwoJCXJldHVybiB0cnVlOwoJfQoJCglmdW5jdGlvbiBzZXRDbGFpbVRva2VuKGJvb2wgYXBwcm92ZSkgb25seU93bmVyIHB1YmxpYyByZXR1cm5zIChib29sKSB7CgkJY2FuQ2xhaW1Ub2tlbj10cnVlOwoJCXJldHVybiBjYW5DbGFpbVRva2VuOwoJfQoJCglmdW5jdGlvbiBjbGFpbVRva2VuKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBhbW91bnQpIHsKCQlyZXF1aXJlKGFjY291bnRzW19vd25lcl0ucmF3VG9rZW5zIT0wKTsKCQlyZXF1aXJlKGNhbkNsYWltVG9rZW4pOwoJCQoJCXVpbnQyNTYgYW1vdW50VG9rZW4gPSBhY2NvdW50c1tfb3duZXJdLnJhd1Rva2VuczsKCQlhY2NvdW50c1tfb3duZXJdLnJhd1Rva2VucyA9IDA7CgkJYWNjb3VudHNbX293bmVyXS5iYWxhbmNlcyA9IGFtb3VudFRva2VuICsgYWNjb3VudHNbX293bmVyXS5iYWxhbmNlczsKCQlyZXR1cm4gdHJ1ZTsKCX0KCQoJZnVuY3Rpb24gYmFsYW5jZU9mUmF3cyhhZGRyZXNzIF9vd25lcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgewoJCXJldHVybiBhY2NvdW50c1tfb3duZXJdLnJhd1Rva2VuczsKCX0KCQoJZnVuY3Rpb24gYmxvY2tUaW1lKCkgY29uc3RhbnQgcmV0dXJucyAodWludDMyKSB7CgkJcmV0dXJuIHVpbnQzMihibG9jay50aW1lc3RhbXApOwoJfQoJCglmdW5jdGlvbiBzdGFnZSgpIGNvbnN0YW50IHJldHVybnMgKFN0YWdlKSB7CgkJCgkJaWYoYmxvY2tUaW1lKCk8PWRhdGVJQ08pIHsKCQkJcmV0dXJuIFN0YWdlLklDTzsKCQl9CgkJCgkJaWYoYmxvY2tUaW1lKCk8PWRhdGVSZWxlYXNlMykgewoJCQlyZXR1cm4gU3RhZ2UuUmVsZWFzZTM7CgkJfQoJCQoJCWlmKGJsb2NrVGltZSgpPD1kYXRlUmVsZWFzZTYpIHsKCQkJcmV0dXJuIFN0YWdlLlJlbGVhc2U2OwoJCX0KCQkKCQlpZihibG9ja1RpbWUoKTw9ZGF0ZVJlbGVhc2U5KSB7CgkJCXJldHVybiBTdGFnZS5SZWxlYXNlOTsKCQl9CgkJCgkJaWYoYmxvY2tUaW1lKCk8PWRhdGVSZWxlYXNlMTIpIHsKCQkJcmV0dXJuIFN0YWdlLlJlbGVhc2UxMjsKCQl9CgkJCgkJaWYoYmxvY2tUaW1lKCk8PWRhdGVFY29SZWxlYXNlMykgewoJCQlyZXR1cm4gU3RhZ2UuRWNvMzsKCQl9CgkJCgkJaWYoYmxvY2tUaW1lKCk8PWRhdGVFY29SZWxlYXNlNikgewoJCQlyZXR1cm4gU3RhZ2UuRWNvNjsKCQl9CgkJCgkJaWYoYmxvY2tUaW1lKCk8PWRhdGVFY29SZWxlYXNlOSkgewoJCQlyZXR1cm4gU3RhZ2UuRWNvOTsKCQl9CgkJCgkJaWYoYmxvY2tUaW1lKCk8PWRhdGVFY29SZWxlYXNlMTIpIHsKCQkJcmV0dXJuIFN0YWdlLkVjbzEyOwoJCX0KCQkKCQlyZXR1cm4gU3RhZ2UuRmluYWxpemVkOwoJfQoJCglmdW5jdGlvbiByZWxlYXNlU3RhZ2UgKHVpbnQyNTYgYW1vdW50LCBTdGFnZVJlbGVhc2Ugc3RvcmFnZSBzdGFnZVJlbGVhc2UsIGJvb2wgaXNSYXcpIGludGVybmFsIHJldHVybnMgKHVpbnQyNTYpIHsKCQlpZihzdGFnZVJlbGVhc2UucmF3VG9rZW5zPjApIHsKCQkJaW50MjU2IHJlbWFpbj1pbnQyNTYoc3RhZ2VSZWxlYXNlLnJhd1Rva2VucyAtIGFtb3VudCk7CgkJCWlmKHJlbWFpbjwwKQoJCQlhbW91bnQ9c3RhZ2VSZWxlYXNlLnJhd1Rva2VuczsKCQkJc3RhZ2VSZWxlYXNlLnJhd1Rva2Vucz1zdGFnZVJlbGVhc2UucmF3VG9rZW5zLnN1YihhbW91bnQpOwoJCQltaW50VG9rZW4ob3duZXIsIGFtb3VudCwgaXNSYXcpOwoJCQlyZXR1cm4gYW1vdW50OwoJCX0KCQlyZXR1cm4gMDsKCX0KCQoJZnVuY3Rpb24gcmVsZWFzZU5vdEVjbyh1aW50MjU2IHBlcmNlbnQsIGJvb2wgaXNSYXcpIGludGVybmFsIHJldHVybnMgKHVpbnQyNTYpIHsKCQkKCQl1aW50MjU2IGFtb3VudERldmVsb3AgPSBzdGFnZURldmVsb3AudG90YWxSYXdUb2tlbnMucGVyY2VudChwZXJjZW50KTsKCQl1aW50MjU2IGFtb3VudE1hcmtldGluZyA9IHN0YWdlTWFya2V0aW5nLnRvdGFsUmF3VG9rZW5zLnBlcmNlbnQocGVyY2VudCk7CgkJdWludDI1NiBhbW91bnRBZG1pbiA9IHN0YWdlQWRtaW4udG90YWxSYXdUb2tlbnMucGVyY2VudChwZXJjZW50KTsKCQl1aW50MjU2IGFtb3VudFN1bSA9IGFtb3VudERldmVsb3ArYW1vdW50TWFya2V0aW5nK2Ftb3VudEFkbWluOwoJCQoJCXJlbGVhc2VTdGFnZShhbW91bnREZXZlbG9wLCBzdGFnZURldmVsb3AsIGlzUmF3KTsKCQlyZWxlYXNlU3RhZ2UoYW1vdW50TWFya2V0aW5nLCBzdGFnZU1hcmtldGluZywgaXNSYXcpOwoJCXJlbGVhc2VTdGFnZShhbW91bnRBZG1pbiwgc3RhZ2VBZG1pbiwgaXNSYXcpOwoJCXJldHVybiBhbW91bnRTdW07Cgl9CgkKCWZ1bmN0aW9uIHJlbGVhc2VFY28odWludDI1NiBwZXJjZW50LCBib29sIGlzUmF3KSBpbnRlcm5hbCByZXR1cm5zICh1aW50MjU2KSB7CgkJdWludDI1NiBhbW91bnRFY28gPSBzdGFnZUVjby50b3RhbFJhd1Rva2Vucy5wZXJjZW50KHBlcmNlbnQpOwoJCXJlbGVhc2VTdGFnZShhbW91bnRFY28sIHN0YWdlRWNvLCBpc1Jhdyk7ICAgICAgCgkJcmV0dXJuIGFtb3VudEVjbzsKCX0KCQoJZnVuY3Rpb24gcmVsZWFzZTEwMFBlcmNlbnQoYm9vbCBpc1JhdywgU3RhZ2VSZWxlYXNlIHN0b3JhZ2Ugc3RhZ2VSZWxlYXNlKSBpbnRlcm5hbCByZXR1cm5zICh1aW50MjU2KSB7CgkJdWludDI1NiBhbW91bnQgPSBzdGFnZVJlbGVhc2UudG90YWxSYXdUb2tlbnMucGVyY2VudCgxMDApOwoJCXJlbGVhc2VTdGFnZShhbW91bnQsIHN0YWdlUmVsZWFzZSwgaXNSYXcpOyAgICAgIAoJCXJldHVybiBhbW91bnQ7Cgl9CgkKCS8vbWFpbiBmdW5jdGlvbiwgbXVzdCBydW4gZm9yIHJlbGVhc2luZy4KCS8vIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjMzMKCWZ1bmN0aW9uIHJlbGVhc2UoYm9vbCBpc1Jhdykgb25seU93bmVyIHB1YmxpYyByZXR1cm5zICh1aW50MjU2KSB7CgkJdWludDI1NiBhbW91bnRTdW09MDsKCQkKCQlpZihzdGFnZSgpPT1TdGFnZS5JQ08gJiYgaXNBbGxvY2F0ZWRJQ089PWZhbHNlKSB7CgkJCXVpbnQyNTYgYW1vdW50SUNPPXJlbGVhc2UxMDBQZXJjZW50KGlzUmF3LCBzdGFnZUlDTyk7CgkJCWFtb3VudFN1bT1hbW91bnRTdW0uYWRkKGFtb3VudElDTyk7CgkJCWlzQWxsb2NhdGVkSUNPPXRydWU7CgkJCXJldHVybiBhbW91bnRTdW07CgkJfQoJCQoJCWlmKHN0YWdlKCk9PVN0YWdlLlJlbGVhc2UzICYmIGlzQWxsb2NhdGVkMz09ZmFsc2UpIHsKCQkJdWludDI1NiBhbW91bnRSZWxlYXNlMz1yZWxlYXNlTm90RWNvKDMwLCBpc1Jhdyk7CgkJCWFtb3VudFN1bT1hbW91bnRTdW0uYWRkKGFtb3VudFJlbGVhc2UzKTsKCQkJLy9mb3IgbGVuZGluZwoJCQlhbW91bnRSZWxlYXNlMz1yZWxlYXNlMTAwUGVyY2VudChpc1Jhdywgc3RhZ2VMZW5kaW5nKTsKCQkJYW1vdW50U3VtPWFtb3VudFN1bS5hZGQoYW1vdW50UmVsZWFzZTMpOwoJCQlpc0FsbG9jYXRlZDM9dHJ1ZTsKCQkJcmV0dXJuIGFtb3VudFN1bTsKCQl9CgkJCgkJaWYoc3RhZ2UoKT09U3RhZ2UuUmVsZWFzZTYgJiYgaXNBbGxvY2F0ZWQ2PT1mYWxzZSkgewoJCQl1aW50MjU2IGFtb3VudFJlbGVhc2U2PXJlbGVhc2VOb3RFY28oMjAsIGlzUmF3KTsKCQkJYW1vdW50U3VtPWFtb3VudFN1bS5hZGQoYW1vdW50UmVsZWFzZTYpOwoJCQlpc0FsbG9jYXRlZDY9dHJ1ZTsKCQkJcmV0dXJuIGFtb3VudFN1bTsKCQl9CgkJCgkJaWYoc3RhZ2UoKT09U3RhZ2UuUmVsZWFzZTkgJiYgaXNBbGxvY2F0ZWQ5PT1mYWxzZSkgewoJCQl1aW50MjU2IGFtb3VudFJlbGVhc2U5PXJlbGVhc2VOb3RFY28oMjgsIGlzUmF3KTsKCQkJYW1vdW50U3VtPWFtb3VudFN1bS5hZGQoYW1vdW50UmVsZWFzZTkpOwoJCQlpc0FsbG9jYXRlZDk9dHJ1ZTsKCQkJcmV0dXJuIGFtb3VudFN1bTsKCQl9CgkJCgkJaWYoc3RhZ2UoKT09U3RhZ2UuUmVsZWFzZTEyICYmIGlzQWxsb2NhdGVkMTI9PWZhbHNlKSB7CgkJCXVpbnQyNTYgYW1vdW50UmVsZWFzZTEyPXJlbGVhc2VOb3RFY28oMjIsIGlzUmF3KTsKCQkJYW1vdW50U3VtPWFtb3VudFN1bS5hZGQoYW1vdW50UmVsZWFzZTEyKTsKCQkJaXNBbGxvY2F0ZWQxMj10cnVlOwoJCQlyZXR1cm4gYW1vdW50U3VtOwoJCX0KCQkKCQlpZihzdGFnZSgpPT1TdGFnZS5FY28zICYmIGlzRWNvQWxsb2NhdGVkMz09ZmFsc2UpIHsKCQkJdWludDI1NiBhbW91bnRFY29SZWxlYXNlMz1yZWxlYXNlRWNvKDMwLCBpc1Jhdyk7CgkJCWFtb3VudFN1bT1hbW91bnRTdW0uYWRkKGFtb3VudEVjb1JlbGVhc2UzKTsKCQkJaXNFY29BbGxvY2F0ZWQzPXRydWU7CgkJCXJldHVybiBhbW91bnRTdW07CgkJfQoJCQoJCWlmKHN0YWdlKCk9PVN0YWdlLkVjbzYgJiYgaXNFY29BbGxvY2F0ZWQ2PT1mYWxzZSkgewoJCQl1aW50MjU2IGFtb3VudEVjb1JlbGVhc2U2PXJlbGVhc2VFY28oMjAsIGlzUmF3KTsKCQkJYW1vdW50U3VtPWFtb3VudFN1bS5hZGQoYW1vdW50RWNvUmVsZWFzZTYpOwoJCQlpc0Vjb0FsbG9jYXRlZDY9dHJ1ZTsKCQkJcmV0dXJuIGFtb3VudFN1bTsKCQl9CgkJCgkJaWYoc3RhZ2UoKT09U3RhZ2UuRWNvOSAmJiBpc0Vjb0FsbG9jYXRlZDk9PWZhbHNlKSB7CgkJCXVpbnQyNTYgYW1vdW50RWNvUmVsZWFzZTk9cmVsZWFzZUVjbygyOCwgaXNSYXcpOwoJCQlhbW91bnRTdW09YW1vdW50U3VtLmFkZChhbW91bnRFY29SZWxlYXNlOSk7CgkJCWlzRWNvQWxsb2NhdGVkOT10cnVlOwoJCQlyZXR1cm4gYW1vdW50U3VtOwoJCX0KCQlpZihzdGFnZSgpPT1TdGFnZS5FY28xMiAmJiBpc0Vjb0FsbG9jYXRlZDEyPT1mYWxzZSkgewoJCQl1aW50MjU2IGFtb3VudEVjb1JlbGVhc2UxMj1yZWxlYXNlRWNvKDIyLCBpc1Jhdyk7CgkJCWFtb3VudFN1bT1hbW91bnRTdW0uYWRkKGFtb3VudEVjb1JlbGVhc2UxMik7CgkJCWlzRWNvQWxsb2NhdGVkMTI9dHJ1ZTsKCQkJcmV0dXJuIGFtb3VudFN1bTsKCQl9CgkJcmV0dXJuIGFtb3VudFN1bTsKCX0KfQ=='.
	

]
