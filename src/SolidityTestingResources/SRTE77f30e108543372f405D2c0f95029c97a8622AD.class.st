Class {
	#name : #SRTE77f30e108543372f405D2c0f95029c97a8622AD,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTE77f30e108543372f405D2c0f95029c97a8622AD >> base64 [
	^ ''.
	

]
