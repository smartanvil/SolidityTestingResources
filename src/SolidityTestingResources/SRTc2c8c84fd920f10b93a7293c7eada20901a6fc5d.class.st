Class {
	#name : #SRTc2c8c84fd920f10b93a7293c7eada20901a6fc5d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTc2c8c84fd920f10b93a7293c7eada20901a6fc5d >> base64 [
	^ 'LyoqCiAqIERldmVsb3BlciBUZWFtOiAKICogSGlyYSBTaWRkaXF1aQogKiBjb25uZWN0IG9uOiBodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vaGlyYS1zaWRkaXF1aS05NmI2MGE3NC8KICogCiAqIE11anRhYmEgSWRyZWVzCiAqIGNvbm5lY3Qgb246IGh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9tdWp0YWJhaWRyZWVzOTQvCiAqKi8KCnByYWdtYSBzb2xpZGl0eSBeMC40LjExOwoKLyoqCiAqIEB0aXRsZSBDcm93ZHNhbGUKICogQGRldiBDcm93ZHNhbGUgaXMgYSBiYXNlIGNvbnRyYWN0IGZvciBtYW5hZ2luZyBhIHRva2VuIGNyb3dkc2FsZS4KICogQ3Jvd2RzYWxlcyBoYXZlIGEgc3RhcnQgYW5kIGVuZCB0aW1lc3RhbXBzLCB3aGVyZSBpbnZlc3RvcnMgY2FuIG1ha2UKICogdG9rZW4gcHVyY2hhc2VzIGFuZCB0aGUgY3Jvd2RzYWxlIHdpbGwgYXNzaWduIHRoZW0gdG9rZW5zIGJhc2VkCiAqIG9uIGEgdG9rZW4gcGVyIEVUSCByYXRlLiBGdW5kcyBjb2xsZWN0ZWQgYXJlIGZvcndhcmRlZCB0byBhIHdhbGxldAogKiBhcyB0aGV5IGFycml2ZS4KICovCiAKIApsaWJyYXJ5IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSAqIGI7CiAgICBhc3NlcnQoYSA9PSAwIHx8IGMgLyBhID09IGIpOwogICAgcmV0dXJuIGM7CiAgfQoKIGZ1bmN0aW9uIGRpdih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAKICAgIHVpbnQyNTYgYyA9IGEgLyBiOwogICAgYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIGFzc2VydChiIDw9IGEpOwogICAgcmV0dXJuIGEgLSBiOwogIH0KCiAgZnVuY3Rpb24gYWRkKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgYXNzZXJ0KGMgPj0gYSk7CiAgICByZXR1cm4gYzsKICB9Cn0KCmNvbnRyYWN0IE93bmFibGUgewogIGFkZHJlc3MgcHVibGljIG93bmVyOwoKCiAgZXZlbnQgT3duZXJzaGlwVHJhbnNmZXJyZWQoYWRkcmVzcyBpbmRleGVkIHByZXZpb3VzT3duZXIsIGFkZHJlc3MgaW5kZXhlZCBuZXdPd25lcik7CgoKICAvKioKICAgKiBAZGV2IFRoZSBPd25hYmxlIGNvbnN0cnVjdG9yIHNldHMgdGhlIG9yaWdpbmFsIGBvd25lcmAgb2YgdGhlIGNvbnRyYWN0IHRvIHRoZSBzZW5kZXIKICAgKiBhY2NvdW50LgogICAqLwogIGZ1bmN0aW9uIE93bmFibGUoKSBwdWJsaWMgewogICAgb3duZXIgPSBtc2cuc2VuZGVyOwogIH0KCgogIC8qKgogICAqIEBkZXYgVGhyb3dzIGlmIGNhbGxlZCBieSBhbnkgYWNjb3VudCBvdGhlciB0aGFuIHRoZSBvd25lci4KICAgKi8KICBtb2RpZmllciBvbmx5T3duZXIoKSB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgXzsKICB9CgoKICAvKioKICAgKiBAZGV2IEFsbG93cyB0aGUgY3VycmVudCBvd25lciB0byB0cmFuc2ZlciBjb250cm9sIG9mIHRoZSBjb250cmFjdCB0byBhIG5ld093bmVyLgogICAqIEBwYXJhbSBuZXdPd25lciBUaGUgYWRkcmVzcyB0byB0cmFuc2ZlciBvd25lcnNoaXAgdG8uCiAgICovCiAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBuZXdPd25lcikgb25seU93bmVyIHB1YmxpYyB7CiAgICByZXF1aXJlKG5ld093bmVyICE9IGFkZHJlc3MoMCkpOwogICAgT3duZXJzaGlwVHJhbnNmZXJyZWQob3duZXIsIG5ld093bmVyKTsKICAgIG93bmVyID0gbmV3T3duZXI7CiAgfQoKfQoKLyoqCiAqIEB0aXRsZSBFUkMyMEJhc2ljCiAqIEBkZXYgU2ltcGxlciB2ZXJzaW9uIG9mIEVSQzIwIGludGVyZmFjZQogKiBAZGV2IHNlZSBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9pc3N1ZXMvMTc5CiAqLwpjb250cmFjdCBFUkMyMEJhc2ljIHsKICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsKICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyB3aG8pIGNvbnN0YW50IGludGVybmFsIHJldHVybnMgKHVpbnQyNTYpOwogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sIHVpbnQyNTYgdmFsdWUpIGludGVybmFsIHJldHVybnMgKGJvb2wpOwogIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBmcm9tLCBhZGRyZXNzIGluZGV4ZWQgdG8sIHVpbnQyNTYgdmFsdWUpOwp9CgovKioKICogQHRpdGxlIEJhc2ljIHRva2VuCiAqIEBkZXYgQmFzaWMgdmVyc2lvbiBvZiBTdGFuZGFyZFRva2VuLCB3aXRoIG5vIGFsbG93YW5jZXMuCiAqLwpjb250cmFjdCBCYXNpY1Rva2VuIGlzIEVSQzIwQmFzaWMgewogIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwoKICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikgdG9rZW5CYWxhbmNlczsKCiAgLyoqCiAgKiBAZGV2IHRyYW5zZmVyIHRva2VuIGZvciBhIHNwZWNpZmllZCBhZGRyZXNzCiAgKiBAcGFyYW0gX3RvIFRoZSBhZGRyZXNzIHRvIHRyYW5zZmVyIHRvLgogICogQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IHRvIGJlIHRyYW5zZmVycmVkLgogICovCiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBpbnRlcm5hbCByZXR1cm5zIChib29sKSB7CiAgICByZXF1aXJlKHRva2VuQmFsYW5jZXNbbXNnLnNlbmRlcl0+PV92YWx1ZSk7CiAgICB0b2tlbkJhbGFuY2VzW21zZy5zZW5kZXJdID0gdG9rZW5CYWxhbmNlc1ttc2cuc2VuZGVyXS5zdWIoX3ZhbHVlKTsKICAgIHRva2VuQmFsYW5jZXNbX3RvXSA9IHRva2VuQmFsYW5jZXNbX3RvXS5hZGQoX3ZhbHVlKTsKICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgLyoqCiAgKiBAZGV2IEdldHMgdGhlIGJhbGFuY2Ugb2YgdGhlIHNwZWNpZmllZCBhZGRyZXNzLgogICogQHBhcmFtIF9vd25lciBUaGUgYWRkcmVzcyB0byBxdWVyeSB0aGUgdGhlIGJhbGFuY2Ugb2YuCiAgKiBAcmV0dXJuIEFuIHVpbnQyNTYgcmVwcmVzZW50aW5nIHRoZSBhbW91bnQgb3duZWQgYnkgdGhlIHBhc3NlZCBhZGRyZXNzLgogICovCiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCBpbnRlcm5hbCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpIHsKICAgIHJldHVybiB0b2tlbkJhbGFuY2VzW19vd25lcl07CiAgfQoKfQpjb250cmFjdCBFdGhlZXJhVG9rZW4gaXMgQmFzaWNUb2tlbixPd25hYmxlIHsKCiAgIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwogICAKICAgLy9UT0RPOiBDaGFuZ2UgdGhlIG5hbWUgYW5kIHRoZSBzeW1ib2wKICAgc3RyaW5nIHB1YmxpYyBjb25zdGFudCBuYW1lID0gIkVUSEVFUkEiOwogICBzdHJpbmcgcHVibGljIGNvbnN0YW50IHN5bWJvbCA9ICJFVEEiOwogICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCBkZWNpbWFscyA9IDE4OwoKICAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgSU5JVElBTF9TVVBQTFkgPSAzMDAwMDAwMDA7CiAgIGV2ZW50IERlYnVnKHN0cmluZyBtZXNzYWdlLCBhZGRyZXNzIGFkZHIsIHVpbnQyNTYgbnVtYmVyKTsKICAgLyoqCiAgICogQGRldiBDb250cnVjdG9yIHRoYXQgZ2l2ZXMgbXNnLnNlbmRlciBhbGwgb2YgZXhpc3RpbmcgdG9rZW5zLgogICAqLwogICAgZnVuY3Rpb24gRXRoZWVyYVRva2VuKGFkZHJlc3Mgd2FsbGV0KSBwdWJsaWMgewogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgICAgICB0b3RhbFN1cHBseSA9IElOSVRJQUxfU1VQUExZOwogICAgICAgIHRva2VuQmFsYW5jZXNbd2FsbGV0XSA9IElOSVRJQUxfU1VQUExZICogMTAgKiogMTg7ICAgLy9TaW5jZSB3ZSBkaXZpZGVkIHRoZSB0b2tlbiBpbnRvIDEwXjE4IHBhcnRzCiAgICB9CgogICAgZnVuY3Rpb24gbWludChhZGRyZXNzIHdhbGxldCwgYWRkcmVzcyBidXllciwgdWludDI1NiB0b2tlbkFtb3VudCkgcHVibGljIG9ubHlPd25lciB7CiAgICAgIHJlcXVpcmUodG9rZW5CYWxhbmNlc1t3YWxsZXRdID49IHRva2VuQW1vdW50KTsgICAgICAgICAgICAgICAvLyBjaGVja3MgaWYgaXQgaGFzIGVub3VnaCB0byBzZWxsCiAgICAgIHRva2VuQmFsYW5jZXNbYnV5ZXJdID0gdG9rZW5CYWxhbmNlc1tidXllcl0uYWRkKHRva2VuQW1vdW50KTsgICAgICAgICAgICAgICAgICAvLyBhZGRzIHRoZSBhbW91bnQgdG8gYnV5ZXIncyBiYWxhbmNlCiAgICAgIHRva2VuQmFsYW5jZXNbd2FsbGV0XSA9IHRva2VuQmFsYW5jZXNbd2FsbGV0XS5zdWIodG9rZW5BbW91bnQpOyAgICAgICAgICAgICAgICAgICAgICAgIC8vIHN1YnRyYWN0cyBhbW91bnQgZnJvbSBzZWxsZXIncyBiYWxhbmNlCiAgICAgIFRyYW5zZmVyKHdhbGxldCwgYnV5ZXIsIHRva2VuQW1vdW50KTsgCiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIHNob3dNeVRva2VuQmFsYW5jZShhZGRyZXNzIGFkZHIpIHB1YmxpYyB2aWV3IG9ubHlPd25lciByZXR1cm5zICh1aW50IHRva2VuQmFsYW5jZSkgewogICAgICAgIHRva2VuQmFsYW5jZSA9IHRva2VuQmFsYW5jZXNbYWRkcl07CiAgICAgICAgcmV0dXJuIHRva2VuQmFsYW5jZTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gc2hvd015RXRoZXJCYWxhbmNlKGFkZHJlc3MgYWRkcikgcHVibGljIHZpZXcgb25seU93bmVyIHJldHVybnMgKHVpbnQgZXRoZXJCYWxhbmNlKSB7CiAgICAgICAgZXRoZXJCYWxhbmNlID0gYWRkci5iYWxhbmNlOwogICAgfQp9'.
	

]
