Class {
	#name : #SRT3B6B74df081BC0E2c4776b3Ceb3D4Bc61C20ad32,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT3B6B74df081BC0E2c4776b3Ceb3D4Bc61C20ad32 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuODsKCgpjb250cmFjdCB0b2tlbiB7ZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyByZWNlaXZlciwgdWludCBhbW91bnQpeyB9fQoKY29udHJhY3QgQ3Jvd2RzYWxlIHsKICAgIHVpbnQgcHVibGljIGFtb3VudFJhaXNlZDsgdWludCBwdWJsaWMgcmVzQW1vdW50OyB1aW50IHB1YmxpYyBzb2xkVG9rZW5zOwogICAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBiYWxhbmNlT2Y7CiAgICBldmVudCBHb2FsUmVhY2hlZChhZGRyZXNzIGJlbmVmaWNpYXJ5LCB1aW50IGFtb3VudFJhaXNlZCk7CiAgICBldmVudCBGdW5kVHJhbnNmZXIoYWRkcmVzcyBiYWNrZXIsIHVpbnQgYW1vdW50LCBib29sIGlzQ29udHJpYnV0aW9uKTsKICAgIGJvb2wgcHVibGljIGNyb3dkc2FsZUNsb3NlZCA9IHRydWU7CiAgICBib29sIHB1YmxpYyBtaW5pbXVtVGFyZ2V0UmVhY2hlZCA9IGZhbHNlOwoKICAgIC8vIGluaXRpYWxpemF0aW9uCiAgICBhZGRyZXNzIHB1YmxpYyBiZW5lZmljaWFyeSA9IDB4MzVBOWRkNWE2YjU5ZUU1ZTI4RkM1MTk4MDJBNDY4Mzc5NTczYWYzOTsvKmlmU3VjY2Vzc2Z1bFNlbmRUbyovCiAgICB1aW50IHB1YmxpYyBwcmljZSA9IDAuMDAxNSBldGhlcjsvKmNvc3RPZkVhY2hUb2tlbiovCiAgICB1aW50IHB1YmxpYyBtaW5pbXVtVGFyZ2V0ID0gMTAgKiBwcmljZTsvKm1pbmltdW1UYXJnZXRJblRva2VucyovCiAgICB1aW50IHB1YmxpYyBtYXhpbXVtVGFyZ2V0ID0gMTAwMCAqIHByaWNlOy8qbWF4aW11bVRhcmdldEluVG9rZW5zKi8KICAgIHVpbnQgcHVibGljIGRlYWRsaW5lID0gIG5vdyArIDE0NDAgKiAxIG1pbnV0ZXM7LypkdXJhdGlvbkluTWludXRlcyovCiAgICB0b2tlbiBwdWJsaWMgdG9rZW5SZXdhcmQgPSB0b2tlbigweDJGZDgwMTljZTJBQWMzYmY5REIxOEQ4NTFBNTdFRmUxYTYxNTFCQkYpOy8qYWRkcmVzc09mVG9rZW5Vc2VkQXNSZXdhcmQqLwoKCiAgICAvLyB0aGUgZnVuY3Rpb24gd2l0aG91dCBuYW1lIGlzIHRoZSBkZWZhdWx0IGZ1bmN0aW9uIHRoYXQgaXMgY2FsbGVkIHdoZW5ldmVyIGFueW9uZSBzZW5kcyBmdW5kcyB0byBhIGNvbnRyYWN0CiAgICBmdW5jdGlvbiAoKSBwYXlhYmxlIHsKICAgICAgICBpZiAoY3Jvd2RzYWxlQ2xvc2VkIHx8IChtYXhpbXVtVGFyZ2V0IC0gYW1vdW50UmFpc2VkKSA8IG1zZy52YWx1ZSkgdGhyb3c7CiAgICAgICAgdWludCBhbW91bnQgPSBtc2cudmFsdWU7CiAgICAgICAgYmFsYW5jZU9mW21zZy5zZW5kZXJdICs9IGFtb3VudDsKICAgICAgICBhbW91bnRSYWlzZWQgKz0gYW1vdW50OwogICAgICAgIHJlc0Ftb3VudCArPSBhbW91bnQ7CiAgICAgICAgc29sZFRva2VucyArPSBhbW91bnQgLyBwcmljZTsKICAgICAgICB0b2tlblJld2FyZC50cmFuc2Zlcihtc2cuc2VuZGVyLCBhbW91bnQgLyBwcmljZSk7CiAgICAgICAgRnVuZFRyYW5zZmVyKG1zZy5zZW5kZXIsIGFtb3VudCwgdHJ1ZSk7CgogICAgICAgIGlmIChhbW91bnRSYWlzZWQgPj0gbWluaW11bVRhcmdldCAmJiAhbWluaW11bVRhcmdldFJlYWNoZWQpIHsKICAgICAgICAgICAgbWluaW11bVRhcmdldFJlYWNoZWQgPSB0cnVlOwogICAgICAgICAgICBHb2FsUmVhY2hlZChiZW5lZmljaWFyeSwgbWluaW11bVRhcmdldCk7CiAgICAgICAgfQoKICAgICAgICAvLyBmdW5kcyBhcmUgc2VuZGluZyB0byBiZW5lZmljaWFyeSBhY2NvdW50IGFmdGVyIG1pbmltdW1UYXJnZXQgd2lsbCBiZSByZWFjaGVkCiAgICAgICAgaWYgKG1pbmltdW1UYXJnZXRSZWFjaGVkKSB7CiAgICAgICAgICAgIGlmIChiZW5lZmljaWFyeS5zZW5kKGFtb3VudCkpIHsKICAgICAgICAgICAgICAgIEZ1bmRUcmFuc2ZlcihiZW5lZmljaWFyeSwgYW1vdW50LCBmYWxzZSk7CiAgICAgICAgICAgICAgICByZXNBbW91bnQgLT0gYW1vdW50OwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKICAgIC8vIGRldiBmdW5jdGlvbiBmb3Igd2l0aGRyYXcgYW55IGFtb3VudCBmcm9tIHJhaXNlZCBmdW5kcyAoYWN0aXZhdGUgb25seSBpZiBtaW5pbXVtVGFyZ2V0IGlzIHJlYWNoZWQpCiAgICBmdW5jdGlvbiBkZXZXaXRoZHJhd2FsKHVpbnQgbnVtLCB1aW50IGRlbikgewogICAgICAgIGlmICghbWluaW11bVRhcmdldFJlYWNoZWQgfHwgIShiZW5lZmljaWFyeSA9PSBtc2cuc2VuZGVyKSkgdGhyb3c7CiAgICAgICAgdWludCB3QW1vdW50ID0gbnVtIC8gZGVuOwogICAgICAgIGlmIChiZW5lZmljaWFyeS5zZW5kKHdBbW91bnQpKSB7CiAgICAgICAgICAgIEZ1bmRUcmFuc2ZlcihiZW5lZmljaWFyeSwgd0Ftb3VudCwgZmFsc2UpOwogICAgICAgICAgICByZXNBbW91bnQgLT0gd0Ftb3VudDsKICAgICAgICB9CiAgICB9CgogICAgLy8gZGV2IGZ1bmN0aW9uIGZvciB3aXRoZHJhdyBhbW91bnQsIHdoaWNoIGJlIHJlc2VydmVkIGJ5IG1pbmltdW1UYXJnZXQgKGFjdGl2YXRlIG9ubHkgaWYgbWluaW11bVRhcmdldCBpcyByZWFjaGVkKQogICAgZnVuY3Rpb24gZGV2UmVzV2l0aGRyYXdhbCgpIHsKICAgICAgICBpZiAoIW1pbmltdW1UYXJnZXRSZWFjaGVkIHx8ICEoYmVuZWZpY2lhcnkgPT0gbXNnLnNlbmRlcikpIHRocm93OwogICAgICAgIGlmIChiZW5lZmljaWFyeS5zZW5kKHJlc0Ftb3VudCkpIHsKICAgICAgICAgICAgRnVuZFRyYW5zZmVyKGJlbmVmaWNpYXJ5LCByZXNBbW91bnQsIGZhbHNlKTsKICAgICAgICAgICAgcmVzQW1vdW50IC09IHJlc0Ftb3VudDsKICAgICAgICB9CiAgICB9CgogICAgLy8gZGV2IGZ1bmN0aW9uIGZvciBjbG9zZSBjcm93ZHNhbGUgIAogICAgZnVuY3Rpb24gY2xvc2VDcm93ZHNhbGUoYm9vbCBjbG9zZVR5cGUpIHsKICAgICAgICAgaWYgKGJlbmVmaWNpYXJ5ID09IG1zZy5zZW5kZXIpIHsKICAgICAgICAgICAgY3Jvd2RzYWxlQ2xvc2VkID0gY2xvc2VUeXBlOwogICAgICAgICB9CiAgICB9CgoKICAgIG1vZGlmaWVyIGFmdGVyRGVhZGxpbmUoKSB7IGlmIChub3cgPj0gZGVhZGxpbmUpIF87IH0KCiAgICAvLyBjaGVja3MgaWYgdGhlIG1pbmltdW1UYXJnZXQgaGFzIGJlZW4gcmVhY2hlZAogICAgZnVuY3Rpb24gY2hlY2tUYXJnZXRSZWFjaGVkKCkgYWZ0ZXJEZWFkbGluZSB7CiAgICAgICAgaWYgKGFtb3VudFJhaXNlZCA+PSBtaW5pbXVtVGFyZ2V0KSB7CiAgICAgICAgICAgIG1pbmltdW1UYXJnZXRSZWFjaGVkID0gdHJ1ZTsKICAgICAgICB9CiAgICB9CgogICAgLy8gZnVuY3Rpb24gZm9yIHJldHVybiBub24gc29sZCB0b2tlbnMgdG8gZGV2IGFjY291bnQgYWZ0ZXIgY3Jvd2RzYWxlCiAgICBmdW5jdGlvbiByZXR1cm5Ub2tlbnModWludCB0b2tlbnNBbW91bnQpIGFmdGVyRGVhZGxpbmUgewogICAgICAgIGlmICghY3Jvd2RzYWxlQ2xvc2VkKSB0aHJvdzsKICAgICAgICBpZiAoYmVuZWZpY2lhcnkgPT0gbXNnLnNlbmRlcikgewogICAgICAgICAgICB0b2tlblJld2FyZC50cmFuc2ZlcihiZW5lZmljaWFyeSwgdG9rZW5zQW1vdW50KTsKICAgICAgICB9CiAgICB9CgogICAgLy8gcmV0dXJuIHlvdXIgZnVuZHMgYWZ0ZXIgZGVhZGxpbmUgaWYgbWluaW11bVRhcmdldCBpcyBub3QgcmVhY2hlZCAoYWN0aXZhdGUgaWYgY3Jvd2RzYWxlIGNsb3NlKQogICAgZnVuY3Rpb24gc2FmZVdpdGhkcmF3YWwoKSBhZnRlckRlYWRsaW5lIHsKICAgICAgICBpZiAoIWNyb3dkc2FsZUNsb3NlZCkgdGhyb3c7CiAgICAgICAgaWYgKCFtaW5pbXVtVGFyZ2V0UmVhY2hlZCAmJiBjcm93ZHNhbGVDbG9zZWQpIHsKICAgICAgICAgICAgdWludCBhbW91bnQgPSBiYWxhbmNlT2ZbbXNnLnNlbmRlcl07CiAgICAgICAgICAgIGJhbGFuY2VPZlttc2cuc2VuZGVyXSA9IDA7CiAgICAgICAgICAgIGlmIChhbW91bnQgPiAwKSB7CiAgICAgICAgICAgICAgICBpZiAobXNnLnNlbmRlci5zZW5kKGFtb3VudCkpIHsKICAgICAgICAgICAgICAgICAgICBGdW5kVHJhbnNmZXIobXNnLnNlbmRlciwgYW1vdW50LCBmYWxzZSk7CiAgICAgICAgICAgICAgICAgICAgcmVzQW1vdW50IC09IGFtb3VudDsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgYmFsYW5jZU9mW21zZy5zZW5kZXJdID0gYW1vdW50OwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9'.
	

]
