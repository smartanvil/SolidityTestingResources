Class {
	#name : #SRTcbe717fb2923f4226271cc4c1d5ef2c076fb3247,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTcbe717fb2923f4226271cc4c1d5ef2c076fb3247 >> base64 [
	^ ''.
	

]
