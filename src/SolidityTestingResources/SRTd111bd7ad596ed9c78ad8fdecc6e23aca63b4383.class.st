Class {
	#name : #SRTd111bd7ad596ed9c78ad8fdecc6e23aca63b4383,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTd111bd7ad596ed9c78ad8fdecc6e23aca63b4383 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuNzsKCmNvbnRyYWN0IEFic3RyYWN0WkVOT1NDcm93ZHNhbGUgewogICAgZnVuY3Rpb24gY3Jvd2RzYWxlU3RhcnRpbmdCbG9jaygpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgc3RhcnRpbmdCbG9jaykge30KfQoKLy8vIEB0aXRsZSBFYXJseVB1cmNoYXNlIGNvbnRyYWN0IC0gS2VlcCB0cmFjayBvZiBwdXJjaGFzZWQgYW1vdW50IGJ5IEVhcmx5IFB1cmNoYXNlcnMKLy8vIFByb2plY3QgYnkgWkVOT1MgVGVhbSAoaHR0cDovL3d3dy50aGV6ZW5vcy5jb20vKQovLy8gVGhpcyBzbWFydCBjb250cmFjdCBkZXZlbG9wZWQgYnkgU3RhcmJhc2UgLSBUb2tlbiBmdW5kaW5nICYgcGF5bWVudCBQbGF0Zm9ybSBmb3IgaW5ub3ZhdGl2ZSBwcm9qZWN0cyA8c3VwcG9ydFthdF1zdGFyYmFzZS5jbz4KCmNvbnRyYWN0IFpFTk9TRWFybHlQdXJjaGFzZSB7CiAgICAvKgogICAgICogIFByb3BlcnRpZXMKICAgICAqLwogICAgc3RyaW5nIHB1YmxpYyBjb25zdGFudCBQVVJDSEFTRV9BTU9VTlRfVU5JVCA9ICdFVEgnOyAgICAvLyBFdGhlcgogICAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CiAgICBFYXJseVB1cmNoYXNlW10gcHVibGljIGVhcmx5UHVyY2hhc2VzOwogICAgdWludCBwdWJsaWMgZWFybHlQdXJjaGFzZUNsb3NlZEF0OwoKICAgIC8qCiAgICAgKiAgVHlwZXMKICAgICAqLwogICAgc3RydWN0IEVhcmx5UHVyY2hhc2UgewogICAgICAgIGFkZHJlc3MgcHVyY2hhc2VyOwogICAgICAgIHVpbnQgYW1vdW50OyAgICAgICAgLy8gQW1vdW50IGluIFdlaSggPSAxLyAxMF4xOCBFdGhlcikKICAgICAgICB1aW50IHB1cmNoYXNlZEF0OyAgIC8vIHRpbWVzdGFtcAogICAgfQoKICAgIC8qCiAgICAgKiAgRXh0ZXJuYWwgY29udHJhY3RzCiAgICAgKi8KICAgIEFic3RyYWN0WkVOT1NDcm93ZHNhbGUgcHVibGljIHplbk9TQ3Jvd2RzYWxlOwoKCiAgICAvKgogICAgICogIE1vZGlmaWVycwogICAgICovCiAgICBtb2RpZmllciBvbmx5T3duZXIoKSB7CiAgICAgICAgaWYgKG1zZy5zZW5kZXIgIT0gb3duZXIpIHsKICAgICAgICAgICAgdGhyb3c7CiAgICAgICAgfQogICAgICAgIF87CiAgICB9CgogICAgbW9kaWZpZXIgb25seUJlZm9yZUNyb3dkc2FsZSgpIHsKICAgICAgICBpZiAoYWRkcmVzcyh6ZW5PU0Nyb3dkc2FsZSkgIT0gMCAmJgogICAgICAgICAgICB6ZW5PU0Nyb3dkc2FsZS5jcm93ZHNhbGVTdGFydGluZ0Jsb2NrKCkgPiAwKQogICAgICAgIHsKICAgICAgICAgICAgdGhyb3c7CiAgICAgICAgfQogICAgICAgIF87CiAgICB9CgogICAgbW9kaWZpZXIgb25seUVhcmx5UHVyY2hhc2VUZXJtKCkgewogICAgICAgIGlmIChlYXJseVB1cmNoYXNlQ2xvc2VkQXQgPiAwKSB7CiAgICAgICAgICAgIHRocm93OwogICAgICAgIH0KICAgICAgICBfOwogICAgfQoKICAgIC8vLyBAZGV2IENvbnRyYWN0IGNvbnN0cnVjdG9yIGZ1bmN0aW9uCiAgICBmdW5jdGlvbiBaRU5PU0Vhcmx5UHVyY2hhc2UoKSB7CiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgfQoKICAgIC8qCiAgICAgKiAgQ29udHJhY3QgZnVuY3Rpb25zCiAgICAgKi8KICAgIC8vLyBAZGV2IFJldHVybnMgZWFybHkgcHVyY2hhc2VkIGFtb3VudCBieSBwdXJjaGFzZXIncyBhZGRyZXNzCiAgICAvLy8gQHBhcmFtIHB1cmNoYXNlciBQdXJjaGFzZXIgYWRkcmVzcwogICAgZnVuY3Rpb24gcHVyY2hhc2VkQW1vdW50QnkoYWRkcmVzcyBwdXJjaGFzZXIpCiAgICAgICAgZXh0ZXJuYWwKICAgICAgICBjb25zdGFudAogICAgICAgIHJldHVybnMgKHVpbnQgYW1vdW50KQogICAgewogICAgICAgIGZvciAodWludCBpOyBpIDwgZWFybHlQdXJjaGFzZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgaWYgKGVhcmx5UHVyY2hhc2VzW2ldLnB1cmNoYXNlciA9PSBwdXJjaGFzZXIpIHsKICAgICAgICAgICAgICAgIGFtb3VudCArPSBlYXJseVB1cmNoYXNlc1tpXS5hbW91bnQ7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CgogICAgLy8vIEBkZXYgUmV0dXJucyB0b3RhbCBhbW91bnQgb2YgcmFpc2VkIGZ1bmRzIGJ5IEVhcmx5IFB1cmNoYXNlcnMKICAgIGZ1bmN0aW9uIHRvdGFsQW1vdW50T2ZFYXJseVB1cmNoYXNlcygpCiAgICAgICAgY29uc3RhbnQKICAgICAgICByZXR1cm5zICh1aW50IHRvdGFsQW1vdW50KQogICAgewogICAgICAgIGZvciAodWludCBpOyBpIDwgZWFybHlQdXJjaGFzZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgdG90YWxBbW91bnQgKz0gZWFybHlQdXJjaGFzZXNbaV0uYW1vdW50OwogICAgICAgIH0KICAgIH0KCiAgICAvLy8gQGRldiBSZXR1cm5zIG51bWJlciBvZiBlYXJseSBwdXJjaGFzZXMKICAgIGZ1bmN0aW9uIG51bWJlck9mRWFybHlQdXJjaGFzZXMoKQogICAgICAgIGV4dGVybmFsCiAgICAgICAgY29uc3RhbnQKICAgICAgICByZXR1cm5zICh1aW50KQogICAgewogICAgICAgIHJldHVybiBlYXJseVB1cmNoYXNlcy5sZW5ndGg7CiAgICB9CgogICAgLy8vIEBkZXYgQXBwZW5kIGFuIGVhcmx5IHB1cmNoYXNlIGxvZwogICAgLy8vIEBwYXJhbSBwdXJjaGFzZXIgUHVyY2hhc2VyIGFkZHJlc3MKICAgIC8vLyBAcGFyYW0gYW1vdW50IFB1cmNoYXNlIGFtb3VudAogICAgLy8vIEBwYXJhbSBwdXJjaGFzZWRBdCBUaW1lc3RhbXAgb2YgcHVyY2hhc2VkIGRhdGUKICAgIGZ1bmN0aW9uIGFwcGVuZEVhcmx5UHVyY2hhc2UoYWRkcmVzcyBwdXJjaGFzZXIsIHVpbnQgYW1vdW50LCB1aW50IHB1cmNoYXNlZEF0KQogICAgICAgIGludGVybmFsCiAgICAgICAgb25seUJlZm9yZUNyb3dkc2FsZQogICAgICAgIG9ubHlFYXJseVB1cmNoYXNlVGVybQogICAgICAgIHJldHVybnMgKGJvb2wpCiAgICB7CgogICAgICAgIGlmIChwdXJjaGFzZWRBdCA9PSAwIHx8IHB1cmNoYXNlZEF0ID4gbm93KSB7CiAgICAgICAgICAgIHRocm93OwogICAgICAgIH0KCiAgICAgICAgZWFybHlQdXJjaGFzZXMucHVzaChFYXJseVB1cmNoYXNlKHB1cmNoYXNlciwgYW1vdW50LCBwdXJjaGFzZWRBdCkpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIC8vLyBAZGV2IENsb3NlIGVhcmx5IHB1cmNoYXNlIHRlcm0KICAgIGZ1bmN0aW9uIGNsb3NlRWFybHlQdXJjaGFzZSgpCiAgICAgICAgZXh0ZXJuYWwKICAgICAgICBvbmx5T3duZXIKICAgICAgICByZXR1cm5zIChib29sKQogICAgewogICAgICAgIGVhcmx5UHVyY2hhc2VDbG9zZWRBdCA9IG5vdzsKICAgIH0KCiAgICAvLy8gQGRldiBTZXR1cCBmdW5jdGlvbiBzZXRzIGV4dGVybmFsIGNyb3dkc2FsZSBjb250cmFjdCdzIGFkZHJlc3MKICAgIC8vLyBAcGFyYW0gemVuT1NDcm93ZHNhbGVBZGRyZXNzIFRva2VuIGFkZHJlc3MKICAgIGZ1bmN0aW9uIHNldHVwKGFkZHJlc3MgemVuT1NDcm93ZHNhbGVBZGRyZXNzKQogICAgICAgIGV4dGVybmFsCiAgICAgICAgb25seU93bmVyCiAgICAgICAgcmV0dXJucyAoYm9vbCkKICAgIHsKICAgICAgICBpZiAoYWRkcmVzcyh6ZW5PU0Nyb3dkc2FsZSkgPT0gMCkgewogICAgICAgICAgICB6ZW5PU0Nyb3dkc2FsZSA9IEFic3RyYWN0WkVOT1NDcm93ZHNhbGUoemVuT1NDcm93ZHNhbGVBZGRyZXNzKTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfQogICAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KCiAgICBmdW5jdGlvbiB3aXRoZHJhdyh1aW50IHdpdGhkcmF3YWxBbW91bnQpIG9ubHlPd25lciB7CiAgICAgICAgICBpZighb3duZXIuc2VuZCh3aXRoZHJhd2FsQW1vdW50KSkgdGhyb3c7ICAvLyBzZW5kIGNvbGxlY3RlZCBFVEggdG8gWkVOT1MgdGVhbQogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpIG9ubHlPd25lciB7CiAgICAgICAgb3duZXIgPSBuZXdPd25lcjsKICAgIH0KCiAgICAvLy8gQGRldiBCeSBzZW5kaW5nIEV0aGVyIHRvIHRoZSBjb250cmFjdCwgZWFybHkgcHVyY2hhc2Ugd2lsbCBiZSByZWNvcmRlZC4KICAgIGZ1bmN0aW9uICgpIHBheWFibGUgewogICAgICAgIGFwcGVuZEVhcmx5UHVyY2hhc2UobXNnLnNlbmRlciwgbXNnLnZhbHVlLCBibG9jay50aW1lc3RhbXApOwogICAgfQp9'.
	

]
