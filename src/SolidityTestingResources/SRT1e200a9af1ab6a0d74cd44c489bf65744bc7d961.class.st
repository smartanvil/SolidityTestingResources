Class {
	#name : #SRT1e200a9af1ab6a0d74cd44c489bf65744bc7d961,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT1e200a9af1ab6a0d74cd44c489bf65744bc7d961 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTQ7Cgpjb250cmFjdCBCb3VudHlCRyB7CgogICAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CgogICAgdWludDI1NiBwdWJsaWMgYm91bnR5Q291bnQgPSAwOwogICAgdWludDI1NiBwdWJsaWMgbWluQm91bnR5ID0gMTAgZmlubmV5OwogICAgdWludDI1NiBwdWJsaWMgYm91bnR5RmVlID0gMiBmaW5uZXk7CiAgICB1aW50MjU2IHB1YmxpYyBib3VudHlGZWVDb3VudCA9IDA7CiAgICB1aW50MjU2IHB1YmxpYyBib3VudHlCZW5lZmljaWFyaWVzQ291bnQgPSAyOwogICAgdWludDI1NiBwdWJsaWMgYm91bnR5RHVyYXRpb24gPSAzMCBob3VyczsKCiAgICBtYXBwaW5nKHVpbnQyNTYgPT4gQm91bnR5KSBib3VudHlBdDsKCiAgICBldmVudCBCb3VudHlTdGF0dXMoc3RyaW5nIF9tc2csIHVpbnQyNTYgX2lkLCBhZGRyZXNzIF9mcm9tLCB1aW50MjU2IF9hbW91bnQpOwogICAgZXZlbnQgUmV3YXJkU3RhdHVzKHN0cmluZyBfbXNnLCB1aW50MjU2IF9pZCwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX2Ftb3VudCk7CiAgICBldmVudCBFcnJvclN0YXR1cyhzdHJpbmcgX21zZywgdWludDI1NiBfaWQsIGFkZHJlc3MgX3RvLCB1aW50MjU2IF9hbW91bnQpOwoKICAgIHN0cnVjdCBCb3VudHkgewogICAgICAgIHVpbnQyNTYgaWQ7CiAgICAgICAgYWRkcmVzcyBvd25lcjsKICAgICAgICB1aW50MjU2IGJvdW50eTsKICAgICAgICB1aW50MjU2IHJlbWFpbmluZ0JvdW50eTsKICAgICAgICB1aW50MjU2IHN0YXJ0VGltZTsKICAgICAgICB1aW50MjU2IGVuZFRpbWU7CiAgICAgICAgYm9vbCBlbmRlZDsKICAgICAgICBib29sIHJldHJhY3RlZDsKICAgIH0KCiAgICBmdW5jdGlvbiBCb3VudHlCRygpIHB1YmxpYyB7CiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgfQoKICAgIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgICAgIF87CiAgICB9CgogICAgLy8gQkxPQ0tHRUVLUyBBQ1RJT05TCgogICAgZnVuY3Rpb24gd2l0aGRyYXdGZWUodWludDI1NiBfYW1vdW50KSBleHRlcm5hbCBvbmx5T3duZXIgewogICAgICAgIHJlcXVpcmUoX2Ftb3VudCA8PSBib3VudHlGZWVDb3VudCk7CiAgICAgICAgYm91bnR5RmVlQ291bnQgLT0gX2Ftb3VudDsKICAgICAgICBvd25lci50cmFuc2ZlcihfYW1vdW50KTsKICAgIH0KCiAgICBmdW5jdGlvbiBzZXRCb3VudHlEdXJhdGlvbih1aW50MjU2IF9ib3VudHlEdXJhdGlvbikgZXh0ZXJuYWwgb25seU93bmVyIHsKICAgICAgICBib3VudHlEdXJhdGlvbiA9IF9ib3VudHlEdXJhdGlvbjsKICAgIH0KCiAgICBmdW5jdGlvbiBzZXRNaW5Cb3VudHkodWludDI1NiBfbWluQm91bnR5KSBleHRlcm5hbCBvbmx5T3duZXIgewogICAgICAgIG1pbkJvdW50eSA9IF9taW5Cb3VudHk7CiAgICB9CgogICAgZnVuY3Rpb24gc2V0Qm91bnR5QmVuZWZpY2lhcmllc0NvdW50KHVpbnQyNTYgX2JvdW50eUJlbmVmaWNpYXJpZXNDb3VudCkgZXh0ZXJuYWwgb25seU93bmVyIHsKICAgICAgICBib3VudHlCZW5lZmljaWFyaWVzQ291bnQgPSBfYm91bnR5QmVuZWZpY2lhcmllc0NvdW50OwogICAgfQoKICAgIGZ1bmN0aW9uIHJld2FyZFVzZXJzKHVpbnQyNTYgX2JvdW50eUlkLCBhZGRyZXNzW10gX3VzZXJzLCB1aW50MjU2W10gX3Jld2FyZHMpIGV4dGVybmFsIG9ubHlPd25lciB7CiAgICAgICAgQm91bnR5IHN0b3JhZ2UgYm91bnR5ID0gYm91bnR5QXRbX2JvdW50eUlkXTsKICAgICAgICByZXF1aXJlKAogICAgICAgICAgICAhYm91bnR5LmVuZGVkICYmCiAgICAgICAgICAgICFib3VudHkucmV0cmFjdGVkICYmCiAgICAgICAgICAgIGJvdW50eS5zdGFydFRpbWUgKyBib3VudHlEdXJhdGlvbiA+IGJsb2NrLnRpbWVzdGFtcCAmJgogICAgICAgICAgICBfdXNlcnMubGVuZ3RoID4gMCAmJgogICAgICAgICAgICBfdXNlcnMubGVuZ3RoIDw9IGJvdW50eUJlbmVmaWNpYXJpZXNDb3VudCAmJgogICAgICAgICAgICBfdXNlcnMubGVuZ3RoID09IF9yZXdhcmRzLmxlbmd0aAogICAgICAgICk7CgoKCgoKICAgICAgICBib3VudHkuZW5kZWQgPSB0cnVlOwogICAgICAgIGJvdW50eS5lbmRUaW1lID0gYmxvY2sudGltZXN0YW1wOwogICAgICAgIHVpbnQyNTYgY3VycmVudFJld2FyZHMgPSAwOwogICAgICAgIGZvciAodWludDggaSA9IDA7IGkgPCBfcmV3YXJkcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICBjdXJyZW50UmV3YXJkcyArPSBfcmV3YXJkc1tpXTsKICAgICAgICB9CgoKCgoKICAgICAgICByZXF1aXJlKGJvdW50eS5ib3VudHkgPj0gY3VycmVudFJld2FyZHMpOwoKICAgICAgICBmb3IgKGkgPSAwOyBpIDwgX3VzZXJzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIF91c2Vyc1tpXS50cmFuc2ZlcihfcmV3YXJkc1tpXSk7CiAgICAgICAgICAgIFJld2FyZFN0YXR1cygiUmV3YXJkIHNlbnQiLCBib3VudHkuaWQsIF91c2Vyc1tpXSwgX3Jld2FyZHNbaV0pOwogICAgICAgICAgICAvKiBpZiAoX3VzZXJzW2ldLnNlbmQoX3Jld2FyZHNbaV0pKSB7CiAgICAgICAgICAgICAgICBib3VudHkucmVtYWluaW5nQm91bnR5IC09IF9yZXdhcmRzW2ldOwogICAgICAgICAgICAgICAgUmV3YXJkU3RhdHVzKCdSZXdhcmQgc2VudCcsIGJvdW50eS5pZCwgX3VzZXJzW2ldLCBfcmV3YXJkc1tpXSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBFcnJvclN0YXR1cygnRXJyb3IgaW4gcmV3YXJkJywgYm91bnR5LmlkLCBfdXNlcnNbaV0sIF9yZXdhcmRzW2ldKTsKICAgICAgICAgICAgfSAqLwogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiByZXdhcmRVc2VyKHVpbnQyNTYgX2JvdW50eUlkLCBhZGRyZXNzIF91c2VyLCB1aW50MjU2IF9yZXdhcmQpIGV4dGVybmFsIG9ubHlPd25lciB7CiAgICAgICAgQm91bnR5IHN0b3JhZ2UgYm91bnR5ID0gYm91bnR5QXRbX2JvdW50eUlkXTsKICAgICAgICByZXF1aXJlKGJvdW50eS5yZW1haW5pbmdCb3VudHkgPj0gX3Jld2FyZCk7CiAgICAgICAgYm91bnR5LnJlbWFpbmluZ0JvdW50eSAtPSBfcmV3YXJkOwoKICAgICAgICBib3VudHkuZW5kZWQgPSB0cnVlOwogICAgICAgIGJvdW50eS5lbmRUaW1lID0gYmxvY2sudGltZXN0YW1wOwogICAgICAgIAogICAgICAgIF91c2VyLnRyYW5zZmVyKF9yZXdhcmQpOwogICAgICAgIFJld2FyZFN0YXR1cygnUmV3YXJkIHNlbnQnLCBib3VudHkuaWQsIF91c2VyLCBfcmV3YXJkKTsKICAgIH0KCiAgICAvLyBVU0VSIEFDVElPTlMgVFJJR0dFUkVEIEJZIE1FVEFNQVNLCgogICAgZnVuY3Rpb24gY3JlYXRlQm91bnR5KHVpbnQyNTYgX2JvdW50eUlkKSBleHRlcm5hbCBwYXlhYmxlIHsKICAgICAgICByZXF1aXJlKAogICAgICAgICAgICBtc2cudmFsdWUgPj0gbWluQm91bnR5ICsgYm91bnR5RmVlCiAgICAgICAgKTsKICAgICAgICBCb3VudHkgc3RvcmFnZSBib3VudHkgPSBib3VudHlBdFtfYm91bnR5SWRdOwogICAgICAgIHJlcXVpcmUoYm91bnR5LmlkID09IDApOwogICAgICAgIGJvdW50eUNvdW50Kys7CiAgICAgICAgYm91bnR5LmlkID0gX2JvdW50eUlkOwogICAgICAgIGJvdW50eS5ib3VudHkgPSBtc2cudmFsdWUgLSBib3VudHlGZWU7CiAgICAgICAgYm91bnR5LnJlbWFpbmluZ0JvdW50eSA9IGJvdW50eS5ib3VudHk7CiAgICAgICAgYm91bnR5RmVlQ291bnQgKz0gYm91bnR5RmVlOwogICAgICAgIGJvdW50eS5zdGFydFRpbWUgPSBibG9jay50aW1lc3RhbXA7CiAgICAgICAgYm91bnR5Lm93bmVyID0gbXNnLnNlbmRlcjsKICAgICAgICBCb3VudHlTdGF0dXMoJ0JvdW50eSBzdWJtaXR0ZWQnLCBib3VudHkuaWQsIG1zZy5zZW5kZXIsIG1zZy52YWx1ZSk7CiAgICB9CgogICAgZnVuY3Rpb24gY2FuY2VsQm91bnR5KHVpbnQyNTYgX2JvdW50eUlkKSBleHRlcm5hbCB7CiAgICAgICAgQm91bnR5IHN0b3JhZ2UgYm91bnR5ID0gYm91bnR5QXRbX2JvdW50eUlkXTsKICAgICAgICByZXF1aXJlKAogICAgICAgICAgICBtc2cuc2VuZGVyID09IGJvdW50eS5vd25lciAmJgogICAgICAgICAgICAhYm91bnR5LmVuZGVkICYmCiAgICAgICAgICAgICFib3VudHkucmV0cmFjdGVkICYmCiAgICAgICAgICAgIGJvdW50eS5vd25lciA9PSBtc2cuc2VuZGVyICYmCiAgICAgICAgICAgIGJvdW50eS5zdGFydFRpbWUgKyBib3VudHlEdXJhdGlvbiA8IGJsb2NrLnRpbWVzdGFtcAogICAgICAgICk7CiAgICAgICAgYm91bnR5LmVuZGVkID0gdHJ1ZTsKICAgICAgICBib3VudHkucmV0cmFjdGVkID0gdHJ1ZTsKICAgICAgICBib3VudHkub3duZXIudHJhbnNmZXIoYm91bnR5LmJvdW50eSk7CiAgICAgICAgQm91bnR5U3RhdHVzKCdCb3VudHkgd2FzIGNhbmNlbGVkJywgYm91bnR5LmlkLCBtc2cuc2VuZGVyLCBib3VudHkuYm91bnR5KTsKICAgIH0KCgogICAgLy8gQ1VTVE9NIEdFVFRFUlMKCiAgICBmdW5jdGlvbiBnZXRCYWxhbmNlKCkgZXh0ZXJuYWwgdmlldyByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgcmV0dXJuIHRoaXMuYmFsYW5jZTsKICAgIH0KCiAgICBmdW5jdGlvbiBnZXRCb3VudHkodWludDI1NiBfYm91bnR5SWQpIGV4dGVybmFsIHZpZXcKICAgIHJldHVybnMgKHVpbnQyNTYsIGFkZHJlc3MsIHVpbnQyNTYsIHVpbnQyNTYsIHVpbnQyNTYsIHVpbnQyNTYsIGJvb2wsIGJvb2wpIHsKICAgICAgICBCb3VudHkgbWVtb3J5IGJvdW50eSA9IGJvdW50eUF0W19ib3VudHlJZF07CiAgICAgICAgcmV0dXJuICgKICAgICAgICAgICAgYm91bnR5LmlkLAogICAgICAgICAgICBib3VudHkub3duZXIsCiAgICAgICAgICAgIGJvdW50eS5ib3VudHksCiAgICAgICAgICAgIGJvdW50eS5yZW1haW5pbmdCb3VudHksCiAgICAgICAgICAgIGJvdW50eS5zdGFydFRpbWUsCiAgICAgICAgICAgIGJvdW50eS5lbmRUaW1lLAogICAgICAgICAgICBib3VudHkuZW5kZWQsCiAgICAgICAgICAgIGJvdW50eS5yZXRyYWN0ZWQKICAgICAgICApOwogICAgfQoKfQ=='.
	

]
