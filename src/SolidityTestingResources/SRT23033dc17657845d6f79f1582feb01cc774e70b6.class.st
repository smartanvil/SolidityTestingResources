Class {
	#name : #SRT23033dc17657845d6f79f1582feb01cc774e70b6,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT23033dc17657845d6f79f1582feb01cc774e70b6 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTA7CgovL2NvcHlyaWdodCAyMDE3IE5ld0FsY2hlbXkKLy9Xcml0dGVuIGJ5IERlbm5pcyBQZXRlcnNvbgoKY29udHJhY3QgQWJzdHJhY3RTd2VlcGVyIHsKICAgIC8vYWJzdHJhY3Q6CiAgICBmdW5jdGlvbiBzd2VlcChhZGRyZXNzIHRva2VuLCB1aW50IGFtb3VudCkgcmV0dXJucyAoYm9vbCk7CgogICAgLy9jb25jcmV0ZToKICAgIGZ1bmN0aW9uICgpIHsgdGhyb3c7IH0KCiAgICBDb250cm9sbGVyIGNvbnRyb2xsZXI7CgogICAgZnVuY3Rpb24gQWJzdHJhY3RTd2VlcGVyKGFkZHJlc3MgX2NvbnRyb2xsZXIpIHsKICAgICAgICBjb250cm9sbGVyID0gQ29udHJvbGxlcihfY29udHJvbGxlcik7CiAgICB9CgogICAgbW9kaWZpZXIgY2FuU3dlZXAoKSB7CiAgICAgICAgaWYgKG1zZy5zZW5kZXIgIT0gY29udHJvbGxlci5hdXRob3JpemVkQ2FsbGVyKCkgJiYgbXNnLnNlbmRlciAhPSBjb250cm9sbGVyLm93bmVyKCkpIHRocm93OwogICAgICAgIGlmIChjb250cm9sbGVyLmhhbHRlZCgpKSB0aHJvdzsKICAgICAgICBfOwogICAgfQp9Cgpjb250cmFjdCBUb2tlbiB7CiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBhKSByZXR1cm5zICh1aW50KSB7cmV0dXJuIDA7fQogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBhLCB1aW50IHZhbCkgcmV0dXJucyAoYm9vbCkge3JldHVybiBmYWxzZTt9Cn0KCmNvbnRyYWN0IERlZmF1bHRTd2VlcGVyIGlzIEFic3RyYWN0U3dlZXBlciB7CiAgICBmdW5jdGlvbiBEZWZhdWx0U3dlZXBlcihhZGRyZXNzIGNvbnRyb2xsZXIpIAogICAgICAgICAgICAgQWJzdHJhY3RTd2VlcGVyKGNvbnRyb2xsZXIpIHt9CgogICAgZnVuY3Rpb24gc3dlZXAoYWRkcmVzcyBfdG9rZW4sIHVpbnQgX2Ftb3VudCkgIAogICAgY2FuU3dlZXAKICAgIHJldHVybnMgKGJvb2wpIHsKICAgICAgICBUb2tlbiB0b2tlbiA9IFRva2VuKF90b2tlbik7CiAgICAgICAgdWludCBhbW91bnQgPSBfYW1vdW50OwogICAgICAgIGlmIChhbW91bnQgPiB0b2tlbi5iYWxhbmNlT2YodGhpcykpIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KCiAgICAgICAgYWRkcmVzcyBkZXN0aW5hdGlvbiA9IGNvbnRyb2xsZXIuZGVzdGluYXRpb24oKTsKCgkvLyBCZWNhdXNlIHN3ZWVwIGlzIGNhbGxlZCB3aXRoIGRlbGVnYXRlY2FsbCwgdGhpcyB0eXBpY2FsbHkKCS8vIGNvbWVzIGZyb20gdGhlIFVzZXJXYWxsZXQuCiAgICAgICAgYm9vbCBzdWNjZXNzID0gdG9rZW4udHJhbnNmZXIoZGVzdGluYXRpb24sIGFtb3VudCk7IAogICAgICAgIGlmIChzdWNjZXNzKSB7IAogICAgICAgICAgICBjb250cm9sbGVyLmxvZ1N3ZWVwKHRoaXMsIF90b2tlbiwgX2Ftb3VudCk7CiAgICAgICAgfSAKICAgICAgICByZXR1cm4gc3VjY2VzczsKICAgIH0KfQoKY29udHJhY3QgVXNlcldhbGxldCB7CiAgICBBYnN0cmFjdFN3ZWVwZXJMaXN0IGM7CiAgICBmdW5jdGlvbiBVc2VyV2FsbGV0KGFkZHJlc3MgX3N3ZWVwZXJsaXN0KSB7CiAgICAgICAgYyA9IEFic3RyYWN0U3dlZXBlckxpc3QoX3N3ZWVwZXJsaXN0KTsKICAgIH0KCiAgICBmdW5jdGlvbiBzd2VlcChhZGRyZXNzIF90b2tlbiwgdWludCBfYW1vdW50KSAKICAgIHJldHVybnMgKGJvb2wpIHsKICAgICAgICByZXR1cm4gYy5zd2VlcGVyT2YoX3Rva2VuKS5kZWxlZ2F0ZWNhbGwobXNnLmRhdGEpOwogICAgfQp9Cgpjb250cmFjdCBBYnN0cmFjdFN3ZWVwZXJMaXN0IHsKICAgIGZ1bmN0aW9uIHN3ZWVwZXJPZihhZGRyZXNzIF90b2tlbikgcmV0dXJucyAoYWRkcmVzcyk7Cn0KCmNvbnRyYWN0IENvbnRyb2xsZXIgaXMgQWJzdHJhY3RTd2VlcGVyTGlzdCB7CiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKICAgIGFkZHJlc3MgcHVibGljIGF1dGhvcml6ZWRDYWxsZXI7CgogICAgLy9kZXN0aW5hdGlvbiBkZWZhdWx0cyB0byBzYW1lIGFzIG93bmVyCiAgICAvL2J1dCBpcyBzZXBhcmF0ZSB0byBhbGxvdyBuZXZlciBleHBvc2luZyBjb2xkIHN0b3JhZ2UKICAgIGFkZHJlc3MgcHVibGljIGRlc3RpbmF0aW9uOyAKCiAgICBib29sIHB1YmxpYyBoYWx0ZWQ7CgogICAgZXZlbnQgTG9nTmV3V2FsbGV0KGFkZHJlc3MgcmVjZWl2ZXIpOwogICAgZXZlbnQgTG9nU3dlZXAoYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRva2VuLCB1aW50IGFtb3VudCk7CiAgICAKICAgIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lcikgdGhyb3c7IAogICAgICAgIF87CiAgICB9CgogICAgbW9kaWZpZXIgb25seUF1dGhvcml6ZWRDYWxsZXIoKSB7CiAgICAgICAgaWYgKG1zZy5zZW5kZXIgIT0gYXV0aG9yaXplZENhbGxlcikgdGhyb3c7IAogICAgICAgIF87CiAgICB9CgogICAgbW9kaWZpZXIgb25seUFkbWlucygpIHsKICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBhdXRob3JpemVkQ2FsbGVyICYmIG1zZy5zZW5kZXIgIT0gb3duZXIpIHRocm93OyAKICAgICAgICBfOwogICAgfQoKICAgIGZ1bmN0aW9uIENvbnRyb2xsZXIoKSAKICAgIHsKICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgICAgICAgZGVzdGluYXRpb24gPSBtc2cuc2VuZGVyOwogICAgICAgIGF1dGhvcml6ZWRDYWxsZXIgPSBtc2cuc2VuZGVyOwogICAgfQoKICAgIGZ1bmN0aW9uIGNoYW5nZUF1dGhvcml6ZWRDYWxsZXIoYWRkcmVzcyBfbmV3Q2FsbGVyKSBvbmx5T3duZXIgewogICAgICAgIGF1dGhvcml6ZWRDYWxsZXIgPSBfbmV3Q2FsbGVyOwogICAgfQoKICAgIGZ1bmN0aW9uIGNoYW5nZURlc3RpbmF0aW9uKGFkZHJlc3MgX2Rlc3QpIG9ubHlPd25lciB7CiAgICAgICAgZGVzdGluYXRpb24gPSBfZGVzdDsKICAgIH0KCiAgICBmdW5jdGlvbiBjaGFuZ2VPd25lcihhZGRyZXNzIF9vd25lcikgb25seU93bmVyIHsKICAgICAgICBvd25lciA9IF9vd25lcjsKICAgIH0KCiAgICBmdW5jdGlvbiBtYWtlV2FsbGV0KCkgb25seUFkbWlucyByZXR1cm5zIChhZGRyZXNzIHdhbGxldCkgIHsKICAgICAgICB3YWxsZXQgPSBhZGRyZXNzKG5ldyBVc2VyV2FsbGV0KHRoaXMpKTsKICAgICAgICBMb2dOZXdXYWxsZXQod2FsbGV0KTsKICAgIH0KCiAgICAvL2Fzc3VtaW5nIGhhbHQgYmVjYXVzZSBjYWxsZXIgaXMgY29tcHJvbWlzZWQKICAgIC8vc28gbGV0IGNhbGxlciBzdG9wIGZvciBzcGVlZCwgb25seSBvd25lciBjYW4gcmVzdGFydAoKICAgIGZ1bmN0aW9uIGhhbHQoKSBvbmx5QWRtaW5zIHsKICAgICAgICBoYWx0ZWQgPSB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIHN0YXJ0KCkgb25seU93bmVyIHsKICAgICAgICBoYWx0ZWQgPSBmYWxzZTsKICAgIH0KCiAgICAvLyoqKioqKioqKioqCiAgICAvL1N3ZWVwZXJMaXN0CiAgICAvLyoqKioqKioqKioqCiAgICBhZGRyZXNzIHB1YmxpYyBkZWZhdWx0U3dlZXBlciA9IGFkZHJlc3MobmV3IERlZmF1bHRTd2VlcGVyKHRoaXMpKTsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gYWRkcmVzcykgc3dlZXBlcnM7CgogICAgZnVuY3Rpb24gYWRkU3dlZXBlcihhZGRyZXNzIF90b2tlbiwgYWRkcmVzcyBfc3dlZXBlcikgb25seU93bmVyIHsKICAgICAgICBzd2VlcGVyc1tfdG9rZW5dID0gX3N3ZWVwZXI7CiAgICB9CgogICAgZnVuY3Rpb24gc3dlZXBlck9mKGFkZHJlc3MgX3Rva2VuKSByZXR1cm5zIChhZGRyZXNzKSB7CiAgICAgICAgYWRkcmVzcyBzd2VlcGVyID0gc3dlZXBlcnNbX3Rva2VuXTsKICAgICAgICBpZiAoc3dlZXBlciA9PSAwKSBzd2VlcGVyID0gZGVmYXVsdFN3ZWVwZXI7CiAgICAgICAgcmV0dXJuIHN3ZWVwZXI7CiAgICB9CgogICAgZnVuY3Rpb24gbG9nU3dlZXAoYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRva2VuLCB1aW50IGFtb3VudCkgewogICAgICAgIExvZ1N3ZWVwKGZyb20sIHRva2VuLCBhbW91bnQpOwogICAgfQp9'.
	

]
