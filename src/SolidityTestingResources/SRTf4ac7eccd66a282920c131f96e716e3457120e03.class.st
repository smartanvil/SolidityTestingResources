Class {
	#name : #SRTf4ac7eccd66a282920c131f96e716e3457120e03,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTf4ac7eccd66a282920c131f96e716e3457120e03 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuNDsKCiAKCi8vQnVmZmVyIG92ZXJmbG93IGltcGxlbWVudGF0aW9uCgpjb250cmFjdCBNYXRoIHsKCiAKCiAgICBmdW5jdGlvbiBzYWZlTXVsKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7CgogICAgICAgIHVpbnQgYyA9IGEgKiBiOwoKICAgICAgICBhc3NlcnQoYSAhPSAwICYmIGIgIT0gMCApOwoKICAgICAgICByZXR1cm4gYzsKCiAgICB9CgogCgogICAgZnVuY3Rpb24gc2FmZVN1Yih1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgewoKICAgICAgICBhc3NlcnQoYiA8PSBhKTsKCiAgICAgICAgcmV0dXJuIGEgLSBiOwoKICAgIH0KCiAKCiAgICBmdW5jdGlvbiBzYWZlQWRkKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7CgogICAgICAgIHVpbnQgYyA9IGEgKyBiOwoKICAgICAgICBhc3NlcnQoYiA8PSBjICYmIGMgPj0gYSk7CgogICAgICAgIHJldHVybiBjOwoKICAgfQoKIAoKfQoKIAoKY29udHJhY3QgRVJDMjAgewoKIAoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sIHVpbnQgdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewoKICAgICAgICBpZiAodG9rZW5Pd25lZFttc2cuc2VuZGVyXSA+PSB2YWx1ZSAmJiB0b2tlbk93bmVkW3RvXSArIHZhbHVlID4gdG9rZW5Pd25lZFt0b10pIHsKCiAgICAgICAgICAgIHRva2VuT3duZWRbbXNnLnNlbmRlcl0gLT0gdmFsdWU7CgogICAgICAgICAgICB0b2tlbk93bmVkW3RvXSArPSB2YWx1ZTsKCiAgICAgICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIHRvLCB2YWx1ZSk7CgogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKCiAgICAgICAgfSBlbHNlIHsgcmV0dXJuIGZhbHNlOyB9CgogICAgfQoKIAoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIGZyb20sIGFkZHJlc3MgdG8sIHVpbnQgdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewoKICAgICAgICBpZiAodG9rZW5Pd25lZFtmcm9tXSA+PSB2YWx1ZSAmJiBhbGxvd2VkW2Zyb21dW21zZy5zZW5kZXJdID49IHZhbHVlICYmIHRva2VuT3duZWRbdG9dICsgdmFsdWUgPiB0b2tlbk93bmVkW3RvXSkgewoKICAgICAgICAgICAgdG9rZW5Pd25lZFt0b10gKz0gdmFsdWU7CgogICAgICAgICAgICB0b2tlbk93bmVkW2Zyb21dIC09IHZhbHVlOwoKICAgICAgICAgICAgYWxsb3dlZFtmcm9tXVttc2cuc2VuZGVyXSAtPSB2YWx1ZTsKCiAgICAgICAgICAgIFRyYW5zZmVyKGZyb20sIHRvLCB2YWx1ZSk7CgogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKCiAgICAgICAgfSBlbHNlIHsgcmV0dXJuIGZhbHNlOyB9CgogICAgfQoKIAoKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIG93bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50IGJhbGFuY2UpIHsKCiAgICAgICAgcmV0dXJuIHRva2VuT3duZWRbb3duZXJdOwoKICAgIH0KCiAKCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3Mgc3BlbmRlciwgdWludCB2YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CgogICAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bc3BlbmRlcl0gPSB2YWx1ZTsKCiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgc3BlbmRlciwgdmFsdWUpOwoKICAgICAgICByZXR1cm4gdHJ1ZTsKCiAgICB9CgogCgogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3Mgb3duZXIsIGFkZHJlc3Mgc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludCByZW1haW5pbmcpIHsKCiAgICAgICAgcmV0dXJuIGFsbG93ZWRbb3duZXJdW3NwZW5kZXJdOwoKICAgIH0KCiAKCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50IHZhbHVlKTsKCiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBzcGVuZGVyLCB1aW50IHZhbHVlKTsKCiAKCiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludCkgaW50ZXJuYWwgdG9rZW5Pd25lZDsgLy8gQ29udHJhY3QgZmllbGQgZm9yIHN0b3JpbmcgdG9rZW4gYmFsYW5jZSBvd25lZCBieSBjZXJ0YWluIGFkZHJlc3MKCiAKCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludCkpIGFsbG93ZWQ7CgogCgogICAgdWludCBwdWJsaWMgdG90YWxTdXBwbHk7CgogCgogICAgc3RyaW5nIHB1YmxpYyBuYW1lID0gIkJpdE1vaGFyIjsKCiAKCiAgICBzdHJpbmcgcHVibGljIHN5bWJvbCA9ICJNT0giOwoKIAoKICAgIHVpbnQgcHVibGljIGRlY2ltYWxzID0gMTA7CgogCgp9CgogCgovL1Rva2VuRGlzdGlidXRpb24gY29udHJhY3QgaW5oZXJpdHMgTWF0aCwgRVJDMjAgY29udHJhY3RzLCB0aGlzIGNsYXNzIGluc3RhdGlhdGVzIHRoZSB0b2tlbiBkaXN0cmlidXRpb24gcHJvY2VzcwoKLy9UaGlzIGNvbnRyYWN0IGltcGxlbWVudHMgdGltZSB3aW5kb3dlZCBkaXN0cmlidXRpb24gb2YgdG9rZW5zLCBkdXJpbmcgZWFjaCB0aW1lIHdpbmRvdyBhIHNsaWNlIG9mIHRvdGFsIHRva2VuIGlzIGRpc3RyaWJ1dGVkIGJhc2VkIGVtaXNzaW9uIGN1cnZlCgovL09uY2UgdGhlIHVwcGVyY2FwIG9mIHRoZSBzbGljZSBvZiB0b3RhbCB0b2tlbnMgaXMgcmVhY2hlZCwgdGhlIGNvbnRyYWN0IG5vIGxvbmdlciBkaXN0cmlidXRlcyB0aGUgdG9rZW4uCgpjb250cmFjdCBUb2tlbkRpc3RyaWJ1dGlvbiBpcyBNYXRoLCBFUkMyMCB7CgogCgogICAgLy9hc3NpZ25zIG93bmVyIHRvIHRoZSBjb250cmFjdCAmIGluaXRpbGl6ZXMgdGhlIG51bWJlciBvZiB0cmFuY2hlcwoKICAgIGZ1bmN0aW9uIFRva2VuRGlzdHJpYnV0aW9uKCkgewoKICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7CgogCgogICAgICAgIHRvdGFsU3VwcGx5ID0gMTUwMDAwMDAwMDAwMDAwMDAwMDA7IC8vIFRvdGFsIHN1cHBseSBvZiB0b2tlbnMgd2l0aCAxMCBkZWNpbWFsIHBsYWNlcwoKICAgICAgICBzdGFydEJsb2NrID0gNDI2NzUxNDsKCiAgICAgICAgZW1pc3Npb25QZXJibG9jayA9IDgwOyAvL2NvbnNpZGVyaW5nIDI1IHNlY3MgYSBibG9jayBnZW5lcmF0aW9uIHdpdGggMTAgZGVjaW1hbCBwbGFjZXMKCiAgICAgICAgYmxvY2tzUGVyWWVhciA9IDEwMDAwMDAwOyAvL2NvbnNpZGVyaW5nIDI1IHNlY3MgYSBibG9jawoKICAgICAgICBwcmVNaW5lZCA9IDkwMDAwMDAwMDAwMDAwMDAwMDA7CgogICAgICAgIHRva2Vuc01pbnRlZCA9IDA7CgogICAgICAgIHByZU1pbmVEb25lID0gZmFsc2U7CgogCgogICAgfQoKIAoKICAgIGZ1bmN0aW9uIHByZU1pbmUoKSByZXR1cm5zIChib29sIHopIHsKCiAgICAgICAgaWYobXNnLnNlbmRlciA9PSBvd25lciAmJiAhcHJlTWluZURvbmUpIHsKCiAgICAgICAgICAgIHRva2VuT3duZWRbMHg2MDIxMmI4N0M2ZTEwNmQzODUyODkwRkU2ZThkMDBkYjNEOTlkMDAyXSA9IDkwMDAwMDAwMDAwMDAwMDAwMDA7CgogICAgICAgICAgICBwcmVNaW5lRG9uZSA9IHRydWU7CgogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKCiAgICAgICAgfSBlbHNlIHsKCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKCiAgICAgICAgfQoKICAgIH0KCiAKCiAgICBmdW5jdGlvbiBtaW5lKCkgcmV0dXJucyAoYm9vbCB6KSB7CgogICAgICAgIHVpbnQgYmxvY2tUaW1lID0gKCgoYmxvY2subnVtYmVyIC0gc3RhcnRCbG9jaykgLyBibG9ja3NQZXJZZWFyKSArIDEpOwoKICAgICAgICB1aW50IGN1cnJlbnRFbWlzc2lvbiA9IGVtaXNzaW9uUGVyYmxvY2sgLyBibG9ja1RpbWU7CgogICAgICAgIHVpbnQgZW1pdHRlZEJsb2NrcyA9IHN0YXJ0QmxvY2s7CgogICAgICAgIGlmKGN1cnJlbnRFbWlzc2lvbiAhPSBlbWlzc2lvblBlcmJsb2NrKSB7IC8vaW4gY2FzZSBvZiBoYWx2aW5nIGFuZCBsYXRlciB0aW1lCgogICAgICAgICAgICBlbWl0dGVkQmxvY2tzID0gc3RhcnRCbG9jayArIChibG9ja3NQZXJZZWFyICogYmxvY2tUaW1lKTsKCiAgICAgICAgfQoKICAgICAgICB1aW50IG1pbmVkID0gMDsKCiAgICAgICAgaWYoYmxvY2tUaW1lID4gMSkgeyAvL2FmdGVyIGhhbHZpbmcKCiAgICAgICAgICAgIHVpbnQgcHJldk1pbnRlZCA9IDA7CgogICAgICAgICAgICBmb3IgKHVpbnQgaSA9IDE7IGkgPD0gYmxvY2tUaW1lOyBpKyspIHsKCiAgICAgICAgICAgICAgICBwcmV2TWludGVkICs9IChibG9ja3NQZXJZZWFyICogKGVtaXNzaW9uUGVyYmxvY2sgLyBpKSk7CgogICAgICAgICAgICB9CgogICAgICAgICAgICBwcmV2TWludGVkICs9IChibG9jay5udW1iZXIgLSBlbWl0dGVkQmxvY2tzKSAqIGN1cnJlbnRFbWlzc2lvbjsKCiAgICAgICAgICAgIG1pbmVkID0gc2FmZVN1YihwcmV2TWludGVkLCB0b2tlbnNNaW50ZWQpOwoKICAgICAgICB9IGVsc2UgewoKICAgICAgICAgICAgbWluZWQgPSBzYWZlU3ViKChibG9jay5udW1iZXIgLSBlbWl0dGVkQmxvY2tzKSAqIGN1cnJlbnRFbWlzc2lvbiwgdG9rZW5zTWludGVkKTsKCiAgICAgICAgfQoKIAoKICAgICAgICBpZihzYWZlQWRkKHByZU1pbmVkLCBzYWZlQWRkKG1pbmVkLCB0b2tlbnNNaW50ZWQpKSA+IHRvdGFsU3VwcGx5KSB7CgogICAgICAgICAgICByZXR1cm4gZmFsc2U7CgogICAgICAgIH0gZWxzZSB7CgogICAgICAgICAgICB0b2tlbk93bmVkW21zZy5zZW5kZXJdID0gc2FmZUFkZCh0b2tlbk93bmVkW21zZy5zZW5kZXJdLCBtaW5lZCk7CgogICAgICAgICAgICB0b2tlbnNNaW50ZWQgPSBzYWZlQWRkKHRva2Vuc01pbnRlZCwgbWluZWQpOwoKICAgICAgICAgICAgcmV0dXJuIHRydWU7CgogICAgICAgIH0KCiAgICB9CgogCgogICAgZnVuY3Rpb24gY2hhbmdlVG90YWxTdXBwbHkodWludCBfdG90YWxTdXBwbHkpIHJldHVybnMgKGJvb2wgeCl7CgogICAgICAgIGlmKG1zZy5zZW5kZXIgPT0gb3duZXIpewoKICAgICAgICAgICAgdG90YWxTdXBwbHkgPSBfdG90YWxTdXBwbHk7CgogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKCiAgICAgICAgfWVsc2V7CgogICAgICAgICAgICByZXR1cm4gZmFsc2U7CgogICAgICAgIH0KCiAgICB9CgogCgogICAgZnVuY3Rpb24gYWRkaXRpb25hbFByZU1pbmUodWludCBfc3VwcGx5KSByZXR1cm5zIChib29sIHgpewoKICAgICAgICBpZihtc2cuc2VuZGVyID09IG93bmVyKXsKCiAgICAgICAgICAgIHRva2VuT3duZWRbbXNnLnNlbmRlcl0gPSBzYWZlQWRkKHRva2VuT3duZWRbbXNnLnNlbmRlcl0sIF9zdXBwbHkpOwoKICAgICAgICAgICAgcmV0dXJuIHRydWU7CgogICAgICAgIH1lbHNlewoKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwoKICAgICAgICB9CgogICAgfQoKIAoKICAgIGFkZHJlc3Mgb3duZXI7CgogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50KSBpbnRlcm5hbCBldGhlclNlbnQ7IC8vIENvbnRyYWN0IGZpZWxkIGZvciBzdG9yaW5nIGhvdyBtdWNoIEV0aGVyIHdhcyBzZW50IGZyb20gY2VydGFpbiBhZGRyZXNzCgogICAgdWludCBzdGFydEJsb2NrOwoKICAgIHVpbnQgZW1pc3Npb25QZXJibG9jazsgLy9jb25zaWRlcmluZyAyNSBzZWNzIGEgYmxvY2sgZ2VuZXJhdGlvbiB3aXRoIDEwIGRlY2ltYWwgcGxhY2VzCgogICAgdWludCBibG9ja3NQZXJZZWFyOyAvL2NvbnNpZGVyaW5nIDI1IHNlY3MgYSBibG9jawoKICAgIHVpbnQgcHJlTWluZWQ7CgogICAgdWludCB0b2tlbnNNaW50ZWQ7CgogICAgYm9vbCBwcmVNaW5lRG9uZTsKCn0='.
	

]
