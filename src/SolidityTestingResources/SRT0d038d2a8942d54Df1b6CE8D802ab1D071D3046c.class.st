Class {
	#name : #SRT0d038d2a8942d54Df1b6CE8D802ab1D071D3046c,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT0d038d2a8942d54Df1b6CE8D802ab1D071D3046c >> base64 [
	^ ''.
	

]
