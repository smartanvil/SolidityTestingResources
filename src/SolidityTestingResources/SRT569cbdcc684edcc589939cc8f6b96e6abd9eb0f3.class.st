Class {
	#name : #SRT569cbdcc684edcc589939cc8f6b96e6abd9eb0f3,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT569cbdcc684edcc589939cc8f6b96e6abd9eb0f3 >> base64 [
	^ ''.
	

]
