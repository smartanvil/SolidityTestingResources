Class {
	#name : #SRTB2d15402d12528eC560c54C46BF0F7bA8FB4C63d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTB2d15402d12528eC560c54C46BF0F7bA8FB4C63d >> base64 [
	^ ''.
	

]
