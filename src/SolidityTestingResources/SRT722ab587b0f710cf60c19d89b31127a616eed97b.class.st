Class {
	#name : #SRT722ab587b0f710cf60c19d89b31127a616eed97b,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT722ab587b0f710cf60c19d89b31127a616eed97b >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgoKY29udHJhY3QgRGF5VHJhZGVyIHsKICAvLyBCYWcgc29sZCBldmVudAogIGV2ZW50IEJhZ1NvbGQoCiAgICB1aW50MjU2IGJhZ0lkLAogICAgdWludDI1NiBtdWx0aXBsaWVyLAogICAgdWludDI1NiBvbGRQcmljZSwKICAgIHVpbnQyNTYgbmV3UHJpY2UsCiAgICBhZGRyZXNzIHByZXZPd25lciwKICAgIGFkZHJlc3MgbmV3T3duZXIKICApOwoKICAvLyBBZGRyZXNzIG9mIHRoZSBjb250cmFjdCBjcmVhdG9yCiAgYWRkcmVzcyBwdWJsaWMgY29udHJhY3RPd25lcjsKCiAgLy8gRGVmYXVsdCB0aW1lb3V0IGlzIDQgaG91cnMKICB1aW50MjU2IHB1YmxpYyB0aW1lb3V0ID0gMjQgaG91cnM7CgogIC8vIERlZmF1bHQgc3RhcnRpbmcgcHJpY2UgaXMgMC4wMDUgZXRoZXIKICB1aW50MjU2IHB1YmxpYyBzdGFydGluZ1ByaWNlID0gMC4wMDUgZXRoZXI7CgogIEJhZ1tdIHByaXZhdGUgYmFnczsKCiAgc3RydWN0IEJhZyB7CiAgICBhZGRyZXNzIG93bmVyOwogICAgdWludDI1NiBsZXZlbDsKICAgIHVpbnQyNTYgbXVsdGlwbGllcjsgLy8gTXVsdGlwbGllciBtdXN0IGJlIHJhdGUgKiAxMDAuIGV4YW1wbGU6IDEuNXggPT0gMTUwCiAgICB1aW50MjU2IHB1cmNoYXNlZEF0OwogIH0KCiAgLy8vIEFjY2VzcyBtb2RpZmllciBmb3IgY29udHJhY3Qgb3duZXIgb25seSBmdW5jdGlvbmFsaXR5CiAgbW9kaWZpZXIgb25seUNvbnRyYWN0T3duZXIoKSB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gY29udHJhY3RPd25lcik7CiAgICBfOwogIH0KCiAgZnVuY3Rpb24gRGF5VHJhZGVyKCkgcHVibGljIHsKICAgIGNvbnRyYWN0T3duZXIgPSBtc2cuc2VuZGVyOwogICAgY3JlYXRlQmFnKDE1MCk7CgljcmVhdGVCYWcoMTUwKTsKCWNyZWF0ZUJhZygxNTApOwoJY3JlYXRlQmFnKDIwMCk7CgljcmVhdGVCYWcoMjAwKTsKCWNyZWF0ZUJhZygyMDApOwogIH0KCiAgZnVuY3Rpb24gY3JlYXRlQmFnKHVpbnQyNTYgbXVsdGlwbGllcikgcHVibGljIG9ubHlDb250cmFjdE93bmVyIHsKICAgIEJhZyBtZW1vcnkgYmFnID0gQmFnKHsKICAgICAgb3duZXI6IHRoaXMsCiAgICAgIGxldmVsOiAwLAogICAgICBtdWx0aXBsaWVyOiBtdWx0aXBsaWVyLAogICAgICBwdXJjaGFzZWRBdDogMAogICAgfSk7CgogICAgYmFncy5wdXNoKGJhZyk7CiAgfQoKICBmdW5jdGlvbiBzZXRUaW1lb3V0KHVpbnQyNTYgX3RpbWVvdXQpIHB1YmxpYyBvbmx5Q29udHJhY3RPd25lciB7CiAgICB0aW1lb3V0ID0gX3RpbWVvdXQ7CiAgfQogIAogIGZ1bmN0aW9uIHNldFN0YXJ0aW5nUHJpY2UodWludDI1NiBfc3RhcnRpbmdQcmljZSkgcHVibGljIG9ubHlDb250cmFjdE93bmVyIHsKICAgIHN0YXJ0aW5nUHJpY2UgPSBfc3RhcnRpbmdQcmljZTsKICB9CgogIGZ1bmN0aW9uIHNldEJhZ011bHRpcGxpZXIodWludDI1NiBiYWdJZCwgdWludDI1NiBtdWx0aXBsaWVyKSBwdWJsaWMgb25seUNvbnRyYWN0T3duZXIgewogICAgQmFnIHN0b3JhZ2UgYmFnID0gYmFnc1tiYWdJZF07CiAgICBiYWcubXVsdGlwbGllciA9IG11bHRpcGxpZXI7CiAgfQoKICBmdW5jdGlvbiBnZXRCYWcodWludDI1NiBiYWdJZCkgcHVibGljIHZpZXcgcmV0dXJucyAoCiAgICBhZGRyZXNzIG93bmVyLAogICAgdWludDI1NiBzZWxsaW5nUHJpY2UsCiAgICB1aW50MjU2IG5leHRTZWxsaW5nUHJpY2UsCiAgICB1aW50MjU2IGxldmVsLAogICAgdWludDI1NiBtdWx0aXBsaWVyLAogICAgdWludDI1NiBwdXJjaGFzZWRBdAogICkgewogICAgQmFnIHN0b3JhZ2UgYmFnID0gYmFnc1tiYWdJZF07CgogICAgb3duZXIgPSBnZXRPd25lcihiYWcpOwogICAgbGV2ZWwgPSBnZXRCYWdMZXZlbChiYWcpOwogICAgc2VsbGluZ1ByaWNlID0gZ2V0QmFnU2VsbGluZ1ByaWNlKGJhZyk7CiAgICBuZXh0U2VsbGluZ1ByaWNlID0gZ2V0TmV4dEJhZ1NlbGxpbmdQcmljZShiYWcpOwogICAgbXVsdGlwbGllciA9IGJhZy5tdWx0aXBsaWVyOwogICAgcHVyY2hhc2VkQXQgPSBiYWcucHVyY2hhc2VkQXQ7CiAgfQoKICBmdW5jdGlvbiBnZXRCYWdDb3VudCgpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYgYmFnQ291bnQpIHsKICAgIHJldHVybiBiYWdzLmxlbmd0aDsKICB9CgogIGZ1bmN0aW9uIGRlbGV0ZUJhZyh1aW50MjU2IGJhZ0lkKSBwdWJsaWMgb25seUNvbnRyYWN0T3duZXIgewogICAgZGVsZXRlIGJhZ3NbYmFnSWRdOwogIH0KCiAgZnVuY3Rpb24gcHVyY2hhc2UodWludDI1NiBiYWdJZCkgcHVibGljIHBheWFibGUgewogICAgQmFnIHN0b3JhZ2UgYmFnID0gYmFnc1tiYWdJZF07CgogICAgYWRkcmVzcyBvbGRPd25lciA9IGJhZy5vd25lcjsKICAgIGFkZHJlc3MgbmV3T3duZXIgPSBtc2cuc2VuZGVyOwoKICAgIC8vIE1ha2luZyBzdXJlIHRva2VuIG93bmVyIGlzIG5vdCBzZW5kaW5nIHRvIHNlbGYKICAgIHJlcXVpcmUob2xkT3duZXIgIT0gbmV3T3duZXIpOwoKICAgIC8vIFNhZmV0eSBjaGVjayB0byBwcmV2ZW50IGFnYWluc3QgYW4gdW5leHBlY3RlZCAweDAgZGVmYXVsdC4KICAgIHJlcXVpcmUoX2FkZHJlc3NOb3ROdWxsKG5ld093bmVyKSk7CiAgICAKICAgIHVpbnQyNTYgc2VsbGluZ1ByaWNlID0gZ2V0QmFnU2VsbGluZ1ByaWNlKGJhZyk7CgogICAgLy8gTWFraW5nIHN1cmUgc2VudCBhbW91bnQgaXMgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvIHRoZSBzZWxsaW5nUHJpY2UKICAgIHJlcXVpcmUobXNnLnZhbHVlID49IHNlbGxpbmdQcmljZSk7CgogICAgLy8gVGFrZSBhIHRyYW5zYWN0aW9uIGZlZQogICAgdWludDI1NiBwYXltZW50ID0gdWludDI1NihTYWZlTWF0aC5kaXYoU2FmZU1hdGgubXVsKHNlbGxpbmdQcmljZSwgOTApLCAxMDApKTsKICAgIHVpbnQyNTYgcHVyY2hhc2VFeGNlc3MgPSBTYWZlTWF0aC5zdWIobXNnLnZhbHVlLCBzZWxsaW5nUHJpY2UpOwoKICAgIHVpbnQyNTYgbGV2ZWwgPSBnZXRCYWdMZXZlbChiYWcpOwogICAgYmFnLmxldmVsID0gU2FmZU1hdGguYWRkKGxldmVsLCAxKTsKICAgIGJhZy5vd25lciA9IG5ld093bmVyOwogICAgYmFnLnB1cmNoYXNlZEF0ID0gbm93OwoKICAgIAogICAgLy8gUGF5IHByZXZpb3VzIHRva2VuT3duZXIgaWYgb3duZXIgaXMgbm90IGNvbnRyYWN0CiAgICBpZiAob2xkT3duZXIgIT0gYWRkcmVzcyh0aGlzKSkgewogICAgICBvbGRPd25lci50cmFuc2ZlcihwYXltZW50KTsKICAgICAgCiAgICB9CgogICAgLy8gVHJpZ2dlciBCYWdTb2xkIGV2ZW50CiAgICBCYWdTb2xkKGJhZ0lkLCBiYWcubXVsdGlwbGllciwgc2VsbGluZ1ByaWNlLCBnZXRCYWdTZWxsaW5nUHJpY2UoYmFnKSwgb2xkT3duZXIsIG5ld093bmVyKTsKCiAgICBuZXdPd25lci50cmFuc2ZlcihwdXJjaGFzZUV4Y2Vzcyk7CiAgfQoKICBmdW5jdGlvbiBwYXlvdXQoKSBwdWJsaWMgb25seUNvbnRyYWN0T3duZXIgewogICAgY29udHJhY3RPd25lci50cmFuc2Zlcih0aGlzLmJhbGFuY2UpOwogIH0KCiAgLyoqKiBQUklWQVRFIEZVTkNUSU9OUyAqKiovCgogIC8vIElmIGEgYmFnIGhhc24ndCBiZWVuIHB1cmNoYXNlZCBpbiBvdmVyICR0aW1lb3V0LAogIC8vIHJlc2V0IGl0cyBsZXZlbCBiYWNrIHRvIDAgYnV0IHJldGFpbiB0aGUgZXhpc3Rpbmcgb3duZXIKICBmdW5jdGlvbiBnZXRCYWdMZXZlbChCYWcgYmFnKSBwcml2YXRlIHZpZXcgcmV0dXJucyAodWludDI1NikgewogICAgaWYgKG5vdyA8PSAoU2FmZU1hdGguYWRkKGJhZy5wdXJjaGFzZWRBdCwgdGltZW91dCkpKSB7CiAgICAgIHJldHVybiBiYWcubGV2ZWw7CiAgICB9IGVsc2UgewogICAgICByZXR1cm4gMDsKICAgIH0KICB9CiAgCiAgIGZ1bmN0aW9uIGdldE93bmVyKEJhZyBiYWcpIHByaXZhdGUgdmlldyByZXR1cm5zIChhZGRyZXNzKSB7CiAgICBpZiAobm93IDw9IChTYWZlTWF0aC5hZGQoYmFnLnB1cmNoYXNlZEF0LCB0aW1lb3V0KSkpIHsKICAgICAgcmV0dXJuIGJhZy5vd25lcjsKICAgIH0gZWxzZSB7CiAgICAgIHJldHVybiBhZGRyZXNzKHRoaXMpOwogICAgfQogIH0KCiAgZnVuY3Rpb24gZ2V0QmFnU2VsbGluZ1ByaWNlKEJhZyBiYWcpIHByaXZhdGUgdmlldyByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGxldmVsID0gZ2V0QmFnTGV2ZWwoYmFnKTsKICAgIHJldHVybiBnZXRQcmljZUZvckxldmVsKGJhZywgbGV2ZWwpOwogIH0KCiAgZnVuY3Rpb24gZ2V0TmV4dEJhZ1NlbGxpbmdQcmljZShCYWcgYmFnKSBwcml2YXRlIHZpZXcgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBsZXZlbCA9IFNhZmVNYXRoLmFkZChnZXRCYWdMZXZlbChiYWcpLCAxKTsKICAgIHJldHVybiBnZXRQcmljZUZvckxldmVsKGJhZywgbGV2ZWwpOwogIH0KCiAgZnVuY3Rpb24gZ2V0UHJpY2VGb3JMZXZlbChCYWcgYmFnLCB1aW50MjU2IGxldmVsKSBwcml2YXRlIHZpZXcgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBzZWxsaW5nUHJpY2UgPSBzdGFydGluZ1ByaWNlOwoKICAgIGZvciAodWludDI1NiBpID0gMDsgaSA8IGxldmVsOyBpKyspIHsKICAgICAgc2VsbGluZ1ByaWNlID0gU2FmZU1hdGguZGl2KFNhZmVNYXRoLm11bChzZWxsaW5nUHJpY2UsIGJhZy5tdWx0aXBsaWVyKSwgMTAwKTsKICAgIH0KCiAgICByZXR1cm4gc2VsbGluZ1ByaWNlOwogIH0KCiAgLy8vIFNhZmV0eSBjaGVjayBvbiBfdG8gYWRkcmVzcyB0byBwcmV2ZW50IGFnYWluc3QgYW4gdW5leHBlY3RlZCAweDAgZGVmYXVsdC4KICBmdW5jdGlvbiBfYWRkcmVzc05vdE51bGwoYWRkcmVzcyBfdG8pIHByaXZhdGUgcHVyZSByZXR1cm5zIChib29sKSB7CiAgICByZXR1cm4gX3RvICE9IGFkZHJlc3MoMCk7CiAgfQp9CgpsaWJyYXJ5IFNhZmVNYXRoIHsKCiAgLyoqCiAgKiBAZGV2IE11bHRpcGxpZXMgdHdvIG51bWJlcnMsIHRocm93cyBvbiBvdmVyZmxvdy4KICAqLwogIGZ1bmN0aW9uIG11bCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICBpZiAoYSA9PSAwKSB7CiAgICAgIHJldHVybiAwOwogICAgfQogICAgdWludDI1NiBjID0gYSAqIGI7CiAgICBhc3NlcnQoYyAvIGEgPT0gYik7CiAgICByZXR1cm4gYzsKICB9CgogIC8qKgogICogQGRldiBJbnRlZ2VyIGRpdmlzaW9uIG9mIHR3byBudW1iZXJzLCB0cnVuY2F0aW5nIHRoZSBxdW90aWVudC4KICAqLwogIGZ1bmN0aW9uIGRpdih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAKICAgIHVpbnQyNTYgYyA9IGEgLyBiOwogICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICAgIHJldHVybiBjOwogIH0KCiAgLyoqCiAgKiBAZGV2IFN1YnN0cmFjdHMgdHdvIG51bWJlcnMsIHRocm93cyBvbiBvdmVyZmxvdyAoaS5lLiBpZiBzdWJ0cmFoZW5kIGlzIGdyZWF0ZXIgdGhhbiBtaW51ZW5kKS4KICAqLwogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIC8qKgogICogQGRldiBBZGRzIHR3byBudW1iZXJzLCB0aHJvd3Mgb24gb3ZlcmZsb3cuCiAgKi8KICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KfQ=='.
	

]
