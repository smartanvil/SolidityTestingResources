Class {
	#name : #SRTe497f7fd7620a0bbd743a0e5d336d7082f86477e,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTe497f7fd7620a0bbd743a0e5d336d7082f86477e >> base64 [
	^ ''.
	

]
