Class {
	#name : #SRT181a63746d3adcf356cbc73ace22832ffbb1ee5a,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT181a63746d3adcf356cbc73ace22832ffbb1ee5a >> base64 [
	^ ''.
	

]
