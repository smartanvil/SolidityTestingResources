Class {
	#name : #SRT3c7767011C443EfeF2187cf1F2a4c02062da3998,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT3c7767011C443EfeF2187cf1F2a4c02062da3998 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgovKioKICogQHRpdGxlIE93bmFibGUKICogQGRldiBUaGUgT3duYWJsZSBjb250cmFjdCBoYXMgYW4gb3duZXIgYWRkcmVzcywgYW5kIHByb3ZpZGVzIGJhc2ljIGF1dGhvcml6YXRpb24gY29udHJvbAogKiBmdW5jdGlvbnMsIHRoaXMgc2ltcGxpZmllcyB0aGUgaW1wbGVtZW50YXRpb24gb2YgInVzZXIgcGVybWlzc2lvbnMiLgogKi8KY29udHJhY3QgT3duYWJsZSB7CiAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CgogIGV2ZW50IE93bmVyc2hpcFRyYW5zZmVycmVkKGFkZHJlc3MgaW5kZXhlZCBwcmV2aW91c093bmVyLCBhZGRyZXNzIGluZGV4ZWQgbmV3T3duZXIpOwoKICAvKioKICAgKiBAZGV2IFRoZSBPd25hYmxlIGNvbnN0cnVjdG9yIHNldHMgdGhlIG9yaWdpbmFsIGBvd25lcmAgb2YgdGhlIGNvbnRyYWN0IHRvIHRoZSBzZW5kZXIKICAgKiBhY2NvdW50LgogICAqLwogIGZ1bmN0aW9uIE93bmFibGUoKSBwdWJsaWMgewogICAgb3duZXIgPSBtc2cuc2VuZGVyOwogIH0KCgogIC8qKgogICAqIEBkZXYgVGhyb3dzIGlmIGNhbGxlZCBieSBhbnkgYWNjb3VudCBvdGhlciB0aGFuIHRoZSBvd25lci4KICAgKi8KICBtb2RpZmllciBvbmx5T3duZXIoKSB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgXzsKICB9CgoKICAvKioKICAgKiBAZGV2IEFsbG93cyB0aGUgY3VycmVudCBvd25lciB0byB0cmFuc2ZlciBjb250cm9sIG9mIHRoZSBjb250cmFjdCB0byBhIG5ld093bmVyLgogICAqIEBwYXJhbSBuZXdPd25lciBUaGUgYWRkcmVzcyB0byB0cmFuc2ZlciBvd25lcnNoaXAgdG8uCiAgICovCiAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBuZXdPd25lcikgcHVibGljIG9ubHlPd25lciB7CiAgICByZXF1aXJlKG5ld093bmVyICE9IGFkZHJlc3MoMCkpOwogICAgT3duZXJzaGlwVHJhbnNmZXJyZWQob3duZXIsIG5ld093bmVyKTsKICAgIG93bmVyID0gbmV3T3duZXI7CiAgfQoKfQoKY29udHJhY3QgQ3JhdGVQcmVTYWxlIGlzIE93bmFibGUgewogICAgCiAgICAvLyAtLS0tLS0gU1RBVEUgLS0tLS0tIAogICAgdWludDI1NiBjb25zdGFudCBwdWJsaWMgTUFYX0NSQVRFU19UT19TRUxMID0gMzkwMDsgLy8gTWF4IG5vLiBvZiByb2JvdCBjcmF0ZXMgdG8gZXZlciBiZSBzb2xkCiAgICB1aW50MjU2IGNvbnN0YW50IHB1YmxpYyBQUkVTQUxFX0VORF9USU1FU1RBTVAgPSAxNTE4Njk5NjAwOyAvLyBFbmQgZGF0ZSBmb3IgdGhlIHByZXNhbGUgLSBubyBwdXJjaGFzZXMgY2FuIGJlIG1hZGUgYWZ0ZXIgdGhpcyBkYXRlIC0gTWlkbmlnaHQgMTYgRmViIDIwMTggVVRDCgogICAgdWludDI1NiBwdWJsaWMgYXBwcmVjaWF0aW9uUmF0ZVdlaSA9IDQwMDAwMDAwMDAwMDAwMDsgIAogICAgdWludDI1NiBwdWJsaWMgY3VycmVudFByaWNlID0gYXBwcmVjaWF0aW9uUmF0ZVdlaTsgLy8gaW5pdGFsaXNlIHRoZSBwcmljZSB0byB0aGUgYXBwcmVjaWF0aW9uIHJhdGUKICAgIHVpbnQzMiBwdWJsaWMgY3JhdGVzU29sZDsKICAgIAogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MzIpIHB1YmxpYyB1c2VyQ3JhdGVDb3VudDsgLy8gc3RvcmUgaG93IG1hbnkgY3JhdGVzIGEgdXNlciBoYXMgYm91Z2h0CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnRbXSkgcHVibGljIHVzZXJUb1JvYm90czsgLy8gc3RvcmUgdGhlIEROQS9yb2JvdCBpbmZvcm1hdGlvbiBvZiBib3VnaHQgY3JhdGVzCiAgICAKICAgIC8vIC0tLS0tLSBFVkVOVFMgLS0tLS0tIAogICAgZXZlbnQgTG9nQ3JhdGVQdXJjaGFzZSggCiAgICAgICAgYWRkcmVzcyBpbmRleGVkIF9mcm9tLAogICAgICAgIHVpbnQyNTYgX3ZhbHVlLAogICAgICAgIHVpbnQzMiBfcXVhbnRpdHkKICAgICAgICApOwoKCiAgICAvLyAtLS0tLS0gRlVOQ1RJT05TIC0tLS0tLSAKICAgIGZ1bmN0aW9uIGdldFByaWNlKCkgdmlldyBwdWJsaWMgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHJldHVybiBjdXJyZW50UHJpY2U7CiAgICB9CgogICAgZnVuY3Rpb24gZ2V0Um9ib3RzRm9yVXNlciggYWRkcmVzcyBfdXNlciApIHZpZXcgcHVibGljIHJldHVybnMgKHVpbnRbXSkgewogICAgICAgIHJldHVybiB1c2VyVG9Sb2JvdHNbX3VzZXJdOwogICAgfQoKICAgIGZ1bmN0aW9uIGluY3JlbWVudFByaWNlKCkgcHJpdmF0ZSB7IAogICAgICAgIC8vIERlY3JlYXNlIHRoZSByYXRlIG9mIGluY3JlYXNlIG9mIHRoZSBjcmF0ZSBwcmljZQogICAgICAgIC8vIGFzIHRoZSBjcmF0ZXMgYmVjb21lIG1vcmUgZXhwZW5zaXZlCiAgICAgICAgLy8gdG8gYXZvaWQgcnVuYXdheSBwcmljaW5nCiAgICAgICAgLy8gKGhhbHZpbmcgcmF0ZSBvZiBpbmNyZWFzZSBhdCAwLjEgRVRILCAwLjIgRVRILCAwLjMgRVRIKS4KICAgICAgICBpZiAoIGN1cnJlbnRQcmljZSA9PSAxMDAwMDAwMDAwMDAwMDAwMDAgKSB7CiAgICAgICAgICAgIGFwcHJlY2lhdGlvblJhdGVXZWkgPSAyMDAwMDAwMDAwMDAwMDA7CiAgICAgICAgfSBlbHNlIGlmICggY3VycmVudFByaWNlID09IDIwMDAwMDAwMDAwMDAwMDAwMCkgewogICAgICAgICAgICBhcHByZWNpYXRpb25SYXRlV2VpID0gMTAwMDAwMDAwMDAwMDAwOwogICAgICAgIH0gZWxzZSBpZiAoY3VycmVudFByaWNlID09IDMwMDAwMDAwMDAwMDAwMDAwMCkgewogICAgICAgICAgICBhcHByZWNpYXRpb25SYXRlV2VpID0gNTAwMDAwMDAwMDAwMDA7CiAgICAgICAgfQogICAgICAgIGN1cnJlbnRQcmljZSArPSBhcHByZWNpYXRpb25SYXRlV2VpOwogICAgfQoKICAgIGZ1bmN0aW9uIHB1cmNoYXNlQ3JhdGUoKSBwYXlhYmxlIHB1YmxpYyB7CiAgICAgICAgcmVxdWlyZShub3cgPCBQUkVTQUxFX0VORF9USU1FU1RBTVApOyAvLyBDaGVjayBwcmVzYWxlIGlzIHN0aWxsIG9uZ29pbmcKICAgICAgICByZXF1aXJlKGNyYXRlc1NvbGQgPCBNQVhfQ1JBVEVTX1RPX1NFTEwpOyAvLyBDaGVjayBtYXggY3JhdGVzIHNvbGQgaXMgbGVzcyB0aGFuIGhhcmQgbGltaXQKICAgICAgICByZXF1aXJlKG1zZy52YWx1ZSA+PSBjdXJyZW50UHJpY2UpOyAvLyBDaGVjayBidXllciBzZW50IHN1ZmZpY2llbnQgZnVuZHMgdG8gcHVyY2hhc2UKICAgICAgICBpZiAobXNnLnZhbHVlID4gY3VycmVudFByaWNlKSB7IC8vb3ZlcnBhaWQsIHJldHVybiBleGNlc3MKICAgICAgICAgICAgbXNnLnNlbmRlci50cmFuc2Zlcihtc2cudmFsdWUtY3VycmVudFByaWNlKTsKICAgICAgICB9CiAgICAgICAgdXNlckNyYXRlQ291bnRbbXNnLnNlbmRlcl0gKz0gMTsKICAgICAgICBjcmF0ZXNTb2xkKys7CiAgICAgICAgaW5jcmVtZW50UHJpY2UoKTsKICAgICAgICB1c2VyVG9Sb2JvdHNbbXNnLnNlbmRlcl0ucHVzaChnZW5SYW5kb20oKSk7CiAgICAgICAgTG9nQ3JhdGVQdXJjaGFzZShtc2cuc2VuZGVyLCBtc2cudmFsdWUsIDEpOwoKICAgIH0KCiAgICAvLyBST0JPVCBGT1JNQVQKICAgIC8vIFszIGRpZ2l0cyAtIFJBUklUWV1bMiBkaWdpdHMgLSBQQVJUXSAqIDQgKDQgcGFydHMpCiAgICAvLyBlLmcuIFsxNDBdWzIwXVsyMThdWzA0XQogICAgLy8gUHJlc2FsZSBleGNsdXNpdmVzIGFyZSBlbmNvZGVkIGJ5IGV4dGVuZGluZyB0aGUgcmFuZ2Ugb2YgdGhlIHBhcnQgYnkgMQogICAgLy8gaWUgbGFtYm9yZ2hpbmkgd2lsbCBiZSB0aGUgMjNyZCBib2R5LiBJZiAyMyAob3IgYSBtdWx0aXBsZSBvZiBpdCkgaXMgZ2VuZXJhdGVkLCBhIGxhbWJvcmdoaW5pIHdpbGwgYmUgYXdhcmRlZC4KICAgIC8vUkFSSVRZIElORk9STUFUSU9OOgogICAgLy9BbGwgcGFydHMgYXJlIG9mIGVxdWFsIHJhcml0eSwgZXhjZXB0IGZvciBwcmVzYWxlIGV4Y2x1c2l2ZXMuCiAgICAvL0EgdGhyZWUtZGlnaXQgbW9kaWZpZXIgcHJlY2VkZXMgZWFjaCBwYXJ0LCBkZW5vdGluZyB3aGV0aGVyIGl0IGlzIG9mIHR5cGUKICAgIC8vbm9ybWFsLCByYXJlIHNoYWRvdywgb3IgbGVnZW5kYXJ5IGdvbGQuCiAgICAvL1NoYWRvdyBoYXMgYSAxMCUgY2hhbmNlIG9mIGFwcGx5aW5nIGZvciB0aGUgcHJlc2FsZSAoMiUgaW4gZ2FtZSkKICAgIC8vR29sZCBoYXMgYSA1JSBjaGFuY2Ugb2YgYXBwbHlpbmcgZm9yIHRoZSBwcmVzYWxlICgxJSBpbiBnYW1lKS4KICAgIGZ1bmN0aW9uIGdlblJhbmRvbSgpIHByaXZhdGUgdmlldyByZXR1cm5zICh1aW50KSB7CiAgICAgICAgdWludCByYW5kID0gdWludChrZWNjYWsyNTYoYmxvY2suYmxvY2toYXNoKGJsb2NrLm51bWJlci0xKSkpOwogICAgICAgIHJldHVybiB1aW50KHJhbmQgJSAoMTAgKiogMjApKTsKICAgIH0KCiAgICAvL293bmVyIG9ubHkgd2l0aGRyYXdhbCBmdW5jdGlvbiBmb3IgdGhlIHByZXNhbGUKICAgIGZ1bmN0aW9uIHdpdGhkcmF3KCkgb25seU93bmVyIHB1YmxpYyB7CiAgICAgICAgb3duZXIudHJhbnNmZXIodGhpcy5iYWxhbmNlKTsKICAgIH0KfQ=='.
	

]
