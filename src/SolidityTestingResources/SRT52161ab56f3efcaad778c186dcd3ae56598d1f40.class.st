Class {
	#name : #SRT52161ab56f3efcaad778c186dcd3ae56598d1f40,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT52161ab56f3efcaad778c186dcd3ae56598d1f40 >> base64 [
	^ 'Y29udHJhY3QgRVNIIHsKICAgIHN0cmluZyBwdWJsaWMgc3ltYm9sID0gIkVTSCI7CiAgICBzdHJpbmcgcHVibGljIG5hbWUgPSAiRXRoZXJzaGFyZXMiOwogICAgdWludDggcHVibGljIGNvbnN0YW50IGRlY2ltYWxzID0gMTg7CiAgICB1aW50MjU2IF90b3RhbFN1cHBseSA9IDUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA7Cgl1aW50MjU2IF9tYXhUb3RhbFN1cHBseSA9IDcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA7Cgl1aW50MjU2IF9taW5pbmdSZXdhcmQgPSAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwOyAvL09uZSB0aW1lIDEwMDAgRVRTCgl1aW50MjU2IF9tYXhNaW5pbmdSZXdhcmQgPSAxNTAwMDAwMDAwMDAwMDAwMDAwMDAwOyAvL09uZSB0aW1lIDE1MDAgRVRTCgl1aW50MjU2IF9yZXdhcmRIYWx2aW5nVGltZVBlcmlvZCA9IDYzMTEzODUyOyAvLzIgeWVhcnMKCXVpbnQyNTYgX25leHRSZXdhcmRIYWx2aW5nID0gbm93ICsgX3Jld2FyZEhhbHZpbmdUaW1lUGVyaW9kOwoJdWludDI1NiBfcmV3YXJkVGltZVBlcmlvZCA9IDYwMDsgLy8xMCBtaW51dGVzCgl1aW50MjU2IF9yZXdhcmRTdGFydCA9IG5vdzsKCXVpbnQyNTYgX3Jld2FyZEVuZCA9IG5vdyArIF9yZXdhcmRUaW1lUGVyaW9kOwoJdWludDI1NiBfY3VycmVudE1pbmVkID0gMDsKICAgIAogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50MjU2IF92YWx1ZSk7CiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKTsKIAogICAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpIGJhbGFuY2VzOwogCiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsKIAogICAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7ICAgICAgICAKCQlyZXR1cm4gX3RvdGFsU3VwcGx5OwogICAgfQogCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgewogICAgICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogICAgfQogCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfYW1vdW50KSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBpZiAoYmFsYW5jZXNbbXNnLnNlbmRlcl0gPj0gX2Ftb3VudCAKICAgICAgICAgICAgJiYgX2Ftb3VudCA+IDAKICAgICAgICAgICAgJiYgYmFsYW5jZXNbX3RvXSArIF9hbW91bnQgPiBiYWxhbmNlc1tfdG9dKSB7CiAgICAgICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdIC09IF9hbW91bnQ7CiAgICAgICAgICAgIGJhbGFuY2VzW190b10gKz0gX2Ftb3VudDsKICAgICAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfYW1vdW50KTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgIH0KIAogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKAogICAgICAgIGFkZHJlc3MgX2Zyb20sCiAgICAgICAgYWRkcmVzcyBfdG8sCiAgICAgICAgdWludDI1NiBfYW1vdW50CiAgICApIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGlmIChiYWxhbmNlc1tfZnJvbV0gPj0gX2Ftb3VudAogICAgICAgICAgICAmJiBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA+PSBfYW1vdW50CiAgICAgICAgICAgICYmIF9hbW91bnQgPiAwCiAgICAgICAgICAgICYmIGJhbGFuY2VzW190b10gKyBfYW1vdW50ID4gYmFsYW5jZXNbX3RvXSkgewogICAgICAgICAgICBiYWxhbmNlc1tfZnJvbV0gLT0gX2Ftb3VudDsKICAgICAgICAgICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gLT0gX2Ftb3VudDsKICAgICAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfYW1vdW50OwogICAgICAgICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfYW1vdW50KTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgIH0KIAogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF9hbW91bnQpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX2Ftb3VudDsKICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX2Ftb3VudCk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpIHsKICAgICAgICByZXR1cm4gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsKICAgIH0KCQoJZnVuY3Rpb24gRVNIKAogICAgICAgICkgewogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gMjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDsgICAKICAgIH0KCglmdW5jdGlvbiBNaW5lKCkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKQoJewoJCWlmIChub3cgPCBfcmV3YXJkRW5kICYmIF9jdXJyZW50TWluZWQgPj0gX21heE1pbmluZ1Jld2FyZCkKCQkJcmV2ZXJ0KCk7CgkJZWxzZSBpZiAobm93ID49IF9yZXdhcmRFbmQpCgkJewoJCQlfcmV3YXJkU3RhcnQgPSBub3c7CgkJCV9yZXdhcmRFbmQgPSBub3cgKyBfcmV3YXJkVGltZVBlcmlvZDsKCQkJX2N1cnJlbnRNaW5lZCA9IDA7CgkJfQoJCgkJaWYgKG5vdyA+PSBfbmV4dFJld2FyZEhhbHZpbmcpCgkJewoJCQlfbmV4dFJld2FyZEhhbHZpbmcgPSBub3cgKyBfcmV3YXJkSGFsdmluZ1RpbWVQZXJpb2Q7CgkJCV9taW5pbmdSZXdhcmQgPSBfbWluaW5nUmV3YXJkIC8gMjsKCQkJX21heE1pbmluZ1Jld2FyZCA9IF9tYXhNaW5pbmdSZXdhcmQgLyAyOwoJCQlfY3VycmVudE1pbmVkID0gMDsKCQkJX3Jld2FyZFN0YXJ0ID0gbm93OwoJCQlfcmV3YXJkRW5kID0gbm93ICsgX3Jld2FyZFRpbWVQZXJpb2Q7CgkJfQkKCQkKCQlpZiAoKF9jdXJyZW50TWluZWQgPCBfbWF4TWluaW5nUmV3YXJkKSAmJiAoX3RvdGFsU3VwcGx5IDwgX21heFRvdGFsU3VwcGx5KSAmJiAoYmFsYW5jZXNbbXNnLnNlbmRlcl0gPD0xKSkKCQl7CgkJCWJhbGFuY2VzW21zZy5zZW5kZXJdICs9IF9taW5pbmdSZXdhcmQ7CgkJCV9jdXJyZW50TWluZWQgKz0gX21pbmluZ1Jld2FyZDsKCQkJX3RvdGFsU3VwcGx5ICs9IF9taW5pbmdSZXdhcmQ7CgkJCVRyYW5zZmVyKHRoaXMsIG1zZy5zZW5kZXIsIF9taW5pbmdSZXdhcmQpOwoJCQlyZXR1cm4gdHJ1ZTsKCQl9CQkJCQoJCXJldHVybiBmYWxzZTsKCX0KCQoJZnVuY3Rpb24gTWF4VG90YWxTdXBwbHkoKSBjb25zdGFudCByZXR1cm5zKHVpbnQyNTYpCgl7CgkJcmV0dXJuIF9tYXhUb3RhbFN1cHBseTsKCX0KCQoJZnVuY3Rpb24gTWluaW5nUmV3YXJkKCkgY29uc3RhbnQgcmV0dXJucyh1aW50MjU2KQoJewoJCXJldHVybiBfbWluaW5nUmV3YXJkOwoJfQoJCglmdW5jdGlvbiBNYXhNaW5pbmdSZXdhcmQoKSBjb25zdGFudCByZXR1cm5zKHVpbnQyNTYpCgl7CgkJcmV0dXJuIF9tYXhNaW5pbmdSZXdhcmQ7Cgl9CgkKCWZ1bmN0aW9uIFJld2FyZEhhbHZpbmdUaW1lUGVyaW9kKCkgY29uc3RhbnQgcmV0dXJucyh1aW50MjU2KQoJewoJCXJldHVybiBfcmV3YXJkSGFsdmluZ1RpbWVQZXJpb2Q7Cgl9CgkKCWZ1bmN0aW9uIE5leHRSZXdhcmRIYWx2aW5nKCkgY29uc3RhbnQgcmV0dXJucyh1aW50MjU2KQoJewoJCXJldHVybiBfbmV4dFJld2FyZEhhbHZpbmc7Cgl9CgkKCWZ1bmN0aW9uIFJld2FyZFRpbWVQZXJpb2QoKSBjb25zdGFudCByZXR1cm5zKHVpbnQyNTYpCgl7CgkJcmV0dXJuIF9yZXdhcmRUaW1lUGVyaW9kOwoJfQoJCglmdW5jdGlvbiBSZXdhcmRTdGFydCgpIGNvbnN0YW50IHJldHVybnModWludDI1NikKCXsKCQlyZXR1cm4gX3Jld2FyZFN0YXJ0OwoJfQoJCglmdW5jdGlvbiBSZXdhcmRFbmQoKSBjb25zdGFudCByZXR1cm5zKHVpbnQyNTYpCgl7CgkJcmV0dXJuIF9yZXdhcmRFbmQ7Cgl9CgkKCWZ1bmN0aW9uIEN1cnJlbnRNaW5lZCgpIGNvbnN0YW50IHJldHVybnModWludDI1NikKCXsKCQlyZXR1cm4gX2N1cnJlbnRNaW5lZDsKCX0KCQoJZnVuY3Rpb24gVGltZU5vdygpIGNvbnN0YW50IHJldHVybnModWludDI1NikKCXsKCQlyZXR1cm4gbm93OwoJfQogICAgfQ=='.
	

]
