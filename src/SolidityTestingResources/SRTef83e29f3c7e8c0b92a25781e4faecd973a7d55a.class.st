Class {
	#name : #SRTef83e29f3c7e8c0b92a25781e4faecd973a7d55a,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTef83e29f3c7e8c0b92a25781e4faecd973a7d55a >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgovKgoJUGVyIEFubnVtIGlzIGFuIEVSQzIwIHRva2VuIHdoaWNoIGNhbiBiZSBtaW5lZCBkdXJpbmcgdGhlIGZpcnN0IHR3byB3ZWVrcyBvZiBlYWNoIHllYXIgZm9yIDEyMCB5ZWFycyAKCXN0YXJ0aW5nIGluIDIwMTguIFRoZSBtaW5pbmcgcmV3YXJkIHN0YXJ0cyBhdCAxMDAgdG9rZW5zIGFuZCBpcyBoYWx2ZWQgeWVhcmx5LiBUaGUgbWF4aW11bSBtaW5pbmcKCXJld2FyZCBzdGFydHMgYXQgMTAsMDAwLDAwMCBhbmQgaXMgaGFsdmVkIGV2ZXJ5IGZpdmUgeWVhcnMuIFRoZSBjb250cmFjdCBvd25lciB3YXMgZ3JhbnRlZCA0MCwwMDAKCXRva2VucyBvbiBkZXBsb3ltZW50IG9mIHRoZSBjb250cmFjdCwgYW5kIGFueSB1bm1pbmVkIHRva2VucyBhdCB0aGUgZW5kIG9mIHRoZSBtaW5pbmcgcGVyaW9kIGFyZSAKCXNlbnQgdG8gdGhlIG93bmVyLiAyMCwwMDAgb2YgdGhlIGluaXRpYWwgb3duZXIncyBzdXBwbHkgd2lsbCBiZSBnaXZlbiBhd2F5IGluIG9yZGVyIHRvIHByb21vdGUgdGhlCgl0b2tlbi4gCgoJCgoKCWFub255bW91cyBwcm9vZiBvZiBhdXRob3JzaGlwIC0gNDYxMjM3MEE0QjAwN0NFNEFFNUFFRjQ3MjY0MkYxREU1NUM2M0NFQjUzMzE5QzQ1N0VGMUVEODNGNzQ0MUVBNgoJc2lnbmF0dXJlIC0gOTkyN0E3NUVGN0M4OUQzQzAyOEM4QkE3QTFCNDhDREQ1MTVBQ0VEN0EyQkM1NjRBMDk5RDQ1MkQzQjNGRkU4OQoqLwpjb250cmFjdCBQZXJfQW5udW17CglzdHJpbmcgcHVibGljIHN5bWJvbCA9ICJBTk5VTSI7CglzdHJpbmcgcHVibGljIG5hbWUgPSAiUGVyIEFubnVtIjsKCXVpbnQ4IHB1YmxpYyBjb25zdGFudCBkZWNpbWFscyA9IDg7Cgl1aW50MjU2IF90b3RhbFN1cHBseSA9IDA7CglhZGRyZXNzIGNvbnRyYWN0X293bmVyOwoJdWludDI1NiBjdXJyZW50X3JlbWFpbmluZyA9IDA7IC8vdG8gY2hlY2sgZm9yIGxlZnQgb3ZlciB0b2tlbnMgYWZ0ZXIgbWluaW5nIHBlcmlvZAoJdWludDI1NiBfbWF4VG90YWxTdXBwbHkgPSAxMDAwMDAwMDAwMDAwMDAwMDsgLy9vbmUgaHVuZHJlZCBtaWxsaW9uCgl1aW50MjU2IF9taW5pbmdSZXdhcmQgPSAxMDAwMDAwMDAwMDsgLy8xMDAgQU5OVU0gcmV3YXJkZWQgb24gc3VjY2Vzc2Z1bCBtaW5lIGhhbHZlZCBldmVyeSA1IHllYXJzIAoJdWludDI1NiBfbWF4TWluaW5nUmV3YXJkID0gMTAwMDAwMDAwMDAwMDAwMDsgLy8xMCwwMDAsMDAwIEFOTlVNIC0gVG8gYmUgaGFsdmVkIGV2ZXJ5IDUgeWVhcnMKCXVpbnQyNTYgX3llYXIgPSAxNTE0NzgyODAwOyAvLyAwMS8wMS8yMDE4IDEyOjAwQU0gRVNUCgl1aW50MjU2IF95ZWFyX2NvdW50ID0gMjAxODsgLy9jb250cmFjdCBzdGFydHMgaW4gMjAxOCBmaXJzdCBsZWFwIHllYXIgaXMgMjAyMAoJdWludDI1NiBfY3VycmVudE1pbmVkID0gMDsgLy9taW5lZCBmb3IgdGhlIHllYXIKCgoJZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50MjU2IF92YWx1ZSk7CiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKTsKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBhbGxvd2VkOwoKICAgIC8vaW5pdGlhbGl6ZSBjb250cmFjdCAtIHNldCBvd25lciBhbmQgZ2l2ZSBvd25lciAyMCwwMDAgdG9rZW5zCiAgICBmdW5jdGlvbiBQZXJfQW5udW0oKXsKICAgIAlfdG90YWxTdXBwbHkgKz0gNDAwMDAwMDAwMDAwMDsKICAgIAlfY3VycmVudE1pbmVkICs9IDQwMDAwMDAwMDAwMDA7CQogICAgCWNvbnRyYWN0X293bmVyID0gbXNnLnNlbmRlcjsKICAgIAliYWxhbmNlc1ttc2cuc2VuZGVyXSArPSA0MDAwMDAwMDAwMDAwOwogICAgCVRyYW5zZmVyKHRoaXMsbXNnLnNlbmRlciw0MDAwMDAwMDAwMDAwKTsKICAgIH0KCglmdW5jdGlvbiB0b3RhbFN1cHBseSgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsgICAgICAgIAoJCXJldHVybiBfdG90YWxTdXBwbHk7Cgl9CgoJZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpIHsKCQlyZXR1cm4gYmFsYW5jZXNbX293bmVyXTsKCX0KCgoJZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX2Ftb3VudCkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CgkJaWYgKGJhbGFuY2VzW21zZy5zZW5kZXJdID49IF9hbW91bnQgCgkJCSYmIF9hbW91bnQgPiAwCgkJCSYmIGJhbGFuY2VzW190b10gKyBfYW1vdW50ID4gYmFsYW5jZXNbX3RvXSkgewoJCQliYWxhbmNlc1ttc2cuc2VuZGVyXSAtPSBfYW1vdW50OwoJCQliYWxhbmNlc1tfdG9dICs9IF9hbW91bnQ7CgkJCVRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX2Ftb3VudCk7CgkJCXJldHVybiB0cnVlOwoJCX0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKCQl9Cgl9CgoJZnVuY3Rpb24gdHJhbnNmZXJGcm9tKAoJCWFkZHJlc3MgX2Zyb20sCgkJYWRkcmVzcyBfdG8sCgkJdWludDI1NiBfYW1vdW50CgkpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewoJCWlmIChiYWxhbmNlc1tfZnJvbV0gPj0gX2Ftb3VudAoJCQkmJiBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA+PSBfYW1vdW50CgkJCSYmIF9hbW91bnQgPiAwCgkJCSYmIGJhbGFuY2VzW190b10gKyBfYW1vdW50ID4gYmFsYW5jZXNbX3RvXSkgewoJCQliYWxhbmNlc1tfZnJvbV0gLT0gX2Ftb3VudDsKCQkJYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gLT0gX2Ftb3VudDsKCQkJYmFsYW5jZXNbX3RvXSArPSBfYW1vdW50OwoJCQlUcmFuc2ZlcihfZnJvbSwgX3RvLCBfYW1vdW50KTsKCQkJcmV0dXJuIHRydWU7CgkJfSBlbHNlIHsKCQkJcmV0dXJuIGZhbHNlOwoJCX0KCX0KCglmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKSB7CgkJcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07Cgl9CgoJZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF9hbW91bnQpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewoJCWFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX2Ftb3VudDsKCQlBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX2Ftb3VudCk7CgkJcmV0dXJuIHRydWU7Cgl9CgkvL2lzX2xlYXBfeWVhciBzZXRzIHllYXIgdG8gMTJBTSBvbiBuZXcgeWVhcnMgZGF5IG9mIHRoZSBjdXJyZW50IHllYXIgYW5kIHNldHMgdGhlIG1pbmluZyByZXdhcmRzCglmdW5jdGlvbiBpc19sZWFwX3llYXIoKSBwcml2YXRlewoJCWlmKG5vdyA+PSBfeWVhciArIDMxNTU3NjAwKXsJCgkJCV95ZWFyID0gX3llYXIgKyAzMTU1NzYwMDsJLy9jaGFuZ2VzIHRvIG5ldyB5ZWFyLCAxIGRheSBlYXJseSBvbiBsZWFwIHllYXIsIGluIHNlY29uZHMKCQkJX3llYXJfY291bnQgPSBfeWVhcl9jb3VudCArIDE7IC8vY2hhbmdlcyB0byBuZXcgeWVhciBpbiB5ZWFycwoJCQlfY3VycmVudE1pbmVkID0gMDsJLy9yZXNldHMgZm9yIGN1cnJlbnQgeWVhcnMgc3VwcGx5CgkJCV9taW5pbmdSZXdhcmQgPSBfbWluaW5nUmV3YXJkLzI7IC8vaGFsdmVkIHllYXJseSBzdGFydGluZyBhdCAxMDAKCQkJaWYoKChfeWVhcl9jb3VudC0yMDE4KSU1ID09IDApICYmIChfeWVhcl9jb3VudCAhPSAyMDE4KSl7CgkJCQlfbWF4TWluaW5nUmV3YXJkID0gX21heE1pbmluZ1Jld2FyZC8yOyAvL2hhbHZlZCBldmVyeSA1dGggeWVhcgoJCQkJCgoJCQl9CgkJCWlmKChfeWVhcl9jb3VudCU0ID09IDEpICYmICgoX3llYXJfY291bnQtMSklMTAwICE9IDApKXsKCQkJCV95ZWFyID0gX3llYXIgKyA4NjQwMDsJLy9hZGRzIGEgZGF5IGZvbGxvd2luZyBhIGxlYXAgeWVhcgoJCQkJCgoJCQl9CgkJCWVsc2UgaWYoKF95ZWFyX2NvdW50LTEpJTQwMCA9PSAwKXsKCQkJCV95ZWFyID0gX3llYXIgKyA4NjQwMDsgLy9sZWFwIHllYXIgZGF5IGFkZGVkIG9uIGxhc3QgZGF5IG9mIGxlYXAgeWVhcgoKCQkJfQogCgkJfQkKCgl9CgoKCWZ1bmN0aW9uIGRhdGVfY2hlY2soKSBwcml2YXRlIHJldHVybnMoYm9vbCBjaGVja19uZXd5ZWFycyl7CgoJCWlzX2xlYXBfeWVhcigpOyAvL3NldCB0aGUgeWVhciB2YXJpYWJsZXMgYW5kIHJld2FyZHMKCQkvL2NoZWNrIGlmIGRhdGUgaXMgbmV3IHllYXJzIGRheQoJICAgIGlmKChfeWVhciA8PSBub3cpICYmIChub3cgPD0gKF95ZWFyICsgMTIwOTYwMCkpKXsKCQkJcmV0dXJuIHRydWU7CS8vaXQgaXMgdGhlIGZpcnN0IHR3byB3ZWVrcyBvZiB0aGUgbmV3IHllYXIKCQl9CgkJZWxzZXsKCQkJcmV0dXJuIGZhbHNlOyAvL2l0IGlzIG5vdCB0aGUgZmlyc3QgdHdvIHdlZWtzIG9mIHRoZSBuZXcgeWVhcgoJCX0KCX0KCQoJZnVuY3Rpb24gbWluZSgpIHJldHVybnMoYm9vbCBzdWNjZXNzKXsKCQlpZihkYXRlX2NoZWNrKCkgIT0gdHJ1ZSl7CgkJCWN1cnJlbnRfcmVtYWluaW5nID0gX21heE1pbmluZ1Jld2FyZCAtIF9jdXJyZW50TWluZWQ7IAoJCQlpZigoY3VycmVudF9yZW1haW5pbmcgPiAwKSAmJiAoX2N1cnJlbnRNaW5lZCAhPSAwKSl7CgkJCQlfY3VycmVudE1pbmVkICs9IGN1cnJlbnRfcmVtYWluaW5nOwoJCQkJYmFsYW5jZXNbY29udHJhY3Rfb3duZXJdICs9IGN1cnJlbnRfcmVtYWluaW5nOwoJCQkJVHJhbnNmZXIodGhpcywgY29udHJhY3Rfb3duZXIsIGN1cnJlbnRfcmVtYWluaW5nKTsKCQkJCWN1cnJlbnRfcmVtYWluaW5nID0gMDsKCQkJfQoJCQlyZXZlcnQoKTsKCQl9CgkJZWxzZSBpZigoX2N1cnJlbnRNaW5lZCA8IF9tYXhNaW5pbmdSZXdhcmQpICYmIChfbWF4TWluaW5nUmV3YXJkIC0gX2N1cnJlbnRNaW5lZCA+PSBfbWluaW5nUmV3YXJkKSl7CgkJCWlmKChfdG90YWxTdXBwbHkrX21pbmluZ1Jld2FyZCkgPD0gX21heFRvdGFsU3VwcGx5KXsKCQkJCS8vc2VuZCByZXdhcmQgaWYgdGhlcmUgYXJlIHRva2VucyBhdmFpbGFibGUgYW5kIGl0IGlzIG5ldyB5ZWFycyBkYXkKCQkJCWJhbGFuY2VzW21zZy5zZW5kZXJdICs9IF9taW5pbmdSZXdhcmQ7CQoJCQkJX2N1cnJlbnRNaW5lZCArPSBfbWluaW5nUmV3YXJkOwoJCQkJX3RvdGFsU3VwcGx5ICs9IF9taW5pbmdSZXdhcmQ7CgkJCQlUcmFuc2Zlcih0aGlzLCBtc2cuc2VuZGVyLCBfbWluaW5nUmV3YXJkKTsgCgkJCQlyZXR1cm4gdHJ1ZTsKCQkJfQoJCQoJCX0KCQlyZXR1cm4gZmFsc2U7Cgl9CgoJZnVuY3Rpb24gTWF4VG90YWxTdXBwbHkoKSBjb25zdGFudCByZXR1cm5zKHVpbnQyNTYpCgl7CgkJcmV0dXJuIF9tYXhUb3RhbFN1cHBseTsKCX0KCQoJZnVuY3Rpb24gTWluaW5nUmV3YXJkKCkgY29uc3RhbnQgcmV0dXJucyh1aW50MjU2KQoJewoJCXJldHVybiBfbWluaW5nUmV3YXJkOwoJfQoJCglmdW5jdGlvbiBNYXhNaW5pbmdSZXdhcmQoKSBjb25zdGFudCByZXR1cm5zKHVpbnQyNTYpCgl7CgkJcmV0dXJuIF9tYXhNaW5pbmdSZXdhcmQ7Cgl9CglmdW5jdGlvbiBNaW5lZFRoaXNZZWFyKCkgY29uc3RhbnQgcmV0dXJucyh1aW50MjU2KQoJewoJCXJldHVybiBfY3VycmVudE1pbmVkOyAvL2Ftb3VudCBtaW5lZCBzbyBmYXIgdGhpcyB5ZWFyCgl9CgoKCn0='.
	

]
