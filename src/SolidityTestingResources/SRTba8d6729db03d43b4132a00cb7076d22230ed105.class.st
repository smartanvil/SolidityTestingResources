Class {
	#name : #SRTba8d6729db03d43b4132a00cb7076d22230ed105,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTba8d6729db03d43b4132a00cb7076d22230ed105 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7Cgpjb250cmFjdCBTYWZlTWF0aCB7CiAgICBmdW5jdGlvbiBzYWZlQWRkKHVpbnQgYSwgdWludCBiKSBwdWJsaWMgcHVyZSByZXR1cm5zICh1aW50IGMpIHsKICAgICAgICBjID0gYSArIGI7CiAgICAgICAgcmVxdWlyZShjID49IGEpOwogICAgfQogICAgZnVuY3Rpb24gc2FmZVN1Yih1aW50IGEsIHVpbnQgYikgcHVibGljIHB1cmUgcmV0dXJucyAodWludCBjKSB7CiAgICAgICAgcmVxdWlyZShiIDw9IGEpOwogICAgICAgIGMgPSBhIC0gYjsKICAgIH0KICAgIGZ1bmN0aW9uIHNhZmVNdWwodWludCBhLCB1aW50IGIpIHB1YmxpYyBwdXJlIHJldHVybnMgKHVpbnQgYykgewogICAgICAgIGMgPSBhICogYjsKICAgICAgICByZXF1aXJlKGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgIH0KICAgIGZ1bmN0aW9uIHNhZmVEaXYodWludCBhLCB1aW50IGIpIHB1YmxpYyBwdXJlIHJldHVybnMgKHVpbnQgYykgewogICAgICAgIHJlcXVpcmUoYiA+IDApOwogICAgICAgIGMgPSBhIC8gYjsKICAgIH0KfQoKY29udHJhY3QgRVJDMjBJbnRlcmZhY2UgewogICAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludCk7CiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyB0b2tlbk93bmVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludCBiYWxhbmNlKTsKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIHRva2VuT3duZXIsIGFkZHJlc3Mgc3BlbmRlcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQgcmVtYWluaW5nKTsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sIHVpbnQgdG9rZW5zKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBzcGVuZGVyLCB1aW50IHRva2VucykgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvLCB1aW50IHRva2VucykgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CgogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludCB0b2tlbnMpOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIHRva2VuT3duZXIsIGFkZHJlc3MgaW5kZXhlZCBzcGVuZGVyLCB1aW50IHRva2Vucyk7Cn0KCmNvbnRyYWN0IEFwcHJvdmVBbmRDYWxsRmFsbEJhY2sgewogICAgZnVuY3Rpb24gcmVjZWl2ZUFwcHJvdmFsKGFkZHJlc3MgZnJvbSwgdWludDI1NiB0b2tlbnMsIGFkZHJlc3MgdG9rZW4sIGJ5dGVzIGRhdGEpIHB1YmxpYzsKfQpjb250cmFjdCBPd25lZCB7CiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKICAgIGFkZHJlc3MgcHVibGljIG5ld093bmVyOwoKICAgIGV2ZW50IE93bmVyc2hpcFRyYW5zZmVycmVkKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90byk7CgogICAgZnVuY3Rpb24gT3duZWQoKSBwdWJsaWMgewogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgIH0KCiAgICBtb2RpZmllciBvbmx5T3duZXIgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICAgICAgXzsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIF9uZXdPd25lcikgcHVibGljIG9ubHlPd25lciB7CiAgICAgICAgbmV3T3duZXIgPSBfbmV3T3duZXI7CiAgICB9CiAgICBmdW5jdGlvbiBhY2NlcHRPd25lcnNoaXAoKSBwdWJsaWMgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBuZXdPd25lcik7CiAgICAgICAgT3duZXJzaGlwVHJhbnNmZXJyZWQob3duZXIsIG5ld093bmVyKTsKICAgICAgICBvd25lciA9IG5ld093bmVyOwogICAgICAgIG5ld093bmVyID0gYWRkcmVzcygwKTsKICAgIH0KfQoKY29udHJhY3QgUGV0cm8gaXMgRVJDMjBJbnRlcmZhY2UsIE93bmVkLCBTYWZlTWF0aCB7CiAgICBzdHJpbmcgcHVibGljIHN5bWJvbDsKICAgIHN0cmluZyBwdWJsaWMgIG5hbWU7CiAgICB1aW50OCBwdWJsaWMgZGVjaW1hbHM7CiAgICB1aW50IHB1YmxpYyBfdG90YWxTdXBwbHk7CgogICAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQpIGJhbGFuY2VzOwogICAgbWFwcGluZyhhZGRyZXNzID0+IG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50KSkgYWxsb3dlZDsKCiAgICBmdW5jdGlvbiBQZXRybygpIHB1YmxpYyB7CiAgICAgICAgc3ltYm9sID0gIlBUUiI7CiAgICAgICAgbmFtZSA9ICJQZXRybyI7CiAgICAgICAgZGVjaW1hbHMgPSAxODsKICAgICAgICBfdG90YWxTdXBwbHkgPSAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA7CiAgICAgICAgYmFsYW5jZXNbMHhjQzczMkY0MUEyMDVGZTYxNkU5RWQ2NDY3NGVGNTBCMjVGN2Q2ODU5XSA9IF90b3RhbFN1cHBseTsKICAgICAgICBUcmFuc2ZlcihhZGRyZXNzKDApLCAweGNDNzMyRjQxQTIwNUZlNjE2RTlFZDY0Njc0ZUY1MEIyNUY3ZDY4NTksIF90b3RhbFN1cHBseSk7CiAgICB9CgogICAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludCkgewogICAgICAgIHJldHVybiBfdG90YWxTdXBwbHkgIC0gYmFsYW5jZXNbYWRkcmVzcygwKV07CiAgICB9CgogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgdG9rZW5Pd25lcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQgYmFsYW5jZSkgewogICAgICAgIHJldHVybiBiYWxhbmNlc1t0b2tlbk93bmVyXTsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIHRvLCB1aW50IHRva2VucykgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gc2FmZVN1YihiYWxhbmNlc1ttc2cuc2VuZGVyXSwgdG9rZW5zKTsKICAgICAgICBiYWxhbmNlc1t0b10gPSBzYWZlQWRkKGJhbGFuY2VzW3RvXSwgdG9rZW5zKTsKICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCB0bywgdG9rZW5zKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3Mgc3BlbmRlciwgdWludCB0b2tlbnMpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW3NwZW5kZXJdID0gdG9rZW5zOwogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIHNwZW5kZXIsIHRva2Vucyk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgZnJvbSwgYWRkcmVzcyB0bywgdWludCB0b2tlbnMpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBiYWxhbmNlc1tmcm9tXSA9IHNhZmVTdWIoYmFsYW5jZXNbZnJvbV0sIHRva2Vucyk7CiAgICAgICAgYWxsb3dlZFtmcm9tXVttc2cuc2VuZGVyXSA9IHNhZmVTdWIoYWxsb3dlZFtmcm9tXVttc2cuc2VuZGVyXSwgdG9rZW5zKTsKICAgICAgICBiYWxhbmNlc1t0b10gPSBzYWZlQWRkKGJhbGFuY2VzW3RvXSwgdG9rZW5zKTsKICAgICAgICBUcmFuc2Zlcihmcm9tLCB0bywgdG9rZW5zKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyB0b2tlbk93bmVyLCBhZGRyZXNzIHNwZW5kZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50IHJlbWFpbmluZykgewogICAgICAgIHJldHVybiBhbGxvd2VkW3Rva2VuT3duZXJdW3NwZW5kZXJdOwogICAgfQoKICAgIGZ1bmN0aW9uIGFwcHJvdmVBbmRDYWxsKGFkZHJlc3Mgc3BlbmRlciwgdWludCB0b2tlbnMsIGJ5dGVzIGRhdGEpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW3NwZW5kZXJdID0gdG9rZW5zOwogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIHNwZW5kZXIsIHRva2Vucyk7CiAgICAgICAgQXBwcm92ZUFuZENhbGxGYWxsQmFjayhzcGVuZGVyKS5yZWNlaXZlQXBwcm92YWwobXNnLnNlbmRlciwgdG9rZW5zLCB0aGlzLCBkYXRhKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiAoKSBwdWJsaWMgcGF5YWJsZSB7CiAgICAgICAgcmV2ZXJ0KCk7CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXJBbnlFUkMyMFRva2VuKGFkZHJlc3MgdG9rZW5BZGRyZXNzLCB1aW50IHRva2VucykgcHVibGljIG9ubHlPd25lciByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICByZXR1cm4gRVJDMjBJbnRlcmZhY2UodG9rZW5BZGRyZXNzKS50cmFuc2Zlcihvd25lciwgdG9rZW5zKTsKICAgIH0KfQ=='.
	

]
