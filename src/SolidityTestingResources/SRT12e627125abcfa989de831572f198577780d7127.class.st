Class {
	#name : #SRT12e627125abcfa989de831572f198577780d7127,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT12e627125abcfa989de831572f198577780d7127 >> base64 [
	^ ''.
	

]
