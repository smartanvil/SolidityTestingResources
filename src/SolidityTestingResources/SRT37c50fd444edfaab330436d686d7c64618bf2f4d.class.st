Class {
	#name : #SRT37c50fd444edfaab330436d686d7c64618bf2f4d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT37c50fd444edfaab330436d686d7c64618bf2f4d >> base64 [
	^ ''.
	

]
