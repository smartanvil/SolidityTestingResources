Class {
	#name : #SRT9bc018c9e3e75afcb826320338927973839d0528,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT9bc018c9e3e75afcb826320338927973839d0528 >> base64 [
	^ ''.
	

]
