Class {
	#name : #SRTb2ee4acf44b12f85885f23494a739357575a1760,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTb2ee4acf44b12f85885f23494a739357575a1760 >> base64 [
	^ ''.
	

]
