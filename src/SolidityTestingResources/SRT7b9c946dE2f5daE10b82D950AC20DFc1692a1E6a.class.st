Class {
	#name : #SRT7b9c946dE2f5daE10b82D950AC20DFc1692a1E6a,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT7b9c946dE2f5daE10b82D950AC20DFc1692a1E6a >> base64 [
	^ ''.
	

]
