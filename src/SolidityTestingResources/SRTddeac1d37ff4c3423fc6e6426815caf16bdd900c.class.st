Class {
	#name : #SRTddeac1d37ff4c3423fc6e6426815caf16bdd900c,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTddeac1d37ff4c3423fc6e6426815caf16bdd900c >> base64 [
	^ ''.
	

]
