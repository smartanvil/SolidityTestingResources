Class {
	#name : #SRTf0daec652dd7c9f779e7c0f3ff5610fa3b61f61f,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTf0daec652dd7c9f779e7c0f3ff5610fa3b61f61f >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgovLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCi8vIExhYnN0ZXJYOgovLyAgICBXZWI6IGh0dHBzOi8vd3d3LmxhYnN0ZXJ4LmNvbQovLyAgICBUd2l0dGVyOiBodHRwczovL3R3aXR0ZXIuY29tL2xhYnN0ZXJ4Ci8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCmNvbnRyYWN0IFNhZmVNYXRoIHsKICAgIGZ1bmN0aW9uIHNhZmVBZGQodWludCBhLCB1aW50IGIpIHB1YmxpYyBwdXJlIHJldHVybnMgKHVpbnQgYykgewogICAgICAgIGMgPSBhICsgYjsKICAgICAgICByZXF1aXJlKGMgPj0gYSk7CiAgICB9CiAgICBmdW5jdGlvbiBzYWZlU3ViKHVpbnQgYSwgdWludCBiKSBwdWJsaWMgcHVyZSByZXR1cm5zICh1aW50IGMpIHsKICAgICAgICByZXF1aXJlKGIgPD0gYSk7CiAgICAgICAgYyA9IGEgLSBiOwogICAgfQogICAgZnVuY3Rpb24gc2FmZU11bCh1aW50IGEsIHVpbnQgYikgcHVibGljIHB1cmUgcmV0dXJucyAodWludCBjKSB7CiAgICAgICAgYyA9IGEgKiBiOwogICAgICAgIHJlcXVpcmUoYSA9PSAwIHx8IGMgLyBhID09IGIpOwogICAgfQogICAgZnVuY3Rpb24gc2FmZURpdih1aW50IGEsIHVpbnQgYikgcHVibGljIHB1cmUgcmV0dXJucyAodWludCBjKSB7CiAgICAgICAgcmVxdWlyZShiID4gMCk7CiAgICAgICAgYyA9IGEgLyBiOwogICAgfQp9CgoKY29udHJhY3QgRVJDMjBJbnRlcmZhY2UgewogICAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludCk7CiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyB0b2tlbk93bmVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludCBiYWxhbmNlKTsKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIHRva2VuT3duZXIsIGFkZHJlc3Mgc3BlbmRlcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQgcmVtYWluaW5nKTsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sIHVpbnQgdG9rZW5zKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBzcGVuZGVyLCB1aW50IHRva2VucykgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvLCB1aW50IHRva2VucykgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CgogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludCB0b2tlbnMpOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIHRva2VuT3duZXIsIGFkZHJlc3MgaW5kZXhlZCBzcGVuZGVyLCB1aW50IHRva2Vucyk7Cn0KCgpjb250cmFjdCBBcHByb3ZlQW5kQ2FsbEZhbGxCYWNrIHsKICAgIGZ1bmN0aW9uIHJlY2VpdmVBcHByb3ZhbChhZGRyZXNzIGZyb20sIHVpbnQyNTYgdG9rZW5zLCBhZGRyZXNzIHRva2VuLCBieXRlcyBkYXRhKSBwdWJsaWM7Cn0KCgpjb250cmFjdCBPd25lZCB7CiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKICAgIGFkZHJlc3MgcHVibGljIG5ld093bmVyOwoKICAgIGV2ZW50IE93bmVyc2hpcFRyYW5zZmVycmVkKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90byk7CgogICAgZnVuY3Rpb24gT3duZWQoKSBwdWJsaWMgewogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgIH0KCiAgICBtb2RpZmllciBvbmx5T3duZXIgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICAgICAgXzsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIF9uZXdPd25lcikgcHVibGljIG9ubHlPd25lciB7CiAgICAgICAgbmV3T3duZXIgPSBfbmV3T3duZXI7CiAgICB9CiAgICBmdW5jdGlvbiBhY2NlcHRPd25lcnNoaXAoKSBwdWJsaWMgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBuZXdPd25lcik7CiAgICAgICAgT3duZXJzaGlwVHJhbnNmZXJyZWQob3duZXIsIG5ld093bmVyKTsKICAgICAgICBvd25lciA9IG5ld093bmVyOwogICAgICAgIG5ld093bmVyID0gYWRkcmVzcygwKTsKICAgIH0KfQoKCmNvbnRyYWN0IExhYnN0ZXJYVG9rZW4gaXMgRVJDMjBJbnRlcmZhY2UsIE93bmVkLCBTYWZlTWF0aCB7CiAgICBzdHJpbmcgcHVibGljIHN5bWJvbDsKICAgIHN0cmluZyBwdWJsaWMgIG5hbWU7CiAgICB1aW50OCBwdWJsaWMgZGVjaW1hbHM7CiAgICB1aW50IHB1YmxpYyBfdG90YWxTdXBwbHk7CgogICAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQpIGJhbGFuY2VzOwogICAgbWFwcGluZyhhZGRyZXNzID0+IG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50KSkgYWxsb3dlZDsKCiAgICBmdW5jdGlvbiBMYWJzdGVyWFRva2VuKCkgcHVibGljIHsKICAgICAgICBzeW1ib2wgPSAiTEFCWCI7CiAgICAgICAgbmFtZSA9ICJMYWJzdGVyWCI7CiAgICAgICAgZGVjaW1hbHMgPSAxODsKICAgICAgICBfdG90YWxTdXBwbHkgPSAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA7CiAgICAgICAgYmFsYW5jZXNbMHg0NTI0YmFBOThGOWEzQjlERUM1N2NhYWU3NjMzOTM2ZUY5NmJENzA4XSA9IF90b3RhbFN1cHBseTsKICAgICAgICBUcmFuc2ZlcihhZGRyZXNzKDApLCAweDQ1MjRiYUE5OEY5YTNCOURFQzU3Y2FhZTc2MzM5MzZlRjk2YkQ3MDgsIF90b3RhbFN1cHBseSk7CiAgICB9CgogICAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludCkgewogICAgICAgIHJldHVybiBfdG90YWxTdXBwbHkgIC0gYmFsYW5jZXNbYWRkcmVzcygwKV07CiAgICB9CgogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgdG9rZW5Pd25lcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQgYmFsYW5jZSkgewogICAgICAgIHJldHVybiBiYWxhbmNlc1t0b2tlbk93bmVyXTsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIHRvLCB1aW50IHRva2VucykgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gc2FmZVN1YihiYWxhbmNlc1ttc2cuc2VuZGVyXSwgdG9rZW5zKTsKICAgICAgICBiYWxhbmNlc1t0b10gPSBzYWZlQWRkKGJhbGFuY2VzW3RvXSwgdG9rZW5zKTsKICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCB0bywgdG9rZW5zKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCgogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAvLyBUb2tlbiBvd25lciBjYW4gYXBwcm92ZSBmb3Igc3BlbmRlciB0byB0cmFuc2ZlckZyb20oLi4uKSB0b2tlbnMKICAgIC8vIGZyb20gdGhlIHRva2VuIG93bmVyJ3MgYWNjb3VudAogICAgLy8KICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2Jsb2IvbWFzdGVyL0VJUFMvZWlwLTIwLXRva2VuLXN0YW5kYXJkLm1kCiAgICAvLyByZWNvbW1lbmRzIHRoYXQgdGhlcmUgYXJlIG5vIGNoZWNrcyBmb3IgdGhlIGFwcHJvdmFsIGRvdWJsZS1zcGVuZCBhdHRhY2sKICAgIC8vIGFzIHRoaXMgc2hvdWxkIGJlIGltcGxlbWVudGVkIGluIHVzZXIgaW50ZXJmYWNlcwogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3Mgc3BlbmRlciwgdWludCB0b2tlbnMpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW3NwZW5kZXJdID0gdG9rZW5zOwogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIHNwZW5kZXIsIHRva2Vucyk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgZnJvbSwgYWRkcmVzcyB0bywgdWludCB0b2tlbnMpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBiYWxhbmNlc1tmcm9tXSA9IHNhZmVTdWIoYmFsYW5jZXNbZnJvbV0sIHRva2Vucyk7CiAgICAgICAgYWxsb3dlZFtmcm9tXVttc2cuc2VuZGVyXSA9IHNhZmVTdWIoYWxsb3dlZFtmcm9tXVttc2cuc2VuZGVyXSwgdG9rZW5zKTsKICAgICAgICBiYWxhbmNlc1t0b10gPSBzYWZlQWRkKGJhbGFuY2VzW3RvXSwgdG9rZW5zKTsKICAgICAgICBUcmFuc2Zlcihmcm9tLCB0bywgdG9rZW5zKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyB0b2tlbk93bmVyLCBhZGRyZXNzIHNwZW5kZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50IHJlbWFpbmluZykgewogICAgICAgIHJldHVybiBhbGxvd2VkW3Rva2VuT3duZXJdW3NwZW5kZXJdOwogICAgfQoKICAgIGZ1bmN0aW9uIGFwcHJvdmVBbmRDYWxsKGFkZHJlc3Mgc3BlbmRlciwgdWludCB0b2tlbnMsIGJ5dGVzIGRhdGEpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW3NwZW5kZXJdID0gdG9rZW5zOwogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIHNwZW5kZXIsIHRva2Vucyk7CiAgICAgICAgQXBwcm92ZUFuZENhbGxGYWxsQmFjayhzcGVuZGVyKS5yZWNlaXZlQXBwcm92YWwobXNnLnNlbmRlciwgdG9rZW5zLCB0aGlzLCBkYXRhKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiAoKSBwdWJsaWMgcGF5YWJsZSB7CiAgICAgICAgcmV2ZXJ0KCk7CiAgICB9CgoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyQW55RVJDMjBUb2tlbihhZGRyZXNzIHRva2VuQWRkcmVzcywgdWludCB0b2tlbnMpIHB1YmxpYyBvbmx5T3duZXIgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgcmV0dXJuIEVSQzIwSW50ZXJmYWNlKHRva2VuQWRkcmVzcykudHJhbnNmZXIob3duZXIsIHRva2Vucyk7CiAgICB9Cn0='.
	

]
