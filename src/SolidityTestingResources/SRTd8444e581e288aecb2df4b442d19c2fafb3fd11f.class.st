Class {
	#name : #SRTd8444e581e288aecb2df4b442d19c2fafb3fd11f,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTd8444e581e288aecb2df4b442d19c2fafb3fd11f >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMjA7CgoKCi8qKgogKiBAdGl0bGUgRVJDMjBCYXNpYwogKiBAZGV2IFNpbXBsZXIgdmVyc2lvbiBvZiBFUkMyMCBpbnRlcmZhY2UKICogQGRldiBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL0VJUHMvaXNzdWVzLzE3OQogKi8KY29udHJhY3QgRVJDMjBCYXNpYyB7CiAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2KTsKICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyB3aG8pIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYpOwogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sIHVpbnQyNTYgdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKTsKICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHZhbHVlKTsKfQoKLyoqCiAqIEB0aXRsZSBFUkMyMCBpbnRlcmZhY2UKICogQGRldiBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL0VJUHMvaXNzdWVzLzIwCiAqLwpjb250cmFjdCBFUkMyMCBpcyBFUkMyMEJhc2ljIHsKICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBvd25lciwgYWRkcmVzcyBzcGVuZGVyKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2KTsKICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvLCB1aW50MjU2IHZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CiAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIHNwZW5kZXIsIHVpbnQyNTYgdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKTsKICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBzcGVuZGVyLCB1aW50MjU2IHZhbHVlKTsKfQoKCi8qKgogKiBAdGl0bGUgU2FmZU1hdGgKICogQGRldiBNYXRoIG9wZXJhdGlvbnMgd2l0aCBzYWZldHkgY2hlY2tzIHRoYXQgdGhyb3cgb24gZXJyb3IKICovCmxpYnJhcnkgU2FmZU1hdGggewoKICAvKioKICAqIEBkZXYgTXVsdGlwbGllcyB0d28gbnVtYmVycywgdGhyb3dzIG9uIG92ZXJmbG93LgogICovCiAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIGlmIChhID09IDApIHsKICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICB1aW50MjU2IGMgPSBhICogYjsKICAgIGFzc2VydChjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgLyoqCiAgKiBAZGV2IEludGVnZXIgZGl2aXNpb24gb2YgdHdvIG51bWJlcnMsIHRydW5jYXRpbmcgdGhlIHF1b3RpZW50LgogICovCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIC8vIGFzc2VydChiID4gMCk7IC8vIFNvbGlkaXR5IGF1dG9tYXRpY2FsbHkgdGhyb3dzIHdoZW4gZGl2aWRpbmcgYnkgMAogICAgdWludDI1NiBjID0gYSAvIGI7CiAgICAvLyBhc3NlcnQoYSA9PSBiICogYyArIGEgJSBiKTsgLy8gVGhlcmUgaXMgbm8gY2FzZSBpbiB3aGljaCB0aGlzIGRvZXNuJ3QgaG9sZAogICAgcmV0dXJuIGM7CiAgfQoKICAvKioKICAqIEBkZXYgU3Vic3RyYWN0cyB0d28gbnVtYmVycywgdGhyb3dzIG9uIG92ZXJmbG93IChpLmUuIGlmIHN1YnRyYWhlbmQgaXMgZ3JlYXRlciB0aGFuIG1pbnVlbmQpLgogICovCiAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIGFzc2VydChiIDw9IGEpOwogICAgcmV0dXJuIGEgLSBiOwogIH0KCiAgLyoqCiAgKiBAZGV2IEFkZHMgdHdvIG51bWJlcnMsIHRocm93cyBvbiBvdmVyZmxvdy4KICAqLwogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhICsgYjsKICAgIGFzc2VydChjID49IGEpOwogICAgcmV0dXJuIGM7CiAgfQp9CgoKLyoqCiAqIEB0aXRsZSBPd25hYmxlCiAqIEBkZXYgVGhlIE93bmFibGUgY29udHJhY3QgaGFzIGFuIG93bmVyIGFkZHJlc3MsIGFuZCBwcm92aWRlcyBiYXNpYyBhdXRob3JpemF0aW9uIGNvbnRyb2wKICogZnVuY3Rpb25zLCB0aGlzIHNpbXBsaWZpZXMgdGhlIGltcGxlbWVudGF0aW9uIG9mICJ1c2VyIHBlcm1pc3Npb25zIi4KICovCmNvbnRyYWN0IE93bmFibGUgewogIGFkZHJlc3MgcHVibGljIG93bmVyOwoKCiAgZXZlbnQgT3duZXJzaGlwVHJhbnNmZXJyZWQoYWRkcmVzcyBpbmRleGVkIHByZXZpb3VzT3duZXIsIGFkZHJlc3MgaW5kZXhlZCBuZXdPd25lcik7CgoKICAvKioKICAgKiBAZGV2IFRoZSBPd25hYmxlIGNvbnN0cnVjdG9yIHNldHMgdGhlIG9yaWdpbmFsIGBvd25lcmAgb2YgdGhlIGNvbnRyYWN0IHRvIHRoZSBzZW5kZXIKICAgKiBhY2NvdW50LgogICAqLwogIGZ1bmN0aW9uIE93bmFibGUoKSBwdWJsaWMgewogICAgb3duZXIgPSBtc2cuc2VuZGVyOwogIH0KCiAgLyoqCiAgICogQGRldiBUaHJvd3MgaWYgY2FsbGVkIGJ5IGFueSBhY2NvdW50IG90aGVyIHRoYW4gdGhlIG93bmVyLgogICAqLwogIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICBfOwogIH0KCiAgLyoqCiAgICogQGRldiBBbGxvd3MgdGhlIGN1cnJlbnQgb3duZXIgdG8gdHJhbnNmZXIgY29udHJvbCBvZiB0aGUgY29udHJhY3QgdG8gYSBuZXdPd25lci4KICAgKiBAcGFyYW0gbmV3T3duZXIgVGhlIGFkZHJlc3MgdG8gdHJhbnNmZXIgb3duZXJzaGlwIHRvLgogICAqLwogIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpIHB1YmxpYyBvbmx5T3duZXIgewogICAgcmVxdWlyZShuZXdPd25lciAhPSBhZGRyZXNzKDApKTsKICAgIE93bmVyc2hpcFRyYW5zZmVycmVkKG93bmVyLCBuZXdPd25lcik7CiAgICBvd25lciA9IG5ld093bmVyOwogIH0KCn0KCgoKY29udHJhY3QgU2FsZSBpcyBPd25hYmxlIHsKICB1c2luZyBTYWZlTWF0aCBmb3IgdWludDI1NjsKICAgIHVpbnQgcmF0ZSA9IDE7CiAgICB1aW50IG1pbmNhcCA9IDA7CiAgICBhZGRyZXNzIHRva2VuQWRkcjsKICAgIGJvb2wgaXNBY3RpdmUgPSBmYWxzZTsKICAgIGJvb2wgb25seVdoaXRlbGlzdCA9IGZhbHNlOwoKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50KSBiYWxhbmNlOwogICAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQpIGJhbGFuY2VXaXRoZHJhd247CiAgICBhZGRyZXNzW10gaW52ZXN0b3JzOwogICAgbWFwcGluZyhhZGRyZXNzID0+IGJvb2wpIHdoaXRlbGlzdDsKCgogICAgZnVuY3Rpb24gU2FsZSgpIHB1YmxpY3sKICAgIH0KCiAgICBmdW5jdGlvbigpIHBheWFibGUgcHVibGljeyAKICAgICAgcmVxdWlyZShpc0FjdGl2ZSk7CiAgICAgIHJlcXVpcmUodG9rZW5BZGRyICE9IGFkZHJlc3MoMCkpOwogICAgICByZXF1aXJlKG1zZy5zZW5kZXIgIT0gYWRkcmVzcygwKSk7CiAgICAgIHJlcXVpcmUobXNnLnZhbHVlID49ICBtaW5jYXAgKTsKICAgICAgcmVxdWlyZSghb25seVdoaXRlbGlzdCB8fCB3aGl0ZWxpc3RbbXNnLnNlbmRlcl0pOwogICAgICB1aW50MjU2IGFtdCA9IG1zZy52YWx1ZS5tdWwocmF0ZSk7CgogICAgICBFUkMyMCB0b2tlbiA9IEVSQzIwKHRva2VuQWRkcik7CiAgICAgIHJlcXVpcmUodG9rZW4uYmFsYW5jZU9mKHRoaXMpID49IGFtdCk7CiAgICAgIAogICAgICBpZihiYWxhbmNlW21zZy5zZW5kZXJdID09IDApewogICAgICAgIGludmVzdG9ycy5wdXNoKG1zZy5zZW5kZXIpOwogICAgICB9CiAgICAgIGJhbGFuY2VbbXNnLnNlbmRlcl0gKz0gYW10OwogICAgfQogICAgZnVuY3Rpb24gZ2V0UmF0ZSgpIHB1YmxpYyB2aWV3IHJldHVybnModWludCl7CiAgICAgICAgcmV0dXJuIHJhdGU7CiAgICB9CiAgICBmdW5jdGlvbiBnZXRDYXAoKSBwdWJsaWMgdmlldyByZXR1cm5zKHVpbnQpewogICAgICAgIHJldHVybiBtaW5jYXA7CiAgICB9CiAgICBmdW5jdGlvbiBnZXRCYWxhbmNlKCkgcHVibGljIHZpZXcgcmV0dXJucyh1aW50MjU2KXsKICAgICAgRVJDMjAgdG9rZW4gPSBFUkMyMCh0b2tlbkFkZHIpOwogICAgICByZXR1cm4gdG9rZW4uYmFsYW5jZU9mKHRoaXMpOwogICAgfQogICAgZnVuY3Rpb24gY2hhbmdlUmF0ZSh1aW50IF9yYXRlKSBwdWJsaWMgb25seU93bmVyewogICAgICByYXRlID0gX3JhdGU7CiAgICB9CiAgICBmdW5jdGlvbiBjaGFuZ2VtaW5jYXAodWludCBfbWluY2FwKSBwdWJsaWMgb25seU93bmVyewogICAgICBtaW5jYXAgPSBfbWluY2FwOwogICAgfQogICAgZnVuY3Rpb24gY2hhbmdlQWRkcihhZGRyZXNzIF90b2tlbkFkZHIpIHB1YmxpYyBvbmx5T3duZXJ7CiAgICAgIHRva2VuQWRkciA9IF90b2tlbkFkZHI7CiAgICB9CiAgICBmdW5jdGlvbiBhZGRXaGl0ZWxpc3QoYWRkcmVzc1tdIGFkZHJfbGlzdCkgcHVibGljIG9ubHlPd25lcnsKICAgICAgZm9yKHVpbnQgaT0wO2k8YWRkcl9saXN0Lmxlbmd0aDtpKyspewogICAgICAgIHdoaXRlbGlzdFthZGRyX2xpc3RbaV1dID0gdHJ1ZTsKICAgICAgfQogICAgfQogICAgZnVuY3Rpb24gc2V0QWN0aXZlKCkgcHVibGljIG9ubHlPd25lcnsKICAgICAgICBpc0FjdGl2ZSA9ICFpc0FjdGl2ZTsKICAgIH0KICAgIGZ1bmN0aW9uIHNldEFjdGl2ZVdoaXRlbGlzdCgpIHB1YmxpYyBvbmx5T3duZXJ7CiAgICAgICAgb25seVdoaXRlbGlzdCA9ICFvbmx5V2hpdGVsaXN0OwogICAgfQogICAgZnVuY3Rpb24gZHJhaW5XZWkoKSBwdWJsaWMgb25seU93bmVyewogICAgICAgIG93bmVyLnRyYW5zZmVyKHRoaXMuYmFsYW5jZSk7CiAgICB9ICAgIAogICAgZnVuY3Rpb24gZHJhaW5Ub2tlbigpIHB1YmxpYyBvbmx5T3duZXJ7CiAgICAgICAgdWludCBjYW50V2l0aGRyYXdBbXQgPSAwOwogICAgICAgIGZvcih1aW50IGkgPSAwO2k8aW52ZXN0b3JzLmxlbmd0aDtpKyspewogICAgICAgICAgY2FudFdpdGhkcmF3QW10ICs9IGJhbGFuY2VbaW52ZXN0b3JzW2ldXTsKICAgICAgICB9ICAgICAgCiAgICAgICAgRVJDMjAgdG9rZW4gPSBFUkMyMCh0b2tlbkFkZHIpOwogICAgICAgIHRva2VuLnRyYW5zZmVyKG1zZy5zZW5kZXIsICh0b2tlbi5iYWxhbmNlT2YodGhpcykpLnN1YihjYW50V2l0aGRyYXdBbXQpICk7CiAgICB9CiAgICBmdW5jdGlvbiBnaXZlVG9rZW5zKHVpbnQgcGVyY2VudCkgcHVibGljIG9ubHlPd25lcnsKICAgICAgICBFUkMyMCB0b2tlbiA9IEVSQzIwKHRva2VuQWRkcik7CiAgICAgICAgZm9yKHVpbnQgaSA9IDA7aTxpbnZlc3RvcnMubGVuZ3RoO2krKyl7CiAgICAgICAgICB1aW50IGJhbCA9IGJhbGFuY2VbaW52ZXN0b3JzW2ldXTsKICAgICAgICAgIHVpbnQgY2FuV2l0aGRyYXdBbXQgPSAoYmFsLmRpdigxMDApKS5tdWwocGVyY2VudCk7CiAgICAgICAgICBpZihjYW5XaXRoZHJhd0FtdCA+IDAgJiYgYmFsYW5jZVdpdGhkcmF3bltpbnZlc3RvcnNbaV1dICsgY2FuV2l0aGRyYXdBbXQgPD0gYmFsKXsKICAgICAgICAgICAgYmFsYW5jZVdpdGhkcmF3bltpbnZlc3RvcnNbaV1dICs9IGNhbldpdGhkcmF3QW10OwogICAgICAgICAgICB0b2tlbi50cmFuc2ZlcihpbnZlc3RvcnNbaV0sIGNhbldpdGhkcmF3QW10KTsKICAgICAgICAgIH0KICAgICAgICB9ICAgICAgCiAgICB9ICAgICAgICAKfQ=='.
	

]
