Class {
	#name : #SRTc78c0c443c84518ec6a14e63a994b329ac19024d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTc78c0c443c84518ec6a14e63a994b329ac19024d >> base64 [
	^ ''.
	

]
