Class {
	#name : #SRTbc7942054f77b82e8a71ace170e4b00ebae67eb6,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTbc7942054f77b82e8a71ace170e4b00ebae67eb6 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7Cgpjb250cmFjdCBJT3duZWQgewogIGZ1bmN0aW9uIG93bmVyKCkgcHVibGljIHZpZXcgcmV0dXJucyAoYWRkcmVzcykgeyBvd25lcjsgfQogIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgX25ld093bmVyKSBwdWJsaWM7Cn0KCmNvbnRyYWN0IE93bmVkIGlzIElPd25lZCB7CiAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CgogIGZ1bmN0aW9uIE93bmVkKCkgcHVibGljIHsKICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICB9CgogIG1vZGlmaWVyIHZhbGlkQWRkcmVzcyhhZGRyZXNzIF9hZGRyZXNzKSB7CiAgICByZXF1aXJlKF9hZGRyZXNzICE9IDB4MCk7CiAgICBfOwogIH0KICBtb2RpZmllciBvbmx5T3duZXIgewogICAgYXNzZXJ0KG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgXzsKICB9CiAgCiAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBfbmV3T3duZXIpIHB1YmxpYyB2YWxpZEFkZHJlc3MoX25ld093bmVyKSBvbmx5T3duZXIgewogICAgcmVxdWlyZShfbmV3T3duZXIgIT0gb3duZXIpOwogICAgCiAgICBvd25lciA9IF9uZXdPd25lcjsKICB9Cn0KCgpsaWJyYXJ5IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHZpZXcgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSAqIGI7CiAgICBhc3NlcnQoYSA9PSAwIHx8IGMgLyBhID09IGIpOwogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBkaXYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHZpZXcgcmV0dXJucyAodWludDI1NikgewogICAgLy8gYXNzZXJ0KGIgPiAwKTsgLy8gU29saWRpdHkgYXV0b21hdGljYWxseSB0aHJvd3Mgd2hlbiBkaXZpZGluZyBieSAwCiAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgIC8vIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOyAvLyBUaGVyZSBpcyBubyBjYXNlIGluIHdoaWNoIHRoaXMgZG9lc24ndCBob2xkCiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgdmlldyByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgdmlldyByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhICsgYjsKICAgIGFzc2VydChjID49IGEpOwogICAgcmV0dXJuIGM7CiAgfQp9CgoKY29udHJhY3QgSUVSQzIwVG9rZW4gewogIGZ1bmN0aW9uIG5hbWUoKSBwdWJsaWMgdmlldyByZXR1cm5zIChzdHJpbmcpIHsgbmFtZTsgfQogIGZ1bmN0aW9uIHN5bWJvbCgpIHB1YmxpYyB2aWV3IHJldHVybnMgKHN0cmluZykgeyBzeW1ib2w7IH0KICBmdW5jdGlvbiBkZWNpbWFscygpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQ4KSB7IGRlY2ltYWxzOyB9CiAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2KSB7IHRvdGFsU3VwcGx5OyB9CiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpIHsgX293bmVyOyBiYWxhbmNlOyB9CiAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2IHJlbWFpbmluZykgeyBfb3duZXI7IF9zcGVuZGVyOyByZW1haW5pbmc7IH0KCiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CiAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpOwogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKTsKfQoKY29udHJhY3QgRVJDMjBUb2tlbiBpcyBJRVJDMjBUb2tlbiB7CiAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQyNTY7CgogIHN0cmluZyBwdWJsaWMgc3RhbmRhcmQgPSAnVG9rZW4gMC4xJzsKICBzdHJpbmcgcHVibGljIG5hbWUgPSAnJzsKICBzdHJpbmcgcHVibGljIHN5bWJvbCA9ICcnOwogIHVpbnQ4IHB1YmxpYyBkZWNpbWFscyA9IDA7CiAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHkgPSAwOwogIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIGJhbGFuY2VPZjsKICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikpIHB1YmxpYyBhbGxvd2FuY2U7CgogIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwogIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpOwoKICBmdW5jdGlvbiBFUkMyMFRva2VuKHN0cmluZyBfbmFtZSwgc3RyaW5nIF9zeW1ib2wsIHVpbnQ4IF9kZWNpbWFscykgcHVibGljIHsKICAgIHJlcXVpcmUoYnl0ZXMoX25hbWUpLmxlbmd0aCA+IDAgJiYgYnl0ZXMoX3N5bWJvbCkubGVuZ3RoID4gMCk7CiAgICBuYW1lID0gX25hbWU7CiAgICBzeW1ib2wgPSBfc3ltYm9sOwogICAgZGVjaW1hbHMgPSBfZGVjaW1hbHM7CiAgfQoKICBtb2RpZmllciB2YWxpZEFkZHJlc3MoYWRkcmVzcyBfYWRkcmVzcykgewogICAgcmVxdWlyZShfYWRkcmVzcyAhPSAweDApOwogICAgXzsKICB9CgogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHZhbGlkQWRkcmVzcyhfdG8pIHJldHVybnMgKGJvb2wpIHsKICAgIHJlcXVpcmUoX3ZhbHVlIDw9IGJhbGFuY2VPZlttc2cuc2VuZGVyXSk7CiAgICBiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPSBiYWxhbmNlT2ZbbXNnLnNlbmRlcl0uc3ViKF92YWx1ZSk7CiAgICBiYWxhbmNlT2ZbX3RvXSA9IGJhbGFuY2VPZltfdG9dLmFkZChfdmFsdWUpOwogICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgCiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyB2YWxpZEFkZHJlc3MoX3RvKSByZXR1cm5zIChib29sKSB7CiAgICByZXF1aXJlKF92YWx1ZSA8PSBhbGxvd2FuY2VbX2Zyb21dW21zZy5zZW5kZXJdKTsKICAgIHJlcXVpcmUoX3ZhbHVlIDw9IGJhbGFuY2VPZltfZnJvbV0pOwogICAgYWxsb3dhbmNlW19mcm9tXVttc2cuc2VuZGVyXSA9IGFsbG93YW5jZVtfZnJvbV1bbXNnLnNlbmRlcl0uc3ViKF92YWx1ZSk7CiAgICBiYWxhbmNlT2ZbX2Zyb21dID0gYmFsYW5jZU9mW19mcm9tXS5zdWIoX3ZhbHVlKTsKICAgIGJhbGFuY2VPZltfdG9dID0gYmFsYW5jZU9mW190b10uYWRkKF92YWx1ZSk7CiAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwogICAgcmV0dXJuIHRydWU7CiAgfQoKICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgdmFsaWRBZGRyZXNzKF9zcGVuZGVyKSByZXR1cm5zIChib29sKSB7CiAgICByZXF1aXJlKF92YWx1ZSA9PSAwIHx8IGFsbG93YW5jZVttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPT0gMCk7CiAgICBhbGxvd2FuY2VbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9Cn0KCmNvbnRyYWN0IElTZXJlbml0eVRva2VuIHsKICBmdW5jdGlvbiBpbml0aWFsU3VwcGx5ICgpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYpIHsgaW5pdGlhbFN1cHBseTsgfQoKICBmdW5jdGlvbiB0b3RhbFNvbGRUb2tlbnMgKCkgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1NikgeyB0b3RhbFNvbGRUb2tlbnM7IH0KICBmdW5jdGlvbiB0b3RhbFByb2plY3RUb2tlbigpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYpIHsgdG90YWxQcm9qZWN0VG9rZW47IH0KCiAgZnVuY3Rpb24gZnVuZGluZ0VuYWJsZWQoKSBwdWJsaWMgdmlldyByZXR1cm5zIChib29sKSB7IGZ1bmRpbmdFbmFibGVkOyB9CiAgZnVuY3Rpb24gdHJhbnNmZXJzRW5hYmxlZCgpIHB1YmxpYyB2aWV3IHJldHVybnMgKGJvb2wpIHsgdHJhbnNmZXJzRW5hYmxlZDsgfQp9Cgpjb250cmFjdCBTZXJlbml0eVRva2VuIGlzIElTZXJlbml0eVRva2VuLCBFUkMyMFRva2VuLCBPd25lZCB7CiAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQyNTY7CiAKICBhZGRyZXNzIHB1YmxpYyBmdW5kaW5nV2FsbGV0OwogIGJvb2wgcHVibGljIGZ1bmRpbmdFbmFibGVkID0gdHJ1ZTsKICB1aW50MjU2IHB1YmxpYyBtYXhTYWxlVG9rZW4gPSA0MDAwMDAwMDAgZXRoZXI7CiAgdWludDI1NiBwdWJsaWMgaW5pdGlhbFN1cHBseSA9IDQwMDAwMDAwMCBldGhlcjsKICB1aW50MjU2IHB1YmxpYyB0b3RhbFNvbGRUb2tlbnMgPSAwOwogIHVpbnQyNTYgcHVibGljIHRvdGFsUHJvamVjdFRva2VuOwogIGJvb2wgcHVibGljIHRyYW5zZmVyc0VuYWJsZWQgPSBmYWxzZTsKCiAgbWFwcGluZyAoYWRkcmVzcyA9PiBib29sKSBpbnRlcm5hbCBmdW5kaW5nV2FsbGV0czsKCiAgZXZlbnQgRmluYWxpemUoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCB1aW50MjU2IF92YWx1ZSk7CiAgZXZlbnQgRGlzYWJsZVRyYW5zZmVycyhhZGRyZXNzIGluZGV4ZWQgX2Zyb20pOwoKICBmdW5jdGlvbiBTZXJlbml0eVRva2VuKCkgRVJDMjBUb2tlbigiU2VyZW5pdHkiLCAiU1JOVCIsIDE4KSBwdWJsaWMgewogICAgZnVuZGluZ1dhbGxldCA9IG1zZy5zZW5kZXI7IAoKICAgIGJhbGFuY2VPZltmdW5kaW5nV2FsbGV0XSA9IG1heFNhbGVUb2tlbjsKICAgIGJhbGFuY2VPZlsweDQ3YzhGMjhlNjA1NjM3NGFCQTNERjA4NTQzMDZjMjU1NkIxMDQ2MDFdID0gbWF4U2FsZVRva2VuOwogICAgYmFsYW5jZU9mWzB4Q0FEMEFmQjhFYzY1N0QwREI5NTE4QjkzMDg1NTUzNGY2NDMzMzYwZl0gPSBtYXhTYWxlVG9rZW47CiAgICBiYWxhbmNlT2ZbMHgwNDEzNzUzNDNjM0JkMUJiMjhiNDBiNUNlN2I0NjY1QTlhNmUyMUQwXSA9IG1heFNhbGVUb2tlbjsKCiAgICBmdW5kaW5nV2FsbGV0c1tmdW5kaW5nV2FsbGV0XSA9IHRydWU7CiAgICBmdW5kaW5nV2FsbGV0c1sweDQ3YzhGMjhlNjA1NjM3NGFCQTNERjA4NTQzMDZjMjU1NkIxMDQ2MDFdID0gdHJ1ZTsKICAgIGZ1bmRpbmdXYWxsZXRzWzB4Q0FEMEFmQjhFYzY1N0QwREI5NTE4QjkzMDg1NTUzNGY2NDMzMzYwZl0gPSB0cnVlOwogICAgZnVuZGluZ1dhbGxldHNbMHgwNDEzNzUzNDNjM0JkMUJiMjhiNDBiNUNlN2I0NjY1QTlhNmUyMUQwXSA9IHRydWU7CiAgfQoKICBtb2RpZmllciB2YWxpZEFkZHJlc3MoYWRkcmVzcyBfYWRkcmVzcykgewogICAgcmVxdWlyZShfYWRkcmVzcyAhPSAweDApOwogICAgXzsKICB9CgogIG1vZGlmaWVyIHRyYW5zZmVyc0FsbG93ZWQoYWRkcmVzcyBfYWRkcmVzcykgewogICAgaWYgKGZ1bmRpbmdFbmFibGVkKSB7CiAgICAgIHJlcXVpcmUoZnVuZGluZ1dhbGxldHNbX2FkZHJlc3NdKTsKICAgIH0KICAgIGVsc2UgewogICAgICByZXF1aXJlKHRyYW5zZmVyc0VuYWJsZWQpOwogICAgfQogICAgXzsKICB9CgogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHZhbGlkQWRkcmVzcyhfdG8pIHRyYW5zZmVyc0FsbG93ZWQobXNnLnNlbmRlcikgcmV0dXJucyAoYm9vbCkgewogICAgcmV0dXJuIHN1cGVyLnRyYW5zZmVyKF90bywgX3ZhbHVlKTsKICB9CgogIGZ1bmN0aW9uIGF1dG9UcmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyB2YWxpZEFkZHJlc3MoX3RvKSBvbmx5T3duZXIgcmV0dXJucyAoYm9vbCkgewogICAgcmV0dXJuIHN1cGVyLnRyYW5zZmVyKF90bywgX3ZhbHVlKTsKICB9CgogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyB2YWxpZEFkZHJlc3MoX3RvKSB0cmFuc2ZlcnNBbGxvd2VkKF9mcm9tKSByZXR1cm5zIChib29sKSB7CiAgICByZXR1cm4gc3VwZXIudHJhbnNmZXJGcm9tKF9mcm9tLCBfdG8sIF92YWx1ZSk7CiAgfQoKICBmdW5jdGlvbiBnZXRUb3RhbFNvbGRUb2tlbnMoKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IHJlc3VsdCA9IDA7CiAgICByZXN1bHQgPSByZXN1bHQuYWRkKG1heFNhbGVUb2tlbi5zdWIoYmFsYW5jZU9mW2Z1bmRpbmdXYWxsZXRdKSk7CiAgICByZXN1bHQgPSByZXN1bHQuYWRkKG1heFNhbGVUb2tlbi5zdWIoYmFsYW5jZU9mWzB4NDdjOEYyOGU2MDU2Mzc0YUJBM0RGMDg1NDMwNmMyNTU2QjEwNDYwMV0pKTsKICAgIHJlc3VsdCA9IHJlc3VsdC5hZGQobWF4U2FsZVRva2VuLnN1YihiYWxhbmNlT2ZbMHhDQUQwQWZCOEVjNjU3RDBEQjk1MThCOTMwODU1NTM0ZjY0MzMzNjBmXSkpOwogICAgcmVzdWx0ID0gcmVzdWx0LmFkZChtYXhTYWxlVG9rZW4uc3ViKGJhbGFuY2VPZlsweDA0MTM3NTM0M2MzQmQxQmIyOGI0MGI1Q2U3YjQ2NjVBOWE2ZTIxRDBdKSk7CiAgICByZXR1cm4gcmVzdWx0OwogIH0KCiAgZnVuY3Rpb24gZmluYWxpemUoKSBleHRlcm5hbCBvbmx5T3duZXIgewogICAgcmVxdWlyZShmdW5kaW5nRW5hYmxlZCk7CiAgICAKICAgIHRvdGFsU29sZFRva2VucyA9IGdldFRvdGFsU29sZFRva2VucygpOwoKICAgIHRvdGFsUHJvamVjdFRva2VuID0gdG90YWxTb2xkVG9rZW5zLm11bCgxNSkuZGl2KDEwMCk7CgogICAgLy8gWmVyb2luZyBhIGNvbGQgd2FsbGV0LgogICAgYmFsYW5jZU9mW2Z1bmRpbmdXYWxsZXRdID0gMDsKICAgIGJhbGFuY2VPZlsweENBRDBBZkI4RWM2NTdEMERCOTUxOEI5MzA4NTU1MzRmNjQzMzM2MGZdID0gMDsKICAgIGJhbGFuY2VPZlsweDA0MTM3NTM0M2MzQmQxQmIyOGI0MGI1Q2U3YjQ2NjVBOWE2ZTIxRDBdID0gMDsKCiAgICAvLyBTaGFyZWhvbGRlcnMvYm91bnRpZXMKICAgIGJhbGFuY2VPZlsweDQ3YzhGMjhlNjA1NjM3NGFCQTNERjA4NTQzMDZjMjU1NkIxMDQ2MDFdID0gdG90YWxQcm9qZWN0VG9rZW47CgogICAgLy8gRW5kIG9mIGNyb3dkZnVuZGluZy4KICAgIGZ1bmRpbmdFbmFibGVkID0gZmFsc2U7CiAgICB0cmFuc2ZlcnNFbmFibGVkID0gdHJ1ZTsKCiAgICAvLyBFbmQgb2YgY3Jvd2RmdW5kaW5nLgogICAgVHJhbnNmZXIodGhpcywgZnVuZGluZ1dhbGxldCwgMCk7CiAgICBGaW5hbGl6ZShtc2cuc2VuZGVyLCB0b3RhbFN1cHBseSk7CiAgfQoKICBmdW5jdGlvbiBkaXNhYmxlVHJhbnNmZXJzKCkgZXh0ZXJuYWwgb25seU93bmVyIHsKICAgIHJlcXVpcmUodHJhbnNmZXJzRW5hYmxlZCk7CgogICAgdHJhbnNmZXJzRW5hYmxlZCA9IGZhbHNlOwoKICAgIERpc2FibGVUcmFuc2ZlcnMobXNnLnNlbmRlcik7CiAgfQoKICBmdW5jdGlvbiBkaXNhYmxlRnVuZGluZ1dhbGxldHMoYWRkcmVzcyBfYWRkcmVzcykgZXh0ZXJuYWwgb25seU93bmVyIHsKICAgIHJlcXVpcmUoZnVuZGluZ0VuYWJsZWQpOwogICAgcmVxdWlyZShmdW5kaW5nV2FsbGV0ICE9IF9hZGRyZXNzKTsKICAgIHJlcXVpcmUoZnVuZGluZ1dhbGxldHNbX2FkZHJlc3NdKTsKCiAgICBmdW5kaW5nV2FsbGV0c1tfYWRkcmVzc10gPSBmYWxzZTsKICB9CgogIGZ1bmN0aW9uIGVuYWJsZUZ1bmRpbmdXYWxsZXRzKGFkZHJlc3MgX2FkZHJlc3MpIGV4dGVybmFsIG9ubHlPd25lciB7CiAgICByZXF1aXJlKGZ1bmRpbmdFbmFibGVkKTsKICAgIHJlcXVpcmUoZnVuZGluZ1dhbGxldCAhPSBfYWRkcmVzcyk7CgogICAgZnVuZGluZ1dhbGxldHNbX2FkZHJlc3NdID0gdHJ1ZTsKICB9Cn0KCgpjb250cmFjdCBDcm93ZHNhbGUgewogIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwoKICBTZXJlbml0eVRva2VuIHB1YmxpYyB0b2tlbjsKCiAgbWFwcGluZyh1aW50MjU2ID0+IHVpbnQ4KSBpbnRlcm5hbCBpY29XZWVrc0Rpc2NvdW50czsKCiAgYm9vbCBwdWJsaWMgaXNJQ09TdGFydGVkID0gZmFsc2U7IAogIHVpbnQyNTYgcHVibGljIGljb1N0YXJ0VGltZTsgCiAgdWludDI1NiBwdWJsaWMgaWNvRW5kVGltZTsgCgogIGFkZHJlc3MgcHVibGljIHdhbGxldCA9IDB4NDdjOEYyOGU2MDU2Mzc0YUJBM0RGMDg1NDMwNmMyNTU2QjEwNDYwMTsKCiAgZXZlbnQgVG9rZW5QdXJjaGFzZShhZGRyZXNzIGluZGV4ZWQgcHVyY2hhc2VyLCBhZGRyZXNzIGluZGV4ZWQgYmVuZWZpY2lhcnksIHVpbnQyNTYgdmFsdWUsIHVpbnQyNTYgYW1vdW50KTsKCiAgbW9kaWZpZXIgdmFsaWRBZGRyZXNzKGFkZHJlc3MgX2FkZHJlc3MpIHsKICAgIHJlcXVpcmUoX2FkZHJlc3MgIT0gMHgwKTsKICAgIF87CiAgfQoKICBmdW5jdGlvbiBDcm93ZHNhbGUoKSBwdWJsaWMgewogICAgdG9rZW4gPSBjcmVhdGVUb2tlbkNvbnRyYWN0KCk7CiAgICBpbml0RGlzY291bnRzKCk7CiAgfQoKICBmdW5jdGlvbiBpbml0RGlzY291bnRzKCkgaW50ZXJuYWwgewogICAgaWNvV2Vla3NEaXNjb3VudHNbMF0gPSA0MDsKICAgIGljb1dlZWtzRGlzY291bnRzWzFdID0gMzU7CiAgICBpY29XZWVrc0Rpc2NvdW50c1syXSA9IDMwOwogICAgaWNvV2Vla3NEaXNjb3VudHNbM10gPSAyNTsKICAgIGljb1dlZWtzRGlzY291bnRzWzRdID0gMjA7CiAgICBpY29XZWVrc0Rpc2NvdW50c1s1XSA9IDEwOwogIH0KCiAgZnVuY3Rpb24gY3JlYXRlVG9rZW5Db250cmFjdCgpIGludGVybmFsIHJldHVybnMgKFNlcmVuaXR5VG9rZW4pIHsKICAgIHJldHVybiBuZXcgU2VyZW5pdHlUb2tlbigpOwogIH0KCiAgZnVuY3Rpb24gKCkgcHVibGljIHBheWFibGUgewogICAgYnV5VG9rZW5zKG1zZy5zZW5kZXIpOwogIH0KCiAgZnVuY3Rpb24gZ2V0RGlzY291bnQoKSBpbnRlcm5hbCB2aWV3IHJldHVybnMgKHVpbnQ4KSB7CiAgICByZXF1aXJlKGlzSUNPU3RhcnRlZCA9PSB0cnVlKTsKICAgIHJlcXVpcmUoaWNvU3RhcnRUaW1lIDwgbm93KTsKICAgIHJlcXVpcmUoaWNvRW5kVGltZSA+IG5vdyk7CgogICAgdWludDI1NiB3ZWVrc1Bhc3NlZCA9IG5vdy5zdWIoaWNvU3RhcnRUaW1lKS5kaXYoNyBkYXlzKTsKICAgIHJldHVybiBpY29XZWVrc0Rpc2NvdW50c1t3ZWVrc1Bhc3NlZF07CiAgfSAKCiAgZnVuY3Rpb24gYnV5VG9rZW5zKGFkZHJlc3MgYmVuZWZpY2lhcnkpIHB1YmxpYyB2YWxpZEFkZHJlc3MoYmVuZWZpY2lhcnkpIHBheWFibGUgewogICAgcmVxdWlyZShpc0lDT1N0YXJ0ZWQpOwogICAgcmVxdWlyZSh2YWxpZFB1cmNoYXNlKCkpOwoKICAgIHVpbnQ4IGRpc2NvdW50UGVyY2VudHMgPSBnZXREaXNjb3VudCgpOwogICAgdWludDI1NiB0b2tlbnMgPSBtc2cudmFsdWUubXVsKDEwMCkuZGl2KDEwMCAtIGRpc2NvdW50UGVyY2VudHMpLm11bCgxMDAwMCk7CgogICAgcmVxdWlyZSh0b2tlbnMgPj0gMTAwIGV0aGVyKTsKCiAgICB0b2tlbi5hdXRvVHJhbnNmZXIoYmVuZWZpY2lhcnksIHRva2Vucyk7CiAgICBUb2tlblB1cmNoYXNlKG1zZy5zZW5kZXIsIGJlbmVmaWNpYXJ5LCBtc2cudmFsdWUsIHRva2Vucyk7CgogICAgZm9yd2FyZEZ1bmRzKCk7CiAgfQoKICBmdW5jdGlvbiBhY3RpdmF0ZUlDTyh1aW50MjU2IF9pY29FbmRUaW1lKSBwdWJsaWMgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IHdhbGxldCk7CiAgICByZXF1aXJlKF9pY29FbmRUaW1lID49IG5vdyk7CiAgICByZXF1aXJlKGlzSUNPU3RhcnRlZCA9PSBmYWxzZSk7CiAgICAgIAogICAgaXNJQ09TdGFydGVkID0gdHJ1ZTsKICAgIGljb0VuZFRpbWUgPSBfaWNvRW5kVGltZTsKICAgIGljb1N0YXJ0VGltZSA9IG5vdzsKICB9CgogIGZ1bmN0aW9uIGZvcndhcmRGdW5kcygpIGludGVybmFsIHsKICAgIHdhbGxldC50cmFuc2Zlcihtc2cudmFsdWUpOwogIH0KCiAgZnVuY3Rpb24gZmluYWxpemUoKSBwdWJsaWMgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IHdhbGxldCk7CiAgICB0b2tlbi5maW5hbGl6ZSgpOwogIH0KCiAgZnVuY3Rpb24gdmFsaWRQdXJjaGFzZSgpIGludGVybmFsIHZpZXcgcmV0dXJucyAoYm9vbCkgewogICAgYm9vbCB3aXRoaW5JQ09QZXJpb2QgPSBpc0lDT1N0YXJ0ZWQgJiYgbm93ID49IGljb1N0YXJ0VGltZSAmJiBub3cgPD0gaWNvRW5kVGltZTsKCiAgICBib29sIG5vblplcm9QdXJjaGFzZSA9IG1zZy52YWx1ZSAhPSAwOwogICAgCiAgICByZXR1cm4gd2l0aGluSUNPUGVyaW9kICYmIG5vblplcm9QdXJjaGFzZTsKICB9Cn0='.
	

]
