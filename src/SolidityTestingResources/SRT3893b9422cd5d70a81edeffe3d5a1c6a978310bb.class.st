Class {
	#name : #SRT3893b9422cd5d70a81edeffe3d5a1c6a978310bb,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT3893b9422cd5d70a81edeffe3d5a1c6a978310bb >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgovKioKICogQHRpdGxlIFNhZmVNYXRoCiAqIEBkZXYgTWF0aCBvcGVyYXRpb25zIHdpdGggc2FmZXR5IGNoZWNrcyB0aGF0IHRocm93IG9uIGVycm9yCiAqLwpsaWJyYXJ5IFNhZmVNYXRoIHsKCiAgICBmdW5jdGlvbiBzdWIodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgICAgIGFzc2VydChiIDw9IGEpOwogICAgICAgIHJldHVybiBhIC0gYjsKICAgIH0KCiAgICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgICAgIGFzc2VydChjID49IGEpOwogICAgICAgIHJldHVybiBjOwogICAgfQp9CgovKioKICogQHRpdGxlIE93bmVkCiAqIEBkZXYgT3duZXJzaGlwIG1vZGVsCiAqLwpjb250cmFjdCBPd25lZCB7CiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKCiAgICBldmVudCBPd25lcnNoaXBUcmFuc2ZlcmVkKGFkZHJlc3MgaW5kZXhlZCBvd25lcik7CgogICAgZnVuY3Rpb24gT3duZWQoKSBwdWJsaWMgewogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgIH0KCiAgICBtb2RpZmllciBvbmx5T3duZXIgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICAgICAgXzsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld093bmVyKSBvbmx5T3duZXIgcHVibGljIHsKICAgICAgICBvd25lciA9IG5ld093bmVyOwogICAgICAgIE93bmVyc2hpcFRyYW5zZmVyZWQob3duZXIpOwogICAgfQp9CgovKioKICogQHRpdGxlIEVSQzIwVG9rZW4KICogQGRldiBJbnRlcmZhY2UgZm9yIGVyYzIwIHN0YW5kYXJkCiAqLwpjb250cmFjdCBFUkMyMFRva2VuIHsKCiAgICB1c2luZyBTYWZlTWF0aCBmb3IgdWludDI1NjsKCiAgICBzdHJpbmcgcHVibGljIGNvbnN0YW50IG5hbWUgPSAiTWl0aHJpbCBUb2tlbiI7CiAgICBzdHJpbmcgcHVibGljIGNvbnN0YW50IHN5bWJvbCA9ICJNSVRIIjsKICAgIHVpbnQ4IHB1YmxpYyBjb25zdGFudCBkZWNpbWFscyA9IDE4OwogICAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7CgogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBwdWJsaWMgYmFsYW5jZU9mOwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBwdWJsaWMgYWxsb3dhbmNlOwoKICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBmcm9tLCBhZGRyZXNzIGluZGV4ZWQgdG8sIHVpbnQyNTYgdmFsdWUpOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIGZyb20sIHVpbnQyNTYgdmFsdWUsIGFkZHJlc3MgaW5kZXhlZCB0bywgYnl0ZXMgZXh0cmFEYXRhKTsKCiAgICBmdW5jdGlvbiBFUkMyMFRva2VuKCkgcHVibGljIHsKICAgIH0KCiAgICAvKioKICAgICAqIEludGVybmFsIHRyYW5zZmVyLCBvbmx5IGNhbiBiZSBjYWxsZWQgYnkgdGhpcyBjb250cmFjdAogICAgICovCiAgICBmdW5jdGlvbiBfdHJhbnNmZXIoYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvLCB1aW50MjU2IHZhbHVlKSBpbnRlcm5hbCB7CiAgICAgICAgLy8gQ2hlY2sgaWYgdGhlIHNlbmRlciBoYXMgZW5vdWdoIGJhbGFuY2UKICAgICAgICByZXF1aXJlKGJhbGFuY2VPZltmcm9tXSA+PSB2YWx1ZSk7CgogICAgICAgIC8vIENoZWNrIGZvciBvdmVyZmxvdwogICAgICAgIHJlcXVpcmUoYmFsYW5jZU9mW3RvXSArIHZhbHVlID4gYmFsYW5jZU9mW3RvXSk7CgogICAgICAgIC8vIFNhdmUgdGhpcyBmb3IgYW4gYW1vdW50IGRvdWJsZSBjaGVjayBhc3NlcnRpb24KICAgICAgICB1aW50MjU2IHByZXZpb3VzQmFsYW5jZXMgPSBiYWxhbmNlT2ZbZnJvbV0uYWRkKGJhbGFuY2VPZlt0b10pOwoKICAgICAgICBiYWxhbmNlT2ZbZnJvbV0gPSBiYWxhbmNlT2ZbZnJvbV0uc3ViKHZhbHVlKTsKICAgICAgICBiYWxhbmNlT2ZbdG9dID0gYmFsYW5jZU9mW3RvXS5hZGQodmFsdWUpOwoKICAgICAgICBUcmFuc2Zlcihmcm9tLCB0bywgdmFsdWUpOwoKICAgICAgICAvLyBBc3NlcnRzIGZvciBkdXBsaWNhdGUgY2hlY2suIFNob3VsZCBuZXZlciBmYWlsLgogICAgICAgIGFzc2VydChiYWxhbmNlT2ZbZnJvbV0uYWRkKGJhbGFuY2VPZlt0b10pID09IHByZXZpb3VzQmFsYW5jZXMpOwogICAgfQoKICAgIC8qKgogICAgICogVHJhbnNmZXIgdG9rZW5zCiAgICAgKgogICAgICogU2VuZCBgdmFsdWVgIHRva2VucyB0byBgdG9gIGZyb20geW91ciBhY2NvdW50CiAgICAgKgogICAgICogQHBhcmFtIHRvIFRoZSBhZGRyZXNzIG9mIHRoZSByZWNpcGllbnQKICAgICAqIEBwYXJhbSB2YWx1ZSB0aGUgYW1vdW50IHRvIHNlbmQKICAgICAqLwogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyB0bywgdWludDI1NiB2YWx1ZSkgcHVibGljIHsKICAgICAgICBfdHJhbnNmZXIobXNnLnNlbmRlciwgdG8sIHZhbHVlKTsKICAgIH0KCiAgICAvKioKICAgICAqIFRyYW5zZmVyIHRva2VucyBmcm9tIG90aGVyIGFkZHJlc3MKICAgICAqCiAgICAgKiBTZW5kIGB2YWx1ZWAgdG9rZW5zIHRvIGB0b2AgaW4gYmVoYWxmIG9mIGBmcm9tYAogICAgICoKICAgICAqIEBwYXJhbSBmcm9tIFRoZSBhZGRyZXNzIG9mIHRoZSBzZW5kZXIKICAgICAqIEBwYXJhbSB0byBUaGUgYWRkcmVzcyBvZiB0aGUgcmVjaXBpZW50CiAgICAgKiBAcGFyYW0gdmFsdWUgdGhlIGFtb3VudCB0byBzZW5kCiAgICAgKi8KICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIGZyb20sIGFkZHJlc3MgdG8sIHVpbnQyNTYgdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICByZXF1aXJlKHZhbHVlIDw9IGFsbG93YW5jZVtmcm9tXVttc2cuc2VuZGVyXSk7CiAgICAgICAgYWxsb3dhbmNlW2Zyb21dW21zZy5zZW5kZXJdID0gYWxsb3dhbmNlW2Zyb21dW21zZy5zZW5kZXJdLnN1Yih2YWx1ZSk7CiAgICAgICAgX3RyYW5zZmVyKGZyb20sIHRvLCB2YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgLyoqCiAgICAgKiBTZXQgYWxsb3dhbmNlIGZvciBvdGhlciBhZGRyZXNzCiAgICAgKgogICAgICogQWxsb3dzIGBzcGVuZGVyYCB0byBzcGVuZCBubyBtb3JlIHRoYW4gYHZhbHVlYCB0b2tlbnMgaW4geW91ciBiZWhhbGYKICAgICAqCiAgICAgKiBAcGFyYW0gc3BlbmRlciBUaGUgYWRkcmVzcyBhdXRob3JpemVkIHRvIHNwZW5kCiAgICAgKiBAcGFyYW0gdmFsdWUgdGhlIG1heCBhbW91bnQgdGhleSBjYW4gc3BlbmQKICAgICAqIEBwYXJhbSBleHRyYURhdGEgc29tZSBleHRyYSBpbmZvcm1hdGlvbiB0byBzZW5kIHRvIHRoZSBhcHByb3ZlZCBjb250cmFjdAogICAgICovCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3Mgc3BlbmRlciwgdWludDI1NiB2YWx1ZSwgYnl0ZXMgZXh0cmFEYXRhKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgYWxsb3dhbmNlW21zZy5zZW5kZXJdW3NwZW5kZXJdID0gdmFsdWU7CiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgdmFsdWUsIHNwZW5kZXIsIGV4dHJhRGF0YSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9Cn0KCi8qKgogKiBAdGl0bGUgTWl0aHJpbFRva2VuCiAqIEBkZXYgTWl0aHJpbFRva2VuCiAqLwpjb250cmFjdCBNaXRocmlsVG9rZW4gaXMgT3duZWQsIEVSQzIwVG9rZW4gewoKICAgIC8vIEFkZHJlc3Mgd2hlcmUgZnVuZHMgYXJlIGNvbGxlY3RlZC4KICAgIGFkZHJlc3MgcHVibGljIHZhdWx0OwogICAgYWRkcmVzcyBwdWJsaWMgd2FsbGV0OwoKICAgIGZ1bmN0aW9uIE1pdGhyaWxUb2tlbigpIHB1YmxpYyB7CiAgICB9CgogICAgZnVuY3Rpb24gaW5pdCh1aW50MjU2IF9zdXBwbHksIGFkZHJlc3MgX3ZhdWx0LCBhZGRyZXNzIF93YWxsZXQpIHB1YmxpYyBvbmx5T3duZXIgewogICAgICAgIHJlcXVpcmUodmF1bHQgPT0gMHgwKTsKICAgICAgICByZXF1aXJlKF92YXVsdCAhPSAweDApOwoKICAgICAgICB0b3RhbFN1cHBseSA9IF9zdXBwbHk7CiAgICAgICAgdmF1bHQgPSBfdmF1bHQ7CiAgICAgICAgd2FsbGV0ID0gX3dhbGxldDsKICAgICAgICBiYWxhbmNlT2ZbdmF1bHRdID0gdG90YWxTdXBwbHk7CiAgICB9CgogICAgZnVuY3Rpb24gKCkgcGF5YWJsZSBwdWJsaWMgewogICAgICAgIHdhbGxldC50cmFuc2Zlcihtc2cudmFsdWUpOwogICAgfQp9'.
	

]
