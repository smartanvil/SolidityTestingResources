Class {
	#name : #SRT5a374dbb59be837227d11e97625f1d3346775cac,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT5a374dbb59be837227d11e97625f1d3346775cac >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTY7CgppbnRlcmZhY2UgdG9rZW5SZWNpcGllbnQgeyBmdW5jdGlvbiByZWNlaXZlQXBwcm92YWwoYWRkcmVzcyBfZnJvbSwgdWludDI1NiBfdmFsdWUsIGFkZHJlc3MgX3Rva2VuLCBieXRlcyBfZXh0cmFEYXRhKQpwdWJsaWM7IH0KCmNvbnRyYWN0IG1vbGVjdWxhcnRlY2hub2xvZ3kgewogICAgLy8gUHVibGljIHZhcmlhYmxlcyBvZiB0aGUgdG9rZW4KICAgIHN0cmluZyBwdWJsaWMgbmFtZSA9ICJtb2xlY3VsYXIgdGVjaG5vbG9neSI7CiAgICBzdHJpbmcgcHVibGljIHN5bWJvbCA9ICJNQ1JUIjsKICAgIHVpbnQ4IHB1YmxpYyBkZWNpbWFscyA9IDE4OwogICAgLy8gMTggZGVjaW1hbHMgaXMgdGhlIHN0cm9uZ2x5IHN1Z2dlc3RlZCBkZWZhdWx0CiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsKICAgIHVpbnQyNTYgcHVibGljIG1vbGVjdWxhcnRlY2hub2xvZ3lTdXBwbHkgPSA3NDAwMDAwMDsKICAgIHVpbnQyNTYgcHVibGljIGJ1eVByaWNlID0gMTMwMDAwMDsKICAgIGFkZHJlc3MgcHVibGljIGNyZWF0b3I7CiAgICAvLyBUaGlzIGNyZWF0ZXMgYW4gYXJyYXkgd2l0aCBhbGwgYmFsYW5jZXMKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIGJhbGFuY2VPZjsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgcHVibGljIGFsbG93YW5jZTsKCiAgICAvLyBUaGlzIGdlbmVyYXRlcyBhIHB1YmxpYyBldmVudCBvbiB0aGUgYmxvY2tjaGFpbiB0aGF0IHdpbGwgbm90aWZ5IGNsaWVudHMKICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBmcm9tLCBhZGRyZXNzIGluZGV4ZWQgdG8sIHVpbnQyNTYgdmFsdWUpOwogICAgZXZlbnQgRnVuZFRyYW5zZmVyKGFkZHJlc3MgYmFja2VyLCB1aW50IGFtb3VudCwgYm9vbCBpc0NvbnRyaWJ1dGlvbik7CgoKICAgIC8qKgogICAgICogQ29uc3RyY3RvciBmdW5jdGlvbgogICAgICoKICAgICAqIEluaXRpYWxpemVzIGNvbnRyYWN0IHdpdGggaW5pdGlhbCBzdXBwbHkgdG9rZW5zIHRvIHRoZSBjcmVhdG9yIG9mIHRoZSBjb250cmFjdAogICAgICovCiAgICBmdW5jdGlvbiBtb2xlY3VsYXJ0ZWNobm9sb2d5KCkgcHVibGljIHsKICAgICAgICB0b3RhbFN1cHBseSA9IG1vbGVjdWxhcnRlY2hub2xvZ3lTdXBwbHkgKiAxMCAqKiB1aW50MjU2KGRlY2ltYWxzKTsgIC8vIFVwZGF0ZSB0b3RhbCBzdXBwbHkgd2l0aCB0aGUgZGVjaW1hbCBhbW91bnQKICAgICAgICBiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPSB0b3RhbFN1cHBseTsgICAgLy8gR2l2ZSBtb2xlY3VsYXIgdGVjaG5vbG9neSB0aGUgdG90YWwgY3JlYXRlZCB0b2tlbnMKICAgICAgICBjcmVhdG9yID0gbXNnLnNlbmRlcjsKICAgIH0KICAgIC8qKgogICAgICogSW50ZXJuYWwgdHJhbnNmZXIsIG9ubHkgY2FuIGJlIGNhbGxlZCBieSB0aGlzIGNvbnRyYWN0CiAgICAgKi8KICAgIGZ1bmN0aW9uIF90cmFuc2ZlcihhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludCBfdmFsdWUpIGludGVybmFsIHsKICAgICAgICAvLyBQcmV2ZW50IHRyYW5zZmVyIHRvIDB4MCBhZGRyZXNzLiBVc2UgYnVybigpIGluc3RlYWQKICAgICAgICByZXF1aXJlKF90byAhPSAweDApOwogICAgICAgIC8vIENoZWNrIGlmIHRoZSBzZW5kZXIgaGFzIGVub3VnaAogICAgICAgIHJlcXVpcmUoYmFsYW5jZU9mW19mcm9tXSA+PSBfdmFsdWUpOwogICAgICAgIC8vIENoZWNrIGZvciBvdmVyZmxvd3MKICAgICAgICByZXF1aXJlKGJhbGFuY2VPZltfdG9dICsgX3ZhbHVlID49IGJhbGFuY2VPZltfdG9dKTsKICAgICAgICAvLyBTdWJ0cmFjdCBmcm9tIHRoZSBzZW5kZXIKICAgICAgICBiYWxhbmNlT2ZbX2Zyb21dIC09IF92YWx1ZTsKICAgICAgICAvLyBBZGQgdGhlIHNhbWUgdG8gdGhlIHJlY2lwaWVudAogICAgICAgIGJhbGFuY2VPZltfdG9dICs9IF92YWx1ZTsKICAgICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwoKICAgIH0KCiAgICAvKioKICAgICAqIFRyYW5zZmVyIHRva2VucwogICAgICoKICAgICAqIFNlbmQgYF92YWx1ZWAgdG9rZW5zIHRvIGBfdG9gIGZyb20geW91ciBhY2NvdW50CiAgICAgKgogICAgICogQHBhcmFtIF90byBUaGUgYWRkcmVzcyBvZiB0aGUgcmVjaXBpZW50CiAgICAgKiBAcGFyYW0gX3ZhbHVlIHRoZSBhbW91bnQgdG8gc2VuZAogICAgICovCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyB7CiAgICAgICBfdHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgfQoKCiAgICAvLy8gQG5vdGljZSBCdXkgdG9rZW5zIGZyb20gY29udHJhY3QgYnkgc2VuZGluZyBldGhlcgogICAgZnVuY3Rpb24gKCkgcGF5YWJsZSBpbnRlcm5hbCB7CiAgICAgICAgdWludCBhbW91bnQgPSBtc2cudmFsdWUgKiBidXlQcmljZTsgICAgICAgICAgICAgICAgICAgIC8vIGNhbGN1bGF0ZXMgdGhlIGFtb3VudCwgbWFkZSBpdCBzbyB5b3UgY2FuIGdldCBtYW55IG1vbGVjdWxhciB0ZWNobm9sb2d5IGJ1dCB0byBnZXQgTUFOWSBtb2xlY3VsYXIgdGVjaG5vbG9neSB5b3UgaGF2ZSB0byBzcGVuZCBFVEggYW5kIG5vdCBXRUkKICAgICAgICB1aW50IGFtb3VudFJhaXNlZDsKICAgICAgICBhbW91bnRSYWlzZWQgKz0gbXNnLnZhbHVlOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL21hbnkgdGhhbmtzIG1vbGVjdWxhciB0ZWNobm9sb2d5LCBjb3VsZG50IGRvIGl0IHdpdGhvdXQgci9tZV9pcmwKICAgICAgICByZXF1aXJlKGJhbGFuY2VPZltjcmVhdG9yXSA+PSBhbW91bnQpOyAgICAgICAgICAgICAgIC8vIGNoZWNrcyBpZiBpdCBoYXMgZW5vdWdoIHRvIHNlbGwKICAgICAgICByZXF1aXJlKG1zZy52YWx1ZSA8IDEwKioxNyk7ICAgICAgICAgICAgICAgICAgICAgICAgLy8gc28gYW55IHBlcnNvbiB3aG8gd2FudHMgdG8gcHV0IG1vcmUgdGhlbiAwLjEgRVRIIGhhcyB0aW1lIHRvIHRoaW5rIGFib3V0IHdoYXQgdGhleSBhcmUgZG9pbmcKICAgICAgICBiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gKz0gYW1vdW50OyAgICAgICAgICAgICAgICAgIC8vIGFkZHMgdGhlIGFtb3VudCB0byBidXllcidzIGJhbGFuY2UKICAgICAgICBiYWxhbmNlT2ZbY3JlYXRvcl0gLT0gYW1vdW50OyAgICAgICAgICAgICAgICAgICAgICAgIC8vIHNlbmRzIEVUSCB0byBtb2xlY3VsYXIgdGVjaG5vbG9neWlNaW50CiAgICAgICAgVHJhbnNmZXIoY3JlYXRvciwgbXNnLnNlbmRlciwgYW1vdW50KTsgICAgICAgICAgICAgICAvLyBleGVjdXRlIGFuIGV2ZW50IHJlZmxlY3RpbmcgdGhlIGNoYW5nZQogICAgICAgIGNyZWF0b3IudHJhbnNmZXIoYW1vdW50UmFpc2VkKTsKICAgIH0KCiB9'.
	

]
