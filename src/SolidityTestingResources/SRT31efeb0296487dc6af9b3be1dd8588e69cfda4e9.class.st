Class {
	#name : #SRT31efeb0296487dc6af9b3be1dd8588e69cfda4e9,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT31efeb0296487dc6af9b3be1dd8588e69cfda4e9 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgoKLyogCiAgICBBdXRob3I6IFBhdHJpY2sgR3VheSBAIFZhbmJleCBhbmQgRXRoZXJwYXJ0eQogICAgPHNwYW4gY2xhc3M9Il9fY2ZfZW1haWxfXyIgZGF0YS1jZmVtYWlsPSIyMjUyNDM1NjUwNGI0MTQ5NjI1NDQzNGM0MDQ3NWEwYzQxNGQ0ZiI+W2VtYWlsJiMxNjA7cHJvdGVjdGVkXTwvc3Bhbj4KKi8KCi8qKgogKiBAdGl0bGUgT3duYWJsZQogKiBAZGV2IFRoZSBPd25hYmxlIGNvbnRyYWN0IGhhcyBhbiBvd25lciBhZGRyZXNzLCBhbmQgcHJvdmlkZXMgYmFzaWMgYXV0aG9yaXphdGlvbiBjb250cm9sCiAqIGZ1bmN0aW9ucywgdGhpcyBzaW1wbGlmaWVzIHRoZSBpbXBsZW1lbnRhdGlvbiBvZiAidXNlciBwZXJtaXNzaW9ucyIuCiAqLwpjb250cmFjdCBPd25hYmxlIHsKICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKCgogIGV2ZW50IE93bmVyc2hpcFRyYW5zZmVycmVkKGFkZHJlc3MgaW5kZXhlZCBwcmV2aW91c093bmVyLCBhZGRyZXNzIGluZGV4ZWQgbmV3T3duZXIpOwoKCiAgLyoqCiAgICogQGRldiBUaGUgT3duYWJsZSBjb25zdHJ1Y3RvciBzZXRzIHRoZSBvcmlnaW5hbCBgb3duZXJgIG9mIHRoZSBjb250cmFjdCB0byB0aGUgc2VuZGVyCiAgICogYWNjb3VudC4KICAgKi8KICBmdW5jdGlvbiBPd25hYmxlKCkgcHVibGljIHsKICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICB9CgoKICAvKioKICAgKiBAZGV2IFRocm93cyBpZiBjYWxsZWQgYnkgYW55IGFjY291bnQgb3RoZXIgdGhhbiB0aGUgb3duZXIuCiAgICovCiAgbW9kaWZpZXIgb25seU93bmVyKCkgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyKTsKICAgIF87CiAgfQoKCiAgLyoqCiAgICogQGRldiBBbGxvd3MgdGhlIGN1cnJlbnQgb3duZXIgdG8gdHJhbnNmZXIgY29udHJvbCBvZiB0aGUgY29udHJhY3QgdG8gYSBuZXdPd25lci4KICAgKiBAcGFyYW0gbmV3T3duZXIgVGhlIGFkZHJlc3MgdG8gdHJhbnNmZXIgb3duZXJzaGlwIHRvLgogICAqLwogIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpIHB1YmxpYyBvbmx5T3duZXIgewogICAgcmVxdWlyZShuZXdPd25lciAhPSBhZGRyZXNzKDApKTsKICAgIE93bmVyc2hpcFRyYW5zZmVycmVkKG93bmVyLCBuZXdPd25lcik7CiAgICBvd25lciA9IG5ld093bmVyOwogIH0KCn0KCmNvbnRyYWN0IFZhbmNvdXZlckNoYXJpdHlEcml2ZSBpcyBPd25hYmxlIHsKCgogICAgbWFwcGluZyhhZGRyZXNzID0+IFBsZWRnZVtdKSBwdWJsaWMgcGxlZGdlczsgLy8ga2VlcHMgYWxsIHRoZSBwbGVkZ2VzIHBlciBhZGRyZXNzCiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gQ29tcGFueUluZm8pIHB1YmxpYyBjb21wYW5pZXM7IC8vIGtlZXBzIGFsbCB0aGUgbmFtZXMgb2YgY29tcGFuaWVzIHBlciBhZGRyZXNzCiAgICBhZGRyZXNzW10gcHVibGljIHBhcnRpY2lwYXRpbmdDb21wYW5pZXM7CgogICAgZXZlbnQgUGxlZGdlQ3JlYXRlZChhZGRyZXNzIGluZGV4ZWQgcGxlZGdlciwgdWludDI1NiBhbW91bnQsIHN0cmluZyBjb21wYW55TmFtZSk7CiAgICBldmVudCBQbGVkZ2VVcGRhdGVkKGFkZHJlc3MgaW5kZXhlZCBwbGVkZ2VyLCB1aW50MjU2IGFtb3VudCwgc3RyaW5nIGNvbXBhbnlOYW1lKTsKICAgIGV2ZW50IFBsZWRnZUNvbmZpcm1lZChhZGRyZXNzIGluZGV4ZWQgcGxlZGdlciwgdWludDI1NiBhbW91bnQsIHN0cmluZyBjb21wYW55TmFtZSwgc3RyaW5nIHR4SGFzaCk7CgogICAgc3RydWN0IENvbXBhbnlJbmZvIHsKICAgICAgICBib29sIGluaXRpYWxpemVkOwogICAgICAgIHN0cmluZyBuYW1lOwogICAgICAgIHN0cmluZyBlbWFpbDsKICAgICAgICBzdHJpbmcgZGVzY3JpcHRpb247CiAgICB9CgogICAgc3RydWN0IFBsZWRnZSB7CiAgICAgICAgYm9vbCBpbml0aWFsaXplZDsKICAgICAgICB1aW50IGFtb3VudDsgLy8gQW1vdW50IG9mIHRoZSBjdXJyZW5jeSB1c2VkIGZvciB0aGUgcGxlZGdlCiAgICAgICAgc3RyaW5nIGNoYXJpdHlOYW1lOyAvLyBOYW1lIG9mIHRoZSBjaGFyaXR5CiAgICAgICAgc3RyaW5nIGN1cnJlbmN5OyAvLyBDdXJyZW5jeSB1c2VkIGZvciB0aGUgcGxlZGdlCiAgICAgICAgc3RyaW5nIHR4SGFzaDsgLy8gIFR4SGFzaCBvZiB0aGUgcGxlZGdlCiAgICAgICAgYm9vbCBjb25maXJtZWQ7CiAgICB9CgogICAgbW9kaWZpZXIgaXNXaGl0ZUxpc3RlZCgpIHsKICAgICAgICByZXF1aXJlKGNvbXBhbmllc1ttc2cuc2VuZGVyXS5pbml0aWFsaXplZCA9PSB0cnVlKTsKICAgICAgICBfOwogICAgfQoKICAgIGZ1bmN0aW9uIHdoaXRlbGlzdENvbXBhbnkoYWRkcmVzcyBfY29tcGFueUFkZHJlc3MsIHN0cmluZyBfY29tcGFueU5hbWUsIHN0cmluZyBfY29tcGFueUVtYWlsLCBzdHJpbmcgX2Rlc2NyaXB0aW9uKSBwdWJsaWMgb25seU93bmVyIHJldHVybnMoYm9vbCkgewogICAgICAgIGNvbXBhbmllc1tfY29tcGFueUFkZHJlc3NdID0gQ29tcGFueUluZm8odHJ1ZSwgX2NvbXBhbnlOYW1lLCBfY29tcGFueUVtYWlsLCBfZGVzY3JpcHRpb24pOwogICAgICAgIHBhcnRpY2lwYXRpbmdDb21wYW5pZXMucHVzaChfY29tcGFueUFkZHJlc3MpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGNyZWF0ZVBsZWRnZSh1aW50IF9hbW91bnQsIHN0cmluZyBfY2hhcml0eU5hbWUsIHN0cmluZyBfY3VycmVuY3kpIHB1YmxpYyBpc1doaXRlTGlzdGVkIHJldHVybnMoYm9vbCkgewogICAgICAgIHBsZWRnZXNbbXNnLnNlbmRlcl0ucHVzaChQbGVkZ2UodHJ1ZSwgX2Ftb3VudCwgX2NoYXJpdHlOYW1lLCBfY3VycmVuY3ksICIiLCBmYWxzZSkpOwogICAgICAgIFBsZWRnZUNyZWF0ZWQobXNnLnNlbmRlciwgX2Ftb3VudCwgY29tcGFuaWVzW21zZy5zZW5kZXJdLm5hbWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIHVwZGF0ZVBsZWRnZSh1aW50IF9hbW91bnQsIHN0cmluZyBfY2hhcml0eU5hbWUsIHN0cmluZyBfY3VycmVuY3ksIHVpbnQgX3BsZWRnZUluZGV4KSBwdWJsaWMgaXNXaGl0ZUxpc3RlZCByZXR1cm5zKGJvb2wpIHsKICAgICAgICBQbGVkZ2Ugc3RvcmFnZSBwbGVkZ2UgPSBwbGVkZ2VzW21zZy5zZW5kZXJdW19wbGVkZ2VJbmRleF07CiAgICAgICAgcmVxdWlyZShwbGVkZ2UuaW5pdGlhbGl6ZWQgPT0gdHJ1ZSAmJiBwbGVkZ2UuY29uZmlybWVkID09IGZhbHNlKTsKICAgICAgICBwbGVkZ2UuY3VycmVuY3kgPSBfY3VycmVuY3k7CiAgICAgICAgcGxlZGdlLmFtb3VudCA9IF9hbW91bnQ7CiAgICAgICAgcGxlZGdlLmNoYXJpdHlOYW1lID0gX2NoYXJpdHlOYW1lOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGNvbmZpcm1QbGVkZ2UodWludCBfcGxlZGdlSW5kZXgsIHN0cmluZyBfdHhIYXNoKSBwdWJsaWMgaXNXaGl0ZUxpc3RlZCByZXR1cm5zKGJvb2wpIHsKICAgICAgICBQbGVkZ2Ugc3RvcmFnZSBwbGVkZ2UgPSBwbGVkZ2VzW21zZy5zZW5kZXJdW19wbGVkZ2VJbmRleF07CiAgICAgICAgcmVxdWlyZShwbGVkZ2UuaW5pdGlhbGl6ZWQgPT0gdHJ1ZSAmJiBwbGVkZ2UuY29uZmlybWVkID09IGZhbHNlKTsKICAgICAgICBwbGVkZ2UudHhIYXNoID0gX3R4SGFzaDsKICAgICAgICBwbGVkZ2UuY29uZmlybWVkID0gdHJ1ZTsKICAgICAgICBQbGVkZ2VDb25maXJtZWQobXNnLnNlbmRlciwgcGxlZGdlLmFtb3VudCwgY29tcGFuaWVzW21zZy5zZW5kZXJdLm5hbWUsIF90eEhhc2gpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGdldFBsZWRnZShhZGRyZXNzIF9jb21wYW55QWRkcmVzcywgdWludCBfaW5kZXgpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQgYW1vdW50LCBzdHJpbmcgY2hhcml0eU5hbWUsIHN0cmluZyBjdXJyZW5jeSwgc3RyaW5nIHR4SGFzaCwgYm9vbCBjb25maXJtZWQpIHsKICAgICAgICBhbW91bnQgPSBwbGVkZ2VzW19jb21wYW55QWRkcmVzc11bX2luZGV4XS5hbW91bnQ7CiAgICAgICAgY2hhcml0eU5hbWUgPSBwbGVkZ2VzW19jb21wYW55QWRkcmVzc11bX2luZGV4XS5jaGFyaXR5TmFtZTsKICAgICAgICBjdXJyZW5jeSA9IHBsZWRnZXNbX2NvbXBhbnlBZGRyZXNzXVtfaW5kZXhdLmN1cnJlbmN5OwogICAgICAgIHR4SGFzaCA9IHBsZWRnZXNbX2NvbXBhbnlBZGRyZXNzXVtfaW5kZXhdLnR4SGFzaDsKICAgICAgICBjb25maXJtZWQgPSBwbGVkZ2VzW19jb21wYW55QWRkcmVzc11bX2luZGV4XS5jb25maXJtZWQ7CiAgICB9CgogICAgZnVuY3Rpb24gZ2V0QWxsQ29tcGFuaWVzKCkgcHVibGljIHZpZXcgcmV0dXJucyAoYWRkcmVzc1tdKSB7CiAgICAgICAgcmV0dXJuIHBhcnRpY2lwYXRpbmdDb21wYW5pZXM7CiAgICB9Cn0='.
	

]
