Class {
	#name : #SRT82b279b585c7bb848c36f23919d68b4d0262c184,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT82b279b585c7bb848c36f23919d68b4d0262c184 >> base64 [
	^ ''.
	

]
