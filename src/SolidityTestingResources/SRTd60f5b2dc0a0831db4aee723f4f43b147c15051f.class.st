Class {
	#name : #SRTd60f5b2dc0a0831db4aee723f4f43b147c15051f,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTd60f5b2dc0a0831db4aee723f4f43b147c15051f >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7CiAKbGlicmFyeSBTYWZlTWF0aCB7CiAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiBmdW5jdGlvbiBkaXYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPiAwKTsgLy8gU29saWRpdHkgYXV0b21hdGljYWxseSB0aHJvd3Mgd2hlbiBkaXZpZGluZyBieSAwCiAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOyAvLyBUaGVyZSBpcyBubyBjYXNlIGluIHdoaWNoIHRoaXMgZG9lc24ndCBob2xkCiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhICsgYjsKICAgIGFzc2VydChjID49IGEpOwogICAgcmV0dXJuIGM7CiAgfQp9Cgpjb250cmFjdCBPd25hYmxlIHsKICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKCgogIGV2ZW50IE93bmVyc2hpcFRyYW5zZmVycmVkKGFkZHJlc3MgaW5kZXhlZCBwcmV2aW91c093bmVyLCBhZGRyZXNzIGluZGV4ZWQgbmV3T3duZXIpOwoKCiAgLyoqCiAgICogQGRldiBUaGUgT3duYWJsZSBjb25zdHJ1Y3RvciBzZXRzIHRoZSBvcmlnaW5hbCBgb3duZXJgIG9mIHRoZSBjb250cmFjdCB0byB0aGUgc2VuZGVyCiAgICogYWNjb3VudC4KICAgKi8KICBmdW5jdGlvbiBPd25hYmxlKCkgcHVibGljIHsKICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICB9CgoKICAvKioKICAgKiBAZGV2IFRocm93cyBpZiBjYWxsZWQgYnkgYW55IGFjY291bnQgb3RoZXIgdGhhbiB0aGUgb3duZXIuCiAgICovCiAgbW9kaWZpZXIgb25seU93bmVyKCkgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyKTsKICAgIF87CiAgfQoKCiAgLyoqCiAgICogQGRldiBBbGxvd3MgdGhlIGN1cnJlbnQgb3duZXIgdG8gdHJhbnNmZXIgY29udHJvbCBvZiB0aGUgY29udHJhY3QgdG8gYSBuZXdPd25lci4KICAgKiBAcGFyYW0gbmV3T3duZXIgVGhlIGFkZHJlc3MgdG8gdHJhbnNmZXIgb3duZXJzaGlwIHRvLgogICAqLwogIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpIG9ubHlPd25lciBwdWJsaWMgewogICAgcmVxdWlyZShuZXdPd25lciAhPSBhZGRyZXNzKDApKTsKICAgIE93bmVyc2hpcFRyYW5zZmVycmVkKG93bmVyLCBuZXdPd25lcik7CiAgICBvd25lciA9IG5ld093bmVyOwogIH0KCn0KCi8qKgogKiBAdGl0bGUgRVJDMjBCYXNpYwogKiBAZGV2IFNpbXBsZXIgdmVyc2lvbiBvZiBFUkMyMCBpbnRlcmZhY2UKICogQGRldiBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL0VJUHMvaXNzdWVzLzE3OQogKi8KY29udHJhY3QgRVJDMjBCYXNpYyB7CiAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7CiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3Mgd2hvKSBjb25zdGFudCBwdWJsaWMgcmV0dXJucyAodWludDI1Nik7CiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyB0bywgdWludDI1NiB2YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpOwogIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBmcm9tLCBhZGRyZXNzIGluZGV4ZWQgdG8sIHVpbnQyNTYgdmFsdWUpOwp9CgovKioKICogQHRpdGxlIEJhc2ljIHRva2VuCiAqIEBkZXYgQmFzaWMgdmVyc2lvbiBvZiBTdGFuZGFyZFRva2VuLCB3aXRoIG5vIGFsbG93YW5jZXMuCiAqLwpjb250cmFjdCBCYXNpY1Rva2VuIGlzIEVSQzIwQmFzaWMgewogIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwoKICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikgdG9rZW5CYWxhbmNlczsKCiAgLyoqCiAgKiBAZGV2IHRyYW5zZmVyIHRva2VuIGZvciBhIHNwZWNpZmllZCBhZGRyZXNzCiAgKiBAcGFyYW0gX3RvIFRoZSBhZGRyZXNzIHRvIHRyYW5zZmVyIHRvLgogICogQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IHRvIGJlIHRyYW5zZmVycmVkLgogICovCiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgcmVxdWlyZSh0b2tlbkJhbGFuY2VzW21zZy5zZW5kZXJdPj1fdmFsdWUpOwogICAgdG9rZW5CYWxhbmNlc1ttc2cuc2VuZGVyXSA9IHRva2VuQmFsYW5jZXNbbXNnLnNlbmRlcl0uc3ViKF92YWx1ZSk7CiAgICB0b2tlbkJhbGFuY2VzW190b10gPSB0b2tlbkJhbGFuY2VzW190b10uYWRkKF92YWx1ZSk7CiAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIC8qKgogICogQGRldiBHZXRzIHRoZSBiYWxhbmNlIG9mIHRoZSBzcGVjaWZpZWQgYWRkcmVzcy4KICAqIEBwYXJhbSBfb3duZXIgVGhlIGFkZHJlc3MgdG8gcXVlcnkgdGhlIHRoZSBiYWxhbmNlIG9mLgogICogQHJldHVybiBBbiB1aW50MjU2IHJlcHJlc2VudGluZyB0aGUgYW1vdW50IG93bmVkIGJ5IHRoZSBwYXNzZWQgYWRkcmVzcy4KICAqLwogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcHVibGljIHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgewogICAgcmV0dXJuIHRva2VuQmFsYW5jZXNbX293bmVyXTsKICB9Cn0KLy9UT0RPOiBDaGFuZ2UgdGhlIG5hbWUgb2YgdGhlIHRva2VuCmNvbnRyYWN0IFJldm9sdXRpb25Db2luIGlzIEJhc2ljVG9rZW4sT3duYWJsZSB7CgogICB1c2luZyBTYWZlTWF0aCBmb3IgdWludDI1NjsKICAgCiAgIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgbmFtZSA9ICJSLWV2b2x1dGlvbmNvaW4iOwogICBzdHJpbmcgcHVibGljIGNvbnN0YW50IHN5bWJvbCA9ICJSVkwiOwogICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCBkZWNpbWFscyA9IDE4OwogICB1aW50MjU2IHB1YmxpYyBidXlQcmljZSA9IDIyMjIyMjIyMjIyMjIyMjsgICAvLyBwZXIgdG9rZW4gdGhlIHByaWNlIGlzIDIuMjIyMioxMF4tNCBldGgsIHRoaXMgcHJpY2UgaXMgZXF1aXZhbGVudCBpbiB3ZWkKICAgYWRkcmVzcyBwdWJsaWMgZXRoU3RvcmUgPSAweERkNjRFRjBjOGE0MWQ4YTE3RjA5Y2UyMjc5RDc5YjMzOTcxODRBMTA7CiAgIHVpbnQyNTYgcHVibGljIGNvbnN0YW50IElOSVRJQUxfU1VQUExZID0gMTAwMDAwMDAwOwogICBldmVudCBEZWJ1ZyhzdHJpbmcgbWVzc2FnZSwgYWRkcmVzcyBhZGRyLCB1aW50MjU2IG51bWJlcik7CiAgIAogICAvKioKICAgKiBAZGV2IENvbnRydWN0b3IgdGhhdCBnaXZlcyBtc2cuc2VuZGVyIGFsbCBvZiBleGlzdGluZyB0b2tlbnMuCiAgICovCiAgIC8vVE9ETzogQ2hhbmdlIHRoZSBuYW1lIG9mIHRoZSBjb25zdHJ1Y3RvcgogICAgZnVuY3Rpb24gUmV2b2x1dGlvbkNvaW4oKSBwdWJsaWMgewogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgICAgICB0b3RhbFN1cHBseSA9IElOSVRJQUxfU1VQUExZOwogICAgICAgIHRva2VuQmFsYW5jZXNbb3duZXJdID0gSU5JVElBTF9TVVBQTFkgKiAoMTAgKiogdWludDI1NihkZWNpbWFscykpOyAgIC8vU2luY2Ugd2UgZGl2aWRlZCB0aGUgdG9rZW4gaW50byAxMF4xOCBwYXJ0cwogICAgfQoKICAgIGZ1bmN0aW9uIGJ1eSgpIHBheWFibGUgcHVibGljIHJldHVybnMgKHVpbnQgYW1vdW50KSB7CiAgICAgICAgYW1vdW50ID0gbXNnLnZhbHVlLmRpdihidXlQcmljZSk7ICAgICAgICAgICAgICAgICAgICAvLyBjYWxjdWxhdGVzIHRoZSBhbW91bnQKICAgICAgICBhbW91bnQgPSBhbW91bnQgKiAoMTAgKiogdWludDI1NihkZWNpbWFscykpOwogICAgICAgIHJlcXVpcmUodG9rZW5CYWxhbmNlc1tvd25lcl0gPj0gYW1vdW50KTsgICAgICAgICAgICAgICAvLyBjaGVja3MgaWYgaXQgaGFzIGVub3VnaCB0byBzZWxsCiAgICAgICAgdG9rZW5CYWxhbmNlc1ttc2cuc2VuZGVyXSA9IHRva2VuQmFsYW5jZXNbbXNnLnNlbmRlcl0uYWRkKGFtb3VudCk7ICAgICAgICAgICAgICAgICAgLy8gYWRkcyB0aGUgYW1vdW50IHRvIGJ1eWVyJ3MgYmFsYW5jZQogICAgICAgIHRva2VuQmFsYW5jZXNbb3duZXJdID0gdG9rZW5CYWxhbmNlc1tvd25lcl0uc3ViKGFtb3VudCk7ICAgICAgICAgICAgICAgICAgICAgICAgLy8gc3VidHJhY3RzIGFtb3VudCBmcm9tIHNlbGxlcidzIGJhbGFuY2UKICAgICAgICBUcmFuc2Zlcihvd25lciwgbXNnLnNlbmRlciwgYW1vdW50KTsgICAgICAgICAgICAgICAvLyBleGVjdXRlIGFuIGV2ZW50IHJlZmxlY3RpbmcgdGhlIGNoYW5nZQogICAgICAgIGV0aFN0b3JlLnRyYW5zZmVyKG1zZy52YWx1ZSk7ICAgICAgICAgICAgICAgICAgICAgICAvL3NlbmQgdGhlIGV0aCB0byB0aGUgYWRkcmVzcyB3aGVyZSBldGggc2hvdWxkIGJlIGNvbGxlY3RlZAogICAgICAgIHJldHVybiBhbW91bnQ7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gZW5kcyBmdW5jdGlvbiBhbmQgcmV0dXJucwogICAgfQogICAgZnVuY3Rpb24gZ2V0VG9rZW5CYWxhbmNlKCkgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7CiAgICAgICAgYmFsYW5jZSA9IHRva2VuQmFsYW5jZXNbbXNnLnNlbmRlcl0uZGl2ICgxMCoqZGVjaW1hbHMpOyAvLyBzaG93IHRva2VuIGJhbGFuY2UgaW4gZnVsbCB0b2tlbnMgbm90IHBhcnQKICAgIH0KICAgIGZ1bmN0aW9uIGNoYW5nZUJ1eVByaWNlKHVpbnQgbmV3UHJpY2UpIHB1YmxpYyBvbmx5T3duZXIgewogICAgICAgIGJ1eVByaWNlID0gbmV3UHJpY2U7CiAgICB9Cn0='.
	

]
