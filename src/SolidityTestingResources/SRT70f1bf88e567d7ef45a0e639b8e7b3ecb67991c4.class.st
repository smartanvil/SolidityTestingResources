Class {
	#name : #SRT70f1bf88e567d7ef45a0e639b8e7b3ecb67991c4,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT70f1bf88e567d7ef45a0e639b8e7b3ecb67991c4 >> base64 [
	^ ''.
	

]
