Class {
	#name : #SRTefd57b75cad5ac36ba102a88e34374a7bb68acf3,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTefd57b75cad5ac36ba102a88e34374a7bb68acf3 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTY7CgovKioKICogQHRpdGxlIE93bmFibGUKICogQGRldiBUaGUgT3duYWJsZSBjb250cmFjdCBoYXMgYW4gb3duZXIgYWRkcmVzcywgYW5kIHByb3ZpZGVzIGJhc2ljIGF1dGhvcml6YXRpb24gY29udHJvbAogKiBmdW5jdGlvbnMsIHRoaXMgc2ltcGxpZmllcyB0aGUgaW1wbGVtZW50YXRpb24gb2YgInVzZXIgcGVybWlzc2lvbnMiLgogKi8KY29udHJhY3QgT3duYWJsZSB7CiAgICAKICAgIGFkZHJlc3MgcHVibGljIG93bmVyOwoKICAgIC8qKgogICAgKiBAZGV2IFRoZSBPd25hYmxlIGNvbnN0cnVjdG9yIHNldHMgdGhlIG9yaWdpbmFsIGBvd25lcmAgb2YgdGhlIGNvbnRyYWN0IHRvIHRoZSBzZW5kZXIKICAgICogYWNjb3VudC4KICAgICovCiAgICBmdW5jdGlvbiBPd25hYmxlKCkgcHVibGljIHsKICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgICB9CiAgICAKICAgIC8qKgogICAgKiBAZGV2IFRocm93cyBpZiBjYWxsZWQgYnkgYW55IGFjY291bnQgb3RoZXIgdGhhbiB0aGUgb3duZXIuCiAgICAqLwogICAgbW9kaWZpZXIgb25seU93bmVyKCkgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICAgICAgXzsKICAgIH0KCn0KCi8qKgogKiBAdGl0bGUgVGVuVGltZXNUb2tlbgogKiBAZGV2IEFuIEVSQzIwIHRva2VuIHdoaWNoIGRvdWJsZXMgdGhlIGJhbGFuY2UgZWFjaCAyIG1pbGxpb24gYmxvY2tzLgogKi8KY29udHJhY3QgVGVuVGltZXNUb2tlbiBpcyBPd25hYmxlIHsKICAgIAogICAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7CiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1Nikgc3RhcnRCYWxhbmNlczsKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikpIGFsbG93ZWQ7CiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1Nikgc3RhcnRCbG9ja3M7CiAgICAKICAgIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgbmFtZSA9ICJUZW4gVGltZXMiOwogICAgc3RyaW5nIHB1YmxpYyBjb25zdGFudCBzeW1ib2wgPSAiVEVOVCI7CiAgICB1aW50MzIgcHVibGljIGNvbnN0YW50IGRlY2ltYWxzID0gMTA7CgogICAgZnVuY3Rpb24gVGVuVGltZXNUb2tlbigpIHB1YmxpYyB7CiAgICAgICAgdG90YWxTdXBwbHkgPSAxMDAwMDAwICogMTAqKnVpbnQyNTYoZGVjaW1hbHMpOwogICAgICAgIHN0YXJ0QmFsYW5jZXNbb3duZXJdID0gdG90YWxTdXBwbHk7CiAgICAgICAgc3RhcnRCbG9ja3Nbb3duZXJdID0gYmxvY2subnVtYmVyOwogICAgICAgIFRyYW5zZmVyKGFkZHJlc3MoMCksIG93bmVyLCB0b3RhbFN1cHBseSk7CiAgICB9CgogICAgLyoqCiAgICAgKiBAZGV2IENvbXB1dGVzIGBrICogKDErMS9xKSBeIE5gLCB3aXRoIHByZWNpc2lvbiBgcGAuIFRoZSBoaWdoZXIKICAgICAqIHRoZSBwcmVjaXNpb24sIHRoZSBoaWdoZXIgdGhlIGdhcyBjb3N0LiBJdCBzaG91bGQgYmUKICAgICAqIHNvbWV0aGluZyBhcm91bmQgdGhlIGxvZyBvZiBgbmAuIFdoZW4gYHAgPT0gbmAsIHRoZQogICAgICogcHJlY2lzaW9uIGlzIGFic29sdXRlIChzYW5zIHBvc3NpYmxlIGludGVnZXIgb3ZlcmZsb3dzKS4gPGVkaXQ6IE5PVCB0cnVlLCBzZWUgY29tbWVudHM+CiAgICAgKiBNdWNoIHNtYWxsZXIgdmFsdWVzIGFyZSBzdWZmaWNpZW50IHRvIGdldCBhIGdyZWF0IGFwcHJveGltYXRpb24uCiAgICAgKiBmcm9tIGh0dHBzOi8vZXRoZXJldW0uc3RhY2tleGNoYW5nZS5jb20vcXVlc3Rpb25zLzEwNDI1L2lzLXRoZXJlLWFueS1lZmZpY2llbnQtd2F5LXRvLWNvbXB1dGUtdGhlLWV4cG9uZW50aWF0aW9uLW9mLWEtZnJhY3Rpb24tYW5kLWFuLWluCiAgICAgKi8KICAgIGZ1bmN0aW9uIGZyYWNFeHAodWludDI1NiBrLCB1aW50MjU2IHEsIHVpbnQyNTYgbiwgdWludDI1NiBwKSBwdXJlIHB1YmxpYyByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgdWludDI1NiBzID0gMDsKICAgICAgICB1aW50MjU2IE4gPSAxOwogICAgICAgIHVpbnQyNTYgQiA9IDE7CiAgICAgICAgZm9yICh1aW50MjU2IGkgPSAwOyBpIDwgcDsgKytpKSB7CiAgICAgICAgICAgIHMgKz0gayAqIE4gLyBCIC8gKHEqKmkpOwogICAgICAgICAgICBOID0gTiAqIChuLWkpOwogICAgICAgICAgICBCID0gQiAqIChpKzEpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gczsKICAgIH0KCgogICAgLyoqCiAgICAgKiBAZGV2IENvbXB1dGVzIHRoZSBjb21wb3VuZCBpbnRlcmVzdCBmb3IgYW4gYWNjb3VudCBzaW5jZSB0aGUgYmxvY2sgc3RvcmVkIGluIHN0YXJ0QmxvY2sKICAgICAqIGFib3V0IGZhY3RvciAxMCBmb3IgMiBtaWxsaW9uIGJsb2Nrcy4KICAgICAqLwogICAgZnVuY3Rpb24gY29tcG91bmRJbnRlcmVzdChhZGRyZXNzIHRva2VuT3duZXIpIHZpZXcgcHVibGljIHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICByZXF1aXJlKHN0YXJ0QmxvY2tzW3Rva2VuT3duZXJdID4gMCk7CiAgICAgICAgdWludDI1NiBzdGFydCA9IHN0YXJ0QmxvY2tzW3Rva2VuT3duZXJdOwogICAgICAgIHVpbnQyNTYgY3VycmVudCA9IGJsb2NrLm51bWJlcjsKICAgICAgICB1aW50MjU2IGJsb2NrQ291bnQgPSBjdXJyZW50IC0gc3RhcnQ7CiAgICAgICAgdWludDI1NiBiYWxhbmNlID0gc3RhcnRCYWxhbmNlc1t0b2tlbk93bmVyXTsKICAgICAgICByZXR1cm4gZnJhY0V4cChiYWxhbmNlLCA4Njc1OTgsIGJsb2NrQ291bnQsIDgpIC0gYmFsYW5jZTsKICAgIH0KCgogICAgLyoqCiAgICAgKiBAZGV2IEdldCB0aGUgdG9rZW4gYmFsYW5jZSBmb3IgYWNjb3VudCAndG9rZW5Pd25lcicKICAgICAqLwogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgdG9rZW5Pd25lcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgewogICAgICAgIHJldHVybiBzdGFydEJhbGFuY2VzW3Rva2VuT3duZXJdICsgY29tcG91bmRJbnRlcmVzdCh0b2tlbk93bmVyKTsKICAgIH0KCiAgICAKICAgIC8qKgogICAgICogQGRldiBBZGQgdGhlIGNvbXBvdW5kIGludGVyZXN0IHRvIHRoZSBzdGFydEJhbGFuY2UsIHVwZGF0ZSB0aGUgc3RhcnQgYmxvY2ssCiAgICAgKiBhbmQgdXBkYXRlIHRvdGFsU3VwcGx5CiAgICAgKi8KICAgIGZ1bmN0aW9uIHVwZGF0ZUJhbGFuY2UoYWRkcmVzcyB0b2tlbk93bmVyKSBwcml2YXRlIHsKICAgICAgICBpZiAoc3RhcnRCbG9ja3NbdG9rZW5Pd25lcl0gPT0gMCkgewogICAgICAgICAgICBzdGFydEJsb2Nrc1t0b2tlbk93bmVyXSA9IGJsb2NrLm51bWJlcjsKICAgICAgICB9CiAgICAgICAgdWludDI1NiBjaSA9IGNvbXBvdW5kSW50ZXJlc3QodG9rZW5Pd25lcik7CiAgICAgICAgc3RhcnRCYWxhbmNlc1t0b2tlbk93bmVyXSA9IHN0YXJ0QmFsYW5jZXNbdG9rZW5Pd25lcl0gKyBjaTsKICAgICAgICB0b3RhbFN1cHBseSA9IHRvdGFsU3VwcGx5ICsgY2k7CiAgICAgICAgc3RhcnRCbG9ja3NbdG9rZW5Pd25lcl0gPSBibG9jay5udW1iZXI7CiAgICB9CiAgICAKCiAgICAvKioKICAgICAqIEBkZXYgVHJhbnNmZXIgdGhlIGJhbGFuY2UgZnJvbSB0b2tlbiBvd25lcidzIGFjY291bnQgdG8gYHRvYCBhY2NvdW50CiAgICAgKiAtIE93bmVyJ3MgYWNjb3VudCBtdXN0IGhhdmUgc3VmZmljaWVudCBiYWxhbmNlIHRvIHRyYW5zZmVyCiAgICAgKiAtIDAgdmFsdWUgdHJhbnNmZXJzIGFyZSBhbGxvd2VkCiAgICAgKi8KICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sIHVpbnQyNTYgdG9rZW5zKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgICAgIHVwZGF0ZUJhbGFuY2UobXNnLnNlbmRlcik7CiAgICAgICAgdXBkYXRlQmFsYW5jZSh0byk7CiAgICAgICAgcmVxdWlyZSh0b2tlbnMgPD0gc3RhcnRCYWxhbmNlc1ttc2cuc2VuZGVyXSk7CgogICAgICAgIHN0YXJ0QmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBzdGFydEJhbGFuY2VzW21zZy5zZW5kZXJdIC0gdG9rZW5zOwogICAgICAgIHN0YXJ0QmFsYW5jZXNbdG9dID0gc3RhcnRCYWxhbmNlc1t0b10gKyB0b2tlbnM7CiAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgdG8sIHRva2Vucyk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgoKICAgIC8qKgogICAgICogQGRldiBUcmFuc2ZlciBgdG9rZW5zYCBmcm9tIHRoZSBgZnJvbWAgYWNjb3VudCB0byB0aGUgYHRvYCBhY2NvdW50CiAgICAgKiAKICAgICAqIFRoZSBjYWxsaW5nIGFjY291bnQgbXVzdCBhbHJlYWR5IGhhdmUgc3VmZmljaWVudCB0b2tlbnMgYXBwcm92ZSguLi4pLWQKICAgICAqIGZvciBzcGVuZGluZyBmcm9tIHRoZSBgZnJvbWAgYWNjb3VudCBhbmQKICAgICAqIC0gRnJvbSBhY2NvdW50IG11c3QgaGF2ZSBzdWZmaWNpZW50IGJhbGFuY2UgdG8gdHJhbnNmZXIKICAgICAqIC0gU3BlbmRlciBtdXN0IGhhdmUgc3VmZmljaWVudCBhbGxvd2FuY2UgdG8gdHJhbnNmZXIKICAgICAqIC0gMCB2YWx1ZSB0cmFuc2ZlcnMgYXJlIGFsbG93ZWQKICAgICAqLwogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgZnJvbSwgYWRkcmVzcyB0bywgdWludDI1NiB0b2tlbnMpIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICAgICAgdXBkYXRlQmFsYW5jZShmcm9tKTsKICAgICAgICB1cGRhdGVCYWxhbmNlKHRvKTsKICAgICAgICByZXF1aXJlKHRva2VucyA8PSBzdGFydEJhbGFuY2VzW2Zyb21dKTsKCiAgICAgICAgc3RhcnRCYWxhbmNlc1tmcm9tXSA9IHN0YXJ0QmFsYW5jZXNbZnJvbV0gLSB0b2tlbnM7CiAgICAgICAgYWxsb3dlZFtmcm9tXVttc2cuc2VuZGVyXSA9IGFsbG93ZWRbZnJvbV1bbXNnLnNlbmRlcl0gLSB0b2tlbnM7CiAgICAgICAgc3RhcnRCYWxhbmNlc1t0b10gPSBzdGFydEJhbGFuY2VzW3RvXSArIHRva2VuczsKICAgICAgICBUcmFuc2Zlcihmcm9tLCB0bywgdG9rZW5zKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICAvKioKICAgICAqIEBkZXYgQWxsb3cgYHNwZW5kZXJgIHRvIHdpdGhkcmF3IGZyb20geW91ciBhY2NvdW50LCBtdWx0aXBsZSB0aW1lcywgdXAgdG8gdGhlICd0b2tlbnMnIGFtb3VudC4KICAgICAqIElmIHRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkIGFnYWluIGl0IG92ZXJ3cml0ZXMgdGhlIGN1cnJlbnQgYWxsb3dhbmNlIHdpdGggJ3Rva2VucycuCiAgICAgKi8KICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBzcGVuZGVyLCB1aW50MjU2IHRva2VucykgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW3NwZW5kZXJdID0gdG9rZW5zOwogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIHNwZW5kZXIsIHRva2Vucyk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgdG9rZW5Pd25lciwgYWRkcmVzcyBzcGVuZGVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpIHsKICAgICAgICByZXR1cm4gYWxsb3dlZFt0b2tlbk93bmVyXVtzcGVuZGVyXTsKICAgIH0KICAgCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHRva2Vucyk7CgogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIG93bmVyLCBhZGRyZXNzIGluZGV4ZWQgc3BlbmRlciwgdWludDI1NiB0b2tlbnMpOwoKfQ=='.
	

]
