Class {
	#name : #SRT6c1bcb34142bffd35f57db626e0ac427af616a4d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT6c1bcb34142bffd35f57db626e0ac427af616a4d >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTM7CgovLyBFbmppbiBJQ08gZ3JvdXAgYnV5ZXIKLy8gQXZ0b3I6IEphbmV6CgovLyBFUkMyMCBJbnRlcmZhY2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8yMApjb250cmFjdCBFUkMyMCB7CiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKTsKfQoKY29udHJhY3QgRW5qaW5CdXllciB7CiAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBwdWJsaWMgYmFsYW5jZXM7CiAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBwdWJsaWMgYmFsYW5jZXNfYWZ0ZXJfYnV5OwogIGJvb2wgcHVibGljIGJvdWdodF90b2tlbnM7CiAgYm9vbCBwdWJsaWMgdG9rZW5fc2V0OwogIGJvb2wgcHVibGljIHJlZnVuZGVkOwogIHVpbnQyNTYgcHVibGljIGNvbnRyYWN0X2V0aF92YWx1ZTsKICBib29sIHB1YmxpYyBraWxsX3N3aXRjaDsKICBieXRlczMyIHBhc3N3b3JkX2hhc2ggPSAweDhiZjA3MjBjNmU2MTBhYWNlODY3ZWJhNTFiMDNhYjhjYTkwOGI2NjU4OThiMTBmYWRkYzk1YTk2ZTgyOTUzOWQ7CiAgYWRkcmVzcyBwdWJsaWMgZGV2ZWxvcGVyID0gMHgwNjM5QzE2OUQ5MjY1Q2E0QjRERWNlNjkzNzY0Q2RBOGVhNUYzODgyOwogIGFkZHJlc3MgcHVibGljIHNhbGUgPSAweGM0NzQwZjcxMzIzMTI5NjY5NDI0ZDFBZTA2YzQyQUVFOTlkYTMwZTI7CiAgRVJDMjAgcHVibGljIHRva2VuOwogIHVpbnQyNTYgcHVibGljIGV0aF9taW5pbXVtID0gMzIzNSBldGhlcjsKCiAgZnVuY3Rpb24gc2V0X3Rva2VuKGFkZHJlc3MgX3Rva2VuKSB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gZGV2ZWxvcGVyKTsKICAgIHRva2VuID0gRVJDMjAoX3Rva2VuKTsKICAgIHRva2VuX3NldCA9IHRydWU7CiAgfQoKICAvLyBUaGlzIGZ1bmN0aW9uIHNob3VsZCBvbmx5IGJlIGNhbGxlZCBpbiB0aGUgdW5mb3J0dW5hdGUgY2FzZSB0aGF0IEVuamluIHNob3VsZCByZWZ1bmQgZnJvbSBhIGRpZmZlcmVudCBhZGRyZXNzLgogIGZ1bmN0aW9uIHNldF9yZWZ1bmRlZChib29sIF9yZWZ1bmRlZCkgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IGRldmVsb3Blcik7CiAgICByZWZ1bmRlZCA9IF9yZWZ1bmRlZDsKICB9CiAgCiAgZnVuY3Rpb24gYWN0aXZhdGVfa2lsbF9zd2l0Y2goc3RyaW5nIHBhc3N3b3JkKSB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gZGV2ZWxvcGVyIHx8IHNoYTMocGFzc3dvcmQpID09IHBhc3N3b3JkX2hhc2gpOwogICAga2lsbF9zd2l0Y2ggPSB0cnVlOwogIH0KICAKICBmdW5jdGlvbiBwZXJzb25hbF93aXRoZHJhdygpewogICAgaWYgKGJhbGFuY2VzX2FmdGVyX2J1eVttc2cuc2VuZGVyXT4wICYmIG1zZy5zZW5kZXIgIT0gc2FsZSkgewogICAgICAgIHVpbnQyNTYgZXRoX3RvX3dpdGhkcmF3X2FmdGVyX2J1eSA9IGJhbGFuY2VzX2FmdGVyX2J1eVttc2cuc2VuZGVyXTsKICAgICAgICBiYWxhbmNlc19hZnRlcl9idXlbbXNnLnNlbmRlcl0gPSAwOwogICAgICAgIG1zZy5zZW5kZXIudHJhbnNmZXIoZXRoX3RvX3dpdGhkcmF3X2FmdGVyX2J1eSk7CiAgICB9CiAgICBpZiAoYmFsYW5jZXNbbXNnLnNlbmRlcl0gPT0gMCkgcmV0dXJuOwogICAgcmVxdWlyZShtc2cuc2VuZGVyICE9IHNhbGUpOwogICAgaWYgKCFib3VnaHRfdG9rZW5zIHx8IHJlZnVuZGVkKSB7CiAgICAgIHVpbnQyNTYgZXRoX3RvX3dpdGhkcmF3ID0gYmFsYW5jZXNbbXNnLnNlbmRlcl07CiAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gMDsKICAgICAgbXNnLnNlbmRlci50cmFuc2ZlcihldGhfdG9fd2l0aGRyYXcpOwogICAgfQogICAgZWxzZSB7CiAgICAgIHJlcXVpcmUodG9rZW5fc2V0KTsKICAgICAgdWludDI1NiBjb250cmFjdF90b2tlbl9iYWxhbmNlID0gdG9rZW4uYmFsYW5jZU9mKGFkZHJlc3ModGhpcykpOwogICAgICByZXF1aXJlKGNvbnRyYWN0X3Rva2VuX2JhbGFuY2UgIT0gMCk7CiAgICAgIHVpbnQyNTYgdG9rZW5zX3RvX3dpdGhkcmF3ID0gKGJhbGFuY2VzW21zZy5zZW5kZXJdICogY29udHJhY3RfdG9rZW5fYmFsYW5jZSkgLyBjb250cmFjdF9ldGhfdmFsdWU7CiAgICAgIGNvbnRyYWN0X2V0aF92YWx1ZSAtPSBiYWxhbmNlc1ttc2cuc2VuZGVyXTsKICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSAwOwogICAgICB1aW50MjU2IGZlZSA9IHRva2Vuc190b193aXRoZHJhdyAvIDEwMDsKICAgICAgcmVxdWlyZSh0b2tlbi50cmFuc2ZlcihkZXZlbG9wZXIsIGZlZSkpOwogICAgICByZXF1aXJlKHRva2VuLnRyYW5zZmVyKG1zZy5zZW5kZXIsIHRva2Vuc190b193aXRoZHJhdyAtIGZlZSkpOwogICAgfQogIH0KCiAgZnVuY3Rpb24gd2l0aGRyYXcoYWRkcmVzcyB1c2VyKXsKICAgIHJlcXVpcmUoYm91Z2h0X3Rva2VucyB8fCBraWxsX3N3aXRjaCk7CiAgICAvLyBXZSBkb24ndCBhbGxvdyB0aGUgY3Jvd2RzYWxlIHRvIHdpdGhkcmF3IGl0cyBmdW5kcyBiYWNrIChvciBhbnlvbmUgdG8gZG8gdGhhdCBvbiB0aGVpciBiZWhhbGYpLgogICAgcmVxdWlyZSh1c2VyICE9IHNhbGUpOwogICAgaWYgKGJhbGFuY2VzX2FmdGVyX2J1eVt1c2VyXT4wICYmIHVzZXIgIT0gc2FsZSkgewogICAgICAgIHVpbnQyNTYgZXRoX3RvX3dpdGhkcmF3X2FmdGVyX2J1eSA9IGJhbGFuY2VzX2FmdGVyX2J1eVt1c2VyXTsKICAgICAgICBiYWxhbmNlc19hZnRlcl9idXlbdXNlcl0gPSAwOwogICAgICAgIHVzZXIudHJhbnNmZXIoZXRoX3RvX3dpdGhkcmF3X2FmdGVyX2J1eSk7CiAgICB9CiAgICBpZiAoYmFsYW5jZXNbdXNlcl0gPT0gMCkgcmV0dXJuOwogICAgaWYgKCFib3VnaHRfdG9rZW5zIHx8IHJlZnVuZGVkKSB7CiAgICAgIHVpbnQyNTYgZXRoX3RvX3dpdGhkcmF3ID0gYmFsYW5jZXNbdXNlcl07CiAgICAgIGJhbGFuY2VzW3VzZXJdID0gMDsKICAgICAgdXNlci50cmFuc2ZlcihldGhfdG9fd2l0aGRyYXcpOwogICAgfQogICAgZWxzZSB7CiAgICAgIHJlcXVpcmUodG9rZW5fc2V0KTsKICAgICAgdWludDI1NiBjb250cmFjdF90b2tlbl9iYWxhbmNlID0gdG9rZW4uYmFsYW5jZU9mKGFkZHJlc3ModGhpcykpOwogICAgICByZXF1aXJlKGNvbnRyYWN0X3Rva2VuX2JhbGFuY2UgIT0gMCk7CiAgICAgIHVpbnQyNTYgdG9rZW5zX3RvX3dpdGhkcmF3ID0gKGJhbGFuY2VzW3VzZXJdICogY29udHJhY3RfdG9rZW5fYmFsYW5jZSkgLyBjb250cmFjdF9ldGhfdmFsdWU7CiAgICAgIGNvbnRyYWN0X2V0aF92YWx1ZSAtPSBiYWxhbmNlc1t1c2VyXTsKICAgICAgYmFsYW5jZXNbdXNlcl0gPSAwOwogICAgICB1aW50MjU2IGZlZSA9IHRva2Vuc190b193aXRoZHJhdyAvIDEwMDsKICAgICAgcmVxdWlyZSh0b2tlbi50cmFuc2ZlcihkZXZlbG9wZXIsIGZlZSkpOwogICAgICByZXF1aXJlKHRva2VuLnRyYW5zZmVyKHVzZXIsIHRva2Vuc190b193aXRoZHJhdyAtIGZlZSkpOwogICAgfQogIH0KCiAgZnVuY3Rpb24gcHVyY2hhc2VfdG9rZW5zKCkgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IGRldmVsb3Blcik7CiAgICBpZiAodGhpcy5iYWxhbmNlIDwgZXRoX21pbmltdW0pIHJldHVybjsKICAgIGlmIChraWxsX3N3aXRjaCkgcmV0dXJuOwogICAgcmVxdWlyZShzYWxlICE9IDB4MCk7CiAgICBib3VnaHRfdG9rZW5zID0gdHJ1ZTsKICAgIGNvbnRyYWN0X2V0aF92YWx1ZSA9IHRoaXMuYmFsYW5jZTsKICAgIHJlcXVpcmUoc2FsZS5jYWxsLnZhbHVlKGNvbnRyYWN0X2V0aF92YWx1ZSkoKSk7CiAgICByZXF1aXJlKHRoaXMuYmFsYW5jZT09MCk7CiAgfQogIAogIGZ1bmN0aW9uICgpIHBheWFibGUgewogICAgaWYgKCFib3VnaHRfdG9rZW5zKSB7CiAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdICs9IG1zZy52YWx1ZTsKICAgIH0gZWxzZSB7CiAgICAgIC8vIFdlIG1pZ2h0IGJlIGdldHRpbmcgYSByZWZ1bmQgZnJvbSBFbmppbidzIG11bHRpc2lnIHdhbGxldC4KICAgICAgLy8gSXQgY291bGQgYWxzbyBiZSBzb21lb25lIHdobyBoYXMgbWlzc2VkIHRoZSBidXksIHNvIHdlIGtlZXAKICAgICAgLy8gdHJhY2sgb2YgdGhpcyBhcyB3ZWxsIHNvIHRoYXQgaGUgY2FuIHNhZmVseSB3aXRoZHJhdy4KICAgICAgLy8gV2UgbWlnaHQgZ2V0IHRoZSBFbmppbiByZWZ1bmQgZnJvbSBhbm90aGVyIHdhbGxldCwgc28gdGhpcwogICAgICAvLyBpcyB3aHkgd2UgYWxsb3cgdGhpcyBiZWhhdmlvci4KICAgICAgYmFsYW5jZXNfYWZ0ZXJfYnV5W21zZy5zZW5kZXJdICs9IG1zZy52YWx1ZTsKICAgICAgaWYgKG1zZy5zZW5kZXIgPT0gc2FsZSAmJiB0aGlzLmJhbGFuY2UgPj0gY29udHJhY3RfZXRoX3ZhbHVlKSB7CiAgICAgICAgcmVmdW5kZWQgPSB0cnVlOwogICAgICB9CiAgICB9CiAgfQp9'.
	

]
