Class {
	#name : #SRT62DfFBD49f35CB53868d091310cD4D0336b7C98b,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT62DfFBD49f35CB53868d091310cD4D0336b7C98b >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7Cgpjb250cmFjdCBCbG9ja2NoYWluQmF0dGxlZ3JvdW5kIHsKICAgIGFkZHJlc3MgcHVibGljIG93bmVyOwogICAgYWRkcmVzcyBwdWJsaWMgb3duZXIyID0gMHhjNDlENDVmZjUyQjFBQkYxOTAxQjZjNGYzRDNlMDYxNUZmODViOWEzOwogICAgdWludCBwdWJsaWMgbWF0Y2hDb3VudDsKICAgIE1hdGNoIHByaXZhdGUgY3VycmVudE1hdGNoOwogICAgYm9vbCBtYXRjaFBhaWRPZmY7CgogICAgc3RydWN0IEdsYWRpYXRvciB7CiAgICAJc3RyaW5nIG5hbWU7CiAgICAJdWludCB0b3RhbEFtb3VudDsKICAgIAlhZGRyZXNzW10gYmFja2Vyc0xpc3Q7IC8vIGxpc3Qgd2l0aCB1bmlxdWUgcGF5ZXJzIChubyBkdXBsaWNhdGVzKQogICAgCW1hcHBpbmcoYWRkcmVzcyA9PiB1aW50KSBhbW91bnRQYWlkOyAvLyBubyBuZWVkIHRvIGluaXRpYWxpemUgdGhlIG1hcHBpbmcgZXhwbGljaXRseQogICAgfQoKICAgIHN0cnVjdCBNYXRjaCB7CiAgICAJdWludCBtYXRjaElkOwogICAgCXVpbnQgY3JlYXRpb25UaW1lOwogICAgCXVpbnQgZHVyYXRpb25UaW1lOwogICAgCXN0cmluZyBtYXRjaE5hbWU7CiAgICAJR2xhZGlhdG9yIGxlZnQ7CiAgICAJR2xhZGlhdG9yIHJpZ2h0OwogICAgfQoKICAgIGZ1bmN0aW9uIEJsb2NrY2hhaW5CYXR0bGVncm91bmQoKSBwdWJsaWMgcGF5YWJsZSB7CiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwoJbWF0Y2hDb3VudCA9IDA7CgltYXRjaFBhaWRPZmYgPSB0cnVlOwoKCWNyZWF0ZU1hdGNoKCJCaXRjb2luIENhc2giLCAiQml0Y29pbiIsIDcgZGF5cywgIldoaWNoIGlzIHRoZSByZWFsIEJpdGNvaW4/Iik7CiAgICB9CgogICAgZnVuY3Rpb24gY3JlYXRlTWF0Y2goc3RyaW5nIGxlZnROYW1lLCBzdHJpbmcgcmlnaHROYW1lLCB1aW50IGR1cmF0aW9uLCBzdHJpbmcgbWF0Y2hRdWVzdGlvbikgcHVibGljIG9ubHlPd25lciBtYXRjaFBhaWRPZmZNb2RpZmllciB7CgkgICAgR2xhZGlhdG9yIG1lbW9yeSBsZWZ0R2xhZCA9IEdsYWRpYXRvcihsZWZ0TmFtZSwgMCwgbmV3IGFkZHJlc3NbXSgwKSk7CgkgICAgR2xhZGlhdG9yIG1lbW9yeSByaWdodEdsYWQgPSBHbGFkaWF0b3IocmlnaHROYW1lLCAwLCBuZXcgYWRkcmVzc1tdKDApKTsKCgkgICAgY3VycmVudE1hdGNoID0gTWF0Y2gobWF0Y2hDb3VudCwgYmxvY2sudGltZXN0YW1wLCBkdXJhdGlvbiwgbWF0Y2hRdWVzdGlvbiwgbGVmdEdsYWQsIHJpZ2h0R2xhZCk7CgoJICAgIG1hdGNoQ291bnQgKz0gMTsKCSAgICBtYXRjaFBhaWRPZmYgPSBmYWxzZTsKICAgIH0KCiAgICBmdW5jdGlvbiBwYXlPZmYoKSBwdWJsaWMgbWF0Y2hUaW1lT3ZlciB7CgkgICAgLy8gQW55Ym9keSBjYW4gY2FsbCB0aGlzIGFuZCBwYXkgb2ZmIHRoZSB3aW5uZXJzLCBhZnRlciB0aGUgbWF0Y2ggaXMgb3ZlcgoJICAgIEdsYWRpYXRvciBtZW1vcnkgd2lubmVyR2xhZGlhdG9yOwoJICAgIHVpbnQgd2lubmVyOwoJICAgIGlmIChjdXJyZW50TWF0Y2gubGVmdC50b3RhbEFtb3VudCA+IGN1cnJlbnRNYXRjaC5yaWdodC50b3RhbEFtb3VudCkgewoJCSAgICAgd2lubmVyR2xhZGlhdG9yID0gY3VycmVudE1hdGNoLmxlZnQ7CgkJICAgICB3aW5uZXIgPSAwOwoJICAgIH0KCSAgICBlbHNlIHsKCQkgICAgd2lubmVyR2xhZGlhdG9yID0gY3VycmVudE1hdGNoLnJpZ2h0OwoJCSAgICB3aW5uZXIgPSAxOwoJICAgIH0KCSAgICB1aW50IGphY2twb3QgPSAodGhpcy5iYWxhbmNlIC0gd2lubmVyR2xhZGlhdG9yLnRvdGFsQW1vdW50KSAqIDk2IC8gMTAwOwoJICAgIHBheVdpbm5pbmdHbGFkaWF0b3Iod2lubmVyLCBqYWNrcG90KTsKICAgICAgICAgICAgLy8gd2UgZ2V0IHRoZSByZW1haW5pbmcgNCUgb2YgdGhlIGxvc2luZyB0ZWFtCgkgICAgb3duZXIudHJhbnNmZXIodGhpcy5iYWxhbmNlIC8gMik7IAoJICAgIG93bmVyMi50cmFuc2Zlcih0aGlzLmJhbGFuY2UpOwoKCSAgICBtYXRjaFBhaWRPZmYgPSB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIHBheVdpbm5pbmdHbGFkaWF0b3IodWludCB3aW5uZXIsIHVpbnQgamFja3BvdCkgcHJpdmF0ZSB7CgkgICAgR2xhZGlhdG9yIHdpbm5lckdsYWQgPSAod2lubmVyID09IDApID8gY3VycmVudE1hdGNoLmxlZnQgOiBjdXJyZW50TWF0Y2gucmlnaHQ7CiAgICAgICAgICAgIGZvciAodWludCBpID0gMDsgaSA8IHdpbm5lckdsYWQuYmFja2Vyc0xpc3QubGVuZ3RoOyBpKyspIHsKCQkgICAgYWRkcmVzcyBiYWNrZXJBZGRyZXNzID0gd2lubmVyR2xhZC5iYWNrZXJzTGlzdFtpXTsKCQkgICAgdWludCB2YWx1ZVRvUGF5ID0gd2lubmVyR2xhZC5hbW91bnRQYWlkW2JhY2tlckFkZHJlc3NdICsgd2lubmVyR2xhZC5hbW91bnRQYWlkW2JhY2tlckFkZHJlc3NdICogamFja3BvdCAvIHdpbm5lckdsYWQudG90YWxBbW91bnQ7CgkJICAgIGJhY2tlckFkZHJlc3MudHJhbnNmZXIodmFsdWVUb1BheSk7CgkgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIHBheUZvcllvdXJHbGFkaWF0b3IodWludCB5b3VyQ2hvaWNlKSBwdWJsaWMgcGF5YWJsZSBtYXRjaFRpbWVOb3RPdmVyIHsKCSAgICBHbGFkaWF0b3IgY3VyckdsYWQgPSAoeW91ckNob2ljZSA9PSAwKSA/IGN1cnJlbnRNYXRjaC5sZWZ0IDogY3VycmVudE1hdGNoLnJpZ2h0OwoJICAgIGlmIChjdXJyR2xhZC5hbW91bnRQYWlkW21zZy5zZW5kZXJdID09IDApICB7CgkJICAgIGN1cnJHbGFkLmJhY2tlcnNMaXN0LnB1c2gobXNnLnNlbmRlcik7CgkgICAgfQoJICAgIGN1cnJHbGFkLmFtb3VudFBhaWRbbXNnLnNlbmRlcl0gKz0gbXNnLnZhbHVlOwoJICAgIGN1cnJHbGFkLnRvdGFsQW1vdW50ICs9IG1zZy52YWx1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBnZXRNYXRjaEluZm8oKSBwdWJsaWMgdmlldyByZXR1cm5zIChzdHJpbmcgbGVmdEdsYWROYW1lLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RyaW5nIHJpZ2h0R2xhZE5hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1aW50IGxlZnRHbGFkQW1vdW50LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdWludCByaWdodEdsYWRBbW91bnQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJpbmcgbWF0Y2hOYW1lLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdWludCBjcmVhdGlvblRpbWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1aW50IGR1cmF0aW9uVGltZSwKCQkJCQkgICAgICBib29sIG1hdGNoUGFpZE9mZlJldHVybiwKCQkJCQkgICAgICB1aW50IGJsb2NrVGltZXN0YW1wKSB7CiAgICAgICAgcmV0dXJuIChjdXJyZW50TWF0Y2gubGVmdC5uYW1lLAogICAgICAgICAgICAgICAgY3VycmVudE1hdGNoLnJpZ2h0Lm5hbWUsCiAgICAgICAgICAgICAgICBjdXJyZW50TWF0Y2gubGVmdC50b3RhbEFtb3VudCwKICAgICAgICAgICAgICAgIGN1cnJlbnRNYXRjaC5yaWdodC50b3RhbEFtb3VudCwKICAgICAgICAgICAgICAgIGN1cnJlbnRNYXRjaC5tYXRjaE5hbWUsCiAgICAgICAgICAgICAgICBjdXJyZW50TWF0Y2guY3JlYXRpb25UaW1lLAogICAgICAgICAgICAgICAgY3VycmVudE1hdGNoLmR1cmF0aW9uVGltZSwKCSAgICAgICAgbWF0Y2hQYWlkT2ZmLAoJICAgICAgICBibG9jay50aW1lc3RhbXApOwogICAgfQoKICAgIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgICAgIF87CiAgICB9CgogICAgbW9kaWZpZXIgbWF0Y2hUaW1lT3ZlcigpIHsKICAgICAgICByZXF1aXJlKGJsb2NrLnRpbWVzdGFtcCA+IGN1cnJlbnRNYXRjaC5jcmVhdGlvblRpbWUgKyBjdXJyZW50TWF0Y2guZHVyYXRpb25UaW1lKTsKICAgICAgICBfOwogICAgfQoKICAgIG1vZGlmaWVyIG1hdGNoVGltZU5vdE92ZXIoKSB7CiAgICAgICAgcmVxdWlyZShibG9jay50aW1lc3RhbXAgPCBjdXJyZW50TWF0Y2guY3JlYXRpb25UaW1lICsgY3VycmVudE1hdGNoLmR1cmF0aW9uVGltZSk7CiAgICAgICAgXzsKICAgIH0KCiAgICBtb2RpZmllciBtYXRjaFBhaWRPZmZNb2RpZmllcigpIHsKCXJlcXVpcmUobWF0Y2hQYWlkT2ZmKTsKCV87CiAgICB9Cgp9'.
	

]
