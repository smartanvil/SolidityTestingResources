Class {
	#name : #SRT8c41aeb257268e02a39dadb92c493c56ee526e43,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT8c41aeb257268e02a39dadb92c493c56ee526e43 >> base64 [
	^ ''.
	

]
