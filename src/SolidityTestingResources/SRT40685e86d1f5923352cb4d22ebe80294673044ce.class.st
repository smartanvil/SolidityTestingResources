Class {
	#name : #SRT40685e86d1f5923352cb4d22ebe80294673044ce,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT40685e86d1f5923352cb4d22ebe80294673044ce >> base64 [
	^ ''.
	

]
