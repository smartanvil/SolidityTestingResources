Class {
	#name : #SRT482457db0f18d72Ea9fe032FB07E18997D0b8c60,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT482457db0f18d72Ea9fe032FB07E18997D0b8c60 >> base64 [
	^ ''.
	

]
