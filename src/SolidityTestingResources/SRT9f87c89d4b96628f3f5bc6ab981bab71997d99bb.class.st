Class {
	#name : #SRT9f87c89d4b96628f3f5bc6ab981bab71997d99bb,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT9f87c89d4b96628f3f5bc6ab981bab71997d99bb >> base64 [
	^ ''.
	

]
