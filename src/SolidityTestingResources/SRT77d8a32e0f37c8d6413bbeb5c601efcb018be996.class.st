Class {
	#name : #SRT77d8a32e0f37c8d6413bbeb5c601efcb018be996,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT77d8a32e0f37c8d6413bbeb5c601efcb018be996 >> base64 [
	^ ''.
	

]
