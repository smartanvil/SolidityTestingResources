Class {
	#name : #SRT86c8bf8532aa2601151c9dbbf4e4c4804e042571,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT86c8bf8532aa2601151c9dbbf4e4c4804e042571 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuODsKCmNvbnRyYWN0IEVSQzIwSW50ZXJmYWNlIHsKICAgIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgc3VwcGx5KTsKICAgIGZ1bmN0aW9uIGJhbGFuY2UoKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nik7CiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KTsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpOwoKICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7Cn0KCmNvbnRyYWN0IFNpbW9sZW9uIGlzIEVSQzIwSW50ZXJmYWNlIHsKICAgIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgc3ltYm9sID0gIlNJTSI7CiAgICBzdHJpbmcgcHVibGljIGNvbnN0YW50IG5hbWUgPSAiU2ltb2xlb24iOwogICAgdWludDggcHVibGljIGNvbnN0YW50IGRlY2ltYWxzID0gMjsKCiAgICB1aW50MjU2IF90b3RhbFN1cHBseSA9IDA7CiAgICB1aW50MjU2IF9haXJkcm9wQW1vdW50ID0gMTAwMDAwMDsKICAgIHVpbnQyNTYgX2N1dG9mZiA9IF9haXJkcm9wQW1vdW50ICogMTAwMDA7CgogICAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpIGJhbGFuY2VzOwogICAgbWFwcGluZyhhZGRyZXNzID0+IGJvb2wpIGluaXRpYWxpemVkOwoKICAgIC8vIE93bmVyIG9mIGFjY291bnQgYXBwcm92ZXMgdGhlIHRyYW5zZmVyIG9mIGFuIGFtb3VudCB0byBhbm90aGVyIGFjY291bnQKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBhbGxvd2VkOwoKICAgIGZ1bmN0aW9uIFNpbW9sZW9uKCkgewogICAgICAgIGluaXRpYWxpemVkW21zZy5zZW5kZXJdID0gdHJ1ZTsKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IF9haXJkcm9wQW1vdW50ICogMTAwMDsKICAgICAgICBfdG90YWxTdXBwbHkgPSBiYWxhbmNlc1ttc2cuc2VuZGVyXTsKICAgIH0KCiAgICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgc3VwcGx5KSB7CiAgICAgICAgcmV0dXJuIF90b3RhbFN1cHBseTsKICAgIH0KCiAgICAvLyBXaGF0J3MgbXkgYmFsYW5jZT8KICAgIGZ1bmN0aW9uIGJhbGFuY2UoKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgcmV0dXJuIGdldEJhbGFuY2UobXNnLnNlbmRlcik7CiAgICB9CgogICAgLy8gV2hhdCBpcyB0aGUgYmFsYW5jZSBvZiBhIHBhcnRpY3VsYXIgYWNjb3VudD8KICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9hZGRyZXNzKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgcmV0dXJuIGdldEJhbGFuY2UoX2FkZHJlc3MpOwogICAgfQoKICAgIC8vIFRyYW5zZmVyIHRoZSBiYWxhbmNlIGZyb20gb3duZXIncyBhY2NvdW50IHRvIGFub3RoZXIgYWNjb3VudAogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX2Ftb3VudCkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgaW5pdGlhbGl6ZShtc2cuc2VuZGVyKTsKCiAgICAgICAgaWYgKGJhbGFuY2VzW21zZy5zZW5kZXJdID49IF9hbW91bnQKICAgICAgICAgICAgJiYgX2Ftb3VudCA+IDApIHsKICAgICAgICAgICAgaW5pdGlhbGl6ZShfdG8pOwogICAgICAgICAgICBpZiAoYmFsYW5jZXNbX3RvXSArIF9hbW91bnQgPiBiYWxhbmNlc1tfdG9dKSB7CgogICAgICAgICAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gLT0gX2Ftb3VudDsKICAgICAgICAgICAgICAgIGJhbGFuY2VzW190b10gKz0gX2Ftb3VudDsKCiAgICAgICAgICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF9hbW91bnQpOwoKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgIH0KCiAgICAvLyBTZW5kIF92YWx1ZSBhbW91bnQgb2YgdG9rZW5zIGZyb20gYWRkcmVzcyBfZnJvbSB0byBhZGRyZXNzIF90bwogICAgLy8gVGhlIHRyYW5zZmVyRnJvbSBtZXRob2QgaXMgdXNlZCBmb3IgYSB3aXRoZHJhdyB3b3JrZmxvdywgYWxsb3dpbmcgY29udHJhY3RzIHRvIHNlbmQKICAgIC8vIHRva2VucyBvbiB5b3VyIGJlaGFsZiwgZm9yIGV4YW1wbGUgdG8gImRlcG9zaXQiIHRvIGEgY29udHJhY3QgYWRkcmVzcyBhbmQvb3IgdG8gY2hhcmdlCiAgICAvLyBmZWVzIGluIHN1Yi1jdXJyZW5jaWVzOyB0aGUgY29tbWFuZCBzaG91bGQgZmFpbCB1bmxlc3MgdGhlIF9mcm9tIGFjY291bnQgaGFzCiAgICAvLyBkZWxpYmVyYXRlbHkgYXV0aG9yaXplZCB0aGUgc2VuZGVyIG9mIHRoZSBtZXNzYWdlIHZpYSBzb21lIG1lY2hhbmlzbTsgd2UgcHJvcG9zZQogICAgLy8gdGhlc2Ugc3RhbmRhcmRpemVkIEFQSXMgZm9yIGFwcHJvdmFsOgogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF9hbW91bnQpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGluaXRpYWxpemUoX2Zyb20pOwoKICAgICAgICBpZiAoYmFsYW5jZXNbX2Zyb21dID49IF9hbW91bnQKICAgICAgICAgICAgJiYgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gPj0gX2Ftb3VudAogICAgICAgICAgICAmJiBfYW1vdW50ID4gMCkgewogICAgICAgICAgICBpbml0aWFsaXplKF90byk7CiAgICAgICAgICAgIGlmIChiYWxhbmNlc1tfdG9dICsgX2Ftb3VudCA+IGJhbGFuY2VzW190b10pIHsKCiAgICAgICAgICAgICAgICBiYWxhbmNlc1tfZnJvbV0gLT0gX2Ftb3VudDsKICAgICAgICAgICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdIC09IF9hbW91bnQ7CiAgICAgICAgICAgICAgICBiYWxhbmNlc1tfdG9dICs9IF9hbW91bnQ7CgogICAgICAgICAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX2Ftb3VudCk7CgogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgfQoKICAgIC8vIEFsbG93IF9zcGVuZGVyIHRvIHdpdGhkcmF3IGZyb20geW91ciBhY2NvdW50LCBtdWx0aXBsZSB0aW1lcywgdXAgdG8gdGhlIF92YWx1ZSBhbW91bnQuCiAgICAvLyBJZiB0aGlzIGZ1bmN0aW9uIGlzIGNhbGxlZCBhZ2FpbiBpdCBvdmVyd3JpdGVzIHRoZSBjdXJyZW50IGFsbG93YW5jZSB3aXRoIF92YWx1ZS4KICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfYW1vdW50KSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF9hbW91bnQ7CiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF9hbW91bnQpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpIHsKICAgICAgICByZXR1cm4gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsKICAgIH0KCiAgICAvLyBpbnRlcm5hbCBwcml2YXRlIGZ1bmN0aW9ucwogICAgZnVuY3Rpb24gaW5pdGlhbGl6ZShhZGRyZXNzIF9hZGRyZXNzKSBpbnRlcm5hbCByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBpZiAoX3RvdGFsU3VwcGx5IDwgX2N1dG9mZiAmJiAhaW5pdGlhbGl6ZWRbX2FkZHJlc3NdKSB7CiAgICAgICAgICAgIGluaXRpYWxpemVkW19hZGRyZXNzXSA9IHRydWU7CiAgICAgICAgICAgIGJhbGFuY2VzW19hZGRyZXNzXSA9IF9haXJkcm9wQW1vdW50OwogICAgICAgICAgICBfdG90YWxTdXBwbHkgKz0gX2FpcmRyb3BBbW91bnQ7CiAgICAgICAgfQogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGdldEJhbGFuY2UoYWRkcmVzcyBfYWRkcmVzcykgaW50ZXJuYWwgcmV0dXJucyAodWludDI1NikgewogICAgICAgIGlmIChfdG90YWxTdXBwbHkgPCBfY3V0b2ZmICYmICFpbml0aWFsaXplZFtfYWRkcmVzc10pIHsKICAgICAgICAgICAgcmV0dXJuIGJhbGFuY2VzW19hZGRyZXNzXSArIF9haXJkcm9wQW1vdW50OwogICAgICAgIH0KICAgICAgICBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuIGJhbGFuY2VzW19hZGRyZXNzXTsKICAgICAgICB9CiAgICB9Cn0='.
	

]
