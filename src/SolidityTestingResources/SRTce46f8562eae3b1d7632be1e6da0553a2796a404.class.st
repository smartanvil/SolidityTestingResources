Class {
	#name : #SRTce46f8562eae3b1d7632be1e6da0553a2796a404,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTce46f8562eae3b1d7632be1e6da0553a2796a404 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTA7Cgpjb250cmFjdCBGb3JlaWduVG9rZW4gewogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KTsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCk7Cn0KCmNvbnRyYWN0IEZ1Y2tZb3VUb2tlbiB7CiAgICBhZGRyZXNzIG93bmVyID0gbXNnLnNlbmRlcjsKCiAgICBib29sIHB1YmxpYyBwdXJjaGFzaW5nQWxsb3dlZCA9IHRydWU7CgogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsKCiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbENvbnRyaWJ1dGlvbiA9IDA7CiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbEJvbnVzVG9rZW5zSXNzdWVkID0gMDsKCiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseSA9IDA7CgogICAgZnVuY3Rpb24gbmFtZSgpIGNvbnN0YW50IHJldHVybnMgKHN0cmluZykgeyByZXR1cm4gIkZ1Y2sgWW91IFRva2VuIjsgfQogICAgZnVuY3Rpb24gc3ltYm9sKCkgY29uc3RhbnQgcmV0dXJucyAoc3RyaW5nKSB7IHJldHVybiAiRllUIjsgfQogICAgZnVuY3Rpb24gZGVjaW1hbHMoKSBjb25zdGFudCByZXR1cm5zICh1aW50OCkgeyByZXR1cm4gMTg7IH0KICAgIAogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7IHJldHVybiBiYWxhbmNlc1tfb3duZXJdOyB9CiAgICAKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgLy8gbWl0aWdhdGVzIHRoZSBFUkMyMCBzaG9ydCBhZGRyZXNzIGF0dGFjawogICAgICAgIGlmKG1zZy5kYXRhLmxlbmd0aCA8ICgyICogMzIpICsgNCkgeyB0aHJvdzsgfQoKICAgICAgICBpZiAoX3ZhbHVlID09IDApIHsgcmV0dXJuIGZhbHNlOyB9CgogICAgICAgIHVpbnQyNTYgZnJvbUJhbGFuY2UgPSBiYWxhbmNlc1ttc2cuc2VuZGVyXTsKCiAgICAgICAgYm9vbCBzdWZmaWNpZW50RnVuZHMgPSBmcm9tQmFsYW5jZSA+PSBfdmFsdWU7CiAgICAgICAgYm9vbCBvdmVyZmxvd2VkID0gYmFsYW5jZXNbX3RvXSArIF92YWx1ZSA8IGJhbGFuY2VzW190b107CiAgICAgICAgCiAgICAgICAgaWYgKHN1ZmZpY2llbnRGdW5kcyAmJiAhb3ZlcmZsb3dlZCkgewogICAgICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgICAgIGJhbGFuY2VzW190b10gKz0gX3ZhbHVlOwogICAgICAgICAgICAKICAgICAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9IGVsc2UgeyByZXR1cm4gZmFsc2U7IH0KICAgIH0KICAgIAogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgLy8gbWl0aWdhdGVzIHRoZSBFUkMyMCBzaG9ydCBhZGRyZXNzIGF0dGFjawogICAgICAgIGlmKG1zZy5kYXRhLmxlbmd0aCA8ICgzICogMzIpICsgNCkgeyB0aHJvdzsgfQoKICAgICAgICBpZiAoX3ZhbHVlID09IDApIHsgcmV0dXJuIGZhbHNlOyB9CiAgICAgICAgCiAgICAgICAgdWludDI1NiBmcm9tQmFsYW5jZSA9IGJhbGFuY2VzW19mcm9tXTsKICAgICAgICB1aW50MjU2IGFsbG93YW5jZSA9IGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdOwoKICAgICAgICBib29sIHN1ZmZpY2llbnRGdW5kcyA9IGZyb21CYWxhbmNlIDw9IF92YWx1ZTsKICAgICAgICBib29sIHN1ZmZpY2llbnRBbGxvd2FuY2UgPSBhbGxvd2FuY2UgPD0gX3ZhbHVlOwogICAgICAgIGJvb2wgb3ZlcmZsb3dlZCA9IGJhbGFuY2VzW190b10gKyBfdmFsdWUgPiBiYWxhbmNlc1tfdG9dOwoKICAgICAgICBpZiAoc3VmZmljaWVudEZ1bmRzICYmIHN1ZmZpY2llbnRBbGxvd2FuY2UgJiYgIW92ZXJmbG93ZWQpIHsKICAgICAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfdmFsdWU7CiAgICAgICAgICAgIGJhbGFuY2VzW19mcm9tXSAtPSBfdmFsdWU7CiAgICAgICAgICAgIAogICAgICAgICAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgICAgIAogICAgICAgICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9IGVsc2UgeyByZXR1cm4gZmFsc2U7IH0KICAgIH0KICAgIAogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgLy8gbWl0aWdhdGVzIHRoZSBFUkMyMCBzcGVuZC9hcHByb3ZhbCByYWNlIGNvbmRpdGlvbgogICAgICAgIGlmIChfdmFsdWUgIT0gMCAmJiBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSAhPSAwKSB7IHJldHVybiBmYWxzZTsgfQogICAgICAgIAogICAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgICAgIAogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICByZXR1cm4gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsKICAgIH0KCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsKICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpOwoKICAgIGZ1bmN0aW9uIGVuYWJsZVB1cmNoYXNpbmcoKSB7CiAgICAgICAgaWYgKG1zZy5zZW5kZXIgIT0gb3duZXIpIHsgdGhyb3c7IH0KCiAgICAgICAgcHVyY2hhc2luZ0FsbG93ZWQgPSB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGRpc2FibGVQdXJjaGFzaW5nKCkgewogICAgICAgIGlmIChtc2cuc2VuZGVyICE9IG93bmVyKSB7IHRocm93OyB9CgogICAgICAgIHB1cmNoYXNpbmdBbGxvd2VkID0gZmFsc2U7CiAgICB9CgogICAgZnVuY3Rpb24gd2l0aGRyYXdGb3JlaWduVG9rZW5zKGFkZHJlc3MgX3Rva2VuQ29udHJhY3QpIHJldHVybnMgKGJvb2wpIHsKICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lcikgeyB0aHJvdzsgfQoKICAgICAgICBGb3JlaWduVG9rZW4gdG9rZW4gPSBGb3JlaWduVG9rZW4oX3Rva2VuQ29udHJhY3QpOwoKICAgICAgICB1aW50MjU2IGFtb3VudCA9IHRva2VuLmJhbGFuY2VPZihhZGRyZXNzKHRoaXMpKTsKICAgICAgICByZXR1cm4gdG9rZW4udHJhbnNmZXIob3duZXIsIGFtb3VudCk7CiAgICB9CgogICAgZnVuY3Rpb24gZ2V0U3RhdHMoKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2LCB1aW50MjU2LCB1aW50MjU2LCBib29sKSB7CiAgICAgICAgcmV0dXJuICh0b3RhbENvbnRyaWJ1dGlvbiwgdG90YWxTdXBwbHksIHRvdGFsQm9udXNUb2tlbnNJc3N1ZWQsIHB1cmNoYXNpbmdBbGxvd2VkKTsKICAgIH0KCiAgICBmdW5jdGlvbigpIHBheWFibGUgewogICAgICAgIGlmICghcHVyY2hhc2luZ0FsbG93ZWQpIHsgdGhyb3c7IH0KICAgICAgICAKICAgICAgICBpZiAobXNnLnZhbHVlID09IDApIHsgcmV0dXJuOyB9CgogICAgICAgIG93bmVyLnRyYW5zZmVyKG1zZy52YWx1ZSk7CiAgICAgICAgdG90YWxDb250cmlidXRpb24gKz0gbXNnLnZhbHVlOwoKICAgICAgICB1aW50MjU2IHRva2Vuc0lzc3VlZCA9IChtc2cudmFsdWUgKiAxMDApOwoKICAgICAgICBpZiAobXNnLnZhbHVlID49IDEwIGZpbm5leSkgewogICAgICAgICAgICB0b2tlbnNJc3N1ZWQgKz0gdG90YWxDb250cmlidXRpb247CgogICAgICAgICAgICBieXRlczIwIGJvbnVzSGFzaCA9IHJpcGVtZDE2MChibG9jay5jb2luYmFzZSwgYmxvY2subnVtYmVyLCBibG9jay50aW1lc3RhbXApOwogICAgICAgICAgICBpZiAoYm9udXNIYXNoWzFdID09IDApIHsKICAgICAgICAgICAgICAgIHVpbnQ4IGJvbnVzTXVsdGlwbGllciA9CiAgICAgICAgICAgICAgICAgICAgKChib251c0hhc2hbMl0gJiAweDAxICE9IDApID8gMSA6IDApICsgKChib251c0hhc2hbMl0gJiAweDAyICE9IDApID8gMSA6IDApICsKICAgICAgICAgICAgICAgICAgICAoKGJvbnVzSGFzaFsyXSAmIDB4MDQgIT0gMCkgPyAxIDogMCkgKyAoKGJvbnVzSGFzaFsyXSAmIDB4MDggIT0gMCkgPyAxIDogMCkgKwogICAgICAgICAgICAgICAgICAgICgoYm9udXNIYXNoWzJdICYgMHgxMCAhPSAwKSA/IDEgOiAwKSArICgoYm9udXNIYXNoWzJdICYgMHgyMCAhPSAwKSA/IDEgOiAwKSArCiAgICAgICAgICAgICAgICAgICAgKChib251c0hhc2hbMl0gJiAweDQwICE9IDApID8gMSA6IDApICsgKChib251c0hhc2hbMl0gJiAweDgwICE9IDApID8gMSA6IDApOwogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB1aW50MjU2IGJvbnVzVG9rZW5zSXNzdWVkID0gKG1zZy52YWx1ZSAqIDEwMCkgKiBib251c011bHRpcGxpZXI7CiAgICAgICAgICAgICAgICB0b2tlbnNJc3N1ZWQgKz0gYm9udXNUb2tlbnNJc3N1ZWQ7CgogICAgICAgICAgICAgICAgdG90YWxCb251c1Rva2Vuc0lzc3VlZCArPSBib251c1Rva2Vuc0lzc3VlZDsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgdG90YWxTdXBwbHkgKz0gdG9rZW5zSXNzdWVkOwogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdICs9IHRva2Vuc0lzc3VlZDsKICAgICAgICAKICAgICAgICBUcmFuc2ZlcihhZGRyZXNzKHRoaXMpLCBtc2cuc2VuZGVyLCB0b2tlbnNJc3N1ZWQpOwogICAgfQp9'.
	

]
