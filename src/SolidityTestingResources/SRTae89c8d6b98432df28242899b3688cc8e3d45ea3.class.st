Class {
	#name : #SRTae89c8d6b98432df28242899b3688cc8e3d45ea3,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTae89c8d6b98432df28242899b3688cc8e3d45ea3 >> base64 [
	^ ''.
	

]
