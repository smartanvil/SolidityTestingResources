Class {
	#name : #SRT1bb5744d22297075487edbf9dc3f89d2e04ebce0,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT1bb5744d22297075487edbf9dc3f89d2e04ebce0 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7CgppbnRlcmZhY2UgSUVSQzIwewogICAgCmZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiB0b3RhbFN1cHBseSk7CgpmdW5jdGlvbiBDaXJjdWxhdGluZ1N1cHBseSgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgX0NpcmN1bGF0aW5nU3VwcGx5KTsKICAgIApmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSk7CiAgIApmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgIApmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogICAgCmZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgICAKZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHJlbWFpbmluZyk7CiAgIApldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsKICAKZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7CiAKCn0gCgpsaWJyYXJ5IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAKICAgIHVpbnQyNTYgYyA9IGEgLyBiOwogICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KfQoKY29udHJhY3QgTmV3WWVhclRva2VuIGlzIElFUkMyMHsKICAgIAogICAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQyNTY7CiAgICBzdHJpbmcgcHVibGljIGNvbnN0YW50IHN5bWJvbCA9ICJOWVQiOwogICAgc3RyaW5nIHB1YmxpYyBjb25zdGFudCBuYW1lID0gIk5ldyBZZWFyIFRva2VuIjsKICAgIHVpbnQ4IHB1YmxpYyBjb25zdGFudCBkZWNpbWFscyA9IDE4OwogICAgdWludCBwcml2YXRlIHN1cHBsYXk9IDA7CiAgICB1aW50IHByaXZhdGUgX0NpcmN1bGF0aW5nU3VwcGx5ID0gMDsKICAgIHVpbnQgcHJpdmF0ZSBfTWF4U3VwcGx5PTEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA7CiAgICAKICAgCiAgICB1aW50MjU2IHByaXZhdGUgY29uc3RhbnQgUkFURTEgPSAyMDAwOwogICAgdWludDI1NiBwcml2YXRlIGNvbnN0YW50IFJBVEUyID0gMTAwMDsKICAgIGFkZHJlc3MgcHVibGljIG93bmVyPTB4QzZEM2EwNzA0YzE2OTM0NGM3NTg5MTVlZDQwNmVCQTcwN0RCMWU3NjsKICAgIAogICAgdWludCBwcml2YXRlIGNvbnN0YW50IHByZWljb3Q9MTUxMzc2NTgwMDsKICAgIHVpbnQgcHJpdmF0ZSBjb25zdGFudCBwcmVpY290ZT0xNTE0MjQyNzk5OwogICAgCiAgICB1aW50IHByaXZhdGUgY29uc3RhbnQgaWNvdD0xNTE0MzcwNjAwOwogICAgdWludCBwcml2YXRlIGNvbnN0YW50IGljb3RlPTE1MTUwMjAzOTk7CiAgICAKICAgIAogICAgbWFwcGluZyhhZGRyZXNzPT4gdWludDI1NikgYmFsYW5jZXM7CiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpKSBhbGxvd2VkOwogICAgCiAgICBmdW5jdGlvbiAoKSBwYXlhYmxlewogICAgCiAgICBpZihub3c8PXByZWljb3RlKXsKICAgICBjcmVhdGVUb2tlbnMoKTsgIAogICAgfQogICAgZWxzZSB7CiAgICAgICAgY3JlYXRlVG9rZW5zMSgpOwogICAgfQogICAgCiAgICAgIAogICAgfQogICAKICAgIGZ1bmN0aW9uIE5ld1llYXJUb2tlbigpewogICAgICAgIHN1cHBsYXkgPSBzdXBwbGF5LmFkZCgyMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDApOwogICAgfQogIAogICAgZnVuY3Rpb24gY3JlYXRlVG9rZW5zKCkgcGF5YWJsZXsKICAgICAgICAgdWludCB0b2tlbnMgPSBtc2cudmFsdWUubXVsKFJBVEUxKTsKICAgICAgICAgICAgcmVxdWlyZShtc2cudmFsdWUgPiAwICYmIHN1cHBsYXkrdG9rZW5zPD1fTWF4U3VwcGx5ICYmIG5vdz49cHJlaWNvdCAmJiBub3c8PXByZWljb3RlKTsKICAgICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IGJhbGFuY2VzW21zZy5zZW5kZXJdLmFkZCh0b2tlbnMpOwogICAgICAgICAgICBfQ2lyY3VsYXRpbmdTdXBwbHkgPSBfQ2lyY3VsYXRpbmdTdXBwbHkuYWRkKHRva2Vucyk7CiAgICAgICAgICAgIHN1cHBsYXkgPSBzdXBwbGF5LmFkZCh0b2tlbnMpOwogICAgICAgICAgICBvd25lci50cmFuc2Zlcihtc2cudmFsdWUpOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBjcmVhdGVUb2tlbnMxKCkgcGF5YWJsZXsKICAgICAgICAgdWludCB0b2tlbnMgPSBtc2cudmFsdWUubXVsKFJBVEUyKTsKICAgICAgICAgICAgcmVxdWlyZShtc2cudmFsdWUgPiAwICYmIHN1cHBsYXkrdG9rZW5zPD1fTWF4U3VwcGx5ICYmIG5vdz49aWNvdCAmJiBub3c8PWljb3RlKTsKICAgICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IGJhbGFuY2VzW21zZy5zZW5kZXJdLmFkZCh0b2tlbnMpOwogICAgICAgICAgICBfQ2lyY3VsYXRpbmdTdXBwbHkgPSBfQ2lyY3VsYXRpbmdTdXBwbHkuYWRkKHRva2Vucyk7CiAgICAgICAgICAgIHN1cHBsYXkgPSBzdXBwbGF5LmFkZCh0b2tlbnMpOwogICAgICAgICAgICBvd25lci50cmFuc2Zlcihtc2cudmFsdWUpOwogICAgfQogICAgCiAgICAKICAgIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiB0b3RhbFN1cHBseSl7CiAgICAgICByZXR1cm4gX01heFN1cHBseTsgIAogICAgIH0KICAgICAgZnVuY3Rpb24gQ2lyY3VsYXRpbmdTdXBwbHkoKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IENpcmN1bGF0aW5nU3VwcGx5KXsKICAgICAgIHJldHVybiBfQ2lyY3VsYXRpbmdTdXBwbHk7ICAKICAgICB9CiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSl7CiAgICAgICAgcmV0dXJuIGJhbGFuY2VzW19vd25lcl07CiAgICB9CiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyl7CiAgICAgICAgcmVxdWlyZSgKICAgICAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPj0gX3ZhbHVlCiAgICAgICAgICAgICYmIF92YWx1ZSA+IDAgJiYgbm93Pmljb3RlCiAgICAgICAgKTsKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IGJhbGFuY2VzW21zZy5zZW5kZXJdLnN1YihfdmFsdWUpOwogICAgICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfdmFsdWUpOwogICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gd2l0aGRyYXdmdW5kcygpIHJldHVybnMgKGJvb2wgc2VjY2Vzcyl7CiAgICAgICAgcmVxdWlyZShvd25lcj09bXNnLnNlbmRlcik7CiAgICAgICAgYmFsYW5jZXNbb3duZXJdID0gYmFsYW5jZXNbb3duZXJdLmFkZCgyMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDApOwogICAgICAgIF9DaXJjdWxhdGluZ1N1cHBseSA9IF9DaXJjdWxhdGluZ1N1cHBseS5hZGQoMjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIGZ1bmN0aW9uIGJ1cm4oKSByZXR1cm5zIChib29sIHNlY2Nlc3MpewogICAgICAgIHJlcXVpcmUob3duZXI9PW1zZy5zZW5kZXIpOwogICAgICAgIHVpbnQgc3Rldmlsbz1fTWF4U3VwcGx5LnN1YihzdXBwbGF5KTsKICAgICAgICBfTWF4U3VwcGx5PV9NYXhTdXBwbHkuc3ViKHN0ZXZpbG8pOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQogICAgIGZ1bmN0aW9uIG5ld293bmVyKGFkZHJlc3MgX293bmVyKSByZXR1cm5zIChib29sIHNlY2Nlc3MpewogICAgICAgIHJlcXVpcmUob3duZXI9PW1zZy5zZW5kZXIpOwogICAgICAgIG93bmVyPV9vd25lcjsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKXsKICAgICAgICByZXF1aXJlKAogICAgICAgICAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA+PSBfdmFsdWUKICAgICAgICAgICAgJiYgYmFsYW5jZXNbX2Zyb21dID49IF92YWx1ZQogICAgICAgICAgICAmJiBfdmFsdWUgPiAwCiAgICAgICAgKTsKICAgICAgICBiYWxhbmNlc1tfZnJvbV0gPSBiYWxhbmNlc1tfZnJvbV0uc3ViKF92YWx1ZSk7CiAgICAgICAgYmFsYW5jZXNbX3RvXSA9IGJhbGFuY2VzW190b10uYWRkKF92YWx1ZSk7CiAgICAgICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gPSBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXS5zdWIoX3ZhbHVlKTsKICAgICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKXsKICAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CiAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpewogICAgICAgIHJldHVybiBhbGxvd2VkW19vd25lcl1bX3NwZW5kZXJdOwogICAgfQogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50MjU2IF92YWx1ZSk7CiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKTsKICAgIAp9'.
	

]
