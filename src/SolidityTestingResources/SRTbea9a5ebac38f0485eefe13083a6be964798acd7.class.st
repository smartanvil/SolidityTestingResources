Class {
	#name : #SRTbea9a5ebac38f0485eefe13083a6be964798acd7,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTbea9a5ebac38f0485eefe13083a6be964798acd7 >> base64 [
	^ ''.
	

]
