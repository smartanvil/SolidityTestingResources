Class {
	#name : #SRTd5670cdb0d6e6d9eedfdbaceb97d5774466f0b23,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTd5670cdb0d6e6d9eedfdbaceb97d5774466f0b23 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7Cgpjb250cmFjdCBJbnRlcmZhY2VDb250ZW50Q3JlYXRvclVuaXZlcnNlIHsKICBmdW5jdGlvbiBvd25lck9mKHVpbnQyNTYgX3Rva2VuSWQpIHB1YmxpYyB2aWV3IHJldHVybnMgKGFkZHJlc3MgX293bmVyKTsKICBmdW5jdGlvbiBwcmljZU9mKHVpbnQyNTYgX3Rva2VuSWQpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYgcHJpY2UpOwogIGZ1bmN0aW9uIGdldE5leHRQcmljZSh1aW50IHByaWNlLCB1aW50IF90b2tlbklkKSBwdWJsaWMgcHVyZSByZXR1cm5zICh1aW50KTsKICBmdW5jdGlvbiBsYXN0U3ViVG9rZW5CdXllck9mKHVpbnQgdG9rZW5JZCkgcHVibGljIHZpZXcgcmV0dXJucyhhZGRyZXNzKTsKICBmdW5jdGlvbiBsYXN0U3ViVG9rZW5DcmVhdG9yT2YodWludCB0b2tlbklkKSBwdWJsaWMgdmlldyByZXR1cm5zKGFkZHJlc3MpOwoKICAvLwogIGZ1bmN0aW9uIGNyZWF0ZUNvbGxlY3RpYmxlKHVpbnQyNTYgdG9rZW5JZCwgdWludDI1NiBfcHJpY2UsIGFkZHJlc3MgY3JlYXRvciwgYWRkcmVzcyBvd25lcikgZXh0ZXJuYWwgOwp9Cgpjb250cmFjdCBJbnRlcmZhY2VZQ0MgewogIGZ1bmN0aW9uIHBheUZvclVwZ3JhZGUoYWRkcmVzcyB1c2VyLCB1aW50IHByaWNlKSBleHRlcm5hbCAgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICBmdW5jdGlvbiBtaW50Q29pbnNGb3JPbGRDb2xsZWN0aWJsZXMoYWRkcmVzcyB0bywgdWludDI1NiBhbW91bnQsIGFkZHJlc3MgdW5pdmVyc2VPd25lcikgZXh0ZXJuYWwgIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgZnVuY3Rpb24gdHJhZGVQcmVUb2tlbih1aW50IHByaWNlLCBhZGRyZXNzIGJ1eWVyLCBhZGRyZXNzIHNlbGxlciwgdWludCBidXJuUGVyY2VudCwgYWRkcmVzcyB1bml2ZXJzZU93bmVyKSBleHRlcm5hbDsKICBmdW5jdGlvbiBwYXlvdXRGb3JNaW5pbmcoYWRkcmVzcyB1c2VyLCB1aW50IGFtb3VudCkgZXh0ZXJuYWw7CiAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7Cn0KCmNvbnRyYWN0IEludGVyZmFjZU1pbmluZyB7CiAgZnVuY3Rpb24gY3JlYXRlTWluZUZvclRva2VuKHVpbnQgdG9rZW5JZCwgdWludCBsZXZlbCwgdWludCB4cCwgdWludCBuZXh0TGV2ZWxCcmVhaywgdWludCBibG9ja251bWJlcikgZXh0ZXJuYWw7CiAgZnVuY3Rpb24gcGF5b3V0TWluaW5nKHVpbnQgdG9rZW5JZCwgYWRkcmVzcyBvd25lciwgYWRkcmVzcyBuZXdPd25lcikgZXh0ZXJuYWw7CiAgZnVuY3Rpb24gbGV2ZWxVcE1pbmluZyh1aW50IHRva2VuSWQpIGV4dGVybmFsOwp9CgpsaWJyYXJ5IFNhZmVNYXRoIHsKCiAgLyoqCiAgKiBAZGV2IE11bHRpcGxpZXMgdHdvIG51bWJlcnMsIHRocm93cyBvbiBvdmVyZmxvdy4KICAqLwogIGZ1bmN0aW9uIG11bCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICBpZiAoYSA9PSAwKSB7CiAgICAgIHJldHVybiAwOwogICAgfQogICAgdWludDI1NiBjID0gYSAqIGI7CiAgICBhc3NlcnQoYyAvIGEgPT0gYik7CiAgICByZXR1cm4gYzsKICB9CgogIC8qKgogICogQGRldiBJbnRlZ2VyIGRpdmlzaW9uIG9mIHR3byBudW1iZXJzLCB0cnVuY2F0aW5nIHRoZSBxdW90aWVudC4KICAqLwogIGZ1bmN0aW9uIGRpdih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAKICAgIHVpbnQyNTYgYyA9IGEgLyBiOwogICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICAgIHJldHVybiBjOwogIH0KCiAgLyoqCiAgKiBAZGV2IFN1YnN0cmFjdHMgdHdvIG51bWJlcnMsIHRocm93cyBvbiBvdmVyZmxvdyAoaS5lLiBpZiBzdWJ0cmFoZW5kIGlzIGdyZWF0ZXIgdGhhbiBtaW51ZW5kKS4KICAqLwogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIC8qKgogICogQGRldiBBZGRzIHR3byBudW1iZXJzLCB0aHJvd3Mgb24gb3ZlcmZsb3cuCiAgKi8KICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KfQoKY29udHJhY3QgT3duZWQgewogIC8vIFRoZSBhZGRyZXNzZXMgb2YgdGhlIGFjY291bnRzIChvciBjb250cmFjdHMpIHRoYXQgY2FuIGV4ZWN1dGUgYWN0aW9ucyB3aXRoaW4gZWFjaCByb2xlcy4KICBhZGRyZXNzIHB1YmxpYyBjZW9BZGRyZXNzOwogIGFkZHJlc3MgcHVibGljIGNvb0FkZHJlc3M7CiAgYWRkcmVzcyBwcml2YXRlIG5ld0Nlb0FkZHJlc3M7CiAgYWRkcmVzcyBwcml2YXRlIG5ld0Nvb0FkZHJlc3M7CgoKICBmdW5jdGlvbiBPd25lZCgpIHB1YmxpYyB7CiAgICAgIGNlb0FkZHJlc3MgPSBtc2cuc2VuZGVyOwogICAgICBjb29BZGRyZXNzID0gbXNnLnNlbmRlcjsKICB9CgogIC8qKiogQUNDRVNTIE1PRElGSUVSUyAqKiovCiAgLy8vIEBkZXYgQWNjZXNzIG1vZGlmaWVyIGZvciBDRU8tb25seSBmdW5jdGlvbmFsaXR5CiAgbW9kaWZpZXIgb25seUNFTygpIHsKICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBjZW9BZGRyZXNzKTsKICAgIF87CiAgfQoKICAvLy8gQGRldiBBY2Nlc3MgbW9kaWZpZXIgZm9yIENPTy1vbmx5IGZ1bmN0aW9uYWxpdHkKICBtb2RpZmllciBvbmx5Q09PKCkgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IGNvb0FkZHJlc3MpOwogICAgXzsKICB9CgogIC8vLyBBY2Nlc3MgbW9kaWZpZXIgZm9yIGNvbnRyYWN0IG93bmVyIG9ubHkgZnVuY3Rpb25hbGl0eQogIG1vZGlmaWVyIG9ubHlDTGV2ZWwoKSB7CiAgICByZXF1aXJlKAogICAgICBtc2cuc2VuZGVyID09IGNlb0FkZHJlc3MgfHwKICAgICAgbXNnLnNlbmRlciA9PSBjb29BZGRyZXNzCiAgICApOwogICAgXzsKICB9CgogIC8vLyBAZGV2IEFzc2lnbnMgYSBuZXcgYWRkcmVzcyB0byBhY3QgYXMgdGhlIENFTy4gT25seSBhdmFpbGFibGUgdG8gdGhlIGN1cnJlbnQgQ0VPLgogIC8vLyBAcGFyYW0gX25ld0NFTyBUaGUgYWRkcmVzcyBvZiB0aGUgbmV3IENFTwogIGZ1bmN0aW9uIHNldENFTyhhZGRyZXNzIF9uZXdDRU8pIHB1YmxpYyBvbmx5Q0VPIHsKICAgIHJlcXVpcmUoX25ld0NFTyAhPSBhZGRyZXNzKDApKTsKICAgIG5ld0Nlb0FkZHJlc3MgPSBfbmV3Q0VPOwogIH0KCiAgLy8vIEBkZXYgQXNzaWducyBhIG5ldyBhZGRyZXNzIHRvIGFjdCBhcyB0aGUgQ09PLiBPbmx5IGF2YWlsYWJsZSB0byB0aGUgY3VycmVudCBDT08uCiAgLy8vIEBwYXJhbSBfbmV3Q09PIFRoZSBhZGRyZXNzIG9mIHRoZSBuZXcgQ09PCiAgZnVuY3Rpb24gc2V0Q09PKGFkZHJlc3MgX25ld0NPTykgcHVibGljIG9ubHlDRU8gewogICAgcmVxdWlyZShfbmV3Q09PICE9IGFkZHJlc3MoMCkpOwogICAgbmV3Q29vQWRkcmVzcyA9IF9uZXdDT087CiAgfQoKICBmdW5jdGlvbiBhY2NlcHRDZW9Pd25lcnNoaXAoKSBwdWJsaWMgewogICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gbmV3Q2VvQWRkcmVzcyk7CiAgICAgIHJlcXVpcmUoYWRkcmVzcygwKSAhPSBuZXdDZW9BZGRyZXNzKTsKICAgICAgY2VvQWRkcmVzcyA9IG5ld0Nlb0FkZHJlc3M7CiAgICAgIG5ld0Nlb0FkZHJlc3MgPSBhZGRyZXNzKDApOwogIH0KCiAgZnVuY3Rpb24gYWNjZXB0Q29vT3duZXJzaGlwKCkgcHVibGljIHsKICAgICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG5ld0Nvb0FkZHJlc3MpOwogICAgICByZXF1aXJlKGFkZHJlc3MoMCkgIT0gbmV3Q29vQWRkcmVzcyk7CiAgICAgIGNvb0FkZHJlc3MgPSBuZXdDb29BZGRyZXNzOwogICAgICBuZXdDb29BZGRyZXNzID0gYWRkcmVzcygwKTsKICB9CgogIG1hcHBpbmcgKGFkZHJlc3MgPT4gYm9vbCkgcHVibGljIHlvdUNvbGxlY3RDb250cmFjdHM7CiAgZnVuY3Rpb24gYWRkWW91Q29sbGVjdENvbnRyYWN0KGFkZHJlc3MgY29udHJhY3RBZGRyZXNzLCBib29sIGFjdGl2ZSkgcHVibGljIG9ubHlDT08gewogICAgeW91Q29sbGVjdENvbnRyYWN0c1tjb250cmFjdEFkZHJlc3NdID0gYWN0aXZlOwogIH0KICBtb2RpZmllciBvbmx5WUNDKCkgewogICAgcmVxdWlyZSh5b3VDb2xsZWN0Q29udHJhY3RzW21zZy5zZW5kZXJdKTsKICAgIF87CiAgfQoKICBJbnRlcmZhY2VZQ0MgeWNjOwogIEludGVyZmFjZUNvbnRlbnRDcmVhdG9yVW5pdmVyc2UgeWN0OwogIEludGVyZmFjZU1pbmluZyB5Y207CiAgZnVuY3Rpb24gc2V0TWFpbllvdUNvbGxlY3RDb250cmFjdEFkZHJlc3NlcyhhZGRyZXNzIHljY0NvbnRyYWN0LCBhZGRyZXNzIHljdENvbnRyYWN0LCBhZGRyZXNzIHljbUNvbnRyYWN0LCBhZGRyZXNzW10gb3RoZXJDb250cmFjdHMpIHB1YmxpYyBvbmx5Q09PIHsKICAgIHljYyA9IEludGVyZmFjZVlDQyh5Y2NDb250cmFjdCk7CiAgICB5Y3QgPSBJbnRlcmZhY2VDb250ZW50Q3JlYXRvclVuaXZlcnNlKHljdENvbnRyYWN0KTsKICAgIHljbSA9IEludGVyZmFjZU1pbmluZyh5Y21Db250cmFjdCk7CiAgICB5b3VDb2xsZWN0Q29udHJhY3RzW3ljY0NvbnRyYWN0XSA9IHRydWU7CiAgICB5b3VDb2xsZWN0Q29udHJhY3RzW3ljdENvbnRyYWN0XSA9IHRydWU7CiAgICB5b3VDb2xsZWN0Q29udHJhY3RzW3ljbUNvbnRyYWN0XSA9IHRydWU7CiAgICBmb3IgKHVpbnQxNiBpbmRleCA9IDA7IGluZGV4IDwgb3RoZXJDb250cmFjdHMubGVuZ3RoOyBpbmRleCsrKSB7CiAgICAgIHlvdUNvbGxlY3RDb250cmFjdHNbb3RoZXJDb250cmFjdHNbaW5kZXhdXSA9IHRydWU7CiAgICB9CiAgfQogIGZ1bmN0aW9uIHNldFljY0NvbnRyYWN0QWRkcmVzcyhhZGRyZXNzIHljY0NvbnRyYWN0KSBwdWJsaWMgb25seUNPTyB7CiAgICB5Y2MgPSBJbnRlcmZhY2VZQ0MoeWNjQ29udHJhY3QpOwogICAgeW91Q29sbGVjdENvbnRyYWN0c1t5Y2NDb250cmFjdF0gPSB0cnVlOwogIH0KICBmdW5jdGlvbiBzZXRZY3RDb250cmFjdEFkZHJlc3MoYWRkcmVzcyB5Y3RDb250cmFjdCkgcHVibGljIG9ubHlDT08gewogICAgeWN0ID0gSW50ZXJmYWNlQ29udGVudENyZWF0b3JVbml2ZXJzZSh5Y3RDb250cmFjdCk7CiAgICB5b3VDb2xsZWN0Q29udHJhY3RzW3ljdENvbnRyYWN0XSA9IHRydWU7CiAgfQogIGZ1bmN0aW9uIHNldFljbUNvbnRyYWN0QWRkcmVzcyhhZGRyZXNzIHljbUNvbnRyYWN0KSBwdWJsaWMgb25seUNPTyB7CiAgICB5Y20gPSBJbnRlcmZhY2VNaW5pbmcoeWNtQ29udHJhY3QpOwogICAgeW91Q29sbGVjdENvbnRyYWN0c1t5Y21Db250cmFjdF0gPSB0cnVlOwogIH0KCn0KCmNvbnRyYWN0IFRyYW5zZmVySW50ZXJmYWNlRVJDNzIxWUMgewogIGZ1bmN0aW9uIHRyYW5zZmVyVG9rZW4oYWRkcmVzcyB0bywgdWludDI1NiB0b2tlbklkKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKfQpjb250cmFjdCBUcmFuc2ZlckludGVyZmFjZUVSQzIwIHsKICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIHRvLCB1aW50IHRva2VucykgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7Cn0KCi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KLy8gRVJDIFRva2VuIFN0YW5kYXJkICMyMCBJbnRlcmZhY2UKLy8gaHR0cHM6Ly9naXRodWIuY29tL0NvbnNlblN5cy9Ub2tlbnMvYmxvYi9tYXN0ZXIvY29udHJhY3RzL2VpcDIwL0VJUDIwLnNvbAovLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCmNvbnRyYWN0IFlvdUNvbGxlY3RCYXNlIGlzIE93bmVkIHsKICB1c2luZyBTYWZlTWF0aCBmb3IgdWludDI1NjsKCiAgZXZlbnQgUmVkQnV0dG9uKHVpbnQgdmFsdWUsIHVpbnQgdG90YWxTdXBwbHkpOwoKICAvLyBQYXlvdXQKICBmdW5jdGlvbiBwYXlvdXQoYWRkcmVzcyBfdG8pIHB1YmxpYyBvbmx5Q0xldmVsIHsKICAgIF9wYXlvdXQoX3RvLCB0aGlzLmJhbGFuY2UpOwogIH0KICBmdW5jdGlvbiBwYXlvdXQoYWRkcmVzcyBfdG8sIHVpbnQgYW1vdW50KSBwdWJsaWMgb25seUNMZXZlbCB7CiAgICBpZiAoYW1vdW50PnRoaXMuYmFsYW5jZSkKICAgICAgYW1vdW50ID0gdGhpcy5iYWxhbmNlOwogICAgX3BheW91dChfdG8sIGFtb3VudCk7CiAgfQogIGZ1bmN0aW9uIF9wYXlvdXQoYWRkcmVzcyBfdG8sIHVpbnQgYW1vdW50KSBwcml2YXRlIHsKICAgIGlmIChfdG8gPT0gYWRkcmVzcygwKSkgewogICAgICBjZW9BZGRyZXNzLnRyYW5zZmVyKGFtb3VudCk7CiAgICB9IGVsc2UgewogICAgICBfdG8udHJhbnNmZXIoYW1vdW50KTsKICAgIH0KICB9CgogIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogIC8vIE93bmVyIGNhbiB0cmFuc2ZlciBvdXQgYW55IGFjY2lkZW50YWxseSBzZW50IEVSQzIwIHRva2VucwogIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogIGZ1bmN0aW9uIHRyYW5zZmVyQW55RVJDMjBUb2tlbihhZGRyZXNzIHRva2VuQWRkcmVzcywgdWludCB0b2tlbnMpIHB1YmxpYyBvbmx5Q0VPIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICByZXR1cm4gVHJhbnNmZXJJbnRlcmZhY2VFUkMyMCh0b2tlbkFkZHJlc3MpLnRyYW5zZmVyKGNlb0FkZHJlc3MsIHRva2Vucyk7CiAgfQp9CgovLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCi8vIENvbnRyYWN0IGZ1bmN0aW9uIHRvIHJlY2VpdmUgYXBwcm92YWwgYW5kIGV4ZWN1dGUgZnVuY3Rpb24gaW4gb25lIGNhbGwKLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQpjb250cmFjdCBBcHByb3ZlQW5kQ2FsbEZhbGxCYWNrIHsKICAgIGZ1bmN0aW9uIHJlY2VpdmVBcHByb3ZhbChhZGRyZXNzIGZyb20sIHVpbnQyNTYgdG9rZW5zLCBhZGRyZXNzIHRva2VuLCBieXRlcyBkYXRhKSBwdWJsaWM7Cn0KCmNvbnRyYWN0IFlvdUNvbGxlY3RDb2lucyBpcyBZb3VDb2xsZWN0QmFzZSB7CgogIC8vCiAgLy8gIEVSQzIwIAogIC8vCiAgICAvKioqIENPTlNUQU5UUyAqKiovCiAgICBzdHJpbmcgcHVibGljIGNvbnN0YW50IE5BTUUgPSAiWW91Q29sbGVjdENvaW4iOwogICAgc3RyaW5nIHB1YmxpYyBjb25zdGFudCBTWU1CT0wgPSAiWUNDIjsKICAgIHVpbnQ4IHB1YmxpYyBjb25zdGFudCBERUNJTUFMUyA9IDE4OyAgCgogICAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7CiAgICB1aW50MjU2IGNvbnN0YW50IHByaXZhdGUgTUFYX1VJTlQyNTYgPSAyKioyNTYgLSAxOwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBwdWJsaWMgYmFsYW5jZXM7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikpIHB1YmxpYyBhbGxvd2VkOwogICAgYm9vbCBhbGxvd1RyYW5zZmVyOwoKICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOyAKICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpOwoKICAgIGZ1bmN0aW9uIFlvdUNvbGxlY3RDb2lucygpIHsKICAgICAgYWRkWW91Q29sbGVjdENvbnRyYWN0KG1zZy5zZW5kZXIsIHRydWUpOwogICAgfQoKICAgIC8vLyBAZGV2IFJlcXVpcmVkIGZvciBFUkMtMjAgY29tcGxpYW5jZS4KICAgIGZ1bmN0aW9uIG5hbWUoKSBwdWJsaWMgcHVyZSByZXR1cm5zIChzdHJpbmcpIHsKICAgICAgcmV0dXJuIE5BTUU7CiAgICB9CgogICAgLy8vIEBkZXYgUmVxdWlyZWQgZm9yIEVSQy0yMCBjb21wbGlhbmNlLgogICAgZnVuY3Rpb24gc3ltYm9sKCkgcHVibGljIHB1cmUgcmV0dXJucyAoc3RyaW5nKSB7CiAgICAgIHJldHVybiBTWU1CT0w7CiAgICB9CiAgICAvLy8gQGRldiBSZXF1aXJlZCBmb3IgRVJDLTIwIGNvbXBsaWFuY2UuCiAgICBmdW5jdGlvbiBkZWNpbWFscygpIHB1YmxpYyBwdXJlIHJldHVybnMgKHVpbnQ4KSB7CiAgICAgIHJldHVybiBERUNJTUFMUzsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICByZXF1aXJlKGFsbG93VHJhbnNmZXIpOwogICAgICAgIHJlcXVpcmUoYmFsYW5jZXNbbXNnLnNlbmRlcl0gPj0gX3ZhbHVlKTsKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfdmFsdWU7CiAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICByZXF1aXJlKGFsbG93VHJhbnNmZXIpOwogICAgICAgIHVpbnQyNTYgYWxsb3dhbmNlID0gYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl07CiAgICAgICAgcmVxdWlyZShiYWxhbmNlc1tfZnJvbV0gPj0gX3ZhbHVlICYmIGFsbG93YW5jZSA+PSBfdmFsdWUpOwogICAgICAgIGJhbGFuY2VzW190b10gKz0gX3ZhbHVlOwogICAgICAgIGJhbGFuY2VzW19mcm9tXSAtPSBfdmFsdWU7CiAgICAgICAgaWYgKGFsbG93YW5jZSA8IE1BWF9VSU5UMjU2KSB7CiAgICAgICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdIC09IF92YWx1ZTsKICAgICAgICB9CiAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgewogICAgICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogICAgfQoKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICByZXF1aXJlKGFsbG93VHJhbnNmZXIpOwogICAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgLy8gVG9rZW4gb3duZXIgY2FuIGFwcHJvdmUgZm9yIGBzcGVuZGVyYCB0byB0cmFuc2ZlckZyb20oLi4uKSBgdG9rZW5zYAogICAgLy8gZnJvbSB0aGUgdG9rZW4gb3duZXIncyBhY2NvdW50LiBUaGUgYHNwZW5kZXJgIGNvbnRyYWN0IGZ1bmN0aW9uCiAgICAvLyBgcmVjZWl2ZUFwcHJvdmFsKC4uLilgIGlzIHRoZW4gZXhlY3V0ZWQKICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgZnVuY3Rpb24gYXBwcm92ZUFuZENhbGwoYWRkcmVzcyBzcGVuZGVyLCB1aW50IHRva2VucywgYnl0ZXMgZGF0YSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIHJlcXVpcmUoYWxsb3dUcmFuc2Zlcik7CiAgICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtzcGVuZGVyXSA9IHRva2VuczsKICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBzcGVuZGVyLCB0b2tlbnMpOwogICAgICAgIEFwcHJvdmVBbmRDYWxsRmFsbEJhY2soc3BlbmRlcikucmVjZWl2ZUFwcHJvdmFsKG1zZy5zZW5kZXIsIHRva2VucywgdGhpcywgZGF0YSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2IHJlbWFpbmluZykgewogICAgICAgIHJldHVybiBhbGxvd2VkW19vd25lcl1bX3NwZW5kZXJdOwogICAgfSAgIAogIC8vCiAgLy8KCgogIC8vCiAgLy8gQ29pbiBzYWxlIGNvbnRyb2xsZWQgYnkgZXh0ZXJuYWwgc21hcnQgY29udHJhY3QKICAvLwogICAgYm9vbCBwdWJsaWMgY29pblNhbGVTdGFydGVkOwogICAgYWRkcmVzcyBwdWJsaWMgbWludGFibGVBZGRyZXNzOwogICAgdWludCBwdWJsaWMgdG90YWxUb2tlblNlbGxBbW91bnQ7CiAgICBmdW5jdGlvbiBtaW50Q29pbnMoYWRkcmVzcyB0bywgdWludDI1NiBhbW91bnQpIGV4dGVybmFsIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICByZXF1aXJlKGNvaW5TYWxlU3RhcnRlZCk7CiAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBtaW50YWJsZUFkZHJlc3MpOwogICAgICByZXF1aXJlKGJhbGFuY2VzW3RoaXNdID49IGFtb3VudCk7CiAgICAgIGJhbGFuY2VzW3RoaXNdIC09IGFtb3VudDsKICAgICAgYmFsYW5jZXNbdG9dICs9IGFtb3VudDsKICAgICAgdWludCBib251cyA9IGFtb3VudC5kaXYoMTAwKTsKICAgICAgYWRkcmVzcyB1bml2ZXJzZU93bmVyID0geWN0Lm93bmVyT2YoMCk7CiAgICAgIGJhbGFuY2VzW3VuaXZlcnNlT3duZXJdICs9IGJvbnVzOwogICAgICB0b3RhbFN1cHBseSArPSBib251czsKICAgICAgVHJhbnNmZXIodGhpcywgdG8sIGFtb3VudCk7CiAgICAgIFRyYW5zZmVyKGFkZHJlc3MoMCksIHVuaXZlcnNlT3duZXIsIGJvbnVzKTsKICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgICBmdW5jdGlvbiBzdGFydENvaW5TYWxlKHVpbnQgdG90YWxUb2tlbnMsIGFkZHJlc3Mgc2VsbGluZ0NvbnRyYWN0QWRkcmVzcykgcHVibGljIG9ubHlDRU8gewogICAgICByZXF1aXJlKCFjb2luU2FsZVN0YXJ0ZWQpOwogICAgICB0b3RhbFRva2VuU2VsbEFtb3VudCA9IHRvdGFsVG9rZW5zOwogICAgICBtaW50YWJsZUFkZHJlc3MgPSBzZWxsaW5nQ29udHJhY3RBZGRyZXNzOwogICAgfQogICAgZnVuY3Rpb24gYWNjZXB0Q29pblNhbGUoKSBwdWJsaWMgb25seUNFTyB7CiAgICAgIGNvaW5TYWxlU3RhcnRlZCA9IHRydWU7CiAgICAgIGJhbGFuY2VzW3RoaXNdID0gdG90YWxUb2tlblNlbGxBbW91bnQ7CiAgICAgIHRvdGFsU3VwcGx5ICs9IHRvdGFsVG9rZW5TZWxsQW1vdW50OwogICAgfQogICAgZnVuY3Rpb24gY2hhbmdlVHJhbnNmZXIoYm9vbCBhbGxvd1RyYW5zZmVycykgZXh0ZXJuYWwgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBtaW50YWJsZUFkZHJlc3MpOwogICAgICAgIGFsbG93VHJhbnNmZXIgPSBhbGxvd1RyYW5zZmVyczsKICAgIH0KICAvLwogIC8vCgoKICBmdW5jdGlvbiBtaW50Q29pbnNGb3JPbGRDb2xsZWN0aWJsZXMoYWRkcmVzcyB0bywgdWludDI1NiBhbW91bnQsIGFkZHJlc3MgdW5pdmVyc2VPd25lcikgZXh0ZXJuYWwgb25seVlDQyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgIGJhbGFuY2VzW3RvXSArPSBhbW91bnQ7CiAgICB1aW50IGJvbnVzID0gYW1vdW50LmRpdigxMDApOwogICAgYmFsYW5jZXNbdW5pdmVyc2VPd25lcl0gKz0gYm9udXM7CiAgICB0b3RhbFN1cHBseSArPSBhbW91bnQgKyBib251czsKICAgIFRyYW5zZmVyKGFkZHJlc3MoMCksIHRvLCBhbW91bnQpOwogICAgVHJhbnNmZXIoYWRkcmVzcygwKSwgdW5pdmVyc2VPd25lciwgYW1vdW50KTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgZnVuY3Rpb24gcGF5Rm9yVXBncmFkZShhZGRyZXNzIHVzZXIsIHVpbnQgcHJpY2UpIGV4dGVybmFsIG9ubHlZQ0MgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICByZXF1aXJlKGJhbGFuY2VzW3VzZXJdID49IHByaWNlKTsKICAgIGJhbGFuY2VzW3VzZXJdIC09IHByaWNlOwogICAgdG90YWxTdXBwbHkgLT0gcHJpY2U7CiAgICBUcmFuc2Zlcih1c2VyLCBhZGRyZXNzKDApLCBwcmljZSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIHBheW91dEZvck1pbmluZyhhZGRyZXNzIHVzZXIsIHVpbnQgYW1vdW50KSBleHRlcm5hbCBvbmx5WUNDIHsKICAgIGJhbGFuY2VzW3VzZXJdICs9IGFtb3VudDsKICAgIHRvdGFsU3VwcGx5ICs9IGFtb3VudDsKICAgIFRyYW5zZmVyKGFkZHJlc3MoMCksIHVzZXIsIGFtb3VudCk7CiAgfQoKICBmdW5jdGlvbiB0cmFkZVByZVRva2VuKHVpbnQgcHJpY2UsIGFkZHJlc3MgYnV5ZXIsIGFkZHJlc3Mgc2VsbGVyLCB1aW50IGJ1cm5QZXJjZW50LCBhZGRyZXNzIHVuaXZlcnNlT3duZXIpIGV4dGVybmFsIG9ubHlZQ0MgewogICAgcmVxdWlyZShiYWxhbmNlc1tidXllcl0gPj0gcHJpY2UpOwogICAgYmFsYW5jZXNbYnV5ZXJdIC09IHByaWNlOwogICAgaWYgKHNlbGxlciAhPSBhZGRyZXNzKDApKSB7CiAgICAgIHVpbnQyNTYgb25lUGVyY2VudCA9IHByaWNlLmRpdigxMDApOwogICAgICB1aW50MjU2IHBheW1lbnQgPSBwcmljZS5zdWIob25lUGVyY2VudC5tdWwoYnVyblBlcmNlbnQrMSkpOwogICAgICAvLyBQYXltZW50IGZvciBvbGQgb3duZXIKICAgICAgYmFsYW5jZXNbc2VsbGVyXSArPSBwYXltZW50OwogICAgICB0b3RhbFN1cHBseSAtPSBvbmVQZXJjZW50Lm11bChidXJuUGVyY2VudCk7CiAgICAgIGJhbGFuY2VzW3VuaXZlcnNlT3duZXJdICs9IG9uZVBlcmNlbnQ7CiAgICAgIFRyYW5zZmVyKGJ1eWVyLCBzZWxsZXIsIHBheW1lbnQpOwogICAgICBUcmFuc2ZlcihidXllciwgdW5pdmVyc2VPd25lciwgb25lUGVyY2VudCk7CiAgICB9ZWxzZSB7CiAgICAgIHRvdGFsU3VwcGx5IC09IHByaWNlOwogICAgfQogIH0KCn0='.
	

]
