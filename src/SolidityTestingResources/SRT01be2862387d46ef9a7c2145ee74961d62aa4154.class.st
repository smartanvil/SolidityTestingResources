Class {
	#name : #SRT01be2862387d46ef9a7c2145ee74961d62aa4154,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT01be2862387d46ef9a7c2145ee74961d62aa4154 >> base64 [
	^ ''.
	

]
