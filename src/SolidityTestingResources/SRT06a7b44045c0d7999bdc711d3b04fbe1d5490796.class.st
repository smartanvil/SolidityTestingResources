Class {
	#name : #SRT06a7b44045c0d7999bdc711d3b04fbe1d5490796,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT06a7b44045c0d7999bdc711d3b04fbe1d5490796 >> base64 [
	^ ''.
	

]
