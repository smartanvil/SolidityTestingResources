Class {
	#name : #SRT86c6A7ee4eC24d25456580D81F7e8f486186eC91,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT86c6A7ee4eC24d25456580D81F7e8f486186eC91 >> base64 [
	^ ''.
	

]
