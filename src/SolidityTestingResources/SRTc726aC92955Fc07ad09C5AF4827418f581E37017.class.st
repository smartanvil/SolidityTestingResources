Class {
	#name : #SRTc726aC92955Fc07ad09C5AF4827418f581E37017,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTc726aC92955Fc07ad09C5AF4827418f581E37017 >> base64 [
	^ 'Y29udHJhY3QgQ3J5cHRvSGlsbCB7CiAgICAKICBhZGRyZXNzIGFkbWluOwogIGFkZHJlc3MgbGVhZGVyOwogIGJ5dGVzMzIgbGVhZGVySGFzaDsKICBieXRlczMyIGRpZmZpY3VsdHk7CiAgYnl0ZXMzMiBkaWZmaWN1bHR5V29ybGRSZWNvcmQ7CiAgdWludCBmYWxsZW5MZWFkZXJzOwogIHVpbnQgc3RhcnRpbmdUaW1lOwogIHVpbnQgZ2FtZUxlbmd0aDsKICBzdHJpbmcgbGVhZGVyTWVzc2FnZTsKICBzdHJpbmcgZGVmYXVsdExlYWRlck1lc3NhZ2U7CiAgCiAgZXZlbnQgQmVnaW4oc3RyaW5nIGxvZyk7CiAgZXZlbnQgTGVhZGVyKHN0cmluZyBsb2csIGFkZHJlc3MgbmV3TGVhZGVyLCBieXRlczMyIG5ld0hhc2gpOwogIGV2ZW50IEdhbWVPdmVyKHN0cmluZyBsb2cpOwogIGV2ZW50IFdpbm5lciAoc3RyaW5nIGxvZywgYWRkcmVzcyB3aW5uZXIpOwogIGV2ZW50IE5vV2lubmVyIChzdHJpbmcgbG9nKTsKICBldmVudCBXb3JsZFJlY29yZCAoc3RyaW5nIGxvZywgYnl0ZXMzMiBEaWZmaWN1bHR5UmVjb3JkLCBhZGRyZXNzIFJlY29yZEhvbGRlcik7CiAgCiAgZnVuY3Rpb24gQ3J5cHRvSGlsbCgpeyAKICAgICAgCiAgICAvL0FkbWluIEJhY2tkb29yCiAgICBhZG1pbiA9IG1zZy5zZW5kZXI7CgogICAgLy9TdGFydGluZyBUaW1lCiAgICBzdGFydGluZ1RpbWUgPSBibG9jay50aW1lc3RhbXA7CiAgICAKICAgIC8vR2FtZSBMZW5ndGggKFRPRE86IENoYW5nZSB0byAxIHdlZWtzKQogICAgZ2FtZUxlbmd0aCA9IDEgd2Vla3M7CgogICAgLy9Jbml0aWFsIHNlZWQgZm9yIHRoZSBmaXJzdCBjaGFsbGVuZ2UuIFRoaXMgc2hvdWxkIGFsd2F5cyBiZSBpbiByb3RhdGlvbiBhZnRlcndhcmQuCiAgICBsZWFkZXJIYXNoID0gc2hhMygiMDlGOTExMDI5RDc0RTM1QkQ4NDE1NkM1NjM1Njg4QzAiKTsKCiAgICAvL0ZpcnN0IGxlYWRlciBpcyB0aGUgY3JlYXRvciBvZiB0aGUgY29udHJhY3QKICAgIGxlYWRlciA9IG1zZy5zZW5kZXI7CgogICAgLy9UaGUgcGxhY2Vob2xkZXIgbGVhZGVyIG1lc3NhZ2UKICAgIGRlZmF1bHRMZWFkZXJNZXNzYWdlID0gIklmIHlvdSdyZSB0aGlzIHdlZWtzIGxlYWRlciwgeW91IG93biB0aGlzIGZpZWxkLiBXcml0ZSBhIG1lc3NhZ2UgaGVyZS4iOwogICAgbGVhZGVyTWVzc2FnZSA9IGRlZmF1bHRMZWFkZXJNZXNzYWdlOwogICAgCiAgICAvL1RoaXMgZGlmZmljdWx0eSBzdGFydHMgYXMgZWFzeSBhcyBwb3NzaWJsZS4gQW55IFhPUiB3aWxsIGJlIGxlc3MsIHRvIHN0YXJ0LgogICAgZGlmZmljdWx0eSA9IGxlYWRlckhhc2g7CiAgICAKICAgIC8vU2VlZCB0aGUgd29ybGQgcmVjb3JkCiAgICBkaWZmaWN1bHR5V29ybGRSZWNvcmQgPSBsZWFkZXJIYXNoOwogICAgCiAgICAvL0NvdW50ZXIgZm9yIHN1Y2Nlc3NmdWwgY29sbGlzaW9ucyB0aGlzIHdlZWsuCiAgICBmYWxsZW5MZWFkZXJzID0gMDsKCiAgICBCZWdpbigiQ29sbGlkZSB0aGUgbW9zdCBiaXRzIG9mIHRoZSBsZWFkZXIncyBoYXNoIHRvIHJlcGxhY2UgdGhlIGxlYWRlci4gTGVhZGVyIHdpbGwgd2luIGFueSBib3VudHkgYXQgdGhlIGVuZCBvZiB0aGUgd2Vlay4iKTsKCiAgfQogIAogIGZ1bmN0aW9uIHJlc2V0KCkgcHJpdmF0ZXsKICAgICAgCiAgICAgIC8vTWFrZSB0aGUgaGFzaCB1bnByZWRpY3RhYmxlLgogICAgICBsZWFkZXJIYXNoID0gc2hhMyhibG9jay50aW1lc3RhbXApOwogICAgICAKICAgICAgLy9SZXNldCB0aGUgbGVhZGVyIG1lc3NhZ2UKICAgICAgbGVhZGVyTWVzc2FnZSA9IGRlZmF1bHRMZWFkZXJNZXNzYWdlOwogICAgICBkaWZmaWN1bHR5ID0gbGVhZGVySGFzaDsKICAgICAgbGVhZGVyID0gYWRtaW47CiAgICAgIGZhbGxlbkxlYWRlcnMgPSAwOwogIH0KICAKICBmdW5jdGlvbiBjaGVja0RhdGUoKSBwcml2YXRlIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAKICAgICAgLy9BcmUgd2Ugb25lIHdlZWsgYmV5b25kIHRoZSBsYXN0IGdhbWU/IFRPRE8gY2hhbmdlIHRpbWUgZm9yIG1haW5uZXQKICAgICAgaWYgKGJsb2NrLnRpbWVzdGFtcCA+IChzdGFydGluZ1RpbWUgKyBnYW1lTGVuZ3RoKSkgewogICAgICAgICAgCiAgICAgICAgICAvL0lmIHNvLCBsb2cgd2lubmVyLiBJZiB0aGUgYWRtaW4gIndpbnMiLCBpdCdzIGJlY2F1c2Ugbm8gb25lIGVsc2Ugd29uLgogICAgICAgICAgaWYobGVhZGVyICE9IGFkbWluKXsKICAgICAgICAgICAgV2lubmVyKCJWaWN0b3J5ISBHYW1lIHdpbGwgYmUgcmVzZXQgdG8gZW5kIGluIDEgd2VlayAoaW4gYmxvY2sgdGltZSkuIiwgbGVhZGVyKTsKICAgICAgICAgICAgbGVhZGVyLnNlbmQodGhpcy5iYWxhbmNlKTsKICAgICAgICAgIH1lbHNlIE5vV2lubmVyKCJObyB3aW5uZXIhIEdhbWUgd2lsbCBiZSByZXNldCB0byBlbmQgaW4gMSB3ZWVrIChpbiBibG9jayB0aW1lKS4iKTsKCiAgICAgICAgICBzdGFydGluZ1RpbWUgPSBibG9jay50aW1lc3RhbXA7CgogICAgICAgICAgLy9SZXNldAogICAgICAgICAgcmVzZXQoKTsKICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICB9CiAgICAgIHJldHVybiBmYWxzZTsKICB9CgogIGZ1bmN0aW9uIG92ZXJ0aHJvdyhzdHJpbmcgY2hhbGxlbmdlRGF0YSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKXsKICAgICAgICAKICAgICAgICAvL0NyZWF0ZSBoYXNoIGZyb20gcGxheWVyIGRhdGEgc2VudCB0byBjb250cmFjdAogICAgICAgIHZhciBjaGFsbGVuZ2VIYXNoID0gc2hhMyhjaGFsbGVuZ2VEYXRhKTsKCiAgICAgICAgLy9DaGVjayBPbmU6IFN1Ym1pc3Npb24gdG9vIGxhdGUsIHJlc2V0IGdhbWUgdy8gbmV3IGhhc2gKICAgICAgICBpZihjaGVja0RhdGUoKSkKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIAogICAgICAgIC8vQ2hlY2sgVHdvOiBDaGVhdGluZyAtIG9mIGNvdXJzZSBsYXN0IGhhc2ggd2lsbCBjb2xsaWRlIQogICAgICAgIGlmKGNoYWxsZW5nZUhhc2ggPT0gbGVhZGVySGFzaCkKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwoKICAgICAgICAvL0NoZWNrIFRocmVlOiBDb3JlIGdhbWluZyBsb2dpYyBmYXZvcmluZyBjb2xsaXNpb25zIG9mIE1TQgogICAgICAgIGlmKChjaGFsbGVuZ2VIYXNoIF4gbGVhZGVySGFzaCkgPiBkaWZmaWN1bHR5KQogICAgICAgICAgcmV0dXJuIGZhbHNlOwoKICAgICAgICAvL0lmIHBsYXllciBzdXJ2aXZlZCB0aGUgY2hlY2tzLCB0aGV5J3ZlIG92ZXJjb21lIGRpZmZpY3VsdHkgbGV2ZWwgYW5kIGJlYXQgdGhlIGxlYWRlci4KICAgICAgICAvL1VwZGF0ZSB0aGUgZGlmZmljdWx0eS4gVGhpcyBtYWtlcyB0aGUgZ2FtZSBwcm9ncmVzc2l2ZWx5IGhhcmRlciB0aHJvdWdoIHRoZSB3ZWVrLgogICAgICAgIGRpZmZpY3VsdHkgPSAoY2hhbGxlbmdlSGFzaCBeIGxlYWRlckhhc2gpOwogICAgICAgIAogICAgICAgIC8vRGlkIHRoZXkgc2V0IGEgcmVjb3JkPwogICAgICAgIGNoYWxsZW5nZVdvcmxkUmVjb3JkKGRpZmZpY3VsdHkpOwogICAgICAgIAogICAgICAgIC8vV2UgaGF2ZSBhIG5ldyBMZWFkZXIKICAgICAgICBsZWFkZXIgPSBtc2cuc2VuZGVyOwogICAgICAgIAogICAgICAgIC8vVGhlIHdpbm5pbmcgaGFzaCBpcyBvdXIgbmV3IGhhc2guIFRoaXMgdW5kb2VzIGFueSB3b3JrIGJlaW5nIGRvbmUgYnkgY29tcGV0aXRpb24hCiAgICAgICAgbGVhZGVySGFzaCA9IGNoYWxsZW5nZUhhc2g7CiAgICAgICAgCiAgICAgICAgLy9Bbm5vdW5jZSBvdXIgbmV3IHZpY3Rvci4gQ29uZ3JhdHVsYXRpb25zISAgICAKICAgICAgICBMZWFkZXIoIk5ldyBsZWFkZXIhIFRoaXMgaXMgdGhlaXIgYWRkcmVzcywgYW5kIHRoZSBuZXcgaGFzaCB0byBjb2xsaWRlLiIsIGxlYWRlciwgbGVhZGVySGFzaCk7CiAgICAgICAgCiAgICAgICAgLy9LZWVwIHRyYWNrIG9mIGhvdyBtYW55IG5ldyBsZWFkZXJzIHdlJ3ZlIGhhZCB0aGlzIHdlZWsuCiAgICAgICAgZmFsbGVuTGVhZGVycysrOwogICAgICAgIAogICAgICAgIHJldHVybiB0cnVlOwogIH0KICAKICBmdW5jdGlvbiBjaGFsbGVuZ2VXb3JsZFJlY29yZCAoYnl0ZXMzMiBkaWZmaWN1bHR5Q2hhbGxlbmdlKSBwcml2YXRlIHsKICAgICAgaWYoZGlmZmljdWx0eUNoYWxsZW5nZSA8IGRpZmZpY3VsdHlXb3JsZFJlY29yZCkgewogICAgICAgIGRpZmZpY3VsdHlXb3JsZFJlY29yZCA9IGRpZmZpY3VsdHlDaGFsbGVuZ2U7CiAgICAgICAgV29ybGRSZWNvcmQoIkEgcmVjb3JkIHNldHRpbmcgY29sbGlzaW9uIG9jY2N1cmVkISIsIGRpZmZpY3VsdHlXb3JsZFJlY29yZCwgbXNnLnNlbmRlcik7CiAgICAgIH0KICB9CiAgCiAgZnVuY3Rpb24gY2hhbmdlTGVhZGVyTWVzc2FnZShzdHJpbmcgbmV3TWVzc2FnZSl7CiAgICAgICAgLy9UaGUgbGVhZGVyIGdldHMgdG8gdGFsayBhbGwga2luZHMgb2Ygc2hpdC4gSWYgYWJ1c2UsIG1pZ2h0IHJlbW92ZS4KICAgICAgICBpZihtc2cuc2VuZGVyID09IGxlYWRlcikKICAgICAgICAgICAgbGVhZGVyTWVzc2FnZSA9IG5ld01lc3NhZ2U7CiAgfQogIAogIC8vVGhlIGZvbGxvd2luZyBmdW5jdGlvbnMgZGVzaWduZWQgZm9yIG1pc3QgVUkKICBmdW5jdGlvbiBjdXJyZW50TGVhZGVyKCkgY29uc3RhbnQgcmV0dXJucyAoYWRkcmVzcyBDdXJyZW50TGVhZGVyQWRkcmVzcyl7CiAgICAgIHJldHVybiBsZWFkZXI7CiAgfQogIGZ1bmN0aW9uIERpZmZpY3VsdHkoKSBjb25zdGFudCByZXR1cm5zIChieXRlczMyIFhvck11c3RCZUxlc3NUaGFuKXsKICAgICAgcmV0dXJuIGRpZmZpY3VsdHk7CiAgfQogIGZ1bmN0aW9uIExlYWRlckhhc2goKSBjb25zdGFudCByZXR1cm5zIChieXRlczMyIGxlYWRpbmdIYXNoKXsKICAgICAgcmV0dXJuIGxlYWRlckhhc2g7CiAgfQogIGZ1bmN0aW9uIExlYWRlck1lc3NhZ2UoKSBjb25zdGFudCByZXR1cm5zIChzdHJpbmcgTWVzc2FnZU9mVGhlRGF5KXsKICAgICAgcmV0dXJuIGxlYWRlck1lc3NhZ2U7CiAgfQogIGZ1bmN0aW9uIEZhbGxlbkxlYWRlcnMoKSBjb25zdGFudCByZXR1cm5zICh1aW50IFZpY3RvcnMpewogICAgICByZXR1cm4gZmFsbGVuTGVhZGVyczsKICB9CiAgZnVuY3Rpb24gR2FtZUVuZHMoKSBjb25zdGFudCByZXR1cm5zICh1aW50IEVuZGluZ1RpbWUpewogICAgICByZXR1cm4gc3RhcnRpbmdUaW1lICsgZ2FtZUxlbmd0aDsKICB9CgogIGZ1bmN0aW9uIGtpbGwoKXsKICAgICAgaWYgKG1zZy5zZW5kZXIgPT0gYWRtaW4pewogICAgICAgIEdhbWVPdmVyKCJUaGUgQ3J5cHRvIEhpbGwgaGFzIGVuZGVkLiIpOwogICAgICAgIHNlbGZkZXN0cnVjdChhZG1pbik7CiAgICAgIH0KICB9Cn0='.
	

]
