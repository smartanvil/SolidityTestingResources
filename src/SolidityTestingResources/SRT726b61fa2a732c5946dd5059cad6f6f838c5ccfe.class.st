Class {
	#name : #SRT726b61fa2a732c5946dd5059cad6f6f838c5ccfe,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT726b61fa2a732c5946dd5059cad6f6f838c5ccfe >> base64 [
	^ ''.
	

]
