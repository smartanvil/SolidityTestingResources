Class {
	#name : #SRT2ea13316d1e54e6de5d4a7e167071477a1feb003,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT2ea13316d1e54e6de5d4a7e167071477a1feb003 >> base64 [
	^ ''.
	

]
