Class {
	#name : #SRT951a50803bcef4a9f7878d85fdb6292beb00ca33,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT951a50803bcef4a9f7878d85fdb6292beb00ca33 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7CgovKioKICogQHRpdGxlIFNhZmVNYXRoCiAqIEBkZXYgTWF0aCBvcGVyYXRpb25zIHdpdGggc2FmZXR5IGNoZWNrcyB0aGF0IHRocm93IG9uIGVycm9yCiAqLwpsaWJyYXJ5IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAgdWludDI1NiBjID0gYSAvIGI7CiAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgIC8vIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOyAvLyBUaGVyZSBpcyBubyBjYXNlIGluIHdoaWNoIHRoaXMgZG9lc24ndCBob2xkCiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgYXNzZXJ0KGMgPj0gYSk7CiAgICByZXR1cm4gYzsKICB9Cn0KCi8qKgogKiBAdGl0bGUgQ3Jvd2RzYWxlCiAqIEBkZXYgQ3Jvd2RzYWxlIGlzIGEgYmFzZSBjb250cmFjdCBmb3IgbWFuYWdpbmcgYSB0b2tlbiBjcm93ZHNhbGUuCiAqIENyb3dkc2FsZXMgaGF2ZSBhIHN0YXJ0IGFuZCBlbmQgdGltZXN0YW1wcywgd2hlcmUgaW52ZXN0b3JzIGNhbiBtYWtlCiAqIHRva2VuIHB1cmNoYXNlcyBhbmQgdGhlIGNyb3dkc2FsZSB3aWxsIGFzc2lnbiB0aGVtIHRva2VucyBiYXNlZAogKiBvbiBhIHRva2VuIHBlciBFVEggcmF0ZS4gRnVuZHMgY29sbGVjdGVkIGFyZSBmb3J3YXJkZWQgdG8gYSB3YWxsZXQKICogYXMgdGhleSBhcnJpdmUuCiAqLwpjb250cmFjdCB0b2tlbiB7IGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgcmVjZWl2ZXIsIHVpbnQgYW1vdW50KXsgIH0gfQpjb250cmFjdCBDcm93ZHNhbGUgewogIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwoKICAvLyB1aW50MjU2IGR1cmF0aW9uSW5NaW51dGVzOwogIC8vIGFkZHJlc3Mgd2hlcmUgZnVuZHMgYXJlIGNvbGxlY3RlZAogIGFkZHJlc3MgcHVibGljIHdhbGxldDsKICAvLyB0b2tlbiBhZGRyZXNzCiAgYWRkcmVzcyBwdWJsaWMgYWRkcmVzc09mVG9rZW5Vc2VkQXNSZXdhcmQ7CgogIHVpbnQyNTYgcHVibGljIHByaWNlID0gMzAwOwoKICB0b2tlbiB0b2tlblJld2FyZDsKCiAgLy8gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50KSBwdWJsaWMgY29udHJpYnV0aW9uczsKICAKCgogIC8vIHN0YXJ0IGFuZCBlbmQgdGltZXN0YW1wcyB3aGVyZSBpbnZlc3RtZW50cyBhcmUgYWxsb3dlZCAoYm90aCBpbmNsdXNpdmUpCiAgLy8gdWludDI1NiBwdWJsaWMgc3RhcnRUaW1lOwogIC8vIHVpbnQyNTYgcHVibGljIGVuZFRpbWU7CiAgLy8gYW1vdW50IG9mIHJhaXNlZCBtb25leSBpbiB3ZWkKICB1aW50MjU2IHB1YmxpYyB3ZWlSYWlzZWQ7CgogIC8qKgogICAqIGV2ZW50IGZvciB0b2tlbiBwdXJjaGFzZSBsb2dnaW5nCiAgICogQHBhcmFtIHB1cmNoYXNlciB3aG8gcGFpZCBmb3IgdGhlIHRva2VucwogICAqIEBwYXJhbSBiZW5lZmljaWFyeSB3aG8gZ290IHRoZSB0b2tlbnMKICAgKiBAcGFyYW0gdmFsdWUgd2VpcyBwYWlkIGZvciBwdXJjaGFzZQogICAqIEBwYXJhbSBhbW91bnQgYW1vdW50IG9mIHRva2VucyBwdXJjaGFzZWQKICAgKi8KICBldmVudCBUb2tlblB1cmNoYXNlKGFkZHJlc3MgaW5kZXhlZCBwdXJjaGFzZXIsIGFkZHJlc3MgaW5kZXhlZCBiZW5lZmljaWFyeSwgdWludDI1NiB2YWx1ZSwgdWludDI1NiBhbW91bnQpOwoKCiAgZnVuY3Rpb24gQ3Jvd2RzYWxlKCkgewogICAgLy95b3UgaGF2ZSB0byBkbyBjdXN0b21pc2F0aW9uIGhlcmUgb25seQogICAgLy9Zb3Ugd2lsbCBjaGFuZ2UgdGhpcyB0byB5b3VyIHdhbGxldCB3aGVyZSB5b3UgbmVlZCB0aGUgRVRIIAogICAgd2FsbGV0ID0gMHhFODM2OThFNTVjNEU2ODViMDA1NzA0NEJENzY3NzNhRTFFQTE5REIzOy8vIHRoaXMgaXMgd2hlcmUgeW91IHNldCB0aGUgV2FsbGV0IHdoaWNoIHdpbGwgcmVjZWl2ZSBhbGwgdGhlIGZ1bmRzCiAgICAvLyBkdXJhdGlvbkluTWludXRlcyA9IF9kdXJhdGlvbkluTWludXRlczsgCiAgICAvL0hlcmUgd2lsbCBjb21lIHRoZSBjaGVja3N1bSBhZGRyZXNzIHdlIGdvdAogICAgYWRkcmVzc09mVG9rZW5Vc2VkQXNSZXdhcmQgPSAweDE2NzMyNmU4OTQyRmQ0NzFiNUFkNzlhZERmNjY3N2RlNzNhMjk3MTg7CiAgICAvL3NlZSBpdCBoYXMgYm90aCBsb3dlY2FlIGFuZCB1cHBlcmNhc2UgbGV0dGVycy4gd2UgY2FuIG5vdyBkZXBsb3kgaXQuCiAgICAvLyB0aGlzIGlzIHdoZXJlIHlvdSB0ZWxsIGl0IHdoaWNoIHRva2VuIHdlIGFyZSB1c2luZy4KICAgIC8vd2Ugd2lsbCBkbyBJQ08gb2YgR2F1cmF2Q29pbiBub3cuIAogICAgLy9vbmUgdHJpY2sgaGVyZSBpcyB0aGF0IGl0IHdpbGwgbm90IHdvcmsgcmlnaHQgbm93IGlmIHdlIGRlcGxveWVkLiBsb29rIGF0IHRoZSBhZGRyZXNzIG9mIGNvaW4sIGl0IGRvZXNuJ3QgaGF2ZSBhbnkgdXBwZXJjYXNlIGxldHRlciwgYWxsIGxvd2VjYXNlCiAgICAvL21lYW5zIGl0cyBub3QgY2hlY2tzdW1tZWQsIGxldCdzIGNvcHkgdGhlIGNoZWNrc3VtbWVkIGFkZHJlc3MKICAgIC8vZm9yIHRoYXQgd2UgZ28gdG8gZXRoZXJzY2FuLmlvL2FkZHJlc3MveW91cmFkZHJlc3N3aGljaHlvdXdhbnRjaGVja3N1bW1lZAoKCiAgICB0b2tlblJld2FyZCA9IHRva2VuKGFkZHJlc3NPZlRva2VuVXNlZEFzUmV3YXJkKTsKICB9CgogIGJvb2wgcHVibGljIHN0YXJ0ZWQgPSBmYWxzZTsKCiAgZnVuY3Rpb24gc3RhcnRTYWxlKCl7CiAgICBpZiAobXNnLnNlbmRlciAhPSB3YWxsZXQpIHRocm93OwogICAgc3RhcnRlZCA9IHRydWU7CiAgfQoKICBmdW5jdGlvbiBzdG9wU2FsZSgpewogICAgaWYobXNnLnNlbmRlciAhPSB3YWxsZXQpIHRocm93OwogICAgc3RhcnRlZCA9IGZhbHNlOwogIH0KCiAgZnVuY3Rpb24gc2V0UHJpY2UodWludDI1NiBfcHJpY2UpewogICAgaWYobXNnLnNlbmRlciAhPSB3YWxsZXQpIHRocm93OwogICAgcHJpY2UgPSBfcHJpY2U7CiAgfQogIGZ1bmN0aW9uIGNoYW5nZVdhbGxldChhZGRyZXNzIF93YWxsZXQpewogIAlpZihtc2cuc2VuZGVyICE9IHdhbGxldCkgdGhyb3c7CiAgCXdhbGxldCA9IF93YWxsZXQ7CiAgfQoKICBmdW5jdGlvbiBjaGFuZ2VUb2tlblJld2FyZChhZGRyZXNzIF90b2tlbil7CiAgICBpZihtc2cuc2VuZGVyIT13YWxsZXQpIHRocm93OwogICAgdG9rZW5SZXdhcmQgPSB0b2tlbihfdG9rZW4pOwogIH0KCiAgLy8gZmFsbGJhY2sgZnVuY3Rpb24gY2FuIGJlIHVzZWQgdG8gYnV5IHRva2VucwogIGZ1bmN0aW9uICgpIHBheWFibGUgewogICAgYnV5VG9rZW5zKG1zZy5zZW5kZXIpOwogIH0KCiAgLy8gbG93IGxldmVsIHRva2VuIHB1cmNoYXNlIGZ1bmN0aW9uCiAgZnVuY3Rpb24gYnV5VG9rZW5zKGFkZHJlc3MgYmVuZWZpY2lhcnkpIHBheWFibGUgewogICAgcmVxdWlyZShiZW5lZmljaWFyeSAhPSAweDApOwogICAgcmVxdWlyZSh2YWxpZFB1cmNoYXNlKCkpOwoKICAgIHVpbnQyNTYgd2VpQW1vdW50ID0gbXNnLnZhbHVlOwoKICAgIC8vIGNhbGN1bGF0ZSB0b2tlbiBhbW91bnQgdG8gYmUgc2VudAogICAgLy9oZXJlIGFsc28gd2UgbmVlZGVkIHRvIGNhbmdlLCBzb3JyeSBJIGZvcmdvdCB0byB0ZWxsIGluIHRoZSBiZWdpbmluZy4KICAgIC8vbGV0J3MgdHJ5IHRvIHVuZGVyc3RhbmQgdGhpcyBjYWxjdWxhdGlvbi4KICAgIC8vdGhlIGJ1eWVyIHNlbmQgc29tZSBFVEggCiAgICAvLzEgRVRIID0gMTAqKjE4IHdlaSAKICAgIC8vbm93IGhlcmUgY29tZXMgb3VyIHRva2VuIGRlY2ltYWxzCiAgICAvL2lmIG91ciB0b2tlbiBoYXMgMTggZGVjaW1hbHMgdGhlbiB3ZSBkb24ndCB3YW50IHRoaXMgMTAqKnNvbWV0aGluZwogICAgLy9pZiBvdXIgdG9rZW4gaGFzIDggZGVjaW1hbHMgdGhlbiB3ZSB3YW50IDEwKioxMAogICAgLy9pZiBvdXIgdG9rZW4gaGFzIDE2IGRlY2ltYWxzIHdlIHdpbGwgZGl2aWRlIGJ5IDEwKioyIAogICAgLy9ob3cgd2UgY2FsY3VsYXRlIGl0PyAKICAgIC8vMTAqKigxOC10b2tlbkRlY2ltYWxzKQogICAgLy9vdXIgdG9rZW4gaGFzIDE4IGRlY2ltYWxzIHNvIGl0IHdpbGwgYmUgMTAqKigxOC0xOCkgPSAxMCoqMCA9IDEgc28gd2UgZG9uJ3QgbmVlZCB0byBkaXZpZGUuCiAgICB1aW50MjU2IHRva2VucyA9ICh3ZWlBbW91bnQpICogcHJpY2U7Ly93ZWlhbW91bnQgKiBwcmljZSAKCiAgICAvLyB1cGRhdGUgc3RhdGUKICAgIHdlaVJhaXNlZCA9IHdlaVJhaXNlZC5hZGQod2VpQW1vdW50KTsKICAgIAogICAgLy8gaWYoY29udHJpYnV0aW9uc1ttc2cuc2VuZGVyXS5hZGQod2VpQW1vdW50KT4xMCoxMCoqMTgpIHRocm93OwogICAgLy8gY29udHJpYnV0aW9uc1ttc2cuc2VuZGVyXSA9IGNvbnRyaWJ1dGlvbnNbbXNnLnNlbmRlcl0uYWRkKHdlaUFtb3VudCk7CgogICAgdG9rZW5SZXdhcmQudHJhbnNmZXIoYmVuZWZpY2lhcnksIHRva2Vucyk7CiAgICBUb2tlblB1cmNoYXNlKG1zZy5zZW5kZXIsIGJlbmVmaWNpYXJ5LCB3ZWlBbW91bnQsIHRva2Vucyk7CiAgICBmb3J3YXJkRnVuZHMoKTsKICB9CgogIC8vIHNlbmQgZXRoZXIgdG8gdGhlIGZ1bmQgY29sbGVjdGlvbiB3YWxsZXQKICAvLyBvdmVycmlkZSB0byBjcmVhdGUgY3VzdG9tIGZ1bmQgZm9yd2FyZGluZyBtZWNoYW5pc21zCiAgZnVuY3Rpb24gZm9yd2FyZEZ1bmRzKCkgaW50ZXJuYWwgewogICAgLy8gd2FsbGV0LnRyYW5zZmVyKG1zZy52YWx1ZSk7CiAgICBpZiAoIXdhbGxldC5zZW5kKG1zZy52YWx1ZSkpIHsKICAgICAgdGhyb3c7CiAgICB9CiAgfQoKICAvLyBAcmV0dXJuIHRydWUgaWYgdGhlIHRyYW5zYWN0aW9uIGNhbiBidXkgdG9rZW5zCiAgZnVuY3Rpb24gdmFsaWRQdXJjaGFzZSgpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKGJvb2wpIHsKICAgIGJvb2wgd2l0aGluUGVyaW9kID0gc3RhcnRlZDsKICAgIGJvb2wgbm9uWmVyb1B1cmNoYXNlID0gbXNnLnZhbHVlICE9IDA7CiAgICByZXR1cm4gd2l0aGluUGVyaW9kICYmIG5vblplcm9QdXJjaGFzZTsKICB9CgogIGZ1bmN0aW9uIHdpdGhkcmF3VG9rZW5zKHVpbnQyNTYgX2Ftb3VudCkgewogICAgaWYobXNnLnNlbmRlciE9d2FsbGV0KSB0aHJvdzsKICAgIHRva2VuUmV3YXJkLnRyYW5zZmVyKHdhbGxldCxfYW1vdW50KTsKICB9Cn0='.
	

]
