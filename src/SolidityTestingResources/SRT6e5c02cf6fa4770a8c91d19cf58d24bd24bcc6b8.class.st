Class {
	#name : #SRT6e5c02cf6fa4770a8c91d19cf58d24bd24bcc6b8,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT6e5c02cf6fa4770a8c91d19cf58d24bd24bcc6b8 >> base64 [
	^ ''.
	

]
