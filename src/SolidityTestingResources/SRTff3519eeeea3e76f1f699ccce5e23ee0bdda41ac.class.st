Class {
	#name : #SRTff3519eeeea3e76f1f699ccce5e23ee0bdda41ac,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTff3519eeeea3e76f1f699ccce5e23ee0bdda41ac >> base64 [
	^ ''.
	

]
