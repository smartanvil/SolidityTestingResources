Class {
	#name : #SRTeC94d178D97bAC527FDCD4b3D4bf41b57D640c5B,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTeC94d178D97bAC527FDCD4b3D4bf41b57D640c5B >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuODsKCgpjb250cmFjdCB0b2tlbiB7ZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyByZWNlaXZlciwgdWludCBhbW91bnQpeyB9fQoKY29udHJhY3QgQ3Jvd2RzYWxlIHsKICAgIHVpbnQgcHVibGljIGFtb3VudFJhaXNlZDsgdWludCBwdWJsaWMgcmVzQW1vdW50OyB1aW50IHB1YmxpYyBzb2xkVG9rZW5zOwogICAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBiYWxhbmNlT2Y7CiAgICBldmVudCBHb2FsUmVhY2hlZChhZGRyZXNzIGJlbmVmaWNpYXJ5LCB1aW50IGFtb3VudFJhaXNlZCk7CiAgICBldmVudCBGdW5kVHJhbnNmZXIoYWRkcmVzcyBiYWNrZXIsIHVpbnQgYW1vdW50LCBib29sIGlzQ29udHJpYnV0aW9uKTsKICAgIGJvb2wgcHVibGljIGNyb3dkc2FsZUNsb3NlZCA9IGZhbHNlOwogICAgYm9vbCBwdWJsaWMgbWluaW11bVRhcmdldFJlYWNoZWQgPSBmYWxzZTsKCiAgICAvLyBpbml0aWFsaXphdGlvbgogICAgYWRkcmVzcyBwdWJsaWMgYmVuZWZpY2lhcnkgPSAweDM1QTlkZDVhNmI1OWVFNWUyOEZDNTE5ODAyQTQ2ODM3OTU3M2FmMzk7LyppZlN1Y2Nlc3NmdWxTZW5kVG8qLwogICAgdWludCBwdWJsaWMgcHJpY2UgPSAwLjAwMTYgZXRoZXI7Lypjb3N0T2ZFYWNoVG9rZW4qLwogICAgdWludCBwdWJsaWMgbWluaW11bVRhcmdldCA9IDMgKiBwcmljZTsvKm1pbmltdW1UYXJnZXRJblRva2VucyovCiAgICB1aW50IHB1YmxpYyBtYXhpbXVtVGFyZ2V0ID0gMTAgKiBwcmljZTsvKm1heGltdW1UYXJnZXRJblRva2VucyovCiAgICB1aW50IHB1YmxpYyBkZWFkbGluZSA9ICBub3cgKyAyMCAqIDEgbWludXRlczsvKmR1cmF0aW9uSW5NaW51dGVzKi8KICAgIHRva2VuIHB1YmxpYyB0b2tlblJld2FyZCA9IHRva2VuKDB4YzU3MDgwMGI4ZTRBMjAyZDA5MjhlYTVkQzVEQ2I5NjU3M0I2RkRlOCk7LyphZGRyZXNzT2ZUb2tlblVzZWRBc1Jld2FyZCovCgoKICAgIC8vIHRoZSBmdW5jdGlvbiB3aXRob3V0IG5hbWUgaXMgdGhlIGRlZmF1bHQgZnVuY3Rpb24gdGhhdCBpcyBjYWxsZWQgd2hlbmV2ZXIgYW55b25lIHNlbmRzIGZ1bmRzIHRvIGEgY29udHJhY3QKICAgIGZ1bmN0aW9uICgpIHBheWFibGUgewogICAgICAgIGlmIChjcm93ZHNhbGVDbG9zZWQgfHwgKG1heGltdW1UYXJnZXQgLSBhbW91bnRSYWlzZWQpIDwgbXNnLnZhbHVlKSB0aHJvdzsKICAgICAgICB1aW50IGFtb3VudCA9IG1zZy52YWx1ZTsKICAgICAgICBiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gKz0gYW1vdW50OwogICAgICAgIGFtb3VudFJhaXNlZCArPSBhbW91bnQ7CiAgICAgICAgcmVzQW1vdW50ICs9IGFtb3VudDsKICAgICAgICBzb2xkVG9rZW5zICs9IGFtb3VudCAvIHByaWNlOwogICAgICAgIHRva2VuUmV3YXJkLnRyYW5zZmVyKG1zZy5zZW5kZXIsIGFtb3VudCAvIHByaWNlKTsKICAgICAgICBGdW5kVHJhbnNmZXIobXNnLnNlbmRlciwgYW1vdW50LCB0cnVlKTsKCiAgICAgICAgaWYgKGFtb3VudFJhaXNlZCA+PSBtaW5pbXVtVGFyZ2V0ICYmICFtaW5pbXVtVGFyZ2V0UmVhY2hlZCkgewogICAgICAgICAgICBtaW5pbXVtVGFyZ2V0UmVhY2hlZCA9IHRydWU7CiAgICAgICAgICAgIEdvYWxSZWFjaGVkKGJlbmVmaWNpYXJ5LCBtaW5pbXVtVGFyZ2V0KTsKICAgICAgICB9CgogICAgICAgIC8vIGZ1bmRzIGFyZSBzZW5kaW5nIHRvIGJlbmVmaWNpYXJ5IGFjY291bnQgYWZ0ZXIgbWluaW11bVRhcmdldCB3aWxsIGJlIHJlYWNoZWQKICAgICAgICBpZiAobWluaW11bVRhcmdldFJlYWNoZWQpIHsKICAgICAgICAgICAgaWYgKGJlbmVmaWNpYXJ5LnNlbmQoYW1vdW50KSkgewogICAgICAgICAgICAgICAgRnVuZFRyYW5zZmVyKGJlbmVmaWNpYXJ5LCBhbW91bnQsIGZhbHNlKTsKICAgICAgICAgICAgICAgIHJlc0Ftb3VudCAtPSBhbW91bnQ7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CgogICAgLy8gZGV2IGZ1bmN0aW9uIGZvciB3aXRoZHJhdyBhbnkgYW1vdW50IGZyb20gcmFpc2VkIGZ1bmRzIChhY3RpdmF0ZSBvbmx5IGlmIG1pbmltdW1UYXJnZXQgaXMgcmVhY2hlZCkKICAgIGZ1bmN0aW9uIGRldldpdGhkcmF3YWwodWludCBudW0sIHVpbnQgZGVuKSB7CiAgICAgICAgaWYgKCFtaW5pbXVtVGFyZ2V0UmVhY2hlZCB8fCAhKGJlbmVmaWNpYXJ5ID09IG1zZy5zZW5kZXIpKSB0aHJvdzsKICAgICAgICB1aW50IHdBbW91bnQgPSBudW0gLyBkZW47CiAgICAgICAgaWYgKGJlbmVmaWNpYXJ5LnNlbmQod0Ftb3VudCkpIHsKICAgICAgICAgICAgRnVuZFRyYW5zZmVyKGJlbmVmaWNpYXJ5LCB3QW1vdW50LCBmYWxzZSk7CiAgICAgICAgfQogICAgfQoKICAgIC8vIGRldiBmdW5jdGlvbiBmb3Igd2l0aGRyYXcgYW1vdW50LCB3aGljaCBiZSByZXNlcnZlZCBieSBtaW5pbXVtVGFyZ2V0IChhY3RpdmF0ZSBvbmx5IGlmIG1pbmltdW1UYXJnZXQgaXMgcmVhY2hlZCkKICAgIGZ1bmN0aW9uIGRldlJlc1dpdGhkcmF3YWwoKSB7CiAgICAgICAgaWYgKCFtaW5pbXVtVGFyZ2V0UmVhY2hlZCB8fCAhKGJlbmVmaWNpYXJ5ID09IG1zZy5zZW5kZXIpKSB0aHJvdzsKICAgICAgICBpZiAoYmVuZWZpY2lhcnkuc2VuZChyZXNBbW91bnQpKSB7CiAgICAgICAgICAgIEZ1bmRUcmFuc2ZlcihiZW5lZmljaWFyeSwgcmVzQW1vdW50LCBmYWxzZSk7CiAgICAgICAgICAgIHJlc0Ftb3VudCA9IDA7CiAgICAgICAgfQogICAgfQoKICAgIC8vIGRldiBmdW5jdGlvbiBmb3IgY2xvc2UgY3Jvd2RzYWxlICAKICAgIGZ1bmN0aW9uIGNsb3NlQ3Jvd2RzYWxlKGJvb2wgY2xvc2VUeXBlKSB7CiAgICAgICAgIGlmIChiZW5lZmljaWFyeSA9PSBtc2cuc2VuZGVyKSB7CiAgICAgICAgICAgIGNyb3dkc2FsZUNsb3NlZCA9IGNsb3NlVHlwZTsKICAgICAgICAgfQogICAgfQoKCiAgICBtb2RpZmllciBhZnRlckRlYWRsaW5lKCkgeyBpZiAobm93ID49IGRlYWRsaW5lKSBfOyB9CgogICAgLy8gY2hlY2tzIGlmIHRoZSBtaW5pbXVtVGFyZ2V0IGhhcyBiZWVuIHJlYWNoZWQKICAgIGZ1bmN0aW9uIGNoZWNrVGFyZ2V0UmVhY2hlZCgpIGFmdGVyRGVhZGxpbmUgewogICAgICAgIGlmIChhbW91bnRSYWlzZWQgPj0gbWluaW11bVRhcmdldCkgewogICAgICAgICAgICBtaW5pbXVtVGFyZ2V0UmVhY2hlZCA9IHRydWU7CiAgICAgICAgfQogICAgfQoKICAgIC8vIGZ1bmN0aW9uIGZvciByZXR1cm4gbm9uIHNvbGQgdG9rZW5zIHRvIGRldiBhY2NvdW50IGFmdGVyIGNyb3dkc2FsZQogICAgZnVuY3Rpb24gcmV0dXJuVG9rZW5zKHVpbnQgdG9rZW5zQW1vdW50KSBhZnRlckRlYWRsaW5lIHsKICAgICAgICBpZiAoIWNyb3dkc2FsZUNsb3NlZCkgdGhyb3c7CiAgICAgICAgaWYgKGJlbmVmaWNpYXJ5ID09IG1zZy5zZW5kZXIpIHsKICAgICAgICAgICAgdG9rZW5SZXdhcmQudHJhbnNmZXIoYmVuZWZpY2lhcnksIHRva2Vuc0Ftb3VudCk7CiAgICAgICAgfQogICAgfQoKICAgIC8vIHJldHVybiB5b3VyIGZ1bmRzIGFmdGVyIGRlYWRsaW5lIGlmIG1pbmltdW1UYXJnZXQgaXMgbm90IHJlYWNoZWQgKGFjdGl2YXRlIGlmIGNyb3dkc2FsZSBjbG9zaW5nKQogICAgZnVuY3Rpb24gc2FmZVdpdGhkcmF3YWwoKSBhZnRlckRlYWRsaW5lIHsKICAgICAgICBpZiAoIW1pbmltdW1UYXJnZXRSZWFjaGVkICYmIGNyb3dkc2FsZUNsb3NlZCkgewogICAgICAgICAgICB1aW50IGFtb3VudCA9IGJhbGFuY2VPZlttc2cuc2VuZGVyXTsKICAgICAgICAgICAgYmFsYW5jZU9mW21zZy5zZW5kZXJdID0gMDsKICAgICAgICAgICAgaWYgKGFtb3VudCA+IDApIHsKICAgICAgICAgICAgICAgIGlmIChtc2cuc2VuZGVyLnNlbmQoYW1vdW50KSkgewogICAgICAgICAgICAgICAgICAgIEZ1bmRUcmFuc2Zlcihtc2cuc2VuZGVyLCBhbW91bnQsIGZhbHNlKTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgYmFsYW5jZU9mW21zZy5zZW5kZXJdID0gYW1vdW50OwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9'.
	

]
