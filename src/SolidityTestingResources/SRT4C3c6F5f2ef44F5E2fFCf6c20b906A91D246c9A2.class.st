Class {
	#name : #SRT4C3c6F5f2ef44F5E2fFCf6c20b906A91D246c9A2,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT4C3c6F5f2ef44F5E2fFCf6c20b906A91D246c9A2 >> base64 [
	^ ''.
	

]
