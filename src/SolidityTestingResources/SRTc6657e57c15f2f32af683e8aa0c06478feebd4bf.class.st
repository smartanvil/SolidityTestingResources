Class {
	#name : #SRTc6657e57c15f2f32af683e8aa0c06478feebd4bf,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTc6657e57c15f2f32af683e8aa0c06478feebd4bf >> base64 [
	^ 'Ly8gQ3J5cHRvUmFiYml0IFNvdXJjZSBjb2RlCgpwcmFnbWEgc29saWRpdHkgXjAuNC4xODsKCgoKCgovLy8gQHRpdGxlIEEgYmFzZSBjb250cmFjdCB0byBjb250cm9sIG93bmVyc2hpcAovLy8gQGF1dGhvciBjdWlsaWNoZW4KY29udHJhY3QgT3duZXJCYXNlIHsKCiAgICAvLyBUaGUgYWRkcmVzc2VzIG9mIHRoZSBhY2NvdW50cyB0aGF0IGNhbiBleGVjdXRlIGFjdGlvbnMgd2l0aGluIGVhY2ggcm9sZXMuCiAgICBhZGRyZXNzIHB1YmxpYyBjZW9BZGRyZXNzOwogICAgYWRkcmVzcyBwdWJsaWMgY2ZvQWRkcmVzczsKICAgIGFkZHJlc3MgcHVibGljIGNvb0FkZHJlc3M7CgogICAgLy8gQGRldiBLZWVwcyB0cmFjayB3aGV0aGVyIHRoZSBjb250cmFjdCBpcyBwYXVzZWQuIFdoZW4gdGhhdCBpcyB0cnVlLCBtb3N0IGFjdGlvbnMgYXJlIGJsb2NrZWQKICAgIGJvb2wgcHVibGljIHBhdXNlZCA9IGZhbHNlOwogICAgCiAgICAvLy8gY29uc3RydWN0b3IKICAgIGZ1bmN0aW9uIE93bmVyQmFzZSgpIHB1YmxpYyB7CiAgICAgICBjZW9BZGRyZXNzID0gbXNnLnNlbmRlcjsKICAgICAgIGNmb0FkZHJlc3MgPSBtc2cuc2VuZGVyOwogICAgICAgY29vQWRkcmVzcyA9IG1zZy5zZW5kZXI7CiAgICB9CgogICAgLy8vIEBkZXYgQWNjZXNzIG1vZGlmaWVyIGZvciBDRU8tb25seSBmdW5jdGlvbmFsaXR5CiAgICBtb2RpZmllciBvbmx5Q0VPKCkgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBjZW9BZGRyZXNzKTsKICAgICAgICBfOwogICAgfQoKICAgIC8vLyBAZGV2IEFjY2VzcyBtb2RpZmllciBmb3IgQ0ZPLW9ubHkgZnVuY3Rpb25hbGl0eQogICAgbW9kaWZpZXIgb25seUNGTygpIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gY2ZvQWRkcmVzcyk7CiAgICAgICAgXzsKICAgIH0KICAgIAogICAgLy8vIEBkZXYgQWNjZXNzIG1vZGlmaWVyIGZvciBDT08tb25seSBmdW5jdGlvbmFsaXR5CiAgICBtb2RpZmllciBvbmx5Q09PKCkgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBjb29BZGRyZXNzKTsKICAgICAgICBfOwogICAgfQoKICAgIC8vLyBAZGV2IEFzc2lnbnMgYSBuZXcgYWRkcmVzcyB0byBhY3QgYXMgdGhlIENFTy4gT25seSBhdmFpbGFibGUgdG8gdGhlIGN1cnJlbnQgQ0VPLgogICAgLy8vIEBwYXJhbSBfbmV3Q0VPIFRoZSBhZGRyZXNzIG9mIHRoZSBuZXcgQ0VPCiAgICBmdW5jdGlvbiBzZXRDRU8oYWRkcmVzcyBfbmV3Q0VPKSBleHRlcm5hbCBvbmx5Q0VPIHsKICAgICAgICByZXF1aXJlKF9uZXdDRU8gIT0gYWRkcmVzcygwKSk7CgogICAgICAgIGNlb0FkZHJlc3MgPSBfbmV3Q0VPOwogICAgfQoKCiAgICAvLy8gQGRldiBBc3NpZ25zIGEgbmV3IGFkZHJlc3MgdG8gYWN0IGFzIHRoZSBDT08uIE9ubHkgYXZhaWxhYmxlIHRvIHRoZSBjdXJyZW50IENFTy4KICAgIC8vLyBAcGFyYW0gX25ld0NGTyBUaGUgYWRkcmVzcyBvZiB0aGUgbmV3IENPTwogICAgZnVuY3Rpb24gc2V0Q0ZPKGFkZHJlc3MgX25ld0NGTykgZXh0ZXJuYWwgb25seUNFTyB7CiAgICAgICAgcmVxdWlyZShfbmV3Q0ZPICE9IGFkZHJlc3MoMCkpOwoKICAgICAgICBjZm9BZGRyZXNzID0gX25ld0NGTzsKICAgIH0KICAgIAogICAgLy8vIEBkZXYgQXNzaWducyBhIG5ldyBhZGRyZXNzIHRvIGFjdCBhcyB0aGUgQ09PLiBPbmx5IGF2YWlsYWJsZSB0byB0aGUgY3VycmVudCBDRU8uCiAgICAvLy8gQHBhcmFtIF9uZXdDT08gVGhlIGFkZHJlc3Mgb2YgdGhlIG5ldyBDT08KICAgIGZ1bmN0aW9uIHNldENPTyhhZGRyZXNzIF9uZXdDT08pIGV4dGVybmFsIG9ubHlDRU8gewogICAgICAgIHJlcXVpcmUoX25ld0NPTyAhPSBhZGRyZXNzKDApKTsKCiAgICAgICAgY29vQWRkcmVzcyA9IF9uZXdDT087CiAgICB9CgogICAgLy8vIEBkZXYgTW9kaWZpZXIgdG8gYWxsb3cgYWN0aW9ucyBvbmx5IHdoZW4gdGhlIGNvbnRyYWN0IElTIE5PVCBwYXVzZWQKICAgIG1vZGlmaWVyIHdoZW5Ob3RQYXVzZWQoKSB7CiAgICAgICAgcmVxdWlyZSghcGF1c2VkKTsKICAgICAgICBfOwogICAgfQoKICAgIC8vLyBAZGV2IE1vZGlmaWVyIHRvIGFsbG93IGFjdGlvbnMgb25seSB3aGVuIHRoZSBjb250cmFjdCBJUyBwYXVzZWQKICAgIG1vZGlmaWVyIHdoZW5QYXVzZWQgewogICAgICAgIHJlcXVpcmUocGF1c2VkKTsKICAgICAgICBfOwogICAgfQoKICAgIC8vLyBAZGV2IENhbGxlZCBieSBhbnkgIkMtbGV2ZWwiIHJvbGUgdG8gcGF1c2UgdGhlIGNvbnRyYWN0LiBVc2VkIG9ubHkgd2hlbgogICAgLy8vICBhIGJ1ZyBvciBleHBsb2l0IGlzIGRldGVjdGVkIGFuZCB3ZSBuZWVkIHRvIGxpbWl0IGRhbWFnZS4KICAgIGZ1bmN0aW9uIHBhdXNlKCkgZXh0ZXJuYWwgb25seUNPTyB3aGVuTm90UGF1c2VkIHsKICAgICAgICBwYXVzZWQgPSB0cnVlOwogICAgfQoKICAgIC8vLyBAZGV2IFVucGF1c2VzIHRoZSBzbWFydCBjb250cmFjdC4gQ2FuIG9ubHkgYmUgY2FsbGVkIGJ5IHRoZSBDRU8sIHNpbmNlCiAgICAvLy8gIG9uZSByZWFzb24gd2UgbWF5IHBhdXNlIHRoZSBjb250cmFjdCBpcyB3aGVuIENGTyBvciBDT08gYWNjb3VudHMgYXJlCiAgICAvLy8gIGNvbXByb21pc2VkLgogICAgLy8vIEBub3RpY2UgVGhpcyBpcyBwdWJsaWMgcmF0aGVyIHRoYW4gZXh0ZXJuYWwgc28gaXQgY2FuIGJlIGNhbGxlZCBieQogICAgLy8vICBkZXJpdmVkIGNvbnRyYWN0cy4KICAgIGZ1bmN0aW9uIHVucGF1c2UoKSBwdWJsaWMgb25seUNPTyB3aGVuUGF1c2VkIHsKICAgICAgICAvLyBjYW4ndCB1bnBhdXNlIGlmIGNvbnRyYWN0IHdhcyB1cGdyYWRlZAogICAgICAgIHBhdXNlZCA9IGZhbHNlOwogICAgfQp9CgoKCgoKLy8vIEB0aXRsZSBhbGwgZnVuY3Rpb25zIHJlbGF0ZWQgdG8gZm9vZApjb250cmFjdCBGb29kU3RvcmUgaXMgT3duZXJCYXNlIHsKCS8vLyBldmVudAoJZXZlbnQgQm91Z2h0KGFkZHJlc3MgYnV5ZXIsIHVpbnQzMiBidW5kbGVzKTsKCQoJCiAgICBldmVudCBDb250cmFjdFVwZ3JhZGUoYWRkcmVzcyBuZXdDb250cmFjdCk7CgoJCiAgICAvLyBTZXQgaW4gY2FzZSB0aGUgY29yZSBjb250cmFjdCBpcyBicm9rZW4gYW5kIGFuIHVwZ3JhZGUgaXMgcmVxdWlyZWQKICAgIGFkZHJlc3MgcHVibGljIG5ld0NvbnRyYWN0QWRkcmVzczsKICAgIAogICAgLy8gUHJpY2UgKGluIHdlaSkgZm9yIGZvb2QKICAgIHVpbnQgcHVibGljIHByaWNlID0gMTAgZmlubmV5OyAgICAKICAgIAogICAgCiAgICAKCiAgICAvLy8gQG5vdGljZSAKICAgIGZ1bmN0aW9uIEZvb2RTdG9yZSgpIHB1YmxpYyB7CiAgICAgICAgLy8gdGhlIGNyZWF0b3Igb2YgdGhlIGNvbnRyYWN0IGlzIHRoZSBpbml0aWFsIENFTwogICAgICAgIGNlb0FkZHJlc3MgPSBtc2cuc2VuZGVyOwogICAgICAgIGNvb0FkZHJlc3MgPSBtc2cuc2VuZGVyOwogICAgICAgIGNmb0FkZHJlc3MgPSBtc2cuc2VuZGVyOwogICAgfQogICAgCiAgICAgICAgCiAgICAvLy8gQG5vdGljZSBjdXN0b21lciBidXkgZm9vZAogICAgLy8vIEBwYXJhbSBfYnVuZGxlcyBUaGUgbnVtIG9mIGZvb2QKICAgIGZ1bmN0aW9uIGJ1eUZvb2QodWludDMyIF9idW5kbGVzKSBleHRlcm5hbCBwYXlhYmxlIHdoZW5Ob3RQYXVzZWQgcmV0dXJucyAoYm9vbCkgewoJCXJlcXVpcmUobmV3Q29udHJhY3RBZGRyZXNzID09IGFkZHJlc3MoMCkpOwoJCQogICAgICAgIHVpbnQgY29zdCA9IF9idW5kbGVzICogcHJpY2U7CgkJcmVxdWlyZShtc2cudmFsdWUgPj0gY29zdCk7CgkJCiAgICAgICAgLy8gUmV0dXJuIHRoZSBmdW5kcy4gCiAgICAgICAgdWludCBmdW5kc0V4Y2VzcyA9IG1zZy52YWx1ZSAtIGNvc3Q7CiAgICAgICAgaWYgKGZ1bmRzRXhjZXNzID4gMSBmaW5uZXkpIHsKICAgICAgICAgICAgbXNnLnNlbmRlci50cmFuc2ZlcihmdW5kc0V4Y2Vzcyk7CiAgICAgICAgfQoJCWVtaXQgQm91Z2h0KG1zZy5zZW5kZXIsIF9idW5kbGVzKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIAogICAgCgogICAgLy8vIEBkZXYgVXNlZCB0byBtYXJrIHRoZSBzbWFydCBjb250cmFjdCBhcyB1cGdyYWRlZC4KICAgIC8vLyBAcGFyYW0gX3YyQWRkcmVzcyBuZXcgYWRkcmVzcwogICAgZnVuY3Rpb24gdXBncmFkZUNvbnRyYWN0KGFkZHJlc3MgX3YyQWRkcmVzcykgZXh0ZXJuYWwgb25seUNPTyB3aGVuUGF1c2VkIHsKICAgICAgICBuZXdDb250cmFjdEFkZHJlc3MgPSBfdjJBZGRyZXNzOwogICAgICAgIGVtaXQgQ29udHJhY3RVcGdyYWRlKF92MkFkZHJlc3MpOwogICAgfQoKICAgIC8vIEBkZXYgQWxsb3dzIHRoZSBDRU8gdG8gY2FwdHVyZSB0aGUgYmFsYW5jZSBhdmFpbGFibGUgdG8gdGhlIGNvbnRyYWN0LgogICAgZnVuY3Rpb24gd2l0aGRyYXdCYWxhbmNlKCkgZXh0ZXJuYWwgb25seUNGTyB7CiAgICAgICAgYWRkcmVzcyB0bXAgPSBhZGRyZXNzKHRoaXMpOwogICAgICAgIGNmb0FkZHJlc3MudHJhbnNmZXIodG1wLmJhbGFuY2UpOwogICAgfQp9'.
	

]
