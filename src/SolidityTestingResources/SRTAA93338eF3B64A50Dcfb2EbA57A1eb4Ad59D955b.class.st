Class {
	#name : #SRTAA93338eF3B64A50Dcfb2EbA57A1eb4Ad59D955b,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTAA93338eF3B64A50Dcfb2EbA57A1eb4Ad59D955b >> base64 [
	^ ''.
	

]
