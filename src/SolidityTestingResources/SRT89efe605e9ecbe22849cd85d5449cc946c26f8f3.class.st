Class {
	#name : #SRT89efe605e9ecbe22849cd85d5449cc946c26f8f3,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT89efe605e9ecbe22849cd85d5449cc946c26f8f3 >> base64 [
	^ ''.
	

]
