Class {
	#name : #SRT60626305EEC1477bab0b7a8dBd6036CF23d00494,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT60626305EEC1477bab0b7a8dBd6036CF23d00494 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7CgovL0Jhc2UgY2xhc3Mgb2YgdG9rZW4tb3duZXIKY29udHJhY3QgT3duYWJsZSB7CglhZGRyZXNzIHB1YmxpYyBvd25lcjsJCQkJCQkJCQkJCQkJCS8vb3duZXIncyBhZGRyZXNzCgoJZnVuY3Rpb24gT3duYWJsZSgpIHB1YmxpYyAKCXsKCQlvd25lciA9IG1zZy5zZW5kZXI7Cgl9CgoJbW9kaWZpZXIgb25seU93bmVyKCkgewoJCXJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CgkJXzsKCX0KCS8qCgkqCUZ1bnRpb246IFRyYW5zZmVyIG93bmVyJ3MgYXV0aG9yaXR5IAoJKglUeXBlOlB1YmxpYyBhbmQgb25seU93bmVyCgkqCVBhcmFtZXRlcnM6CgkJCUBuZXdPd25lcjoJYWRkcmVzcyBvZiBuZXdPd25lcgoJKi8KCWZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpIG9ubHlPd25lciBwdWJsaWN7CgkJaWYgKG5ld093bmVyICE9IGFkZHJlc3MoMCkpIHsKCQlvd25lciA9IG5ld093bmVyOwoJCX0KCX0KCQoJZnVuY3Rpb24ga2lsbCgpIG9ubHlPd25lciBwdWJsaWN7CgkJc2VsZmRlc3RydWN0KG93bmVyKTsKCX0KfQoKLy9Bbm5vdW5jZW1lbnQgb2YgYW4gaW50ZXJmYWNlIGZvciByZWNpcGllbnQgYXBwcm92aW5nCmludGVyZmFjZSB0b2tlblJlY2lwaWVudCB7IAoJZnVuY3Rpb24gcmVjZWl2ZUFwcHJvdmFsKGFkZHJlc3MgX2Zyb20sIHVpbnQyNTYgX3ZhbHVlLCBhZGRyZXNzIF90b2tlbiwgYnl0ZXMgX2V4dHJhRGF0YSlwdWJsaWM7IAp9CgoKY29udHJhY3QgVE9TS1lUb2tlbkVSQzIwIGlzIE93bmFibGV7CgkKCS8vPT09PT09PT09PT09PT09PT09PXB1YmxpYyB2YXJpYWJsZXMgZGVmaW5pdGlvbiBzdGFydD09PT09PT09PT09PT09PT09PQogICAgc3RyaW5nIHB1YmxpYyBuYW1lOwkJCQkJCQkJCQkJCQkJCS8vTmFtZSBvZiB5b3VyIFRva2VuCiAgICBzdHJpbmcgcHVibGljIHN5bWJvbDsJCQkJCQkJCQkJCQkJCS8vU3ltYm9sIG9mIHlvdXIgVG9rZW4KICAgIHVpbnQ4IHB1YmxpYyBkZWNpbWFsczsJCQkJCQkJCQkJCQkJCS8vRGVjaW1hbHMgb2YgeW91ciBUb2tlbgogICAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7CQkJCQkJCQkJCQkJCS8vTWF4aW11bSBhbW91bnQgb2YgVG9rZW4gc3VwcGxpZXMKCiAgICAvL2RlZmluZSBkaWN0aW9uYXJpZXMgb2YgYmFsYW5jZQogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBwdWJsaWMgYmFsYW5jZU9mOwkJCQkJCQkJLy9Bbm5vdW5jZSB0aGUgZGljdGlvbmFyeSBvZiBhY2NvdW50J3MgYmFsYW5jZQogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBwdWJsaWMgYWxsb3dhbmNlOwkJCS8vQW5ub3VuY2UgdGhlIGRpY3Rpb25hcnkgb2YgYWNjb3VudCdzIGF2YWlsYWJsZSBiYWxhbmNlCgltYXBwaW5nIChhZGRyZXNzID0+IGJvb2wpIHB1YmxpYyBibGFja0xpc3Q7CQoJLy89PT09PT09PT09PT09PT09PT09cHVibGljIHZhcmlhYmxlcyBkZWZpbml0aW9uIGVuZD09PT09PT09PT09PT09PT09PQoKCQoJLy89PT09PT09PT09PT09PT09PT09ZXZlbnRzIGRlZmluaXRpb24gc3RhcnQ9PT09PT09PT09PT09PT09PT0gICAgCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHZhbHVlKTsJLy9FdmVudCBvbiBibG9ja2NoYWluIHdoaWNoIG5vdGlmeSBjbGllbnQKCS8vPT09PT09PT09PT09PT09PT09PWV2ZW50cyBkZWZpbml0aW9uIGVuZD09PT09PT09PT09PT09PT09PQoJCgkKCS8vPT09PT09PT09PT09PT09PT09PUNvbnRyYWN0IEluaXRpYWxpemF0aW9uIFNlcXVlbmNlIERlZmluaXRpb24gc3RhcnQ9PT09PT09PT09PT09PT09PT09CiAgICBmdW5jdGlvbiBUT1NLWVRva2VuRVJDMjAgKCkgcHVibGljIHsKCQlkZWNpbWFscz05OwkJCQkJCQkJCQkJCQkJCS8vQXNzaWdubWVudCBvZiBUb2tlbidzIGRlY2ltYWxzCgkJdG90YWxTdXBwbHkgPSAyMDAwMDAwMDAwICogMTAgKiogdWludDI1NihkZWNpbWFscyk7ICAJCQkJLy9Bc3NpZ25tZW50IG9mIFRva2VuJ3MgdG90YWwgc3VwcGx5IHdpdGggZGVjaW1hbHMKICAgICAgICBiYWxhbmNlT2Zbb3duZXJdID0gdG90YWxTdXBwbHk7ICAgICAgICAgICAgICAgIAkJCQkJLy9Bc3NpZ25tZW50IG9mIFRva2VuJ3MgY3JlYXRvciBpbml0aWFsIHRva2VucwogICAgICAgIG5hbWUgPSAiVE9TS1kgU2hhcmUiOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCQkJCQkvL1NldCB0aGUgbmFtZSBvZiBUb2tlbgogICAgICAgIHN5bWJvbCA9ICJUT1NLWSI7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkJLy9TZXQgdGhlIHN5bWJvbCBvZiAgVG9rZW4KICAgICAgICAKICAgIH0KCS8vPT09PT09PT09PT09PT09PT09PUNvbnRyYWN0IEluaXRpYWxpemF0aW9uIFNlcXVlbmNlIGRlZmluaXRpb24gZW5kPT09PT09PT09PT09PT09PT09PQoJCgkvLz09PT09PT09PT09PT09PT09PT1Db250cmFjdCBiZWhhdmlvciAmIGZ1bnRpb25zIGRlZmluaXRpb24gc3RhcnQ9PT09PT09PT09PT09PT09PT09CgkKCS8qCgkqCUZ1bnRpb246IFRyYW5zZmVyIGZ1bnRpb25zCgkqCVR5cGU6SW50ZXJuYWwKCSoJUGFyYW1ldGVyczoKCQkJQF9mcm9tOglhZGRyZXNzIG9mIHNlbmRlcidzIGFjY291bnQKCQkJQF90bzoJYWRkcmVzcyBvZiByZWNpcGllbnQncyBhY2NvdW50CgkJCUBfdmFsdWU6dHJhbnNhY3Rpb24gYW1vdW50CgkqLwogICAgZnVuY3Rpb24gX3RyYW5zZmVyKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSkgaW50ZXJuYWwgbm90SW5CbGFja0xpc3QoX2Zyb20pewoJCS8vRmF1bHQtdG9sZXJhbnQgcHJvY2Vzc2luZwoJCXJlcXVpcmUoX3RvICE9IDB4MCk7CQkJCQkJLy8KICAgICAgICByZXF1aXJlKGJhbGFuY2VPZltfZnJvbV0gPj0gX3ZhbHVlKTsKICAgICAgICByZXF1aXJlKGJhbGFuY2VPZltfdG9dICsgX3ZhbHVlID4gYmFsYW5jZU9mW190b10pOwoKICAgICAgICAvL0V4ZWN1dGUgdHJhbnNhY3Rpb24KCQl1aW50IHByZXZpb3VzQmFsYW5jZXMgPSBiYWxhbmNlT2ZbX2Zyb21dICsgYmFsYW5jZU9mW190b107CiAgICAgICAgYmFsYW5jZU9mW19mcm9tXSAtPSBfdmFsdWU7CiAgICAgICAgYmFsYW5jZU9mW190b10gKz0gX3ZhbHVlOwogICAgICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7CgkJCgkJLy9WZXJpZnkgdHJhbnNhY3Rpb24KICAgICAgICBhc3NlcnQoYmFsYW5jZU9mW19mcm9tXSArIGJhbGFuY2VPZltfdG9dID09IHByZXZpb3VzQmFsYW5jZXMpOwogICAgfQoJCgkKCS8qCgkqCUZ1bnRpb246IFRyYW5zZmVyIHRva2VucwoJKglUeXBlOlB1YmxpYwoJKglQYXJhbWV0ZXJzOgoJCQlAX3RvOglhZGRyZXNzIG9mIHJlY2lwaWVudCdzIGFjY291bnQKCQkJQF92YWx1ZTp0cmFuc2FjdGlvbiBhbW91bnQKCSovCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyB7CgkJCiAgICAgICAgX3RyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgIH0JCgkKCS8qCgkqCUZ1bnRpb246IFRyYW5zZmVyIHRva2VucyBmcm9tIG90aGVyIGFkZHJlc3MKCSoJVHlwZTpQdWJsaWMKCSoJUGFyYW1ldGVyczoKCQkJQF9mcm9tOglhZGRyZXNzIG9mIHNlbmRlcidzIGFjY291bnQKCQkJQF90bzoJYWRkcmVzcyBvZiByZWNpcGllbnQncyBhY2NvdW50CgkJCUBfdmFsdWU6dHJhbnNhY3Rpb24gYW1vdW50CgkqLwoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyAKCXJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIHJlcXVpcmUoX3ZhbHVlIDw9IGFsbG93YW5jZVtfZnJvbV1bbXNnLnNlbmRlcl0pOyAgICAgCQkJCQkvL0FsbG93YW5jZSB2ZXJpZmljYXRpb24KICAgICAgICBhbGxvd2FuY2VbX2Zyb21dW21zZy5zZW5kZXJdIC09IF92YWx1ZTsKICAgICAgICBfdHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIAoJLyoKCSoJRnVudGlvbjogQXBwcm92ZSB1c2FibGUgYW1vdW50IGZvciBhbiBhY2NvdW50CgkqCVR5cGU6UHVibGljCgkqCVBhcmFtZXRlcnM6CgkJCUBfc3BlbmRlcjoJYWRkcmVzcyBvZiBzcGVuZGVyJ3MgYWNjb3VudAoJCQlAX3ZhbHVlOglhcHByb3ZlIGFtb3VudAoJKi8KICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIG5vdEluQmxhY2tMaXN0KF9zcGVuZGVyKSBwdWJsaWMgCiAgICAgICAgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgYWxsb3dhbmNlW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9CgkKCW1vZGlmaWVyIG5vdEluQmxhY2tMaXN0KGFkZHJlc3MgX3ZhbHVlKSB7CgkJcmVxdWlyZShibGFja0xpc3RbX3ZhbHVlXT09ZmFsc2UpOwoJCV87Cgl9CgkKCQoJZnVuY3Rpb24gYWRkVG9CbGFja0xpc3QoYWRkcmVzcyBfdmFsdWUpIHB1YmxpYyBvbmx5T3duZXIKCXsKCQlibGFja0xpc3RbX3ZhbHVlXT10cnVlOwoJfQoJIAoJZnVuY3Rpb24gZGVsRnJvbUJsYWNrTGlzdChhZGRyZXNzIF92YWx1ZSkgcHVibGljIG9ubHlPd25lcgoJewoJICAgYmxhY2tMaXN0W192YWx1ZV09ZmFsc2U7Cgl9CgkKCS8qCgkqCUZ1bnRpb246IEFwcHJvdmUgdXNhYmxlIGFtb3VudCBmb3Igb3RoZXIgYWRkcmVzcyBhbmQgdGhlbiBub3RpZnkgdGhlIGNvbnRyYWN0CgkqCVR5cGU6UHVibGljCgkqCVBhcmFtZXRlcnM6CgkJCUBfc3BlbmRlcjoJYWRkcmVzcyBvZiBvdGhlciBhY2NvdW50CgkJCUBfdmFsdWU6CWFwcHJvdmUgYW1vdW50CgkJCUBfZXh0cmFEYXRhOmFkZGl0aW9uYWwgaW5mb3JtYXRpb24gdG8gc2VuZCB0byB0aGUgYXBwcm92ZWQgY29udHJhY3QKCSovCiAgICBmdW5jdGlvbiBhcHByb3ZlQW5kQ2FsbChhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSwgYnl0ZXMgX2V4dHJhRGF0YSkgbm90SW5CbGFja0xpc3QoX3NwZW5kZXIpIHB1YmxpYyAKICAgICAgICByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICB0b2tlblJlY2lwaWVudCBzcGVuZGVyID0gdG9rZW5SZWNpcGllbnQoX3NwZW5kZXIpOwogICAgICAgIGlmIChhcHByb3ZlKF9zcGVuZGVyLCBfdmFsdWUpKSB7CiAgICAgICAgICAgIHNwZW5kZXIucmVjZWl2ZUFwcHJvdmFsKG1zZy5zZW5kZXIsIF92YWx1ZSwgdGhpcywgX2V4dHJhRGF0YSk7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0KICAgIH0KICAgIC8qCgkqCUZ1bnRpb246IFRyYW5zZmVyIG93bmVyJ3MgYXV0aG9yaXR5IGFuZCBhY2NvdW50IGJhbGFuY2UKCSoJVHlwZTpQdWJsaWMgYW5kIG9ubHlPd25lcgoJKglQYXJhbWV0ZXJzOgoJCQlAbmV3T3duZXI6CWFkZHJlc3Mgb2YgbmV3T3duZXIKCSovCiAgICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcFdpdGhCYWxhbmNlKGFkZHJlc3MgbmV3T3duZXIpIG9ubHlPd25lciBwdWJsaWN7CgkJaWYgKG5ld093bmVyICE9IGFkZHJlc3MoMCkpIHsKCQkgICAgX3RyYW5zZmVyKG93bmVyLG5ld093bmVyLGJhbGFuY2VPZltvd25lcl0pOwoJCSAgICBvd25lciA9IG5ld093bmVyOwoJCX0KCX0KICAgLy89PT09PT09PT09PT09PT09PT09Q29udHJhY3QgYmVoYXZpb3IgJiBmdW50aW9ucyBkZWZpbml0aW9uIGVuZD09PT09PT09PT09PT09PT09PT0KfQ=='.
	

]
