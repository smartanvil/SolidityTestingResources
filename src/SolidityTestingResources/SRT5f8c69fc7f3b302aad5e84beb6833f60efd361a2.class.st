Class {
	#name : #SRT5f8c69fc7f3b302aad5e84beb6833f60efd361a2,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT5f8c69fc7f3b302aad5e84beb6833f60efd361a2 >> base64 [
	^ ''.
	

]
