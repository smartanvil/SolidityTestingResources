Class {
	#name : #SRT1cb4490b75d3c15ac6cc099affeea60503c93805,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT1cb4490b75d3c15ac6cc099affeea60503c93805 >> base64 [
	^ ''.
	

]
