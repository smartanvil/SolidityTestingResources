Class {
	#name : #SRTf4c88b85e10221f889ca7dd9e300fc9b9c74a3ba,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTf4c88b85e10221f889ca7dd9e300fc9b9c74a3ba >> base64 [
	^ ''.
	

]
