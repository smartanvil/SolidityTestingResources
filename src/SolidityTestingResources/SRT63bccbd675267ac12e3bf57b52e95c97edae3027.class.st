Class {
	#name : #SRT63bccbd675267ac12e3bf57b52e95c97edae3027,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT63bccbd675267ac12e3bf57b52e95c97edae3027 >> base64 [
	^ ''.
	

]
