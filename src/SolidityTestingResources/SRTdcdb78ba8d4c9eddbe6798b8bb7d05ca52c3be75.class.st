Class {
	#name : #SRTdcdb78ba8d4c9eddbe6798b8bb7d05ca52c3be75,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTdcdb78ba8d4c9eddbe6798b8bb7d05ca52c3be75 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTc7CgoKLyoqCiAqIEB0aXRsZSBPd25hYmxlCiAqIEBkZXYgVGhlIE93bmFibGUgY29udHJhY3QgaGFzIGFuIG93bmVyIGFkZHJlc3MsIGFuZCBwcm92aWRlcyBiYXNpYyBhdXRob3JpemF0aW9uIGNvbnRyb2wKICogZnVuY3Rpb25zLCB0aGlzIHNpbXBsaWZpZXMgdGhlIGltcGxlbWVudGF0aW9uIG9mICJ1c2VyIHBlcm1pc3Npb25zIi4KICovCmNvbnRyYWN0IE93bmFibGUgewogIGFkZHJlc3MgcHVibGljIG93bmVyOwoKCiAgZXZlbnQgT3duZXJzaGlwVHJhbnNmZXJyZWQoYWRkcmVzcyBpbmRleGVkIHByZXZpb3VzT3duZXIsIGFkZHJlc3MgaW5kZXhlZCBuZXdPd25lcik7CgoKICAvKioKICAgKiBAZGV2IFRoZSBPd25hYmxlIGNvbnN0cnVjdG9yIHNldHMgdGhlIG9yaWdpbmFsIGBvd25lcmAgb2YgdGhlIGNvbnRyYWN0IHRvIHRoZSBzZW5kZXIKICAgKiBhY2NvdW50LgogICAqLwogIGZ1bmN0aW9uIE93bmFibGUoKSB7CiAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgfQoKCiAgLyoqCiAgICogQGRldiBUaHJvd3MgaWYgY2FsbGVkIGJ5IGFueSBhY2NvdW50IG90aGVyIHRoYW4gdGhlIG93bmVyLgogICAqLwogIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICBfOwogIH0KCgogIC8qKgogICAqIEBkZXYgQWxsb3dzIHRoZSBjdXJyZW50IG93bmVyIHRvIHRyYW5zZmVyIGNvbnRyb2wgb2YgdGhlIGNvbnRyYWN0IHRvIGEgbmV3T3duZXIuCiAgICogQHBhcmFtIG5ld093bmVyIFRoZSBhZGRyZXNzIHRvIHRyYW5zZmVyIG93bmVyc2hpcCB0by4KICAgKi8KICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld093bmVyKSBvbmx5T3duZXIgcHVibGljIHsKICAgIHJlcXVpcmUobmV3T3duZXIgIT0gYWRkcmVzcygwKSk7CiAgICBPd25lcnNoaXBUcmFuc2ZlcnJlZChvd25lciwgbmV3T3duZXIpOwogICAgb3duZXIgPSBuZXdPd25lcjsKICB9Cgp9CgoKCgoKLyoqCiAqIEB0aXRsZSBFbGlwdGljIGN1cnZlIHNpZ25hdHVyZSBvcGVyYXRpb25zCiAqCiAqIEBkZXYgQmFzZWQgb24gaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vYXhpYy81YjMzOTEyYzZmNjFhZTZmZDk2ZDZjNGE0N2FmZGU2ZAogKi8KCmxpYnJhcnkgRUNSZWNvdmVyeSB7CgogIC8qKgogICAqIEBkZXYgUmVjb3ZlciBzaWduZXIgYWRkcmVzcyBmcm9tIGEgbWVzc2FnZSBieSB1c2luZyBoaXMgc2lnbmF0dXJlCiAgICogQHBhcmFtIGhhc2ggYnl0ZXMzMiBtZXNzYWdlLCB0aGUgaGFzaCBpcyB0aGUgc2lnbmVkIG1lc3NhZ2UuIFdoYXQgaXMgcmVjb3ZlcmVkIGlzIHRoZSBzaWduZXIgYWRkcmVzcy4KICAgKiBAcGFyYW0gc2lnIGJ5dGVzIHNpZ25hdHVyZSwgdGhlIHNpZ25hdHVyZSBpcyBnZW5lcmF0ZWQgdXNpbmcgd2ViMy5ldGguc2lnbigpCiAgICovCiAgZnVuY3Rpb24gcmVjb3ZlcihieXRlczMyIGhhc2gsIGJ5dGVzIHNpZykgcHVibGljIHB1cmUgcmV0dXJucyAoYWRkcmVzcykgewogICAgYnl0ZXMzMiByOwogICAgYnl0ZXMzMiBzOwogICAgdWludDggdjsKCiAgICAvL0NoZWNrIHRoZSBzaWduYXR1cmUgbGVuZ3RoCiAgICBpZiAoc2lnLmxlbmd0aCAhPSA2NSkgewogICAgICByZXR1cm4gKGFkZHJlc3MoMCkpOwogICAgfQoKICAgIC8vIERpdmlkZSB0aGUgc2lnbmF0dXJlIGluIHIsIHMgYW5kIHYgdmFyaWFibGVzCiAgICBhc3NlbWJseSB7CiAgICAgIHIgOj0gbWxvYWQoYWRkKHNpZywgMzIpKQogICAgICBzIDo9IG1sb2FkKGFkZChzaWcsIDY0KSkKICAgICAgdiA6PSBieXRlKDAsIG1sb2FkKGFkZChzaWcsIDk2KSkpCiAgICB9CgogICAgLy8gVmVyc2lvbiBvZiBzaWduYXR1cmUgc2hvdWxkIGJlIDI3IG9yIDI4LCBidXQgMCBhbmQgMSBhcmUgYWxzbyBwb3NzaWJsZSB2ZXJzaW9ucwogICAgaWYgKHYgPCAyNykgewogICAgICB2ICs9IDI3OwogICAgfQoKICAgIC8vIElmIHRoZSB2ZXJzaW9uIGlzIGNvcnJlY3QgcmV0dXJuIHRoZSBzaWduZXIgYWRkcmVzcwogICAgaWYgKHYgIT0gMjcgJiYgdiAhPSAyOCkgewogICAgICByZXR1cm4gKGFkZHJlc3MoMCkpOwogICAgfSBlbHNlIHsKICAgICAgcmV0dXJuIGVjcmVjb3ZlcihoYXNoLCB2LCByLCBzKTsKICAgIH0KICB9Cgp9CgovKioKICogQHRpdGxlIEV0aGVhbFdoaXRlbGlzdAogKiBAYXV0aG9yIHRoZXN2ZWQKICogQG5vdGljZSBFdGhlYWxXaGl0ZWxpc3QgY29udHJhY3Qgd2hpY2ggaGFuZGxlcyBLWUMKICovCmNvbnRyYWN0IEV0aGVhbFdoaXRlbGlzdCBpcyBPd25hYmxlIHsKICAgIHVzaW5nIEVDUmVjb3ZlcnkgZm9yIGJ5dGVzMzI7CgogICAgLy8gc2lnbmVyIGFkZHJlc3MgZm9yIG9mZmNoYWluIHdoaXRlbGlzdCBzaWduaW5nCiAgICBhZGRyZXNzIHB1YmxpYyBzaWduZXI7CgogICAgLy8gc3RvcmluZyB3aGl0ZWxpc3RlZCBhZGRyZXNzZXMKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiBib29sKSBwdWJsaWMgaXNXaGl0ZWxpc3RlZDsKCiAgICBldmVudCBXaGl0ZWxpc3RTZXQoYWRkcmVzcyBpbmRleGVkIF9hZGRyZXNzLCBib29sIF9zdGF0ZSk7CgogICAgLy8vLy8vLy8vLy8vLy8vLwogICAgLy8gQ29uc3RydWN0b3IKICAgIC8vLy8vLy8vLy8vLy8vLy8KICAgIGZ1bmN0aW9uIEV0aGVhbFdoaXRlbGlzdChhZGRyZXNzIF9zaWduZXIpIHsKICAgICAgICByZXF1aXJlKF9zaWduZXIgIT0gYWRkcmVzcygwKSk7CgogICAgICAgIHNpZ25lciA9IF9zaWduZXI7CiAgICB9CgogICAgLy8vIEBub3RpY2Ugc2V0IHNpZ25pbmcgYWRkcmVzcyBhZnRlciBkZXBsb3ltZW50CiAgICBmdW5jdGlvbiBzZXRTaWduZXIoYWRkcmVzcyBfc2lnbmVyKSBwdWJsaWMgb25seU93bmVyIHsKICAgICAgICByZXF1aXJlKF9zaWduZXIgIT0gYWRkcmVzcygwKSk7CgogICAgICAgIHNpZ25lciA9IF9zaWduZXI7CiAgICB9CgogICAgLy8vLy8vLy8vLy8vLy8vLwogICAgLy8gV2hpdGVsaXN0aW5nOiBvbmx5IG93bmVyCiAgICAvLy8vLy8vLy8vLy8vLy8vCgogICAgLy8vJiMxNjA7QG5vdGljZSBTZXQgd2hpdGVsaXN0IHN0YXRlIGZvciBhbiBhZGRyZXNzLgogICAgZnVuY3Rpb24gc2V0V2hpdGVsaXN0KGFkZHJlc3MgX2FkZHIsIGJvb2wgX3N0YXRlKSBwdWJsaWMgb25seU93bmVyIHsKICAgICAgICByZXF1aXJlKF9hZGRyICE9IGFkZHJlc3MoMCkpOwogICAgICAgIGlzV2hpdGVsaXN0ZWRbX2FkZHJdID0gX3N0YXRlOwogICAgICAgIFdoaXRlbGlzdFNldChfYWRkciwgX3N0YXRlKTsKICAgIH0KCiAgICAvLy8mIzE2MDtAbm90aWNlIFNldCB3aGl0ZWxpc3Qgc3RhdGUgZm9yIG11bHRpcGxlIGFkZHJlc3NlcwogICAgZnVuY3Rpb24gc2V0TWFueVdoaXRlbGlzdChhZGRyZXNzW10gX2FkZHIsIGJvb2wgX3N0YXRlKSBwdWJsaWMgb25seU93bmVyIHsKICAgICAgICBmb3IgKHVpbnQyNTYgaSA9IDA7IGkgPCBfYWRkci5sZW5ndGg7IGkrKykgewogICAgICAgICAgICBzZXRXaGl0ZWxpc3QoX2FkZHJbaV0sIF9zdGF0ZSk7CiAgICAgICAgfQogICAgfQoKICAgIC8vLyBAbm90aWNlIG9mZmNoYWluIHdoaXRlbGlzdCBjaGVjawogICAgZnVuY3Rpb24gaXNPZmZjaGFpbldoaXRlbGlzdGVkKGFkZHJlc3MgX2FkZHIsIGJ5dGVzIF9zaWcpIHB1YmxpYyB2aWV3IHJldHVybnMgKGJvb2wpIHsKICAgICAgICBieXRlczMyIGhhc2ggPSBrZWNjYWsyNTYoIlx4MTlFdGhlcmV1bSBTaWduZWQgTWVzc2FnZTpcbjIwIixfYWRkcik7CiAgICAgICAgcmV0dXJuIGhhc2gucmVjb3Zlcihfc2lnKSA9PSBzaWduZXI7CiAgICB9Cn0='.
	

]
