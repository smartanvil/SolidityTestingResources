Class {
	#name : #SRT2b2fef5a752beb8c2072e1969f4cc45b6f2eed41,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT2b2fef5a752beb8c2072e1969f4cc45b6f2eed41 >> base64 [
	^ ''.
	

]
