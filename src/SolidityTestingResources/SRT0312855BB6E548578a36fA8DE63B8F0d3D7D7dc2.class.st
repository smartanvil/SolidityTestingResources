Class {
	#name : #SRT0312855BB6E548578a36fA8DE63B8F0d3D7D7dc2,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT0312855BB6E548578a36fA8DE63B8F0d3D7D7dc2 >> base64 [
	^ 'LyoKV2VsY29tZSB0byAqIEJldCBPbiBIYXNoICoKCnRoaXMgaXMgYSByb3VuZCBiYXNlZCBiZXQgZ2FtZQphIHJvdW5kIGNvbnNpc3RzIG9mIDYgcGxheWVycwoKeW91IGJldCBvbiB0aGUgZmlyc3QgYnl0ZSBvZiB0aGUgNnRoIHBsYXllcnMgYmxvY2sgaGFzaCAodW5wcmVkaWN0YWJsZSwgNTAlIGNoYW5jZSkKCioqIHRvIGpvaW46IHNlbmQgb25lIGJ5dGUgZGF0YSAoMHgwMSBvciAweDgxKSB3aXRoIGEgYmV0IGFtb3VudCBvZiAxIGV0aGVyIHRvIHRoZSBjb250cmFjdCBhZGRyZXNzCgppZiB5b3VyIGRhdGEgYnl0ZSBpcyBsZXNzIHRoYW4gMHg4MCB5b3UgYmV0IHRoZSBsYXN0IHBsYXllcnMgYmxvY2sgaGFzaCBmaXJzdCBieXRlIGlzIGxlc3MgdGhhbiAweDgwCmlmIHlvdXIgZGF0YSBieXRlIGlzIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCAweDgwIHlvdSBiZXQgdGhlIGxhc3QgcGxheWVycyBibG9jayBoYXNoIGZpcnN0IGJ5dGUgaXMgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIDB4ODAKCmlmIHlvdSBsb3NlIHlvdXIgYmV0IHlvdXIgYmV0IGFtb3VudCBnb2VzIHRvIHRoZSBwb29sIGZvciB3aW5uZXJzCgppZiB5b3Ugd2luIHlvdXIgYmV0OgoJKiB5b3Ugd2lsbCBnZXQgYmFjayAxMDAlIG9mIHlvdXIgcGF5bWVudAoJKiB5b3Ugd2lsbCB3aW4gYSBwcm9wb3J0aW9uYWwgcGFydCBvZiB0aGUgd2lubmVyIHBvb2wgKHdpbiBhbW91bnQgPSB3aW5uZXIgcG9vbCAvIHdpbm5lcnMgLSAxJSkgCgogICoqIGluIHRoZSBiZXN0IGNhc2UgeW91IGNhbiB3aW4gNC45NSBFdGhlciAqKgoKcGF5b3V0IGlzIHRyaWdnZXJlZCB3aGVuIGEgcGxheWVyIHN0YXJ0cyB0aGUgbmV4dCByb3VuZAoKYWRkaXRpb25hbCBydWxlczoKZWFjaCBhZGRyZXNzIGNhbiBvbmx5IHBsYXkgb25jZSBwZXIgcm91bmQKZXZlcnkgYWRkaXRpb25hbCBwYXltZW50IGR1cmluZyB0aGUgc2FtZSByb3VuZCB3aWxsIGJlIHBhaWQgYmFjayBpbW1lZGlhdGx5CmV2ZXJ5IHBheW1lbnQgYmVsb3cgdGhlIGJldCB2YWx1ZSBpcyBjb25zaWRlcmVkIGFzIGEgZG9uYXRpb24gZm9yIHRoZSB3aW5uZXIgcG9vbApldmVyeSBhbW91bnQgdGhhdCBpcyBleGNlZWRpbmcgdGhlIGJldCB2YWx1ZSB3aWxsIGJlIHBhaWQgYmFjawppZiBub2JvZHkgd2lucyBpbiBhIHJvdW5kLCB0aGUgcGFpZCBhbW91bnRzIHdpbGwgcmFpc2UgdGhlIHdpbm5lciBwb29sIGZvciB0aGUgbmV4dCByb3VuZAoKKiogaWYgeW91IHBheSB0byB0aGUgY29udHJhY3QsIHlvdSBhZ3JlZSB0aGF0IHlvdSBtYXkgbG9zZSAoNTAlIGNoYW5jZSEpIHRoZSBwYWlkIGFtb3VudCAqKgoKKi8KCmNvbnRyYWN0IEJldE9uSGFzaFY4NCB7CiAgc3RydWN0IFBsYXllciB7CiAgICBhZGRyZXNzIGFkZHI7CiAgICBieXRlIGJldDsKICB9CiAgCiAgUGxheWVyW10gcHVibGljIHBsYXllcnM7CiAgYm9vbCBwdWJsaWMgYWN0aXZlOwogIHVpbnQgcHVibGljIGJldEFtb3VudDsKICB1aW50IHB1YmxpYyBwbGF5ZXJzUGVyUm91bmQ7CiAgdWludCBwdWJsaWMgcm91bmQ7CiAgdWludCBwdWJsaWMgd2luUG9vbDsKICBieXRlIHB1YmxpYyBiZXRCeXRlOwoKICB1aW50IGxhc3RQbGF5ZXJzQmxvY2tOdW1iZXI7CiAgYWRkcmVzcyBvd25lcjsKICAKICBtb2RpZmllciBvbmx5b3duZXIgeyBpZiAobXNnLnNlbmRlciA9PSBvd25lcikgXzsgfSAgCiAgZnVuY3Rpb24gQmV0T25IYXNoVjg0KCkgewogICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgYmV0QW1vdW50ID0gMSBldGhlcjsKICAgIHJvdW5kID0gMTsKICAgIHBsYXllcnNQZXJSb3VuZCA9IDY7CiAgICBhY3RpdmUgPSB0cnVlOwogICAgd2luUG9vbCA9IDA7CiAgfQogIAogIGZ1bmN0aW9uIGZpbmlzaFJvdW5kKCkgaW50ZXJuYWwgewogICAgLy9nZXQgYmxvY2sgaGFzaCBvZiBsYXN0IHBsYXllcgogICAgYnl0ZXMzMiBiZXRIYXNoID0gYmxvY2suYmxvY2toYXNoKGxhc3RQbGF5ZXJzQmxvY2tOdW1iZXIpOwogICAgYmV0Qnl0ZSA9IGJ5dGUoYmV0SGFzaCk7CiAgICBieXRlIGJldDsKICAgIHVpbnQ4IGl4OyAKICAgIAogICAgLy9jaGVjayB3aW4gb3IgbG9zcywgY2FsY3VsYXRlIHdpbm5Qb29sCiAgICBhZGRyZXNzW10gbWVtb3J5IHdpbm5lcnMgPSBuZXcgYWRkcmVzc1tdKHBsYXllcnNQZXJSb3VuZCk7CiAgICB1aW50OCBudW1XaW5uZXJzPTA7CiAgICBmb3IoaXg9MDsgaXggPCBwbGF5ZXJzLmxlbmd0aDsgaXgrKykgewogICAgICBQbGF5ZXIgcCA9IHBsYXllcnNbaXhdOwogICAgICBpZihwLmJldCA8IDB4ODAgJiYgYmV0Qnl0ZSA8IDB4ODAgfHwgcC5iZXQgPj0gMHg4MCAmJiBiZXRCeXRlID49IDB4ODApIHsKICAgICAgICAvL3BsYXllciB3b24KICAgICAgICB3aW5uZXJzW251bVdpbm5lcnMrK10gPSBwLmFkZHI7CiAgICAgIH0gCiAgICAgIGVsc2Ugd2luUG9vbCArPSBiZXRBbW91bnQ7CiAgICB9CiAgICAKICAgIC8vY2FsY3VsYXRlIHdpbm5lcnMgcGF5b3V0cyBhbmQgcGF5IG91dAogICAgaWYobnVtV2lubmVycyA+IDApIHsKICAgICAgdWludCB3aW5BbW91bnQgPSAod2luUG9vbCAvIG51bVdpbm5lcnMpICogOTkgLyAxMDA7CiAgICAgIGZvcihpeCA9IDA7IGl4IDwgbnVtV2lubmVyczsgaXgrKykgewogICAgICAgIGlmKCF3aW5uZXJzW2l4XS5zZW5kKGJldEFtb3VudCArIHdpbkFtb3VudCkpIHRocm93OwogICAgICB9CiAgICAgIHdpblBvb2wgPSAwOwogICAgfQogICAgCiAgICAvL3N0YXJ0IG5leHQgcm91bmQKICAgIHJvdW5kKys7CiAgICBkZWxldGUgcGxheWVyczsKICB9CiAgCiAgZnVuY3Rpb24gcmVqZWN0KCkgaW50ZXJuYWwgewogICAgbXNnLnNlbmRlci5zZW5kKG1zZy52YWx1ZSk7CiAgfQogIAogIGZ1bmN0aW9uIGpvaW4oKSBpbnRlcm5hbCB7CiAgICAvL2ZpbmlzaCByb3VuZCBpZiBuZXh0IHBsYXllcnMgYmxvY2sgaXMgYWJvdmUgbGFzdCBwbGF5ZXJzIGJsb2NrCiAgICBpZihwbGF5ZXJzLmxlbmd0aCA+PSBwbGF5ZXJzUGVyUm91bmQpIHsgCiAgICAgIGlmKGJsb2NrLm51bWJlciA+IGxhc3RQbGF5ZXJzQmxvY2tOdW1iZXIpIGZpbmlzaFJvdW5kKCk7IAogICAgICBlbHNlIHtyZWplY3QoKTsgcmV0dXJuO30gIC8vdG9vIG1hbnkgcGxheWVycyBpbiBvbmUgYmxvY2sgLT4gcGF5IGJhY2sKICAgIH0KCiAgICAvL3BheW1lbnRzIGJlbG93IGJldCBhbW91bnQgYXJlIGNvbnNpZGVyZWQgYXMgZG9uYXRpb24gZm9yIHRoZSB3aW5uZXIgcG9vbAogICAgaWYobXNnLnZhbHVlIDwgYmV0QW1vdW50KSB7CiAgICAgIHdpblBvb2wgKz0gbXNnLnZhbHVlOyAKICAgICAgcmV0dXJuOwogICAgfQogICAgCiAgICAvL25vIGRhdGEgc2VudCAtPiBwYXkgYmFjawogICAgaWYobXNnLmRhdGEubGVuZ3RoIDwgMSkge3JlamVjdCgpO3JldHVybjt9CiAgICAKICAgIC8vcHJldmVudCBwbGF5ZXJzIHRvIHBsYXkgbW9yZSB0aGFuIG9uY2UgcGVyIHJvdW5kOgogICAgZm9yKHVpbnQ4IGkgPSAwOyBpIDwgcGxheWVycy5sZW5ndGg7IGkrKykKICAgICAgaWYobXNnLnNlbmRlciA9PSBwbGF5ZXJzW2ldLmFkZHIpIHtyZWplY3QoKTsgcmV0dXJuO30KICAgIAogICAgLy90byBtdWNoIHBhaWQgLT4gcGF5IGJhY2sgYWxsIGFib3ZlIGJldCBhbW91bnQKICAgIGlmKG1zZy52YWx1ZSA+IGJldEFtb3VudCkgewogICAgICBtc2cuc2VuZGVyLnNlbmQobXNnLnZhbHVlIC0gYmV0QW1vdW50KTsKICAgIH0KICAgIAogICAgLy9yZWdpc3RlciBwbGF5ZXIKICAgIHBsYXllcnMucHVzaCggUGxheWVyKG1zZy5zZW5kZXIsIG1zZy5kYXRhWzBdKSApOwogICAgbGFzdFBsYXllcnNCbG9ja051bWJlciA9IGJsb2NrLm51bWJlcjsKICB9CiAgCiAgZnVuY3Rpb24gKCkgewogICAgaWYoYWN0aXZlKSBqb2luKCk7CiAgICBlbHNlIHRocm93OwogIH0KICAKICBmdW5jdGlvbiBwYXliYWNrTGFzdCgpIG9ubHlvd25lciByZXR1cm5zIChib29sKSB7CiAgICBpZihwbGF5ZXJzLmxlbmd0aCA9PSAwKSByZXR1cm4gdHJ1ZTsKICAgIGlmIChwbGF5ZXJzW3BsYXllcnMubGVuZ3RoIC0gMV0uYWRkci5zZW5kKGJldEFtb3VudCkpIHsKICAgICAgcGxheWVycy5sZW5ndGgtLTsKICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgICByZXR1cm4gZmFsc2U7CiAgfQogIAogIC8vaWYgc29tZXRoaW5nIGdvZXMgd3JvbmcsIHRoZSBvd25lciBjYW4gdHJpZ2dlciBwYXkgYmFjawogIGZ1bmN0aW9uIHBheWJhY2tBbGwoKSBvbmx5b3duZXIgcmV0dXJucyAoYm9vbCkgewogICAgd2hpbGUocGxheWVycy5sZW5ndGggPiAwKSB7aWYoIXBheWJhY2tMYXN0KCkpIHJldHVybiBmYWxzZTt9CiAgICByZXR1cm4gdHJ1ZTsKICB9CiAgCiAgZnVuY3Rpb24gY29sbGVjdEZlZXMoKSBvbmx5b3duZXIgewogICAgdWludCBwbGF5ZXJzRXRoZXIgPSB3aW5Qb29sOwogICAgdWludDggaXg7CiAgICBmb3IoaXg9MDsgaXggPCBwbGF5ZXJzLmxlbmd0aDsgaXgrKykgcGxheWVyc0V0aGVyICs9IGJldEFtb3VudDsKICAgIHVpbnQgZmVlcyA9IHRoaXMuYmFsYW5jZSAtIHBsYXllcnNFdGhlcjsKICAgIGlmKGZlZXMgPiAwKSBvd25lci5zZW5kKGZlZXMpOwogIH0KICAKICBmdW5jdGlvbiBjaGFuZ2VPd25lcihhZGRyZXNzIF9vd25lcikgb25seW93bmVyIHsKICAgIG93bmVyID0gX293bmVyOwogIH0KICAKICBmdW5jdGlvbiBzZXRQbGF5ZXJzUGVyUm91bmQodWludCBudW0pIG9ubHlvd25lciB7CiAgICBpZihwbGF5ZXJzLmxlbmd0aCA+IDApIGZpbmlzaFJvdW5kKCk7CiAgICBwbGF5ZXJzUGVyUm91bmQgPSBudW07CiAgfQogIAogIGZ1bmN0aW9uIHN0b3AoKSBvbmx5b3duZXIgewogICAgYWN0aXZlID0gZmFsc2U7CiAgICBwYXliYWNrQWxsKCk7CiAgfQogIAogIGZ1bmN0aW9uIG51bWJlck9mUGxheWVyc0luQ3VycmVudFJvdW5kKCkgY29uc3RhbnQgcmV0dXJucyAodWludCBjb3VudCkgewogICAgY291bnQgPSBwbGF5ZXJzLmxlbmd0aDsKICB9CgogIC8vY29udHJhY3QgY2FuIG9ubHkgYmUgZGVzdHJ1Y3RlZCBpZiBhbGwgcGF5bWVudHMgd2hlcmUgcGFpZCBiYWNrICAKICBmdW5jdGlvbiBraWxsKCkgb25seW93bmVyIHsKICAgIGlmKCFhY3RpdmUgJiYgcGF5YmFja0FsbCgpKSAKICAgICAgc2VsZmRlc3RydWN0KG93bmVyKTsKICB9Cn0='.
	

]
