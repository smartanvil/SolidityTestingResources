Class {
	#name : #SRT59ce745a233aea0640981b6f5be63cadb7bfc505,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT59ce745a233aea0640981b6f5be63cadb7bfc505 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTM7CgovKioKICogRXRoZXJjcmFmdEZhcm0gRnJvbnQtZW5kOgogKiBodHRwczovL21yeWVsbG93LmdpdGh1Yi5pby9ldGhlcmNyYWZ0X2Zhcm1fdWkvCiAqLwoKY29udHJhY3QgT3duYWJsZSB7CiAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CgoKICBldmVudCBPd25lcnNoaXBUcmFuc2ZlcnJlZChhZGRyZXNzIGluZGV4ZWQgcHJldmlvdXNPd25lciwgYWRkcmVzcyBpbmRleGVkIG5ld093bmVyKTsKCgogIC8qKgogICAqIEBkZXYgVGhlIE93bmFibGUgY29uc3RydWN0b3Igc2V0cyB0aGUgb3JpZ2luYWwgYG93bmVyYCBvZiB0aGUgY29udHJhY3QgdG8gdGhlIHNlbmRlcgogICAqIGFjY291bnQuCiAgICovCiAgZnVuY3Rpb24gT3duYWJsZSgpIHB1YmxpYyB7CiAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgfQoKICAvKioKICAgKiBAZGV2IFRocm93cyBpZiBjYWxsZWQgYnkgYW55IGFjY291bnQgb3RoZXIgdGhhbiB0aGUgb3duZXIuCiAgICovCiAgbW9kaWZpZXIgb25seU93bmVyKCkgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyKTsKICAgIF87CiAgfQoKICAvKioKICAgKiBAZGV2IEFsbG93cyB0aGUgY3VycmVudCBvd25lciB0byB0cmFuc2ZlciBjb250cm9sIG9mIHRoZSBjb250cmFjdCB0byBhIG5ld093bmVyLgogICAqIEBwYXJhbSBuZXdPd25lciBUaGUgYWRkcmVzcyB0byB0cmFuc2ZlciBvd25lcnNoaXAgdG8uCiAgICovCiAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBuZXdPd25lcikgcHVibGljIG9ubHlPd25lciB7CiAgICByZXF1aXJlKG5ld093bmVyICE9IGFkZHJlc3MoMCkpOwogICAgT3duZXJzaGlwVHJhbnNmZXJyZWQob3duZXIsIG5ld093bmVyKTsKICAgIG93bmVyID0gbmV3T3duZXI7CiAgfQoKfQoKbGlicmFyeSBTYWZlTWF0aCB7CgogIC8qKgogICogQGRldiBNdWx0aXBsaWVzIHR3byBudW1iZXJzLCB0aHJvd3Mgb24gb3ZlcmZsb3cuCiAgKi8KICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgaWYgKGEgPT0gMCkgewogICAgICByZXR1cm4gMDsKICAgIH0KICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGMgLyBhID09IGIpOwogICAgcmV0dXJuIGM7CiAgfQoKICAvKioKICAqIEBkZXYgSW50ZWdlciBkaXZpc2lvbiBvZiB0d28gbnVtYmVycywgdHJ1bmNhdGluZyB0aGUgcXVvdGllbnQuCiAgKi8KICBmdW5jdGlvbiBkaXYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgLy8gYXNzZXJ0KGIgPiAwKTsgLy8gU29saWRpdHkgYXV0b21hdGljYWxseSB0aHJvd3Mgd2hlbiBkaXZpZGluZyBieSAwCiAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgIC8vIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOyAvLyBUaGVyZSBpcyBubyBjYXNlIGluIHdoaWNoIHRoaXMgZG9lc24ndCBob2xkCiAgICByZXR1cm4gYzsKICB9CgogIC8qKgogICogQGRldiBTdWJzdHJhY3RzIHR3byBudW1iZXJzLCB0aHJvd3Mgb24gb3ZlcmZsb3cgKGkuZS4gaWYgc3VidHJhaGVuZCBpcyBncmVhdGVyIHRoYW4gbWludWVuZCkuCiAgKi8KICBmdW5jdGlvbiBzdWIodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICAvKioKICAqIEBkZXYgQWRkcyB0d28gbnVtYmVycywgdGhyb3dzIG9uIG92ZXJmbG93LgogICovCiAgZnVuY3Rpb24gYWRkKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgYXNzZXJ0KGMgPj0gYSk7CiAgICByZXR1cm4gYzsKICB9Cn0KCmNvbnRyYWN0IFNob3BJbnRlcmZhY2UKewogICAgT2JqZWN0SW50ZXJmYWNlIHB1YmxpYyBvYmplY3Q7CiAgICBmdW5jdGlvbiBidXlPYmplY3QoYWRkcmVzcyBfYmVuZWZpY2lhcnkpIHB1YmxpYyBwYXlhYmxlOwp9Cgpjb250cmFjdCBSZWVudHJhbmN5R3VhcmQgewoKICAvKioKICAgKiBAZGV2IFdlIHVzZSBhIHNpbmdsZSBsb2NrIGZvciB0aGUgd2hvbGUgY29udHJhY3QuCiAgICovCiAgYm9vbCBwcml2YXRlIHJlZW50cmFuY3lfbG9jayA9IGZhbHNlOwoKICAvKioKICAgKiBAZGV2IFByZXZlbnRzIGEgY29udHJhY3QgZnJvbSBjYWxsaW5nIGl0c2VsZiwgZGlyZWN0bHkgb3IgaW5kaXJlY3RseS4KICAgKiBAbm90aWNlIElmIHlvdSBtYXJrIGEgZnVuY3Rpb24gYG5vblJlZW50cmFudGAsIHlvdSBzaG91bGQgYWxzbwogICAqIG1hcmsgaXQgYGV4dGVybmFsYC4gQ2FsbGluZyBvbmUgbm9uUmVlbnRyYW50IGZ1bmN0aW9uIGZyb20KICAgKiBhbm90aGVyIGlzIG5vdCBzdXBwb3J0ZWQuIEluc3RlYWQsIHlvdSBjYW4gaW1wbGVtZW50IGEKICAgKiBgcHJpdmF0ZWAgZnVuY3Rpb24gZG9pbmcgdGhlIGFjdHVhbCB3b3JrLCBhbmQgYSBgZXh0ZXJuYWxgCiAgICogd3JhcHBlciBtYXJrZWQgYXMgYG5vblJlZW50cmFudGAuCiAgICovCiAgbW9kaWZpZXIgbm9uUmVlbnRyYW50KCkgewogICAgcmVxdWlyZSghcmVlbnRyYW5jeV9sb2NrKTsKICAgIHJlZW50cmFuY3lfbG9jayA9IHRydWU7CiAgICBfOwogICAgcmVlbnRyYW5jeV9sb2NrID0gZmFsc2U7CiAgfQoKfQoKY29udHJhY3QgRXRoZXJjcmFmdEZhcm0gaXMgT3duYWJsZSwgUmVlbnRyYW5jeUd1YXJkIHsKICAgIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwoKICAgIC8vIFRPRE86IENvdWxkIGJlIHByaXZhdGUgd2l0aCBnZXR0ZXIgb25seSBhbGxvd2luZyBzZW5kZXJzIGJhbGFuY2UgbG9va3VwLgogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBwdWJsaWMgdG9rZW5CYWxhbmNlT2Y7CgogICAgZnVuY3Rpb24oKSBwYXlhYmxlIHB1YmxpYyB7CiAgICAgICAgLy9vd25lci50cmFuc2Zlcihtc2cudmFsdWUpOwogICAgfQoKICAgIGZ1bmN0aW9uIHByZXAoYWRkcmVzcyBfc2hvcCwgdWludDggX2l0ZXJhdGlvbnMpIG5vblJlZW50cmFudCBleHRlcm5hbCB7CiAgICAgICAgcmVxdWlyZShfc2hvcCAhPSBhZGRyZXNzKDApKTsKCiAgICAgICAgdWludDggX2xlbiA9IDE7CiAgICAgICAgaWYgKF9pdGVyYXRpb25zID4gMSkKICAgICAgICAgICAgX2xlbiA9IF9pdGVyYXRpb25zOwoKICAgICAgICBTaG9wSW50ZXJmYWNlIHNob3AgPSBTaG9wSW50ZXJmYWNlKF9zaG9wKTsKICAgICAgICBmb3IgKHVpbnQ4IGkgPSAwOyBpIDwgX2xlbiAqIDEwMDsgaSsrKSB7CiAgICAgICAgICAgIHNob3AuYnV5T2JqZWN0KHRoaXMpOwogICAgICAgIH0KCiAgICAgICAgT2JqZWN0SW50ZXJmYWNlIG9iamVjdCA9IE9iamVjdEludGVyZmFjZShzaG9wLm9iamVjdCgpKTsKICAgICAgICB0b2tlbkJhbGFuY2VPZlttc2cuc2VuZGVyXVtvYmplY3RdID0gdG9rZW5CYWxhbmNlT2ZbbXNnLnNlbmRlcl1bb2JqZWN0XS5hZGQodWludDI1NihfbGVuICogOTkgZXRoZXIpKTsKICAgICAgICB0b2tlbkJhbGFuY2VPZltvd25lcl1bb2JqZWN0XSA9IHRva2VuQmFsYW5jZU9mW293bmVyXVtvYmplY3RdLmFkZCh1aW50MjU2KF9sZW4gKiAxIGV0aGVyKSk7CiAgICB9CgogICAgZnVuY3Rpb24gcmVhcChhZGRyZXNzIF9vYmplY3QpIG5vblJlZW50cmFudCBleHRlcm5hbCB7CiAgICAgICAgcmVxdWlyZShfb2JqZWN0ICE9IGFkZHJlc3MoMCkpOwogICAgICAgIHJlcXVpcmUodG9rZW5CYWxhbmNlT2ZbbXNnLnNlbmRlcl1bX29iamVjdF0gPiAwKTsKCiAgICAgICAgLy8gUmV0cmlldmUgYW55IGFjY3VtdWxhdGVkIEVUSC4KICAgICAgICBpZiAobXNnLnNlbmRlciA9PSBvd25lcikKICAgICAgICAgICAgb3duZXIudHJhbnNmZXIodGhpcy5iYWxhbmNlKTsKCiAgICAgICAgT2JqZWN0SW50ZXJmYWNlKF9vYmplY3QpLnRyYW5zZmVyKG1zZy5zZW5kZXIsIHRva2VuQmFsYW5jZU9mW21zZy5zZW5kZXJdW19vYmplY3RdKTsKICAgICAgICB0b2tlbkJhbGFuY2VPZlttc2cuc2VuZGVyXVtfb2JqZWN0XSA9IDA7CiAgICB9Cgp9Cgpjb250cmFjdCBPYmplY3RJbnRlcmZhY2UKewogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyB0bywgdWludDI1NiB2YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpOwp9'.
	

]
