Class {
	#name : #SRT169e59a41ba10600fddd1b0a72921f503b31d96b,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT169e59a41ba10600fddd1b0a72921f503b31d96b >> base64 [
	^ ''.
	

]
