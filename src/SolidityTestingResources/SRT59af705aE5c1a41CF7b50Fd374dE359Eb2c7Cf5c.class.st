Class {
	#name : #SRT59af705aE5c1a41CF7b50Fd374dE359Eb2c7Cf5c,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT59af705aE5c1a41CF7b50Fd374dE359Eb2c7Cf5c >> base64 [
	^ ''.
	

]
