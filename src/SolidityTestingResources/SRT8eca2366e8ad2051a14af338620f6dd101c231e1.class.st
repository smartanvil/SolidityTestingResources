Class {
	#name : #SRT8eca2366e8ad2051a14af338620f6dd101c231e1,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT8eca2366e8ad2051a14af338620f6dd101c231e1 >> base64 [
	^ ''.
	

]
