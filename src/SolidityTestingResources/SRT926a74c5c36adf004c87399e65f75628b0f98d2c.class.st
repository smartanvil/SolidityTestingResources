Class {
	#name : #SRT926a74c5c36adf004c87399e65f75628b0f98d2c,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT926a74c5c36adf004c87399e65f75628b0f98d2c >> base64 [
	^ ''.
	

]
