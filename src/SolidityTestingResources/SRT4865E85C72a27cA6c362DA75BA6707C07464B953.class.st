Class {
	#name : #SRT4865E85C72a27cA6c362DA75BA6707C07464B953,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT4865E85C72a27cA6c362DA75BA6707C07464B953 >> base64 [
	^ 'Ly8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlRSRUFTVVJFIENIRVNUIEdBTUUKLy8KLy8KLy8gIEhlbGxvIHBsYXllciwgdGhpcyBpcyBhIFRyZWFzdXJlIENoZXN0IGdhbWUsIGV2ZXJ5IHBsYXllciB0aGF0IGRlcG9zaXQncyBoZXJlIHdpbGwgZ2V0IGEgZ3VhcmFudGVlZCA2JSBwYXlvdXQgb2YgdGhlaXIgYmFsYW5jZSBhZnRlciBzb21lYm9keSBhZnRlciBoaW0gZGVwb3NpdHMhCi8vICBFdmVyeSAzMHRoIGludmVzdG9yIHJlY2VpdmVzIDE4JSBpbnN0ZWFkIG9mIDYlLCB0aGF0IGlzIHRoZSBqYWNrcG90IHNwb3QgdGhhdCBwYXlzIDN4IG1vcmUsIGludmVzdCBxdWlja2x5ICxhbmQgeW91IGNhbiBlYXJuIGEgcGFzc2l2ZSBpbmNvbWUgcmlnaHQgbm93IQovLwovLyAgVGhpcyBjb250cmFjdCBpcyBidWctdGVzdGVkLCBhbmQgaXQgaGFzIG5vbmUsIGZlZWwgY29tZm9ydGFibGUgdG8gYW5hbHlzZSB0aGUgY29kZSB5b3Vyc2VsZiwgaXQncyBvcGVuIHNvdXJjZSBhbmQgdHJhbnNwYXJlbnQhCi8vICBFbmpveSB0aGlzIGdhbWUsIGFuZCBlYXJuIEV0aGVyZXVtIG5vdyEKLy8KLy8gIENvcHlyaWdodCAgJiMxOTQ7JiMxNjk7ICAyMDE2ICBEYXZpZCBXZWlzc21hbiBmcm9tIE5aCi8vCi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipTVEFSVApjb250cmFjdCBUcmVhc3VyZUNoZXN0IHsKCiAgc3RydWN0IEludmVzdG9yQXJyYXkgewogICAgICBhZGRyZXNzIGV0aGVyQWRkcmVzczsKICAgICAgdWludCBhbW91bnQ7CiAgfQoKICBJbnZlc3RvckFycmF5W10gcHVibGljIGludmVzdG9yczsKCi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipQVUJMSUMgVkFSSUFCTEVTCgogIHVpbnQgcHVibGljIGludmVzdG9yc19uZWVkZWRfdW50aWxfamFja3BvdD0wOwogIHVpbnQgcHVibGljIHRvdGFscGxheWVycz0wOwogIHVpbnQgcHVibGljIGZlZXM9MDsKICB1aW50IHB1YmxpYyBiYWxhbmNlID0gMDsKICB1aW50IHB1YmxpYyB0b3RhbGRlcG9zaXRlZD0wOwogIHVpbnQgcHVibGljIHRvdGFscGFpZG91dD0wOwoKICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKCiAgLy8gc2ltcGxlIHNpbmdsZS1zaWcgZnVuY3Rpb24gbW9kaWZpZXIKICBtb2RpZmllciBvbmx5b3duZXIgeyBpZiAobXNnLnNlbmRlciA9PSBvd25lcikgXzsgfQovLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqSU5JVAoKICBmdW5jdGlvbiBUcmVhc3VyZUNoZXN0KCkgewogICAgb3duZXIgPSBtc2cuc2VuZGVyOwogIH0KCi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipUUklHR0VSCgogIGZ1bmN0aW9uKCkgewogICAgZW50ZXIoKTsKICB9CiAgCi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipFTlRFUgoKICBmdW5jdGlvbiBlbnRlcigpIHsKICAgIGlmIChtc2cudmFsdWUgPCA1MCBmaW5uZXkpIHsKICAgICAgICBtc2cuc2VuZGVyLnNlbmQobXNnLnZhbHVlKTsKICAgICAgICByZXR1cm47CiAgICB9CgkKICAgIHVpbnQgYW1vdW50PW1zZy52YWx1ZTsKCgogICAgLy8gYWRkIGEgbmV3IHBhcnRpY2lwYW50IHRvIHRoZSBzeXN0ZW0gYW5kIGNhbGN1bGF0ZSB0b3RhbCBwbGF5ZXJzCiAgICB1aW50IHRvdF9wbCA9IGludmVzdG9ycy5sZW5ndGg7CiAgICB0b3RhbHBsYXllcnM9dG90X3BsKzE7CiAgICBpbnZlc3RvcnNfbmVlZGVkX3VudGlsX2phY2twb3Q9MzAtKHRvdGFscGxheWVycyAlIDMwKTsKICAgIGludmVzdG9ycy5sZW5ndGggKz0gMTsKICAgIGludmVzdG9yc1t0b3RfcGxdLmV0aGVyQWRkcmVzcyA9IG1zZy5zZW5kZXI7CiAgICBpbnZlc3RvcnNbdG90X3BsXS5hbW91bnQgPSBhbW91bnQ7CgoKCiAgICAvLyBjb2xsZWN0IGZlZXMgYW5kIHVwZGF0ZSBjb250cmFjdCBiYWxhbmNlIGFuZCBkZXBvc2l0ZWQgYW1vdW50CiAgICAgIGZlZXMgID0gYW1vdW50IC8gMTU7ICAgICAgICAgICAgIC8vIDYuNjY2JSBmZWUgdG8gdGhlIG93bmVyCiAgICAgIGJhbGFuY2UgKz0gYW1vdW50OyAgICAgICAgICAgICAgIC8vIGJhbGFuY2UgdXBkYXRlCiAgICAgIHRvdGFsZGVwb3NpdGVkKz1hbW91bnQ7ICAgICAgIC8vdXBkYXRlIGRlcG9zaXRlZCBhbW91bnQKCiAgICAvLyBwYXkgb3V0IGZlZXMgdG8gdGhlIG93bmVyCiAgICAgaWYgKGZlZXMgIT0gMCkgCiAgICAgewogICAgIAlpZihiYWxhbmNlPmZlZXMpCgl7CiAgICAgIAlvd25lci5zZW5kKGZlZXMpOwogICAgICAJYmFsYW5jZSAtPSBmZWVzOyAgICAgICAgICAgICAgICAgLy9iYWxhbmNlIHVwZGF0ZQoJdG90YWxwYWlkb3V0Kz1mZWVzOyAgICAgICAgICAvL3VwZGF0ZSBwYWlkIG91dCBhbW91bnQKCX0KICAgICB9CiAKCiAgIC8vbG9vcCB2YXJpYWJsZXMKICAgIHVpbnQgcGF5b3V0OwogICAgdWludCBucj0wOwoJCiAgICB3aGlsZSAoYmFsYW5jZSA+IGludmVzdG9yc1tucl0uYW1vdW50ICogNi8xMDAgJiYgbnI8dG90X3BsKSAgLy9leGl0IGNvbmRpdGlvbiB0byBhdm9pZCBpbmZpbml0ZSBsb29wCiAgICB7IAogICAgIAogICAgIGlmKG5yJTMwPT0wICYmICBiYWxhbmNlID4gaW52ZXN0b3JzW25yXS5hbW91bnQgKiAxOC8xMDApCiAgICAgewogICAgICBwYXlvdXQgPSBpbnZlc3RvcnNbbnJdLmFtb3VudCAqIDE4LzEwMDsgICAgICAgICAgICAgICAgICAgICAgICAvL2NhbGN1bGF0ZSBwYXkgb3V0CiAgICAgIGludmVzdG9yc1tucl0uZXRoZXJBZGRyZXNzLnNlbmQocGF5b3V0KTsgICAgICAgICAgICAgICAgICAgICAgLy9zZW5kIHBheSBvdXQgdG8gcGFydGljaXBhbnQKICAgICAgYmFsYW5jZSAtPSBpbnZlc3RvcnNbbnJdLmFtb3VudCAqIDE4LzEwMDsgICAgICAgICAgICAgICAgICAgICAgLy9iYWxhbmNlIHVwZGF0ZQogICAgICB0b3RhbHBhaWRvdXQgKz0gaW52ZXN0b3JzW25yXS5hbW91bnQgKiAxOC8xMDA7ICAgICAgICAgICAgICAgLy91cGRhdGUgcGFpZCBvdXQgYW1vdW50CiAgICAgIH0KICAgICBlbHNlCiAgICAgewogICAgICBwYXlvdXQgPSBpbnZlc3RvcnNbbnJdLmFtb3VudCAqNi8xMDA7ICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9jYWxjdWxhdGUgcGF5IG91dAogICAgICBpbnZlc3RvcnNbbnJdLmV0aGVyQWRkcmVzcy5zZW5kKHBheW91dCk7ICAgICAgICAgICAgICAgICAgICAgICAgLy9zZW5kIHBheSBvdXQgdG8gcGFydGljaXBhbnQKICAgICAgYmFsYW5jZSAtPSBpbnZlc3RvcnNbbnJdLmFtb3VudCAqNi8xMDA7ICAgICAgICAgICAgICAgICAgICAgICAgIC8vYmFsYW5jZSB1cGRhdGUKICAgICAgdG90YWxwYWlkb3V0ICs9IGludmVzdG9yc1tucl0uYW1vdW50ICo2LzEwMDsgICAgICAgICAgICAgICAgIC8vdXBkYXRlIHBhaWQgb3V0IGFtb3VudAogICAgICB9CiAgICAgIAogICAgICBuciArPSAxOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL2dvIHRvIG5leHQgcGFydGljaXBhbnQKICAgIH0KICAgIAogICAgCiAgfQoKLy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKk5FVyBPV05FUgoKICBmdW5jdGlvbiBzZXRPd25lcihhZGRyZXNzIG5ld19vd25lcikgb25seW93bmVyIHsKICAgICAgb3duZXIgPSBuZXdfb3duZXI7CiAgfQp9'.
	

]
