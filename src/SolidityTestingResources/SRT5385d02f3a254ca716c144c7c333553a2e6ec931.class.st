Class {
	#name : #SRT5385d02f3a254ca716c144c7c333553a2e6ec931,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT5385d02f3a254ca716c144c7c333553a2e6ec931 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMjsKCi8qKgogKiBAbm90aWNlIERlY2xhcmVzIGEgY29udHJhY3QgdGhhdCBjYW4gaGF2ZSBhbiBvd25lci4KICovCmNvbnRyYWN0IE93bmVkSSB7CiAgICBldmVudCBMb2dPd25lckNoYW5nZWQoYWRkcmVzcyBpbmRleGVkIHByZXZpb3VzT3duZXIsIGFkZHJlc3MgaW5kZXhlZCBuZXdPd25lcik7CgogICAgZnVuY3Rpb24gZ2V0T3duZXIoKQogICAgICAgIGNvbnN0YW50CiAgICAgICAgcmV0dXJucyAoYWRkcmVzcyk7CgogICAgZnVuY3Rpb24gc2V0T3duZXIoYWRkcmVzcyBuZXdPd25lcikKICAgICAgICByZXR1cm5zIChib29sIHN1Y2Nlc3MpOyAKfQoKLyoqCiAqIEBub3RpY2UgRGVmaW5lcyBhIGNvbnRyYWN0IHRoYXQgY2FuIGhhdmUgYW4gb3duZXIuCiAqLwpjb250cmFjdCBPd25lZCBpcyBPd25lZEkgewogICAgLyoqCiAgICAgKiBAZGV2IE1hZGUgcHJpdmF0ZSB0byBwcm90ZWN0IGFnYWluc3QgY2hpbGQgY29udHJhY3Qgc2V0dGluZyBpdCB0byAwIGJ5IG1pc3Rha2UuCiAgICAgKi8KICAgIGFkZHJlc3MgcHJpdmF0ZSBvd25lcjsKCiAgICBmdW5jdGlvbiBPd25lZCgpIHsKICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgICB9CgogICAgbW9kaWZpZXIgZnJvbU93bmVyIHsKICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lcikgewogICAgICAgICAgICB0aHJvdzsKICAgICAgICB9CiAgICAgICAgXzsKICAgIH0KCiAgICBmdW5jdGlvbiBnZXRPd25lcigpCiAgICAgICAgY29uc3RhbnQKICAgICAgICByZXR1cm5zIChhZGRyZXNzKSB7CiAgICAgICAgcmV0dXJuIG93bmVyOwogICAgfQoKICAgIGZ1bmN0aW9uIHNldE93bmVyKGFkZHJlc3MgbmV3T3duZXIpCiAgICAgICAgZnJvbU93bmVyIAogICAgICAgIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGlmIChuZXdPd25lciA9PSAwKSB7CiAgICAgICAgICAgIHRocm93OwogICAgICAgIH0KICAgICAgICBpZiAob3duZXIgIT0gbmV3T3duZXIpIHsKICAgICAgICAgICAgTG9nT3duZXJDaGFuZ2VkKG93bmVyLCBuZXdPd25lcik7CiAgICAgICAgICAgIG93bmVyID0gbmV3T3duZXI7CiAgICAgICAgfQogICAgICAgIHN1Y2Nlc3MgPSB0cnVlOwogICAgfQp9Cgpjb250cmFjdCBCYWxhbmNlRml4YWJsZSBpcyBPd25lZEkgewogICAgZnVuY3Rpb24gZml4QmFsYW5jZSgpIAogICAgICAgIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGlmICghZ2V0T3duZXIoKS5zZW5kKHRoaXMuYmFsYW5jZSkpIHsKICAgICAgICAgICAgdGhyb3c7CiAgICAgICAgfQogICAgICAgIHJldHVybiB0cnVlOwogICAgfQp9CgovLyBAbm90aWNlIEludGVyZmFjZSBmb3IgYSBjZXJ0aWZpZXIgZGF0YWJhc2UKY29udHJhY3QgQ2VydGlmaWVyRGJJIHsKICAgIGV2ZW50IExvZ0NlcnRpZmllckFkZGVkKGFkZHJlc3MgaW5kZXhlZCBjZXJ0aWZpZXIpOwoKICAgIGV2ZW50IExvZ0NlcnRpZmllclJlbW92ZWQoYWRkcmVzcyBpbmRleGVkIGNlcnRpZmllcik7CgogICAgZnVuY3Rpb24gYWRkQ2VydGlmaWVyKGFkZHJlc3MgY2VydGlmaWVyKQogICAgICAgIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CgogICAgZnVuY3Rpb24gcmVtb3ZlQ2VydGlmaWVyKGFkZHJlc3MgY2VydGlmaWVyKQogICAgICAgIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CgogICAgZnVuY3Rpb24gZ2V0Q2VydGlmaWVyc0NvdW50KCkKICAgICAgICBjb25zdGFudAogICAgICAgIHJldHVybnMgKHVpbnQgY291bnQpOwoKICAgIGZ1bmN0aW9uIGdldENlcnRpZmllclN0YXR1cyhhZGRyZXNzIGNlcnRpZmllckFkZHIpCiAgICAgICAgY29uc3RhbnQgCiAgICAgICAgcmV0dXJucyAoYm9vbCBhdXRob3Jpc2VkLCB1aW50MjU2IGluZGV4KTsKCiAgICBmdW5jdGlvbiBnZXRDZXJ0aWZpZXJBdEluZGV4KHVpbnQyNTYgaW5kZXgpCiAgICAgICAgY29uc3RhbnQKICAgICAgICByZXR1cm5zIChhZGRyZXNzKTsKCiAgICBmdW5jdGlvbiBpc0NlcnRpZmllcihhZGRyZXNzIGNlcnRpZmllcikKICAgICAgICBjb25zdGFudAogICAgICAgIHJldHVybnMgKGJvb2wgaXNJbmRlZWQpOwp9Cgpjb250cmFjdCBDZXJ0aWZpZXJEYiBpcyBPd25lZCwgQ2VydGlmaWVyRGJJLCBCYWxhbmNlRml4YWJsZSB7CiAgICBzdHJ1Y3QgQ2VydGlmaWVyIHsKICAgICAgICBib29sIGF1dGhvcmlzZWQ7CiAgICAgICAgLyoqCiAgICAgICAgICogQG5vdGljZSBUaGUgaW5kZXggaW4gdGhlIHRhYmxlIGF0IHdoaWNoIHRoaXMgY2VydGlmaWVyIGNhbiBiZSBmb3VuZC4KICAgICAgICAgKi8KICAgICAgICB1aW50MjU2IGluZGV4OwogICAgfQoKICAgIC8qKgogICAgICogQG5vdGljZSBBZGRyZXNzZXMgb2YgdGhlIGFjY291bnQgb3IgY29udHJhY3QgdGhhdCBhcmUgZW50aXRsZWQgdG8gY2VydGlmeSBzdHVkZW50cy4KICAgICAqLwogICAgbWFwcGluZyhhZGRyZXNzID0+IENlcnRpZmllcikgcHJpdmF0ZSBjZXJ0aWZpZXJTdGF0dXNlczsKICAgIAogICAgLyoqCiAgICAgKiBAbm90aWNlIFRoZSBwb3RlbnRpYWxseSBsb25nIGxpc3Qgb2YgYWxsIGNlcnRpZmllcnMuCiAgICAgKi8KICAgIGFkZHJlc3NbXSBwcml2YXRlIGNlcnRpZmllcnM7CgogICAgbW9kaWZpZXIgZnJvbUNlcnRpZmllciB7CiAgICAgICAgaWYgKCFjZXJ0aWZpZXJTdGF0dXNlc1ttc2cuc2VuZGVyXS5hdXRob3Jpc2VkKSB7CiAgICAgICAgICAgIHRocm93OwogICAgICAgIH0KICAgICAgICBfOwogICAgfQoKICAgIGZ1bmN0aW9uIENlcnRpZmllckRiKCkgewogICAgICAgIGlmIChtc2cudmFsdWUgPiAwKSB7CiAgICAgICAgICAgIHRocm93OwogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBhZGRDZXJ0aWZpZXIoYWRkcmVzcyBjZXJ0aWZpZXIpCiAgICAgICAgZnJvbU93bmVyCiAgICAgICAgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgaWYgKGNlcnRpZmllciA9PSAwKSB7CiAgICAgICAgICAgIHRocm93OwogICAgICAgIH0KICAgICAgICBpZiAoIWNlcnRpZmllclN0YXR1c2VzW2NlcnRpZmllcl0uYXV0aG9yaXNlZCkgewogICAgICAgICAgICBjZXJ0aWZpZXJTdGF0dXNlc1tjZXJ0aWZpZXJdLmF1dGhvcmlzZWQgPSB0cnVlOwogICAgICAgICAgICBjZXJ0aWZpZXJTdGF0dXNlc1tjZXJ0aWZpZXJdLmluZGV4ID0gY2VydGlmaWVycy5sZW5ndGg7CiAgICAgICAgICAgIGNlcnRpZmllcnMucHVzaChjZXJ0aWZpZXIpOwogICAgICAgICAgICBMb2dDZXJ0aWZpZXJBZGRlZChjZXJ0aWZpZXIpOwogICAgICAgIH0KICAgICAgICBzdWNjZXNzID0gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiByZW1vdmVDZXJ0aWZpZXIoYWRkcmVzcyBjZXJ0aWZpZXIpCiAgICAgICAgZnJvbU93bmVyCiAgICAgICAgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgaWYgKCFjZXJ0aWZpZXJTdGF0dXNlc1tjZXJ0aWZpZXJdLmF1dGhvcmlzZWQpIHsKICAgICAgICAgICAgdGhyb3c7CiAgICAgICAgfQogICAgICAgIC8vIExldCdzIG1vdmUgdGhlIGxhc3QgYXJyYXkgaXRlbSBpbnRvIHRoZSBvbmUgd2UgcmVtb3ZlLgogICAgICAgIHVpbnQyNTYgaW5kZXggPSBjZXJ0aWZpZXJTdGF0dXNlc1tjZXJ0aWZpZXJdLmluZGV4OwogICAgICAgIGNlcnRpZmllcnNbaW5kZXhdID0gY2VydGlmaWVyc1tjZXJ0aWZpZXJzLmxlbmd0aCAtIDFdOwogICAgICAgIGNlcnRpZmllclN0YXR1c2VzW2NlcnRpZmllcnNbaW5kZXhdXS5pbmRleCA9IGluZGV4OwogICAgICAgIGNlcnRpZmllcnMubGVuZ3RoLS07CiAgICAgICAgZGVsZXRlIGNlcnRpZmllclN0YXR1c2VzW2NlcnRpZmllcl07CiAgICAgICAgTG9nQ2VydGlmaWVyUmVtb3ZlZChjZXJ0aWZpZXIpOwogICAgICAgIHN1Y2Nlc3MgPSB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGdldENlcnRpZmllcnNDb3VudCgpCiAgICAgICAgY29uc3RhbnQKICAgICAgICByZXR1cm5zICh1aW50MjU2IGNvdW50KSB7CiAgICAgICAgY291bnQgPSBjZXJ0aWZpZXJzLmxlbmd0aDsKICAgIH0KCiAgICBmdW5jdGlvbiBnZXRDZXJ0aWZpZXJTdGF0dXMoYWRkcmVzcyBjZXJ0aWZpZXJBZGRyKQogICAgICAgIGNvbnN0YW50IAogICAgICAgIHJldHVybnMgKGJvb2wgYXV0aG9yaXNlZCwgdWludDI1NiBpbmRleCkgewogICAgICAgIENlcnRpZmllciBjZXJ0aWZpZXIgPSBjZXJ0aWZpZXJTdGF0dXNlc1tjZXJ0aWZpZXJBZGRyXTsKICAgICAgICByZXR1cm4gKGNlcnRpZmllci5hdXRob3Jpc2VkLAogICAgICAgICAgICBjZXJ0aWZpZXIuaW5kZXgpOwogICAgfQoKICAgIGZ1bmN0aW9uIGdldENlcnRpZmllckF0SW5kZXgodWludDI1NiBpbmRleCkKICAgICAgICBjb25zdGFudAogICAgICAgIHJldHVybnMgKGFkZHJlc3MpIHsKICAgICAgICByZXR1cm4gY2VydGlmaWVyc1tpbmRleF07CiAgICB9CgogICAgZnVuY3Rpb24gaXNDZXJ0aWZpZXIoYWRkcmVzcyBjZXJ0aWZpZXIpCiAgICAgICAgY29uc3RhbnQKICAgICAgICByZXR1cm5zIChib29sIGlzSW5kZWVkKSB7CiAgICAgICAgaXNJbmRlZWQgPSBjZXJ0aWZpZXJTdGF0dXNlc1tjZXJ0aWZpZXJdLmF1dGhvcmlzZWQ7CiAgICB9Cn0='.
	

]
