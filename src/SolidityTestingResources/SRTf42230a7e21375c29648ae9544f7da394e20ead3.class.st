Class {
	#name : #SRTf42230a7e21375c29648ae9544f7da394e20ead3,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTf42230a7e21375c29648ae9544f7da394e20ead3 >> base64 [
	^ ''.
	

]
