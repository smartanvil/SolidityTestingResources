Class {
	#name : #SRTa9d68bcca2ebfb5293ea9102cf4ea0090c3133cb,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTa9d68bcca2ebfb5293ea9102cf4ea0090c3133cb >> base64 [
	^ 'LyoKICogVGhpcyBmaWxlIGlzIHBhcnQgb2YgU2FmZXRoZXIuCiAqCiAqIFNhZmV0aGVyIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkKICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkKICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3IKICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi4KICoKICogU2FmZXRoZXIgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwKICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YKICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZQogKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLgogKgogKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZQogKiBhbG9uZyB3aXRoIFNhZmV0aGVyLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LgogKi8KCi8qIAogKiBTYWZldGhlclN0b3JhZ2UgQ29udHJhY3QKICogRm9yIHN0b3JpbmcgZGVwb3NpdG9yIGRhdGEuCiAqLwpjb250cmFjdCBTYWZldGhlclN0b3JhZ2UgewogICAgCiAgICAvKgogICAgICogRGVwb3NpdG9yIFN0cnVjdCBpcyBzdG9yYWdlIGZvciB1c2VyLgogICAgICogCiAgICAgKiBfdG9rZW4gaXMgYWNjZXNzIGtleSByZXF1aXJlZCBmb3IgZmluZCBhc3NldHMuCiAgICAgKiBfZGF0YSBpcyBzdG9yYWdlIGZvciBkZXBvc2l0b3IuCiAgICAgKgogICAgICogX2RhdGFbMF0gOiBSZWdpc3RlciBCbG9jayBOdW1iZXIuCiAgICAgKiBfZGF0YVsxXSA6IFBlcmlvZCBob2xkaW5nIGFzc2V0cy4KICAgICAqIF9kYXRhWzJdIDogQW1vdW50IG9mIGhvbGRpbmcgYXNzZXRzLgogICAgICoKICAgICAqLwogICAgc3RydWN0IERlcG9zaXRvciB7CiAgICAgICAgYnl0ZXM4ICAgICBfdG9rZW47CiAgICAgICAgdWludDI1NlszXSAgX2RhdGE7CiAgICB9CiAgICAKICAgIG1hcHBpbmcgKGFkZHJlc3M9PkRlcG9zaXRvcikgaW50ZXJuYWwgX2RlcG9zaXRvcjsKfQoKLyogCiAqIFNhZmV0aGVyTW9kaWZpZXIgQ29udHJhY3QKICogRm9yIGRlY2xhcmluZyBtb2RpZmllciBmdW5jdGlvbi4KICovCmNvbnRyYWN0IFNhZmV0aGVyTW9kaWZpZXIgaXMgU2FmZXRoZXJTdG9yYWdlIHsKICAgIG1vZGlmaWVyIGlzUmVnaXN0ZXJkIHsKICAgICAgICByZXF1aXJlKF9kZXBvc2l0b3JbbXNnLnNlbmRlcl0uX3Rva2VuICE9IDB4MCk7CiAgICAgICAgXzsKICAgIH0KICAgIAogICAgbW9kaWZpZXIgaXNOb3RSZWdpc3RlcmQgewogICAgICAgIHJlcXVpcmUoX2RlcG9zaXRvclttc2cuc2VuZGVyXS5fdG9rZW4gPT0gMHgwKTsKICAgICAgICBfOwogICAgfQogICAgCiAgICAvKgogICAgICogaXNWYWxpZERlc3Bvc2l0b3IKICAgICAqIE1vZGlmaWVyIGZ1bmN0aW9uIGZvciBmaW5kaW5nIGFzc2V0cy4KICAgICAqLwogICAgbW9kaWZpZXIgaXNWYWxpZERlcG9zaXRvcihhZGRyZXNzIGRlcG9zaXRvciwgYnl0ZXM4IHRva2VuKSB7CiAgICAgICAgcmVxdWlyZShfZGVwb3NpdG9yW2RlcG9zaXRvcl0uX3Rva2VuID09IHRva2VuKTsKICAgICAgICByZXF1aXJlKF9kZXBvc2l0b3JbZGVwb3NpdG9yXS5fZGF0YVsyXSA+IDApOwogICAgICAgIHJlcXVpcmUoYmxvY2subnVtYmVyID49IF9kZXBvc2l0b3JbZGVwb3NpdG9yXS5fZGF0YVsxXSk7CiAgICAgICAgXzsKICAgIH0KfQoKLyogCiAqIFNhZmV0aGVySW50ZXJmYWNlIENvbnRyYWN0CiAqIEludGVyZmFjZSBjb250cmFjdCBmb3IgZGVjbGFyaW5nIFNhZmV0aGVyIENvbnRyYWN0LgogKi8KY29udHJhY3QgU2FmZXRoZXJJbnRlcmZhY2UgewogICAgZnVuY3Rpb24gYXV0aGVudGljYXRpb24oYnl0ZXM4IHRva2VuKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyhib29sKTsKICAgIGZ1bmN0aW9uIGdldERlcG9zaXRvcigpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zKHVpbnQyNTZbM10pOwogICAgCiAgICBmdW5jdGlvbiByZWdpc3RlcihieXRlczcgcGFzc3dvcmQpIHB1YmxpYzsKICAgIGZ1bmN0aW9uIGRlcG9zaXQodWludDI1NiBwZXJpb2QpIHB1YmxpYyBwYXlhYmxlOwogICAgZnVuY3Rpb24gd2l0aGRyYXcoYWRkcmVzcyBkZXBvc2l0b3IsIGJ5dGVzOCB0b2tlbikgcHVibGljIHBheWFibGU7CiAgICBmdW5jdGlvbiBjYW5jZWwoKSBwdWJsaWMgcGF5YWJsZTsKfQoKLyogCiAqIFNhZmV0aGVyIENvbnRyYWN0CiAqIEltcGxlbWVudHMgdGhlIGluaGVyaXRlZCBmdW5jdGlvbnMgb2YgaW50ZXJmYWNlIGNvbnRyYWN0LgogKi8KY29udHJhY3QgU2FmZXRoZXIgaXMgU2FmZXRoZXJNb2RpZmllciwgU2FmZXRoZXJJbnRlcmZhY2UgewoKICAgIC8qIAogICAgICogYXV0aGVudGljYXRpb24gRnVuY3Rpb24KICAgICAqCiAgICAgKiBJdCBvbmx5IHJldHVybnMgaW5mb3JtYXRpb24gYWJvdXQgbXNnLnNlbmRlciB0byAKICAgICAqIHByZXZlbnQgaGFja2luZyB0aHJvdWdoIERvUyBhdHRhY2suCiAgICAgKiAKICAgICAqLwogICAgZnVuY3Rpb24gYXV0aGVudGljYXRpb24oYnl0ZXM4IHRva2VuKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyhib29sKSB7CiAgICAgICAgcmV0dXJuIF9kZXBvc2l0b3JbbXNnLnNlbmRlcl0uX3Rva2VuID09IHRva2VuOwogICAgfQogICAgCiAgICAvKiAKICAgICAqIGdldERlcG9zaXRvciBGdW5jdGlvbgogICAgICoKICAgICAqIEl0IG9ubHkgcmV0dXJucyBpbmZvcm1hdGlvbiBhYm91dCBtc2cuc2VuZGVyIHRvIAogICAgICogcHJldmVudCBoYWNraW5nIHRocm91Z2ggRG9TIGF0dGFjay4KICAgICAqIAogICAgICovCiAgICBmdW5jdGlvbiBnZXREZXBvc2l0b3IoKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NlszXSkgewogICAgICAgIHJldHVybiAoX2RlcG9zaXRvclttc2cuc2VuZGVyXS5fZGF0YSk7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIHJlZ2lzdGVyKGJ5dGVzNyBwYXNzd29yZCkgcHVibGljIGlzTm90UmVnaXN0ZXJkIHsKICAgICAgICBfZGVwb3NpdG9yW21zZy5zZW5kZXJdLl90b2tlbiA9IGJ5dGVzOChrZWNjYWsyNTYoYmxvY2subnVtYmVyLCBtc2cuc2VuZGVyLCBwYXNzd29yZCkpOwogICAgICAgIF9kZXBvc2l0b3JbbXNnLnNlbmRlcl0uX2RhdGFbMF0gPSBibG9jay5udW1iZXI7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGRlcG9zaXQodWludDI1NiBwZXJpb2QpIHB1YmxpYyBwYXlhYmxlIGlzUmVnaXN0ZXJkIHsKICAgICAgICBfZGVwb3NpdG9yW21zZy5zZW5kZXJdLl9kYXRhWzFdID0gYmxvY2subnVtYmVyICsgcGVyaW9kOwogICAgICAgIF9kZXBvc2l0b3JbbXNnLnNlbmRlcl0uX2RhdGFbMl0gKz0gbXNnLnZhbHVlOwogICAgfQogICAgCiAgICAvKiAKICAgICAqIHdpdGhkcmF3IEZ1bmN0aW9uCiAgICAgKiAKICAgICAqIFJlY2lwaWVudHMgY2FuIG5vdCBrbm93IGhvdyBtdWNoIG1vbmV5IGlzIHN0b3JlZCwgCiAgICAgKiBub3IgY2FuIHRoZXkga25vdyB0aGUgZHVyYXRpb24uIAogICAgIAogICAgICogVGhpcyBpcyBhIHByZXZlbnRpdmUgbWVhc3VyZSB0byBwcmV2ZW50IERvUyBhdHRhY2tzIGZyb20gaGFja2Vycy4gCiAgICAgKiBUaGlzIGlzIGJlY2F1c2UgdGhlIG1ldGFtYXNrIGluZm9ybXMgdGhlIG1vZGlmaWVyIG9mIHRoZSBlcnJvciBpbiB0aGUgY29udGV4dCBleGVjdXRpb24gc3RhZ2UuIAogICAgICogCiAgICAgKiBIYWNrZXJzIGNhbiB0cnkgdGhpcyBpbmZvcm1hdGlvbiB3aXRob3V0IHBheWluZyBmb3IgaXQsIAogICAgICogYnV0IHRoZXkgZG8gbm90IGtub3cgaWYgdGhlIHBhc3N3b3JkIGlzIHdyb25nLCB0aGUgc3RvcmFnZSBwZXJpb2QgaGFzIG5vdCBleHBpcmVkLCAKICAgICAqIG9yIHRoZSBtb25leSBkb2VzIG5vdCBleGlzdC4gCiAgICAgKgogICAgICogRXZlbiBpZiB5b3UgaGFja2VkIHRoZSBjb3JyZWN0IHRva2VuLCBUaGlzIG1ha2VzIGhhY2tpbmcgZGlmZmljdWx0LgogICAgICoKICAgICAqLwogICAgZnVuY3Rpb24gd2l0aGRyYXcoYWRkcmVzcyBkZXBvc2l0b3IsIGJ5dGVzOCB0b2tlbikgcHVibGljIHBheWFibGUgaXNWYWxpZERlcG9zaXRvcihkZXBvc2l0b3IsIHRva2VuKSB7CiAgICAgICAgdWludDI1NiB0ZW1wRGVwb3NpdCA9IF9kZXBvc2l0b3JbZGVwb3NpdG9yXS5fZGF0YVsyXTsKICAgICAgICAgX2RlcG9zaXRvcltkZXBvc2l0b3JdLl9kYXRhWzJdID0gMDsKICAgICAgICAgbXNnLnNlbmRlci50cmFuc2Zlcih0ZW1wRGVwb3NpdCArIG1zZy52YWx1ZSk7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGNhbmNlbCgpIHB1YmxpYyBwYXlhYmxlIGlzUmVnaXN0ZXJkIHsKICAgICAgICB1aW50MjU2IHRlbXBEZXBvc2l0ID0gX2RlcG9zaXRvclttc2cuc2VuZGVyXS5fZGF0YVsyXTsKICAgICAgICBkZWxldGUgX2RlcG9zaXRvclttc2cuc2VuZGVyXTsKICAgICAgICBtc2cuc2VuZGVyLnRyYW5zZmVyKHRlbXBEZXBvc2l0ICsgbXNnLnZhbHVlKTsKICAgIH0KfQ=='.
	

]
