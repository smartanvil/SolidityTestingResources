Class {
	#name : #SRTa2a24504c7bbb24ce92b5fa8a9befc3cbded560d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTa2a24504c7bbb24ce92b5fa8a9befc3cbded560d >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTU7CgoKLy8gVGhpcyBjb250cmFjdCBpcyBtZWFudCBhcyBhICJzaW5nbGV0b24iIGZvcndhcmRpbmcgY29udHJhY3QuCi8vIEV2ZW50dWFsbHksIGl0IHdpbGwgYmUgYWJsZSB0byBmb3J3YXJkIGFueSB0cmFuc2FjdGlvbiB0bwovLyBBbnkgY29udHJhY3QgdGhhdCBpcyBidWlsdCB0byBhY2NlcHQgaXQuCmNvbnRyYWN0IFR4UmVsYXkgewoKICAgIC8vIE5vdGU6IFRoaXMgaXMgYSBsb2NhbCBub25jZS4KICAgIC8vIERpZmZlcmVudCBmcm9tIHRoZSBub25jZSBkZWZpbmVkIHcvaW4gcHJvdG9jb2wuCiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludCkgbm9uY2U7CgogICAgLy8gVGhpcyBtYXBwaW5nIHNwZWNpZmllcyBhIHdoaXRlbGlzdCBvZiBhbGxvd2VkIHNlbmRlcnMgZm9yIHRyYW5zYWN0aW9ucy4KICAgIC8vIFRoZXJlIGNhbiBiZSBvbmUgd2hpdGVsaXN0IHBlciBldGhlcmV1bSBhY2NvdW50LCB3aGljaCBpcyB0aGUgb3duZXIgb2YgdGhhdAogICAgLy8gd2hpdGVsaXN0LiBVc2VycyBjYW4gc3BlY2lmeSB3aGljaCB3aGl0ZWxpc3QgdGhleSB3YW50IHRvIHVzZSB3aGVuIHNpZ25pbmcKICAgIC8vIGEgdHJhbnNhY3Rpb24uIFRoZXkgY2FuIHVzZSB0aGVpciBvd24gd2hpdGVsaXN0LCBhIHdoaXRlbGlzdCBiZWxvbmdpbmcKICAgIC8vIHRvIGFub3RoZXIgYWNjb3VudCwgb3Igc2tpcCB1c2luZyBhIHdoaXRlbGlzdCBieSBzcGVjaWZ5aW5nIHRoZSB6ZXJvIGFkZHJlc3MuCiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gbWFwcGluZyhhZGRyZXNzID0+IGJvb2wpKSBwdWJsaWMgd2hpdGVsaXN0OwoKICAgIC8qCiAgICAgKiBAZGV2IFJlbGF5cyBtZXRhIHRyYW5zYWN0aW9ucwogICAgICogQHBhcmFtIHNpZ1YsIHNpZ1IsIHNpZ1MgRUNEU0Egc2lnbmF0dXJlIG9uIHNvbWUgZGF0YSB0byBiZSBmb3J3YXJkZWQKICAgICAqIEBwYXJhbSBkZXN0aW5hdGlvbiBMb2NhdGlvbiB0aGUgbWV0YS10eCBzaG91bGQgYmUgZm9yd2FyZGVkIHRvCiAgICAgKiBAcGFyYW0gZGF0YSBUaGUgYnl0ZXMgbmVjZXNzYXJ5IHRvIGNhbGwgdGhlIGZ1bmN0aW9uIGluIHRoZSBkZXN0aW5hdGlvbiBjb250cmFjdC4KICAgICAqIE5vdGU6IFRoZSBmaXJzdCBlbmNvZGVkIGFyZ3VtZW50IGluIGRhdGEgbXVzdCBiZSBhZGRyZXNzIG9mIHRoZSBzaWduZXIuIFRoaXMgbWVhbnMKICAgICAqIHRoYXQgYWxsIGZ1bmN0aW9ucyBjYWxsZWQgZnJvbSB0aGlzIHJlbGF5IG11c3QgdGFrZSBhbiBhZGRyZXNzIGFzIHRoZSBmaXJzdCBwYXJhbWV0ZXIuCiAgICAgKi8KICAgIGZ1bmN0aW9uIHJlbGF5TWV0YVR4KAogICAgICAgIHVpbnQ4IHNpZ1YsCiAgICAgICAgYnl0ZXMzMiBzaWdSLAogICAgICAgIGJ5dGVzMzIgc2lnUywKICAgICAgICBhZGRyZXNzIGRlc3RpbmF0aW9uLAogICAgICAgIGJ5dGVzIGRhdGEsCiAgICAgICAgYWRkcmVzcyBsaXN0T3duZXIKICAgICkgcHVibGljIHsKCiAgICAgICAgLy8gb25seSBhbGxvdyBzZW5kZXJzIGZyb20gdGhlIHdoaXRlbGlzdCBzcGVjaWZpZWQgYnkgdGhlIHVzZXIsCiAgICAgICAgLy8gMHgwIG1lYW5zIG5vIHdoaXRlbGlzdC4KICAgICAgICByZXF1aXJlKGxpc3RPd25lciA9PSAweDAgfHwgd2hpdGVsaXN0W2xpc3RPd25lcl1bbXNnLnNlbmRlcl0pOwoKICAgICAgICBhZGRyZXNzIGNsYWltZWRTZW5kZXIgPSBnZXRBZGRyZXNzKGRhdGEpOwogICAgICAgIC8vIHVzZSBFSVAgMTkxCiAgICAgICAgLy8gMHgxOSA6OiB2ZXJzaW9uIDo6IHJlbGF5IDo6IHdoaXRlbGlzdE93bmVyIDo6IG5vbmNlIDo6IGRlc3RpbmF0aW9uIDo6IGRhdGEKICAgICAgICBieXRlczMyIGggPSBrZWNjYWsyNTYoYnl0ZSgweDE5KSwgYnl0ZSgwKSwgdGhpcywgbGlzdE93bmVyLCBub25jZVtjbGFpbWVkU2VuZGVyXSwgZGVzdGluYXRpb24sIGRhdGEpOwogICAgICAgIGFkZHJlc3MgYWRkcmVzc0Zyb21TaWcgPSBlY3JlY292ZXIoaCwgc2lnViwgc2lnUiwgc2lnUyk7CgogICAgICAgIHJlcXVpcmUoY2xhaW1lZFNlbmRlciA9PSBhZGRyZXNzRnJvbVNpZyk7CgogICAgICAgIG5vbmNlW2NsYWltZWRTZW5kZXJdKys7IC8vaWYgd2UgYXJlIGdvaW5nIHRvIGRvIHR4LCB1cGRhdGUgbm9uY2UKCiAgICAgICAgcmVxdWlyZShkZXN0aW5hdGlvbi5jYWxsKGRhdGEpKTsKICAgIH0KCiAgICAvKgogICAgICogQGRldiBHZXRzIGFuIGFkZHJlc3MgZW5jb2RlZCBhcyB0aGUgZmlyc3QgYXJndW1lbnQgaW4gdHJhbnNhY3Rpb24gZGF0YQogICAgICogQHBhcmFtIGIgVGhlIGJ5dGUgYXJyYXkgdGhhdCBzaG91bGQgaGF2ZSBhbiBhZGRyZXNzIGFzIGZpcnN0IGFyZ3VtZW50CiAgICAgKiBAcmV0dXJucyBhIFRoZSBhZGRyZXNzIHJldHJpZXZlZCBmcm9tIHRoZSBhcnJheQogICAgIChPcHRpbWl6YXRpb24gYmFzZWQgb24gd29yayBieSB0amFkZTI3MykKICAgICAqLwogICAgZnVuY3Rpb24gZ2V0QWRkcmVzcyhieXRlcyBiKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAoYWRkcmVzcyBhKSB7CiAgICAgICAgaWYgKGIubGVuZ3RoIDwgMzYpIHJldHVybiBhZGRyZXNzKDApOwogICAgICAgIGFzc2VtYmx5IHsKICAgICAgICAgICAgbGV0IG1hc2sgOj0gMHhGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGCiAgICAgICAgICAgIGEgOj0gYW5kKG1hc2ssIG1sb2FkKGFkZChiLCAzNikpKQogICAgICAgICAgICAvLyAzNiBpcyB0aGUgb2Zmc2V0IG9mIHRoZSBmaXJzdCBwYXJhbWV0ZXIgb2YgdGhlIGRhdGEsIGlmIGVuY29kZWQgcHJvcGVybHkuCiAgICAgICAgICAgIC8vIDMyIGJ5dGVzIGZvciB0aGUgbGVuZ3RoIG9mIHRoZSBieXRlcyBhcnJheSwgYW5kIDQgYnl0ZXMgZm9yIHRoZSBmdW5jdGlvbiBzaWduYXR1cmUuCiAgICAgICAgfQogICAgfQoKICAgIC8qCiAgICAgKiBAZGV2IFJldHVybnMgdGhlIGxvY2FsIG5vbmNlIG9mIGFuIGFjY291bnQuCiAgICAgKiBAcGFyYW0gYWRkIFRoZSBhZGRyZXNzIHRvIHJldHVybiB0aGUgbm9uY2UgZm9yLgogICAgICogQHJldHVybiBUaGUgc3BlY2lmaWMtdG8tdGhpcy1jb250cmFjdCBub25jZSBvZiB0aGUgYWRkcmVzcyBwcm92aWRlZAogICAgICovCiAgICBmdW5jdGlvbiBnZXROb25jZShhZGRyZXNzIGFkZCkgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQpIHsKICAgICAgICByZXR1cm4gbm9uY2VbYWRkXTsKICAgIH0KCiAgICAvKgogICAgICogQGRldiBBZGRzIGEgbnVtYmVyIG9mIGFkZHJlc3NlcyB0byBhIHNwZWNpZmljIHdoaXRlbGlzdC4gT25seQogICAgICogdGhlIG93bmVyIG9mIGEgd2hpdGVsaXN0IGNhbiBhZGQgdG8gaXQuCiAgICAgKiBAcGFyYW0gc2VuZGVyc1RvVXBkYXRlIHRoZSBhZGRyZXNzZXMgdG8gYWRkIHRvIHRoZSB3aGl0ZWxpc3QKICAgICAqLwogICAgZnVuY3Rpb24gYWRkVG9XaGl0ZWxpc3QoYWRkcmVzc1tdIHNlbmRlcnNUb1VwZGF0ZSkgcHVibGljIHsKICAgICAgICB1cGRhdGVXaGl0ZWxpc3Qoc2VuZGVyc1RvVXBkYXRlLCB0cnVlKTsKICAgIH0KCiAgICAvKgogICAgICogQGRldiBSZW1vdmVzIGEgbnVtYmVyIG9mIGFkZHJlc3NlcyBmcm9tIGEgc3BlY2lmaWMgd2hpdGVsaXN0LiBPbmx5CiAgICAgKiB0aGUgb3duZXIgb2YgYSB3aGl0ZWxpc3QgY2FuIHJlbW92ZSBmcm9tIGl0LgogICAgICogQHBhcmFtIHNlbmRlcnNUb1VwZGF0ZSB0aGUgYWRkcmVzc2VzIHRvIGFkZCB0byB0aGUgd2hpdGVsaXN0CiAgICAgKi8KICAgIGZ1bmN0aW9uIHJlbW92ZUZyb21XaGl0ZWxpc3QoYWRkcmVzc1tdIHNlbmRlcnNUb1VwZGF0ZSkgcHVibGljIHsKICAgICAgICB1cGRhdGVXaGl0ZWxpc3Qoc2VuZGVyc1RvVXBkYXRlLCBmYWxzZSk7CiAgICB9CgogICAgLyoKICAgICAqIEBkZXYgSW50ZXJuYWwgbG9naWMgdG8gdXBkYXRlIGEgd2hpdGVsaXN0CiAgICAgKiBAcGFyYW0gc2VuZGVyc1RvVXBkYXRlIHRoZSBhZGRyZXNzZXMgdG8gYWRkIHRvIHRoZSB3aGl0ZWxpc3QKICAgICAqIEBwYXJhbSBuZXdTdGF0dXMgd2hldGhlciB0byBhZGQgb3IgcmVtb3ZlIGFkZHJlc3NlcwogICAgICovCiAgICBmdW5jdGlvbiB1cGRhdGVXaGl0ZWxpc3QoYWRkcmVzc1tdIHNlbmRlcnNUb1VwZGF0ZSwgYm9vbCBuZXdTdGF0dXMpIHByaXZhdGUgewogICAgICAgIGZvciAodWludCBpID0gMDsgaSA8IHNlbmRlcnNUb1VwZGF0ZS5sZW5ndGg7IGkrKykgewogICAgICAgICAgICB3aGl0ZWxpc3RbbXNnLnNlbmRlcl1bc2VuZGVyc1RvVXBkYXRlW2ldXSA9IG5ld1N0YXR1czsKICAgICAgICB9CiAgICB9Cn0='.
	

]
