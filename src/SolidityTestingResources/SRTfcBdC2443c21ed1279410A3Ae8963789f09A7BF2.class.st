Class {
	#name : #SRTfcBdC2443c21ed1279410A3Ae8963789f09A7BF2,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTfcBdC2443c21ed1279410A3Ae8963789f09A7BF2 >> base64 [
	^ ''.
	

]
