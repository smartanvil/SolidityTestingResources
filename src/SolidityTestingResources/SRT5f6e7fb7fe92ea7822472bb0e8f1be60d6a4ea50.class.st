Class {
	#name : #SRT5f6e7fb7fe92ea7822472bb0e8f1be60d6a4ea50,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT5f6e7fb7fe92ea7822472bb0e8f1be60d6a4ea50 >> base64 [
	^ ''.
	

]
