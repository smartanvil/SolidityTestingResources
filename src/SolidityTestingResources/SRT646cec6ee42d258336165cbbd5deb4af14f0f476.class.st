Class {
	#name : #SRT646cec6ee42d258336165cbbd5deb4af14f0f476,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT646cec6ee42d258336165cbbd5deb4af14f0f476 >> base64 [
	^ ''.
	

]
