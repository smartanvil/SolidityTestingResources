Class {
	#name : #SRT0bd6e76d1262b9e8ac056eca3f695167efbdd297,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT0bd6e76d1262b9e8ac056eca3f695167efbdd297 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuNDsKCgovLyBFUkMyMCB0b2tlbiBpbnRlcmZhY2UgaXMgaW1wbGVtZW50ZWQgb25seSBwYXJ0aWFsbHkuCgovLyAgc29tZSBmdW5jdGlvbnMgYXJlIGxlZnQgdW5kZWZpbmVkOgovLyAgLSB0cmFuc2ZlciwgdHJhbnNmZXJGcm9tLAovLyAgLSBhcHByb3ZlLCBhbGxvd2FuY2UuCi8vIGhlbmNlICBhbiBlY29ub21pY2FsIGluY2VudGl2ZSB0byBpbmNyZWFzZSB0aGUgdmFsdWUgb2YgdGhlIHRva2VuLCBhbmQgaW52ZXN0b3JzIHByb3RlY3Rpb24gZnJvbSB0aGUgcmlzayBvZiBpbW1lZGlhdGUgdG9rZW4gZHVtcGluZyBmb2xsb3dpbmcgSUNPCgpjb250cmFjdCBQcmVzYWxlVG9rZW4gewoKICAgIAogICAgZnVuY3Rpb24gUHJlc2FsZVRva2VuKGFkZHJlc3MgX3Rva2VuTWFuYWdlcikgewogICAgICAgIHRva2VuTWFuYWdlciA9IF90b2tlbk1hbmFnZXI7CiAgICB9CgoKICAgCgogICAgc3RyaW5nIHB1YmxpYyBuYW1lID0gIkRvYmkgUHJlc2FsZSBUb2tlbiI7CiAgICBzdHJpbmcgcHVibGljIHN5bWJvbCA9ICJEb2JpIjsKICAgIHVpbnQgICBwdWJsaWMgZGVjaW1hbHMgPSAxODsKCgoKICAgIC8vUHJlc2FsZSBDdXAgaXMgfiAxIDgwMCBFVEgKICAgIC8vL0R1cmluZyBQcmVzYWxlIFBoYXNlIDogMSBldGggPSAxNyBwcmVzYWxlIHRva2VucwogICAgLy9QcmVzYWxlIEN1cCBpbiAkIGlzIH4gNzUgNjAwJAoKICAgIHVpbnQgcHVibGljIFBSSUNFID0gMTc7IAoKICAgIHVpbnQgcHVibGljIFRPS0VOX1NVUFBMWV9MSU1JVCA9IDMwMDAwICogKDEgZXRoZXIgLyAxIHdlaSk7CgoKCiAgICAKCiAgICBlbnVtIFBoYXNlIHsKICAgICAgICBDcmVhdGVkLAogICAgICAgIFJ1bm5pbmcsCiAgICAgICAgUGF1c2VkLAogICAgICAgIE1pZ3JhdGluZywKICAgICAgICBNaWdyYXRlZAogICAgfQoKICAgIFBoYXNlIHB1YmxpYyBjdXJyZW50UGhhc2UgPSBQaGFzZS5DcmVhdGVkOwoKICAgIC8vIGFtb3VudCBvZiB0b2tlbnMgYWxyZWFkeSBzb2xkCiAgICB1aW50IHB1YmxpYyB0b3RhbFN1cHBseSA9IDA7IAoKICAgIC8vIFRva2VuIG1hbmFnZXIgaGFzIGV4Y2x1c2l2ZSBwcml2ZWxlZ2VzIHRvIGNhbGwgYWRtaW5pc3RyYXRpdmUKICAgIC8vIGZ1bmN0aW9ucyBvbiB0aGlzIGNvbnRyYWN0LgogICAgYWRkcmVzcyBwdWJsaWMgdG9rZW5NYW5hZ2VyOwogICAgLy8gQ3Jvd2RzYWxlIG1hbmFnZXIgaGFzIGV4Y2x1c2l2ZSBwcml2ZWxlZ2VzIHRvIGJ1cm4gcHJlc2FsZSB0b2tlbnMuCiAgICBhZGRyZXNzIHB1YmxpYyBjcm93ZHNhbGVNYW5hZ2VyOwoKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHJpdmF0ZSBiYWxhbmNlOwoKCiAgICBtb2RpZmllciBvbmx5VG9rZW5NYW5hZ2VyKCkgICAgIHsgaWYobXNnLnNlbmRlciAhPSB0b2tlbk1hbmFnZXIpIHRocm93OyBfOyB9CiAgICBtb2RpZmllciBvbmx5Q3Jvd2RzYWxlTWFuYWdlcigpIHsgaWYobXNnLnNlbmRlciAhPSBjcm93ZHNhbGVNYW5hZ2VyKSB0aHJvdzsgXzsgfQoKCiAgICAKCiAgICBldmVudCBMb2dCdXkoYWRkcmVzcyBpbmRleGVkIG93bmVyLCB1aW50IHZhbHVlKTsKICAgIGV2ZW50IExvZ0J1cm4oYWRkcmVzcyBpbmRleGVkIG93bmVyLCB1aW50IHZhbHVlKTsKICAgIGV2ZW50IExvZ1BoYXNlU3dpdGNoKFBoYXNlIG5ld1BoYXNlKTsKCgogICAgCgogICAgZnVuY3Rpb24oKSBwYXlhYmxlIHsKICAgICAgICBidXlUb2tlbnMobXNnLnNlbmRlcik7CiAgICB9CgogICAKICAgIGZ1bmN0aW9uIGJ1eVRva2VucyhhZGRyZXNzIF9idXllcikgcHVibGljIHBheWFibGUgewogICAgICAgIC8vIEF2YWlsYWJsZSBvbmx5IGlmIHByZXNhbGUgaXMgaW4gcHJvZ3Jlc3MuCiAgICAgICAgaWYoY3VycmVudFBoYXNlICE9IFBoYXNlLlJ1bm5pbmcpIHRocm93OwoKICAgICAgICBpZihtc2cudmFsdWUgPT0gMCkgdGhyb3c7CiAgICAgICAgdWludCBuZXdUb2tlbnMgPSBtc2cudmFsdWUgKiBQUklDRTsKICAgICAgICBpZiAodG90YWxTdXBwbHkgKyBuZXdUb2tlbnMgPiBUT0tFTl9TVVBQTFlfTElNSVQpIHRocm93OwogICAgICAgIGJhbGFuY2VbX2J1eWVyXSArPSBuZXdUb2tlbnM7CiAgICAgICAgdG90YWxTdXBwbHkgKz0gbmV3VG9rZW5zOwogICAgICAgIExvZ0J1eShfYnV5ZXIsIG5ld1Rva2Vucyk7CiAgICB9CgoKICAgCiAgICBmdW5jdGlvbiBidXJuVG9rZW5zKGFkZHJlc3MgX293bmVyKSBwdWJsaWMKICAgICAgICBvbmx5Q3Jvd2RzYWxlTWFuYWdlcgogICAgewogICAgICAgIC8vIEF2YWlsYWJsZSBvbmx5IGR1cmluZyBtaWdyYXRpb24gcGhhc2UKICAgICAgICBpZihjdXJyZW50UGhhc2UgIT0gUGhhc2UuTWlncmF0aW5nKSB0aHJvdzsKCiAgICAgICAgdWludCB0b2tlbnMgPSBiYWxhbmNlW19vd25lcl07CiAgICAgICAgaWYodG9rZW5zID09IDApIHRocm93OwogICAgICAgIGJhbGFuY2VbX293bmVyXSA9IDA7CiAgICAgICAgdG90YWxTdXBwbHkgLT0gdG9rZW5zOwogICAgICAgIExvZ0J1cm4oX293bmVyLCB0b2tlbnMpOwoKICAgICAgICAvLyBBdXRvbWF0aWNhbGx5IHN3aXRjaCBwaGFzZSB3aGVuIG1pZ3JhdGlvbiBpcyBkb25lLgogICAgICAgIGlmKHRvdGFsU3VwcGx5ID09IDApIHsKICAgICAgICAgICAgY3VycmVudFBoYXNlID0gUGhhc2UuTWlncmF0ZWQ7CiAgICAgICAgICAgIExvZ1BoYXNlU3dpdGNoKFBoYXNlLk1pZ3JhdGVkKTsKICAgICAgICB9CiAgICB9CgoKICAgCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICByZXR1cm4gYmFsYW5jZVtfb3duZXJdOwogICAgfQoKCiAgICAKCiAgICBmdW5jdGlvbiBzZXRQcmVzYWxlUGhhc2UoUGhhc2UgX25leHRQaGFzZSkgcHVibGljCiAgICAgICAgb25seVRva2VuTWFuYWdlcgogICAgewogICAgICAgIGJvb2wgY2FuU3dpdGNoUGhhc2UKICAgICAgICAgICAgPSAgKGN1cnJlbnRQaGFzZSA9PSBQaGFzZS5DcmVhdGVkICYmIF9uZXh0UGhhc2UgPT0gUGhhc2UuUnVubmluZykKICAgICAgICAgICAgfHwgKGN1cnJlbnRQaGFzZSA9PSBQaGFzZS5SdW5uaW5nICYmIF9uZXh0UGhhc2UgPT0gUGhhc2UuUGF1c2VkKQogICAgICAgICAgICAgICAgLy8gc3dpdGNoIHRvIG1pZ3JhdGlvbiBwaGFzZSBvbmx5IGlmIGNyb3dkc2FsZSBtYW5hZ2VyIGlzIHNldAogICAgICAgICAgICB8fCAoKGN1cnJlbnRQaGFzZSA9PSBQaGFzZS5SdW5uaW5nIHx8IGN1cnJlbnRQaGFzZSA9PSBQaGFzZS5QYXVzZWQpCiAgICAgICAgICAgICAgICAmJiBfbmV4dFBoYXNlID09IFBoYXNlLk1pZ3JhdGluZwogICAgICAgICAgICAgICAgJiYgY3Jvd2RzYWxlTWFuYWdlciAhPSAweDApCiAgICAgICAgICAgIHx8IChjdXJyZW50UGhhc2UgPT0gUGhhc2UuUGF1c2VkICYmIF9uZXh0UGhhc2UgPT0gUGhhc2UuUnVubmluZykKICAgICAgICAgICAgICAgIC8vIHN3aXRjaCB0byBtaWdyYXRlZCBvbmx5IGlmIGV2ZXJ5dGluZyBpcyBtaWdyYXRlZAogICAgICAgICAgICB8fCAoY3VycmVudFBoYXNlID09IFBoYXNlLk1pZ3JhdGluZyAmJiBfbmV4dFBoYXNlID09IFBoYXNlLk1pZ3JhdGVkCiAgICAgICAgICAgICAgICAmJiB0b3RhbFN1cHBseSA9PSAwKTsKCiAgICAgICAgaWYoIWNhblN3aXRjaFBoYXNlKSB0aHJvdzsKICAgICAgICBjdXJyZW50UGhhc2UgPSBfbmV4dFBoYXNlOwogICAgICAgIExvZ1BoYXNlU3dpdGNoKF9uZXh0UGhhc2UpOwogICAgfQoKCiAgICBmdW5jdGlvbiB3aXRoZHJhd0V0aGVyKCkgcHVibGljCiAgICAgICAgb25seVRva2VuTWFuYWdlcgogICAgewogICAgICAgIC8vIEF2YWlsYWJsZSBhdCBhbnkgcGhhc2UuCiAgICAgICAgaWYodGhpcy5iYWxhbmNlID4gMCkgewogICAgICAgICAgICBpZighdG9rZW5NYW5hZ2VyLnNlbmQodGhpcy5iYWxhbmNlKSkgdGhyb3c7CiAgICAgICAgfQogICAgfQoKCiAgICBmdW5jdGlvbiBzZXRDcm93ZHNhbGVNYW5hZ2VyKGFkZHJlc3MgX21ncikgcHVibGljCiAgICAgICAgb25seVRva2VuTWFuYWdlcgogICAgewogICAgICAgIC8vIFlvdSBjYW4ndCBjaGFuZ2UgY3Jvd2RzYWxlIGNvbnRyYWN0IHdoZW4gbWlncmF0aW9uIGlzIGluIHByb2dyZXNzLgogICAgICAgIGlmKGN1cnJlbnRQaGFzZSA9PSBQaGFzZS5NaWdyYXRpbmcpIHRocm93OwogICAgICAgIGNyb3dkc2FsZU1hbmFnZXIgPSBfbWdyOwogICAgfQp9'.
	

]
