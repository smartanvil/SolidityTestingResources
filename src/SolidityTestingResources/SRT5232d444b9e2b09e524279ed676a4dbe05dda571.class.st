Class {
	#name : #SRT5232d444b9e2b09e524279ed676a4dbe05dda571,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT5232d444b9e2b09e524279ed676a4dbe05dda571 >> base64 [
	^ ''.
	

]
