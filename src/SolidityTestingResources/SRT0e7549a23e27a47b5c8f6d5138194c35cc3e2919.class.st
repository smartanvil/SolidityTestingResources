Class {
	#name : #SRT0e7549a23e27a47b5c8f6d5138194c35cc3e2919,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT0e7549a23e27a47b5c8f6d5138194c35cc3e2919 >> base64 [
	^ ''.
	

]
