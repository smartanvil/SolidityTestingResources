Class {
	#name : #SRTabcdd0dbc5ba15804f5de963bd60491e48c3ef0b,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTabcdd0dbc5ba15804f5de963bd60491e48c3ef0b >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuNzsKY29udHJhY3QgSW52ZXN0bWVudHsKICAgIC8qKiB0aGUgb3duZXIgb2YgdGhlIGNvbnRyYWN0LCBDNEMgKi8KICAgIGFkZHJlc3Mgb3duZXI7CiAgICAvKiogTGlzdCBvZiBhbGwgaW52ZXN0b3JzLiAqLwogICAgYWRkcmVzc1tdIHB1YmxpYyBpbnZlc3RvcnM7CiAgICAvKiogVGhlIGludmVzdG9ycydzIGJhbGFuY2VzLiAqLwogICAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQpIHB1YmxpYyBiYWxhbmNlczsKICAgIC8qKiBUaGUgdG90YWwgYW1vdW50IHJhaXNlZC4gKi8KICAgIHVpbnQgcHVibGljIGFtb3VudFJhaXNlZDsKICAgIC8qKiBUaGUgaW5kZXggb2YgdGhlIGludmVzdG9yIGN1cnJlbnRseiBiZWluZyBwYWlkIG91dC4gKi8KICAgIHVpbnQgcHVibGljIGludmVzdG9ySW5kZXg7CiAgICAvKiogVGhlIHJldHVybiByYXRlcyAoZmFjdG9ycykgcGVyIGludGVydmFsIChpbiByYWlzZWQgRXRoZXIpLiAqLwogICAgdWludFtdIHB1YmxpYyByYXRlczsKICAgIHVpbnRbXSBwdWJsaWMgbGltaXRzOwogICAgLyoqIGluZGljYXRlcyBpZiBuZSBpbnZlc3RtZW50cyBhcmUgYWNjZXB0ZWQgKi8KICAgIGJvb2wgcHVibGljIGNsb3NlZDsKICAgIC8qKiBOb3RpZmllcyBsaXN0ZW5lcnMgdGhhdCBhIG5ldyBpbnZlc3RtZW50IHdhcyB1bmRlcnRha2VuICovCiAgICBldmVudCBOZXdJbnZlc3RtZW50KGFkZHJlc3MgaW52ZXN0b3IsIHVpbnQgYW1vdW50KTsKICAgIC8qKiBOb3RpZmllcyBsaXN0ZW5lcnMgdGhhdCBldGhlciB3YXMgcmV0dXJuZWQgdG8gdGhlIGludmVzdG9ycyAqLwogICAgZXZlbnQgUmV0dXJuZWQodWludCBhbW91bnQpOwoKICAgIAogICAgZnVuY3Rpb24gSW52ZXN0bWVudCgpewogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgICAgICBsaW1pdHM9IFswLCAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwLCA0MDAwMDAwMDAwMDAwMDAwMDAwMDAwLCAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMF07CiAgICAgICAgcmF0ZXM9IFsxNSwgMTQsIDEzLDEyXTsvLzEgZGVjaW1hbAogICAgfQogICAgCiAgICAvKioKICAgICAqIEFkZHMgbmV3IGludmVzdG9ycyB0byB0aGUgbGlzdCBhbmQgY2FsY3VsYXRlcyB0aGUgYmFsYW5jZSBhY2NvcmRpbmcgdG8gdGhlIGN1cnJlbnQgcmF0ZS4KICAgICAqIE1pbmltdW0gdmFsdWU6IDEgRVRILgogICAgICogKi8KICAgICBmdW5jdGlvbiBpbnZlc3QoKSBwYXlhYmxlewogICAgICAgIGlmIChjbG9zZWQpIHRocm93OwogICAgICAgIGlmIChtc2cudmFsdWUgPCAxIGV0aGVyKSB0aHJvdzsKICAgICAgICBpZiAoYmFsYW5jZXNbbXNnLnNlbmRlcl09PTApey8vbmV3IGludmVzdG9yCiAgICAgICAgICAgIGludmVzdG9ycy5wdXNoKG1zZy5zZW5kZXIpOwogICAgICAgIH0KICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSArPSBjYWxjUmV0dXJuVmFsdWUobXNnLnZhbHVlLCBhbW91bnRSYWlzZWQpOyAKICAgICAgICBhbW91bnRSYWlzZWQgKz0gbXNnLnZhbHVlOwogICAgICAgIE5ld0ludmVzdG1lbnQobXNnLnNlbmRlciwgbXNnLnZhbHVlKTsKICAgICB9CiAgICAgCiAgICAgLyoqCiAgICAgICogY2FsbCBpbnZlc3QoKSB3aGVuZXZlciBldGhlciBpcyBzZW50IHRvIHRoZSBjb250cmFjdAogICAgICAqICovCiAgICAgZnVuY3Rpb24oKSBwYXlhYmxlewogICAgICAgICBpbnZlc3QoKTsKICAgICB9CiAgICAgCiAgICAgLyoqCiAgICAgICogY2FsY3VsdGVzIHRoZSByZXR1cm4gdmFsdWUgZGVwZW5kaW5nIG9uIHRoZSBhbW91bnQgcmFpc2VkLCBsaW1pdHMgYW5kIHJhdGVzCiAgICAgICogQHBhcmFtIHZhbHVlIDogdGhlIGludmVzdG1lbnQgdmFsdWUKICAgICAgKiBAcGFyYW0gYW1SYSA6IHRoZSBhbW91bnQgcmFpc2VkCiAgICAgICogKi8KICAgICBmdW5jdGlvbiBjYWxjUmV0dXJuVmFsdWUodWludCB2YWx1ZSwgdWludCBhbVJhKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KXsKICAgICAgICAgaWYoYW1SYSA+PSBsaW1pdHNbbGltaXRzLmxlbmd0aC0xXSkgcmV0dXJuIHZhbHVlLzEwKnJhdGVzW2xpbWl0cy5sZW5ndGgtMV07CiAgICAgICAgIGZvcih1aW50IGkgPSBsaW1pdHMubGVuZ3RoLTI7IGkgPj0gMDsgaS0tKXsKICAgICAgICAgICAgIGlmKGFtUmE+PWxpbWl0c1tpXSl7CiAgICAgICAgICAgICAgICB1aW50IG5ld0Ftb3VudFJhaXNlZCA9IGFtUmErdmFsdWU7CiAgICAgICAgICAgICAgICBpZihuZXdBbW91bnRSYWlzZWQ+bGltaXRzW2krMV0pewogICAgICAgICAgICAgICAgICAgIHVpbnQgcmVtYWluaW5nVmFsPW5ld0Ftb3VudFJhaXNlZC1saW1pdHNbaSsxXTsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gKHZhbHVlLXJlbWFpbmluZ1ZhbCkvMTAgKiByYXRlc1tpXSArIGNhbGNSZXR1cm5WYWx1ZShyZW1haW5pbmdWYWwsIGxpbWl0c1tpKzFdKTsKICAgICAgICAgICAgICAgIH0gIAogICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZS8xMCpyYXRlc1tpXTsKICAgICAgICAgICAgIH0KICAgICAgICAgfQogICAgIH0KICAgICAKICAgICAvKioKICAgICAgKiBFbmFibGVzIHRoZSBvd25lciB0byB3aXRoZHJhdyB0aGUgZnVuZHMKICAgICAgKiAqLwogICAgIGZ1bmN0aW9uIHdpdGhkcmF3KCl7CiAgICAgICAgIGlmKG1zZy5zZW5kZXI9PW93bmVyKXsKICAgICAgICAgICAgIG1zZy5zZW5kZXIuc2VuZCh0aGlzLmJhbGFuY2UpOwogICAgICAgICB9CiAgICAgfQogICAgIAogICAgIC8qKgogICAgICAqIGNhbGxlZCB0byBwYXkgdGhlIGludmVzdG9yCiAgICAgICogKi8KICAgICBmdW5jdGlvbiByZXR1cm5JbnZlc3RtZW50KCkgcGF5YWJsZXsKICAgICAgICByZXR1cm5JbnZlc3RtZW50UmVjdXJzaXZlKG1zZy52YWx1ZSk7CiAgICAgICAgUmV0dXJuZWQobXNnLnZhbHVlKTsKICAgICB9CiAgICAgCiAgICAgLyoqCiAgICAgICogc2VuZHMgdGhlIGdpdmVuIHZhbHVlIHRvIHRoZSBuZXh0IGludmVzdG9yKHMpIGluIHRoZSBsaXN0CiAgICAgICogKi8KICAgICBmdW5jdGlvbiByZXR1cm5JbnZlc3RtZW50UmVjdXJzaXZlKHVpbnQgdmFsdWUpIGludGVybmFsewogICAgICAgIGlmIChpbnZlc3RvckluZGV4Pj1pbnZlc3RvcnMubGVuZ3RoIHx8IHZhbHVlPT0wKSByZXR1cm47CiAgICAgICAgZWxzZSBpZih2YWx1ZTw9YmFsYW5jZXNbaW52ZXN0b3JzW2ludmVzdG9ySW5kZXhdXSl7CiAgICAgICAgICAgIGJhbGFuY2VzW2ludmVzdG9yc1tpbnZlc3RvckluZGV4XV0tPXZhbHVlOwogICAgICAgICAgICBpZighaW52ZXN0b3JzW2ludmVzdG9ySW5kZXhdLnNlbmQodmFsdWUpKSB0aHJvdzsgCiAgICAgICAgfSAKICAgICAgICBlbHNlIGlmKGJhbGFuY2VzW2ludmVzdG9yc1tpbnZlc3RvckluZGV4XV0+MCl7CiAgICAgICAgICAgIHVpbnQgdmFsID0gYmFsYW5jZXNbaW52ZXN0b3JzW2ludmVzdG9ySW5kZXhdXTsKICAgICAgICAgICAgYmFsYW5jZXNbaW52ZXN0b3JzW2ludmVzdG9ySW5kZXhdXT0wOwogICAgICAgICAgICBpZighaW52ZXN0b3JzW2ludmVzdG9ySW5kZXhdLnNlbmQodmFsKSkgdGhyb3c7CiAgICAgICAgICAgIGludmVzdG9ySW5kZXgrKzsKICAgICAgICAgICAgcmV0dXJuSW52ZXN0bWVudFJlY3Vyc2l2ZSh2YWx1ZS12YWwpOwogICAgICAgIH0gCiAgICAgICAgZWxzZXsKICAgICAgICAgICAgaW52ZXN0b3JJbmRleCsrOwogICAgICAgICAgICByZXR1cm5JbnZlc3RtZW50UmVjdXJzaXZlKHZhbHVlKTsKICAgICAgICB9CiAgICAgfQogICAgIAogICAgIGZ1bmN0aW9uIGdldE51bUludmVzdG9ycygpIGNvbnN0YW50IHJldHVybnModWludCl7CiAgICAgICAgIHJldHVybiBpbnZlc3RvcnMubGVuZ3RoOwogICAgIH0KICAgICAKICAgICAvKiogZG8gbm90IGFjY2VwdCBhbnkgbW9yZSBpbnZlc3RtZW50cyAqLwogICAgIGZ1bmN0aW9uIGNsb3NlKCl7CiAgICAgICAgIGlmKG1zZy5zZW5kZXI9PW93bmVyKQogICAgICAgICAgICBjbG9zZWQ9dHJ1ZTsKICAgICB9CiAgICAgCiAgICAgLyoqIGFsbG93IGludmVzdG1lbnRzICovCiAgICAgZnVuY3Rpb24gb3BlbigpewogICAgICAgICBpZihtc2cuc2VuZGVyPT1vd25lcikKICAgICAgICAgICAgY2xvc2VkPWZhbHNlOwogICAgIH0KfQ=='.
	

]
