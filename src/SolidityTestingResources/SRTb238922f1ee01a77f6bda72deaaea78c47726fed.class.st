Class {
	#name : #SRTb238922f1ee01a77f6bda72deaaea78c47726fed,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTb238922f1ee01a77f6bda72deaaea78c47726fed >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMjE7CgovKgogKiBDcmVhdG9yOiBNT0IgKE1vYmkpIAogKi8KCi8qCiAqIEFic3RyYWN0IFRva2VuIFNtYXJ0IENvbnRyYWN0CiAqCiAqLwoKIAogLyoKICogU2FmZSBNYXRoIFNtYXJ0IENvbnRyYWN0LiAKICogaHR0cHM6Ly9naXRodWIuY29tL09wZW5aZXBwZWxpbi96ZXBwZWxpbi1zb2xpZGl0eS9ibG9iL21hc3Rlci9jb250cmFjdHMvbWF0aC9TYWZlTWF0aC5zb2wKICovCgpjb250cmFjdCBTYWZlTWF0aCB7CiAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIGlmIChhID09IDApIHsKICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICB1aW50MjU2IGMgPSBhICogYjsKICAgIGFzc2VydChjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gc2FmZURpdih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDAKICAgIHVpbnQyNTYgYyA9IGEgLyBiOwogICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gc2FmZVN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIGZ1bmN0aW9uIHNhZmVBZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KfQoKCgoKLyoqCiAqIEVSQy0yMCBzdGFuZGFyZCB0b2tlbiBpbnRlcmZhY2UsIGFzIGRlZmluZWQKICogPGEgaHJlZj0iaHR0cDovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9pc3N1ZXMvMjAiPmhlcmU8L2E+LgogKi8KY29udHJhY3QgVG9rZW4gewogIAogIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBzdXBwbHkpOwogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKTsKICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpOwogIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwogIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpOwp9CgoKCi8qKgogKiBBYnN0cmFjdCBUb2tlbiBTbWFydCBDb250cmFjdCB0aGF0IGNvdWxkIGJlIHVzZWQgYXMgYSBiYXNlIGNvbnRyYWN0IGZvcgogKiBFUkMtMjAgdG9rZW4gY29udHJhY3RzLgogKi8KY29udHJhY3QgQWJzdHJhY3RUb2tlbiBpcyBUb2tlbiwgU2FmZU1hdGggewogIC8qKgogICAqIENyZWF0ZSBuZXcgQWJzdHJhY3QgVG9rZW4gY29udHJhY3QuCiAgICovCiAgZnVuY3Rpb24gQWJzdHJhY3RUb2tlbiAoKSB7CiAgICAvLyBEbyBub3RoaW5nCiAgfQogIAogIC8qKgogICAqIEdldCBudW1iZXIgb2YgdG9rZW5zIGN1cnJlbnRseSBiZWxvbmdpbmcgdG8gZ2l2ZW4gb3duZXIuCiAgICoKICAgKiBAcGFyYW0gX293bmVyIGFkZHJlc3MgdG8gZ2V0IG51bWJlciBvZiB0b2tlbnMgY3VycmVudGx5IGJlbG9uZ2luZyB0byB0aGUKICAgKiAgICAgICAgb3duZXIgb2YKICAgKiBAcmV0dXJuIG51bWJlciBvZiB0b2tlbnMgY3VycmVudGx5IGJlbG9uZ2luZyB0byB0aGUgb3duZXIgb2YgZ2l2ZW4gYWRkcmVzcwogICAqLwogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7CiAgICByZXR1cm4gYWNjb3VudHMgW19vd25lcl07CiAgfQoKICAvKioKICAgKiBUcmFuc2ZlciBnaXZlbiBudW1iZXIgb2YgdG9rZW5zIGZyb20gbWVzc2FnZSBzZW5kZXIgdG8gZ2l2ZW4gcmVjaXBpZW50LgogICAqCiAgICogQHBhcmFtIF90byBhZGRyZXNzIHRvIHRyYW5zZmVyIHRva2VucyB0byB0aGUgb3duZXIgb2YKICAgKiBAcGFyYW0gX3ZhbHVlIG51bWJlciBvZiB0b2tlbnMgdG8gdHJhbnNmZXIgdG8gdGhlIG93bmVyIG9mIGdpdmVuIGFkZHJlc3MKICAgKiBAcmV0dXJuIHRydWUgaWYgdG9rZW5zIHdlcmUgdHJhbnNmZXJyZWQgc3VjY2Vzc2Z1bGx5LCBmYWxzZSBvdGhlcndpc2UKICAgKiBhY2NvdW50cyBbX3RvXSArIF92YWx1ZSA+IGFjY291bnRzIFtfdG9dIGZvciBvdmVyZmxvdyBjaGVjawogICAqIHdoaWNoIGlzIGFscmVhZHkgaW4gc2FmZU1hdGgKICAgKi8KICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgcmVxdWlyZShfdG8gIT0gYWRkcmVzcygwKSk7CiAgICBpZiAoYWNjb3VudHMgW21zZy5zZW5kZXJdIDwgX3ZhbHVlKSByZXR1cm4gZmFsc2U7CiAgICBpZiAoX3ZhbHVlID4gMCAmJiBtc2cuc2VuZGVyICE9IF90bykgewogICAgICBhY2NvdW50cyBbbXNnLnNlbmRlcl0gPSBzYWZlU3ViIChhY2NvdW50cyBbbXNnLnNlbmRlcl0sIF92YWx1ZSk7CiAgICAgIGFjY291bnRzIFtfdG9dID0gc2FmZUFkZCAoYWNjb3VudHMgW190b10sIF92YWx1ZSk7CiAgICB9CiAgICBUcmFuc2ZlciAobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgcmV0dXJuIHRydWU7CiAgfQoKICAvKioKICAgKiBUcmFuc2ZlciBnaXZlbiBudW1iZXIgb2YgdG9rZW5zIGZyb20gZ2l2ZW4gb3duZXIgdG8gZ2l2ZW4gcmVjaXBpZW50LgogICAqCiAgICogQHBhcmFtIF9mcm9tIGFkZHJlc3MgdG8gdHJhbnNmZXIgdG9rZW5zIGZyb20gdGhlIG93bmVyIG9mCiAgICogQHBhcmFtIF90byBhZGRyZXNzIHRvIHRyYW5zZmVyIHRva2VucyB0byB0aGUgb3duZXIgb2YKICAgKiBAcGFyYW0gX3ZhbHVlIG51bWJlciBvZiB0b2tlbnMgdG8gdHJhbnNmZXIgZnJvbSBnaXZlbiBvd25lciB0byBnaXZlbgogICAqICAgICAgICByZWNpcGllbnQKICAgKiBAcmV0dXJuIHRydWUgaWYgdG9rZW5zIHdlcmUgdHJhbnNmZXJyZWQgc3VjY2Vzc2Z1bGx5LCBmYWxzZSBvdGhlcndpc2UKICAgKiBhY2NvdW50cyBbX3RvXSArIF92YWx1ZSA+IGFjY291bnRzIFtfdG9dIGZvciBvdmVyZmxvdyBjaGVjawogICAqIHdoaWNoIGlzIGFscmVhZHkgaW4gc2FmZU1hdGgKICAgKi8KICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKQogIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgcmVxdWlyZShfdG8gIT0gYWRkcmVzcygwKSk7CiAgICBpZiAoYWxsb3dhbmNlcyBbX2Zyb21dW21zZy5zZW5kZXJdIDwgX3ZhbHVlKSByZXR1cm4gZmFsc2U7CiAgICBpZiAoYWNjb3VudHMgW19mcm9tXSA8IF92YWx1ZSkgcmV0dXJuIGZhbHNlOyAKCiAgICBpZiAoX3ZhbHVlID4gMCAmJiBfZnJvbSAhPSBfdG8pIHsKCSAgYWxsb3dhbmNlcyBbX2Zyb21dW21zZy5zZW5kZXJdID0gc2FmZVN1YiAoYWxsb3dhbmNlcyBbX2Zyb21dW21zZy5zZW5kZXJdLCBfdmFsdWUpOwogICAgICBhY2NvdW50cyBbX2Zyb21dID0gc2FmZVN1YiAoYWNjb3VudHMgW19mcm9tXSwgX3ZhbHVlKTsKICAgICAgYWNjb3VudHMgW190b10gPSBzYWZlQWRkIChhY2NvdW50cyBbX3RvXSwgX3ZhbHVlKTsKICAgIH0KICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIC8qKgogICAqIEFsbG93IGdpdmVuIHNwZW5kZXIgdG8gdHJhbnNmZXIgZ2l2ZW4gbnVtYmVyIG9mIHRva2VucyBmcm9tIG1lc3NhZ2Ugc2VuZGVyLgogICAqIEBwYXJhbSBfc3BlbmRlciBhZGRyZXNzIHRvIGFsbG93IHRoZSBvd25lciBvZiB0byB0cmFuc2ZlciB0b2tlbnMgZnJvbSBtZXNzYWdlIHNlbmRlcgogICAqIEBwYXJhbSBfdmFsdWUgbnVtYmVyIG9mIHRva2VucyB0byBhbGxvdyB0byB0cmFuc2ZlcgogICAqIEByZXR1cm4gdHJ1ZSBpZiB0b2tlbiB0cmFuc2ZlciB3YXMgc3VjY2Vzc2Z1bGx5IGFwcHJvdmVkLCBmYWxzZSBvdGhlcndpc2UKICAgKi8KICAgZnVuY3Rpb24gYXBwcm92ZSAoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgYWxsb3dhbmNlcyBbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgQXBwcm92YWwgKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgcmV0dXJuIHRydWU7CiAgfQoKICAvKioKICAgKiBUZWxsIGhvdyBtYW55IHRva2VucyBnaXZlbiBzcGVuZGVyIGlzIGN1cnJlbnRseSBhbGxvd2VkIHRvIHRyYW5zZmVyIGZyb20KICAgKiBnaXZlbiBvd25lci4KICAgKgogICAqIEBwYXJhbSBfb3duZXIgYWRkcmVzcyB0byBnZXQgbnVtYmVyIG9mIHRva2VucyBhbGxvd2VkIHRvIGJlIHRyYW5zZmVycmVkCiAgICogICAgICAgIGZyb20gdGhlIG93bmVyIG9mCiAgICogQHBhcmFtIF9zcGVuZGVyIGFkZHJlc3MgdG8gZ2V0IG51bWJlciBvZiB0b2tlbnMgYWxsb3dlZCB0byBiZSB0cmFuc2ZlcnJlZAogICAqICAgICAgICBieSB0aGUgb3duZXIgb2YKICAgKiBAcmV0dXJuIG51bWJlciBvZiB0b2tlbnMgZ2l2ZW4gc3BlbmRlciBpcyBjdXJyZW50bHkgYWxsb3dlZCB0byB0cmFuc2ZlcgogICAqICAgICAgICAgZnJvbSBnaXZlbiBvd25lcgogICAqLwogIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQKICByZXR1cm5zICh1aW50MjU2IHJlbWFpbmluZykgewogICAgcmV0dXJuIGFsbG93YW5jZXMgW19vd25lcl1bX3NwZW5kZXJdOwogIH0KCiAgLyoqCiAgICogTWFwcGluZyBmcm9tIGFkZHJlc3NlcyBvZiB0b2tlbiBob2xkZXJzIHRvIHRoZSBudW1iZXJzIG9mIHRva2VucyBiZWxvbmdpbmcKICAgKiB0byB0aGVzZSB0b2tlbiBob2xkZXJzLgogICAqLwogIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgYWNjb3VudHM7CgogIC8qKgogICAqIE1hcHBpbmcgZnJvbSBhZGRyZXNzZXMgb2YgdG9rZW4gaG9sZGVycyB0byB0aGUgbWFwcGluZyBvZiBhZGRyZXNzZXMgb2YKICAgKiBzcGVuZGVycyB0byB0aGUgYWxsb3dhbmNlcyBzZXQgYnkgdGhlc2UgdG9rZW4gaG9sZGVycyB0byB0aGVzZSBzcGVuZGVycy4KICAgKi8KICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikpIHByaXZhdGUgYWxsb3dhbmNlczsKICAKfQoKCi8qKgogKiBNb2JpIHRva2VuIHNtYXJ0IGNvbnRyYWN0LgogKi8KY29udHJhY3QgTU9CVG9rZW4gaXMgQWJzdHJhY3RUb2tlbiB7CiAgLyoqCiAgICogTWF4aW11bSBhbGxvd2VkIG51bWJlciBvZiB0b2tlbnMgaW4gY2lyY3VsYXRpb24uCiAgICogdG9rZW5TdXBwbHkgPSB0b2tlbnNJQWN0dWFsbHlXYW50ICogKDEwIF4gZGVjaW1hbHMpCiAgICovCiAgIAogICAKICB1aW50MjU2IGNvbnN0YW50IE1BWF9UT0tFTl9DT1VOVCA9IDgwMDAwMDAwMDAgKiAoMTAqKjE4KTsKICAgCiAgLyoqCiAgICogQWRkcmVzcyBvZiB0aGUgb3duZXIgb2YgdGhpcyBzbWFydCBjb250cmFjdC4KICAgKi8KICBhZGRyZXNzIHByaXZhdGUgb3duZXI7CiAgCiAgLyoqCiAgICogRnJvemVuIGFjY291bnQgbGlzdCBob2xkZXIKICAgKi8KICBtYXBwaW5nIChhZGRyZXNzID0+IGJvb2wpIHByaXZhdGUgZnJvemVuQWNjb3VudDsKCiAgLyoqCiAgICogQ3VycmVudCBudW1iZXIgb2YgdG9rZW5zIGluIGNpcmN1bGF0aW9uLgogICAqLwogIHVpbnQyNTYgdG9rZW5Db3VudCA9IDA7CiAgCiAKICAvKioKICAgKiBUcnVlIGlmIHRva2VucyB0cmFuc2ZlcnMgYXJlIGN1cnJlbnRseSBmcm96ZW4sIGZhbHNlIG90aGVyd2lzZS4KICAgKi8KICBib29sIGZyb3plbiA9IGZhbHNlOwogIAogCiAgLyoqCiAgICogQ3JlYXRlIG5ldyB0b2tlbiBzbWFydCBjb250cmFjdCBhbmQgbWFrZSBtc2cuc2VuZGVyIHRoZQogICAqIG93bmVyIG9mIHRoaXMgc21hcnQgY29udHJhY3QuCiAgICovCiAgZnVuY3Rpb24gTU9CVG9rZW4gKCkgewogICAgb3duZXIgPSBtc2cuc2VuZGVyOwogIH0KCiAgLyoqCiAgICogR2V0IHRvdGFsIG51bWJlciBvZiB0b2tlbnMgaW4gY2lyY3VsYXRpb24uCiAgICoKICAgKiBAcmV0dXJuIHRvdGFsIG51bWJlciBvZiB0b2tlbnMgaW4gY2lyY3VsYXRpb24KICAgKi8KICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgc3VwcGx5KSB7CiAgICByZXR1cm4gdG9rZW5Db3VudDsKICB9CgogIHN0cmluZyBjb25zdGFudCBwdWJsaWMgbmFtZSA9ICJNb2JpIjsKICBzdHJpbmcgY29uc3RhbnQgcHVibGljIHN5bWJvbCA9ICJNT0IiOwogIHVpbnQ4IGNvbnN0YW50IHB1YmxpYyBkZWNpbWFscyA9IDE4OwogIAogIC8qKgogICAqIFRyYW5zZmVyIGdpdmVuIG51bWJlciBvZiB0b2tlbnMgZnJvbSBtZXNzYWdlIHNlbmRlciB0byBnaXZlbiByZWNpcGllbnQuCiAgICogQHBhcmFtIF90byBhZGRyZXNzIHRvIHRyYW5zZmVyIHRva2VucyB0byB0aGUgb3duZXIgb2YKICAgKiBAcGFyYW0gX3ZhbHVlIG51bWJlciBvZiB0b2tlbnMgdG8gdHJhbnNmZXIgdG8gdGhlIG93bmVyIG9mIGdpdmVuIGFkZHJlc3MKICAgKiBAcmV0dXJuIHRydWUgaWYgdG9rZW5zIHdlcmUgdHJhbnNmZXJyZWQgc3VjY2Vzc2Z1bGx5LCBmYWxzZSBvdGhlcndpc2UKICAgKi8KICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgcmVxdWlyZSghZnJvemVuQWNjb3VudFttc2cuc2VuZGVyXSk7CglpZiAoZnJvemVuKSByZXR1cm4gZmFsc2U7CiAgICBlbHNlIHJldHVybiBBYnN0cmFjdFRva2VuLnRyYW5zZmVyIChfdG8sIF92YWx1ZSk7CiAgfQoKICAvKioKICAgKiBUcmFuc2ZlciBnaXZlbiBudW1iZXIgb2YgdG9rZW5zIGZyb20gZ2l2ZW4gb3duZXIgdG8gZ2l2ZW4gcmVjaXBpZW50LgogICAqCiAgICogQHBhcmFtIF9mcm9tIGFkZHJlc3MgdG8gdHJhbnNmZXIgdG9rZW5zIGZyb20gdGhlIG93bmVyIG9mCiAgICogQHBhcmFtIF90byBhZGRyZXNzIHRvIHRyYW5zZmVyIHRva2VucyB0byB0aGUgb3duZXIgb2YKICAgKiBAcGFyYW0gX3ZhbHVlIG51bWJlciBvZiB0b2tlbnMgdG8gdHJhbnNmZXIgZnJvbSBnaXZlbiBvd25lciB0byBnaXZlbgogICAqICAgICAgICByZWNpcGllbnQKICAgKiBAcmV0dXJuIHRydWUgaWYgdG9rZW5zIHdlcmUgdHJhbnNmZXJyZWQgc3VjY2Vzc2Z1bGx5LCBmYWxzZSBvdGhlcndpc2UKICAgKi8KICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKQogICAgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CglyZXF1aXJlKCFmcm96ZW5BY2NvdW50W19mcm9tXSk7CiAgICBpZiAoZnJvemVuKSByZXR1cm4gZmFsc2U7CiAgICBlbHNlIHJldHVybiBBYnN0cmFjdFRva2VuLnRyYW5zZmVyRnJvbSAoX2Zyb20sIF90bywgX3ZhbHVlKTsKICB9CgogICAvKioKICAgKiBDaGFuZ2UgaG93IG1hbnkgdG9rZW5zIGdpdmVuIHNwZW5kZXIgaXMgYWxsb3dlZCB0byB0cmFuc2ZlciBmcm9tIG1lc3NhZ2UKICAgKiBzcGVuZGVyLiAgSW4gb3JkZXIgdG8gcHJldmVudCBkb3VibGUgc3BlbmRpbmcgb2YgYWxsb3dhbmNlLAogICAqIFRvIGNoYW5nZSB0aGUgYXBwcm92ZSBhbW91bnQgeW91IGZpcnN0IGhhdmUgdG8gcmVkdWNlIHRoZSBhZGRyZXNzZXNgCiAgICogYWxsb3dhbmNlIHRvIHplcm8gYnkgY2FsbGluZyBgYXBwcm92ZShfc3BlbmRlciwgMClgIGlmIGl0IGlzIG5vdAogICAqIGFscmVhZHkgMCB0byBtaXRpZ2F0ZSB0aGUgcmFjZSBjb25kaXRpb24gZGVzY3JpYmVkIGhlcmU6CiAgICogaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL0VJUHMvaXNzdWVzLzIwI2lzc3VlY29tbWVudC0yNjM1MjQ3MjkKICAgKiBAcGFyYW0gX3NwZW5kZXIgYWRkcmVzcyB0byBhbGxvdyB0aGUgb3duZXIgb2YgdG8gdHJhbnNmZXIgdG9rZW5zIGZyb20KICAgKiAgICAgICAgbWVzc2FnZSBzZW5kZXIKICAgKiBAcGFyYW0gX3ZhbHVlIG51bWJlciBvZiB0b2tlbnMgdG8gYWxsb3cgdG8gdHJhbnNmZXIKICAgKiBAcmV0dXJuIHRydWUgaWYgdG9rZW4gdHJhbnNmZXIgd2FzIHN1Y2Nlc3NmdWxseSBhcHByb3ZlZCwgZmFsc2Ugb3RoZXJ3aXNlCiAgICovCiAgZnVuY3Rpb24gYXBwcm92ZSAoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpCiAgICByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKCXJlcXVpcmUoYWxsb3dhbmNlIChtc2cuc2VuZGVyLCBfc3BlbmRlcikgPT0gMCB8fCBfdmFsdWUgPT0gMCk7CiAgICByZXR1cm4gQWJzdHJhY3RUb2tlbi5hcHByb3ZlIChfc3BlbmRlciwgX3ZhbHVlKTsKICB9CgogIC8qKgogICAqIENyZWF0ZSBfdmFsdWUgbmV3IHRva2VucyBhbmQgZ2l2ZSBuZXcgY3JlYXRlZCB0b2tlbnMgdG8gbXNnLnNlbmRlci4KICAgKiBNYXkgb25seSBiZSBjYWxsZWQgYnkgc21hcnQgY29udHJhY3Qgb3duZXIuCiAgICoKICAgKiBAcGFyYW0gX3ZhbHVlIG51bWJlciBvZiB0b2tlbnMgdG8gY3JlYXRlCiAgICogQHJldHVybiB0cnVlIGlmIHRva2VucyB3ZXJlIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5LCBmYWxzZSBvdGhlcndpc2UKICAgKi8KICBmdW5jdGlvbiBjcmVhdGVUb2tlbnModWludDI1NiBfdmFsdWUpCiAgICByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgIHJlcXVpcmUgKG1zZy5zZW5kZXIgPT0gb3duZXIpOwoKICAgIGlmIChfdmFsdWUgPiAwKSB7CiAgICAgIGlmIChfdmFsdWUgPiBzYWZlU3ViIChNQVhfVE9LRU5fQ09VTlQsIHRva2VuQ291bnQpKSByZXR1cm4gZmFsc2U7CgkgIAogICAgICBhY2NvdW50cyBbbXNnLnNlbmRlcl0gPSBzYWZlQWRkIChhY2NvdW50cyBbbXNnLnNlbmRlcl0sIF92YWx1ZSk7CiAgICAgIHRva2VuQ291bnQgPSBzYWZlQWRkICh0b2tlbkNvdW50LCBfdmFsdWUpOwoJICAKCSAgLy8gYWRkaW5nIHRyYW5zZmVyIGV2ZW50IGFuZCBfZnJvbSBhZGRyZXNzIGFzIG51bGwgYWRkcmVzcwoJICBUcmFuc2ZlcigweDAsIG1zZy5zZW5kZXIsIF92YWx1ZSk7CgkgIAoJICByZXR1cm4gdHJ1ZTsKICAgIH0KCQoJICByZXR1cm4gZmFsc2U7CiAgICAKICB9CiAgCgogIC8qKgogICAqIFNldCBuZXcgb3duZXIgZm9yIHRoZSBzbWFydCBjb250cmFjdC4KICAgKiBNYXkgb25seSBiZSBjYWxsZWQgYnkgc21hcnQgY29udHJhY3Qgb3duZXIuCiAgICoKICAgKiBAcGFyYW0gX25ld093bmVyIGFkZHJlc3Mgb2YgbmV3IG93bmVyIG9mIHRoZSBzbWFydCBjb250cmFjdAogICAqLwogIGZ1bmN0aW9uIHNldE93bmVyKGFkZHJlc3MgX25ld093bmVyKSB7CiAgICByZXF1aXJlIChtc2cuc2VuZGVyID09IG93bmVyKTsKCiAgICBvd25lciA9IF9uZXdPd25lcjsKICB9CgogIC8qKgogICAqIEZyZWV6ZSBBTEwgdG9rZW4gdHJhbnNmZXJzLgogICAqIE1heSBvbmx5IGJlIGNhbGxlZCBieSBzbWFydCBjb250cmFjdCBvd25lci4KICAgKi8KICBmdW5jdGlvbiBmcmVlemVUcmFuc2ZlcnMgKCkgewogICAgcmVxdWlyZSAobXNnLnNlbmRlciA9PSBvd25lcik7CgogICAgaWYgKCFmcm96ZW4pIHsKICAgICAgZnJvemVuID0gdHJ1ZTsKICAgICAgRnJlZXplICgpOwogICAgfQogIH0KCiAgLyoqCiAgICogVW5mcmVlemUgQUxMIHRva2VuIHRyYW5zZmVycy4KICAgKiBNYXkgb25seSBiZSBjYWxsZWQgYnkgc21hcnQgY29udHJhY3Qgb3duZXIuCiAgICovCiAgZnVuY3Rpb24gdW5mcmVlemVUcmFuc2ZlcnMgKCkgewogICAgcmVxdWlyZSAobXNnLnNlbmRlciA9PSBvd25lcik7CgogICAgaWYgKGZyb3plbikgewogICAgICBmcm96ZW4gPSBmYWxzZTsKICAgICAgVW5mcmVlemUgKCk7CiAgICB9CiAgfQogIAogIAogIC8qQSB1c2VyIGlzIGFibGUgdG8gdW5pbnRlbnRpb25hbGx5IHNlbmQgdG9rZW5zIHRvIGEgY29udHJhY3QgCiAgKiBhbmQgaWYgdGhlIGNvbnRyYWN0IGlzIG5vdCBwcmVwYXJlZCB0byByZWZ1bmQgdGhlbSB0aGV5IHdpbGwgZ2V0IHN0dWNrIGluIHRoZSBjb250cmFjdC4gCiAgKiBUaGUgc2FtZSBpc3N1ZSB1c2VkIHRvIGhhcHBlbiBmb3IgRXRoZXIgdG9vIGJ1dCBuZXcgU29saWRpdHkgdmVyc2lvbnMgYWRkZWQgdGhlIHBheWFibGUgbW9kaWZpZXIgdG8KICAqIHByZXZlbnQgdW5pbnRlbmRlZCBFdGhlciB0cmFuc2ZlcnMuIEhvd2V2ZXIsIHRoZXJl4oCZcyBubyBzdWNoIG1lY2hhbmlzbSBmb3IgdG9rZW4gdHJhbnNmZXJzLgogICogc28gdGhlIGJlbG93IGZ1bmN0aW9uIGlzIGNyZWF0ZWQKICAqLwogIAogIGZ1bmN0aW9uIHJlZnVuZFRva2VucyhhZGRyZXNzIF90b2tlbiwgYWRkcmVzcyBfcmVmdW5kLCB1aW50MjU2IF92YWx1ZSkgewogICAgcmVxdWlyZSAobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICByZXF1aXJlKF90b2tlbiAhPSBhZGRyZXNzKHRoaXMpKTsKICAgIEFic3RyYWN0VG9rZW4gdG9rZW4gPSBBYnN0cmFjdFRva2VuKF90b2tlbik7CiAgICB0b2tlbi50cmFuc2ZlcihfcmVmdW5kLCBfdmFsdWUpOwogICAgUmVmdW5kVG9rZW5zKF90b2tlbiwgX3JlZnVuZCwgX3ZhbHVlKTsKICB9CiAgCiAgLyoqCiAgICogRnJlZXplIHNwZWNpZmljIGFjY291bnQKICAgKiBNYXkgb25seSBiZSBjYWxsZWQgYnkgc21hcnQgY29udHJhY3Qgb3duZXIuCiAgICovCiAgZnVuY3Rpb24gZnJlZXplQWNjb3VudChhZGRyZXNzIF90YXJnZXQsIGJvb2wgZnJlZXplKSB7CiAgICAgIHJlcXVpcmUgKG1zZy5zZW5kZXIgPT0gb3duZXIpOwoJICByZXF1aXJlIChtc2cuc2VuZGVyICE9IF90YXJnZXQpOwogICAgICBmcm96ZW5BY2NvdW50W190YXJnZXRdID0gZnJlZXplOwogICAgICBGcm96ZW5GdW5kcyhfdGFyZ2V0LCBmcmVlemUpOwogfQoKICAvKioKICAgKiBMb2dnZWQgd2hlbiB0b2tlbiB0cmFuc2ZlcnMgd2VyZSBmcm96ZW4uCiAgICovCiAgZXZlbnQgRnJlZXplICgpOwoKICAvKioKICAgKiBMb2dnZWQgd2hlbiB0b2tlbiB0cmFuc2ZlcnMgd2VyZSB1bmZyb3plbi4KICAgKi8KICBldmVudCBVbmZyZWV6ZSAoKTsKICAKICAvKioKICAgKiBMb2dnZWQgd2hlbiBhIHBhcnRpY3VsYXIgYWNjb3VudCBpcyBmcm96ZW4uCiAgICovCiAgCiAgZXZlbnQgRnJvemVuRnVuZHMoYWRkcmVzcyB0YXJnZXQsIGJvb2wgZnJvemVuKTsKCgogIAogIC8qKgogICAqIHdoZW4gYWNjaWRlbnRhbGx5IHNlbmQgb3RoZXIgdG9rZW5zIGFyZSByZWZ1bmRlZAogICAqLwogIAogIGV2ZW50IFJlZnVuZFRva2VucyhhZGRyZXNzIF90b2tlbiwgYWRkcmVzcyBfcmVmdW5kLCB1aW50MjU2IF92YWx1ZSk7Cn0='.
	

]
