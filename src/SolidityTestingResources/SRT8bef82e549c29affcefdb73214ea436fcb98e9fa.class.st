Class {
	#name : #SRT8bef82e549c29affcefdb73214ea436fcb98e9fa,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT8bef82e549c29affcefdb73214ea436fcb98e9fa >> base64 [
	^ ''.
	

]
