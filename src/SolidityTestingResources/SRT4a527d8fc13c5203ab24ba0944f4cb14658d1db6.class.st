Class {
	#name : #SRT4a527d8fc13c5203ab24ba0944f4cb14658d1db6,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT4a527d8fc13c5203ab24ba0944f4cb14658d1db6 >> base64 [
	^ ''.
	

]
