Class {
	#name : #SRT6a190eef45f589373a463afb3b90493e696c45e2,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT6a190eef45f589373a463afb3b90493e696c45e2 >> base64 [
	^ ''.
	

]
