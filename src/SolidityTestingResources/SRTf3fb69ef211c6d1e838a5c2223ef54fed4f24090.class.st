Class {
	#name : #SRTf3fb69ef211c6d1e838a5c2223ef54fed4f24090,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTf3fb69ef211c6d1e838a5c2223ef54fed4f24090 >> base64 [
	^ ''.
	

]
