Class {
	#name : #SRT84119cb33e8f590d75c2d6ea4e6b0741a7494eda,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT84119cb33e8f590d75c2d6ea4e6b0741a7494eda >> base64 [
	^ 'LyoKICogR2lnYSBXYXR0IFRva2VuIFNtYXJ0IENvbnRyYWN0LiAgQ29weXJpZ2h0ICYjMTY5OyAyMDE2IGJ5IEFCREsgQ29uc3VsdGluZy4KICogQXV0aG9yOiBNaWtoYWlsIFZsYWRpbWlyb3YgPDxzcGFuIGNsYXNzPSJfX2NmX2VtYWlsX18iIGRhdGEtY2ZlbWFpbD0iMTc3YTdlN2M3Zjc2N2U3YjM5NjE3Yjc2NzM3ZTdhN2U2NTc4NjE1NzcwN2E3NjdlN2IzOTc0Nzg3YSI+W2VtYWlsJiMxNjA7cHJvdGVjdGVkXTwvc3Bhbj4+CiAqLwpwcmFnbWEgc29saWRpdHkgXjAuNC4xOwoKLyoqCiAqIEVSQy0yMCBzdGFuZGFyZCB0b2tlbiBpbnRlcmZhY2UsIGFzIGRlZmluZWQKICogPGEgaHJlZj0iaHR0cDovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9pc3N1ZXMvMjAiPmhlcmU8L2E+LgogKi8KY29udHJhY3QgVG9rZW4gewogIC8qKgogICAqIEdldCB0b3RhbCBudW1iZXIgb2YgdG9rZW5zIGluIGNpcmN1bGF0aW9uLgogICAqCiAgICogQHJldHVybiB0b3RhbCBudW1iZXIgb2YgdG9rZW5zIGluIGNpcmN1bGF0aW9uCiAgICovCiAgZnVuY3Rpb24gdG90YWxTdXBwbHkgKCkgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBzdXBwbHkpOwoKICAvKioKICAgKiBHZXQgbnVtYmVyIG9mIHRva2VucyBjdXJyZW50bHkgYmVsb25naW5nIHRvIGdpdmVuIG93bmVyLgogICAqCiAgICogQHBhcmFtIF9vd25lciBhZGRyZXNzIHRvIGdldCBudW1iZXIgb2YgdG9rZW5zIGN1cnJlbnRseSBiZWxvbmdpbmcgdG8gdGhlCiAgICAgICAgICAgIG93bmVyIG9mCiAgICogQHJldHVybiBudW1iZXIgb2YgdG9rZW5zIGN1cnJlbnRseSBiZWxvbmdpbmcgdG8gdGhlIG93bmVyIG9mIGdpdmVuIGFkZHJlc3MKICAgKi8KICBmdW5jdGlvbiBiYWxhbmNlT2YgKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpOwoKICAvKioKICAgKiBUcmFuc2ZlciBnaXZlbiBudW1iZXIgb2YgdG9rZW5zIGZyb20gbWVzc2FnZSBzZW5kZXIgdG8gZ2l2ZW4gcmVjaXBpZW50LgogICAqCiAgICogQHBhcmFtIF90byBhZGRyZXNzIHRvIHRyYW5zZmVyIHRva2VucyBmcm9tIHRoZSBvd25lciBvZgogICAqIEBwYXJhbSBfdmFsdWUgbnVtYmVyIG9mIHRva2VucyB0byB0cmFuc2ZlciB0byB0aGUgb3duZXIgb2YgZ2l2ZW4gYWRkcmVzcwogICAqIEByZXR1cm4gdHJ1ZSBpZiB0b2tlbnMgd2VyZSB0cmFuc2ZlcnJlZCBzdWNjZXNzZnVsbHksIGZhbHNlIG90aGVyd2lzZQogICAqLwogIGZ1bmN0aW9uIHRyYW5zZmVyIChhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CgogIC8qKgogICAqIFRyYW5zZmVyIGdpdmVuIG51bWJlciBvZiB0b2tlbnMgZnJvbSBnaXZlbiBvd25lciB0byBnaXZlbiByZWNpcGllbnQuCiAgICoKICAgKiBAcGFyYW0gX2Zyb20gYWRkcmVzcyB0byB0cmFuc2ZlciB0b2tlbnMgZnJvbSB0aGUgb3duZXIgb2YKICAgKiBAcGFyYW0gX3RvIGFkZHJlc3MgdG8gdHJhbnNmZXIgdG9rZW5zIHRvIHRoZSBvd25lciBvZgogICAqIEBwYXJhbSBfdmFsdWUgbnVtYmVyIG9mIHRva2VucyB0byB0cmFuc2ZlciBmcm9tIGdpdmVuIG93bmVyIHRvIGdpdmVuCiAgICAgICAgICAgIHJlY2lwaWVudAogICAqIEByZXR1cm4gdHJ1ZSBpZiB0b2tlbnMgd2VyZSB0cmFuc2ZlcnJlZCBzdWNjZXNzZnVsbHksIGZhbHNlIG90aGVyd2lzZQogICAqLwogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbSAoYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKQogIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CgogIC8qKgogICAqIEFsbG93IGdpdmVuIHNwZW5kZXIgdG8gdHJhbnNmZXIgZ2l2ZW4gbnVtYmVyIG9mIHRva2VucyBmcm9tIG1lc3NhZ2Ugc2VuZGVyLgogICAqCiAgICogQHBhcmFtIF9zcGVuZGVyIGFkZHJlc3MgdG8gYWxsb3cgdGhlIG93bmVyIG9mIHRvIHRyYW5zZmVyIHRva2VucyBmcm9tCiAgICAgICAgICAgIG1lc3NhZ2Ugc2VuZGVyCiAgICogQHBhcmFtIF92YWx1ZSBudW1iZXIgb2YgdG9rZW5zIHRvIGFsbG93IHRvIHRyYW5zZmVyCiAgICogQHJldHVybiB0cnVlIGlmIHRva2VuIHRyYW5zZmVyIHdhcyBzdWNjZXNzZnVsbHkgYXBwcm92ZWQsIGZhbHNlIG90aGVyd2lzZQogICAqLwogIGZ1bmN0aW9uIGFwcHJvdmUgKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwoKICAvKioKICAgKiBUZWxsIGhvdyBtYW55IHRva2VucyBnaXZlbiBzcGVuZGVyIGlzIGN1cnJlbnRseSBhbGxvd2VkIHRvIHRyYW5zZmVyIGZyb20KICAgKiBnaXZlbiBvd25lci4KICAgKgogICAqIEBwYXJhbSBfb3duZXIgYWRkcmVzcyB0byBnZXQgbnVtYmVyIG9mIHRva2VucyBhbGxvd2VkIHRvIGJlIHRyYW5zZmVycmVkCiAgICogICAgICAgIGZyb20gdGhlIG93bmVyIG9mCiAgICogQHBhcmFtIF9zcGVuZGVyIGFkZHJlc3MgdG8gZ2V0IG51bWJlciBvZiB0b2tlbnMgYWxsb3dlZCB0byBiZSB0cmFuc2ZlcnJlZAogICAqICAgICAgICBieSB0aGUgb3duZXIgb2YKICAgKiBAcmV0dXJuIG51bWJlciBvZiB0b2tlbnMgZ2l2ZW4gc3BlbmRlciBpcyBjdXJyZW50bHkgYWxsb3dlZCB0byB0cmFuc2ZlcgogICAqICAgICAgICAgZnJvbSBnaXZlbiBvd25lcgogICAqLwogIGZ1bmN0aW9uIGFsbG93YW5jZSAoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpCiAgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpOwoKICAvKioKICAgKiBMb2dnZWQgd2hlbiB0b2tlbnMgd2VyZSB0cmFuc2ZlcnJlZCBmcm9tIG9uZSBvd25lciB0byBhbm90aGVyLgogICAqCiAgICogQHBhcmFtIF9mcm9tIGFkZHJlc3Mgb2YgdGhlIG93bmVyLCB0b2tlbnMgd2VyZSB0cmFuc2ZlcnJlZCBmcm9tCiAgICogQHBhcmFtIF90byBhZGRyZXNzIG9mIHRoZSBvd25lciwgdG9rZW5zIHdlcmUgdHJhbnNmZXJyZWQgdG8KICAgKiBAcGFyYW0gX3ZhbHVlIG51bWJlciBvZiB0b2tlbnMgdHJhbnNmZXJyZWQKICAgKi8KICBldmVudCBUcmFuc2ZlciAoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50MjU2IF92YWx1ZSk7CgogIC8qKgogICAqIExvZ2dlZCB3aGVuIG93bmVyIGFwcHJvdmVkIGhpcyB0b2tlbnMgdG8gYmUgdHJhbnNmZXJyZWQgYnkgc29tZSBzcGVuZGVyLgogICAqCiAgICogQHBhcmFtIF9vd25lciBvd25lciB3aG8gYXBwcm92ZWQgaGlzIHRva2VucyB0byBiZSB0cmFuc2ZlcnJlZAogICAqIEBwYXJhbSBfc3BlbmRlciBzcGVuZGVyIHdobyB3ZXJlIGFsbG93ZWQgdG8gdHJhbnNmZXIgdGhlIHRva2VucyBiZWxvbmdpbmcKICAgKiAgICAgICAgdG8gdGhlIG93bmVyCiAgICogQHBhcmFtIF92YWx1ZSBudW1iZXIgb2YgdG9rZW5zIGJlbG9uZ2luZyB0byB0aGUgb3duZXIsIGFwcHJvdmVkIHRvIGJlCiAgICogICAgICAgIHRyYW5zZmVycmVkIGJ5IHRoZSBzcGVuZGVyCiAgICovCiAgZXZlbnQgQXBwcm92YWwgKAogICAgYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7Cn0KCi8qKgogKiBQcm92aWRlcyBtZXRob2RzIHRvIHNhZmVseSBhZGQsIHN1YnRyYWN0IGFuZCBtdWx0aXBseSB1aW50MjU2IG51bWJlcnMuCiAqLwpjb250cmFjdCBTYWZlTWF0aCB7CiAgdWludDI1NiBjb25zdGFudCBwcml2YXRlIE1BWF9VSU5UMjU2ID0KICAgIDB4RkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRjsKCiAgLyoqCiAgICogQWRkIHR3byB1aW50MjU2IHZhbHVlcywgdGhyb3cgaW4gY2FzZSBvZiBvdmVyZmxvdy4KICAgKgogICAqIEBwYXJhbSB4IGZpcnN0IHZhbHVlIHRvIGFkZAogICAqIEBwYXJhbSB5IHNlY29uZCB2YWx1ZSB0byBhZGQKICAgKiBAcmV0dXJuIHggKyB5CiAgICovCiAgZnVuY3Rpb24gc2FmZUFkZCAodWludDI1NiB4LCB1aW50MjU2IHkpCiAgY29uc3RhbnQgaW50ZXJuYWwKICByZXR1cm5zICh1aW50MjU2IHopIHsKICAgIGlmICh4ID4gTUFYX1VJTlQyNTYgLSB5KSB0aHJvdzsKICAgIHJldHVybiB4ICsgeTsKICB9CgogIC8qKgogICAqIFN1YnRyYWN0IG9uZSB1aW50MjU2IHZhbHVlIGZyb20gYW5vdGhlciwgdGhyb3cgaW4gY2FzZSBvZiB1bmRlcmZsb3cuCiAgICoKICAgKiBAcGFyYW0geCB2YWx1ZSB0byBzdWJ0cmFjdCBmcm9tCiAgICogQHBhcmFtIHkgdmFsdWUgdG8gc3VidHJhY3QKICAgKiBAcmV0dXJuIHggLSB5CiAgICovCiAgZnVuY3Rpb24gc2FmZVN1YiAodWludDI1NiB4LCB1aW50MjU2IHkpCiAgY29uc3RhbnQgaW50ZXJuYWwKICByZXR1cm5zICh1aW50MjU2IHopIHsKICAgIGlmICh4IDwgeSkgdGhyb3c7CiAgICByZXR1cm4geCAtIHk7CiAgfQoKICAvKioKICAgKiBNdWx0aXBseSB0d28gdWludDI1NiB2YWx1ZXMsIHRocm93IGluIGNhc2Ugb2Ygb3ZlcmZsb3cuCiAgICoKICAgKiBAcGFyYW0geCBmaXJzdCB2YWx1ZSB0byBtdWx0aXBseQogICAqIEBwYXJhbSB5IHNlY29uZCB2YWx1ZSB0byBtdWx0aXBseQogICAqIEByZXR1cm4geCAqIHkKICAgKi8KICBmdW5jdGlvbiBzYWZlTXVsICh1aW50MjU2IHgsIHVpbnQyNTYgeSkKICBjb25zdGFudCBpbnRlcm5hbAogIHJldHVybnMgKHVpbnQyNTYgeikgewogICAgaWYgKHkgPT0gMCkgcmV0dXJuIDA7IC8vIFByZXZlbnQgZGl2aXNpb24gYnkgemVybyBhdCB0aGUgbmV4dCBsaW5lCiAgICBpZiAoeCA+IE1BWF9VSU5UMjU2IC8geSkgdGhyb3c7CiAgICByZXR1cm4geCAqIHk7CiAgfQp9CgovKioKICogQWJzdHJhY3QgYmFzZSBjb250cmFjdCBmb3IgY29udHJhY3RzIGltcGxlbWVudGluZyBUb2tlbiBpbnRlcmZhY2UuCiAqLwpjb250cmFjdCBBYnN0cmFjdFRva2VuIGlzIFRva2VuLCBTYWZlTWF0aCB7CiAgLyoqCiAgICogR2V0IHRvdGFsIG51bWJlciBvZiB0b2tlbnMgaW4gY2lyY3VsYXRpb24uCiAgICoKICAgKiBAcmV0dXJuIHRvdGFsIG51bWJlciBvZiB0b2tlbnMgaW4gY2lyY3VsYXRpb24KICAgKi8KICBmdW5jdGlvbiB0b3RhbFN1cHBseSAoKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHN1cHBseSkgewogICAgcmV0dXJuIHRva2Vuc0NvdW50OwogIH0KCiAgLyoqCiAgICogR2V0IG51bWJlciBvZiB0b2tlbnMgY3VycmVudGx5IGJlbG9uZ2luZyB0byBnaXZlbiBvd25lci4KICAgKgogICAqIEBwYXJhbSBfb3duZXIgYWRkcmVzcyB0byBnZXQgbnVtYmVyIG9mIHRva2VucyBjdXJyZW50bHkgYmVsb25naW5nIHRvIHRoZQogICAgICAgICAgICBvd25lciBvZgogICAqIEByZXR1cm4gbnVtYmVyIG9mIHRva2VucyBjdXJyZW50bHkgYmVsb25naW5nIHRvIHRoZSBvd25lciBvZiBnaXZlbiBhZGRyZXNzCiAgICovCiAgZnVuY3Rpb24gYmFsYW5jZU9mIChhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7CiAgICByZXR1cm4gYWNjb3VudHMgW19vd25lcl07CiAgfQoKICAvKioKICAgKiBUcmFuc2ZlciBnaXZlbiBudW1iZXIgb2YgdG9rZW5zIGZyb20gbWVzc2FnZSBzZW5kZXIgdG8gZ2l2ZW4gcmVjaXBpZW50LgogICAqCiAgICogQHBhcmFtIF90byBhZGRyZXNzIHRvIHRyYW5zZmVyIHRva2VucyBmcm9tIHRoZSBvd25lciBvZgogICAqIEBwYXJhbSBfdmFsdWUgbnVtYmVyIG9mIHRva2VucyB0byB0cmFuc2ZlciB0byB0aGUgb3duZXIgb2YgZ2l2ZW4gYWRkcmVzcwogICAqIEByZXR1cm4gdHJ1ZSBpZiB0b2tlbnMgd2VyZSB0cmFuc2ZlcnJlZCBzdWNjZXNzZnVsbHksIGZhbHNlIG90aGVyd2lzZQogICAqLwogIGZ1bmN0aW9uIHRyYW5zZmVyIChhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgcmV0dXJuIGRvVHJhbnNmZXIgKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICB9CgogIC8qKgogICAqIFRyYW5zZmVyIGdpdmVuIG51bWJlciBvZiB0b2tlbnMgZnJvbSBnaXZlbiBvd25lciB0byBnaXZlbiByZWNpcGllbnQuCiAgICoKICAgKiBAcGFyYW0gX2Zyb20gYWRkcmVzcyB0byB0cmFuc2ZlciB0b2tlbnMgZnJvbSB0aGUgb3duZXIgb2YKICAgKiBAcGFyYW0gX3RvIGFkZHJlc3MgdG8gdHJhbnNmZXIgdG9rZW5zIHRvIHRoZSBvd25lciBvZgogICAqIEBwYXJhbSBfdmFsdWUgbnVtYmVyIG9mIHRva2VucyB0byB0cmFuc2ZlciBmcm9tIGdpdmVuIG93bmVyIHRvIGdpdmVuCiAgICAgICAgICAgIHJlY2lwaWVudAogICAqIEByZXR1cm4gdHJ1ZSBpZiB0b2tlbnMgd2VyZSB0cmFuc2ZlcnJlZCBzdWNjZXNzZnVsbHksIGZhbHNlIG90aGVyd2lzZQogICAqLwogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbSAoYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKQogIHJldHVybnMgKGJvb2wgc3VjY2VzcykKICB7CiAgICBpZiAoX3ZhbHVlID4gYXBwcm92ZWQgW19mcm9tXVttc2cuc2VuZGVyXSkgcmV0dXJuIGZhbHNlOwogICAgaWYgKGRvVHJhbnNmZXIgKF9mcm9tLCBfdG8sIF92YWx1ZSkpIHsKICAgICAgYXBwcm92ZWQgW19mcm9tXVttc2cuc2VuZGVyXSA9CiAgICAgICAgc2FmZVN1YiAoYXBwcm92ZWRbX2Zyb21dW21zZy5zZW5kZXJdLCBfdmFsdWUpOwogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0gZWxzZSByZXR1cm4gZmFsc2U7CiAgfQoKICAvKioKICAgKiBBbGxvdyBnaXZlbiBzcGVuZGVyIHRvIHRyYW5zZmVyIGdpdmVuIG51bWJlciBvZiB0b2tlbnMgZnJvbSBtZXNzYWdlIHNlbmRlci4KICAgKgogICAqIEBwYXJhbSBfc3BlbmRlciBhZGRyZXNzIHRvIGFsbG93IHRoZSBvd25lciBvZiB0byB0cmFuc2ZlciB0b2tlbnMgZnJvbQogICAgICAgICAgICBtZXNzYWdlIHNlbmRlcgogICAqIEBwYXJhbSBfdmFsdWUgbnVtYmVyIG9mIHRva2VucyB0byBhbGxvdyB0byB0cmFuc2ZlcgogICAqIEByZXR1cm4gdHJ1ZSBpZiB0b2tlbiB0cmFuc2ZlciB3YXMgc3VjY2Vzc2Z1bGx5IGFwcHJvdmVkLCBmYWxzZSBvdGhlcndpc2UKICAgKi8KICBmdW5jdGlvbiBhcHByb3ZlIChhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICBhcHByb3ZlZCBbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgQXBwcm92YWwgKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgcmV0dXJuIHRydWU7CiAgfQoKICAvKioKICAgKiBUZWxsIGhvdyBtYW55IHRva2VucyBnaXZlbiBzcGVuZGVyIGlzIGN1cnJlbnRseSBhbGxvd2VkIHRvIHRyYW5zZmVyIGZyb20KICAgKiBnaXZlbiBvd25lci4KICAgKgogICAqIEBwYXJhbSBfb3duZXIgYWRkcmVzcyB0byBnZXQgbnVtYmVyIG9mIHRva2VucyBhbGxvd2VkIHRvIGJlIHRyYW5zZmVycmVkCiAgICogICAgICAgIGZyb20gdGhlIG93bmVyIG9mCiAgICogQHBhcmFtIF9zcGVuZGVyIGFkZHJlc3MgdG8gZ2V0IG51bWJlciBvZiB0b2tlbnMgYWxsb3dlZCB0byBiZSB0cmFuc2ZlcnJlZAogICAqICAgICAgICBieSB0aGUgb3duZXIgb2YKICAgKiBAcmV0dXJuIG51bWJlciBvZiB0b2tlbnMgZ2l2ZW4gc3BlbmRlciBpcyBjdXJyZW50bHkgYWxsb3dlZCB0byB0cmFuc2ZlcgogICAqICAgICAgICAgZnJvbSBnaXZlbiBvd25lcgogICAqLwogIGZ1bmN0aW9uIGFsbG93YW5jZSAoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpCiAgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpIHsKICAgIHJldHVybiBhcHByb3ZlZCBbX293bmVyXVtfc3BlbmRlcl07CiAgfQoKICAvKioKICAgKiBDcmVhdGUgZ2l2ZW4gbnVtYmVyIG9mIG5ldyB0b2tlbnMgYW5kIGdpdmUgdGhlbSB0byBnaXZlbiBvd25lci4KICAgKgogICAqIEBwYXJhbSBfb3duZXIgYWRkcmVzcyB0byBnaXZlbiBuZXcgY3JlYXRlZCB0b2tlbnMgdG8gdGhlIG93bmVyIG9mCiAgICogQHBhcmFtIF92YWx1ZSBudW1iZXIgb2YgbmV3IHRva2VucyB0byBjcmVhdGUKICAgKi8KICBmdW5jdGlvbiBjcmVhdGVUb2tlbnMgKGFkZHJlc3MgX293bmVyLCB1aW50MjU2IF92YWx1ZSkgaW50ZXJuYWwgewogICAgaWYgKF92YWx1ZSA+IDApIHsKICAgICAgYWNjb3VudHMgW19vd25lcl0gPSBzYWZlQWRkIChhY2NvdW50cyBbX293bmVyXSwgX3ZhbHVlKTsKICAgICAgdG9rZW5zQ291bnQgPSBzYWZlQWRkICh0b2tlbnNDb3VudCwgX3ZhbHVlKTsKICAgIH0KICB9CgogIC8qKgogICAqIFBlcmZvcm0gdG9rZW4gdHJhbnNmZXIuCiAgICoKICAgKiBAcGFyYW0gX2Zyb20gYWRkcmVzcyB0byB0cmFuc2ZlciB0b2tlbnMgZnJvbSB0aGUgb3duZXIgb2YKICAgKiBAcGFyYW0gX3RvIGFkZHJlc3MgdG8gdHJhbnNmZXIgdG9rZW5zIHRvIHRvIHRoZSBvd25lciBvZgogICAqIEBwYXJhbSBfdmFsdWUgbnVtYmVyIG9mIHRva2VucyB0byB0cmFuc2ZlcgogICAqIEByZXR1cm4gdHJ1ZSBpZiB0b2tlbnMgd2VyZSB0cmFuc2ZlcnJlZCBzdWNjZXNzZnVsbHksIGZhbHNlIG90aGVyd2lzZQogICAqLwogIGZ1bmN0aW9uIGRvVHJhbnNmZXIgKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkKICBwcml2YXRlIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgaWYgKF92YWx1ZSA+IGFjY291bnRzIFtfZnJvbV0pIHJldHVybiBmYWxzZTsKICAgIGlmIChfdmFsdWUgPiAwICYmIF9mcm9tICE9IF90bykgewogICAgICBhY2NvdW50cyBbX2Zyb21dID0gc2FmZVN1YiAoYWNjb3VudHMgW19mcm9tXSwgX3ZhbHVlKTsKICAgICAgYWNjb3VudHMgW190b10gPSBzYWZlQWRkIChhY2NvdW50cyBbX3RvXSwgX3ZhbHVlKTsKICAgICAgVHJhbnNmZXIgKF9mcm9tLCBfdG8sIF92YWx1ZSk7CiAgICB9CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIC8qKgogICAqIFRvdGFsIG51bWJlciBvZiB0b2tlbnMgaW4gY2lyY3VsYXRpb24uCiAgICovCiAgdWludDI1NiB0b2tlbnNDb3VudDsKCiAgLyoqCiAgICogTWFwcyBhZGRyZXNzZXMgb2YgdG9rZW4gb3duZXJzIHRvIHN0YXRlcyBvZiB0aGVpciBhY2NvdW50cy4KICAgKi8KICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIGFjY291bnRzOwoKICAvKioKICAgKiBNYXBzIGFkZHJlc3NlcyBvZiB0b2tlbiBvd25lcnMgdG8gbWFwcGluZ3MgZnJvbSBhZGRyZXNzZXMgb2Ygc3BlbmRlcnMgdG8KICAgKiBob3cgbWFueSB0b2tlbnMgYmVsb25naW5nIHRvIHRoZSBvd25lciwgdGhlIHNwZW5kZXIgaXMgY3VycmVudGx5IGFsbG93ZWQgdG8KICAgKiB0cmFuc2Zlci4KICAgKi8KICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikpIGFwcHJvdmVkOwp9CgovKioKICogU3RhbmRhcmQgVG9rZW4gc21hcnQgY29udHJhY3QgdGhhdCBwcm92aWRlcyB0aGUgZm9sbG93aW5nIGZlYXR1cmVzOgogKiA8b2w+CiAqICAgPGxpPkNlbnRyYWxpemVkIGNyZWF0aW9uIG9mIG5ldyB0b2tlbnM8L2xpPiAKICogICA8bGk+RnJlZXplL3VuZnJlZXplIHRva2VuIHRyYW5zZmVyczwvbGk+CiAqICAgPGxpPkNoYW5nZSBvd25lcjwvbGk+CiAqIDwvb2w+CiAqLwpjb250cmFjdCBTdGFuZGFyZFRva2VuIGlzIEFic3RyYWN0VG9rZW4gewogIC8qKgogICAqIE1heGltdW0gYWxsb3dlZCB0b2tlbnMgaW4gY2lyY3VsYXRpb24gKDJeNjQgLSAxKS4KICAgKi8KICB1aW50MjU2IGNvbnN0YW50IHByaXZhdGUgTUFYX1RPS0VOUyA9IDB4RkZGRkZGRkZGRkZGRkZGRjsKCiAgLyoqCiAgICogQWRkcmVzcyBvZiB0aGUgb3duZXIgb2YgdGhlIGNvbnRyYWN0LgogICAqLwogIGFkZHJlc3Mgb3duZXI7CgogIC8qKgogICAqIFdoZXRoZXIgdHJhbnNmZXJzIGFyZSBjdXJyZW50bHkgZnJvemVuLgogICAqLwogIGJvb2wgZnJvemVuOwoKICAvKioKICAgKiBJbnN0YW50aWF0ZSB0aGUgY29udHJhY3QgYW5kIG1ha2UgdGhlIG1lc3NhZ2Ugc2VuZGVyIHRvIGJlIHRoZSBvd25lci4KICAgKi8KICBmdW5jdGlvbiBTdGFuZGFyZFRva2VuICgpIHsKICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICB9CgogIC8qKgogICAqIFRyYW5zZmVyIGdpdmVuIG51bWJlciBvZiB0b2tlbnMgZnJvbSBtZXNzYWdlIHNlbmRlciB0byBnaXZlbiByZWNpcGllbnQuCiAgICoKICAgKiBAcGFyYW0gX3RvIGFkZHJlc3MgdG8gdHJhbnNmZXIgdG9rZW5zIGZyb20gdGhlIG93bmVyIG9mCiAgICogQHBhcmFtIF92YWx1ZSBudW1iZXIgb2YgdG9rZW5zIHRvIHRyYW5zZmVyIHRvIHRoZSBvd25lciBvZiBnaXZlbiBhZGRyZXNzCiAgICogQHJldHVybiB0cnVlIGlmIHRva2VucyB3ZXJlIHRyYW5zZmVycmVkIHN1Y2Nlc3NmdWxseSwgZmFsc2Ugb3RoZXJ3aXNlCiAgICovCiAgZnVuY3Rpb24gdHJhbnNmZXIgKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkKICByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgIGlmIChmcm96ZW4pIHJldHVybiBmYWxzZTsKICAgIGVsc2UgcmV0dXJuIEFic3RyYWN0VG9rZW4udHJhbnNmZXIgKF90bywgX3ZhbHVlKTsKICB9CgogIC8qKgogICAqIFRyYW5zZmVyIGdpdmVuIG51bWJlciBvZiB0b2tlbnMgZnJvbSBnaXZlbiBvd25lciB0byBnaXZlbiByZWNpcGllbnQuCiAgICoKICAgKiBAcGFyYW0gX2Zyb20gYWRkcmVzcyB0byB0cmFuc2ZlciB0b2tlbnMgZnJvbSB0aGUgb3duZXIgb2YKICAgKiBAcGFyYW0gX3RvIGFkZHJlc3MgdG8gdHJhbnNmZXIgdG9rZW5zIHRvIHRoZSBvd25lciBvZgogICAqIEBwYXJhbSBfdmFsdWUgbnVtYmVyIG9mIHRva2VucyB0byB0cmFuc2ZlciBmcm9tIGdpdmVuIG93bmVyIHRvIGdpdmVuCiAgICAgICAgICAgIHJlY2lwaWVudAogICAqIEByZXR1cm4gdHJ1ZSBpZiB0b2tlbnMgd2VyZSB0cmFuc2ZlcnJlZCBzdWNjZXNzZnVsbHksIGZhbHNlIG90aGVyd2lzZQogICAqLwogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbSAoYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKQogIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgaWYgKGZyb3plbikgcmV0dXJuIGZhbHNlOwogICAgZWxzZSByZXR1cm4gQWJzdHJhY3RUb2tlbi50cmFuc2ZlckZyb20gKF9mcm9tLCBfdG8sIF92YWx1ZSk7CiAgfQoKICAvKioKICAgKiBDcmVhdGUgY2VydGFpbiBudW1iZXIgb2YgbmV3IHRva2VucyBhbmQgZ2l2ZSB0aGVtIHRvIHRoZSBvd25lciBvZiB0aGUKICAgKiBjb250cmFjdC4KICAgKiAKICAgKiBAcGFyYW0gX3ZhbHVlIG51bWJlciBvZiBuZXcgdG9rZW5zIHRvIGNyZWF0ZQogICAqIEByZXR1cm4gdHJ1ZSBpZiB0b2tlbnMgd2VyZSBjcmVhdGVkIHN1Y2Nlc3NmdWxseSwgZmFsc2Ugb3RoZXJ3aXNlCiAgICovCiAgZnVuY3Rpb24gY3JlYXRlVG9rZW5zICh1aW50MjU2IF92YWx1ZSkKICByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgIGlmIChtc2cuc2VuZGVyICE9IG93bmVyKSB0aHJvdzsKCiAgICBpZiAoX3ZhbHVlID4gTUFYX1RPS0VOUyAtIHRvdGFsU3VwcGx5ICgpKSByZXR1cm4gZmFsc2U7CgogICAgQWJzdHJhY3RUb2tlbi5jcmVhdGVUb2tlbnMgKG93bmVyLCBfdmFsdWUpOwoKICAgIHJldHVybiB0cnVlOwogIH0KCiAgLyoqCiAgICogRnJlZXplIHRva2VuIHRyYW5zZmVycy4KICAgKi8KICBmdW5jdGlvbiBmcmVlemVUcmFuc2ZlcnMgKCkgewogICAgaWYgKG1zZy5zZW5kZXIgIT0gb3duZXIpIHRocm93OwoKICAgIGlmICghZnJvemVuKQogICAgewogICAgICBmcm96ZW4gPSB0cnVlOwogICAgICBGcmVlemUgKCk7CiAgICB9CiAgfQoKICAvKioKICAgKiBVbmZyZWV6ZSB0b2tlbiB0cmFuc2ZlcnMuCiAgICovCiAgZnVuY3Rpb24gdW5mcmVlemVUcmFuc2ZlcnMgKCkgewogICAgaWYgKG1zZy5zZW5kZXIgIT0gb3duZXIpIHRocm93OwoKICAgIGlmIChmcm96ZW4pIHsKICAgICAgZnJvemVuID0gZmFsc2U7CiAgICAgIFVuZnJlZXplICgpOwogICAgfQogIH0KCiAgLyoqCiAgICogU2V0IG5ldyBvd25lciBhZGRyZXNzLgogICAqCiAgICogQHBhcmFtIF9uZXdPd25lciBuZXcgb3duZXIgYWRkcmVzcwogICAqLwogIGZ1bmN0aW9uIHNldE93bmVyIChhZGRyZXNzIF9uZXdPd25lcikgewogICAgaWYgKG1zZy5zZW5kZXIgIT0gb3duZXIpIHRocm93OwoKICAgIG93bmVyID0gX25ld093bmVyOwogIH0KCiAgLyoqCiAgICogTG9nZ2VkIHdoZW4gdG9rZW4gdHJhbnNmZXJzIHdlcmUgZnJlZXplZC4KICAgKi8KICBldmVudCBGcmVlemUgKCk7CgogIC8qKgogICAqIExvZ2dlZCB3aGVuIHRva2VuIHRyYW5zZmVycyB3ZXJlIHVuZnJlZXplZC4KICAgKi8KICBldmVudCBVbmZyZWV6ZSAoKTsKfQoKLyoqCiAqIEdpZ2EgV2F0dCBUb2tlbiBTbWFydCBDb250cmFjdC4KICovCmNvbnRyYWN0IEdpZ2FXYXR0VG9rZW4gaXMgU3RhbmRhcmRUb2tlbiB7CiAgLyoqCiAgICogQ29uc3RydWN0b3IganVzdCBjYWxscyBjb25zdHJ1Y3RvciBvZiBwYXJlbnQgY29udHJhY3QuCiAgICovCiAgZnVuY3Rpb24gR2lnYVdhdHRUb2tlbiAoKSBTdGFuZGFyZFRva2VuICgpIHsKICAgIC8vIERvIG5vdGhpbmcKICB9Cn0='.
	

]
