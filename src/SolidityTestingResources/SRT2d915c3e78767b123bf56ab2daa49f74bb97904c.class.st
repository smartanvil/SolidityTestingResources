Class {
	#name : #SRT2d915c3e78767b123bf56ab2daa49f74bb97904c,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT2d915c3e78767b123bf56ab2daa49f74bb97904c >> base64 [
	^ ''.
	

]
