Class {
	#name : #SRTBA5F11b16B155792Cf3B2E6880E8706859A8AEB6,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTBA5F11b16B155792Cf3B2E6880E8706859A8AEB6 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuODsKCi8qKgogKiBNYXRoIG9wZXJhdGlvbnMgd2l0aCBzYWZldHkgY2hlY2tzCiAqLwpjb250cmFjdCBTYWZlTWF0aCB7CiAgZnVuY3Rpb24gc2FmZU11bCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSAqIGI7CiAgICBhc3NlcnQoYSA9PSAwIHx8IGMgLyBhID09IGIpOwogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBzYWZlRGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA+IDApOwogICAgdWludDI1NiBjID0gYSAvIGI7CiAgICBhc3NlcnQoYSA9PSBiICogYyArIGEgJSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gc2FmZVN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcmV0dXJucyAodWludDI1NikgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICBmdW5jdGlvbiBzYWZlQWRkKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhICsgYjsKICAgIGFzc2VydChjPj1hICYmIGM+PWIpOwogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBhc3NlcnQoYm9vbCBhc3NlcnRpb24pIGludGVybmFsIHsKICAgIGlmICghYXNzZXJ0aW9uKSB7CiAgICAgIHJldmVydCgpOwogICAgfQogIH0KfQoKY29udHJhY3QgQWVyb24gaXMgU2FmZU1hdGggewogICAgc3RyaW5nIHB1YmxpYyBuYW1lOwogICAgc3RyaW5nIHB1YmxpYyBzeW1ib2w7CiAgICB1aW50OCBwdWJsaWMgZGVjaW1hbHM7CiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsKICAgIGFkZHJlc3MgcHVibGljIG93bmVyOwoKICAgIC8qIFRoaXMgY3JlYXRlcyBhbiBhcnJheSB3aXRoIGFsbCBiYWxhbmNlcyAqLwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBwdWJsaWMgYmFsYW5jZU9mOwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBwdWJsaWMgZnJlZXplT2Y7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikpIHB1YmxpYyBhbGxvd2FuY2U7CgogICAgLyogVGhpcyBnZW5lcmF0ZXMgYSBwdWJsaWMgZXZlbnQgb24gdGhlIGJsb2NrY2hhaW4gdGhhdCB3aWxsIG5vdGlmeSBjbGllbnRzICovCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHZhbHVlKTsKCiAgICAvKiBUaGlzIG5vdGlmaWVzIGNsaWVudHMgYWJvdXQgdGhlIGFtb3VudCBidXJudCAqLwogICAgZXZlbnQgQnVybihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgdWludDI1NiB2YWx1ZSk7CgogICAgLyogVGhpcyBub3RpZmllcyBjbGllbnRzIGFib3V0IHRoZSBhbW91bnQgZnJvemVuICovCiAgICBldmVudCBGcmVlemUoYWRkcmVzcyBpbmRleGVkIGZyb20sIHVpbnQyNTYgdmFsdWUpOwoKICAgIC8qIFRoaXMgbm90aWZpZXMgY2xpZW50cyBhYm91dCB0aGUgYW1vdW50IHVuZnJvemVuICovCiAgICBldmVudCBVbmZyZWV6ZShhZGRyZXNzIGluZGV4ZWQgZnJvbSwgdWludDI1NiB2YWx1ZSk7CgogICAgLyogSW5pdGlhbGl6ZXMgY29udHJhY3Qgd2l0aCBpbml0aWFsIHN1cHBseSB0b2tlbnMgdG8gdGhlIGNyZWF0b3Igb2YgdGhlIGNvbnRyYWN0ICovCiAgICBmdW5jdGlvbiBBZXJvbigpIHsKICAgICAgICBiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPSAxMDAwMDAwMDAwMDAwMDAwMDsgICAgICAgLy8gR2l2ZSB0aGUgY3JlYXRvciBhbGwgaW5pdGlhbCB0b2tlbnMKICAgICAgICB0b3RhbFN1cHBseSA9IDEwMDAwMDAwMDAwMDAwMDAwOyAgICAgICAgICAgICAgICAgLy8gVXBkYXRlIHRvdGFsIHN1cHBseQogICAgICAgIG5hbWUgPSAnQWVyb24nOyAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gU2V0IHRoZSBuYW1lIGZvciBkaXNwbGF5IHB1cnBvc2VzCiAgICAgICAgc3ltYm9sID0gJ0FSTic7ICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBTZXQgdGhlIHN5bWJvbCBmb3IgZGlzcGxheSBwdXJwb3NlcwogICAgICAgIGRlY2ltYWxzID0gODsgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gQW1vdW50IG9mIGRlY2ltYWxzIGZvciBkaXNwbGF5IHB1cnBvc2VzCglvd25lciA9IG1zZy5zZW5kZXI7CiAgICB9CgogICAgLyogU2VuZCB0b2tlbnMgKi8KICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgewogICAgICAgIGlmIChfdG8gPT0gMHgwKSByZXZlcnQoKTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gUHJldmVudCB0cmFuc2ZlciB0byAweDAgYWRkcmVzcy4gVXNlIGJ1cm4oKSBpbnN0ZWFkCglpZiAoX3ZhbHVlIDw9IDApIHJldmVydCgpOwogICAgICAgIGlmIChiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPCBfdmFsdWUpIHJldmVydCgpOyAgICAgICAgICAgLy8gQ2hlY2sgaWYgdGhlIHNlbmRlciBoYXMgZW5vdWdoCiAgICAgICAgaWYgKGJhbGFuY2VPZltfdG9dICsgX3ZhbHVlIDwgYmFsYW5jZU9mW190b10pIHJldmVydCgpOyAvLyBDaGVjayBmb3Igb3ZlcmZsb3dzCiAgICAgICAgYmFsYW5jZU9mW21zZy5zZW5kZXJdID0gU2FmZU1hdGguc2FmZVN1YihiYWxhbmNlT2ZbbXNnLnNlbmRlcl0sIF92YWx1ZSk7ICAgICAgICAgICAgICAvLyBTdWJ0cmFjdCBmcm9tIHRoZSBzZW5kZXIKICAgICAgICBiYWxhbmNlT2ZbX3RvXSA9IFNhZmVNYXRoLnNhZmVBZGQoYmFsYW5jZU9mW190b10sIF92YWx1ZSk7ICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEFkZCB0aGUgc2FtZSB0byB0aGUgcmVjaXBpZW50CiAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOyAgICAgICAgICAgICAgICAgICAgICAvLyBOb3RpZnkgYW55b25lIGxpc3RlbmluZyB0aGF0IHRoaXMgdHJhbnNmZXIgdG9vayBwbGFjZQogICAgfQoKICAgIC8qIEFsbG93IGFub3RoZXIgY29udHJhY3QgdG8gc3BlbmQgc29tZSB0b2tlbnMgaW4geW91ciBiZWhhbGYgKi8KICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewoJaWYgKF92YWx1ZSA8PSAwKSByZXZlcnQoKTsKICAgICAgICBhbGxvd2FuY2VbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIC8qIFRyYW5zZmVyIHRva2VucyAqLwogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgaWYgKF90byA9PSAweDApIHJldmVydCgpOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gUHJldmVudCB0cmFuc2ZlciB0byAweDAgYWRkcmVzcy4gVXNlIGJ1cm4oKSBpbnN0ZWFkCgkgaWYgKF92YWx1ZSA8PSAwKSByZXZlcnQoKTsKICAgICAgICBpZiAoYmFsYW5jZU9mW19mcm9tXSA8IF92YWx1ZSkgcmV2ZXJ0KCk7ICAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiB0aGUgc2VuZGVyIGhhcyBlbm91Z2gKICAgICAgICBpZiAoYmFsYW5jZU9mW190b10gKyBfdmFsdWUgPCBiYWxhbmNlT2ZbX3RvXSkgcmV2ZXJ0KCk7ICAvLyBDaGVjayBmb3Igb3ZlcmZsb3dzCiAgICAgICAgaWYgKF92YWx1ZSA+IGFsbG93YW5jZVtfZnJvbV1bbXNnLnNlbmRlcl0pIHJldmVydCgpOyAgICAgLy8gQ2hlY2sgYWxsb3dhbmNlCiAgICAgICAgYmFsYW5jZU9mW19mcm9tXSA9IFNhZmVNYXRoLnNhZmVTdWIoYmFsYW5jZU9mW19mcm9tXSwgX3ZhbHVlKTsgICAgICAgICAgICAgICAgICAgICAgICAgLy8gU3VidHJhY3QgZnJvbSB0aGUgc2VuZGVyCiAgICAgICAgYmFsYW5jZU9mW190b10gPSBTYWZlTWF0aC5zYWZlQWRkKGJhbGFuY2VPZltfdG9dLCBfdmFsdWUpOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gQWRkIHRoZSBzYW1lIHRvIHRoZSByZWNpcGllbnQKICAgICAgICBhbGxvd2FuY2VbX2Zyb21dW21zZy5zZW5kZXJdID0gU2FmZU1hdGguc2FmZVN1YihhbGxvd2FuY2VbX2Zyb21dW21zZy5zZW5kZXJdLCBfdmFsdWUpOwogICAgICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgLyogRGVzdHJ1Y3Rpb24gb2YgdGhlIHRva2VuICovCiAgICBmdW5jdGlvbiBidXJuKHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBpZiAoYmFsYW5jZU9mW21zZy5zZW5kZXJdIDwgX3ZhbHVlKSByZXZlcnQoKTsgICAgICAgICAgICAvLyBDaGVjayBpZiB0aGUgc2VuZGVyIGhhcyBlbm91Z2gKCWlmIChfdmFsdWUgPD0gMCkgcmV2ZXJ0KCk7CiAgICAgICAgYmFsYW5jZU9mW21zZy5zZW5kZXJdID0gU2FmZU1hdGguc2FmZVN1YihiYWxhbmNlT2ZbbXNnLnNlbmRlcl0sIF92YWx1ZSk7ICAgICAgICAgICAvLyBTdWJ0cmFjdCBmcm9tIHRoZSBzZW5kZXIKICAgICAgICB0b3RhbFN1cHBseSA9IFNhZmVNYXRoLnNhZmVTdWIodG90YWxTdXBwbHksX3ZhbHVlKTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFVwZGF0ZXMgdG90YWxTdXBwbHkKICAgICAgICBCdXJuKG1zZy5zZW5kZXIsIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gZnJlZXplKHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBpZiAoYmFsYW5jZU9mW21zZy5zZW5kZXJdIDwgX3ZhbHVlKSByZXZlcnQoKTsgICAgICAgICAgICAvLyBDaGVjayBpZiB0aGUgc2VuZGVyIGhhcyBlbm91Z2gKCWlmIChfdmFsdWUgPD0gMCkgcmV2ZXJ0KCk7CiAgICAgICAgYmFsYW5jZU9mW21zZy5zZW5kZXJdID0gU2FmZU1hdGguc2FmZVN1YihiYWxhbmNlT2ZbbXNnLnNlbmRlcl0sIF92YWx1ZSk7ICAgICAgICAgICAgIC8vIFN1YnRyYWN0IGZyb20gdGhlIHNlbmRlcgogICAgICAgIGZyZWV6ZU9mW21zZy5zZW5kZXJdID0gU2FmZU1hdGguc2FmZUFkZChmcmVlemVPZlttc2cuc2VuZGVyXSwgX3ZhbHVlKTsgICAgICAgICAgICAgICAvLyBVcGRhdGVzIGZyb3plbiB0b2tlbnMKICAgICAgICBGcmVlemUobXNnLnNlbmRlciwgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiB1bmZyZWV6ZSh1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgaWYgKGZyZWV6ZU9mW21zZy5zZW5kZXJdIDwgX3ZhbHVlKSByZXZlcnQoKTsgICAgICAgICAgICAvLyBDaGVjayBpZiB0aGUgc2VuZGVyIGhhcyBlbm91Z2gKCWlmIChfdmFsdWUgPD0gMCkgcmV2ZXJ0KCk7CiAgICAgICAgZnJlZXplT2ZbbXNnLnNlbmRlcl0gPSBTYWZlTWF0aC5zYWZlU3ViKGZyZWV6ZU9mW21zZy5zZW5kZXJdLCBfdmFsdWUpOyAgICAgICAgICAgICAgLy8gVXBkYXRlcyBmcm96ZW4gdG9rZW5zCgliYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPSBTYWZlTWF0aC5zYWZlQWRkKGJhbGFuY2VPZlttc2cuc2VuZGVyXSwgX3ZhbHVlKTsgICAgICAgICAgICAvLyBBZGQgdG8gdGhlIHNlbmRlcgogICAgICAgIFVuZnJlZXplKG1zZy5zZW5kZXIsIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogIC8qIFByZXZlbnRzIGFjY2lkZW50YWwgc2VuZGluZyBvZiBFdGhlciAqLwogIGZ1bmN0aW9uICgpIHsKICAgICAgcmV2ZXJ0KCk7CiAgfQp9'.
	

]
