Class {
	#name : #SRTe778b6bff2da49cdbd7d0eaa6bb22afef7738d76,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTe778b6bff2da49cdbd7d0eaa6bb22afef7738d76 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuODsKCi8qCkF2YXRhck5ldHdvcmsgQ29weXJpZ2h0CgpodHRwczovL2F2YXRhcm5ldHdvcmsuaW8KKi8KCmNvbnRyYWN0IE93bmVkIHsKCiAgICBhZGRyZXNzIG93bmVyOwoKICAgIGZ1bmN0aW9uIE93bmVkKCkgewogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgIH0KCiAgICBmdW5jdGlvbiBjaGFuZ2VPd25lcihhZGRyZXNzIG5ld093bmVyKSBvbmx5T3duZXIgewogICAgICAgIG93bmVyID0gbmV3T3duZXI7CiAgICB9CgogICAgbW9kaWZpZXIgb25seU93bmVyKCkgewogICAgICAgIGlmIChtc2cuc2VuZGVyPT1vd25lcikgXzsKICAgIH0KfQoKY29udHJhY3QgVG9rZW4gaXMgT3duZWQgewoKICAgIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5OwogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpOwogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKTsKCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsKICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpOwp9Cgpjb250cmFjdCBFUkMyMFRva2VuIGlzIFRva2VuIHsKCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewoKICAgICAgICBpZiAoYmFsYW5jZXNbbXNnLnNlbmRlcl0gPj0gX3ZhbHVlICYmIGJhbGFuY2VzW190b10gKyBfdmFsdWUgPiBiYWxhbmNlc1tfdG9dKSB7CiAgICAgICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdIC09IF92YWx1ZTsKICAgICAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfdmFsdWU7CiAgICAgICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKCiAgICAgICAgaWYgKGJhbGFuY2VzW19mcm9tXSA+PSBfdmFsdWUgJiYgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gPj0gX3ZhbHVlICYmIGJhbGFuY2VzW190b10gKyBfdmFsdWUgPiBiYWxhbmNlc1tfdG9dKSB7CiAgICAgICAgICAgIGJhbGFuY2VzW190b10gKz0gX3ZhbHVlOwogICAgICAgICAgICBiYWxhbmNlc1tfZnJvbV0gLT0gX3ZhbHVlOwogICAgICAgICAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpIHsKICAgICAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsKICAgIH0KCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsKICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKSB7CiAgICAgICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07CiAgICB9CgogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsKfQoKY29udHJhY3QgRmFybWVyY29pbiBpcyBFUkMyMFRva2VuIHsKCiAgICBib29sIHB1YmxpYyBpc1Rva2VuU2FsZSA9IHRydWU7CiAgICB1aW50MjU2IHB1YmxpYyBwcmljZTsKICAgIHVpbnQyNTYgcHVibGljIGxpbWl0OwoKICAgIGFkZHJlc3Mgd2FsbGV0T3V0ID0gMHg4MjgzM0MyNzAzQkVkOTA5QWRGQTI5RjM4M0E0Mzc0QzQ1ODA5YjgxOwoKICAgIGZ1bmN0aW9uIGdldFdhbGxldE91dCgpIGNvbnN0YW50IHJldHVybnMgKGFkZHJlc3MgX3RvKSB7CiAgICAgICAgcmV0dXJuIHdhbGxldE91dDsKICAgIH0KCiAgICBmdW5jdGlvbiAoKSBleHRlcm5hbCBwYXlhYmxlICB7CiAgICAgICAgaWYgKGlzVG9rZW5TYWxlID09IGZhbHNlKSB7CiAgICAgICAgICAgIHRocm93OwogICAgICAgIH0KCiAgICAgICAgdWludDI1NiB0b2tlbkFtb3VudCA9IChtc2cudmFsdWUgICogMTAwMDAwMDAwKSAvIHByaWNlOwoKICAgICAgICBpZiAoYmFsYW5jZXNbb3duZXJdID49IHRva2VuQW1vdW50ICYmIGJhbGFuY2VzW21zZy5zZW5kZXJdICsgdG9rZW5BbW91bnQgPiBiYWxhbmNlc1ttc2cuc2VuZGVyXSkgewogICAgICAgICAgICBpZiAoYmFsYW5jZXNbb3duZXJdIC0gdG9rZW5BbW91bnQgPCBsaW1pdCkgewogICAgICAgICAgICAgICAgdGhyb3c7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgYmFsYW5jZXNbb3duZXJdIC09IHRva2VuQW1vdW50OwogICAgICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSArPSB0b2tlbkFtb3VudDsKICAgICAgICAgICAgVHJhbnNmZXIob3duZXIsIG1zZy5zZW5kZXIsIHRva2VuQW1vdW50KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aHJvdzsKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gc3RvcFNhbGUoKSBvbmx5T3duZXIgewogICAgICAgIGlzVG9rZW5TYWxlID0gZmFsc2U7CiAgICB9CgogICAgZnVuY3Rpb24gc3RhcnRTYWxlKCkgb25seU93bmVyIHsKICAgICAgICBpc1Rva2VuU2FsZSA9IHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gc2V0UHJpY2UodWludDI1NiBuZXdQcmljZSkgb25seU93bmVyIHsKICAgICAgICBwcmljZSA9IG5ld1ByaWNlOwogICAgfQoKICAgIGZ1bmN0aW9uIHNldExpbWl0KHVpbnQyNTYgbmV3TGltaXQpIG9ubHlPd25lciB7CiAgICAgICAgbGltaXQgPSBuZXdMaW1pdDsKICAgIH0KCiAgICBmdW5jdGlvbiBzZXRXYWxsZXQoYWRkcmVzcyBfdG8pIG9ubHlPd25lciB7CiAgICAgICAgd2FsbGV0T3V0ID0gX3RvOwogICAgfQoKICAgIGZ1bmN0aW9uIHNlbmRGdW5kKCkgb25seU93bmVyIHsKICAgICAgICB3YWxsZXRPdXQuc2VuZCh0aGlzLmJhbGFuY2UpOwogICAgfQoKICAgIHN0cmluZyBwdWJsaWMgbmFtZTsKICAgIHVpbnQ4IHB1YmxpYyBkZWNpbWFsczsKICAgIHN0cmluZyBwdWJsaWMgc3ltYm9sOwogICAgc3RyaW5nIHB1YmxpYyB2ZXJzaW9uID0gJzEuMCc7CgogICAgZnVuY3Rpb24gRmFybWVyY29pbigpIHsKICAgICAgICB0b3RhbFN1cHBseSA9IDEwMDAwMDAwMCAqIDEwMDAwMDAwMDsKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IHRvdGFsU3VwcGx5OwogICAgICAgIG5hbWUgPSAnRmFybWVyY29pbic7CiAgICAgICAgZGVjaW1hbHMgPSA4OwogICAgICAgIHN5bWJvbCA9ICdGQyc7CiAgICAgICAgcHJpY2UgPSAxNDI4NTcxNDI4NTcxNDM7CiAgICAgICAgbGltaXQgPSA5OTUwMDAwMDAwMDAwMDAwOwogICAgfQoKICAgIC8qINCU0L7QsdCw0LLQu9GP0LXRgiDQvdCwINGB0YfQtdGCINCy0LvQsNC00LXQu9GM0YbQsCDQutC+0L3RgtGA0LDQutGC0LAg0YLQvtC60LXQvdC+0LIgKi8KICAgIGZ1bmN0aW9uIGFkZCh1aW50MjU2IF92YWx1ZSkgb25seU93bmVyIHJldHVybnMgKGJvb2wgc3VjY2VzcykKICAgIHsKICAgICAgICBpZiAoYmFsYW5jZXNbbXNnLnNlbmRlcl0gKyBfdmFsdWUgPD0gYmFsYW5jZXNbbXNnLnNlbmRlcl0pIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgICB0b3RhbFN1cHBseSArPSBfdmFsdWU7CiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gKz0gX3ZhbHVlOwoKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICAvKiDQo9C90LjRh9GC0L7QttCw0LXRgiDRgtC+0LrQtdC90Ysg0L3QsCDRgdGH0LXRgtC1INCy0LvQsNC00LXQu9GM0YbQsCDQutC+0L3RgtGA0LDQutGC0LAgKi8KICAgIGZ1bmN0aW9uIGJ1cm4odWludDI1NiBfdmFsdWUpIG9ubHlPd25lciAgcmV0dXJucyAoYm9vbCBzdWNjZXNzKQogICAgewogICAgICAgIGlmIChiYWxhbmNlc1ttc2cuc2VuZGVyXSA8IF92YWx1ZSkgewogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICAgIHRvdGFsU3VwcGx5IC09IF92YWx1ZTsKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9Cn0='.
	

]
