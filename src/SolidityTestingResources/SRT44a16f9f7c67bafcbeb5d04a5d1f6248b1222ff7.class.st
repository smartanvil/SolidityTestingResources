Class {
	#name : #SRT44a16f9f7c67bafcbeb5d04a5d1f6248b1222ff7,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT44a16f9f7c67bafcbeb5d04a5d1f6248b1222ff7 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7Ci8qKgoqIEB0aXRsZSBJQ08gQ09OVFJBQ1QKKiBAZGV2IEVSQy0yMCBUb2tlbiBTdGFuZGFyZCBDb21wbGlhbnQKKiBAYXV0aG9yIEZhcmVzIEEuIEFrZWwgQy4gPHNwYW4gY2xhc3M9Il9fY2ZfZW1haWxfXyIgZGF0YS1jZmVtYWlsPSIwMjY0MmM2MzZjNzY2ZDZjNmI2ZDJjNjM2OTY3NmU0MjY1NmY2MzZiNmUyYzYxNmQ2ZiI+W2VtYWlsJiMxNjA7cHJvdGVjdGVkXTwvc3Bhbj4KKi8KCi8qKgogKiBAdGl0bGUgU2FmZU1hdGggYnkgT3BlblplcHBlbGluCiAqIEBkZXYgTWF0aCBvcGVyYXRpb25zIHdpdGggc2FmZXR5IGNoZWNrcyB0aGF0IHRocm93IG9uIGVycm9yCiAqLwpsaWJyYXJ5IFNhZmVNYXRoIHsKCiAgICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgICAgIGFzc2VydChhID09IDAgfHwgYyAvIGEgPT0gYik7CiAgICAgICAgcmV0dXJuIGM7CiAgICB9CgogICAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgICAgICByZXR1cm4gYzsKICAgIH0KCiAgICBmdW5jdGlvbiBhZGQodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHVpbnQyNTYgYyA9IGEgKyBiOwogICAgICAgIGFzc2VydChjID49IGEpOwogICAgICAgIHJldHVybiBjOwogICAgfQp9Cgpjb250cmFjdCBEYXRlVGltZSB7CgogICAgZnVuY3Rpb24gdG9UaW1lc3RhbXAodWludDE2IHllYXIsIHVpbnQ4IG1vbnRoLCB1aW50OCBkYXkpIGNvbnN0YW50IHJldHVybnMgKHVpbnQgdGltZXN0YW1wKTsKCn0KCmNvbnRyYWN0IHRva2VuIHsKCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHZhbHVlKTsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CgogICAgfQoKY29udHJhY3QgSUNPIHsKICAgIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2OwogICAgLy9UaGlzIGljbyBoYXZlIDUgc3RhdGVzCiAgICBlbnVtIFN0YXRlIHsKICAgICAgICBpY28sCiAgICAgICAgU3VjY2Vzc2Z1bAogICAgfQogICAgLy9wdWJsaWMgdmFyaWFibGVzCiAgICBTdGF0ZSBwdWJsaWMgc3RhdGUgPSBTdGF0ZS5pY287IC8vU2V0IGluaXRpYWwgc3RhZ2UKICAgIHVpbnQyNTYgcHVibGljIHN0YXJ0VGltZSA9IG5vdzsgLy9ibG9jay10aW1lIHdoZW4gaXQgd2FzIGRlcGxveWVkCiAgICB1aW50MjU2IHB1YmxpYyByYXRlID0gMTI1MDsKICAgIHVpbnQyNTYgcHVibGljIHRvdGFsUmFpc2VkOyAvL2V0aCBpbiB3ZWkKICAgIHVpbnQyNTYgcHVibGljIHRvdGFsRGlzdHJpYnV0ZWQ7IC8vdG9rZW5zCiAgICB1aW50MjU2IHB1YmxpYyBJQ09kZWFkbGluZTsKICAgIHVpbnQyNTYgcHVibGljIGNvbXBsZXRlZEF0OwogICAgdG9rZW4gcHVibGljIHRva2VuUmV3YXJkOwogICAgYWRkcmVzcyBwdWJsaWMgY3JlYXRvcjsKICAgIHN0cmluZyBwdWJsaWMgdmVyc2lvbiA9ICcxJzsKCiAgICBEYXRlVGltZSBkYXRlVGltZUNvbnRyYWN0ID0gRGF0ZVRpbWUoMHgxYTYxODRDRDRDNUJlYTYyQjAxMTZkZTc5NjJFRTczMTVCN2JjQmNlKTsKCiAgICAvL2V2ZW50cyBmb3IgbG9nCiAgICBldmVudCBMb2dGdW5kaW5nUmVjZWl2ZWQoYWRkcmVzcyBfYWRkciwgdWludCBfYW1vdW50LCB1aW50IF9jdXJyZW50VG90YWwpOwogICAgZXZlbnQgTG9nQmVuZWZpY2lhcnlQYWlkKGFkZHJlc3MgX2JlbmVmaWNpYXJ5QWRkcmVzcyk7CiAgICBldmVudCBMb2dGdW5kaW5nU3VjY2Vzc2Z1bCh1aW50IF90b3RhbFJhaXNlZCk7CiAgICBldmVudCBMb2dGdW5kZXJJbml0aWFsaXplZCgKICAgICAgICBhZGRyZXNzIF9jcmVhdG9yLAogICAgICAgIHVpbnQyNTYgX0lDT2RlYWRsaW5lKTsKICAgIGV2ZW50IExvZ0NvbnRyaWJ1dG9yc1BheW91dChhZGRyZXNzIF9hZGRyLCB1aW50IF9hbW91bnQpOwoKICAgIG1vZGlmaWVyIG5vdEZpbmlzaGVkKCkgewogICAgICAgIHJlcXVpcmUoc3RhdGUgIT0gU3RhdGUuU3VjY2Vzc2Z1bCk7CiAgICAgICAgXzsKICAgIH0KICAgIC8qKgogICAgKiBAbm90aWNlIElDTyBjb25zdHJ1Y3RvcgogICAgKiBAcGFyYW0gX2FkZHJlc3NPZlRva2VuVXNlZEFzUmV3YXJkIGlzIHRoZSB0b2tlbiB0b3RhbERpc3RyaWJ1dGVkCiAgICAqLwogICAgZnVuY3Rpb24gSUNPICh0b2tlbiBfYWRkcmVzc09mVG9rZW5Vc2VkQXNSZXdhcmQgKSBwdWJsaWMgewoKICAgICAgICBjcmVhdG9yID0gbXNnLnNlbmRlcjsKICAgICAgICB0b2tlblJld2FyZCA9IF9hZGRyZXNzT2ZUb2tlblVzZWRBc1Jld2FyZDsKICAgICAgICBJQ09kZWFkbGluZSA9IGRhdGVUaW1lQ29udHJhY3QudG9UaW1lc3RhbXAoMjAxOCw1LDE1KTsKCiAgICAgICAgTG9nRnVuZGVySW5pdGlhbGl6ZWQoCiAgICAgICAgICAgIGNyZWF0b3IsCiAgICAgICAgICAgIElDT2RlYWRsaW5lKTsKICAgIH0KCiAgICAvKioKICAgICogQG5vdGljZSBjb250cmlidXRpb24gaGFuZGxlcgogICAgKi8KICAgIGZ1bmN0aW9uIGNvbnRyaWJ1dGUoKSBwdWJsaWMgbm90RmluaXNoZWQgcGF5YWJsZSB7CgogICAgICAgIHJlcXVpcmUobXNnLnZhbHVlID4gKDEwKioxMCkpOwogICAgICAgIAogICAgICAgIHVpbnQyNTYgdG9rZW5Cb3VnaHQgPSAwOwoKICAgICAgICB0b3RhbFJhaXNlZCA9IHRvdGFsUmFpc2VkLmFkZChtc2cudmFsdWUpOwoKICAgICAgICB0b2tlbkJvdWdodCA9IG1zZy52YWx1ZS5kaXYoMTAgKiogMTApOy8vdG9rZW4gaXMgOCBkZWNpbWFscywgZXRoIDE4CiAgICAgICAgdG9rZW5Cb3VnaHQgPSB0b2tlbkJvdWdodC5tdWwocmF0ZSk7CgogICAgICAgIC8vQm9udXNlcyBkZXBlbmRzIG9uIHN0YWdlCiAgICAgICAgaWYgKG5vdyA8IGRhdGVUaW1lQ29udHJhY3QudG9UaW1lc3RhbXAoMjAxOCwyLDE1KSl7Ly9wcmVzYWxlCgogICAgICAgICAgICB0b2tlbkJvdWdodCA9IHRva2VuQm91Z2h0Lm11bCgxNSk7CiAgICAgICAgICAgIHRva2VuQm91Z2h0ID0gdG9rZW5Cb3VnaHQuZGl2KDEwKTsgLy8xNS8xMCA9IDEuNSA9IDE1MCUKICAgICAgICAgICAgcmVxdWlyZSh0b3RhbERpc3RyaWJ1dGVkLmFkZCh0b2tlbkJvdWdodCkgPD0gMTAwMDAwMDAwICogKDEwICoqIDgpKTsvL3ByZXNhbGUgbGltaXQKICAgICAgICAKICAgICAgICB9IGVsc2UgaWYgKG5vdyA8IGRhdGVUaW1lQ29udHJhY3QudG9UaW1lc3RhbXAoMjAxOCwyLDI4KSl7CgogICAgICAgICAgICB0b2tlbkJvdWdodCA9IHRva2VuQm91Z2h0Lm11bCgxNCk7CiAgICAgICAgICAgIHRva2VuQm91Z2h0ID0gdG9rZW5Cb3VnaHQuZGl2KDEwKTsgLy8xNC8xMCA9IDEuNCA9IDE0MCUKICAgICAgICAKICAgICAgICB9IGVsc2UgaWYgKG5vdyA8IGRhdGVUaW1lQ29udHJhY3QudG9UaW1lc3RhbXAoMjAxOCwzLDE1KSl7CgogICAgICAgICAgICB0b2tlbkJvdWdodCA9IHRva2VuQm91Z2h0Lm11bCgxMyk7CiAgICAgICAgICAgIHRva2VuQm91Z2h0ID0gdG9rZW5Cb3VnaHQuZGl2KDEwKTsgLy8xMy8xMCA9IDEuMyA9IDEzMCUKICAgICAgICAKICAgICAgICB9IGVsc2UgaWYgKG5vdyA8IGRhdGVUaW1lQ29udHJhY3QudG9UaW1lc3RhbXAoMjAxOCwzLDMxKSl7CgogICAgICAgICAgICB0b2tlbkJvdWdodCA9IHRva2VuQm91Z2h0Lm11bCgxMik7CiAgICAgICAgICAgIHRva2VuQm91Z2h0ID0gdG9rZW5Cb3VnaHQuZGl2KDEwKTsgLy8xMi8xMCA9IDEuMiA9IDEyMCUKICAgICAgICAKICAgICAgICB9IGVsc2UgaWYgKG5vdyA8IGRhdGVUaW1lQ29udHJhY3QudG9UaW1lc3RhbXAoMjAxOCw0LDMwKSl7CgogICAgICAgICAgICB0b2tlbkJvdWdodCA9IHRva2VuQm91Z2h0Lm11bCgxMSk7CiAgICAgICAgICAgIHRva2VuQm91Z2h0ID0gdG9rZW5Cb3VnaHQuZGl2KDEwKTsgLy8xMS8xMCA9IDEuMSA9IDExMCUKICAgICAgICAKICAgICAgICB9IGVsc2UgaWYgKG5vdyA8IGRhdGVUaW1lQ29udHJhY3QudG9UaW1lc3RhbXAoMjAxOCw1LDE1KSl7CgogICAgICAgICAgICB0b2tlbkJvdWdodCA9IHRva2VuQm91Z2h0Lm11bCgxMDUpOwogICAgICAgICAgICB0b2tlbkJvdWdodCA9IHRva2VuQm91Z2h0LmRpdigxMDApOyAvLzEwNS8xMCA9IDEuMDUgPSAxMDUlCiAgICAgICAgCiAgICAgICAgfQoKICAgICAgICB0b3RhbERpc3RyaWJ1dGVkID0gdG90YWxEaXN0cmlidXRlZC5hZGQodG9rZW5Cb3VnaHQpOwogICAgICAgIAogICAgICAgIHRva2VuUmV3YXJkLnRyYW5zZmVyKG1zZy5zZW5kZXIsIHRva2VuQm91Z2h0KTsKCiAgICAgICAgTG9nRnVuZGluZ1JlY2VpdmVkKG1zZy5zZW5kZXIsIG1zZy52YWx1ZSwgdG90YWxSYWlzZWQpOwogICAgICAgIExvZ0NvbnRyaWJ1dG9yc1BheW91dChtc2cuc2VuZGVyLCB0b2tlbkJvdWdodCk7CiAgICAgICAgCiAgICAgICAgY2hlY2tJZkZ1bmRpbmdDb21wbGV0ZU9yRXhwaXJlZCgpOwogICAgfQoKICAgIC8qKgogICAgKiBAbm90aWNlIGNoZWNrIHN0YXR1cwogICAgKi8KICAgIGZ1bmN0aW9uIGNoZWNrSWZGdW5kaW5nQ29tcGxldGVPckV4cGlyZWQoKSBwdWJsaWMgewoKICAgICAgICBpZihub3cgPiBJQ09kZWFkbGluZSAmJiBzdGF0ZSE9U3RhdGUuU3VjY2Vzc2Z1bCApIHsgLy9pZiB3ZSByZWFjaCBpY28gZGVhZGxpbmUgYW5kIGl0cyBub3QgU3VjY2Vzc2Z1bCB5ZXQKCiAgICAgICAgICAgIHN0YXRlID0gU3RhdGUuU3VjY2Vzc2Z1bDsgLy9pY28gYmVjb21lcyBTdWNjZXNzZnVsCiAgICAgICAgICAgIGNvbXBsZXRlZEF0ID0gbm93OyAvL0lDTyBpcyBjb21wbGV0ZQoKICAgICAgICAgICAgTG9nRnVuZGluZ1N1Y2Nlc3NmdWwodG90YWxSYWlzZWQpOyAvL3dlIGxvZyB0aGUgZmluaXNoCiAgICAgICAgICAgIGZpbmlzaGVkKCk7IC8vYW5kIGV4ZWN1dGUgY2xvc3VyZQogICAgICAgIH0KICAgIH0KCiAgICAvKioKICAgICogQG5vdGljZSBjbG9zdXJlIGhhbmRsZXIKICAgICovCiAgICBmdW5jdGlvbiBmaW5pc2hlZCgpIHB1YmxpYyB7IC8vV2hlbiBmaW5pc2hlZCBldGggYXJlIHRyYW5zZmVyZWQgdG8gY3JlYXRvcgoKICAgICAgICByZXF1aXJlKHN0YXRlID09IFN0YXRlLlN1Y2Nlc3NmdWwpOwogICAgICAgIHVpbnQyNTYgcmVtYW5lbnQgPSB0b2tlblJld2FyZC5iYWxhbmNlT2YodGhpcyk7CgogICAgICAgIHJlcXVpcmUoY3JlYXRvci5zZW5kKHRoaXMuYmFsYW5jZSkpOwogICAgICAgIHRva2VuUmV3YXJkLnRyYW5zZmVyKGNyZWF0b3IscmVtYW5lbnQpOwoKICAgICAgICBMb2dCZW5lZmljaWFyeVBhaWQoY3JlYXRvcik7CiAgICAgICAgTG9nQ29udHJpYnV0b3JzUGF5b3V0KGNyZWF0b3IsIHJlbWFuZW50KTsKCiAgICB9CgogICAgLyoKICAgICogQGRldiBEaXJlY3QgcGF5bWVudHMgaGFuZGxlCiAgICAqLwoKICAgIGZ1bmN0aW9uICgpIHB1YmxpYyBwYXlhYmxlIHsKICAgICAgICAKICAgICAgICBjb250cmlidXRlKCk7CgogICAgfQp9'.
	

]
