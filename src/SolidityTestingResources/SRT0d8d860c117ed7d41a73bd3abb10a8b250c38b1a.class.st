Class {
	#name : #SRT0d8d860c117ed7d41a73bd3abb10a8b250c38b1a,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT0d8d860c117ed7d41a73bd3abb10a8b250c38b1a >> base64 [
	^ ''.
	

]
