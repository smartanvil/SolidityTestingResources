Class {
	#name : #SRT20bAC7E1f662c74Be4234Ec545619470C65e7D7d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT20bAC7E1f662c74Be4234Ec545619470C65e7D7d >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7Cgpjb250cmFjdCBFUkMyMCB7CgkvL1NldHMgZnVuY3Rpb25zIGFuZCBldmVudHMgdG8gY29tcGx5IHdpdGggRVJDMjAKCWV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludCBfdmFsdWUpOwoJZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50IF92YWx1ZSk7CgkKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludCByZW1haW5pbmcpOwoJZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludCBiYWxhbmNlKTsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludCBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7Cn0KCmNvbnRyYWN0IE93bmVkIHsKCS8vUHVibGljIHZhcmlhYmxlCiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKCgkvL1NldHMgY29udHJhY3QgY3JlYXRvciBhcyB0aGUgb3duZXIKICAgIGZ1bmN0aW9uIE93bmVkKCkgewogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgIH0KCQoJLy9TZXRzIG9ubHlPd25lciBtb2RpZmllciBmb3Igc3BlY2lmaWVkIGZ1bmN0aW9ucwogICAgbW9kaWZpZXIgb25seU93bmVyIHsKICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lcikgdGhyb3c7CiAgICAgICAgXzsKICAgIH0KCgkvL0FsbG93cyBmb3IgdHJhbnNmZXIgb2YgY29udHJhY3Qgb3duZXJzaGlwCiAgICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld093bmVyKSBvbmx5T3duZXIgewogICAgICAgIG93bmVyID0gbmV3T3duZXI7CiAgICB9Cn0KCmNvbnRyYWN0IFRva2VuIGlzIEVSQzIwLCBPd25lZCB7CgkvL1B1YmxpYyB2YXJpYWJsZXMKCXN0cmluZyBwdWJsaWMgbmFtZTsgCglzdHJpbmcgcHVibGljIHN5bWJvbDsgCgl1aW50OCBwdWJsaWMgZGVjaW1hbHM7IAoJdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7IAoJCgkvL0NyZWF0ZXMgYXJyYXlzIGZvciBiYWxhbmNlcwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlOwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBhbGxvd2VkOwoJCglmdW5jdGlvbiBUb2tlbihzdHJpbmcgdG9rZW5OYW1lLCBzdHJpbmcgdG9rZW5TeW1ib2wsIHVpbnQ4IGRlY2ltYWxVbml0cywgdWludDI1NiBpbml0aWFsU3VwcGx5KSB7CgkJbmFtZSA9IHRva2VuTmFtZTsgCgkJc3ltYm9sID0gdG9rZW5TeW1ib2w7IAoJCWRlY2ltYWxzID0gZGVjaW1hbFVuaXRzOyAKCQl0b3RhbFN1cHBseSA9IGluaXRpYWxTdXBwbHk7IAoJfQoJCgkvL1Byb3ZpZGVzIHRoZSByZW1haW5pbmcgYmFsYW5jZSBvZiBhcHByb3ZlZCB0b2tlbnMgZnJvbSBmdW5jdGlvbiBhcHByb3ZlIAogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHJlbWFpbmluZykgewogICAgICByZXR1cm4gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsKICAgIH0KCgkvL0FsbG93cyBmb3IgYSBjZXJ0YWluIGFtb3VudCBvZiB0b2tlbnMgdG8gYmUgc3BlbnQgb24gYmVoYWxmIG9mIHRoZSBhY2NvdW50IG93bmVyCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsKICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCgkvL1JldHVybnMgdGhlIGFjY291bnQgYmFsYW5jZSAKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmdCYWxhbmNlKSB7CiAgICAgICAgcmV0dXJuIGJhbGFuY2VbX293bmVyXTsKICAgIH0KCgkvL1NlbmRzIHRva2VucyBmcm9tIHNlbmRlcidzIGFjY291bnQKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgaWYgKGJhbGFuY2VbbXNnLnNlbmRlcl0gPj0gX3ZhbHVlICYmIGJhbGFuY2VbX3RvXSArIF92YWx1ZSA+IGJhbGFuY2VbX3RvXSkgewogICAgICAgICAgICBiYWxhbmNlW21zZy5zZW5kZXJdIC09IF92YWx1ZTsKICAgICAgICAgICAgYmFsYW5jZVtfdG9dICs9IF92YWx1ZTsKICAgICAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9IGVsc2UgeyAKCQkJcmV0dXJuIGZhbHNlOyAKCQl9CiAgICB9CgkKCS8vVHJhbnNmZXJzIHRva2VucyBhbiBhcHByb3ZlZCBhY2NvdW50IAogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgaWYgKGJhbGFuY2VbX2Zyb21dID49IF92YWx1ZSAmJiBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA+PSBfdmFsdWUgJiYgYmFsYW5jZVtfdG9dICsgX3ZhbHVlID4gYmFsYW5jZVtfdG9dKSB7CiAgICAgICAgICAgIGJhbGFuY2VbX3RvXSArPSBfdmFsdWU7CiAgICAgICAgICAgIGJhbGFuY2VbX2Zyb21dIC09IF92YWx1ZTsKICAgICAgICAgICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOwogICAgICAgICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9IGVsc2UgeyAKCQkJcmV0dXJuIGZhbHNlOyAKCQl9CiAgICB9Cn0KCmNvbnRyYWN0IFByZXRoZXIgaXMgVG9rZW4gewogICAgLy9QdWJsaWMgdmFyaWFibGVzCiAgICBzdHJpbmcgcHVibGljIGNvbnN0YW50IG5hbWUgPSAiUFJFVEhFUiI7CiAgICBzdHJpbmcgcHVibGljIGNvbnN0YW50IHN5bWJvbCA9ICJQVEgiOyAKICAgIHVpbnQ4IHB1YmxpYyBjb25zdGFudCBkZWNpbWFscyA9IDA7IAogICAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgc3VwcGx5ID0gMTAwMDAwMDA7IAogICAgCgkvL0luaXRpYWxpemVzIFByZXRoZXIgYXMgYSBUb2tlbgoJZnVuY3Rpb24gUHJldGhlcigpCgkgICAgVG9rZW4obmFtZSwgc3ltYm9sLCBkZWNpbWFscywgc3VwcGx5KSB7CgkJCWJhbGFuY2VbbXNnLnNlbmRlcl0gPSBzdXBwbHk7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgfQoJCgkvL1ByZXZlbnRzIHNlbmRpbmcgRXRoZXIgdG8gdGhlIGNvbnRyYWN0CglmdW5jdGlvbigpIHsKCQl0aHJvdzsgCgl9CgkKCS8vQWxsb3dzIGNvbnRyYWN0IG93bmVyIHRvIG1pbnQgbmV3IHRva2VucywgcHJldmVudHMgbnVtZXJpY2FsIG92ZXJmbG93CglmdW5jdGlvbiBtaW50VG9rZW4oYWRkcmVzcyB0YXJnZXQsIHVpbnQyNTYgbWludGVkQW1vdW50KSBvbmx5T3duZXIgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CgkJaWYgKCh0b3RhbFN1cHBseSArIG1pbnRlZEFtb3VudCkgPCB0b3RhbFN1cHBseSkgewoJCQl0aHJvdzsgCgkJfSBlbHNlIHsKCQkJYmFsYW5jZVt0YXJnZXRdICs9IG1pbnRlZEFtb3VudDsKCQkJdG90YWxTdXBwbHkgKz0gbWludGVkQW1vdW50OwoJCQlUcmFuc2ZlcigwLCB0YXJnZXQsIG1pbnRlZEFtb3VudCk7CgkJCXJldHVybiB0cnVlOyAKCQl9Cgl9Cn0='.
	

]
