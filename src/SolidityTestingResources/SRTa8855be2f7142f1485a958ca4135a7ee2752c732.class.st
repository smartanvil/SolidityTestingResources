Class {
	#name : #SRTa8855be2f7142f1485a958ca4135a7ee2752c732,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTa8855be2f7142f1485a958ca4135a7ee2752c732 >> base64 [
	^ 'Ly8hIEZ1bmRyYWlzZXIgY29udHJhY3QuIEp1c3QgcmVjb3JkcyB3aG8gc2VudCB3aGF0LgovLyEgQnkgUGFyaXR5IFRlY2hub2xvZ2llcywgMjAxNy4KLy8hIFJlbGVhc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5jZSAyLgovLyEgTW9kaWZpZWQgYnkgdGhlIEludGVyY2hhaW4gRm91bmRhdGlvbi4KCnByYWdtYSBzb2xpZGl0eSBeMC40Ljg7CgovLy8gV2lsbCBhY2NlcHQgRXRoZXIgImNvbnRyaWJ1dGlvbnMiIGFuZCByZWNvcmQgZWFjaCBib3RoIGFzIGEgbG9nIGFuZCBpbiBhCi8vLyBxdWVyeWFibGUgcmVjb3JkLgpjb250cmFjdCBGdW5kcmFpc2VyIHsKCgogICAgLy8gSG93IG11Y2ggaXMgZW5vdWdoPwogICAgdWludCBwdWJsaWMgY29uc3RhbnQgZHVzdCA9IDEgZmlubmV5OyAvLyBYWFg6IGNoYW5nZSBmb3IgcHJvZHVjdGlvbgoKCiAgICAvLyBTcGVjaWFsIGFkZHJlc3NlczogCiAgICAvLyAgYWRtaW5pc3RyYXRvciBjYW4gaGFsdC91bmhhbHQva2lsbC9hZGp1c3RSYXRlOwogICAgLy8gIHRyZWFzdXJ5IHJlY2VpdmVzIGFsbCB0aGUgZnVuZHMKICAgIGFkZHJlc3MgcHVibGljIGFkbWluOwogICAgYWRkcmVzcyBwdWJsaWMgdHJlYXN1cnk7CgogICAgLy8gQmVnaW4gYW5kIGVuZCBibG9jayBmb3IgdGhlIGZ1bmRyYWlzaW5nIHBlcmlvZAogICAgdWludCBwdWJsaWMgYmVnaW5CbG9jazsKICAgIHVpbnQgcHVibGljIGVuZEJsb2NrOwoKICAgIC8vIE51bWJlciBvZiB3ZWkgcGVyIGF0b20KICAgIHVpbnQgcHVibGljIHdlaVBlckF0b207IAoKICAgIC8vIEFyZSBjb250cmlidXRpb25zIGFibm9ybWFsbHkgaGFsdGVkPwogICAgYm9vbCBwdWJsaWMgaXNIYWx0ZWQgPSBmYWxzZTsKCiAgICAvLyBUaGUgYHJlY29yZGAgbWFwcGluZyBtYXBzIGNvc21vcyBhZGRyZXNzZXMgdG8gdGhlIGFtb3VudCBvZiBhdG9tcy4KICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludCkgcHVibGljIHJlY29yZDsKCiAgICAvLyBUaGUgdG90YWwgYW1vdW50IG9mIGV0aGVyIHJhaXNlZAogICAgdWludCBwdWJsaWMgdG90YWxXZWkgPSAwOwogICAgLy8gVGhlIHRvdGFsIGFtb3VudCBvZiBhdG9tcyBzdWdnZXN0ZWQgZm9yIGFsbG9jYXRpb24KICAgIHVpbnQgcHVibGljIHRvdGFsQXRvbSA9IDA7CiAgICAvLyBUaGUgbnVtYmVyIG9mIGRvbmF0aW9uCiAgICB1aW50IHB1YmxpYyBudW1Eb25hdGlvbnMgPSAwOwoKICAgIC8vLyBDb25zdHJ1Y3Rvci4gYF9hZG1pbmAgaGFzIHRoZSBhYmlsaXR5IHRvIHBhdXNlIHRoZQogICAgLy8vIGNvbnRyaWJ1dGlvbiBwZXJpb2QgYW5kLCBldmVudHVhbGx5LCBraWxsIHRoaXMgY29udHJhY3QuIGBfdHJlYXN1cnlgCiAgICAvLy8gcmVjZWl2ZXMgYWxsIGZ1bmRzLiBgX2JlZ2luQmxvY2tgIGFuZCBgX2VuZEJsb2NrYCBkZWZpbmUgdGhlIGJlZ2luIGFuZAogICAgLy8vIGVuZCBvZiB0aGUgcGVyaW9kLiBgX3dlaVBlckF0b21gIGlzIHRoZSByYXRpbyBvZiBhdG9tcyB0byBldGhlci4KICAgIGZ1bmN0aW9uIEZ1bmRyYWlzZXIoYWRkcmVzcyBfYWRtaW4sIGFkZHJlc3MgX3RyZWFzdXJ5LCB1aW50IF9iZWdpbkJsb2NrLCB1aW50IF9lbmRCbG9jaywgdWludCBfd2VpUGVyQXRvbSkgewogICAgICAgIGFkbWluID0gX2FkbWluOwogICAgICAgIHRyZWFzdXJ5ID0gX3RyZWFzdXJ5OwogICAgICAgIGJlZ2luQmxvY2sgPSBfYmVnaW5CbG9jazsKICAgICAgICBlbmRCbG9jayA9IF9lbmRCbG9jazsKCXdlaVBlckF0b20gPSBfd2VpUGVyQXRvbTsKICAgIH0KCiAgICAvLyBDYW4gb25seSBiZSBjYWxsZWQgYnkgX2FkbWluLgogICAgbW9kaWZpZXIgb25seV9hZG1pbiB7IGlmIChtc2cuc2VuZGVyICE9IGFkbWluKSB0aHJvdzsgXzsgfQogICAgLy8gQ2FuIG9ubHkgYmUgY2FsbGVkIGJ5IHByaW9yIHRvIHRoZSBwZXJpb2QuCiAgICBtb2RpZmllciBvbmx5X2JlZm9yZV9wZXJpb2QgeyBpZiAoYmxvY2subnVtYmVyID49IGJlZ2luQmxvY2spIHRocm93OyBfOyB9CiAgICAvLyBDYW4gb25seSBiZSBjYWxsZWQgZHVyaW5nIHRoZSBwZXJpb2Qgd2hlbiBub3QgaGFsdGVkLgogICAgbW9kaWZpZXIgb25seV9kdXJpbmdfcGVyaW9kIHsgaWYgKGJsb2NrLm51bWJlciA8IGJlZ2luQmxvY2sgfHwgYmxvY2subnVtYmVyID49IGVuZEJsb2NrIHx8IGlzSGFsdGVkKSB0aHJvdzsgXzsgfQogICAgLy8gQ2FuIG9ubHkgYmUgY2FsbGVkIGR1cmluZyB0aGUgcGVyaW9kIHdoZW4gaGFsdGVkLgogICAgbW9kaWZpZXIgb25seV9kdXJpbmdfaGFsdGVkX3BlcmlvZCB7IGlmIChibG9jay5udW1iZXIgPCBiZWdpbkJsb2NrIHx8IGJsb2NrLm51bWJlciA+PSBlbmRCbG9jayB8fCAhaXNIYWx0ZWQpIHRocm93OyBfOyB9CiAgICAvLyBDYW4gb25seSBiZSBjYWxsZWQgYWZ0ZXIgdGhlIHBlcmlvZC4KICAgIG1vZGlmaWVyIG9ubHlfYWZ0ZXJfcGVyaW9kIHsgaWYgKGJsb2NrLm51bWJlciA8IGVuZEJsb2NrKSB0aHJvdzsgXzsgfQogICAgLy8gVGhlIHZhbHVlIG9mIHRoZSBtZXNzYWdlIG11c3QgYmUgc3VmZmljaWVudGx5IGxhcmdlIHRvIG5vdCBiZSBjb25zaWRlcmVkIGR1c3QuCiAgICBtb2RpZmllciBpc19ub3RfZHVzdCB7IGlmIChtc2cudmFsdWUgPCBkdXN0KSB0aHJvdzsgXzsgfQoKICAgIC8vLyBTb21lIGNvbnRyaWJ1dGlvbiBgYW1vdW50YCByZWNlaXZlZCBmcm9tIGByZWNpcGllbnRgIGF0IHJhdGUgb2YgYGN1cnJlbnRSYXRlYCB3aXRoIGVtZXJnZW5jeSByZXR1cm4gb2YgYHJldHVybkFkZHJgLgogICAgZXZlbnQgUmVjZWl2ZWQoYWRkcmVzcyBpbmRleGVkIHJlY2lwaWVudCwgYWRkcmVzcyByZXR1cm5BZGRyLCB1aW50IGFtb3VudCwgdWludCBjdXJyZW50UmF0ZSk7CiAgICAvLy8gUGVyaW9kIGhhbHRlZCBhYm5vcm1hbGx5LgogICAgZXZlbnQgSGFsdGVkKCk7CiAgICAvLy8gUGVyaW9kIHJlc3RhcnRlZCBhZnRlciBhYm5vcm1hbCBoYWx0LgogICAgZXZlbnQgVW5oYWx0ZWQoKTsKCiAgICAvLyBJcyB0aGUgZnVuZHJhaXNlciBhY3RpdmU/CiAgICBmdW5jdGlvbiBpc0FjdGl2ZSgpIGNvbnN0YW50IHJldHVybnMgKGJvb2wgYWN0aXZlKSB7CglyZXR1cm4gKGJsb2NrLm51bWJlciA+PSBiZWdpbkJsb2NrICYmIGJsb2NrLm51bWJlciA8IGVuZEJsb2NrICYmICFpc0hhbHRlZCk7CiAgICB9CgogICAgLy8vIFJlY2VpdmUgYSBjb250cmlidXRpb24gZm9yIGEgZG9ub3IgY29zbW9zIGFkZHJlc3MuCiAgICBmdW5jdGlvbiBkb25hdGUoYWRkcmVzcyBfZG9ub3IsIGFkZHJlc3MgX3JldHVybkFkZHJlc3MsIGJ5dGVzNCBjaGVja3N1bSkgcGF5YWJsZSBvbmx5X2R1cmluZ19wZXJpb2QgaXNfbm90X2R1c3QgewoJLy8gY2hlY2tzdW0gaXMgdGhlIGZpcnN0IDQgYnl0ZXMgb2YgdGhlIHNoYTMgb2YgdGhlIHhvciBvZiB0aGUgYnl0ZXMzMiB2ZXJzaW9ucyBvZiB0aGUgY29zbW9zIGFkZHJlc3MgYW5kIHRoZSByZXR1cm4gYWRkcmVzcwoJaWYgKCAhKCBieXRlczQoc2hhMyggYnl0ZXMzMihfZG9ub3IpXmJ5dGVzMzIoX3JldHVybkFkZHJlc3MpICkpID09IGNoZWNrc3VtICkpIHRocm93OwoKCS8vIGZvcndhcmQgdGhlIGZ1bmRzIHRvIHRoZSB0cmVhc3VyZXIKICAgICAgICBpZiAoIXRyZWFzdXJ5LnNlbmQobXNnLnZhbHVlKSkgdGhyb3c7CgoJLy8gY2FsY3VsYXRlIHRoZSBudW1iZXIgb2YgYXRvbXMgYXQgdGhlIGN1cnJlbnQgcmF0ZQoJdmFyIGF0b21zID0gbXNnLnZhbHVlIC8gd2VpUGVyQXRvbTsKCgkvLyB1cGRhdGUgdGhlIGRvbm9yIGRldGFpbHMKICAgICAgICByZWNvcmRbX2Rvbm9yXSArPSBhdG9tczsKCgkvLyB1cGRhdGUgdGhlIHRvdGFscwogICAgICAgIHRvdGFsV2VpICs9IG1zZy52YWx1ZTsKCXRvdGFsQXRvbSArPSBhdG9tczsKCW51bURvbmF0aW9ucyArPSAxOwoKICAgICAgICBSZWNlaXZlZChfZG9ub3IsIF9yZXR1cm5BZGRyZXNzLCBtc2cudmFsdWUsIHdlaVBlckF0b20pOwogICAgfQoKICAgIC8vLyBBZGp1c3QgdGhlIHdlaVBlckF0b20KICAgIGZ1bmN0aW9uIGFkanVzdFJhdGUodWludCBuZXdSYXRlKSBvbmx5X2FkbWluIHsKCXdlaVBlckF0b20gPSBuZXdSYXRlOwogICAgfQoKICAgIC8vLyBIYWx0IHRoZSBjb250cmlidXRpb24gcGVyaW9kLiBBbnkgYXR0ZW1wdCBhdCBjb250cmlidXRpbmcgd2lsbCBmYWlsLgogICAgZnVuY3Rpb24gaGFsdCgpIG9ubHlfYWRtaW4gb25seV9kdXJpbmdfcGVyaW9kIHsKICAgICAgICBpc0hhbHRlZCA9IHRydWU7CiAgICAgICAgSGFsdGVkKCk7CiAgICB9CgogICAgLy8vIFVuaGFsdCB0aGUgY29udHJpYnV0aW9uIHBlcmlvZC4KICAgIGZ1bmN0aW9uIHVuaGFsdCgpIG9ubHlfYWRtaW4gb25seV9kdXJpbmdfaGFsdGVkX3BlcmlvZCB7CiAgICAgICAgaXNIYWx0ZWQgPSBmYWxzZTsKICAgICAgICBVbmhhbHRlZCgpOwogICAgfQoKICAgIC8vLyBLaWxsIHRoaXMgY29udHJhY3QuCiAgICBmdW5jdGlvbiBraWxsKCkgb25seV9hZG1pbiBvbmx5X2FmdGVyX3BlcmlvZCB7CiAgICAgICAgc3VpY2lkZSh0cmVhc3VyeSk7CiAgICB9Cn0='.
	

]
