Class {
	#name : #SRT7c84e62859d0715eb77d1b1c4154ecd6abb21bec,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT7c84e62859d0715eb77d1b1c4154ecd6abb21bec >> base64 [
	^ ''.
	

]
