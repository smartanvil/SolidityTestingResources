Class {
	#name : #SRTd97579Cea3fE2473682a4C42648134BB982433B9,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTd97579Cea3fE2473682a4C42648134BB982433B9 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7CmNvbnRyYWN0IExpZ2h0Q29pblRva2VuewoJbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsKCWFkZHJlc3MgcHVibGljIG93bmVyOwoJYWRkcmVzcyBwdWJsaWMgbG9ja093bmVyOwogICAgc3RyaW5nIHB1YmxpYyBuYW1lOwogICAgc3RyaW5nIHB1YmxpYyBzeW1ib2w7CiAgICB1aW50OCBwdWJsaWMgZGVjaW1hbHM7Cgl1aW50MjU2IHB1YmxpYyBsb2NrQW1vdW50IDsKICAgIHVpbnQyNTYgcHVibGljIHN0YXJ0VGltZSA7CgkvLyB0b3RhbCBhbW91bnQgb2YgdG9rZW5zCiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsKCS8vIGBhbGxvd2VkYCB0cmFja3MgYW55IGV4dHJhIHRyYW5zZmVyIHJpZ2h0cyBhcyBpbiBhbGwgRVJDMjAgdG9rZW5zCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikpIGFsbG93ZWQ7CiAgICBmdW5jdGlvbiBMaWdodENvaW5Ub2tlbigpIHB1YmxpYyB7IAogICAgICAgIG93bmVyID0gMHg5YTY0ZkU2MjgzN2Q4RTJDMEJkMEMyYTk2YmJEZEVBNjA5QWIyRjE5OyAgICAgICAgICAvLyBTZXQgb3duZXIgb2YgY29udHJhY3QgCgkJbG9ja093bmVyID0gMHg4MjFDMDUzNzI0MjU3MDlhNjgwOTBBMTcwNzVBODU1ZGQyMDM3MWM3OwoJCXN0YXJ0VGltZSA9IDE1MTU2ODY0MDA7CiAgICAgICAgbmFtZSA9ICJMaWdodGNvaW4iOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gU2V0IHRoZSBuYW1lIGZvciBkaXNwbGF5IHB1cnBvc2VzCiAgICAgICAgc3ltYm9sID0gIkxpZ2h0IjsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gU2V0IHRoZSBzeW1ib2wgZm9yIGRpc3BsYXkgcHVycG9zZXMKICAgICAgICBkZWNpbWFscyA9ODsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEFtb3VudCBvZiBkZWNpbWFscyBmb3IgZGlzcGxheSBwdXJwb3NlcwoJCXRvdGFsU3VwcGx5ID0gMjEwMDAwMDAwMDAwMDAwMDAwMDA7ICAgICAgICAgICAgICAgLy8gVG90YWwgc3VwcGx5CgkJYmFsYW5jZXNbb3duZXJdID0gdG90YWxTdXBwbHkgKiA5MCAvMTAwIDsKCQliYWxhbmNlc1sweDZDQzBCRTNjNGFkODMwNjUyNjUwNkNCNjAyNTkxQUEwMjk4OTZCNDZdPTIwMDAwMDA7CgkJbG9ja0Ftb3VudCA9IHRvdGFsU3VwcGx5IC8gMTAgOwogICAgfQoJCiAgICAvLy8gQHBhcmFtIF9vd25lciBUaGUgYWRkcmVzcyBmcm9tIHdoaWNoIHRoZSBiYWxhbmNlIHdpbGwgYmUgcmV0cmlldmVkCiAgICAvLy8gQHJldHVybiBUaGUgYmFsYW5jZQogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7CgkJIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwoJfQoKICAgIC8vLyBAbm90aWNlIHNlbmQgYF92YWx1ZWAgdG9rZW4gdG8gYF90b2AgZnJvbSBgbXNnLnNlbmRlcmAKICAgIC8vLyBAcGFyYW0gX3RvIFRoZSBhZGRyZXNzIG9mIHRoZSByZWNpcGllbnQKICAgIC8vLyBAcGFyYW0gX3ZhbHVlIFRoZSBhbW91bnQgb2YgdG9rZW4gdG8gYmUgdHJhbnNmZXJyZWQKICAgIC8vLyBAcmV0dXJuIFdoZXRoZXIgdGhlIHRyYW5zZmVyIHdhcyBzdWNjZXNzZnVsIG9yIG5vdAogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CgkgICAgcmVxdWlyZShfdmFsdWUgPiAwICk7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBDaGVjayBzZW5kIHRva2VuIHZhbHVlID4gMDsKCQlyZXF1aXJlKGJhbGFuY2VzW21zZy5zZW5kZXJdID49IF92YWx1ZSk7CgkJYmFsYW5jZXNbbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOwogICAgICAgIGJhbGFuY2VzW190b10gKz0gX3ZhbHVlOwogICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKCX0KCiAgICAvLy8gQG5vdGljZSBzZW5kIGBfdmFsdWVgIHRva2VuIHRvIGBfdG9gIGZyb20gYF9mcm9tYCBvbiB0aGUgY29uZGl0aW9uIGl0IGlzIGFwcHJvdmVkIGJ5IGBfZnJvbWAKICAgIC8vLyBAcGFyYW0gX2Zyb20gVGhlIGFkZHJlc3Mgb2YgdGhlIHNlbmRlcgogICAgLy8vIEBwYXJhbSBfdG8gVGhlIGFkZHJlc3Mgb2YgdGhlIHJlY2lwaWVudAogICAgLy8vIEBwYXJhbSBfdmFsdWUgVGhlIGFtb3VudCBvZiB0b2tlbiB0byBiZSB0cmFuc2ZlcnJlZAogICAgLy8vIEByZXR1cm4gV2hldGhlciB0aGUgdHJhbnNmZXIgd2FzIHN1Y2Nlc3NmdWwgb3Igbm90CiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CgkgICAgcmVxdWlyZShiYWxhbmNlc1tfZnJvbV0gPj0gX3ZhbHVlKTsgICAgICAgICAgICAgICAgIC8vIENoZWNrIGlmIHRoZSBzZW5kZXIgaGFzIGVub3VnaAogICAgICAgIHJlcXVpcmUoYmFsYW5jZXNbX3RvXSArIF92YWx1ZSA+PSBiYWxhbmNlc1tfdG9dKTsgICAvLyBDaGVjayBmb3Igb3ZlcmZsb3dzCiAgICAgICAgcmVxdWlyZShfdmFsdWUgPD0gYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0pOyAgICAgIC8vIENoZWNrIGFsbG93YW5jZQoJCWJhbGFuY2VzW19mcm9tXSAtPSBfdmFsdWU7CiAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfdmFsdWU7CgkJYWxsb3dlZFtfZnJvbV1bX3RvXSAtPSBfdmFsdWU7CiAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKCX0KCiAgICAvLy8gQG5vdGljZSBgbXNnLnNlbmRlcmAgYXBwcm92ZXMgYF9zcGVuZGVyYCB0byBzcGVuZCBgX3ZhbHVlYCB0b2tlbnMKICAgIC8vLyBAcGFyYW0gX3NwZW5kZXIgVGhlIGFkZHJlc3Mgb2YgdGhlIGFjY291bnQgYWJsZSB0byB0cmFuc2ZlciB0aGUgdG9rZW5zCiAgICAvLy8gQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IG9mIHRva2VucyB0byBiZSBhcHByb3ZlZCBmb3IgdHJhbnNmZXIKICAgIC8vLyBAcmV0dXJuIFdoZXRoZXIgdGhlIGFwcHJvdmFsIHdhcyBzdWNjZXNzZnVsIG9yIG5vdAogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewoJCXJlcXVpcmUoYmFsYW5jZXNbbXNnLnNlbmRlcl0gPj0gX3ZhbHVlKTsKCQlhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsKICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsKCQlyZXR1cm4gdHJ1ZTsKCX0KCQogICAgLy8vIEBwYXJhbSBfb3duZXIgVGhlIGFkZHJlc3Mgb2YgdGhlIGFjY291bnQgb3duaW5nIHRva2VucwogICAgLy8vIEBwYXJhbSBfc3BlbmRlciBUaGUgYWRkcmVzcyBvZiB0aGUgYWNjb3VudCBhYmxlIHRvIHRyYW5zZmVyIHRoZSB0b2tlbnMKICAgIC8vLyBAcmV0dXJuIEFtb3VudCBvZiByZW1haW5pbmcgdG9rZW5zIGFsbG93ZWQgdG8gc3BlbnQKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKSB7CiAgICAgICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07Cgl9CgkKCS8qIFRoaXMgdW5uYW1lZCBmdW5jdGlvbiBpcyBjYWxsZWQgd2hlbmV2ZXIgc29tZW9uZSB0cmllcyB0byBzZW5kIGV0aGVyIHRvIGl0ICovCiAgICBmdW5jdGlvbiAoKSBwcml2YXRlIHsKICAgICAgICByZXZlcnQoKTsgICAgIC8vIFByZXZlbnRzIGFjY2lkZW50YWwgc2VuZGluZyBvZiBldGhlcgogICAgfQoJCglmdW5jdGlvbiByZWxlYXNlVG9rZW4oKSBwdWJsaWN7CgkgICByZXF1aXJlKG5vdyA+PSBzdGFydFRpbWUgKzIgeWVhcnMpOwkgICAKICAgICAgIHVpbnQyNTYgaSA9ICgobm93ICAtIHN0YXJ0VGltZSAtMiB5ZWFycykgLyAoMC41IHllYXJzKSk7CgkgICB1aW50MjU2ICByZWxlYXNldmFsdWUgPSB0b3RhbFN1cHBseSAvNDAgOwoJICAgcmVxdWlyZShsb2NrQW1vdW50ID4gKDQgLSBpIC0gMSkgKiByZWxlYXNldmFsdWUpOyAJICAgCgkgICBsb2NrQW1vdW50IC09IHJlbGVhc2V2YWx1ZSA7CgkgICBiYWxhbmNlc1tsb2NrT3duZXJdICs9ICByZWxlYXNldmFsdWUgOwogICAgfQoJCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsKICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpOwp9'.
	

]
