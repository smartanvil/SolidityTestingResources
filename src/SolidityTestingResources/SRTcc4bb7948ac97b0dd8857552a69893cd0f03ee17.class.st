Class {
	#name : #SRTcc4bb7948ac97b0dd8857552a69893cd0f03ee17,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTcc4bb7948ac97b0dd8857552a69893cd0f03ee17 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7Cgpjb250cmFjdCBGcmlrYW5kZWwgewogICAgYWRkcmVzcyBjcmVhdG9yID0gbXNnLnNlbmRlcjsgLy9LaW5nIEZyaWthbmRlbAoKICAgIGJvb2wgcHVibGljIEVuYWJsZWQgPSB0cnVlOyAvL0VuYWJsZSBzZWxsaW5nIG5ldyBGcmlrYW5kZWxsZW4KICAgIGJvb2wgaW50ZXJuYWwgS2lsbGFibGUgPSB0cnVlOyAvL0VuYWJsZWQgd2hlbiB0aGUgY29udHJhY3QgY2FuIGNvbW1pdCBzdWljaWRlIChJbiBjYXNlIG9mIGEgcHJvYmxlbSB3aXRoIHRoZSBjb250cmFjdCBpbiBpdHMgZWFybHkgZGV2ZWxvcG1lbnQsIHdlIHdpbGwgc2V0IHRoaXMgdG8gZmFsc2UgbGF0ZXIgb24pCgogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsKCiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseSA9IDUwMDAwMDsgLy81MDBrIEZyaWthbmRlbGxlbiAoeSdhbGwgcmVhZHkgZm9yIHNvbWUgYWlyZHJvcD8/KQogICAgdWludDI1NiBwdWJsaWMgaGFyZExpbWl0SUNPID0gNzUwMDAwOyAvL0RvIG5vdCBhbGxvdyBtb3JlIHRoZW4gNzUwayBmcmlrYW5kZWxsZW4gdG8gZXhpc3QsIGV2ZXIuIChUaGUgSUNPIHdpbGwgbm90IHNlbGwgcGFzdCB0aGlzKQoKICAgIGZ1bmN0aW9uIG5hbWUoKSBwdWJsaWMgcHVyZSByZXR1cm5zIChzdHJpbmcpIHsgcmV0dXJuICJGcmlrYW5kZWwiOyB9IC8vRnJpa2FuZGVsbGVuIHppam4gbGVra2VyCiAgICBmdW5jdGlvbiBzeW1ib2woKSBwdWJsaWMgcHVyZSByZXR1cm5zIChzdHJpbmcpIHsgcmV0dXJuICJGUktOREwiOyB9CiAgICBmdW5jdGlvbiBkZWNpbWFscygpIHB1YmxpYyBwdXJlIHJldHVybnMgKHVpbnQ4KSB7IHJldHVybiAwOyB9IC8vSW1hZ2luZSBnZXR0aW5nIGhhbGYgb2YgYSBmcmlrYW5kZWwsIHRoYXQgbXVzdCBiZSBwcmV0dHkgc2hpdHR5Li4uIExldHMgbm90IGRvIHRoYXQKCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYpIHsgcmV0dXJuIGJhbGFuY2VzW19vd25lcl07IH0KCglmdW5jdGlvbiBGcmlrYW5kZWwoKSBwdWJsaWMgewoJICAgIGJhbGFuY2VzW2NyZWF0b3JdID0gdG90YWxTdXBwbHk7IC8vTGV0cyBnZXQgdGhpcyBzdGFydGVkIDopCgl9CgkKCWZ1bmN0aW9uIERlc3Ryb3koKSBwdWJsaWMgewoJICAgIGlmIChtc2cuc2VuZGVyICE9IGNyZWF0b3IpIHsgcmV2ZXJ0KCk7IH0gLy95byB3aGF0IHdoeQoJICAgIAoJICAgIGlmICgoYmFsYW5jZXNbY3JlYXRvcl0gPiAyNTAwMCkgJiYgS2lsbGFibGUgPT0gdHJ1ZSl7IC8vT25seSBpZiB0aGUgb3duZXIgaGFzIG1vcmUgdGhlbiAyNWsgKGluZGljYXRpbmcgdGhlIGFpcmRyb3Agd2FzIG5vdCBmaW5pc2hlZCB5ZXQpIGFuZCB0aGUgY29udHJhY3QgaXMga2lsbGFibGUuLiBHbyBhaGVhZAoJICAgICAgICBzZWxmZGVzdHJ1Y3QoY3JlYXRvcik7CgkgICAgfQoJfQoJCglmdW5jdGlvbiBEaXNhYmxlU3VpY2lkZSgpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpewoJICAgIGlmIChtc2cuc2VuZGVyICE9IGNyZWF0b3IpIHsgcmV2ZXJ0KCk7IH0gLy91IGRvbnQgY29udHJvbCBtZQoJICAgIAoJICAgIEtpbGxhYmxlID0gZmFsc2U7CgkgICAgcmV0dXJuIHRydWU7Cgl9CgogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgaWYobXNnLmRhdGEubGVuZ3RoIDwgKDIgKiAzMikgKyA0KSB7IHJldmVydCgpOyB9IC8vU29tZXRoaW5nIHdyb25nIHlvCgogICAgICAgIGlmIChfdmFsdWUgPT0gMCkgeyByZXR1cm4gZmFsc2U7IH0gLy95IHRyeSB0byB0cmFuc2ZlciB3aXRob3V0IHNwZWNpZnlpbmcgYW55Pz8/CgogICAgICAgIHVpbnQyNTYgZnJvbUJhbGFuY2UgPSBiYWxhbmNlc1ttc2cuc2VuZGVyXTsKCiAgICAgICAgYm9vbCBzdWZmaWNpZW50RnVuZHMgPSBmcm9tQmFsYW5jZSA+PSBfdmFsdWU7CiAgICAgICAgYm9vbCBvdmVyZmxvd2VkID0gYmFsYW5jZXNbX3RvXSArIF92YWx1ZSA8IGJhbGFuY2VzW190b107CgogICAgICAgIGlmIChzdWZmaWNpZW50RnVuZHMgJiYgIW92ZXJmbG93ZWQpIHsKICAgICAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOwogICAgICAgICAgICBiYWxhbmNlc1tfdG9dICs9IF92YWx1ZTsKICAgICAgICAgICAgCiAgICAgICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7IC8vU21ha2VsaWprIQogICAgICAgIH0gZWxzZSB7IHJldHVybiBmYWxzZTsgfSAvL1NvcnJ5IG1hbiBqZSBoZWJ0IG5pZXQgZ2Vub2VnIEYgUiBJIEsgQSBOIEQgRSBMIEwgRSBOCiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGlmKG1zZy5kYXRhLmxlbmd0aCA8ICgzICogMzIpICsgNCkgeyByZXZlcnQoKTsgfSAvL1NvbWV0aGluZyB3cm9uZyB5bwoKICAgICAgICBpZiAoX3ZhbHVlID09IDApIHsgcmV0dXJuIGZhbHNlOyB9CgogICAgICAgIHVpbnQyNTYgZnJvbUJhbGFuY2UgPSBiYWxhbmNlc1tfZnJvbV07CiAgICAgICAgdWludDI1NiBhbGxvd2FuY2UgPSBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXTsKCiAgICAgICAgYm9vbCBzdWZmaWNpZW50RnVuZHMgPSBmcm9tQmFsYW5jZSA8PSBfdmFsdWU7CiAgICAgICAgYm9vbCBzdWZmaWNpZW50QWxsb3dhbmNlID0gYWxsb3dhbmNlIDw9IF92YWx1ZTsKICAgICAgICBib29sIG92ZXJmbG93ZWQgPSBiYWxhbmNlc1tfdG9dICsgX3ZhbHVlID4gYmFsYW5jZXNbX3RvXTsKCiAgICAgICAgaWYgKHN1ZmZpY2llbnRGdW5kcyAmJiBzdWZmaWNpZW50QWxsb3dhbmNlICYmICFvdmVyZmxvd2VkKSB7CiAgICAgICAgICAgIGJhbGFuY2VzW190b10gKz0gX3ZhbHVlOwogICAgICAgICAgICBiYWxhbmNlc1tfZnJvbV0gLT0gX3ZhbHVlOwogICAgICAgICAgICAKICAgICAgICAgICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOwogICAgICAgICAgICAKICAgICAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfSBlbHNlIHsgcmV0dXJuIGZhbHNlOyB9CiAgICB9CgogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgaW50ZXJuYWwgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgaWYgKF92YWx1ZSAhPSAwICYmIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdICE9IDApIHsgcmV0dXJuIGZhbHNlOyB9CiAgICAgICAgCiAgICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7CiAgICAgICAgCiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07CiAgICB9CgogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50MjU2IF92YWx1ZSk7CiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKTsKCiAgICBmdW5jdGlvbiBlbmFibGUoKSBwdWJsaWMgewogICAgICAgIGlmIChtc2cuc2VuZGVyICE9IGNyZWF0b3IpIHsgcmV2ZXJ0KCk7IH0gLy9Ccm8gc3RheSBvZiBteSBjb250cmFjdAogICAgICAgIEVuYWJsZWQgPSB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGRpc2FibGUoKSBwdWJsaWMgewogICAgICAgIGlmIChtc2cuc2VuZGVyICE9IGNyZWF0b3IpIHsgcmV2ZXJ0KCk7IH0gLy9CUk8gd2hhdCBkaWQgSSB0ZWxsIHlvdQogICAgICAgIEVuYWJsZWQgPSBmYWxzZTsKICAgIH0KCiAgICBmdW5jdGlvbigpIHBheWFibGUgcHVibGljIHsKICAgICAgICBpZiAoIUVuYWJsZWQpIHsgcmV2ZXJ0KCk7IH0KICAgICAgICBpZihiYWxhbmNlc1ttc2cuc2VuZGVyXSsobXNnLnZhbHVlIC8gMWUxNCkgPiAzMDAwMCkgeyByZXZlcnQoKTsgfSAvL1RoaXMgd291bGQgZ2l2ZSB5b3UgbW9yZSB0aGVuIDMwMDAwIGZyaWthbmRlbGxlbiwgeW91IGNhbid0IGJ1eSBmcm9tIHRoaXMgYWNjb3VudCBhbnltb3JlIHRocm91Z2ggdGhlIElDTwogICAgICAgIGlmKHRvdGFsU3VwcGx5Kyhtc2cudmFsdWUgLyAxZTE0KSA+IGhhcmRMaW1pdElDTykgeyByZXZlcnQoKTsgfSAvL0hhcmQgbGltaXQgb24gRnJpa2FuZGVsbGVuCiAgICAgICAgaWYgKG1zZy52YWx1ZSA9PSAwKSB7IHJldHVybjsgfQoKICAgICAgICBjcmVhdG9yLnRyYW5zZmVyKG1zZy52YWx1ZSk7CgogICAgICAgIHVpbnQyNTYgdG9rZW5zSXNzdWVkID0gKG1zZy52YWx1ZSAvIDFlMTQpOyAvL1NpbmNlIDEgdG9rZW4gY2FuIGJlIGJvdWdodCBmb3IgMC4wMDAxIEVUSCBzcGxpdCB0aGUgdmFsdWUgKGluIFdlaSkgdGhyb3VnaCAxZTE0IHRvIGdldCB0aGUgYW1vdW50IG9mIHRva2VucwoKICAgICAgICB0b3RhbFN1cHBseSArPSB0b2tlbnNJc3N1ZWQ7CiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gKz0gdG9rZW5zSXNzdWVkOwoKICAgICAgICBUcmFuc2ZlcihhZGRyZXNzKHRoaXMpLCBtc2cuc2VuZGVyLCB0b2tlbnNJc3N1ZWQpOwogICAgfQp9'.
	

]
