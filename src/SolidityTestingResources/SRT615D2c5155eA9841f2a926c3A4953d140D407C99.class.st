Class {
	#name : #SRT615D2c5155eA9841f2a926c3A4953d140D407C99,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT615D2c5155eA9841f2a926c3A4953d140D407C99 >> base64 [
	^ 'Ly8gV2VsY29tZSB0byAqIEJldCBPbiBIYXNoICoKLy8KLy8gdGhpcyBpcyBhIHJvdW5kIGJhc2VkIGJldCBnYW1lCi8vIGEgcm91bmQgY29uc2lzdHMgb2YgNiBwbGF5ZXJzCi8vIAovLyB5b3UgYmV0IG9uIHRoZSBmaXJzdCBieXRlIG9mIHRoZSBsYXN0ICg2dGgpIHBsYXllcnMgYmxvY2toYXNoICh1bnByZWRpY3RhYmxlLCA1MCUgY2hhbmNlKQovLyAKLy8gKiogdG8gam9pbjogc2VuZCBvbmUgYnl0ZSBkYXRhICgweDAxIG9yIDB4ODEpIHdpdGggYSBiZXQgYW1vdW50IG9mIDAuMDEgZXRoZXIgKDEwIGZpbm5leSkgdG8gdGhlIGNvbnRyYWN0IGFkZHJlc3MKLy8gCi8vIGlmIHlvdXIgZGF0YSBieXRlIGlzIGxlc3MgdGhhbiAweDgwIHlvdSBiZXQgdGhlIGJsb2NraGFzaHMgZmlyc3QgYnl0ZSBpcyA8IDB4ODAKLy8gaWYgeW91ciBkYXRhIGJ5dGUgaXMgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIDB4ODAgeW91IGJldCB0aGUgYmxvY2toYXNocyBmaXJzdCBieXRlIGlzID49IDB4ODAKLy8gCi8vIGlmIHlvdSBsb3NlIHlvdXIgYmV0IHlvdXIgYmV0IGFtb3VudCBnb2VzIHRvIHRoZSBwb29sIGZvciB3aW5uZXJzCi8vIAovLyBpZiB5b3Ugd2luIHlvdXIgYmV0OgovLyAJKiB5b3Ugd2lsbCBnZXQgYmFjayAxMDAlIG9mIHlvdXIgcGF5bWVudAovLyAJKiB5b3Ugd2lsbCB3aW4gYSBwcm9wb3J0aW9uYWwgcGFydCBvZiB0aGUgd2lubmVyIHBvb2wgKHdpbiBhbW91bnQgPSB3aW5uZXIgcG9vbCAvIHdpbm5lcnMgLSAxJSkgCi8vIAovLyBwYXlvdXQgaXMgdHJpZ2dlcmVkIHdoZW4gYSBwbGF5ZXIgc3RhcnRzIHRoZSBuZXh0IHJvdW5kCi8vIAovLyBhZGRpdGlvbmFsIHJ1bGVzOgovLyBlYWNoIGFkZHJlc3MgY2FuIG9ubHkgcGxheSBvbmNlIHBlciByb3VuZAovLyBldmVyeSBhZGRpdGlvbmFsIHBheW1lbnQgZHVyaW5nIHRoZSBzYW1lIHJvdW5kIHdpbGwgYmUgcGFpZCBiYWNrIGltbWVkaWF0bHkKLy8gZXZlcnkgcGF5bWVudCBiZWxvdyB0aGUgYmV0IHZhbHVlIGlzIGNvbnNpZGVyZWQgYXMgYSBkb25hdGlvbiBmb3IgdGhlIHdpbm5lciBwb29sCi8vIGV2ZXJ5IGFtb3VudCB0aGF0IGlzIGV4Y2VlZGluZyB0aGUgYmV0IHZhbHVlIHdpbGwgYmUgcGFpZCBiYWNrCi8vIGlmIG5vYm9keSB3aW5zIGluIGEgcm91bmQsIHRoZSBwYWlkIGFtb3VudHMgd2lsbCByYWlzZSB0aGUgd2lubmVyIHBvb2wgZm9yIHRoZSBuZXh0IHJvdW5kCi8vCi8vICoqIGlmIHlvdSBwYXkgdG8gdGhlIGNvbnRyYWN0LCB5b3UgYWdyZWUgdGhhdCB5b3UgbWF5IGxvc2UgKDUwJSBjaGFuY2UhKSB0aGUgcGFpZCBhbW91bnQgKioKCgpjb250cmFjdCBCZXRPbkhhc2hWODIgewogIHN0cnVjdCBQbGF5ZXIgewogICAgYWRkcmVzcyBhZGRyOwogICAgYnl0ZSBiZXQ7CiAgfQogIAogIFBsYXllcltdIHB1YmxpYyBwbGF5ZXJzOwogIGJvb2wgcHVibGljIGFjdGl2ZTsKICB1aW50IHB1YmxpYyBiZXRBbW91bnQ7CiAgdWludCBwdWJsaWMgcGxheWVyc1BlclJvdW5kOwogIHVpbnQgcHVibGljIHJvdW5kOwogIHVpbnQgcHVibGljIHdpblBvb2w7CiAgYnl0ZSBwdWJsaWMgYmV0Qnl0ZTsKCiAgdWludCBsYXN0UGxheWVyc0Jsb2NrTnVtYmVyOwogIGFkZHJlc3Mgb3duZXI7CiAgCiAgbW9kaWZpZXIgb25seW93bmVyIHsgaWYgKG1zZy5zZW5kZXIgPT0gb3duZXIpIF87IH0gIAogIGZ1bmN0aW9uIEJldE9uSGFzaFY4MigpIHsKICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgIGJldEFtb3VudCA9IDEwIGZpbm5leTsKICAgIHJvdW5kID0gMTsKICAgIHBsYXllcnNQZXJSb3VuZCA9IDY7CiAgICBhY3RpdmUgPSB0cnVlOwogICAgd2luUG9vbCA9IDA7CiAgfQogIAogIGZ1bmN0aW9uIGZpbmlzaFJvdW5kKCkgaW50ZXJuYWwgewogICAgLy9nZXQgYmxvY2sgaGFzaCBvZiBsYXN0IHBsYXllcgogICAgYnl0ZXMzMiBiZXRIYXNoID0gYmxvY2suYmxvY2toYXNoKGxhc3RQbGF5ZXJzQmxvY2tOdW1iZXIpOwogICAgYmV0Qnl0ZSA9IGJ5dGUoYmV0SGFzaCk7CiAgICBieXRlIGJldDsKICAgIHVpbnQ4IGl4OyAKICAgIAogICAgLy9jaGVjayB3aW4gb3IgbG9zcywgY2FsY3VsYXRlIHdpbm5Qb29sCiAgICBhZGRyZXNzW10gbWVtb3J5IHdpbm5lcnMgPSBuZXcgYWRkcmVzc1tdKHBsYXllcnNQZXJSb3VuZCk7CiAgICB1aW50OCBudW1XaW5uZXJzPTA7CiAgICBmb3IoaXg9MDsgaXggPCBwbGF5ZXJzLmxlbmd0aDsgaXgrKykgewogICAgICBQbGF5ZXIgcCA9IHBsYXllcnNbaXhdOwogICAgICBpZihwLmJldCA8IDB4ODAgJiYgYmV0Qnl0ZSA8IDB4ODAgfHwgcC5iZXQgPj0gMHg4MCAmJiBiZXRCeXRlID49IDB4ODApIHsKICAgICAgICAvL3BsYXllciB3b24KICAgICAgICB3aW5uZXJzW251bVdpbm5lcnMrK10gPSBwLmFkZHI7CiAgICAgIH0gCiAgICAgIGVsc2Ugd2luUG9vbCArPSBiZXRBbW91bnQ7CiAgICB9CiAgICAKICAgIC8vY2FsY3VsYXRlIHdpbm5lcnMgcGF5b3V0cyBhbmQgcGF5IG91dAogICAgaWYobnVtV2lubmVycyA+IDApIHsKICAgICAgdWludCB3aW5BbW91bnQgPSAod2luUG9vbCAvIG51bVdpbm5lcnMpICogOTkgLyAxMDA7CiAgICAgIGZvcihpeCA9IDA7IGl4IDwgbnVtV2lubmVyczsgaXgrKykgewogICAgICAgIGlmKCF3aW5uZXJzW2l4XS5zZW5kKGJldEFtb3VudCArIHdpbkFtb3VudCkpIHRocm93OwogICAgICB9CiAgICAgIHdpblBvb2wgPSAwOwogICAgfQogICAgCiAgICAvL3N0YXJ0IG5leHQgcm91bmQKICAgIHJvdW5kKys7CiAgICBkZWxldGUgcGxheWVyczsKICB9CiAgCiAgZnVuY3Rpb24gcmVqZWN0KCkgaW50ZXJuYWwgewogICAgbXNnLnNlbmRlci5zZW5kKG1zZy52YWx1ZSk7CiAgfQogIAogIGZ1bmN0aW9uIGpvaW4oKSBpbnRlcm5hbCB7CiAgCiAgICAvL2ZpbmlzaCByb3VuZCBpZiBuZXh0IHBsYXllcnMgYmxvY2sgaXMgYWJvdmUgbGFzdCBwbGF5ZXJzIGJsb2NrCiAgICBpZihwbGF5ZXJzLmxlbmd0aCA+PSBwbGF5ZXJzUGVyUm91bmQpIHsgCiAgICAgIGlmKGJsb2NrLm51bWJlciA+IGxhc3RQbGF5ZXJzQmxvY2tOdW1iZXIpIGZpbmlzaFJvdW5kKCk7IAogICAgICBlbHNlIHtyZWplY3QoKTsgcmV0dXJuO30gIC8vdG9vIG1hbnkgcGxheWVycyBpbiBvbmUgYmxvY2sgLT4gcGF5IGJhY2sKICAgIH0KCiAgICAvL3BheW1lbnRzIGJlbG93IGJldCBhbW91bnQgYXJlIGNvbnNpZGVyZWQgYXMgZG9uYXRpb24gZm9yIHRoZSB3aW5uZXIgcG9vbAogICAgaWYobXNnLnZhbHVlIDwgYmV0QW1vdW50KSB7CiAgICAgIHdpblBvb2wgKz0gbXNnLnZhbHVlOyAKICAgICAgcmV0dXJuOwogICAgfQogICAgCiAgICAvL25vIGRhdGEgc2VudCAtPiBwYXkgYmFjawogICAgaWYobXNnLmRhdGEubGVuZ3RoIDwgMSkge3JlamVjdCgpO3JldHVybjt9CiAgICAKICAgIC8vcHJldmVudCBwbGF5ZXJzIHRvIHBsYXkgbW9yZSB0aGFuIG9uY2UgcGVyIHJvdW5kOgogICAgZm9yKHVpbnQ4IGkgPSAwOyBpIDwgcGxheWVycy5sZW5ndGg7IGkrKykKICAgICAgaWYobXNnLnNlbmRlciA9PSBwbGF5ZXJzW2ldLmFkZHIpIHtyZWplY3QoKTsgcmV0dXJuO30KICAgIAogICAgLy90byBtdWNoIHBhaWQgLT4gcGF5IGJhY2sgYWxsIGFib3ZlIGJldCBhbW91bnQKICAgIGlmKG1zZy52YWx1ZSA+IGJldEFtb3VudCkgewogICAgICBtc2cuc2VuZGVyLnNlbmQobXNnLnZhbHVlIC0gYmV0QW1vdW50KTsKICAgIH0KICAgIAogICAgLy9yZWdpc3RlciBwbGF5ZXIKICAgIHBsYXllcnMucHVzaCggUGxheWVyKG1zZy5zZW5kZXIsIG1zZy5kYXRhWzBdKSApOwogICAgbGFzdFBsYXllcnNCbG9ja051bWJlciA9IGJsb2NrLm51bWJlcjsKICB9CiAgCiAgZnVuY3Rpb24gKCkgewogICAgaWYoYWN0aXZlKSBqb2luKCk7CiAgICBlbHNlIHRocm93OwogIH0KICAKICBmdW5jdGlvbiBmb3JjZUZpbmlzaCgpIG9ubHlvd25lciB7CiAgICBpZihwbGF5ZXJzLmxlbmd0aCA+IDApIGZpbmlzaFJvdW5kKCk7CiAgfQogIAogIGZ1bmN0aW9uIHBheWJhY2tMYXN0KCkgb25seW93bmVyIHJldHVybnMgKGJvb2wpIHsKICAgIGlmKHBsYXllcnMubGVuZ3RoID09IDApIHJldHVybiB0cnVlOwogICAgaWYgKHBsYXllcnNbcGxheWVycy5sZW5ndGggLSAxXS5hZGRyLnNlbmQoYmV0QW1vdW50KSkgewogICAgICBwbGF5ZXJzLmxlbmd0aC0tOwogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIHJldHVybiBmYWxzZTsKICB9CiAgCiAgLy9pZiBzb21ldGhpbmcgZ29lcyB3cm9uZywgdGhlIG93bmVyIGNhbiB0cmlnZ2VyIHBheSBiYWNrCiAgZnVuY3Rpb24gcGF5YmFja0FsbCgpIG9ubHlvd25lciByZXR1cm5zIChib29sKSB7CiAgICB3aGlsZShwbGF5ZXJzLmxlbmd0aCA+IDApIHtpZighcGF5YmFja0xhc3QoKSkgcmV0dXJuIGZhbHNlO30KICAgIHJldHVybiB0cnVlOwogIH0KICAKICBmdW5jdGlvbiBjb2xsZWN0RmVlcygpIG9ubHlvd25lciB7CiAgICB1aW50IHBsYXllcnNFdGhlciA9IHdpblBvb2w7CiAgICB1aW50OCBpeDsKICAgIGZvcihpeD0wOyBpeCA8IHBsYXllcnMubGVuZ3RoOyBpeCsrKSBwbGF5ZXJzRXRoZXIgKz0gYmV0QW1vdW50OwogICAgdWludCBmZWVzID0gdGhpcy5iYWxhbmNlIC0gcGxheWVyc0V0aGVyOwogICAgaWYoZmVlcyA+IDApIG93bmVyLnNlbmQoZmVlcyk7CiAgfQogIAogIGZ1bmN0aW9uIGNoYW5nZU93bmVyKGFkZHJlc3MgX293bmVyKSBvbmx5b3duZXIgewogICAgb3duZXIgPSBfb3duZXI7CiAgfQogIAogIGZ1bmN0aW9uIHNldFBsYXllcnNQZXJSb3VuZCh1aW50IG51bSkgb25seW93bmVyIHsKICAgIGlmKHBsYXllcnMubGVuZ3RoID4gMCkgZmluaXNoUm91bmQoKTsKICAgIHBsYXllcnNQZXJSb3VuZCA9IG51bTsKICB9CiAgCiAgZnVuY3Rpb24gc3RvcCgpIG9ubHlvd25lciB7CiAgICBhY3RpdmUgPSBmYWxzZTsKICAgIHBheWJhY2tBbGwoKTsKICB9CgogIC8vY29udHJhY3QgY2FuIG9ubHkgYmUgZGVzdHJ1Y3RlZCBpZiBhbGwgcGF5bWVudHMgd2hlcmUgcGFpZCBiYWNrICAKICBmdW5jdGlvbiBraWxsKCkgb25seW93bmVyIHsKICAgIGlmKCFhY3RpdmUgJiYgcGF5YmFja0FsbCgpKSAKICAgICAgc2VsZmRlc3RydWN0KG93bmVyKTsKICB9Cn0='.
	

]
