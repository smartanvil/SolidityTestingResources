Class {
	#name : #SRT1f2f65e5fbc46812b058d1979a90abce9734fe24,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT1f2f65e5fbc46812b058d1979a90abce9734fe24 >> base64 [
	^ ''.
	

]
