Class {
	#name : #SRTf92698aa5cf655b092d98548b292bb150998888d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTf92698aa5cf655b092d98548b292bb150998888d >> base64 [
	^ ''.
	

]
