Class {
	#name : #SRTE54c1B8F295cbB00a9845FEB1ff76365EaEa7610,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTE54c1B8F295cbB00a9845FEB1ff76365EaEa7610 >> base64 [
	^ ''.
	

]
