Class {
	#name : #SRT451d4994cd2f2f691632b3d574e4a3d69c8cd7c6,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT451d4994cd2f2f691632b3d574e4a3d69c8cd7c6 >> base64 [
	^ ''.
	

]
