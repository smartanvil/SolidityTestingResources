Class {
	#name : #SRT2aea8071b771818e0004d0e5c93fadd9d7f5d31d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT2aea8071b771818e0004d0e5c93fadd9d7f5d31d >> base64 [
	^ ''.
	

]
