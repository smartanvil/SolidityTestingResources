Class {
	#name : #SRT487e7bbb8b9cda5eecbbd17815adb961b5b4a9fc,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT487e7bbb8b9cda5eecbbd17815adb961b5b4a9fc >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7Ci8qIElubGluZWQgZnJvbSAuL2NvbnRyYWN0cy9Qb3J0TWF5b3Iuc29sICovCgoKLyogSW5saW5lZCBmcm9tIG5vZGVfbW9kdWxlcy96ZXBwZWxpbi1zb2xpZGl0eS9jb250cmFjdHMvb3duZXJzaGlwL093bmFibGUuc29sICovCgoKCi8qKgogKiBAdGl0bGUgT3duYWJsZQogKiBAZGV2IFRoZSBPd25hYmxlIGNvbnRyYWN0IGhhcyBhbiBvd25lciBhZGRyZXNzLCBhbmQgcHJvdmlkZXMgYmFzaWMgYXV0aG9yaXphdGlvbiBjb250cm9sCiAqIGZ1bmN0aW9ucywgdGhpcyBzaW1wbGlmaWVzIHRoZSBpbXBsZW1lbnRhdGlvbiBvZiAidXNlciBwZXJtaXNzaW9ucyIuCiAqLwpjb250cmFjdCBPd25hYmxlIHsKICBhZGRyZXNzIHB1YmxpYyBvd25lcjsKCgogIGV2ZW50IE93bmVyc2hpcFRyYW5zZmVycmVkKGFkZHJlc3MgaW5kZXhlZCBwcmV2aW91c093bmVyLCBhZGRyZXNzIGluZGV4ZWQgbmV3T3duZXIpOwoKCiAgLyoqCiAgICogQGRldiBUaGUgT3duYWJsZSBjb25zdHJ1Y3RvciBzZXRzIHRoZSBvcmlnaW5hbCBgb3duZXJgIG9mIHRoZSBjb250cmFjdCB0byB0aGUgc2VuZGVyCiAgICogYWNjb3VudC4KICAgKi8KICBmdW5jdGlvbiBPd25hYmxlKCkgcHVibGljIHsKICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICB9CgoKICAvKioKICAgKiBAZGV2IFRocm93cyBpZiBjYWxsZWQgYnkgYW55IGFjY291bnQgb3RoZXIgdGhhbiB0aGUgb3duZXIuCiAgICovCiAgbW9kaWZpZXIgb25seU93bmVyKCkgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyKTsKICAgIF87CiAgfQoKCiAgLyoqCiAgICogQGRldiBBbGxvd3MgdGhlIGN1cnJlbnQgb3duZXIgdG8gdHJhbnNmZXIgY29udHJvbCBvZiB0aGUgY29udHJhY3QgdG8gYSBuZXdPd25lci4KICAgKiBAcGFyYW0gbmV3T3duZXIgVGhlIGFkZHJlc3MgdG8gdHJhbnNmZXIgb3duZXJzaGlwIHRvLgogICAqLwogIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpIHB1YmxpYyBvbmx5T3duZXIgewogICAgcmVxdWlyZShuZXdPd25lciAhPSBhZGRyZXNzKDApKTsKICAgIE93bmVyc2hpcFRyYW5zZmVycmVkKG93bmVyLCBuZXdPd25lcik7CiAgICBvd25lciA9IG5ld093bmVyOwogIH0KCn0KCi8qIElubGluZWQgZnJvbSBub2RlX21vZHVsZXMvemVwcGVsaW4tc29saWRpdHkvY29udHJhY3RzL293bmVyc2hpcC9IYXNOb0V0aGVyLnNvbCAqLwoKCgoKLyoqCiAqIEB0aXRsZSBDb250cmFjdHMgdGhhdCBzaG91bGQgbm90IG93biBFdGhlcgogKiBAYXV0aG9yIFJlbWNvIEJsb2VtZW4gPDxhIGhyZWY9Ii9jZG4tY2dpL2wvZW1haWwtcHJvdGVjdGlvbiIgY2xhc3M9Il9fY2ZfZW1haWxfXyIgZGF0YS1jZmVtYWlsPSI0NjM0MjMyYjI1MjkwNjc0Ij5bZW1haWwmIzE2MDtwcm90ZWN0ZWRdPC9hPs+ALmNvbT4KICogQGRldiBUaGlzIHRyaWVzIHRvIGJsb2NrIGluY29taW5nIGV0aGVyIHRvIHByZXZlbnQgYWNjaWRlbnRhbCBsb3NzIG9mIEV0aGVyLiBTaG91bGQgRXRoZXIgZW5kIHVwCiAqIGluIHRoZSBjb250cmFjdCwgaXQgd2lsbCBhbGxvdyB0aGUgb3duZXIgdG8gcmVjbGFpbSB0aGlzIGV0aGVyLgogKiBAbm90aWNlIEV0aGVyIGNhbiBzdGlsbCBiZSBzZW5kIHRvIHRoaXMgY29udHJhY3QgYnk6CiAqIGNhbGxpbmcgZnVuY3Rpb25zIGxhYmVsZWQgYHBheWFibGVgCiAqIGBzZWxmZGVzdHJ1Y3QoY29udHJhY3RfYWRkcmVzcylgCiAqIG1pbmluZyBkaXJlY3RseSB0byB0aGUgY29udHJhY3QgYWRkcmVzcwoqLwpjb250cmFjdCBIYXNOb0V0aGVyIGlzIE93bmFibGUgewoKICAvKioKICAqIEBkZXYgQ29uc3RydWN0b3IgdGhhdCByZWplY3RzIGluY29taW5nIEV0aGVyCiAgKiBAZGV2IFRoZSBgcGF5YWJsZWAgZmxhZyBpcyBhZGRlZCBzbyB3ZSBjYW4gYWNjZXNzIGBtc2cudmFsdWVgIHdpdGhvdXQgY29tcGlsZXIgd2FybmluZy4gSWYgd2UKICAqIGxlYXZlIG91dCBwYXlhYmxlLCB0aGVuIFNvbGlkaXR5IHdpbGwgYWxsb3cgaW5oZXJpdGluZyBjb250cmFjdHMgdG8gaW1wbGVtZW50IGEgcGF5YWJsZQogICogY29uc3RydWN0b3IuIEJ5IGRvaW5nIGl0IHRoaXMgd2F5IHdlIHByZXZlbnQgYSBwYXlhYmxlIGNvbnN0cnVjdG9yIGZyb20gd29ya2luZy4gQWx0ZXJuYXRpdmVseQogICogd2UgY291bGQgdXNlIGFzc2VtYmx5IHRvIGFjY2VzcyBtc2cudmFsdWUuCiAgKi8KICBmdW5jdGlvbiBIYXNOb0V0aGVyKCkgcHVibGljIHBheWFibGUgewogICAgcmVxdWlyZShtc2cudmFsdWUgPT0gMCk7CiAgfQoKICAvKioKICAgKiBAZGV2IERpc2FsbG93cyBkaXJlY3Qgc2VuZCBieSBzZXR0aW5ncyBhIGRlZmF1bHQgZnVuY3Rpb24gd2l0aG91dCB0aGUgYHBheWFibGVgIGZsYWcuCiAgICovCiAgZnVuY3Rpb24oKSBleHRlcm5hbCB7CiAgfQoKICAvKioKICAgKiBAZGV2IFRyYW5zZmVyIGFsbCBFdGhlciBoZWxkIGJ5IHRoZSBjb250cmFjdCB0byB0aGUgb3duZXIuCiAgICovCiAgZnVuY3Rpb24gcmVjbGFpbUV0aGVyKCkgZXh0ZXJuYWwgb25seU93bmVyIHsKICAgIGFzc2VydChvd25lci5zZW5kKHRoaXMuYmFsYW5jZSkpOwogIH0KfQoKLyogSW5saW5lZCBmcm9tIG5vZGVfbW9kdWxlcy96ZXBwZWxpbi1zb2xpZGl0eS9jb250cmFjdHMvb3duZXJzaGlwL0NhblJlY2xhaW1Ub2tlbi5zb2wgKi8KCgoKLyogSW5saW5lZCBmcm9tIG5vZGVfbW9kdWxlcy96ZXBwZWxpbi1zb2xpZGl0eS9jb250cmFjdHMvdG9rZW4vRVJDMjBCYXNpYy5zb2wgKi8KCgoKLyoqCiAqIEB0aXRsZSBFUkMyMEJhc2ljCiAqIEBkZXYgU2ltcGxlciB2ZXJzaW9uIG9mIEVSQzIwIGludGVyZmFjZQogKiBAZGV2IHNlZSBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9pc3N1ZXMvMTc5CiAqLwpjb250cmFjdCBFUkMyMEJhc2ljIHsKICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsKICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyB3aG8pIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYpOwogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sIHVpbnQyNTYgdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKTsKICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHZhbHVlKTsKfQoKLyogSW5saW5lZCBmcm9tIG5vZGVfbW9kdWxlcy96ZXBwZWxpbi1zb2xpZGl0eS9jb250cmFjdHMvdG9rZW4vU2FmZUVSQzIwLnNvbCAqLwoKCgovKiBJbmxpbmVkIGZyb20gbm9kZV9tb2R1bGVzL3plcHBlbGluLXNvbGlkaXR5L2NvbnRyYWN0cy90b2tlbi9FUkMyMC5zb2wgKi8KCgoKCgoKLyoqCiAqIEB0aXRsZSBFUkMyMCBpbnRlcmZhY2UKICogQGRldiBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL0VJUHMvaXNzdWVzLzIwCiAqLwpjb250cmFjdCBFUkMyMCBpcyBFUkMyMEJhc2ljIHsKICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBvd25lciwgYWRkcmVzcyBzcGVuZGVyKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2KTsKICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvLCB1aW50MjU2IHZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CiAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIHNwZW5kZXIsIHVpbnQyNTYgdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKTsKICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBzcGVuZGVyLCB1aW50MjU2IHZhbHVlKTsKfQoKCi8qKgogKiBAdGl0bGUgU2FmZUVSQzIwCiAqIEBkZXYgV3JhcHBlcnMgYXJvdW5kIEVSQzIwIG9wZXJhdGlvbnMgdGhhdCB0aHJvdyBvbiBmYWlsdXJlLgogKiBUbyB1c2UgdGhpcyBsaWJyYXJ5IHlvdSBjYW4gYWRkIGEgYHVzaW5nIFNhZmVFUkMyMCBmb3IgRVJDMjA7YCBzdGF0ZW1lbnQgdG8geW91ciBjb250cmFjdCwKICogd2hpY2ggYWxsb3dzIHlvdSB0byBjYWxsIHRoZSBzYWZlIG9wZXJhdGlvbnMgYXMgYHRva2VuLnNhZmVUcmFuc2ZlciguLi4pYCwgZXRjLgogKi8KbGlicmFyeSBTYWZlRVJDMjAgewogIGZ1bmN0aW9uIHNhZmVUcmFuc2ZlcihFUkMyMEJhc2ljIHRva2VuLCBhZGRyZXNzIHRvLCB1aW50MjU2IHZhbHVlKSBpbnRlcm5hbCB7CiAgICBhc3NlcnQodG9rZW4udHJhbnNmZXIodG8sIHZhbHVlKSk7CiAgfQoKICBmdW5jdGlvbiBzYWZlVHJhbnNmZXJGcm9tKEVSQzIwIHRva2VuLCBhZGRyZXNzIGZyb20sIGFkZHJlc3MgdG8sIHVpbnQyNTYgdmFsdWUpIGludGVybmFsIHsKICAgIGFzc2VydCh0b2tlbi50cmFuc2ZlckZyb20oZnJvbSwgdG8sIHZhbHVlKSk7CiAgfQoKICBmdW5jdGlvbiBzYWZlQXBwcm92ZShFUkMyMCB0b2tlbiwgYWRkcmVzcyBzcGVuZGVyLCB1aW50MjU2IHZhbHVlKSBpbnRlcm5hbCB7CiAgICBhc3NlcnQodG9rZW4uYXBwcm92ZShzcGVuZGVyLCB2YWx1ZSkpOwogIH0KfQoKCi8qKgogKiBAdGl0bGUgQ29udHJhY3RzIHRoYXQgc2hvdWxkIGJlIGFibGUgdG8gcmVjb3ZlciB0b2tlbnMKICogQGF1dGhvciBTeWxUaQogKiBAZGV2IFRoaXMgYWxsb3cgYSBjb250cmFjdCB0byByZWNvdmVyIGFueSBFUkMyMCB0b2tlbiByZWNlaXZlZCBpbiBhIGNvbnRyYWN0IGJ5IHRyYW5zZmVycmluZyB0aGUgYmFsYW5jZSB0byB0aGUgY29udHJhY3Qgb3duZXIuCiAqIFRoaXMgd2lsbCBwcmV2ZW50IGFueSBhY2NpZGVudGFsIGxvc3Mgb2YgdG9rZW5zLgogKi8KY29udHJhY3QgQ2FuUmVjbGFpbVRva2VuIGlzIE93bmFibGUgewogIHVzaW5nIFNhZmVFUkMyMCBmb3IgRVJDMjBCYXNpYzsKCiAgLyoqCiAgICogQGRldiBSZWNsYWltIGFsbCBFUkMyMEJhc2ljIGNvbXBhdGlibGUgdG9rZW5zCiAgICogQHBhcmFtIHRva2VuIEVSQzIwQmFzaWMgVGhlIGFkZHJlc3Mgb2YgdGhlIHRva2VuIGNvbnRyYWN0CiAgICovCiAgZnVuY3Rpb24gcmVjbGFpbVRva2VuKEVSQzIwQmFzaWMgdG9rZW4pIGV4dGVybmFsIG9ubHlPd25lciB7CiAgICB1aW50MjU2IGJhbGFuY2UgPSB0b2tlbi5iYWxhbmNlT2YodGhpcyk7CiAgICB0b2tlbi5zYWZlVHJhbnNmZXIob3duZXIsIGJhbGFuY2UpOwogIH0KCn0KCgovKiBJbmxpbmVkIGZyb20gY29udHJhY3RzL1BvcnRDb2luLnNvbCAqLwoKCgoKY29udHJhY3QgUG9ydENvaW4gaXMgRVJDMjAgewoKICBhZGRyZXNzIG1heW9yOwoKICBzdHJpbmcgcHVibGljIG5hbWUgPSAiUG9ydGxhbmQgTWFpbmUgVG9rZW4iOwogIHN0cmluZyBwdWJsaWMgc3ltYm9sID0gIlBPUlQiOwogIHVpbnQgcHVibGljIGRlY2ltYWxzID0gMDsKCiAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpIGJhbGFuY2VzOwogIG1hcHBpbmcoYWRkcmVzcyA9PiBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikpIGFwcHJvdmFsczsKCiAgZXZlbnQgTmV3TWF5b3IoYWRkcmVzcyBpbmRleGVkIG9sZE1heW9yLCBhZGRyZXNzIGluZGV4ZWQgbmV3TWF5b3IpOwoKICBmdW5jdGlvbiBQb3J0Q29pbigpIHB1YmxpYyB7CiAgICBtYXlvciA9IG1zZy5zZW5kZXI7CiAgfQoKICBtb2RpZmllciBvbmx5TWF5b3IoKSB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gbWF5b3IpOwogICAgXzsKICB9CgogIGZ1bmN0aW9uIGVsZWN0TmV3TWF5b3IoYWRkcmVzcyBuZXdNYXlvcikgb25seU1heW9yIHB1YmxpYyB7CiAgICBhZGRyZXNzIG9sZE1heW9yID0gbWF5b3I7CiAgICBtYXlvciA9IG5ld01heW9yOwogICAgTmV3TWF5b3Iob2xkTWF5b3IsIG5ld01heW9yKTsKICB9CgogIGZ1bmN0aW9uIGlzc3VlKGFkZHJlc3MgdG8sIHVpbnQyNTYgYW1vdW50KSBvbmx5TWF5b3IgcHVibGljIHJldHVybnMgKGJvb2wpewogICAgdG90YWxTdXBwbHkgKz0gYW1vdW50OwogICAgYmFsYW5jZXNbdG9dICs9IGFtb3VudDsKICAgIFRyYW5zZmVyKDB4MCwgdG8sIGFtb3VudCk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIHdobykgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHJldHVybiBiYWxhbmNlc1t3aG9dOwogIH0KCiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyB0bywgdWludDI1NiB2YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgIHJlcXVpcmUoYmFsYW5jZXNbbXNnLnNlbmRlcl0gPj0gdmFsdWUpOwogICAgYmFsYW5jZXNbdG9dICs9IHZhbHVlOwogICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gLT0gdmFsdWU7CiAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCB0bywgdmFsdWUpOwogICAgcmV0dXJuIHRydWU7CiAgfQoKICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3Mgc3BlbmRlciwgdWludDI1NiB2YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgIGFwcHJvdmFsc1ttc2cuc2VuZGVyXVtzcGVuZGVyXSA9IHZhbHVlOwogICAgQXBwcm92YWwobXNnLnNlbmRlciwgc3BlbmRlciwgdmFsdWUpOwogICAgcmV0dXJuIHRydWU7CiAgfQoKICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBvd25lciwgYWRkcmVzcyBzcGVuZGVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgcmV0dXJuIGFwcHJvdmFsc1tvd25lcl1bc3BlbmRlcl07CiAgfQoKICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvLCB1aW50MjU2IHZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgcmVxdWlyZShhcHByb3ZhbHNbZnJvbV1bbXNnLnNlbmRlcl0gPj0gdmFsdWUpOwogICAgcmVxdWlyZShiYWxhbmNlc1tmcm9tXSA+PSB2YWx1ZSk7CgogICAgYmFsYW5jZXNbdG9dICs9IHZhbHVlOwogICAgYmFsYW5jZXNbZnJvbV0gLT0gdmFsdWU7CiAgICBhcHByb3ZhbHNbZnJvbV1bbXNnLnNlbmRlcl0gLT0gdmFsdWU7CiAgICBUcmFuc2Zlcihmcm9tLCB0bywgdmFsdWUpOwogICAgcmV0dXJuIHRydWU7CiAgfQp9CgoKY29udHJhY3QgUG9ydE1heW9yIGlzIE93bmFibGUsIEhhc05vRXRoZXIsIENhblJlY2xhaW1Ub2tlbiB7CgogIFBvcnRDb2luIGNvaW47CiAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpIHRpY2tldHM7CgogIGV2ZW50IEF0dGVuZChhZGRyZXNzIGluZGV4ZWQgYXR0ZW5kZWUsIHVpbnQyNTYgdGlja2V0LCBhZGRyZXNzIGluZGV4ZWQgZXZlbnRBZGRyZXNzKTsKICBldmVudCBFdmVudENyZWF0ZWQoYWRkcmVzcyBldmVudEFkZHJlc3MpOwoKICBmdW5jdGlvbiBQb3J0TWF5b3IoYWRkcmVzcyBwb3J0Q29pbkFkZHJlc3MpIHB1YmxpYyB7CiAgICBjb2luID0gUG9ydENvaW4ocG9ydENvaW5BZGRyZXNzKTsKICB9CgogIGZ1bmN0aW9uIGVsZWN0TmV3TWF5b3IoYWRkcmVzcyBuZXdNYXlvcikgb25seU93bmVyIHB1YmxpYyB7CiAgICBjb2luLmVsZWN0TmV3TWF5b3IobmV3TWF5b3IpOwogIH0KCiAgZnVuY3Rpb24gaXNFdmVudChhZGRyZXNzIGV2ZW50QWRkcmVzcykgdmlldyBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgcmV0dXJuIHRpY2tldHNbZXZlbnRBZGRyZXNzXSA+IDA7CiAgfQoKICBmdW5jdGlvbiBpc1ZhbGlkVGlja2V0KGFkZHJlc3MgZXZlbnRBZGRyZXNzLCB1aW50OCB0aWNrZXQpIHZpZXcgcHVibGljIHJldHVybnMgKGJvb2wpewogICAgcmV0dXJuICh0aWNrZXRzW2V2ZW50QWRkcmVzc10gJiAodWludDI1NigyKSAqKiB0aWNrZXQpKSA+IDA7CiAgfQoKICBmdW5jdGlvbiBjcmVhdGVFdmVudChhZGRyZXNzIGV2ZW50QWRkcmVzcykgb25seU93bmVyIHB1YmxpYyB7CiAgICB0aWNrZXRzW2V2ZW50QWRkcmVzc10gPSB1aW50MjU2KDApIC0gMTsgLy8gZmlsbCB3aXRoIDFzCiAgICBFdmVudENyZWF0ZWQoZXZlbnRBZGRyZXNzKTsKICB9CgogIGZ1bmN0aW9uIHN0cmluZ2lmeSh1aW50OCB2KSBwdWJsaWMgcHVyZSByZXR1cm5zIChzdHJpbmcgcmV0KSB7CiAgICBieXRlcyBtZW1vcnkgZGF0YSA9IG5ldyBieXRlcygzKTsKICAgIGRhdGFbMF0gPSBieXRlczEoNDggKyAodiAvIDEwMCkgJSAxMCk7CiAgICBkYXRhWzFdID0gYnl0ZXMxKDQ4ICsgKHYgLyAxMCkgJSAxMCk7CiAgICBkYXRhWzJdID0gYnl0ZXMxKDQ4ICsgdiAlIDEwKTsKICAgIHJldHVybiBzdHJpbmcoZGF0YSk7CiAgfQoKICBmdW5jdGlvbiBhdHRlbmQodWludDggdGlja2V0LCBieXRlczMyIHIsIGJ5dGVzMzIgcywgdWludDggdikgcHVibGljIHsKICAgIGFkZHJlc3MgZXZlbnRBZGRyZXNzID0gZWNyZWNvdmVyKGtlY2NhazI1NigiXHgxOUV0aGVyZXVtIFNpZ25lZCBNZXNzYWdlOlxuMyIsc3RyaW5naWZ5KHRpY2tldCkpLHYscixzKTsKICAgIHJlcXVpcmUoaXNWYWxpZFRpY2tldChldmVudEFkZHJlc3MsIHRpY2tldCkpOwogICAgdGlja2V0c1tldmVudEFkZHJlc3NdID0gdGlja2V0c1tldmVudEFkZHJlc3NdIF4gKHVpbnQyNTYoMikgKiogdGlja2V0KTsKICAgIGNvaW4uaXNzdWUobXNnLnNlbmRlciwgMSk7CiAgICBBdHRlbmQobXNnLnNlbmRlciwgdGlja2V0LCBldmVudEFkZHJlc3MpOwogIH0KCiAgZnVuY3Rpb24gaXNzdWUoYWRkcmVzcyB0bywgdWludCBxdWFudGl0eSkgcHVibGljIG9ubHlPd25lciB7CiAgICBjb2luLmlzc3VlKHRvLCBxdWFudGl0eSk7CiAgfQp9'.
	

]
