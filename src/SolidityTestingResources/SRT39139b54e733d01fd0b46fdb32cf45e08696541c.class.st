Class {
	#name : #SRT39139b54e733d01fd0b46fdb32cf45e08696541c,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT39139b54e733d01fd0b46fdb32cf45e08696541c >> base64 [
	^ ''.
	

]
