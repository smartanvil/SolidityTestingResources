Class {
	#name : #SRT09f12bec5a14ca52cce842d8b885664299ba5ac8,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT09f12bec5a14ca52cce842d8b885664299ba5ac8 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTM7CgovLyBFUkMyMCB0b2tlbiBpbnRlcmZhY2UgaXMgaW1wbGVtZW50ZWQgb25seSBwYXJ0aWFsbHkKLy8gKG5vIFNhZmVNYXRoIGlzIHVzZWQgYmVjYXVzZSBjb250cmFjdCBjb2RlIGlzIHZlcnkgc2ltcGxlKQovLyAKLy8gU29tZSBmdW5jdGlvbnMgbGVmdCB1bmRlZmluZWQ6Ci8vICAtIHRyYW5zZmVyLCB0cmFuc2ZlckZyb20sCi8vICAtIGFwcHJvdmUsIGFsbG93YW5jZS4KY29udHJhY3QgUHJlc2FsZVRva2VuCnsKLy8vIEZpZWxkczoKICAgIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgbmFtZSA9ICJSZW1lY2hhaW4gUHJlc2FsZSBUb2tlbiI7CiAgICBzdHJpbmcgcHVibGljIGNvbnN0YW50IHN5bWJvbCA9ICJSTUMiOwogICAgdWludCBwdWJsaWMgY29uc3RhbnQgZGVjaW1hbHMgPSAxODsKICAgIHVpbnQgcHVibGljIGNvbnN0YW50IFBSSUNFID0gMzIwOyAgLy8gcGVyIDEgRXRoZXIKCiAgICAvLyAgcHJpY2UKICAgIC8vIENhcCBpcyAxODc1IEVUSAogICAgLy8gMSBSTUMgPSAwLDAwMzFldGgKICAgIC8vIEVUSCBwcmljZSB+MjkwJCAtIDE4LjA4LjIwMTcKICAgIHVpbnQgcHVibGljIGNvbnN0YW50IFRPS0VOX1NVUFBMWV9MSU1JVCA9IFBSSUNFICogMTg3NSAqICgxIGV0aGVyIC8gMSB3ZWkpOwoKICAgIGVudW0gU3RhdGV7CiAgICAgICBJbml0LAogICAgICAgUnVubmluZywKICAgICAgIFBhdXNlZCwKICAgICAgIE1pZ3JhdGluZywKICAgICAgIE1pZ3JhdGVkCiAgICB9CgogICAgU3RhdGUgcHVibGljIGN1cnJlbnRTdGF0ZSA9IFN0YXRlLkluaXQ7CiAgICB1aW50IHB1YmxpYyB0b3RhbFN1cHBseSA9IDA7IC8vIGFtb3VudCBvZiB0b2tlbnMgYWxyZWFkeSBzb2xkCgogICAgLy8gR2F0aGVyZWQgZnVuZHMgY2FuIGJlIHdpdGhkcmF3biBvbmx5IHRvIGVzY3JvdydzIGFkZHJlc3MuCiAgICBhZGRyZXNzIHB1YmxpYyBlc2Nyb3cgPSAwOwoKICAgIC8vIFRva2VuIG1hbmFnZXIgaGFzIGV4Y2x1c2l2ZSBwcml2ZWxlZ2VzIHRvIGNhbGwgYWRtaW5pc3RyYXRpdmUKICAgIC8vIGZ1bmN0aW9ucyBvbiB0aGlzIGNvbnRyYWN0LgogICAgYWRkcmVzcyBwdWJsaWMgdG9rZW5NYW5hZ2VyID0gMDsKCiAgICAvLyBDcm93ZHNhbGUgbWFuYWdlciBoYXMgZXhjbHVzaXZlIHByaXZlbGVnZXMgdG8gYnVybiBwcmVzYWxlIHRva2Vucy4KICAgIGFkZHJlc3MgcHVibGljIGNyb3dkc2FsZU1hbmFnZXIgPSAwOwoKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHJpdmF0ZSBiYWxhbmNlOwoKc3RydWN0IFB1cmNoYXNlIHsKICAgICAgYWRkcmVzcyBidXllcjsKICAgICAgdWludCBhbW91bnQ7CiAgICB9CiAgIFB1cmNoYXNlW10gcHVyY2hhc2VzOwovLy8gTW9kaWZpZXJzOgogICAgbW9kaWZpZXIgb25seVRva2VuTWFuYWdlcigpICAgICB7IHJlcXVpcmUobXNnLnNlbmRlciA9PSB0b2tlbk1hbmFnZXIpOyBfO30KICAgIG1vZGlmaWVyIG9ubHlDcm93ZHNhbGVNYW5hZ2VyKCkgeyByZXF1aXJlKG1zZy5zZW5kZXIgPT0gY3Jvd2RzYWxlTWFuYWdlcik7IF87fQogICAgbW9kaWZpZXIgb25seUluU3RhdGUoU3RhdGUgc3RhdGUpeyByZXF1aXJlKHN0YXRlID09IGN1cnJlbnRTdGF0ZSk7IF87fQoKLy8vIEV2ZW50czoKICAgIGV2ZW50IExvZ0J1eShhZGRyZXNzIGluZGV4ZWQgb3duZXIsIHVpbnQgdmFsdWUpOwogICAgZXZlbnQgTG9nQnVybihhZGRyZXNzIGluZGV4ZWQgb3duZXIsIHVpbnQgdmFsdWUpOwogICAgZXZlbnQgTG9nU3RhdGVTd2l0Y2goU3RhdGUgbmV3U3RhdGUpOwoKLy8vIEZ1bmN0aW9uczoKICAgIC8vLyBAZGV2IENvbnN0cnVjdG9yCiAgICAvLy8gQHBhcmFtIF90b2tlbk1hbmFnZXIgVG9rZW4gbWFuYWdlciBhZGRyZXNzLgogICAgZnVuY3Rpb24gUHJlc2FsZVRva2VuKGFkZHJlc3MgX3Rva2VuTWFuYWdlciwgYWRkcmVzcyBfZXNjcm93KSAKICAgIHsKICAgICAgICByZXF1aXJlKF90b2tlbk1hbmFnZXIhPTApOwogICAgICAgIHJlcXVpcmUoX2VzY3JvdyE9MCk7CgogICAgICAgIHRva2VuTWFuYWdlciA9IF90b2tlbk1hbmFnZXI7CiAgICAgICAgZXNjcm93ID0gX2VzY3JvdzsKICAgIH0KCiAgICBmdW5jdGlvbiBidXlUb2tlbnMoYWRkcmVzcyBfYnV5ZXIpIHB1YmxpYyBwYXlhYmxlIG9ubHlJblN0YXRlKFN0YXRlLlJ1bm5pbmcpCiAgICB7CiAgICAgICAKICAgICAgICByZXF1aXJlKG1zZy52YWx1ZSAhPSAwKTsKICAgICAgICB1aW50IG5ld1Rva2VucyA9IG1zZy52YWx1ZSAqIFBSSUNFOwogICAgICAgCiAgICAgICAgcmVxdWlyZSghKHRvdGFsU3VwcGx5ICsgbmV3VG9rZW5zIDwgdG90YWxTdXBwbHkpKTsKICAgIAogICAgICAgIHJlcXVpcmUoISh0b3RhbFN1cHBseSArIG5ld1Rva2VucyA+IFRPS0VOX1NVUFBMWV9MSU1JVCkpOwoKICAgICAgICBiYWxhbmNlW19idXllcl0gKz0gbmV3VG9rZW5zOwogICAgICAgIHRvdGFsU3VwcGx5ICs9IG5ld1Rva2VuczsKCiAgICAgICAgcHVyY2hhc2VzW3B1cmNoYXNlcy5sZW5ndGgrK10gPSBQdXJjaGFzZSh7YnV5ZXI6IF9idXllciwgYW1vdW50OiBuZXdUb2tlbnN9KTsKCiAgICAgICAgTG9nQnV5KF9idXllciwgbmV3VG9rZW5zKTsKICAgIH0KCiAgICAvLy8gQGRldiBSZXR1cm5zIG51bWJlciBvZiB0b2tlbnMgb3duZWQgYnkgZ2l2ZW4gYWRkcmVzcy4KICAgIC8vLyBAcGFyYW0gX293bmVyIEFkZHJlc3Mgb2YgdG9rZW4gb3duZXIuCiAgICBmdW5jdGlvbiBidXJuVG9rZW5zKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgb25seUNyb3dkc2FsZU1hbmFnZXIgb25seUluU3RhdGUoU3RhdGUuTWlncmF0aW5nKQogICAgewogICAgICAgIHVpbnQgdG9rZW5zID0gYmFsYW5jZVtfb3duZXJdOwogICAgICAgIHJlcXVpcmUodG9rZW5zICE9IDApOwoKICAgICAgICBiYWxhbmNlW19vd25lcl0gPSAwOwogICAgICAgIHRvdGFsU3VwcGx5IC09IHRva2VuczsKCiAgICAgICAgTG9nQnVybihfb3duZXIsIHRva2Vucyk7CgogICAgICAgIC8vIEF1dG9tYXRpY2FsbHkgc3dpdGNoIHBoYXNlIHdoZW4gbWlncmF0aW9uIGlzIGRvbmUuCiAgICAgICAgaWYodG90YWxTdXBwbHkgPT0gMCkgCiAgICAgICAgewogICAgICAgICAgICBjdXJyZW50U3RhdGUgPSBTdGF0ZS5NaWdyYXRlZDsKICAgICAgICAgICAgTG9nU3RhdGVTd2l0Y2goU3RhdGUuTWlncmF0ZWQpOwogICAgICAgIH0KICAgIH0KCiAgICAvLy8gQGRldiBSZXR1cm5zIG51bWJlciBvZiB0b2tlbnMgb3duZWQgYnkgZ2l2ZW4gYWRkcmVzcy4KICAgIC8vLyBAcGFyYW0gX293bmVyIEFkZHJlc3Mgb2YgdG9rZW4gb3duZXIuCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIAogICAgewogICAgICAgIHJldHVybiBiYWxhbmNlW19vd25lcl07CiAgICB9CgogICAgZnVuY3Rpb24gc2V0UHJlc2FsZVN0YXRlKFN0YXRlIF9uZXh0U3RhdGUpIHB1YmxpYyBvbmx5VG9rZW5NYW5hZ2VyCiAgICB7CiAgICAgICAgLy8gSW5pdCAtPiBSdW5uaW5nCiAgICAgICAgLy8gUnVubmluZyAtPiBQYXVzZWQKICAgICAgICAvLyBSdW5uaW5nIC0+IE1pZ3JhdGluZwogICAgICAgIC8vIFBhdXNlZCAtPiBSdW5uaW5nCiAgICAgICAgLy8gUGF1c2VkIC0+IE1pZ3JhdGluZwogICAgICAgIC8vIE1pZ3JhdGluZyAtPiBNaWdyYXRlZAogICAgICAgIGJvb2wgY2FuU3dpdGNoU3RhdGUKICAgICAgICAgICAgID0gIChjdXJyZW50U3RhdGUgPT0gU3RhdGUuSW5pdCAmJiBfbmV4dFN0YXRlID09IFN0YXRlLlJ1bm5pbmcpCiAgICAgICAgICAgICB8fCAoY3VycmVudFN0YXRlID09IFN0YXRlLlJ1bm5pbmcgJiYgX25leHRTdGF0ZSA9PSBTdGF0ZS5QYXVzZWQpCiAgICAgICAgICAgICAvLyBzd2l0Y2ggdG8gbWlncmF0aW9uIHBoYXNlIG9ubHkgaWYgY3Jvd2RzYWxlIG1hbmFnZXIgaXMgc2V0CiAgICAgICAgICAgICB8fCAoKGN1cnJlbnRTdGF0ZSA9PSBTdGF0ZS5SdW5uaW5nIHx8IGN1cnJlbnRTdGF0ZSA9PSBTdGF0ZS5QYXVzZWQpCiAgICAgICAgICAgICAgICAgJiYgX25leHRTdGF0ZSA9PSBTdGF0ZS5NaWdyYXRpbmcKICAgICAgICAgICAgICAgICAmJiBjcm93ZHNhbGVNYW5hZ2VyICE9IDB4MCkKICAgICAgICAgICAgIHx8IChjdXJyZW50U3RhdGUgPT0gU3RhdGUuUGF1c2VkICYmIF9uZXh0U3RhdGUgPT0gU3RhdGUuUnVubmluZykKICAgICAgICAgICAgIC8vIHN3aXRjaCB0byBtaWdyYXRlZCBvbmx5IGlmIGV2ZXJ5dGluZyBpcyBtaWdyYXRlZAogICAgICAgICAgICAgfHwgKGN1cnJlbnRTdGF0ZSA9PSBTdGF0ZS5NaWdyYXRpbmcgJiYgX25leHRTdGF0ZSA9PSBTdGF0ZS5NaWdyYXRlZAogICAgICAgICAgICAgICAgICYmIHRvdGFsU3VwcGx5ID09IDApOwoKICAgICAgICByZXF1aXJlKGNhblN3aXRjaFN0YXRlKTsKCiAgICAgICAgY3VycmVudFN0YXRlID0gX25leHRTdGF0ZTsKICAgICAgICBMb2dTdGF0ZVN3aXRjaChfbmV4dFN0YXRlKTsKICAgIH0KCiAgICBmdW5jdGlvbiB3aXRoZHJhd0V0aGVyKCkgcHVibGljIG9ubHlUb2tlbk1hbmFnZXIKICAgIHsKICAgICAgICBpZih0aGlzLmJhbGFuY2UgPiAwKSAKICAgICAgICB7CiAgICAgICAgICAgIHJlcXVpcmUoZXNjcm93LnNlbmQodGhpcy5iYWxhbmNlKSk7CiAgICAgICAgfQogICAgfQoKLy8vIFNldHRlcnMvZ2V0dGVycwogICAgZnVuY3Rpb24gc2V0VG9rZW5NYW5hZ2VyKGFkZHJlc3MgX21ncikgcHVibGljIG9ubHlUb2tlbk1hbmFnZXIKICAgIHsKICAgICAgICB0b2tlbk1hbmFnZXIgPSBfbWdyOwogICAgfQoKICAgIGZ1bmN0aW9uIHNldENyb3dkc2FsZU1hbmFnZXIoYWRkcmVzcyBfbWdyKSBwdWJsaWMgb25seVRva2VuTWFuYWdlcgogICAgewogICAgICAgIC8vIFlvdSBjYW4ndCBjaGFuZ2UgY3Jvd2RzYWxlIGNvbnRyYWN0IHdoZW4gbWlncmF0aW9uIGlzIGluIHByb2dyZXNzLgogICAgICAgIHJlcXVpcmUoY3VycmVudFN0YXRlICE9IFN0YXRlLk1pZ3JhdGluZyk7CgogICAgICAgIGNyb3dkc2FsZU1hbmFnZXIgPSBfbWdyOwogICAgfQoKICAgIGZ1bmN0aW9uIGdldFRva2VuTWFuYWdlcigpY29uc3RhbnQgcmV0dXJucyhhZGRyZXNzKQogICAgewogICAgICAgIHJldHVybiB0b2tlbk1hbmFnZXI7CiAgICB9CgogICAgZnVuY3Rpb24gZ2V0Q3Jvd2RzYWxlTWFuYWdlcigpY29uc3RhbnQgcmV0dXJucyhhZGRyZXNzKQogICAgewogICAgICAgIHJldHVybiBjcm93ZHNhbGVNYW5hZ2VyOwogICAgfQoKICAgIGZ1bmN0aW9uIGdldEN1cnJlbnRTdGF0ZSgpY29uc3RhbnQgcmV0dXJucyhTdGF0ZSkKICAgIHsKICAgICAgICByZXR1cm4gY3VycmVudFN0YXRlOwogICAgfQoKICAgIGZ1bmN0aW9uIGdldFByaWNlKCljb25zdGFudCByZXR1cm5zKHVpbnQpCiAgICB7CiAgICAgICAgcmV0dXJuIFBSSUNFOwogICAgfQoKICAgIGZ1bmN0aW9uIGdldFRvdGFsU3VwcGx5KCljb25zdGFudCByZXR1cm5zKHVpbnQpCiAgICB7CiAgICAgICAgcmV0dXJuIHRvdGFsU3VwcGx5OwogICAgfQogICAgZnVuY3Rpb24gZ2V0TnVtYmVyT2ZQdXJjaGFzZXMoKWNvbnN0YW50IHJldHVybnModWludCkgewogICAgICAgIHJldHVybiBwdXJjaGFzZXMubGVuZ3RoOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBnZXRQdXJjaGFzZUFkZHJlc3ModWludCBpbmRleCljb25zdGFudCByZXR1cm5zKGFkZHJlc3MpIHsKICAgICAgICByZXR1cm4gcHVyY2hhc2VzW2luZGV4XS5idXllcjsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gZ2V0UHVyY2hhc2VBbW91bnQodWludCBpbmRleCljb25zdGFudCByZXR1cm5zKHVpbnQpIHsKICAgICAgICByZXR1cm4gcHVyY2hhc2VzW2luZGV4XS5hbW91bnQ7CiAgICB9CiAgICAvLyBEZWZhdWx0IGZhbGxiYWNrIGZ1bmN0aW9uCiAgICBmdW5jdGlvbigpIHBheWFibGUgCiAgICB7CiAgICAgICAgYnV5VG9rZW5zKG1zZy5zZW5kZXIpOwogICAgfQp9'.
	

]
