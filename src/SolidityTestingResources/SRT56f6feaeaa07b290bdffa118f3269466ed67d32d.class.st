Class {
	#name : #SRT56f6feaeaa07b290bdffa118f3269466ed67d32d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT56f6feaeaa07b290bdffa118f3269466ed67d32d >> base64 [
	^ ''.
	

]
