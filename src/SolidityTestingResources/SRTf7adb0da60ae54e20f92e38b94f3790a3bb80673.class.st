Class {
	#name : #SRTf7adb0da60ae54e20f92e38b94f3790a3bb80673,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTf7adb0da60ae54e20f92e38b94f3790a3bb80673 >> base64 [
	^ ''.
	

]
