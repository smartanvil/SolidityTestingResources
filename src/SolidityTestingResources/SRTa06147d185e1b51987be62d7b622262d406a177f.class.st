Class {
	#name : #SRTa06147d185e1b51987be62d7b622262d406a177f,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTa06147d185e1b51987be62d7b622262d406a177f >> base64 [
	^ ''.
	

]
