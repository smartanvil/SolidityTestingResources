Class {
	#name : #SRT57d7584c6e720c1098e1721982c04d1fd3f5bc83,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT57d7584c6e720c1098e1721982c04d1fd3f5bc83 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7CgppbnRlcmZhY2UgRVJDMjAgewogIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBmcm9tLCBhZGRyZXNzIGluZGV4ZWQgdG8sIHVpbnQyNTYgdmFsdWUpOwogIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBvd25lciwgYWRkcmVzcyBpbmRleGVkIHNwZW5kZXIsIHVpbnQyNTYgdmFsdWUpOwoKICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBvd25lcikgZXh0ZXJuYWwgdmlldyByZXR1cm5zICh1aW50MjU2KTsKICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBvd25lciwgYWRkcmVzcyBzcGVuZGVyKSBleHRlcm5hbCB2aWV3IHJldHVybnMgKHVpbnQyNTYpOwogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sIHVpbnQyNTYgdmFsdWUpIGV4dGVybmFsIHJldHVybnMgKGJvb2wpOwogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIGZyb20sIGFkZHJlc3MgdG8sIHVpbnQyNTYgdmFsdWUpIGV4dGVybmFsIHJldHVybnMgKGJvb2wpOwogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBzcGVuZGVyLCB1aW50MjU2IHZhbHVlKSBleHRlcm5hbCByZXR1cm5zIChib29sKTsKfQoKbGlicmFyeSBNYXRoIHsKICBzdHJ1Y3QgRnJhY3Rpb24gewogICAgdWludDI1NiBudW1lcmF0b3I7CiAgICB1aW50MjU2IGRlbm9taW5hdG9yOwogIH0KCiAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYgcikgewogICAgciA9IGEgKiBiOwogICAgcmVxdWlyZSgoYSA9PSAwKSB8fCAociAvIGEgPT0gYikpOwogIH0KCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYgcikgewogICAgciA9IGEgLyBiOwogIH0KCiAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYgcikgewogICAgcmVxdWlyZSgociA9IGEgLSBiKSA8PSBhKTsKICB9CgogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2IHIpIHsKICAgIHJlcXVpcmUoKHIgPSBhICsgYikgPj0gYSk7CiAgfQoKICBmdW5jdGlvbiBtaW4odWludDI1NiB4LCB1aW50MjU2IHkpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NiByKSB7CiAgICByZXR1cm4geCA8PSB5ID8geCA6IHk7CiAgfQoKICBmdW5jdGlvbiBtYXgodWludDI1NiB4LCB1aW50MjU2IHkpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NiByKSB7CiAgICByZXR1cm4geCA+PSB5ID8geCA6IHk7CiAgfQoKICBmdW5jdGlvbiBtdWxEaXYodWludDI1NiB2YWx1ZSwgdWludDI1NiBtLCB1aW50MjU2IGQpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludDI1NiByKSB7CiAgICAvLyBmYXN0IHBhdGgKICAgIGlmICh2YWx1ZSA9PSAwIHx8IG0gPT0gMCkgewogICAgICByZXR1cm4gMDsKICAgIH0KCiAgICAvLyB0cnkgbXVsCiAgICByID0gdmFsdWUgKiBtOwogICAgLy8gaWYgbXVsIG5vdCBvdmVyZmxvdwogICAgaWYgKHIgLyB2YWx1ZSA9PSBtKSB7CiAgICAgIHIgLz0gZDsKICAgIH0gZWxzZSB7CiAgICAgIC8vIGVsc2UgLyBmaXJzdAogICAgICByID0gbXVsKHZhbHVlIC8gZCwgbSk7CiAgICB9CiAgfQoKICBmdW5jdGlvbiBtdWwodWludDI1NiB4LCBGcmFjdGlvbiBtZW1vcnkgZikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICByZXR1cm4gbXVsRGl2KHgsIGYubnVtZXJhdG9yLCBmLmRlbm9taW5hdG9yKTsKICB9CgogIGZ1bmN0aW9uIGRpdih1aW50MjU2IHgsIEZyYWN0aW9uIG1lbW9yeSBmKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHJldHVybiBtdWxEaXYoeCwgZi5kZW5vbWluYXRvciwgZi5udW1lcmF0b3IpOwogIH0KfQoKY29udHJhY3QgUHJpdmF0ZVNhbGVNYWNhdSB7CgogIHVzaW5nIE1hdGggZm9yIHVpbnQyNTY7CgogIHN0cnVjdCBJbmZvIHsKICAgIHVpbnQyNTYgd2VpUGFpZDsKICAgIHVpbnQyNTYgZnN0VmVzdGVkOwogIH0KCiAgZXZlbnQgQnV5RlNUKGFkZHJlc3MgaW5kZXhlZCB1c2VyLCB1aW50MjU2IGZzdFZhbHVlLCB1aW50MjU2IHdlaVZhbHVlLCB1aW50MjU2IHRpbWVzdGFtcCk7CiAgZXZlbnQgUmVsZWFzZShhZGRyZXNzIGluZGV4ZWQgdXNlciwgdWludDI1NiB2YWx1ZSk7CiAgZXZlbnQgUmVmdW5kKGFkZHJlc3MgaW5kZXhlZCB1c2VyLCB1aW50MjU2IHZhbHVlKTsKICBldmVudCBDb2xsZWN0KHVpbnQyNTYgd2VpQW1vdW50LCB1aW50MjU2IGZzdEFtb3VudCk7CgogIC8vIDMzME0gRlNUCiAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgZnN0VG90YWxTdXBwbHkgPSAzMzAwMDAwMDAgKiAoMTAgKiogMTgpOwoKICAvLyA1JQogIHVpbnQyNTYgcHVibGljIGNvbnN0YW50IGZzdFByaXZhdGVTYWxlUG9ydGlvbk51bWVyYXRvciAgID0gNTsKICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCBmc3RQcml2YXRlU2FsZVBvcnRpb25EZW5vbWluYXRvciA9IDEwMDsKCiAgLy8gMSBFVEggPSAzNjAwIEZTVCBpbiBwcml2YXRlIHNhbGUKICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCBmc3RVbml0UHJpY2VOdW1lcmF0b3IgICA9IDE7CiAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgZnN0VW5pdFByaWNlRGVub21pbmF0b3IgPSAzNjAwOwoKICAvLyA1JSBvZiAzMzBNIEZTVAogIHVpbnQyNTYgcHVibGljIGNvbnN0YW50IHNhbGVDYXAgPQogICAgZnN0VG90YWxTdXBwbHkgKiBmc3RQcml2YXRlU2FsZVBvcnRpb25OdW1lcmF0b3IgLyBmc3RQcml2YXRlU2FsZVBvcnRpb25EZW5vbWluYXRvcjsKCiAgLy8gbWluaW11bSB3ZWkgdmFsdWUgPSAxMCBldGhlcgogIHVpbnQyNTYgcHVibGljIGNvbnN0YW50IG1pbldlaVZhbHVlID0gMTAgZXRoZXI7CgogIC8vIHN0YXJ0IHRpbWUsIGVuZCB0aW1lCiAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgc3RhcnRUaW1lID0gMTUxNTgzNzYwMDsgLy8gU2F0dXJkYXksIEphbnVhcnkgMTMsIDIwMTggNjowMDowMCBQTSBHTVQrMDg6MDAKICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCBlbmRUaW1lICAgPSAxNTE2MjY5NjAwOyAvLyBUaHVyc2RheSwgSmFudWFyeSAxOCwgMjAxOCA2OjAwOjAwIFBNIEdNVCswODowMAoKICAvLyBwcml2YXRlIHNhbGUgcHJvZ3Jlc3MKICB1aW50MjU2IHB1YmxpYyBmc3RTb2xkICAgICA9IDA7CiAgdWludDI1NiBwdWJsaWMgd2VpUmVjZWl2ZWQgPSAwOwogIHVpbnQyNTYgcHVibGljIHdlaUxpcXVpZCAgID0gMDsKICB1aW50MjU2IHB1YmxpYyB3ZWlSZWZ1bmQgICA9IDA7CgogIG1hcHBpbmcgKGFkZHJlc3MgPT4gSW5mbykgcHVibGljIHVzZXJzOwoKICAvLyBGdW5kZXIgU21hcnQgVG9rZW4KICBFUkMyMCBwdWJsaWMgdG9rZW47CgogIC8vIG1hbmFnZXIKICBhZGRyZXNzIHB1YmxpYyBtYW5hZ2VyOwoKICBmdW5jdGlvbiBQcml2YXRlU2FsZU1hY2F1IChFUkMyMCBfdG9rZW4pIHB1YmxpYyB7CiAgICB0b2tlbiAgID0gX3Rva2VuOwogICAgbWFuYWdlciA9IG1zZy5zZW5kZXI7CiAgfQoKICBmdW5jdGlvbiBidXkgKCkgcGF5YWJsZSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgcmVxdWlyZSgKICAgICAgbWluV2VpVmFsdWUgICAgIDw9IG1zZy52YWx1ZSAmJgogICAgICBmc3RTb2xkICAgICAgICAgPCAgc2FsZUNhcCAgICYmCiAgICAgIGJsb2NrLnRpbWVzdGFtcCA+PSBzdGFydFRpbWUgJiYKICAgICAgYmxvY2sudGltZXN0YW1wIDwgIGVuZFRpbWUKICAgICk7CgogICAgdWludDI1NiBldGggPSBtc2cudmFsdWU7CiAgICB1aW50MjU2IGZzdCA9IGV0aC5tdWwoZnN0VW5pdFByaWNlRGVub21pbmF0b3IpLmRpdihmc3RVbml0UHJpY2VOdW1lcmF0b3IpOwoKICAgIHVpbnQyNTYgZnN0QXZhaWxhYmxlID0gc2FsZUNhcCAtIGZzdFNvbGQ7CiAgICBpZiAoZnN0ID4gZnN0QXZhaWxhYmxlKSB7CiAgICAgIHVpbnQyNTYgcmVmdW5kID0gKGZzdCAtIGZzdEF2YWlsYWJsZSkubXVsKGZzdFVuaXRQcmljZU51bWVyYXRvcikuZGl2KGZzdFVuaXRQcmljZURlbm9taW5hdG9yKTsKICAgICAgbXNnLnNlbmRlci50cmFuc2ZlcihyZWZ1bmQpOyAvLyAyMzAwIGdhcyBvbmx5CiAgICAgIGV0aCAtPSByZWZ1bmQ7CiAgICAgIGZzdCA9IGZzdEF2YWlsYWJsZTsKICAgIH0KCiAgICBJbmZvIHN0b3JhZ2UgdXNlciA9IHVzZXJzW21zZy5zZW5kZXJdOwogICAgdXNlci53ZWlQYWlkICs9IGV0aDsKICAgIHVzZXIuZnN0VmVzdGVkICs9IGZzdDsKICAgIHdlaVJlY2VpdmVkICs9IGV0aDsKICAgIGZzdFNvbGQgKz0gZnN0OwoKICAgIEJ1eUZTVChtc2cuc2VuZGVyLCBmc3QsIGV0aCwgYmxvY2sudGltZXN0YW1wKTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgZnVuY3Rpb24gKCkgcGF5YWJsZSBwdWJsaWMgewogICAgcmVxdWlyZShidXkoKSk7CiAgfQoKICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcCAoYWRkcmVzcyBfdG8pIHB1YmxpYyByZXR1cm5zIChib29sKSB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gbWFuYWdlcik7CiAgICBtYW5hZ2VyID0gX3RvOwogICAgcmV0dXJuIHRydWU7CiAgfQoKICAvLyBvbiBreWMgcmVzdWx0CiAgZnVuY3Rpb24gcHJvY2Vzc1B1cmNoYXNlKHVpbnQyNTZbXSByZXN1bHRzKSBwdWJsaWMgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG1hbmFnZXIpOwoKICAgIGZvciAodWludDI1NiBpID0gMDsgaSA8IHJlc3VsdHMubGVuZ3RoOyBpKyspIHsKICAgICAgYWRkcmVzcyB1c2VyQWRkcmVzcyA9IGFkZHJlc3MocmVzdWx0c1tpXSA+PiA5Nik7CiAgICAgIEluZm8gc3RvcmFnZSB1c2VyID0gdXNlcnNbdXNlckFkZHJlc3NdOwogICAgICByZXF1aXJlKHVzZXIud2VpUGFpZCA+IDApOwoKICAgICAgLy8ga3ljIHN1Y2Nlc3MKICAgICAgaWYgKChyZXN1bHRzW2ldICYgMHgxKSA9PSAxKSB7CiAgICAgICAgd2VpTGlxdWlkICs9IHVzZXIud2VpUGFpZDsKICAgICAgICB0b2tlbi50cmFuc2Zlcih1c2VyQWRkcmVzcywgdXNlci5mc3RWZXN0ZWQpOwogICAgICAgIFJlbGVhc2UobXNnLnNlbmRlciwgdXNlci5mc3RWZXN0ZWQpOwogICAgICB9IGVsc2UgewogICAgICAgIGZzdFNvbGQgLT0gdXNlci5mc3RWZXN0ZWQ7CiAgICAgICAgd2VpUmVmdW5kICs9IHVzZXIud2VpUGFpZDsKICAgICAgICB1c2VyQWRkcmVzcy50cmFuc2Zlcih1c2VyLndlaVBhaWQpOwogICAgICAgIFJlZnVuZChtc2cuc2VuZGVyLCB1c2VyLndlaVBhaWQpOwogICAgICB9CgogICAgICBkZWxldGUgdXNlcnNbdXNlckFkZHJlc3NdOwogICAgfQogIH0KCiAgZnVuY3Rpb24gZmluYWxpemUoKSBwdWJsaWMgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG1hbmFnZXIgJiYgYmxvY2sudGltZXN0YW1wID49IGVuZFRpbWUpOwoKICAgIHVpbnQyNTYgd2VpVmVzdGVkID0gd2VpUmVjZWl2ZWQgLSB3ZWlMaXF1aWQgLSB3ZWlSZWZ1bmQ7CiAgICB1aW50MjU2IHdlaUF2YWlsYWJsZSA9IHRoaXMuYmFsYW5jZSAtIHdlaVZlc3RlZDsKICAgIGlmICh3ZWlBdmFpbGFibGUgPiAwKSB7CiAgICAgIG1zZy5zZW5kZXIudHJhbnNmZXIod2VpQXZhaWxhYmxlKTsKICAgIH0KCiAgICB1aW50MjU2IHRva2VuQXZhaWxhYmxlID0gdG9rZW4uYmFsYW5jZU9mKHRoaXMpOwogICAgaWYgKHRva2VuQXZhaWxhYmxlID4gMCkgewogICAgICB0b2tlbi50cmFuc2Zlcihtc2cuc2VuZGVyLCB0b2tlbkF2YWlsYWJsZSk7ICAgICAgCiAgICB9CiAgICAKICAgIENvbGxlY3Qod2VpQXZhaWxhYmxlLCB0b2tlbkF2YWlsYWJsZSk7CiAgfQp9'.
	

]
