Class {
	#name : #SRTde6aaee892703f587447aba3bc43e001966c01fc,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTde6aaee892703f587447aba3bc43e001966c01fc >> base64 [
	^ ''.
	

]
