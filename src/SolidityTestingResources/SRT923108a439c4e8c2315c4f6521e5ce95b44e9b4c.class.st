Class {
	#name : #SRT923108a439c4e8c2315c4f6521e5ce95b44e9b4c,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT923108a439c4e8c2315c4f6521e5ce95b44e9b4c >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgovLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCi8vIEVSQyBUb2tlbiBTdGFuZGFyZCAjMjAgSW50ZXJmYWNlCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2Jsb2IvbWFzdGVyL0VJUFMvZWlwLTIwLXRva2VuLXN0YW5kYXJkLm1kCi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KY29udHJhY3QgRVJDMjBJbnRlcmZhY2UgewogICAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludCk7CiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyB0b2tlbk93bmVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludCBiYWxhbmNlKTsKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIHRva2VuT3duZXIsIGFkZHJlc3Mgc3BlbmRlcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQgcmVtYWluaW5nKTsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sIHVpbnQgdG9rZW5zKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBzcGVuZGVyLCB1aW50IHRva2VucykgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvLCB1aW50IHRva2VucykgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CgogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludCB0b2tlbnMpOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIHRva2VuT3duZXIsIGFkZHJlc3MgaW5kZXhlZCBzcGVuZGVyLCB1aW50IHRva2Vucyk7Cn0KCgovLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCi8vIENvbnRyYWN0cyB0aGF0IGNhbiBoYXZlIHRva2VucyBhcHByb3ZlZCwgYW5kIHRoZW4gYSBmdW5jdGlvbiBleGVjdXRlCi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KY29udHJhY3QgQXBwcm92ZUFuZENhbGxGYWxsQmFjayB7CiAgICBmdW5jdGlvbiByZWNlaXZlQXBwcm92YWwoYWRkcmVzcyBmcm9tLCB1aW50MjU2IHRva2VucywgYWRkcmVzcyB0b2tlbiwgYnl0ZXMgZGF0YSkgcHVibGljOwp9CgoKLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQovLyBCb2treVBvb0JhaCdzIFRva2VuIFRlbGVwb3J0YXRpb24gU2VydmljZSBJbnRlcmZhY2UgdjEuMDAKLy8KLy8gRW5qb3kuIChjKSBCb2treVBvb0JhaCAvIEJvayBDb25zdWx0aW5nIFB0eSBMdGQgMjAxNy4gVGhlIE1JVCBMaWNlbmNlLgovLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCmNvbnRyYWN0IEJUVFNUb2tlbkludGVyZmFjZSBpcyBFUkMyMEludGVyZmFjZSB7CiAgICB1aW50IHB1YmxpYyBjb25zdGFudCBidHRzVmVyc2lvbiA9IDEwMDsKCiAgICBieXRlcyBwdWJsaWMgY29uc3RhbnQgc2lnbmluZ1ByZWZpeCA9ICJceDE5RXRoZXJldW0gU2lnbmVkIE1lc3NhZ2U6XG4zMiI7CiAgICBieXRlczQgcHVibGljIGNvbnN0YW50IHNpZ25lZFRyYW5zZmVyU2lnID0gIlx4NzVceDMyXHhlYVx4YWMiOwogICAgYnl0ZXM0IHB1YmxpYyBjb25zdGFudCBzaWduZWRBcHByb3ZlU2lnID0gIlx4ZTlceGFmXHhhN1x4YTEiOwogICAgYnl0ZXM0IHB1YmxpYyBjb25zdGFudCBzaWduZWRUcmFuc2ZlckZyb21TaWcgPSAiXHgzNFx4NGJceGNjXHg3ZCI7CiAgICBieXRlczQgcHVibGljIGNvbnN0YW50IHNpZ25lZEFwcHJvdmVBbmRDYWxsU2lnID0gIlx4ZjFceDZmXHg5Ylx4NTMiOwoKICAgIGV2ZW50IE93bmVyc2hpcFRyYW5zZmVycmVkKGFkZHJlc3MgaW5kZXhlZCBmcm9tLCBhZGRyZXNzIGluZGV4ZWQgdG8pOwogICAgZXZlbnQgTWludGVyVXBkYXRlZChhZGRyZXNzIGZyb20sIGFkZHJlc3MgdG8pOwogICAgZXZlbnQgTWludChhZGRyZXNzIGluZGV4ZWQgdG9rZW5Pd25lciwgdWludCB0b2tlbnMsIGJvb2wgbG9ja0FjY291bnQpOwogICAgZXZlbnQgTWludGluZ0Rpc2FibGVkKCk7CiAgICBldmVudCBUcmFuc2ZlcnNFbmFibGVkKCk7CiAgICBldmVudCBBY2NvdW50VW5sb2NrZWQoYWRkcmVzcyBpbmRleGVkIHRva2VuT3duZXIpOwoKICAgIGZ1bmN0aW9uIGFwcHJvdmVBbmRDYWxsKGFkZHJlc3Mgc3BlbmRlciwgdWludCB0b2tlbnMsIGJ5dGVzIGRhdGEpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwoKICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgLy8gc2lnbmVke1h9IGZ1bmN0aW9ucwogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICBmdW5jdGlvbiBzaWduZWRUcmFuc2Zlckhhc2goYWRkcmVzcyB0b2tlbk93bmVyLCBhZGRyZXNzIHRvLCB1aW50IHRva2VucywgdWludCBmZWUsIHVpbnQgbm9uY2UpIHB1YmxpYyB2aWV3IHJldHVybnMgKGJ5dGVzMzIgaGFzaCk7CiAgICBmdW5jdGlvbiBzaWduZWRUcmFuc2ZlckNoZWNrKGFkZHJlc3MgdG9rZW5Pd25lciwgYWRkcmVzcyB0bywgdWludCB0b2tlbnMsIHVpbnQgZmVlLCB1aW50IG5vbmNlLCBieXRlcyBzaWcsIGFkZHJlc3MgZmVlQWNjb3VudCkgcHVibGljIHZpZXcgcmV0dXJucyAoQ2hlY2tSZXN1bHQgcmVzdWx0KTsKICAgIGZ1bmN0aW9uIHNpZ25lZFRyYW5zZmVyKGFkZHJlc3MgdG9rZW5Pd25lciwgYWRkcmVzcyB0bywgdWludCB0b2tlbnMsIHVpbnQgZmVlLCB1aW50IG5vbmNlLCBieXRlcyBzaWcsIGFkZHJlc3MgZmVlQWNjb3VudCkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CgogICAgZnVuY3Rpb24gc2lnbmVkQXBwcm92ZUhhc2goYWRkcmVzcyB0b2tlbk93bmVyLCBhZGRyZXNzIHNwZW5kZXIsIHVpbnQgdG9rZW5zLCB1aW50IGZlZSwgdWludCBub25jZSkgcHVibGljIHZpZXcgcmV0dXJucyAoYnl0ZXMzMiBoYXNoKTsKICAgIGZ1bmN0aW9uIHNpZ25lZEFwcHJvdmVDaGVjayhhZGRyZXNzIHRva2VuT3duZXIsIGFkZHJlc3Mgc3BlbmRlciwgdWludCB0b2tlbnMsIHVpbnQgZmVlLCB1aW50IG5vbmNlLCBieXRlcyBzaWcsIGFkZHJlc3MgZmVlQWNjb3VudCkgcHVibGljIHZpZXcgcmV0dXJucyAoQ2hlY2tSZXN1bHQgcmVzdWx0KTsKICAgIGZ1bmN0aW9uIHNpZ25lZEFwcHJvdmUoYWRkcmVzcyB0b2tlbk93bmVyLCBhZGRyZXNzIHNwZW5kZXIsIHVpbnQgdG9rZW5zLCB1aW50IGZlZSwgdWludCBub25jZSwgYnl0ZXMgc2lnLCBhZGRyZXNzIGZlZUFjY291bnQpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwoKICAgIGZ1bmN0aW9uIHNpZ25lZFRyYW5zZmVyRnJvbUhhc2goYWRkcmVzcyBzcGVuZGVyLCBhZGRyZXNzIGZyb20sIGFkZHJlc3MgdG8sIHVpbnQgdG9rZW5zLCB1aW50IGZlZSwgdWludCBub25jZSkgcHVibGljIHZpZXcgcmV0dXJucyAoYnl0ZXMzMiBoYXNoKTsKICAgIGZ1bmN0aW9uIHNpZ25lZFRyYW5zZmVyRnJvbUNoZWNrKGFkZHJlc3Mgc3BlbmRlciwgYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvLCB1aW50IHRva2VucywgdWludCBmZWUsIHVpbnQgbm9uY2UsIGJ5dGVzIHNpZywgYWRkcmVzcyBmZWVBY2NvdW50KSBwdWJsaWMgdmlldyByZXR1cm5zIChDaGVja1Jlc3VsdCByZXN1bHQpOwogICAgZnVuY3Rpb24gc2lnbmVkVHJhbnNmZXJGcm9tKGFkZHJlc3Mgc3BlbmRlciwgYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvLCB1aW50IHRva2VucywgdWludCBmZWUsIHVpbnQgbm9uY2UsIGJ5dGVzIHNpZywgYWRkcmVzcyBmZWVBY2NvdW50KSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKCiAgICBmdW5jdGlvbiBzaWduZWRBcHByb3ZlQW5kQ2FsbEhhc2goYWRkcmVzcyB0b2tlbk93bmVyLCBhZGRyZXNzIHNwZW5kZXIsIHVpbnQgdG9rZW5zLCBieXRlcyBfZGF0YSwgdWludCBmZWUsIHVpbnQgbm9uY2UpIHB1YmxpYyB2aWV3IHJldHVybnMgKGJ5dGVzMzIgaGFzaCk7CiAgICBmdW5jdGlvbiBzaWduZWRBcHByb3ZlQW5kQ2FsbENoZWNrKGFkZHJlc3MgdG9rZW5Pd25lciwgYWRkcmVzcyBzcGVuZGVyLCB1aW50IHRva2VucywgYnl0ZXMgX2RhdGEsIHVpbnQgZmVlLCB1aW50IG5vbmNlLCBieXRlcyBzaWcsIGFkZHJlc3MgZmVlQWNjb3VudCkgcHVibGljIHZpZXcgcmV0dXJucyAoQ2hlY2tSZXN1bHQgcmVzdWx0KTsKICAgIGZ1bmN0aW9uIHNpZ25lZEFwcHJvdmVBbmRDYWxsKGFkZHJlc3MgdG9rZW5Pd25lciwgYWRkcmVzcyBzcGVuZGVyLCB1aW50IHRva2VucywgYnl0ZXMgX2RhdGEsIHVpbnQgZmVlLCB1aW50IG5vbmNlLCBieXRlcyBzaWcsIGFkZHJlc3MgZmVlQWNjb3VudCkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CgogICAgZnVuY3Rpb24gbWludChhZGRyZXNzIHRva2VuT3duZXIsIHVpbnQgdG9rZW5zLCBib29sIGxvY2tBY2NvdW50KSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICAgIGZ1bmN0aW9uIHVubG9ja0FjY291bnQoYWRkcmVzcyB0b2tlbk93bmVyKSBwdWJsaWM7CiAgICBmdW5jdGlvbiBkaXNhYmxlTWludGluZygpIHB1YmxpYzsKICAgIGZ1bmN0aW9uIGVuYWJsZVRyYW5zZmVycygpIHB1YmxpYzsKCiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIC8vIHNpZ25lZHtYfUNoZWNrIHJldHVybiBzdGF0dXMKICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgZW51bSBDaGVja1Jlc3VsdCB7CiAgICAgICAgU3VjY2VzcywgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAwIFN1Y2Nlc3MKICAgICAgICBOb3RUcmFuc2ZlcmFibGUsICAgICAgICAgICAgICAgICAgIC8vIDEgVG9rZW5zIG5vdCB0cmFuc2ZlcmFibGUgeWV0CiAgICAgICAgQWNjb3VudExvY2tlZCwgICAgICAgICAgICAgICAgICAgICAvLyAyIEFjY291bnQgbG9ja2VkCiAgICAgICAgU2lnbmVyTWlzbWF0Y2gsICAgICAgICAgICAgICAgICAgICAvLyAzIE1pc21hdGNoIGluIHNpZ25pbmcgYWNjb3VudAogICAgICAgIEFscmVhZHlFeGVjdXRlZCwgICAgICAgICAgICAgICAgICAgLy8gNCBUcmFuc2ZlciBhbHJlYWR5IGV4ZWN1dGVkCiAgICAgICAgSW5zdWZmaWNpZW50QXBwcm92ZWRUb2tlbnMsICAgICAgICAvLyA1IEluc3VmZmljaWVudCBhcHByb3ZlZCB0b2tlbnMKICAgICAgICBJbnN1ZmZpY2llbnRBcHByb3ZlZFRva2Vuc0ZvckZlZXMsIC8vIDYgSW5zdWZmaWNpZW50IGFwcHJvdmVkIHRva2VucyBmb3IgZmVlcwogICAgICAgIEluc3VmZmljaWVudFRva2VucywgICAgICAgICAgICAgICAgLy8gNyBJbnN1ZmZpY2llbnQgdG9rZW5zCiAgICAgICAgSW5zdWZmaWNpZW50VG9rZW5zRm9yRmVlcywgICAgICAgICAvLyA4IEluc3VmZmljaWVudCB0b2tlbnMgZm9yIGZlZXMKICAgICAgICBPdmVyZmxvd0Vycm9yICAgICAgICAgICAgICAgICAgICAgIC8vIDkgT3ZlcmZsb3cgZXJyb3IKICAgIH0KfQoKCi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KLy8gQm9ra3lQb29CYWgncyBUb2tlbiBUZWxlcG9ydGF0aW9uIFNlcnZpY2UgTGlicmFyeSB2MS4wMAovLwovLyBFbmpveS4gKGMpIEJva2t5UG9vQmFoIC8gQm9rIENvbnN1bHRpbmcgUHR5IEx0ZCAyMDE3LiBUaGUgTUlUIExpY2VuY2UuCi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KbGlicmFyeSBCVFRTTGliIHsKICAgIHN0cnVjdCBEYXRhIHsKICAgICAgICAvLyBPd25lcnNoaXAKICAgICAgICBhZGRyZXNzIG93bmVyOwogICAgICAgIGFkZHJlc3MgbmV3T3duZXI7CgogICAgICAgIC8vIE1pbnRpbmcgYW5kIG1hbmFnZW1lbnQKICAgICAgICBhZGRyZXNzIG1pbnRlcjsKICAgICAgICBib29sIG1pbnRhYmxlOwogICAgICAgIGJvb2wgdHJhbnNmZXJhYmxlOwogICAgICAgIG1hcHBpbmcoYWRkcmVzcyA9PiBib29sKSBhY2NvdW50TG9ja2VkOwoKICAgICAgICAvLyBUb2tlbgogICAgICAgIHN0cmluZyBzeW1ib2w7CiAgICAgICAgc3RyaW5nIG5hbWU7CiAgICAgICAgdWludDggZGVjaW1hbHM7CiAgICAgICAgdWludCB0b3RhbFN1cHBseTsKICAgICAgICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludCkgYmFsYW5jZXM7CiAgICAgICAgbWFwcGluZyhhZGRyZXNzID0+IG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50KSkgYWxsb3dlZDsKICAgICAgICBtYXBwaW5nKGFkZHJlc3MgPT4gbWFwcGluZyhieXRlczMyID0+IGJvb2wpKSBleGVjdXRlZDsKICAgIH0KCgogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAvLyBDb25zdGFudHMKICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgdWludCBwdWJsaWMgY29uc3RhbnQgYnR0c1ZlcnNpb24gPSAxMDA7CiAgICBieXRlcyBwdWJsaWMgY29uc3RhbnQgc2lnbmluZ1ByZWZpeCA9ICJceDE5RXRoZXJldW0gU2lnbmVkIE1lc3NhZ2U6XG4zMiI7CiAgICBieXRlczQgcHVibGljIGNvbnN0YW50IHNpZ25lZFRyYW5zZmVyU2lnID0gIlx4NzVceDMyXHhlYVx4YWMiOwogICAgYnl0ZXM0IHB1YmxpYyBjb25zdGFudCBzaWduZWRBcHByb3ZlU2lnID0gIlx4ZTlceGFmXHhhN1x4YTEiOwogICAgYnl0ZXM0IHB1YmxpYyBjb25zdGFudCBzaWduZWRUcmFuc2ZlckZyb21TaWcgPSAiXHgzNFx4NGJceGNjXHg3ZCI7CiAgICBieXRlczQgcHVibGljIGNvbnN0YW50IHNpZ25lZEFwcHJvdmVBbmRDYWxsU2lnID0gIlx4ZjFceDZmXHg5Ylx4NTMiOwoKICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgLy8gRXZlbnQKICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgZXZlbnQgT3duZXJzaGlwVHJhbnNmZXJyZWQoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0byk7CiAgICBldmVudCBNaW50ZXJVcGRhdGVkKGFkZHJlc3MgZnJvbSwgYWRkcmVzcyB0byk7CiAgICBldmVudCBNaW50KGFkZHJlc3MgaW5kZXhlZCB0b2tlbk93bmVyLCB1aW50IHRva2VucywgYm9vbCBsb2NrQWNjb3VudCk7CiAgICBldmVudCBNaW50aW5nRGlzYWJsZWQoKTsKICAgIGV2ZW50IFRyYW5zZmVyc0VuYWJsZWQoKTsKICAgIGV2ZW50IEFjY291bnRVbmxvY2tlZChhZGRyZXNzIGluZGV4ZWQgdG9rZW5Pd25lcik7CiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50IHRva2Vucyk7CiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgdG9rZW5Pd25lciwgYWRkcmVzcyBpbmRleGVkIHNwZW5kZXIsIHVpbnQgdG9rZW5zKTsKCgogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAvLyBJbml0aWFsaXNhdGlvbgogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICBmdW5jdGlvbiBpbml0KERhdGEgc3RvcmFnZSBzZWxmLCBhZGRyZXNzIG93bmVyLCBzdHJpbmcgc3ltYm9sLCBzdHJpbmcgbmFtZSwgdWludDggZGVjaW1hbHMsIHVpbnQgaW5pdGlhbFN1cHBseSwgYm9vbCBtaW50YWJsZSwgYm9vbCB0cmFuc2ZlcmFibGUpIHB1YmxpYyB7CiAgICAgICAgcmVxdWlyZShzZWxmLm93bmVyID09IGFkZHJlc3MoMCkpOwogICAgICAgIHNlbGYub3duZXIgPSBvd25lcjsKICAgICAgICBzZWxmLnN5bWJvbCA9IHN5bWJvbDsKICAgICAgICBzZWxmLm5hbWUgPSBuYW1lOwogICAgICAgIHNlbGYuZGVjaW1hbHMgPSBkZWNpbWFsczsKICAgICAgICBpZiAoaW5pdGlhbFN1cHBseSA+IDApIHsKICAgICAgICAgICAgc2VsZi5iYWxhbmNlc1tvd25lcl0gPSBpbml0aWFsU3VwcGx5OwogICAgICAgICAgICBzZWxmLnRvdGFsU3VwcGx5ID0gaW5pdGlhbFN1cHBseTsKICAgICAgICAgICAgTWludChzZWxmLm93bmVyLCBpbml0aWFsU3VwcGx5LCBmYWxzZSk7CiAgICAgICAgICAgIFRyYW5zZmVyKGFkZHJlc3MoMCksIHNlbGYub3duZXIsIGluaXRpYWxTdXBwbHkpOwogICAgICAgIH0KICAgICAgICBzZWxmLm1pbnRhYmxlID0gbWludGFibGU7CiAgICAgICAgc2VsZi50cmFuc2ZlcmFibGUgPSB0cmFuc2ZlcmFibGU7CiAgICB9CgogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAvLyBTYWZlIG1hdGhzCiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIGZ1bmN0aW9uIHNhZmVBZGQodWludCBhLCB1aW50IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludCBjKSB7CiAgICAgICAgYyA9IGEgKyBiOwogICAgICAgIHJlcXVpcmUoYyA+PSBhKTsKICAgIH0KICAgIGZ1bmN0aW9uIHNhZmVTdWIodWludCBhLCB1aW50IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludCBjKSB7CiAgICAgICAgcmVxdWlyZShiIDw9IGEpOwogICAgICAgIGMgPSBhIC0gYjsKICAgIH0KICAgIGZ1bmN0aW9uIHNhZmVNdWwodWludCBhLCB1aW50IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludCBjKSB7CiAgICAgICAgYyA9IGEgKiBiOwogICAgICAgIHJlcXVpcmUoYSA9PSAwIHx8IGMgLyBhID09IGIpOwogICAgfQogICAgZnVuY3Rpb24gc2FmZURpdih1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50IGMpIHsKICAgICAgICByZXF1aXJlKGIgPiAwKTsKICAgICAgICBjID0gYSAvIGI7CiAgICB9CgogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAvLyBPd25lcnNoaXAKICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoRGF0YSBzdG9yYWdlIHNlbGYsIGFkZHJlc3MgbmV3T3duZXIpIHB1YmxpYyB7CiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyID09IHNlbGYub3duZXIpOwogICAgICAgIHNlbGYubmV3T3duZXIgPSBuZXdPd25lcjsKICAgIH0KICAgIGZ1bmN0aW9uIGFjY2VwdE93bmVyc2hpcChEYXRhIHN0b3JhZ2Ugc2VsZikgcHVibGljIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gc2VsZi5uZXdPd25lcik7CiAgICAgICAgT3duZXJzaGlwVHJhbnNmZXJyZWQoc2VsZi5vd25lciwgc2VsZi5uZXdPd25lcik7CiAgICAgICAgc2VsZi5vd25lciA9IHNlbGYubmV3T3duZXI7CiAgICAgICAgc2VsZi5uZXdPd25lciA9IGFkZHJlc3MoMCk7CiAgICB9CiAgICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcEltbWVkaWF0ZWx5KERhdGEgc3RvcmFnZSBzZWxmLCBhZGRyZXNzIG5ld093bmVyKSBwdWJsaWMgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBzZWxmLm93bmVyKTsKICAgICAgICBPd25lcnNoaXBUcmFuc2ZlcnJlZChzZWxmLm93bmVyLCBuZXdPd25lcik7CiAgICAgICAgc2VsZi5vd25lciA9IG5ld093bmVyOwogICAgICAgIHNlbGYubmV3T3duZXIgPSBhZGRyZXNzKDApOwogICAgfQoKICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgLy8gTWludGluZyBhbmQgbWFuYWdlbWVudAogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICBmdW5jdGlvbiBzZXRNaW50ZXIoRGF0YSBzdG9yYWdlIHNlbGYsIGFkZHJlc3MgbWludGVyKSBwdWJsaWMgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBzZWxmLm93bmVyKTsKICAgICAgICByZXF1aXJlKHNlbGYubWludGFibGUpOwogICAgICAgIE1pbnRlclVwZGF0ZWQoc2VsZi5taW50ZXIsIG1pbnRlcik7CiAgICAgICAgc2VsZi5taW50ZXIgPSBtaW50ZXI7CiAgICB9CiAgICBmdW5jdGlvbiBtaW50KERhdGEgc3RvcmFnZSBzZWxmLCBhZGRyZXNzIHRva2VuT3duZXIsIHVpbnQgdG9rZW5zLCBib29sIGxvY2tBY2NvdW50KSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgcmVxdWlyZShzZWxmLm1pbnRhYmxlKTsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gc2VsZi5taW50ZXIgfHwgbXNnLnNlbmRlciA9PSBzZWxmLm93bmVyKTsKICAgICAgICBpZiAobG9ja0FjY291bnQpIHsKICAgICAgICAgICAgc2VsZi5hY2NvdW50TG9ja2VkW3Rva2VuT3duZXJdID0gdHJ1ZTsKICAgICAgICB9CiAgICAgICAgc2VsZi5iYWxhbmNlc1t0b2tlbk93bmVyXSA9IHNhZmVBZGQoc2VsZi5iYWxhbmNlc1t0b2tlbk93bmVyXSwgdG9rZW5zKTsKICAgICAgICBzZWxmLnRvdGFsU3VwcGx5ID0gc2FmZUFkZChzZWxmLnRvdGFsU3VwcGx5LCB0b2tlbnMpOwogICAgICAgIE1pbnQodG9rZW5Pd25lciwgdG9rZW5zLCBsb2NrQWNjb3VudCk7CiAgICAgICAgVHJhbnNmZXIoYWRkcmVzcygwKSwgdG9rZW5Pd25lciwgdG9rZW5zKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIGZ1bmN0aW9uIHVubG9ja0FjY291bnQoRGF0YSBzdG9yYWdlIHNlbGYsIGFkZHJlc3MgdG9rZW5Pd25lcikgcHVibGljIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gc2VsZi5vd25lcik7CiAgICAgICAgcmVxdWlyZShzZWxmLmFjY291bnRMb2NrZWRbdG9rZW5Pd25lcl0pOwogICAgICAgIHNlbGYuYWNjb3VudExvY2tlZFt0b2tlbk93bmVyXSA9IGZhbHNlOwogICAgICAgIEFjY291bnRVbmxvY2tlZCh0b2tlbk93bmVyKTsKICAgIH0KICAgIGZ1bmN0aW9uIGRpc2FibGVNaW50aW5nKERhdGEgc3RvcmFnZSBzZWxmKSBwdWJsaWMgewogICAgICAgIHJlcXVpcmUoc2VsZi5taW50YWJsZSk7CiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyID09IHNlbGYubWludGVyIHx8IG1zZy5zZW5kZXIgPT0gc2VsZi5vd25lcik7CiAgICAgICAgc2VsZi5taW50YWJsZSA9IGZhbHNlOwogICAgICAgIGlmIChzZWxmLm1pbnRlciAhPSBhZGRyZXNzKDApKSB7CiAgICAgICAgICAgIE1pbnRlclVwZGF0ZWQoc2VsZi5taW50ZXIsIGFkZHJlc3MoMCkpOwogICAgICAgICAgICBzZWxmLm1pbnRlciA9IGFkZHJlc3MoMCk7CiAgICAgICAgfQogICAgICAgIE1pbnRpbmdEaXNhYmxlZCgpOwogICAgfQogICAgZnVuY3Rpb24gZW5hYmxlVHJhbnNmZXJzKERhdGEgc3RvcmFnZSBzZWxmKSBwdWJsaWMgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBzZWxmLm93bmVyKTsKICAgICAgICByZXF1aXJlKCFzZWxmLnRyYW5zZmVyYWJsZSk7CiAgICAgICAgc2VsZi50cmFuc2ZlcmFibGUgPSB0cnVlOwogICAgICAgIFRyYW5zZmVyc0VuYWJsZWQoKTsKICAgIH0KCiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIC8vIE90aGVyIGZ1bmN0aW9ucwogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICBmdW5jdGlvbiB0cmFuc2ZlckFueUVSQzIwVG9rZW4oRGF0YSBzdG9yYWdlIHNlbGYsIGFkZHJlc3MgdG9rZW5BZGRyZXNzLCB1aW50IHRva2VucykgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBzZWxmLm93bmVyKTsKICAgICAgICByZXR1cm4gRVJDMjBJbnRlcmZhY2UodG9rZW5BZGRyZXNzKS50cmFuc2ZlcihzZWxmLm93bmVyLCB0b2tlbnMpOwogICAgfQoKICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgLy8gZWNyZWNvdmVyIGZyb20gYSBzaWduYXR1cmUgcmF0aGVyIHRoYW4gdGhlIHNpZ25hdHVyZSBpbiBwYXJ0cyBbdiwgciwgc10KICAgIC8vIFRoZSBzaWduYXR1cmUgZm9ybWF0IGlzIGEgY29tcGFjdCBmb3JtIHtieXRlczMyIHJ9e2J5dGVzMzIgc317dWludDggdn0uCiAgICAvLyBDb21wYWN0IG1lYW5zLCB1aW50OCBpcyBub3QgcGFkZGVkIHRvIDMyIGJ5dGVzLgogICAgLy8KICAgIC8vIEFuIGludmFsaWQgc2lnbmF0dXJlIHJlc3VsdHMgaW4gdGhlIGFkZHJlc3MoMCkgYmVpbmcgcmV0dXJuZWQsIG1ha2UKICAgIC8vIHN1cmUgdGhhdCB0aGUgcmV0dXJuZWQgcmVzdWx0IGlzIGNoZWNrZWQgdG8gYmUgbm9uLXplcm8gZm9yIHZhbGlkaXR5CiAgICAvLwogICAgLy8gUGFydHMgZnJvbSBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9heGljLzViMzM5MTJjNmY2MWFlNmZkOTZkNmM0YTQ3YWZkZTZkCiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIGZ1bmN0aW9uIGVjcmVjb3ZlckZyb21TaWcoRGF0YSBzdG9yYWdlIC8qc2VsZiovLCBieXRlczMyIGhhc2gsIGJ5dGVzIHNpZykgcHVibGljIHB1cmUgcmV0dXJucyAoYWRkcmVzcyByZWNvdmVyZWRBZGRyZXNzKSB7CiAgICAgICAgYnl0ZXMzMiByOwogICAgICAgIGJ5dGVzMzIgczsKICAgICAgICB1aW50OCB2OwogICAgICAgIGlmIChzaWcubGVuZ3RoICE9IDY1KSByZXR1cm4gYWRkcmVzcygwKTsKICAgICAgICBhc3NlbWJseSB7CiAgICAgICAgICAgIHIgOj0gbWxvYWQoYWRkKHNpZywgMzIpKQogICAgICAgICAgICBzIDo9IG1sb2FkKGFkZChzaWcsIDY0KSkKICAgICAgICAgICAgLy8gSGVyZSB3ZSBhcmUgbG9hZGluZyB0aGUgbGFzdCAzMiBieXRlcy4gV2UgZXhwbG9pdCB0aGUgZmFjdCB0aGF0ICdtbG9hZCcgd2lsbCBwYWQgd2l0aCB6ZXJvZXMgaWYgd2Ugb3ZlcnJlYWQuCiAgICAgICAgICAgIC8vIFRoZXJlIGlzIG5vICdtbG9hZDgnIHRvIGRvIHRoaXMsIGJ1dCB0aGF0IHdvdWxkIGJlIG5pY2VyLgogICAgICAgICAgICB2IDo9IGJ5dGUoMCwgbWxvYWQoYWRkKHNpZywgOTYpKSkKICAgICAgICB9CiAgICAgICAgLy8gQWxiZWl0IG5vbi10cmFuc2FjdGlvbmFsIHNpZ25hdHVyZXMgYXJlIG5vdCBzcGVjaWZpZWQgYnkgdGhlIFlQLCBvbmUgd291bGQgZXhwZWN0IGl0IHRvIG1hdGNoIHRoZSBZUCByYW5nZSBvZiBbMjcsIDI4XQogICAgICAgIC8vIGdldGggdXNlcyBbMCwgMV0gYW5kIHNvbWUgY2xpZW50cyBoYXZlIGZvbGxvd2VkLiBUaGlzIG1pZ2h0IGNoYW5nZSwgc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9nby1ldGhlcmV1bS9pc3N1ZXMvMjA1MwogICAgICAgIGlmICh2IDwgMjcpIHsKICAgICAgICAgIHYgKz0gMjc7CiAgICAgICAgfQogICAgICAgIGlmICh2ICE9IDI3ICYmIHYgIT0gMjgpIHJldHVybiBhZGRyZXNzKDApOwogICAgICAgIHJldHVybiBlY3JlY292ZXIoaGFzaCwgdiwgciwgcyk7CiAgICB9CgogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAvLyBHZXQgQ2hlY2tSZXN1bHQgbWVzc2FnZQogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICBmdW5jdGlvbiBnZXRDaGVja1Jlc3VsdE1lc3NhZ2UoRGF0YSBzdG9yYWdlIC8qc2VsZiovLCBCVFRTVG9rZW5JbnRlcmZhY2UuQ2hlY2tSZXN1bHQgcmVzdWx0KSBwdWJsaWMgcHVyZSByZXR1cm5zIChzdHJpbmcpIHsKICAgICAgICBpZiAocmVzdWx0ID09IEJUVFNUb2tlbkludGVyZmFjZS5DaGVja1Jlc3VsdC5TdWNjZXNzKSB7CiAgICAgICAgICAgIHJldHVybiAiU3VjY2VzcyI7CiAgICAgICAgfSBlbHNlIGlmIChyZXN1bHQgPT0gQlRUU1Rva2VuSW50ZXJmYWNlLkNoZWNrUmVzdWx0Lk5vdFRyYW5zZmVyYWJsZSkgewogICAgICAgICAgICByZXR1cm4gIlRva2VucyBub3QgdHJhbnNmZXJhYmxlIHlldCI7CiAgICAgICAgfSBlbHNlIGlmIChyZXN1bHQgPT0gQlRUU1Rva2VuSW50ZXJmYWNlLkNoZWNrUmVzdWx0LkFjY291bnRMb2NrZWQpIHsKICAgICAgICAgICAgcmV0dXJuICJBY2NvdW50IGxvY2tlZCI7CiAgICAgICAgfSBlbHNlIGlmIChyZXN1bHQgPT0gQlRUU1Rva2VuSW50ZXJmYWNlLkNoZWNrUmVzdWx0LlNpZ25lck1pc21hdGNoKSB7CiAgICAgICAgICAgIHJldHVybiAiTWlzbWF0Y2ggaW4gc2lnbmluZyBhY2NvdW50IjsKICAgICAgICB9IGVsc2UgaWYgKHJlc3VsdCA9PSBCVFRTVG9rZW5JbnRlcmZhY2UuQ2hlY2tSZXN1bHQuQWxyZWFkeUV4ZWN1dGVkKSB7CiAgICAgICAgICAgIHJldHVybiAiVHJhbnNmZXIgYWxyZWFkeSBleGVjdXRlZCI7CiAgICAgICAgfSBlbHNlIGlmIChyZXN1bHQgPT0gQlRUU1Rva2VuSW50ZXJmYWNlLkNoZWNrUmVzdWx0Lkluc3VmZmljaWVudEFwcHJvdmVkVG9rZW5zKSB7CiAgICAgICAgICAgIHJldHVybiAiSW5zdWZmaWNpZW50IGFwcHJvdmVkIHRva2VucyI7CiAgICAgICAgfSBlbHNlIGlmIChyZXN1bHQgPT0gQlRUU1Rva2VuSW50ZXJmYWNlLkNoZWNrUmVzdWx0Lkluc3VmZmljaWVudEFwcHJvdmVkVG9rZW5zRm9yRmVlcykgewogICAgICAgICAgICByZXR1cm4gIkluc3VmZmljaWVudCBhcHByb3ZlZCB0b2tlbnMgZm9yIGZlZXMiOwogICAgICAgIH0gZWxzZSBpZiAocmVzdWx0ID09IEJUVFNUb2tlbkludGVyZmFjZS5DaGVja1Jlc3VsdC5JbnN1ZmZpY2llbnRUb2tlbnMpIHsKICAgICAgICAgICAgcmV0dXJuICJJbnN1ZmZpY2llbnQgdG9rZW5zIjsKICAgICAgICB9IGVsc2UgaWYgKHJlc3VsdCA9PSBCVFRTVG9rZW5JbnRlcmZhY2UuQ2hlY2tSZXN1bHQuSW5zdWZmaWNpZW50VG9rZW5zRm9yRmVlcykgewogICAgICAgICAgICByZXR1cm4gIkluc3VmZmljaWVudCB0b2tlbnMgZm9yIGZlZXMiOwogICAgICAgIH0gZWxzZSBpZiAocmVzdWx0ID09IEJUVFNUb2tlbkludGVyZmFjZS5DaGVja1Jlc3VsdC5PdmVyZmxvd0Vycm9yKSB7CiAgICAgICAgICAgIHJldHVybiAiT3ZlcmZsb3cgZXJyb3IiOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybiAiVW5rbm93biBlcnJvciI7CiAgICAgICAgfQogICAgfQoKICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgLy8gVG9rZW4gZnVuY3Rpb25zCiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIGZ1bmN0aW9uIHRyYW5zZmVyKERhdGEgc3RvcmFnZSBzZWxmLCBhZGRyZXNzIHRvLCB1aW50IHRva2VucykgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIC8vIE93bmVyIGFuZCBtaW50ZXIgY2FuIG1vdmUgdG9rZW5zIGJlZm9yZSB0aGUgdG9rZW5zIGFyZSB0cmFuc2ZlcmFibGUgCiAgICAgICAgcmVxdWlyZShzZWxmLnRyYW5zZmVyYWJsZSB8fCAoc2VsZi5taW50YWJsZSAmJiAobXNnLnNlbmRlciA9PSBzZWxmLm93bmVyICB8fCBtc2cuc2VuZGVyID09IHNlbGYubWludGVyKSkpOwogICAgICAgIHJlcXVpcmUoIXNlbGYuYWNjb3VudExvY2tlZFttc2cuc2VuZGVyXSk7CiAgICAgICAgc2VsZi5iYWxhbmNlc1ttc2cuc2VuZGVyXSA9IHNhZmVTdWIoc2VsZi5iYWxhbmNlc1ttc2cuc2VuZGVyXSwgdG9rZW5zKTsKICAgICAgICBzZWxmLmJhbGFuY2VzW3RvXSA9IHNhZmVBZGQoc2VsZi5iYWxhbmNlc1t0b10sIHRva2Vucyk7CiAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgdG8sIHRva2Vucyk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgICBmdW5jdGlvbiBhcHByb3ZlKERhdGEgc3RvcmFnZSBzZWxmLCBhZGRyZXNzIHNwZW5kZXIsIHVpbnQgdG9rZW5zKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgcmVxdWlyZSghc2VsZi5hY2NvdW50TG9ja2VkW21zZy5zZW5kZXJdKTsKICAgICAgICBzZWxmLmFsbG93ZWRbbXNnLnNlbmRlcl1bc3BlbmRlcl0gPSB0b2tlbnM7CiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgc3BlbmRlciwgdG9rZW5zKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShEYXRhIHN0b3JhZ2Ugc2VsZiwgYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvLCB1aW50IHRva2VucykgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIHJlcXVpcmUoc2VsZi50cmFuc2ZlcmFibGUpOwogICAgICAgIHJlcXVpcmUoIXNlbGYuYWNjb3VudExvY2tlZFtmcm9tXSk7CiAgICAgICAgc2VsZi5iYWxhbmNlc1tmcm9tXSA9IHNhZmVTdWIoc2VsZi5iYWxhbmNlc1tmcm9tXSwgdG9rZW5zKTsKICAgICAgICBzZWxmLmFsbG93ZWRbZnJvbV1bbXNnLnNlbmRlcl0gPSBzYWZlU3ViKHNlbGYuYWxsb3dlZFtmcm9tXVttc2cuc2VuZGVyXSwgdG9rZW5zKTsKICAgICAgICBzZWxmLmJhbGFuY2VzW3RvXSA9IHNhZmVBZGQoc2VsZi5iYWxhbmNlc1t0b10sIHRva2Vucyk7CiAgICAgICAgVHJhbnNmZXIoZnJvbSwgdG8sIHRva2Vucyk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgICBmdW5jdGlvbiBhcHByb3ZlQW5kQ2FsbChEYXRhIHN0b3JhZ2Ugc2VsZiwgYWRkcmVzcyB0b2tlbkNvbnRyYWN0LCBhZGRyZXNzIHNwZW5kZXIsIHVpbnQgdG9rZW5zLCBieXRlcyBkYXRhKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgcmVxdWlyZSghc2VsZi5hY2NvdW50TG9ja2VkW21zZy5zZW5kZXJdKTsKICAgICAgICBzZWxmLmFsbG93ZWRbbXNnLnNlbmRlcl1bc3BlbmRlcl0gPSB0b2tlbnM7CiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgc3BlbmRlciwgdG9rZW5zKTsKICAgICAgICBBcHByb3ZlQW5kQ2FsbEZhbGxCYWNrKHNwZW5kZXIpLnJlY2VpdmVBcHByb3ZhbChtc2cuc2VuZGVyLCB0b2tlbnMsIHRva2VuQ29udHJhY3QsIGRhdGEpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgLy8gU2lnbmVkIGZ1bmN0aW9uCiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIGZ1bmN0aW9uIHNpZ25lZFRyYW5zZmVySGFzaChEYXRhIHN0b3JhZ2UgLypzZWxmKi8sIGFkZHJlc3MgdG9rZW5Db250cmFjdCwgYWRkcmVzcyB0b2tlbk93bmVyLCBhZGRyZXNzIHRvLCB1aW50IHRva2VucywgdWludCBmZWUsIHVpbnQgbm9uY2UpIHB1YmxpYyBwdXJlIHJldHVybnMgKGJ5dGVzMzIgaGFzaCkgewogICAgICAgIGhhc2ggPSBrZWNjYWsyNTYoc2lnbmVkVHJhbnNmZXJTaWcsIHRva2VuQ29udHJhY3QsIHRva2VuT3duZXIsIHRvLCB0b2tlbnMsIGZlZSwgbm9uY2UpOwogICAgfQogICAgZnVuY3Rpb24gc2lnbmVkVHJhbnNmZXJDaGVjayhEYXRhIHN0b3JhZ2Ugc2VsZiwgYWRkcmVzcyB0b2tlbkNvbnRyYWN0LCBhZGRyZXNzIHRva2VuT3duZXIsIGFkZHJlc3MgdG8sIHVpbnQgdG9rZW5zLCB1aW50IGZlZSwgdWludCBub25jZSwgYnl0ZXMgc2lnLCBhZGRyZXNzIGZlZUFjY291bnQpIHB1YmxpYyB2aWV3IHJldHVybnMgKEJUVFNUb2tlbkludGVyZmFjZS5DaGVja1Jlc3VsdCByZXN1bHQpIHsKICAgICAgICBpZiAoIXNlbGYudHJhbnNmZXJhYmxlKSByZXR1cm4gQlRUU1Rva2VuSW50ZXJmYWNlLkNoZWNrUmVzdWx0Lk5vdFRyYW5zZmVyYWJsZTsKICAgICAgICBieXRlczMyIGhhc2ggPSBzaWduZWRUcmFuc2Zlckhhc2goc2VsZiwgdG9rZW5Db250cmFjdCwgdG9rZW5Pd25lciwgdG8sIHRva2VucywgZmVlLCBub25jZSk7CiAgICAgICAgaWYgKHRva2VuT3duZXIgPT0gYWRkcmVzcygwKSB8fCB0b2tlbk93bmVyICE9IGVjcmVjb3ZlckZyb21TaWcoc2VsZiwga2VjY2FrMjU2KHNpZ25pbmdQcmVmaXgsIGhhc2gpLCBzaWcpKSByZXR1cm4gQlRUU1Rva2VuSW50ZXJmYWNlLkNoZWNrUmVzdWx0LlNpZ25lck1pc21hdGNoOwogICAgICAgIGlmIChzZWxmLmFjY291bnRMb2NrZWRbdG9rZW5Pd25lcl0pIHJldHVybiBCVFRTVG9rZW5JbnRlcmZhY2UuQ2hlY2tSZXN1bHQuQWNjb3VudExvY2tlZDsKICAgICAgICBpZiAoc2VsZi5leGVjdXRlZFt0b2tlbk93bmVyXVtoYXNoXSkgcmV0dXJuIEJUVFNUb2tlbkludGVyZmFjZS5DaGVja1Jlc3VsdC5BbHJlYWR5RXhlY3V0ZWQ7CiAgICAgICAgdWludCB0b3RhbCA9IHNhZmVBZGQodG9rZW5zLCBmZWUpOwogICAgICAgIGlmIChzZWxmLmJhbGFuY2VzW3Rva2VuT3duZXJdIDwgdG9rZW5zKSByZXR1cm4gQlRUU1Rva2VuSW50ZXJmYWNlLkNoZWNrUmVzdWx0Lkluc3VmZmljaWVudFRva2VuczsKICAgICAgICBpZiAoc2VsZi5iYWxhbmNlc1t0b2tlbk93bmVyXSA8IHRvdGFsKSByZXR1cm4gQlRUU1Rva2VuSW50ZXJmYWNlLkNoZWNrUmVzdWx0Lkluc3VmZmljaWVudFRva2Vuc0ZvckZlZXM7CiAgICAgICAgaWYgKHNlbGYuYmFsYW5jZXNbdG9dICsgdG9rZW5zIDwgc2VsZi5iYWxhbmNlc1t0b10pIHJldHVybiBCVFRTVG9rZW5JbnRlcmZhY2UuQ2hlY2tSZXN1bHQuT3ZlcmZsb3dFcnJvcjsKICAgICAgICBpZiAoc2VsZi5iYWxhbmNlc1tmZWVBY2NvdW50XSArIGZlZSA8IHNlbGYuYmFsYW5jZXNbZmVlQWNjb3VudF0pIHJldHVybiBCVFRTVG9rZW5JbnRlcmZhY2UuQ2hlY2tSZXN1bHQuT3ZlcmZsb3dFcnJvcjsKICAgICAgICByZXR1cm4gQlRUU1Rva2VuSW50ZXJmYWNlLkNoZWNrUmVzdWx0LlN1Y2Nlc3M7CiAgICB9CiAgICBmdW5jdGlvbiBzaWduZWRUcmFuc2ZlcihEYXRhIHN0b3JhZ2Ugc2VsZiwgYWRkcmVzcyB0b2tlbkNvbnRyYWN0LCBhZGRyZXNzIHRva2VuT3duZXIsIGFkZHJlc3MgdG8sIHVpbnQgdG9rZW5zLCB1aW50IGZlZSwgdWludCBub25jZSwgYnl0ZXMgc2lnLCBhZGRyZXNzIGZlZUFjY291bnQpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICByZXF1aXJlKHNlbGYudHJhbnNmZXJhYmxlKTsKICAgICAgICBieXRlczMyIGhhc2ggPSBzaWduZWRUcmFuc2Zlckhhc2goc2VsZiwgdG9rZW5Db250cmFjdCwgdG9rZW5Pd25lciwgdG8sIHRva2VucywgZmVlLCBub25jZSk7CiAgICAgICAgcmVxdWlyZSh0b2tlbk93bmVyICE9IGFkZHJlc3MoMCkgJiYgdG9rZW5Pd25lciA9PSBlY3JlY292ZXJGcm9tU2lnKHNlbGYsIGtlY2NhazI1NihzaWduaW5nUHJlZml4LCBoYXNoKSwgc2lnKSk7CiAgICAgICAgcmVxdWlyZSghc2VsZi5hY2NvdW50TG9ja2VkW3Rva2VuT3duZXJdKTsKICAgICAgICByZXF1aXJlKCFzZWxmLmV4ZWN1dGVkW3Rva2VuT3duZXJdW2hhc2hdKTsKICAgICAgICBzZWxmLmV4ZWN1dGVkW3Rva2VuT3duZXJdW2hhc2hdID0gdHJ1ZTsKICAgICAgICBzZWxmLmJhbGFuY2VzW3Rva2VuT3duZXJdID0gc2FmZVN1YihzZWxmLmJhbGFuY2VzW3Rva2VuT3duZXJdLCB0b2tlbnMpOwogICAgICAgIHNlbGYuYmFsYW5jZXNbdG9dID0gc2FmZUFkZChzZWxmLmJhbGFuY2VzW3RvXSwgdG9rZW5zKTsKICAgICAgICBUcmFuc2Zlcih0b2tlbk93bmVyLCB0bywgdG9rZW5zKTsKICAgICAgICBzZWxmLmJhbGFuY2VzW3Rva2VuT3duZXJdID0gc2FmZVN1YihzZWxmLmJhbGFuY2VzW3Rva2VuT3duZXJdLCBmZWUpOwogICAgICAgIHNlbGYuYmFsYW5jZXNbZmVlQWNjb3VudF0gPSBzYWZlQWRkKHNlbGYuYmFsYW5jZXNbZmVlQWNjb3VudF0sIGZlZSk7CiAgICAgICAgVHJhbnNmZXIodG9rZW5Pd25lciwgZmVlQWNjb3VudCwgZmVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIGZ1bmN0aW9uIHNpZ25lZEFwcHJvdmVIYXNoKERhdGEgc3RvcmFnZSAvKnNlbGYqLywgYWRkcmVzcyB0b2tlbkNvbnRyYWN0LCBhZGRyZXNzIHRva2VuT3duZXIsIGFkZHJlc3Mgc3BlbmRlciwgdWludCB0b2tlbnMsIHVpbnQgZmVlLCB1aW50IG5vbmNlKSBwdWJsaWMgcHVyZSByZXR1cm5zIChieXRlczMyIGhhc2gpIHsKICAgICAgICBoYXNoID0ga2VjY2FrMjU2KHNpZ25lZEFwcHJvdmVTaWcsIHRva2VuQ29udHJhY3QsIHRva2VuT3duZXIsIHNwZW5kZXIsIHRva2VucywgZmVlLCBub25jZSk7CiAgICB9CiAgICBmdW5jdGlvbiBzaWduZWRBcHByb3ZlQ2hlY2soRGF0YSBzdG9yYWdlIHNlbGYsIGFkZHJlc3MgdG9rZW5Db250cmFjdCwgYWRkcmVzcyB0b2tlbk93bmVyLCBhZGRyZXNzIHNwZW5kZXIsIHVpbnQgdG9rZW5zLCB1aW50IGZlZSwgdWludCBub25jZSwgYnl0ZXMgc2lnLCBhZGRyZXNzIGZlZUFjY291bnQpIHB1YmxpYyB2aWV3IHJldHVybnMgKEJUVFNUb2tlbkludGVyZmFjZS5DaGVja1Jlc3VsdCByZXN1bHQpIHsKICAgICAgICBpZiAoIXNlbGYudHJhbnNmZXJhYmxlKSByZXR1cm4gQlRUU1Rva2VuSW50ZXJmYWNlLkNoZWNrUmVzdWx0Lk5vdFRyYW5zZmVyYWJsZTsKICAgICAgICBieXRlczMyIGhhc2ggPSBzaWduZWRBcHByb3ZlSGFzaChzZWxmLCB0b2tlbkNvbnRyYWN0LCB0b2tlbk93bmVyLCBzcGVuZGVyLCB0b2tlbnMsIGZlZSwgbm9uY2UpOwogICAgICAgIGlmICh0b2tlbk93bmVyID09IGFkZHJlc3MoMCkgfHwgdG9rZW5Pd25lciAhPSBlY3JlY292ZXJGcm9tU2lnKHNlbGYsIGtlY2NhazI1NihzaWduaW5nUHJlZml4LCBoYXNoKSwgc2lnKSkgcmV0dXJuIEJUVFNUb2tlbkludGVyZmFjZS5DaGVja1Jlc3VsdC5TaWduZXJNaXNtYXRjaDsKICAgICAgICBpZiAoc2VsZi5hY2NvdW50TG9ja2VkW3Rva2VuT3duZXJdKSByZXR1cm4gQlRUU1Rva2VuSW50ZXJmYWNlLkNoZWNrUmVzdWx0LkFjY291bnRMb2NrZWQ7CiAgICAgICAgaWYgKHNlbGYuZXhlY3V0ZWRbdG9rZW5Pd25lcl1baGFzaF0pIHJldHVybiBCVFRTVG9rZW5JbnRlcmZhY2UuQ2hlY2tSZXN1bHQuQWxyZWFkeUV4ZWN1dGVkOwogICAgICAgIGlmIChzZWxmLmJhbGFuY2VzW3Rva2VuT3duZXJdIDwgZmVlKSByZXR1cm4gQlRUU1Rva2VuSW50ZXJmYWNlLkNoZWNrUmVzdWx0Lkluc3VmZmljaWVudFRva2Vuc0ZvckZlZXM7CiAgICAgICAgaWYgKHNlbGYuYmFsYW5jZXNbZmVlQWNjb3VudF0gKyBmZWUgPCBzZWxmLmJhbGFuY2VzW2ZlZUFjY291bnRdKSByZXR1cm4gQlRUU1Rva2VuSW50ZXJmYWNlLkNoZWNrUmVzdWx0Lk92ZXJmbG93RXJyb3I7CiAgICAgICAgcmV0dXJuIEJUVFNUb2tlbkludGVyZmFjZS5DaGVja1Jlc3VsdC5TdWNjZXNzOwogICAgfQogICAgZnVuY3Rpb24gc2lnbmVkQXBwcm92ZShEYXRhIHN0b3JhZ2Ugc2VsZiwgYWRkcmVzcyB0b2tlbkNvbnRyYWN0LCBhZGRyZXNzIHRva2VuT3duZXIsIGFkZHJlc3Mgc3BlbmRlciwgdWludCB0b2tlbnMsIHVpbnQgZmVlLCB1aW50IG5vbmNlLCBieXRlcyBzaWcsIGFkZHJlc3MgZmVlQWNjb3VudCkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIHJlcXVpcmUoc2VsZi50cmFuc2ZlcmFibGUpOwogICAgICAgIGJ5dGVzMzIgaGFzaCA9IHNpZ25lZEFwcHJvdmVIYXNoKHNlbGYsIHRva2VuQ29udHJhY3QsIHRva2VuT3duZXIsIHNwZW5kZXIsIHRva2VucywgZmVlLCBub25jZSk7CiAgICAgICAgcmVxdWlyZSh0b2tlbk93bmVyICE9IGFkZHJlc3MoMCkgJiYgdG9rZW5Pd25lciA9PSBlY3JlY292ZXJGcm9tU2lnKHNlbGYsIGtlY2NhazI1NihzaWduaW5nUHJlZml4LCBoYXNoKSwgc2lnKSk7CiAgICAgICAgcmVxdWlyZSghc2VsZi5hY2NvdW50TG9ja2VkW3Rva2VuT3duZXJdKTsKICAgICAgICByZXF1aXJlKCFzZWxmLmV4ZWN1dGVkW3Rva2VuT3duZXJdW2hhc2hdKTsKICAgICAgICBzZWxmLmV4ZWN1dGVkW3Rva2VuT3duZXJdW2hhc2hdID0gdHJ1ZTsKICAgICAgICBzZWxmLmFsbG93ZWRbdG9rZW5Pd25lcl1bc3BlbmRlcl0gPSB0b2tlbnM7CiAgICAgICAgQXBwcm92YWwodG9rZW5Pd25lciwgc3BlbmRlciwgdG9rZW5zKTsKICAgICAgICBzZWxmLmJhbGFuY2VzW3Rva2VuT3duZXJdID0gc2FmZVN1YihzZWxmLmJhbGFuY2VzW3Rva2VuT3duZXJdLCBmZWUpOwogICAgICAgIHNlbGYuYmFsYW5jZXNbZmVlQWNjb3VudF0gPSBzYWZlQWRkKHNlbGYuYmFsYW5jZXNbZmVlQWNjb3VudF0sIGZlZSk7CiAgICAgICAgVHJhbnNmZXIodG9rZW5Pd25lciwgZmVlQWNjb3VudCwgZmVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIGZ1bmN0aW9uIHNpZ25lZFRyYW5zZmVyRnJvbUhhc2goRGF0YSBzdG9yYWdlIC8qc2VsZiovLCBhZGRyZXNzIHRva2VuQ29udHJhY3QsIGFkZHJlc3Mgc3BlbmRlciwgYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvLCB1aW50IHRva2VucywgdWludCBmZWUsIHVpbnQgbm9uY2UpIHB1YmxpYyBwdXJlIHJldHVybnMgKGJ5dGVzMzIgaGFzaCkgewogICAgICAgIGhhc2ggPSBrZWNjYWsyNTYoc2lnbmVkVHJhbnNmZXJGcm9tU2lnLCB0b2tlbkNvbnRyYWN0LCBzcGVuZGVyLCBmcm9tLCB0bywgdG9rZW5zLCBmZWUsIG5vbmNlKTsKICAgIH0KICAgIGZ1bmN0aW9uIHNpZ25lZFRyYW5zZmVyRnJvbUNoZWNrKERhdGEgc3RvcmFnZSBzZWxmLCBhZGRyZXNzIHRva2VuQ29udHJhY3QsIGFkZHJlc3Mgc3BlbmRlciwgYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvLCB1aW50IHRva2VucywgdWludCBmZWUsIHVpbnQgbm9uY2UsIGJ5dGVzIHNpZywgYWRkcmVzcyBmZWVBY2NvdW50KSBwdWJsaWMgdmlldyByZXR1cm5zIChCVFRTVG9rZW5JbnRlcmZhY2UuQ2hlY2tSZXN1bHQgcmVzdWx0KSB7CiAgICAgICAgaWYgKCFzZWxmLnRyYW5zZmVyYWJsZSkgcmV0dXJuIEJUVFNUb2tlbkludGVyZmFjZS5DaGVja1Jlc3VsdC5Ob3RUcmFuc2ZlcmFibGU7CiAgICAgICAgYnl0ZXMzMiBoYXNoID0gc2lnbmVkVHJhbnNmZXJGcm9tSGFzaChzZWxmLCB0b2tlbkNvbnRyYWN0LCBzcGVuZGVyLCBmcm9tLCB0bywgdG9rZW5zLCBmZWUsIG5vbmNlKTsKICAgICAgICBpZiAoc3BlbmRlciA9PSBhZGRyZXNzKDApIHx8IHNwZW5kZXIgIT0gZWNyZWNvdmVyRnJvbVNpZyhzZWxmLCBrZWNjYWsyNTYoc2lnbmluZ1ByZWZpeCwgaGFzaCksIHNpZykpIHJldHVybiBCVFRTVG9rZW5JbnRlcmZhY2UuQ2hlY2tSZXN1bHQuU2lnbmVyTWlzbWF0Y2g7CiAgICAgICAgaWYgKHNlbGYuYWNjb3VudExvY2tlZFtmcm9tXSkgcmV0dXJuIEJUVFNUb2tlbkludGVyZmFjZS5DaGVja1Jlc3VsdC5BY2NvdW50TG9ja2VkOwogICAgICAgIGlmIChzZWxmLmV4ZWN1dGVkW3NwZW5kZXJdW2hhc2hdKSByZXR1cm4gQlRUU1Rva2VuSW50ZXJmYWNlLkNoZWNrUmVzdWx0LkFscmVhZHlFeGVjdXRlZDsKICAgICAgICB1aW50IHRvdGFsID0gc2FmZUFkZCh0b2tlbnMsIGZlZSk7CiAgICAgICAgaWYgKHNlbGYuYWxsb3dlZFtmcm9tXVtzcGVuZGVyXSA8IHRva2VucykgcmV0dXJuIEJUVFNUb2tlbkludGVyZmFjZS5DaGVja1Jlc3VsdC5JbnN1ZmZpY2llbnRBcHByb3ZlZFRva2VuczsKICAgICAgICBpZiAoc2VsZi5hbGxvd2VkW2Zyb21dW3NwZW5kZXJdIDwgdG90YWwpIHJldHVybiBCVFRTVG9rZW5JbnRlcmZhY2UuQ2hlY2tSZXN1bHQuSW5zdWZmaWNpZW50QXBwcm92ZWRUb2tlbnNGb3JGZWVzOwogICAgICAgIGlmIChzZWxmLmJhbGFuY2VzW2Zyb21dIDwgdG9rZW5zKSByZXR1cm4gQlRUU1Rva2VuSW50ZXJmYWNlLkNoZWNrUmVzdWx0Lkluc3VmZmljaWVudFRva2VuczsKICAgICAgICBpZiAoc2VsZi5iYWxhbmNlc1tmcm9tXSA8IHRvdGFsKSByZXR1cm4gQlRUU1Rva2VuSW50ZXJmYWNlLkNoZWNrUmVzdWx0Lkluc3VmZmljaWVudFRva2Vuc0ZvckZlZXM7CiAgICAgICAgaWYgKHNlbGYuYmFsYW5jZXNbdG9dICsgdG9rZW5zIDwgc2VsZi5iYWxhbmNlc1t0b10pIHJldHVybiBCVFRTVG9rZW5JbnRlcmZhY2UuQ2hlY2tSZXN1bHQuT3ZlcmZsb3dFcnJvcjsKICAgICAgICBpZiAoc2VsZi5iYWxhbmNlc1tmZWVBY2NvdW50XSArIGZlZSA8IHNlbGYuYmFsYW5jZXNbZmVlQWNjb3VudF0pIHJldHVybiBCVFRTVG9rZW5JbnRlcmZhY2UuQ2hlY2tSZXN1bHQuT3ZlcmZsb3dFcnJvcjsKICAgICAgICByZXR1cm4gQlRUU1Rva2VuSW50ZXJmYWNlLkNoZWNrUmVzdWx0LlN1Y2Nlc3M7CiAgICB9CiAgICBmdW5jdGlvbiBzaWduZWRUcmFuc2ZlckZyb20oRGF0YSBzdG9yYWdlIHNlbGYsIGFkZHJlc3MgdG9rZW5Db250cmFjdCwgYWRkcmVzcyBzcGVuZGVyLCBhZGRyZXNzIGZyb20sIGFkZHJlc3MgdG8sIHVpbnQgdG9rZW5zLCB1aW50IGZlZSwgdWludCBub25jZSwgYnl0ZXMgc2lnLCBhZGRyZXNzIGZlZUFjY291bnQpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICByZXF1aXJlKHNlbGYudHJhbnNmZXJhYmxlKTsKICAgICAgICBieXRlczMyIGhhc2ggPSBzaWduZWRUcmFuc2ZlckZyb21IYXNoKHNlbGYsIHRva2VuQ29udHJhY3QsIHNwZW5kZXIsIGZyb20sIHRvLCB0b2tlbnMsIGZlZSwgbm9uY2UpOwogICAgICAgIHJlcXVpcmUoc3BlbmRlciAhPSBhZGRyZXNzKDApICYmIHNwZW5kZXIgPT0gZWNyZWNvdmVyRnJvbVNpZyhzZWxmLCBrZWNjYWsyNTYoc2lnbmluZ1ByZWZpeCwgaGFzaCksIHNpZykpOwogICAgICAgIHJlcXVpcmUoIXNlbGYuYWNjb3VudExvY2tlZFtmcm9tXSk7CiAgICAgICAgcmVxdWlyZSghc2VsZi5leGVjdXRlZFtzcGVuZGVyXVtoYXNoXSk7CiAgICAgICAgc2VsZi5leGVjdXRlZFtzcGVuZGVyXVtoYXNoXSA9IHRydWU7CiAgICAgICAgc2VsZi5iYWxhbmNlc1tmcm9tXSA9IHNhZmVTdWIoc2VsZi5iYWxhbmNlc1tmcm9tXSwgdG9rZW5zKTsKICAgICAgICBzZWxmLmFsbG93ZWRbZnJvbV1bc3BlbmRlcl0gPSBzYWZlU3ViKHNlbGYuYWxsb3dlZFtmcm9tXVtzcGVuZGVyXSwgdG9rZW5zKTsKICAgICAgICBzZWxmLmJhbGFuY2VzW3RvXSA9IHNhZmVBZGQoc2VsZi5iYWxhbmNlc1t0b10sIHRva2Vucyk7CiAgICAgICAgVHJhbnNmZXIoZnJvbSwgdG8sIHRva2Vucyk7CiAgICAgICAgc2VsZi5iYWxhbmNlc1tmcm9tXSA9IHNhZmVTdWIoc2VsZi5iYWxhbmNlc1tmcm9tXSwgZmVlKTsKICAgICAgICBzZWxmLmFsbG93ZWRbZnJvbV1bc3BlbmRlcl0gPSBzYWZlU3ViKHNlbGYuYWxsb3dlZFtmcm9tXVtzcGVuZGVyXSwgZmVlKTsKICAgICAgICBzZWxmLmJhbGFuY2VzW2ZlZUFjY291bnRdID0gc2FmZUFkZChzZWxmLmJhbGFuY2VzW2ZlZUFjY291bnRdLCBmZWUpOwogICAgICAgIFRyYW5zZmVyKGZyb20sIGZlZUFjY291bnQsIGZlZSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgICBmdW5jdGlvbiBzaWduZWRBcHByb3ZlQW5kQ2FsbEhhc2goRGF0YSBzdG9yYWdlIC8qc2VsZiovLCBhZGRyZXNzIHRva2VuQ29udHJhY3QsIGFkZHJlc3MgdG9rZW5Pd25lciwgYWRkcmVzcyBzcGVuZGVyLCB1aW50IHRva2VucywgYnl0ZXMgZGF0YSwgdWludCBmZWUsIHVpbnQgbm9uY2UpIHB1YmxpYyBwdXJlIHJldHVybnMgKGJ5dGVzMzIgaGFzaCkgewogICAgICAgIGhhc2ggPSBrZWNjYWsyNTYoc2lnbmVkQXBwcm92ZUFuZENhbGxTaWcsIHRva2VuQ29udHJhY3QsIHRva2VuT3duZXIsIHNwZW5kZXIsIHRva2VucywgZGF0YSwgZmVlLCBub25jZSk7CiAgICB9CiAgICBmdW5jdGlvbiBzaWduZWRBcHByb3ZlQW5kQ2FsbENoZWNrKERhdGEgc3RvcmFnZSBzZWxmLCBhZGRyZXNzIHRva2VuQ29udHJhY3QsIGFkZHJlc3MgdG9rZW5Pd25lciwgYWRkcmVzcyBzcGVuZGVyLCB1aW50IHRva2VucywgYnl0ZXMgZGF0YSwgdWludCBmZWUsIHVpbnQgbm9uY2UsIGJ5dGVzIHNpZywgYWRkcmVzcyBmZWVBY2NvdW50KSBwdWJsaWMgdmlldyByZXR1cm5zIChCVFRTVG9rZW5JbnRlcmZhY2UuQ2hlY2tSZXN1bHQgcmVzdWx0KSB7CiAgICAgICAgaWYgKCFzZWxmLnRyYW5zZmVyYWJsZSkgcmV0dXJuIEJUVFNUb2tlbkludGVyZmFjZS5DaGVja1Jlc3VsdC5Ob3RUcmFuc2ZlcmFibGU7CiAgICAgICAgYnl0ZXMzMiBoYXNoID0gc2lnbmVkQXBwcm92ZUFuZENhbGxIYXNoKHNlbGYsIHRva2VuQ29udHJhY3QsIHRva2VuT3duZXIsIHNwZW5kZXIsIHRva2VucywgZGF0YSwgZmVlLCBub25jZSk7CiAgICAgICAgaWYgKHRva2VuT3duZXIgPT0gYWRkcmVzcygwKSB8fCB0b2tlbk93bmVyICE9IGVjcmVjb3ZlckZyb21TaWcoc2VsZiwga2VjY2FrMjU2KHNpZ25pbmdQcmVmaXgsIGhhc2gpLCBzaWcpKSByZXR1cm4gQlRUU1Rva2VuSW50ZXJmYWNlLkNoZWNrUmVzdWx0LlNpZ25lck1pc21hdGNoOwogICAgICAgIGlmIChzZWxmLmFjY291bnRMb2NrZWRbdG9rZW5Pd25lcl0pIHJldHVybiBCVFRTVG9rZW5JbnRlcmZhY2UuQ2hlY2tSZXN1bHQuQWNjb3VudExvY2tlZDsKICAgICAgICBpZiAoc2VsZi5leGVjdXRlZFt0b2tlbk93bmVyXVtoYXNoXSkgcmV0dXJuIEJUVFNUb2tlbkludGVyZmFjZS5DaGVja1Jlc3VsdC5BbHJlYWR5RXhlY3V0ZWQ7CiAgICAgICAgaWYgKHNlbGYuYmFsYW5jZXNbdG9rZW5Pd25lcl0gPCBmZWUpIHJldHVybiBCVFRTVG9rZW5JbnRlcmZhY2UuQ2hlY2tSZXN1bHQuSW5zdWZmaWNpZW50VG9rZW5zRm9yRmVlczsKICAgICAgICBpZiAoc2VsZi5iYWxhbmNlc1tmZWVBY2NvdW50XSArIGZlZSA8IHNlbGYuYmFsYW5jZXNbZmVlQWNjb3VudF0pIHJldHVybiBCVFRTVG9rZW5JbnRlcmZhY2UuQ2hlY2tSZXN1bHQuT3ZlcmZsb3dFcnJvcjsKICAgICAgICByZXR1cm4gQlRUU1Rva2VuSW50ZXJmYWNlLkNoZWNrUmVzdWx0LlN1Y2Nlc3M7CiAgICB9CiAgICBmdW5jdGlvbiBzaWduZWRBcHByb3ZlQW5kQ2FsbChEYXRhIHN0b3JhZ2Ugc2VsZiwgYWRkcmVzcyB0b2tlbkNvbnRyYWN0LCBhZGRyZXNzIHRva2VuT3duZXIsIGFkZHJlc3Mgc3BlbmRlciwgdWludCB0b2tlbnMsIGJ5dGVzIGRhdGEsIHVpbnQgZmVlLCB1aW50IG5vbmNlLCBieXRlcyBzaWcsIGFkZHJlc3MgZmVlQWNjb3VudCkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIHJlcXVpcmUoc2VsZi50cmFuc2ZlcmFibGUpOwogICAgICAgIGJ5dGVzMzIgaGFzaCA9IHNpZ25lZEFwcHJvdmVBbmRDYWxsSGFzaChzZWxmLCB0b2tlbkNvbnRyYWN0LCB0b2tlbk93bmVyLCBzcGVuZGVyLCB0b2tlbnMsIGRhdGEsIGZlZSwgbm9uY2UpOwogICAgICAgIHJlcXVpcmUodG9rZW5Pd25lciAhPSBhZGRyZXNzKDApICYmIHRva2VuT3duZXIgPT0gZWNyZWNvdmVyRnJvbVNpZyhzZWxmLCBrZWNjYWsyNTYoc2lnbmluZ1ByZWZpeCwgaGFzaCksIHNpZykpOwogICAgICAgIHJlcXVpcmUoIXNlbGYuYWNjb3VudExvY2tlZFt0b2tlbk93bmVyXSk7CiAgICAgICAgcmVxdWlyZSghc2VsZi5leGVjdXRlZFt0b2tlbk93bmVyXVtoYXNoXSk7CiAgICAgICAgc2VsZi5leGVjdXRlZFt0b2tlbk93bmVyXVtoYXNoXSA9IHRydWU7CiAgICAgICAgc2VsZi5hbGxvd2VkW3Rva2VuT3duZXJdW3NwZW5kZXJdID0gdG9rZW5zOwogICAgICAgIEFwcHJvdmFsKHRva2VuT3duZXIsIHNwZW5kZXIsIHRva2Vucyk7CiAgICAgICAgc2VsZi5iYWxhbmNlc1t0b2tlbk93bmVyXSA9IHNhZmVTdWIoc2VsZi5iYWxhbmNlc1t0b2tlbk93bmVyXSwgZmVlKTsKICAgICAgICBzZWxmLmJhbGFuY2VzW2ZlZUFjY291bnRdID0gc2FmZUFkZChzZWxmLmJhbGFuY2VzW2ZlZUFjY291bnRdLCBmZWUpOwogICAgICAgIFRyYW5zZmVyKHRva2VuT3duZXIsIGZlZUFjY291bnQsIGZlZSk7CiAgICAgICAgQXBwcm92ZUFuZENhbGxGYWxsQmFjayhzcGVuZGVyKS5yZWNlaXZlQXBwcm92YWwobXNnLnNlbmRlciwgdG9rZW5zLCB0b2tlbkNvbnRyYWN0LCBkYXRhKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KfQoKCi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KLy8gQm9ra3lQb29CYWgncyBUb2tlbiBUZWxlcG9ydGF0aW9uIFNlcnZpY2UgVG9rZW4gRmFjdG9yeSB2MS4wMAovLwovLyBFbmpveS4gKGMpIEJva2t5UG9vQmFoIC8gQm9rIENvbnN1bHRpbmcgUHR5IEx0ZCAyMDE3LiBUaGUgTUlUIExpY2VuY2UuCi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KY29udHJhY3QgQlRUU1Rva2VuIGlzIEJUVFNUb2tlbkludGVyZmFjZSB7CiAgICB1c2luZyBCVFRTTGliIGZvciBCVFRTTGliLkRhdGE7CgogICAgQlRUU0xpYi5EYXRhIGRhdGE7CgogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAvLyBDb25zdHJ1Y3RvcgogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICBmdW5jdGlvbiBCVFRTVG9rZW4oYWRkcmVzcyBvd25lciwgc3RyaW5nIHN5bWJvbCwgc3RyaW5nIG5hbWUsIHVpbnQ4IGRlY2ltYWxzLCB1aW50IGluaXRpYWxTdXBwbHksIGJvb2wgbWludGFibGUsIGJvb2wgdHJhbnNmZXJhYmxlKSBwdWJsaWMgewogICAgICAgIGRhdGEuaW5pdChvd25lciwgc3ltYm9sLCBuYW1lLCBkZWNpbWFscywgaW5pdGlhbFN1cHBseSwgbWludGFibGUsIHRyYW5zZmVyYWJsZSk7CiAgICB9CgogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAvLyBPd25lcnNoaXAKICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgZnVuY3Rpb24gb3duZXIoKSBwdWJsaWMgdmlldyByZXR1cm5zIChhZGRyZXNzKSB7CiAgICAgICAgcmV0dXJuIGRhdGEub3duZXI7CiAgICB9CiAgICBmdW5jdGlvbiBuZXdPd25lcigpIHB1YmxpYyB2aWV3IHJldHVybnMgKGFkZHJlc3MpIHsKICAgICAgICByZXR1cm4gZGF0YS5uZXdPd25lcjsKICAgIH0KICAgIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgX25ld093bmVyKSBwdWJsaWMgewogICAgICAgIGRhdGEudHJhbnNmZXJPd25lcnNoaXAoX25ld093bmVyKTsKICAgIH0KICAgIGZ1bmN0aW9uIGFjY2VwdE93bmVyc2hpcCgpIHB1YmxpYyB7CiAgICAgICAgZGF0YS5hY2NlcHRPd25lcnNoaXAoKTsKICAgIH0KICAgIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwSW1tZWRpYXRlbHkoYWRkcmVzcyBfbmV3T3duZXIpIHB1YmxpYyB7CiAgICAgICAgZGF0YS50cmFuc2Zlck93bmVyc2hpcEltbWVkaWF0ZWx5KF9uZXdPd25lcik7CiAgICB9CgogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAvLyBUb2tlbgogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICBmdW5jdGlvbiBzeW1ib2woKSBwdWJsaWMgdmlldyByZXR1cm5zIChzdHJpbmcpIHsKICAgICAgICByZXR1cm4gZGF0YS5zeW1ib2w7CiAgICB9CiAgICBmdW5jdGlvbiBuYW1lKCkgcHVibGljIHZpZXcgcmV0dXJucyAoc3RyaW5nKSB7CiAgICAgICAgcmV0dXJuIGRhdGEubmFtZTsKICAgIH0KICAgIGZ1bmN0aW9uIGRlY2ltYWxzKCkgcHVibGljIHZpZXcgcmV0dXJucyAodWludDgpIHsKICAgICAgICByZXR1cm4gZGF0YS5kZWNpbWFsczsKICAgIH0KCiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIC8vIE1pbnRpbmcgYW5kIG1hbmFnZW1lbnQKICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgZnVuY3Rpb24gbWludGVyKCkgcHVibGljIHZpZXcgcmV0dXJucyAoYWRkcmVzcykgewogICAgICAgIHJldHVybiBkYXRhLm1pbnRlcjsKICAgIH0KICAgIGZ1bmN0aW9uIHNldE1pbnRlcihhZGRyZXNzIF9taW50ZXIpIHB1YmxpYyB7CiAgICAgICAgZGF0YS5zZXRNaW50ZXIoX21pbnRlcik7CiAgICB9CiAgICBmdW5jdGlvbiBtaW50KGFkZHJlc3MgdG9rZW5Pd25lciwgdWludCB0b2tlbnMsIGJvb2wgbG9ja0FjY291bnQpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICByZXR1cm4gZGF0YS5taW50KHRva2VuT3duZXIsIHRva2VucywgbG9ja0FjY291bnQpOwogICAgfQogICAgZnVuY3Rpb24gdW5sb2NrQWNjb3VudChhZGRyZXNzIHRva2VuT3duZXIpIHB1YmxpYyB7CiAgICAgICAgcmV0dXJuIGRhdGEudW5sb2NrQWNjb3VudCh0b2tlbk93bmVyKTsKICAgIH0KICAgIGZ1bmN0aW9uIG1pbnRhYmxlKCkgcHVibGljIHZpZXcgcmV0dXJucyAoYm9vbCkgewogICAgICAgIHJldHVybiBkYXRhLm1pbnRhYmxlOwogICAgfQogICAgZnVuY3Rpb24gdHJhbnNmZXJhYmxlKCkgcHVibGljIHZpZXcgcmV0dXJucyAoYm9vbCkgewogICAgICAgIHJldHVybiBkYXRhLnRyYW5zZmVyYWJsZTsKICAgIH0KICAgIGZ1bmN0aW9uIGRpc2FibGVNaW50aW5nKCkgcHVibGljIHsKICAgICAgICBkYXRhLmRpc2FibGVNaW50aW5nKCk7CiAgICB9CiAgICBmdW5jdGlvbiBlbmFibGVUcmFuc2ZlcnMoKSBwdWJsaWMgewogICAgICAgIGRhdGEuZW5hYmxlVHJhbnNmZXJzKCk7CiAgICB9CgogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAvLyBPdGhlciBmdW5jdGlvbnMKICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgZnVuY3Rpb24gdHJhbnNmZXJBbnlFUkMyMFRva2VuKGFkZHJlc3MgdG9rZW5BZGRyZXNzLCB1aW50IHRva2VucykgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIHJldHVybiBkYXRhLnRyYW5zZmVyQW55RVJDMjBUb2tlbih0b2tlbkFkZHJlc3MsIHRva2Vucyk7CiAgICB9CgogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAvLyBEb24ndCBhY2NlcHQgZXRoZXJzCiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIGZ1bmN0aW9uICgpIHB1YmxpYyBwYXlhYmxlIHsKICAgICAgICByZXZlcnQoKTsKICAgIH0KCiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIC8vIFRva2VuIGZ1bmN0aW9ucwogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50KSB7CiAgICAgICAgcmV0dXJuIGRhdGEudG90YWxTdXBwbHkgLSBkYXRhLmJhbGFuY2VzW2FkZHJlc3MoMCldOwogICAgfQogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgdG9rZW5Pd25lcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQgYmFsYW5jZSkgewogICAgICAgIHJldHVybiBkYXRhLmJhbGFuY2VzW3Rva2VuT3duZXJdOwogICAgfQogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgdG9rZW5Pd25lciwgYWRkcmVzcyBzcGVuZGVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludCByZW1haW5pbmcpIHsKICAgICAgICByZXR1cm4gZGF0YS5hbGxvd2VkW3Rva2VuT3duZXJdW3NwZW5kZXJdOwogICAgfQogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyB0bywgdWludCB0b2tlbnMpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICByZXR1cm4gZGF0YS50cmFuc2Zlcih0bywgdG9rZW5zKTsKICAgIH0KICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBzcGVuZGVyLCB1aW50IHRva2VucykgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIHJldHVybiBkYXRhLmFwcHJvdmUoc3BlbmRlciwgdG9rZW5zKTsKICAgIH0KICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIGZyb20sIGFkZHJlc3MgdG8sIHVpbnQgdG9rZW5zKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgcmV0dXJuIGRhdGEudHJhbnNmZXJGcm9tKGZyb20sIHRvLCB0b2tlbnMpOwogICAgfQogICAgZnVuY3Rpb24gYXBwcm92ZUFuZENhbGwoYWRkcmVzcyBzcGVuZGVyLCB1aW50IHRva2VucywgYnl0ZXMgX2RhdGEpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBzdWNjZXNzID0gZGF0YS5hcHByb3ZlQW5kQ2FsbCh0aGlzLCBzcGVuZGVyLCB0b2tlbnMsIF9kYXRhKTsKICAgIH0KCiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIC8vIFNpZ25lZCBmdW5jdGlvbgogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICBmdW5jdGlvbiBzaWduZWRUcmFuc2Zlckhhc2goYWRkcmVzcyB0b2tlbk93bmVyLCBhZGRyZXNzIHRvLCB1aW50IHRva2VucywgdWludCBmZWUsIHVpbnQgbm9uY2UpIHB1YmxpYyB2aWV3IHJldHVybnMgKGJ5dGVzMzIgaGFzaCkgewogICAgICAgIHJldHVybiBkYXRhLnNpZ25lZFRyYW5zZmVySGFzaChhZGRyZXNzKHRoaXMpLCB0b2tlbk93bmVyLCB0bywgdG9rZW5zLCBmZWUsIG5vbmNlKTsKICAgIH0KICAgIGZ1bmN0aW9uIHNpZ25lZFRyYW5zZmVyQ2hlY2soYWRkcmVzcyB0b2tlbk93bmVyLCBhZGRyZXNzIHRvLCB1aW50IHRva2VucywgdWludCBmZWUsIHVpbnQgbm9uY2UsIGJ5dGVzIHNpZywgYWRkcmVzcyBmZWVBY2NvdW50KSBwdWJsaWMgdmlldyByZXR1cm5zIChDaGVja1Jlc3VsdCByZXN1bHQpIHsKICAgICAgICByZXR1cm4gZGF0YS5zaWduZWRUcmFuc2ZlckNoZWNrKGFkZHJlc3ModGhpcyksIHRva2VuT3duZXIsIHRvLCB0b2tlbnMsIGZlZSwgbm9uY2UsIHNpZywgZmVlQWNjb3VudCk7CiAgICB9CiAgICBmdW5jdGlvbiBzaWduZWRUcmFuc2ZlcihhZGRyZXNzIHRva2VuT3duZXIsIGFkZHJlc3MgdG8sIHVpbnQgdG9rZW5zLCB1aW50IGZlZSwgdWludCBub25jZSwgYnl0ZXMgc2lnLCBhZGRyZXNzIGZlZUFjY291bnQpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICByZXR1cm4gZGF0YS5zaWduZWRUcmFuc2ZlcihhZGRyZXNzKHRoaXMpLCB0b2tlbk93bmVyLCB0bywgdG9rZW5zLCBmZWUsIG5vbmNlLCBzaWcsIGZlZUFjY291bnQpOwogICAgfQogICAgZnVuY3Rpb24gc2lnbmVkQXBwcm92ZUhhc2goYWRkcmVzcyB0b2tlbk93bmVyLCBhZGRyZXNzIHNwZW5kZXIsIHVpbnQgdG9rZW5zLCB1aW50IGZlZSwgdWludCBub25jZSkgcHVibGljIHZpZXcgcmV0dXJucyAoYnl0ZXMzMiBoYXNoKSB7CiAgICAgICAgcmV0dXJuIGRhdGEuc2lnbmVkQXBwcm92ZUhhc2goYWRkcmVzcyh0aGlzKSwgdG9rZW5Pd25lciwgc3BlbmRlciwgdG9rZW5zLCBmZWUsIG5vbmNlKTsKICAgIH0KICAgIGZ1bmN0aW9uIHNpZ25lZEFwcHJvdmVDaGVjayhhZGRyZXNzIHRva2VuT3duZXIsIGFkZHJlc3Mgc3BlbmRlciwgdWludCB0b2tlbnMsIHVpbnQgZmVlLCB1aW50IG5vbmNlLCBieXRlcyBzaWcsIGFkZHJlc3MgZmVlQWNjb3VudCkgcHVibGljIHZpZXcgcmV0dXJucyAoQ2hlY2tSZXN1bHQgcmVzdWx0KSB7CiAgICAgICAgcmV0dXJuIGRhdGEuc2lnbmVkQXBwcm92ZUNoZWNrKGFkZHJlc3ModGhpcyksIHRva2VuT3duZXIsIHNwZW5kZXIsIHRva2VucywgZmVlLCBub25jZSwgc2lnLCBmZWVBY2NvdW50KTsKICAgIH0KICAgIGZ1bmN0aW9uIHNpZ25lZEFwcHJvdmUoYWRkcmVzcyB0b2tlbk93bmVyLCBhZGRyZXNzIHNwZW5kZXIsIHVpbnQgdG9rZW5zLCB1aW50IGZlZSwgdWludCBub25jZSwgYnl0ZXMgc2lnLCBhZGRyZXNzIGZlZUFjY291bnQpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICByZXR1cm4gZGF0YS5zaWduZWRBcHByb3ZlKGFkZHJlc3ModGhpcyksIHRva2VuT3duZXIsIHNwZW5kZXIsIHRva2VucywgZmVlLCBub25jZSwgc2lnLCBmZWVBY2NvdW50KTsKICAgIH0KICAgIGZ1bmN0aW9uIHNpZ25lZFRyYW5zZmVyRnJvbUhhc2goYWRkcmVzcyBzcGVuZGVyLCBhZGRyZXNzIGZyb20sIGFkZHJlc3MgdG8sIHVpbnQgdG9rZW5zLCB1aW50IGZlZSwgdWludCBub25jZSkgcHVibGljIHZpZXcgcmV0dXJucyAoYnl0ZXMzMiBoYXNoKSB7CiAgICAgICAgcmV0dXJuIGRhdGEuc2lnbmVkVHJhbnNmZXJGcm9tSGFzaChhZGRyZXNzKHRoaXMpLCBzcGVuZGVyLCBmcm9tLCB0bywgdG9rZW5zLCBmZWUsIG5vbmNlKTsKICAgIH0KICAgIGZ1bmN0aW9uIHNpZ25lZFRyYW5zZmVyRnJvbUNoZWNrKGFkZHJlc3Mgc3BlbmRlciwgYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvLCB1aW50IHRva2VucywgdWludCBmZWUsIHVpbnQgbm9uY2UsIGJ5dGVzIHNpZywgYWRkcmVzcyBmZWVBY2NvdW50KSBwdWJsaWMgdmlldyByZXR1cm5zIChDaGVja1Jlc3VsdCByZXN1bHQpIHsKICAgICAgICByZXR1cm4gZGF0YS5zaWduZWRUcmFuc2ZlckZyb21DaGVjayhhZGRyZXNzKHRoaXMpLCBzcGVuZGVyLCBmcm9tLCB0bywgdG9rZW5zLCBmZWUsIG5vbmNlLCBzaWcsIGZlZUFjY291bnQpOwogICAgfQogICAgZnVuY3Rpb24gc2lnbmVkVHJhbnNmZXJGcm9tKGFkZHJlc3Mgc3BlbmRlciwgYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvLCB1aW50IHRva2VucywgdWludCBmZWUsIHVpbnQgbm9uY2UsIGJ5dGVzIHNpZywgYWRkcmVzcyBmZWVBY2NvdW50KSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgcmV0dXJuIGRhdGEuc2lnbmVkVHJhbnNmZXJGcm9tKGFkZHJlc3ModGhpcyksIHNwZW5kZXIsIGZyb20sIHRvLCB0b2tlbnMsIGZlZSwgbm9uY2UsIHNpZywgZmVlQWNjb3VudCk7CiAgICB9CiAgICBmdW5jdGlvbiBzaWduZWRBcHByb3ZlQW5kQ2FsbEhhc2goYWRkcmVzcyB0b2tlbk93bmVyLCBhZGRyZXNzIHNwZW5kZXIsIHVpbnQgdG9rZW5zLCBieXRlcyBfZGF0YSwgdWludCBmZWUsIHVpbnQgbm9uY2UpIHB1YmxpYyB2aWV3IHJldHVybnMgKGJ5dGVzMzIgaGFzaCkgewogICAgICAgIHJldHVybiBkYXRhLnNpZ25lZEFwcHJvdmVBbmRDYWxsSGFzaChhZGRyZXNzKHRoaXMpLCB0b2tlbk93bmVyLCBzcGVuZGVyLCB0b2tlbnMsIF9kYXRhLCBmZWUsIG5vbmNlKTsKICAgIH0KICAgIGZ1bmN0aW9uIHNpZ25lZEFwcHJvdmVBbmRDYWxsQ2hlY2soYWRkcmVzcyB0b2tlbk93bmVyLCBhZGRyZXNzIHNwZW5kZXIsIHVpbnQgdG9rZW5zLCBieXRlcyBfZGF0YSwgdWludCBmZWUsIHVpbnQgbm9uY2UsIGJ5dGVzIHNpZywgYWRkcmVzcyBmZWVBY2NvdW50KSBwdWJsaWMgdmlldyByZXR1cm5zIChDaGVja1Jlc3VsdCByZXN1bHQpIHsKICAgICAgICByZXR1cm4gZGF0YS5zaWduZWRBcHByb3ZlQW5kQ2FsbENoZWNrKGFkZHJlc3ModGhpcyksIHRva2VuT3duZXIsIHNwZW5kZXIsIHRva2VucywgX2RhdGEsIGZlZSwgbm9uY2UsIHNpZywgZmVlQWNjb3VudCk7CiAgICB9CiAgICBmdW5jdGlvbiBzaWduZWRBcHByb3ZlQW5kQ2FsbChhZGRyZXNzIHRva2VuT3duZXIsIGFkZHJlc3Mgc3BlbmRlciwgdWludCB0b2tlbnMsIGJ5dGVzIF9kYXRhLCB1aW50IGZlZSwgdWludCBub25jZSwgYnl0ZXMgc2lnLCBhZGRyZXNzIGZlZUFjY291bnQpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICByZXR1cm4gZGF0YS5zaWduZWRBcHByb3ZlQW5kQ2FsbChhZGRyZXNzKHRoaXMpLCB0b2tlbk93bmVyLCBzcGVuZGVyLCB0b2tlbnMsIF9kYXRhLCBmZWUsIG5vbmNlLCBzaWcsIGZlZUFjY291bnQpOwogICAgfQp9CgovLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCi8vIE93bmVkIGNvbnRyYWN0Ci8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KY29udHJhY3QgT3duZWQgewogICAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CiAgICBhZGRyZXNzIHB1YmxpYyBuZXdPd25lcjsKICAgIGV2ZW50IE93bmVyc2hpcFRyYW5zZmVycmVkKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90byk7CgogICAgZnVuY3Rpb24gT3duZWQoKSBwdWJsaWMgewogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgIH0KICAgIG1vZGlmaWVyIG9ubHlPd25lciB7CiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyKTsKICAgICAgICBfOwogICAgfQogICAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBfbmV3T3duZXIpIHB1YmxpYyBvbmx5T3duZXIgewogICAgICAgIG5ld093bmVyID0gX25ld093bmVyOwogICAgfQogICAgZnVuY3Rpb24gYWNjZXB0T3duZXJzaGlwKCkgcHVibGljIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gbmV3T3duZXIpOwogICAgICAgIE93bmVyc2hpcFRyYW5zZmVycmVkKG93bmVyLCBuZXdPd25lcik7CiAgICAgICAgb3duZXIgPSBuZXdPd25lcjsKICAgICAgICBuZXdPd25lciA9IGFkZHJlc3MoMCk7CiAgICB9CiAgICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcEltbWVkaWF0ZWx5KGFkZHJlc3MgX25ld093bmVyKSBwdWJsaWMgb25seU93bmVyIHsKICAgICAgICBPd25lcnNoaXBUcmFuc2ZlcnJlZChvd25lciwgX25ld093bmVyKTsKICAgICAgICBvd25lciA9IF9uZXdPd25lcjsKICAgICAgICBuZXdPd25lciA9IGFkZHJlc3MoMCk7CiAgICB9Cn0KCgovLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCi8vIEJva2t5UG9vQmFoJ3MgVG9rZW4gVGVsZXBvcnRhdGlvbiBTZXJ2aWNlIFRva2VuIEZhY3RvcnkgdjEuMDAKLy8KLy8gRW5qb3kuIChjKSBCb2treVBvb0JhaCAvIEJvayBDb25zdWx0aW5nIFB0eSBMdGQgMjAxNy4gVGhlIE1JVCBMaWNlbmNlLgovLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCmNvbnRyYWN0IEJUVFNUb2tlbkZhY3RvcnkgaXMgT3duZWQgewoKICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgLy8gSW50ZXJuYWwgZGF0YQogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gYm9vbCkgX3ZlcmlmeTsKCiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIC8vIEV2ZW50CiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIGV2ZW50IEJUVFNUb2tlbkxpc3RpbmcoYWRkcmVzcyBpbmRleGVkIG93bmVyQWRkcmVzcywKICAgICAgICBhZGRyZXNzIGluZGV4ZWQgYnR0c1Rva2VuQWRkcmVzcywgCiAgICAgICAgc3RyaW5nIHN5bWJvbCwgc3RyaW5nIG5hbWUsIHVpbnQ4IGRlY2ltYWxzLCAKICAgICAgICB1aW50IGluaXRpYWxTdXBwbHksIGJvb2wgbWludGFibGUsIGJvb2wgdHJhbnNmZXJhYmxlKTsKCgogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAvLyBBbnlvbmUgY2FuIGNhbGwgdGhpcyBtZXRob2QgdG8gdmVyaWZ5IHdoZXRoZXIgdGhlIGJ0dHNUb2tlbiBjb250cmFjdCBhdAogICAgLy8gdGhlIHNwZWNpZmllZCBhZGRyZXNzIHdhcyBkZXBsb3llZCB1c2luZyB0aGlzIGZhY3RvcnkKICAgIC8vCiAgICAvLyBQYXJhbWV0ZXJzOgogICAgLy8gICB0b2tlbkNvbnRyYWN0ICB0aGUgYnR0c1Rva2VuIGNvbnRyYWN0IGFkZHJlc3MKICAgIC8vCiAgICAvLyBSZXR1cm4gdmFsdWVzOgogICAgLy8gICB2YWxpZCAgICAgICAgICBkaWQgdGhpcyBCVFRTVG9rZW5GYWN0b3J5IGNyZWF0ZSB0aGUgQlRUU1Rva2VuIGNvbnRyYWN0PwogICAgLy8gICBkZWNpbWFscyAgICAgICBudW1iZXIgb2YgZGVjaW1hbCBwbGFjZXMgZm9yIHRoZSB0b2tlbiBjb250cmFjdAogICAgLy8gICBpbml0aWFsU3VwcGx5ICB0aGUgdG9rZW4gaW5pdGlhbCBzdXBwbHkKICAgIC8vICAgbWludGFibGUgICAgICAgaXMgdGhlIHRva2VuIG1pbnRhYmxlIGFmdGVyIGRlcGxveW1lbnQ/CiAgICAvLyAgIHRyYW5zZmVyYWJsZSAgIGFyZSB0aGUgdG9rZW5zIHRyYW5zZmVyYWJsZSBhZnRlciBkZXBsb3ltZW50PwogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICBmdW5jdGlvbiB2ZXJpZnkoYWRkcmVzcyB0b2tlbkNvbnRyYWN0KSBwdWJsaWMgdmlldyByZXR1cm5zICgKICAgICAgICBib29sICAgIHZhbGlkLAogICAgICAgIGFkZHJlc3Mgb3duZXIsCiAgICAgICAgdWludCAgICBkZWNpbWFscywKICAgICAgICBib29sICAgIG1pbnRhYmxlLAogICAgICAgIGJvb2wgICAgdHJhbnNmZXJhYmxlCiAgICApIHsKICAgICAgICB2YWxpZCA9IF92ZXJpZnlbdG9rZW5Db250cmFjdF07CiAgICAgICAgaWYgKHZhbGlkKSB7CiAgICAgICAgICAgIEJUVFNUb2tlbiB0ID0gQlRUU1Rva2VuKHRva2VuQ29udHJhY3QpOwogICAgICAgICAgICBvd25lciAgICAgICAgPSB0Lm93bmVyKCk7CiAgICAgICAgICAgIGRlY2ltYWxzICAgICA9IHQuZGVjaW1hbHMoKTsKICAgICAgICAgICAgbWludGFibGUgICAgID0gdC5taW50YWJsZSgpOwogICAgICAgICAgICB0cmFuc2ZlcmFibGUgPSB0LnRyYW5zZmVyYWJsZSgpOwogICAgICAgIH0KICAgIH0KCgogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAvLyBBbnkgYWNjb3VudCBjYW4gY2FsbCB0aGlzIG1ldGhvZCB0byBkZXBsb3kgYSBuZXcgQlRUU1Rva2VuIGNvbnRyYWN0LgogICAgLy8gVGhlIG93bmVyIG9mIHRoZSBCVFRTVG9rZW4gY29udHJhY3Qgd2lsbCBiZSB0aGUgY2FsbGluZyBhY2NvdW50CiAgICAvLwogICAgLy8gUGFyYW1ldGVyczoKICAgIC8vICAgc3ltYm9sICAgICAgICAgc3ltYm9sCiAgICAvLyAgIG5hbWUgICAgICAgICAgIG5hbWUKICAgIC8vICAgZGVjaW1hbHMgICAgICAgbnVtYmVyIG9mIGRlY2ltYWwgcGxhY2VzIGZvciB0aGUgdG9rZW4gY29udHJhY3QKICAgIC8vICAgaW5pdGlhbFN1cHBseSAgdGhlIHRva2VuIGluaXRpYWwgc3VwcGx5CiAgICAvLyAgIG1pbnRhYmxlICAgICAgIGlzIHRoZSB0b2tlbiBtaW50YWJsZSBhZnRlciBkZXBsb3ltZW50PwogICAgLy8gICB0cmFuc2ZlcmFibGUgICBhcmUgdGhlIHRva2VucyB0cmFuc2ZlcmFibGUgYWZ0ZXIgZGVwbG95bWVudD8KICAgIC8vCiAgICAvLyBGb3IgZXhhbXBsZSwgZGVwbG95aW5nIGEgQlRUU1Rva2VuIGNvbnRyYWN0IHdpdGggYGluaXRpYWxTdXBwbHlgIG9mCiAgICAvLyAxLDAwMC4wMDAwMDAwMDAwMDAwMDAwMDAgdG9rZW5zOgogICAgLy8gICBzeW1ib2wgICAgICAgICAiTUUiCiAgICAvLyAgIG5hbWUgICAgICAgICAgICJNeSBUb2tlbiIKICAgIC8vICAgZGVjaW1hbHMgICAgICAgMTgKICAgIC8vICAgaW5pdGlhbFN1cHBseSAgMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAgPSAxLDAwMC4wMDAwMDAwMDAwMDAwMDAwMDAKICAgIC8vICAgICAgICAgICAgICAgICAgdG9rZW5zCiAgICAvLyAgIG1pbnRhYmxlICAgICAgIGNhbiB0b2tlbnMgYmUgbWludGVkIGFmdGVyIGRlcGxveW1lbnQ/CiAgICAvLyAgIHRyYW5zZmVyYWJsZSAgIGFyZSB0aGUgdG9rZW5zIHRyYW5zZmVyYWJsZSBhZnRlciBkZXBsb3ltZW50PwogICAgLy8KICAgIC8vIFRoZSBCVFRTVG9rZW5MaXN0aW5nKCkgZXZlbnQgaXMgbG9nZ2VkIHdpdGggdGhlIGZvbGxvd2luZyBwYXJhbWV0ZXJzCiAgICAvLyAgIG93bmVyICAgICAgICAgIHRoZSBhY2NvdW50IHRoYXQgZXhlY3V0ZSB0aGlzIHRyYW5zYWN0aW9uCiAgICAvLyAgIHN5bWJvbCAgICAgICAgIHN5bWJvbAogICAgLy8gICBuYW1lICAgICAgICAgICBuYW1lCiAgICAvLyAgIGRlY2ltYWxzICAgICAgIG51bWJlciBvZiBkZWNpbWFsIHBsYWNlcyBmb3IgdGhlIHRva2VuIGNvbnRyYWN0CiAgICAvLyAgIGluaXRpYWxTdXBwbHkgIHRoZSB0b2tlbiBpbml0aWFsIHN1cHBseQogICAgLy8gICBtaW50YWJsZSAgICAgICBjYW4gdG9rZW5zIGJlIG1pbnRlZCBhZnRlciBkZXBsb3ltZW50PwogICAgLy8gICB0cmFuc2ZlcmFibGUgICBhcmUgdGhlIHRva2VucyB0cmFuc2ZlcmFibGUgYWZ0ZXIgZGVwbG95bWVudD8KICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgZnVuY3Rpb24gZGVwbG95QlRUU1Rva2VuQ29udHJhY3QoCiAgICAgICAgc3RyaW5nIHN5bWJvbCwKICAgICAgICBzdHJpbmcgbmFtZSwKICAgICAgICB1aW50OCBkZWNpbWFscywKICAgICAgICB1aW50IGluaXRpYWxTdXBwbHksCiAgICAgICAgYm9vbCBtaW50YWJsZSwKICAgICAgICBib29sIHRyYW5zZmVyYWJsZQogICAgKSBwdWJsaWMgcmV0dXJucyAoYWRkcmVzcyBidHRzVG9rZW5BZGRyZXNzKSB7CiAgICAgICAgYnR0c1Rva2VuQWRkcmVzcyA9IG5ldyBCVFRTVG9rZW4oCiAgICAgICAgICAgIG1zZy5zZW5kZXIsCiAgICAgICAgICAgIHN5bWJvbCwKICAgICAgICAgICAgbmFtZSwKICAgICAgICAgICAgZGVjaW1hbHMsCiAgICAgICAgICAgIGluaXRpYWxTdXBwbHksCiAgICAgICAgICAgIG1pbnRhYmxlLAogICAgICAgICAgICB0cmFuc2ZlcmFibGUpOwogICAgICAgIC8vIFJlY29yZCB0aGF0IHRoaXMgZmFjdG9yeSBjcmVhdGVkIHRoZSB0cmFkZXIKICAgICAgICBfdmVyaWZ5W2J0dHNUb2tlbkFkZHJlc3NdID0gdHJ1ZTsKICAgICAgICBCVFRTVG9rZW5MaXN0aW5nKG1zZy5zZW5kZXIsIGJ0dHNUb2tlbkFkZHJlc3MsIHN5bWJvbCwgbmFtZSwgZGVjaW1hbHMsIAogICAgICAgICAgICBpbml0aWFsU3VwcGx5LCBtaW50YWJsZSwgdHJhbnNmZXJhYmxlKTsKICAgIH0KCgogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAvLyBGYWN0b3J5IG93bmVyIGNhbiB0cmFuc2ZlciBvdXQgYW55IGFjY2lkZW50YWxseSBzZW50IEVSQzIwIHRva2VucwogICAgLy8KICAgIC8vIFBhcmFtZXRlcnM6CiAgICAvLyAgIHRva2VuQWRkcmVzcyAgY29udHJhY3QgYWRkcmVzcyBvZiB0aGUgdG9rZW4gY29udHJhY3QgYmVpbmcgd2l0aGRyYXduCiAgICAvLyAgICAgICAgICAgICAgICAgZnJvbQogICAgLy8gICB0b2tlbnMgICAgICAgIG51bWJlciBvZiB0b2tlbnMKICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgZnVuY3Rpb24gdHJhbnNmZXJBbnlFUkMyMFRva2VuKGFkZHJlc3MgdG9rZW5BZGRyZXNzLCB1aW50IHRva2VucykgcHVibGljIG9ubHlPd25lciByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICByZXR1cm4gRVJDMjBJbnRlcmZhY2UodG9rZW5BZGRyZXNzKS50cmFuc2Zlcihvd25lciwgdG9rZW5zKTsKICAgIH0KCiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIC8vIERvbid0IGFjY2VwdCBldGhlcnMKICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgZnVuY3Rpb24gKCkgcHVibGljIHBheWFibGUgewogICAgICAgIHJldmVydCgpOwogICAgfQp9'.
	

]
