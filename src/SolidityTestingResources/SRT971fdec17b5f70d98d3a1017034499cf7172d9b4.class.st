Class {
	#name : #SRT971fdec17b5f70d98d3a1017034499cf7172d9b4,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT971fdec17b5f70d98d3a1017034499cf7172d9b4 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuNDsKCmNvbnRyYWN0IFNhZmVNYXRoIHsKICAgIGZ1bmN0aW9uIHNhZmVBZGQodWludCBhLCB1aW50IGIpIHB1YmxpYyBwdXJlIHJldHVybnMgKHVpbnQgYykgewogICAgICAgIGMgPSBhICsgYjsKICAgICAgICByZXF1aXJlKGMgPj0gYSk7CiAgICB9CiAgICBmdW5jdGlvbiBzYWZlU3ViKHVpbnQgYSwgdWludCBiKSBwdWJsaWMgcHVyZSByZXR1cm5zICh1aW50IGMpIHsKICAgICAgICByZXF1aXJlKGIgPD0gYSk7CiAgICAgICAgYyA9IGEgLSBiOwogICAgfQogICAgZnVuY3Rpb24gc2FmZU11bCh1aW50IGEsIHVpbnQgYikgcHVibGljIHB1cmUgcmV0dXJucyAodWludCBjKSB7CiAgICAgICAgYyA9IGEgKiBiOwogICAgICAgIHJlcXVpcmUoYSA9PSAwIHx8IGMgLyBhID09IGIpOwogICAgfQogICAgZnVuY3Rpb24gc2FmZURpdih1aW50IGEsIHVpbnQgYikgcHVibGljIHB1cmUgcmV0dXJucyAodWludCBjKSB7CiAgICAgICAgcmVxdWlyZShiID4gMCk7CiAgICAgICAgYyA9IGEgLyBiOwogICAgfQp9Cgpjb250cmFjdCBUb2tlbiB7CiAgICAvLy8gQHJldHVybiB0b3RhbCBhbW91bnQgb2YgdG9rZW5zCiAgICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHN1cHBseSkge30KCiAgICAvLy8gQHBhcmFtIF9vd25lciBUaGUgYWRkcmVzcyBmcm9tIHdoaWNoIHRoZSBiYWxhbmNlIHdpbGwgYmUgcmV0cmlldmVkCiAgICAvLy8gQHJldHVybiBUaGUgYmFsYW5jZQogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7fQoKICAgIC8vLyBAbm90aWNlIHNlbmQgYF92YWx1ZWAgdG9rZW4gdG8gYF90b2AgZnJvbSBgbXNnLnNlbmRlcmAKICAgIC8vLyBAcGFyYW0gX3RvIFRoZSBhZGRyZXNzIG9mIHRoZSByZWNpcGllbnQKICAgIC8vLyBAcGFyYW0gX3ZhbHVlIFRoZSBhbW91bnQgb2YgdG9rZW4gdG8gYmUgdHJhbnNmZXJyZWQKICAgIC8vLyBAcmV0dXJuIFdoZXRoZXIgdGhlIHRyYW5zZmVyIHdhcyBzdWNjZXNzZnVsIG9yIG5vdAogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7fQoKICAgIC8vLyBAbm90aWNlIHNlbmQgYF92YWx1ZWAgdG9rZW4gdG8gYF90b2AgZnJvbSBgX2Zyb21gIG9uIHRoZSBjb25kaXRpb24gaXQgaXMgYXBwcm92ZWQgYnkgYF9mcm9tYAogICAgLy8vIEBwYXJhbSBfZnJvbSBUaGUgYWRkcmVzcyBvZiB0aGUgc2VuZGVyCiAgICAvLy8gQHBhcmFtIF90byBUaGUgYWRkcmVzcyBvZiB0aGUgcmVjaXBpZW50CiAgICAvLy8gQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IG9mIHRva2VuIHRvIGJlIHRyYW5zZmVycmVkCiAgICAvLy8gQHJldHVybiBXaGV0aGVyIHRoZSB0cmFuc2ZlciB3YXMgc3VjY2Vzc2Z1bCBvciBub3QKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHt9CgogICAgLy8vIEBub3RpY2UgYG1zZy5zZW5kZXJgIGFwcHJvdmVzIGBfYWRkcmAgdG8gc3BlbmQgYF92YWx1ZWAgdG9rZW5zCiAgICAvLy8gQHBhcmFtIF9zcGVuZGVyIFRoZSBhZGRyZXNzIG9mIHRoZSBhY2NvdW50IGFibGUgdG8gdHJhbnNmZXIgdGhlIHRva2VucwogICAgLy8vIEBwYXJhbSBfdmFsdWUgVGhlIGFtb3VudCBvZiB3ZWkgdG8gYmUgYXBwcm92ZWQgZm9yIHRyYW5zZmVyCiAgICAvLy8gQHJldHVybiBXaGV0aGVyIHRoZSBhcHByb3ZhbCB3YXMgc3VjY2Vzc2Z1bCBvciBub3QKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHt9CgogICAgLy8vIEBwYXJhbSBfb3duZXIgVGhlIGFkZHJlc3Mgb2YgdGhlIGFjY291bnQgb3duaW5nIHRva2VucwogICAgLy8vIEBwYXJhbSBfc3BlbmRlciBUaGUgYWRkcmVzcyBvZiB0aGUgYWNjb3VudCBhYmxlIHRvIHRyYW5zZmVyIHRoZSB0b2tlbnMKICAgIC8vLyBAcmV0dXJuIEFtb3VudCBvZiByZW1haW5pbmcgdG9rZW5zIGFsbG93ZWQgdG8gc3BlbnQKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKSB7fQoKICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7CgogICAgZXZlbnQgQnVybihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgdWludDI1NiB2YWx1ZSk7Cn0KCgpjb250cmFjdCBTdGFuZGFyZFRva2VuIGlzIFRva2VuLCBTYWZlTWF0aCB7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIGJhbGFuY2VzOwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBhbGxvd2VkOwogICAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7CgogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyB0bywgdWludCB0b2tlbnMpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IHNhZmVTdWIoYmFsYW5jZXNbbXNnLnNlbmRlcl0sIHRva2Vucyk7CiAgICAgICAgYmFsYW5jZXNbdG9dID0gc2FmZUFkZChiYWxhbmNlc1t0b10sIHRva2Vucyk7CgogICAgICAgIGVtaXQgVHJhbnNmZXIobXNnLnNlbmRlciwgdG8sIHRva2Vucyk7CgogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIGZyb20sIGFkZHJlc3MgdG8sIHVpbnQgdG9rZW5zKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgYmFsYW5jZXNbZnJvbV0gPSBzYWZlU3ViKGJhbGFuY2VzW2Zyb21dLCB0b2tlbnMpOwogICAgICAgIGFsbG93ZWRbZnJvbV1bbXNnLnNlbmRlcl0gPSBzYWZlU3ViKGFsbG93ZWRbZnJvbV1bbXNnLnNlbmRlcl0sIHRva2Vucyk7CiAgICAgICAgYmFsYW5jZXNbdG9dID0gc2FmZUFkZChiYWxhbmNlc1t0b10sIHRva2Vucyk7CgogICAgICAgIGVtaXQgVHJhbnNmZXIoZnJvbSwgdG8sIHRva2Vucyk7CgogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIHRva2VuT3duZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50IGJhbGFuY2UpIHsKICAgICAgICByZXR1cm4gYmFsYW5jZXNbdG9rZW5Pd25lcl07CiAgICB9CgogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIHNwZW5kZXIsIHVpbnQgdG9rZW5zKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtzcGVuZGVyXSA9IHRva2VuczsKCiAgICAgICAgZW1pdCBBcHByb3ZhbChtc2cuc2VuZGVyLCBzcGVuZGVyLCB0b2tlbnMpOwoKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyB0b2tlbk93bmVyLCBhZGRyZXNzIHNwZW5kZXIpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50IHJlbWFpbmluZykgewogICAgICAgIHJldHVybiBhbGxvd2VkW3Rva2VuT3duZXJdW3NwZW5kZXJdOwogICAgfQoKCiAgICBmdW5jdGlvbiBidXJuKHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgcmVxdWlyZShiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfdmFsdWUpOyAgICAgICAgICAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiB0aGUgc2VuZGVyIGhhcyBlbm91Z2gKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IHNhZmVTdWIoYmFsYW5jZXNbbXNnLnNlbmRlcl0sIF92YWx1ZSk7ICAgIC8vIFN1YnRyYWN0IGZyb20gdGhlIHNlbmRlcgogICAgICAgIHRvdGFsU3VwcGx5ID0gc2FmZVN1Yih0b3RhbFN1cHBseSxfdmFsdWUpOyAgICAgICAgICAgICAgICAgICAgICAgLy8gVXBkYXRlcyB0b3RhbFN1cHBseQoKICAgICAgICBlbWl0IEJ1cm4obXNnLnNlbmRlciwgX3ZhbHVlKTsKCiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgLyoqCiAgICAgKiBEZXN0cm95IHRva2VucyBmcm9tIG90aGVyIGFjY291bnQKICAgICAqCiAgICAgKiBSZW1vdmUgYF92YWx1ZWAgdG9rZW5zIGZyb20gdGhlIHN5c3RlbSBpcnJldmVyc2libHkgb24gYmVoYWxmIG9mIGBfZnJvbWAuCiAgICAgKgogICAgICogQHBhcmFtIF9mcm9tIHRoZSBhZGRyZXNzIG9mIHRoZSBzZW5kZXIKICAgICAqIEBwYXJhbSBfdmFsdWUgdGhlIGFtb3VudCBvZiBtb25leSB0byBidXJuCiAgICAgKi8KICAgIGZ1bmN0aW9uIGJ1cm5Gcm9tKGFkZHJlc3MgX2Zyb20sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgcmVxdWlyZShiYWxhbmNlc1tfZnJvbV0gPj0gX3ZhbHVlKTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gQ2hlY2sgaWYgdGhlIHRhcmdldGVkIGJhbGFuY2UgaXMgZW5vdWdoCiAgICAgICAgcmVxdWlyZShfdmFsdWUgPD0gYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0pOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gQ2hlY2sgYWxsb3dhbmNlCiAgICAgICAgYmFsYW5jZXNbX2Zyb21dID0gc2FmZVN1YihiYWxhbmNlc1tfZnJvbV0sX3ZhbHVlKTsgICAgICAgICAgICAgICAgICAgICAgICAgLy8gU3VidHJhY3QgZnJvbSB0aGUgdGFyZ2V0ZWQgYmFsYW5jZQogICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID0gc2FmZVN1YihhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSxfdmFsdWUpOyAgIC8vIFN1YnRyYWN0IGZyb20gdGhlIHNlbmRlcidzIGFsbG93YW5jZQogICAgICAgIHRvdGFsU3VwcGx5ID0gc2FmZVN1Yih0b3RhbFN1cHBseSxfdmFsdWUpOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFVwZGF0ZSB0b3RhbFN1cHBseQogICAgICAgIGVtaXQgICAgQnVybihfZnJvbSwgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KfQoKY29udHJhY3QgQ3J5cHRvbkNvaW4gaXMgU3RhbmRhcmRUb2tlbiB7CiAgICBzdHJpbmcgcHVibGljIG5hbWU7CiAgICB1aW50OCBwdWJsaWMgZGVjaW1hbHM7CiAgICBzdHJpbmcgcHVibGljIHN5bWJvbDsKICAgIHN0cmluZyBwdWJsaWMgdmVyc2lvbiA9ICdIMS4wJzsKICAgIGFkZHJlc3MgcHVibGljIGZ1bmRzV2FsbGV0OwogICAgYWRkcmVzcyBwdWJsaWMgY29udHJhY3RBZGRyZXNzOwoKICAgIHVpbnQyNTYgcHVibGljIHByZUljb1N1cHBseTsKICAgIHVpbnQyNTYgcHVibGljIHByZUljb1RvdGFsU3VwcGx5OwoKICAgIHVpbnQyNTYgcHVibGljIEljb1N1cHBseTsKICAgIHVpbnQyNTYgcHVibGljIEljb1RvdGFsU3VwcGx5OwoKICAgIHVpbnQyNTYgcHVibGljIG1heFN1cHBseTsKICAgIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5OwoKICAgIHVpbnQyNTYgcHVibGljIHVuaXRzT25lRXRoQ2FuQnV5OwogICAgdWludDI1NiBwdWJsaWMgdG90YWxFdGhJbldlaTsKCiAgICBib29sIHB1YmxpYyBpY29fZmluaXNoOwogICAgYm9vbCBwdWJsaWMgdG9rZW5fd2FzX2NyZWF0ZWQ7CgogICAgdWludDI1NiBwdWJsaWMgcHJlSWNvRmluaXNoVGltZXN0YW1wOwogICAgdWludDI1NiBwdWJsaWMgZnVuZGluZ0VuZFRpbWU7CiAgICB1aW50MjU2IHB1YmxpYyBmaW5hbFRva2Vuc0lzc3VlVGltZTsKCiAgICBmdW5jdGlvbiBDcnlwdG9uQ29pbigpIHB1YmxpYyB7CiAgICAgICAgZnVuZHNXYWxsZXQgPSBtc2cuc2VuZGVyOwoKICAgICAgICBuYW1lID0gIkNSWVBUT04iOwogICAgICAgIHN5bWJvbCA9ICJDUk4iOwogICAgICAgIGRlY2ltYWxzID0gMTg7CgogICAgICAgIGJhbGFuY2VzW2Z1bmRzV2FsbGV0XSA9IDA7CiAgICAgICAgdG90YWxTdXBwbHkgICAgICAgPSAwOwogICAgICAgIHByZUljb1RvdGFsU3VwcGx5ID0gMTQ0MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA7CiAgICAgICAgSWNvVG90YWxTdXBwbHkgICAgPSAzNjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDsKICAgICAgICBtYXhTdXBwbHkgICAgICAgICA9IDcyMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwOwogICAgICAgIHVuaXRzT25lRXRoQ2FuQnV5ID0gMzc3OwoKICAgICAgICBwcmVJY29GaW5pc2hUaW1lc3RhbXAgPSAxNTI0Nzg1OTkyOyAvLyBUaHUgQXByIDI2IDIzOjM5OjUyIFVUQyAyMDE4CiAgICAgICAgZnVuZGluZ0VuZFRpbWUgICAgICAgID0gMTUyODU4NzU5MjsgLy8gU2F0IEp1biAgOSAyMzozOTo1MiBVVEMgMjAxOAogICAgICAgIGZpbmFsVG9rZW5zSXNzdWVUaW1lICA9IDE1Nzc5MjE5OTI7IC8vIFdlZCBKYW4gIDEgMjM6Mzk6NTIgVVRDIDIwMjAKCiAgICAgICAgY29udHJhY3RBZGRyZXNzID0gYWRkcmVzcyh0aGlzKTsKICAgIH0KCiAgICBmdW5jdGlvbigpIHB1YmxpYyBwYXlhYmxlIHsKICAgICAgICByZXF1aXJlKCFpY29fZmluaXNoKTsKICAgICAgICByZXF1aXJlKGJsb2NrLnRpbWVzdGFtcCA8IGZ1bmRpbmdFbmRUaW1lKTsKICAgICAgICByZXF1aXJlKG1zZy52YWx1ZSAhPSAwKTsKCiAgICAgICAgdG90YWxFdGhJbldlaSA9IHRvdGFsRXRoSW5XZWkgKyBtc2cudmFsdWU7CiAgICAgICAgdWludDI1NiAgYW1vdW50ID0gMDsKICAgICAgICB1aW50MjU2IHRva2VuUHJpY2UgPSB1bml0c09uZUV0aENhbkJ1eTsKCiAgICAgICAgaWYgKGJsb2NrLnRpbWVzdGFtcCA8IHByZUljb0ZpbmlzaFRpbWVzdGFtcCkgewogICAgICAgICAgICByZXF1aXJlKG1zZy52YWx1ZSAqIHRva2VuUHJpY2UgKiAxMyAvIDEwIDw9IChwcmVJY29Ub3RhbFN1cHBseSAtIHByZUljb1N1cHBseSkpOwoKICAgICAgICAgICAgdG9rZW5QcmljZSA9IHNhZmVNdWwodG9rZW5QcmljZSwxMyk7CiAgICAgICAgICAgIHRva2VuUHJpY2UgPSBzYWZlRGl2KHRva2VuUHJpY2UsMTApOwoKICAgICAgICAgICAgYW1vdW50ID0gc2FmZU11bChtc2cudmFsdWUsdG9rZW5QcmljZSk7CiAgICAgICAgICAgIHByZUljb1N1cHBseSA9IHNhZmVBZGQocHJlSWNvU3VwcGx5LGFtb3VudCk7CgogICAgICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IHNhZmVBZGQoYmFsYW5jZXNbbXNnLnNlbmRlcl0sYW1vdW50KTsKICAgICAgICAgICAgdG90YWxTdXBwbHkgPSBzYWZlQWRkKHRvdGFsU3VwcGx5LGFtb3VudCk7CgogICAgICAgICAgICBlbWl0IFRyYW5zZmVyKGNvbnRyYWN0QWRkcmVzcywgbXNnLnNlbmRlciwgYW1vdW50KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXF1aXJlKG1zZy52YWx1ZSAqIHRva2VuUHJpY2UgPD0gKEljb1RvdGFsU3VwcGx5IC0gSWNvU3VwcGx5KSk7CgogICAgICAgICAgICBhbW91bnQgPSBzYWZlTXVsKG1zZy52YWx1ZSx0b2tlblByaWNlKTsKICAgICAgICAgICAgSWNvU3VwcGx5ID0gc2FmZUFkZChJY29TdXBwbHksYW1vdW50KTsKICAgICAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBzYWZlQWRkKGJhbGFuY2VzW21zZy5zZW5kZXJdLGFtb3VudCk7CiAgICAgICAgICAgIHRvdGFsU3VwcGx5ID0gc2FmZUFkZCh0b3RhbFN1cHBseSxhbW91bnQpOwoKICAgICAgICAgICAgZW1pdCBUcmFuc2Zlcihjb250cmFjdEFkZHJlc3MsIG1zZy5zZW5kZXIsIGFtb3VudCk7CiAgICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIHdpdGhkcmF3KCkgcHVibGljIHsKICAgICAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyID09IGZ1bmRzV2FsbGV0KTsKICAgICAgICAgICAgZnVuZHNXYWxsZXQudHJhbnNmZXIoY29udHJhY3RBZGRyZXNzLmJhbGFuY2UpOwoKICAgIH0KCiAgICBmdW5jdGlvbiBjcmVhdGVUb2tlbnNGb3JDcnlwdG9uKCkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIHJlcXVpcmUoaWNvX2ZpbmlzaCk7CiAgICAgICAgcmVxdWlyZSghdG9rZW5fd2FzX2NyZWF0ZWQpOwoKICAgICAgICBpZiAoYmxvY2sudGltZXN0YW1wID4gZmluYWxUb2tlbnNJc3N1ZVRpbWUpIHsKICAgICAgICAgICAgdWludDI1NiBhbW91bnQgPSBzYWZlQWRkKHByZUljb1N1cHBseSwgSWNvU3VwcGx5KTsKICAgICAgICAgICAgYW1vdW50ID0gc2FmZU11bChhbW91bnQsMyk7CiAgICAgICAgICAgIGFtb3VudCA9IHNhZmVEaXYoYW1vdW50LDEwKTsKCiAgICAgICAgICAgIGJhbGFuY2VzW2Z1bmRzV2FsbGV0XSA9IHNhZmVBZGQoYmFsYW5jZXNbZnVuZHNXYWxsZXRdLGFtb3VudCk7CiAgICAgICAgICAgIHRvdGFsU3VwcGx5ID0gc2FmZUFkZCh0b3RhbFN1cHBseSxhbW91bnQpOwogICAgICAgICAgICBlbWl0IFRyYW5zZmVyKGNvbnRyYWN0QWRkcmVzcywgZnVuZHNXYWxsZXQsIGFtb3VudCk7CiAgICAgICAgICAgIHRva2VuX3dhc19jcmVhdGVkID0gdHJ1ZTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIHN0b3BJY28oKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgaWYgKGJsb2NrLnRpbWVzdGFtcCA+IGZ1bmRpbmdFbmRUaW1lKSB7CiAgICAgICAgICAgIGljb19maW5pc2ggPSB0cnVlOwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gc2V0VG9rZW5QcmljZSh1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBmdW5kc1dhbGxldCk7CiAgICAgICAgcmVxdWlyZShfdmFsdWUgPCAxNTAwKTsKICAgICAgICB1bml0c09uZUV0aENhbkJ1eSA9IF92YWx1ZTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KfQovL0Jhc2VkIG9uIHRoZSBzb3VyY2UgZnJvbSBoYXNobm9kZS5jb20KLy9DUkVBVEVEIEJZIE1JQ0hBxYEgTUlDSEFMU0tJIEBZU1pUWSB3aXRoIENSWVBUT04uVkM='.
	

]
