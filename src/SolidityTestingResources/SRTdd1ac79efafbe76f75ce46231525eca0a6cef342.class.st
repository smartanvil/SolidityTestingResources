Class {
	#name : #SRTdd1ac79efafbe76f75ce46231525eca0a6cef342,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTdd1ac79efafbe76f75ce46231525eca0a6cef342 >> base64 [
	^ ''.
	

]
