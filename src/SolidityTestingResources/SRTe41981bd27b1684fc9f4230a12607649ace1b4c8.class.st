Class {
	#name : #SRTe41981bd27b1684fc9f4230a12607649ace1b4c8,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTe41981bd27b1684fc9f4230a12607649ace1b4c8 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTc7Cgpjb250cmFjdCBOb3ZhTGFiSW50ZXJmYWNlIHsKICAgIGZ1bmN0aW9uIGJvcm5GYW1lZFN0YXIodWludCBsYykgZXh0ZXJuYWwgY29uc3RhbnQgcmV0dXJucyhib29sKSB7fQp9Cgpjb250cmFjdCBOb3ZhQWNjZXNzQ29udHJvbCB7CiAgbWFwcGluZyAoYWRkcmVzcyA9PiBib29sKSBtYW5hZ2VyczsKICBhZGRyZXNzIGNmb0FkZHJlc3M7CgogIGZ1bmN0aW9uIE5vdmFBY2Nlc3NDb250cm9sKCkgcHVibGljIHsKICAgIG1hbmFnZXJzW21zZy5zZW5kZXJdID0gdHJ1ZTsKICB9CgogIG1vZGlmaWVyIG9ubHlNYW5hZ2VyKCkgewogICAgcmVxdWlyZShtYW5hZ2Vyc1ttc2cuc2VuZGVyXSk7CiAgICBfOwogIH0KCiAgZnVuY3Rpb24gc2V0TWFuYWdlcihhZGRyZXNzIF9uZXdNYW5hZ2VyKSBleHRlcm5hbCBvbmx5TWFuYWdlciB7CiAgICByZXF1aXJlKF9uZXdNYW5hZ2VyICE9IGFkZHJlc3MoMCkpOwogICAgbWFuYWdlcnNbX25ld01hbmFnZXJdID0gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIHJlbW92ZU1hbmFnZXIoYWRkcmVzcyBtYW5nZXJBZGRyZXNzKSBleHRlcm5hbCBvbmx5TWFuYWdlciB7CiAgICByZXF1aXJlKG1hbmdlckFkZHJlc3MgIT0gbXNnLnNlbmRlcik7CiAgICBtYW5hZ2Vyc1ttYW5nZXJBZGRyZXNzXSA9IGZhbHNlOwogIH0KCiAgZnVuY3Rpb24gdXBkYXRlQ2ZvKGFkZHJlc3MgbmV3Q2ZvQWRkcmVzcykgZXh0ZXJuYWwgb25seU1hbmFnZXIgewogICAgcmVxdWlyZShuZXdDZm9BZGRyZXNzICE9IGFkZHJlc3MoMCkpOwogICAgY2ZvQWRkcmVzcyA9IG5ld0Nmb0FkZHJlc3M7CiAgfQp9Cgpjb250cmFjdCBGYW1lZFN0YXIgaXMgTm92YUFjY2Vzc0NvbnRyb2wgewogIHN0cnVjdCBTdGFyIHsKICAgIGJ5dGVzMzIgbmFtZTsKICAgIHVpbnQgbWFzczsKICAgIHVpbnQgbGM7CiAgICBhZGRyZXNzIG93bmVyOwogIH0KCiAgYWRkcmVzcyBwdWJsaWMgbGFiQWRkcmVzczsKICBhZGRyZXNzIHB1YmxpYyBub3ZhQWRkcmVzczsKCiAgU3RhcltdIHN0YXJzOwogIG1hcHBpbmcgKGJ5dGVzMzIgPT4gdWludCkgcHVibGljIGZhbWVkU3Rhck5hbWVUb0lkczsKICBtYXBwaW5nICh1aW50ID0+IHVpbnQpIHB1YmxpYyBmYW1lZFN0YXJNYXNzVG9JZHM7CgogIGZ1bmN0aW9uIEZhbWVkU3RhcigpIHB1YmxpYyB7CiAgICAgIC8vIGFkZCBwbGFjZWhvbGRlcgogICAgICBfYWRkRmFtZWRTdGFyKCJwbGFjZWhvbGRlciIsIDAsIDApOwogIH0KCiAgZnVuY3Rpb24gX2J5dGVzMzJUb1N0cmluZyhieXRlczMyIHgpIGludGVybmFsIHB1cmUgcmV0dXJucyAoc3RyaW5nKSB7CiAgICBieXRlcyBtZW1vcnkgYnl0ZXNTdHJpbmcgPSBuZXcgYnl0ZXMoMzIpOwogICAgdWludCBjaGFyQ291bnQgPSAwOwogICAgZm9yICh1aW50IGogPSAwOyBqIDwgMzI7IGorKykgewogICAgICAgIGJ5dGUgY2hhciA9IGJ5dGUoYnl0ZXMzMih1aW50KHgpICogMiAqKiAoOCAqIGopKSk7CiAgICAgICAgaWYgKGNoYXIgIT0gMCkgewogICAgICAgICAgICBieXRlc1N0cmluZ1tjaGFyQ291bnRdID0gY2hhcjsKICAgICAgICAgICAgY2hhckNvdW50Kys7CiAgICAgICAgfQogICAgfQogICAgYnl0ZXMgbWVtb3J5IGJ5dGVzU3RyaW5nVHJpbW1lZCA9IG5ldyBieXRlcyhjaGFyQ291bnQpOwogICAgZm9yIChqID0gMDsgaiA8IGNoYXJDb3VudDsgaisrKSB7CiAgICAgICAgYnl0ZXNTdHJpbmdUcmltbWVkW2pdID0gYnl0ZXNTdHJpbmdbal07CiAgICB9CiAgICByZXR1cm4gc3RyaW5nKGJ5dGVzU3RyaW5nVHJpbW1lZCk7CiAgfQoKICBmdW5jdGlvbiBfc3RyaW5nVG9CeXRlczMyKHN0cmluZyBzb3VyY2UpIGludGVybmFsIHB1cmUgcmV0dXJucyAoYnl0ZXMzMiByZXN1bHQpIHsKICAgIGJ5dGVzIG1lbW9yeSB0ZW1wRW1wdHlTdHJpbmdUZXN0ID0gYnl0ZXMoc291cmNlKTsKICAgIGlmICh0ZW1wRW1wdHlTdHJpbmdUZXN0Lmxlbmd0aCA9PSAwKSB7CiAgICAgICAgcmV0dXJuIDB4MDsKICAgIH0KCiAgICBhc3NlbWJseSB7CiAgICAgICAgcmVzdWx0IDo9IG1sb2FkKGFkZChzb3VyY2UsIDMyKSkKICAgIH0KICB9CgogIGZ1bmN0aW9uIHVwZGF0ZUxhYkFkZHJlc3MoYWRkcmVzcyBhZGRyKSBleHRlcm5hbCBvbmx5TWFuYWdlciB7CiAgICAgIGxhYkFkZHJlc3MgPSBhZGRyOwogIH0KCiAgZnVuY3Rpb24gdXBkYXRlTm92YUFkZHJlc3MoYWRkcmVzcyBhZGRyKSBleHRlcm5hbCBvbmx5TWFuYWdlciB7CiAgICAgIG5vdmFBZGRyZXNzID0gYWRkcjsKICB9CgogIGZ1bmN0aW9uIGFkZEZhbWVkU3RhcihzdHJpbmcgbmFtZSwgdWludCBtYXNzLCB1aW50IGxjKSBleHRlcm5hbCBvbmx5TWFuYWdlciB7CiAgICAgIF9hZGRGYW1lZFN0YXIobmFtZSwgbWFzcywgbGMpOwogIH0KCiAgZnVuY3Rpb24gX2FkZEZhbWVkU3RhcihzdHJpbmcgbmFtZSwgdWludCBtYXNzLCB1aW50IGxjKSBpbnRlcm5hbCB7CiAgICAgIHJlcXVpcmUoYnl0ZXMobmFtZSkubGVuZ3RoIDw9IDMyKTsKICAgICAgdmFyIGJOID0gX3N0cmluZ1RvQnl0ZXMzMihuYW1lKTsKICAgICAgLy8gbm8gcmVwZWF0IG9uIG5hbWUKICAgICAgcmVxdWlyZShmYW1lZFN0YXJOYW1lVG9JZHNbYk5dID09IDApOwoKICAgICAgLy8gbm8gcmVwZWF0IG9uIG1hc3MKICAgICAgcmVxdWlyZShmYW1lZFN0YXJNYXNzVG9JZHNbbWFzc10gPT0gMCk7CgogICAgICB2YXIgaWQgPSBzdGFycy5wdXNoKFN0YXIoewogICAgICAgICAgbmFtZTogYk4sCiAgICAgICAgICBtYXNzOiBtYXNzLAogICAgICAgICAgbGM6IGxjLAogICAgICAgICAgb3duZXI6IDB4MAogICAgICB9KSkgLSAxOwoKICAgICAgZmFtZWRTdGFyTmFtZVRvSWRzW2JOXSA9IGlkOwogICAgICBmYW1lZFN0YXJNYXNzVG9JZHNbbWFzc10gPSBpZDsKICB9CgogIGZ1bmN0aW9uIGdldEZhbWVkU3RhckJ5SUQodWludCBpZCkgcHVibGljIGNvbnN0YW50IHJldHVybnModWludCBzdGFySUQsIHN0cmluZyBuYW1lLCB1aW50IG1hc3MsIGFkZHJlc3Mgb3duZXIpIHsKICAgICAgcmVxdWlyZShpZCA+IDAgJiYgaWQgPCBzdGFycy5sZW5ndGgpOwogICAgICB2YXIgc3RhciA9IHN0YXJzW2lkXTsKCiAgICAgIHJldHVybiAoaWQsIF9ieXRlczMyVG9TdHJpbmcoc3Rhci5uYW1lKSwgc3Rhci5tYXNzLCBzdGFyLm93bmVyKTsKICB9CgogIGZ1bmN0aW9uIGdldEZhbWVkU3RhckJ5TmFtZShzdHJpbmcgbikgcHVibGljIGNvbnN0YW50IHJldHVybnModWludCBzdGFySUQsIHN0cmluZyBuYW1lLCB1aW50IG1hc3MsIGFkZHJlc3Mgb3duZXIpIHsKICAgICAgc3RhcklEID0gZmFtZWRTdGFyTmFtZVRvSWRzW19zdHJpbmdUb0J5dGVzMzIobildOwoKICAgICAgcmVxdWlyZShzdGFySUQgPiAwKTsKCiAgICAgIHZhciBzdGFyID0gc3RhcnNbc3RhcklEXTsKCiAgICAgIHJldHVybiAoc3RhcklELCBuLCBzdGFyLm1hc3MsIHN0YXIub3duZXIpOwogIH0KCiAgZnVuY3Rpb24gZ2V0RmFtZWRTdGFyQnlNYXNzKHVpbnQgbSkgcHVibGljIGNvbnN0YW50IHJldHVybnModWludCBzdGFySUQsIHN0cmluZyBuYW1lLCB1aW50IG1hc3MsIGFkZHJlc3Mgb3duZXIpIHsKICAgICAgc3RhcklEID0gZmFtZWRTdGFyTWFzc1RvSWRzW21dOwoKICAgICAgcmVxdWlyZShzdGFySUQgPiAwKTsKCiAgICAgIHZhciBzdGFyID0gc3RhcnNbc3RhcklEXTsKCiAgICAgIHJldHVybiAoc3RhcklELCBfYnl0ZXMzMlRvU3RyaW5nKHN0YXIubmFtZSksIHN0YXIubWFzcywgc3Rhci5vd25lcik7CiAgfQoKICBmdW5jdGlvbiB1cGRhdGVGYW1lZFN0YXJPd25lcih1aW50IGlkLCBhZGRyZXNzIG5ld093bmVyKSBleHRlcm5hbCB7CiAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBub3ZhQWRkcmVzcyk7CiAgICAgIHJlcXVpcmUoaWQgPiAwICYmIGlkIDwgc3RhcnMubGVuZ3RoKTsKICAgICAgdmFyIHN0YXIgPSBzdGFyc1tpZF07CiAgICAgIHJlcXVpcmUoc3Rhci5tYXNzID4gMCk7CgogICAgICBzdGFyc1tpZF0ub3duZXIgPSBuZXdPd25lcjsKICB9CgogIGZ1bmN0aW9uIGJvcm5GYW1lZFN0YXIoYWRkcmVzcyB1c2VyQWRkcmVzcywgdWludCBtYXNzKSBleHRlcm5hbCByZXR1cm5zKHVpbnQgaWQsIGJ5dGVzMzIgbmFtZSkgewogICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gbm92YUFkZHJlc3MpOwogICAgICB2YXIgc3RhcklEID0gZmFtZWRTdGFyTWFzc1RvSWRzW21hc3NdOwogICAgICBpZiAoc3RhcklEID09IDApIHsKICAgICAgICAgIHJldHVybiAoMCwgMCk7CiAgICAgIH0KCiAgICAgIHZhciBzdGFyID0gc3RhcnNbc3RhcklEXTsKCiAgICAgIGlmIChzdGFyLm93bmVyICE9IGFkZHJlc3MoMHgwKSkgewogICAgICAgICAgcmV0dXJuICgwLCAwKTsKICAgICAgfQoKICAgICAgYm9vbCBpc0dvdDsKICAgICAgdmFyIGxhYkNvbnRyYWN0ID0gTm92YUxhYkludGVyZmFjZShsYWJBZGRyZXNzKTsKICAgICAgaXNHb3QgPSBsYWJDb250cmFjdC5ib3JuRmFtZWRTdGFyKHN0YXIubGMpOwogICAgICBpZiAoaXNHb3QpIHsKICAgICAgICAgIHN0YXJzW3N0YXJJRF0ub3duZXIgPSB1c2VyQWRkcmVzczsKICAgICAgICAgIHJldHVybiAoc3RhcklELCBzdGFyc1tzdGFySURdLm5hbWUpOwogICAgICB9IGVsc2UgewogICAgICAgICAgc3RhcnNbc3RhcklEXS5sYysrOwogICAgICAgICAgcmV0dXJuICgwLCAwKTsKICAgICAgfQogIH0KfQ=='.
	

]
