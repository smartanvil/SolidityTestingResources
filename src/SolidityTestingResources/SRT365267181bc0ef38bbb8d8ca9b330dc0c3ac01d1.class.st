Class {
	#name : #SRT365267181bc0ef38bbb8d8ca9b330dc0c3ac01d1,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT365267181bc0ef38bbb8d8ca9b330dc0c3ac01d1 >> base64 [
	^ 'LyogdmVyc2lvbiBtZXRhaGFzaCBFVEggbXVsdGkgc2lnbiB3YWxsZXQgMC4xLjUgUkMgKi8KcHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7Cgpjb250cmFjdCBtaGV0aGtlZXBlciB7CgogICAgLyogY29udHJhY3Qgc2V0dGluZ3MgKi8KCiAgICAvKiBkeW5hbWljIGRhdGEgc2VjdGlvbiAqLwogICAgYWRkcmVzcyBwdWJsaWMgcmVjaXBpZW50OyAgICAgICAgICAgLyogcmVjaXBpZW50ICovCiAgICB1aW50MjU2IHB1YmxpYyBhbW91bnRUb1RyYW5zZmVyOyAgICAgICAgLyogcXVhbnRpdHkgKi8KCgogICAgLyogc3RhdGljIGRhdGEgc2VjdGlvbiAqLwogICAgYm9vbCBwdWJsaWMgaXNGaW5hbGl6ZWQ7ICAgICAgICAgICAgLyogc2V0dGluZ3MgYXJlIGZpbmFsaXplZCAqLwogICAgdWludCBwdWJsaWMgbWluVm90ZXM7ICAgICAgICAgICAgICAgLyogbWluaW11bSBhbW91bnQgb2Ygdm90ZXMgKi8KICAgIHVpbnQgcHVibGljIGN1clZvdGVzOyAgICAgICAgICAgICAgIC8qIGN1cnJlbnQgYW1vdW50IG9mIHZvdGVzICovCiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsgICAgICAgICAgICAgICAvKiBjb250cmFjdCBjcmVhdG9yICovCiAgICB1aW50IHB1YmxpYyBtZ3JDb3VudDsgICAgICAgICAgICAgICAvKiBudW1iZXIgb2YgbWFuYWdlcnMgKi8KICAgIG1hcHBpbmcgKHVpbnQgPT4gYm9vbCkgcHVibGljIG1nclZvdGVzOyAgICAgLyogbWFuYWdlcnMgdm90ZXMgKi8KICAgIG1hcHBpbmcgKHVpbnQgPT4gYWRkcmVzcykgcHVibGljIG1nckFkZHJlc3M7IC8qIG1hbmFnZXJzIGFkZHJlc3MgKi8KCiAgICAvKiBjb25zdHJ1Y3RvciAqLwogICAgZnVuY3Rpb24gbWhldGhrZWVwZXIoKSBwdWJsaWN7CiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgICAgIGlzRmluYWxpemVkID0gZmFsc2U7CiAgICAgICAgY3VyVm90ZXMgPSAwOwogICAgICAgIG1nckNvdW50ID0gMDsKICAgICAgICBtaW5Wb3RlcyA9IDI7CiAgICB9CgogICAgLyogYWRkIGEgd2FsbGV0IG1hbmFnZXIgKi8KICAgIGZ1bmN0aW9uIEFkZE1hbmFnZXIoYWRkcmVzcyBfbWFuYWdlcikgcHVibGljewogICAgICAgIGlmICghaXNGaW5hbGl6ZWQgJiYgKG1zZy5zZW5kZXIgPT0gb3duZXIpKXsKICAgICAgICAgICAgbWdyQ291bnQgPSBtZ3JDb3VudCArIDE7CiAgICAgICAgICAgIG1nckFkZHJlc3NbbWdyQ291bnRdID0gX21hbmFnZXI7CiAgICAgICAgICAgIG1nclZvdGVzW21nckNvdW50XSA9IGZhbHNlOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldmVydCgpOwogICAgICAgIH0KICAgIH0KCiAgICAvKiBmaW5hbGl6ZSBzZXR0aW5ncyAqLwogICAgZnVuY3Rpb24gRmluYWxpemUoKSBwdWJsaWN7CiAgICAgICAgaWYgKCFpc0ZpbmFsaXplZCAmJiAobXNnLnNlbmRlciA9PSBvd25lcikpewogICAgICAgICAgICBpc0ZpbmFsaXplZCA9IHRydWU7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV2ZXJ0KCk7CiAgICAgICAgfQogICAgfQoKICAgIC8qIHNldCBhIG5ldyBhY3Rpb24gYW5kIHNldCBhIHZhbHVlIG9mIHplcm8gb24gYSB2b3RlICovCiAgICBmdW5jdGlvbiBTZXRBY3Rpb24oYWRkcmVzcyBfcmVjaXBpZW50LCB1aW50MjU2IF9hbW91bnRUb1RyYW5zZmVyKSBwdWJsaWN7CiAgICAgICAgaWYgKCFpc0ZpbmFsaXplZCl7CiAgICAgICAgICAgIHJldmVydCgpOwogICAgICAgIH0KCiAgICAgICAgaWYgKElzTWFuYWdlcihtc2cuc2VuZGVyKSl7CiAgICAgICAgICAgIGlmICh0aGlzLmJhbGFuY2UgPCBfYW1vdW50VG9UcmFuc2Zlcil7CiAgICAgICAgICAgICAgICByZXZlcnQoKTsKICAgICAgICAgICAgfQogICAgICAgICAgICByZWNpcGllbnQgPSBfcmVjaXBpZW50OwogICAgICAgICAgICBhbW91bnRUb1RyYW5zZmVyID0gX2Ftb3VudFRvVHJhbnNmZXI7CiAgICAgICAgICAgIAogICAgICAgICAgICBmb3IgKHVpbnQgaSA9IDE7IGkgPD0gbWdyQ291bnQ7IGkrKykgewogICAgICAgICAgICAgICAgbWdyVm90ZXNbaV0gPSBmYWxzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICBjdXJWb3RlcyA9IDA7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV2ZXJ0KCk7CiAgICAgICAgfQogICAgfQoKICAgIC8qIG1hbmFnZXIgdm90ZXMgZm9yIHRoZSBhY3Rpb24gKi8KICAgIGZ1bmN0aW9uIEFwcHJvdmUoYWRkcmVzcyBfcmVjaXBpZW50LCB1aW50MjU2IF9hbW91bnRUb1RyYW5zZmVyKSBwdWJsaWN7CiAgICAgICAgaWYgKCFpc0ZpbmFsaXplZCl7CiAgICAgICAgICAgIHJldmVydCgpOwogICAgICAgIH0KICAgICAgICBpZiAoISgocmVjaXBpZW50ID09IF9yZWNpcGllbnQpICYmIChhbW91bnRUb1RyYW5zZmVyID09IF9hbW91bnRUb1RyYW5zZmVyKSkpewogICAgICAgICAgICByZXZlcnQoKTsKICAgICAgICB9CgogICAgICAgIGZvciAodWludCBpID0gMTsgaSA8PSBtZ3JDb3VudDsgaSsrKSB7CiAgICAgICAgICAgIGlmIChtZ3JBZGRyZXNzW2ldID09IG1zZy5zZW5kZXIpewogICAgICAgICAgICAgICAgaWYgKCFtZ3JWb3Rlc1tpXSl7CiAgICAgICAgICAgICAgICAgICAgbWdyVm90ZXNbaV0gPSB0cnVlOwogICAgICAgICAgICAgICAgICAgIGN1clZvdGVzID0gY3VyVm90ZXMgKyAxOwoKICAgICAgICAgICAgICAgICAgICBpZiAoY3VyVm90ZXMgPj0gbWluVm90ZXMpewogICAgICAgICAgICAgICAgICAgICAgICByZWNpcGllbnQudHJhbnNmZXIoYW1vdW50VG9UcmFuc2Zlcik7CiAgICAgICAgICAgICAgICAgICAgICAgIE51bGxTZXR0aW5ncygpOwogICAgICAgICAgICAgICAgICAgIH0gCiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIHJldmVydCgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKICAgIC8qIHNldCBhIGRlZmF1bHQgcGF5YWJsZSBmdW5jdGlvbiAqLwogICAgZnVuY3Rpb24gKCkgcHVibGljIHBheWFibGUge30KICAgIAogICAgLyogc2V0IGRlZmF1bHQgZW1wdHkgc2V0dGluZ3MgICovCiAgICBmdW5jdGlvbiBOdWxsU2V0dGluZ3MoKSBwcml2YXRlewogICAgICAgIHJlY2lwaWVudCA9IGFkZHJlc3MoMHgwKTsKICAgICAgICBhbW91bnRUb1RyYW5zZmVyID0gMDsKICAgICAgICBjdXJWb3RlcyA9IDA7CiAgICAgICAgZm9yICh1aW50IGkgPSAxOyBpIDw9IG1nckNvdW50OyBpKyspIHsKICAgICAgICAgICAgbWdyVm90ZXNbaV0gPSBmYWxzZTsKICAgICAgICB9CgogICAgfQoKICAgIC8qIGNoZWNrIHRoYXQgdGhlIHNlbmRlciBpcyBhIG1hbmFnZXIgKi8KICAgIGZ1bmN0aW9uIElzTWFuYWdlcihhZGRyZXNzIF9tYW5hZ2VyKSBwcml2YXRlIHZpZXcgcmV0dXJucyhib29sKXsKICAgICAgICBmb3IgKHVpbnQgaSA9IDE7IGkgPD0gbWdyQ291bnQ7IGkrKykgewogICAgICAgICAgICBpZiAobWdyQWRkcmVzc1tpXSA9PSBfbWFuYWdlcil7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gZmFsc2U7CiAgICB9Cn0='.
	

]
