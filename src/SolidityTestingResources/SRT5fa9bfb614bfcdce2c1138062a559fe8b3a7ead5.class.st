Class {
	#name : #SRT5fa9bfb614bfcdce2c1138062a559fe8b3a7ead5,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT5fa9bfb614bfcdce2c1138062a559fe8b3a7ead5 >> base64 [
	^ ''.
	

]
