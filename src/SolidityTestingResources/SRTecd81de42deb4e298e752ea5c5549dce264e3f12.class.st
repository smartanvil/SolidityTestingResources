Class {
	#name : #SRTecd81de42deb4e298e752ea5c5549dce264e3f12,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTecd81de42deb4e298e752ea5c5549dce264e3f12 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTY7Ci8vRml4ZWQgQmFzZSBFQUMwIHN1cHBseSB0b2tlbiBjb250cmFjdAovLyAoYykgNy83LzIwMTcuIEVBQ09JTlM7Ci8vIERlZmluZSBzdGFuZGFyZCBmaWVsZHMgZm9yIEVSQzIwIGNvbnRyYWN0CmNvbnRyYWN0IEVSQzIwIHsKICAgLy8gdWludCBwdWJsaWMgdG90YWwgYSBnZXR0ZXIgZnVuY3Rpb24gaW5zdGVhZAogICAvLyBOT1RFIGZyb20gSmFsbW9zdCBldmVyeSB0b2tlbiBjb250cmFjdCB1c2VzIHB1YmxpYyB1aW50IHZhcmlhYmxlLiBUb3RhbCBzdXBwbHkgb2YgdCBJIHRoaW5rLiAKICAgIHN0cmluZyBwdWJsaWMgc3RhbmRhcmQgPSAnRVJDMjAnOwogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3Mgd2hvKSBjb25zdGFudCByZXR1cm5zICh1aW50KTsKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIG93bmVyLCBhZGRyZXNzIHNwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQpOwogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyB0bywgdWludCB2YWx1ZSkgcmV0dXJucyAoYm9vbCBvayk7CiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvLCB1aW50IHZhbHVlKSByZXR1cm5zIChib29sIG9rKTsKICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBzcGVuZGVyLCB1aW50IHZhbHVlKSByZXR1cm5zIChib29sIG9rKTsgCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50IHZhbHVlKTsKICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBvd25lciwgYWRkcmVzcyBpbmRleGVkIHNwZW5kZXIsIHVpbnQgdmFsdWUpOwp9CgovLyBuZWVkZWQgdG8gYWRkIHJlc3RyaWN0aW9ucyB3aG8gY291bGQgZXhlY3V0ZSBjb21tYW5kcyAoaW4gdGhpcyBjYXNlIG93bmVyIC0gcGVyc29uIHdobyBkZXBsb3llZCB0aGUgY29udHJhY3QpCgpjb250cmFjdCBPd25hYmxlIHsKICAgIGFkZHJlc3MgcHVibGljIG93bmVyOwogICAgZnVuY3Rpb24gT3duYWJsZSgpIHsKICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgICB9CiAgCiAgICAgICAgbW9kaWZpZXIgb25seU93bmVyIHsKICAgICAgICBhc3NlcnQobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICAgICAgXzsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld093bmVyKSBvbmx5T3duZXIgewogICAgICAgIGlmIChuZXdPd25lciAhPSBhZGRyZXNzKDApKSBvd25lciA9IG5ld093bmVyOwogICAgfQp9CgovLyBiZXN0IHByYWN0aWNlIHRvIHVzZSBzYWZlIG1hdGhlbWF0aWMgb3BlcmF0aW9ucyB0byBhdm9pZCBtYWpvciBwcm9ibGVtcwpsaWJyYXJ5IFNhZmVNYXRoIHsgCiAgICBmdW5jdGlvbiBzYWZlTXVsKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7CiAgICAgICAgdWludCBjID0gYSAqIGI7CiAgICAgICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgICAgICByZXR1cm4gYzsKICAgIH0KCiAgICBmdW5jdGlvbiBzYWZlRGl2KHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7CiAgICAgICAgLy8gYXNzZXJ0KGIgPiAwKTsgLy8gTk9URSAoaWhlbik6IHNvbGlkaXR5IHdpbGwgYXV0b21hdGljYWxseSB0aHJvdyB3aGVuIGRpdmlkZWQgYnkgMAogICAgICAgIHVpbnQgYyA9IGEgLyBiOwogICAgICAgIHJldHVybiBjOwogICAgfQoKICAgIGZ1bmN0aW9uIHNhZmVTdWIodWludCBhLCB1aW50IGIpIGludGVybmFsIHJldHVybnMgKHVpbnQpIHsKICAgICAgICBhc3NlcnQoYiA8PSBhKTsKICAgICAgICByZXR1cm4gYSAtIGI7CiAgICB9CgogICAgZnVuY3Rpb24gc2FmZUFkZCh1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgewogICAgICAgIHVpbnQgYyA9IGEgKyBiOwogICAgICAgIGFzc2VydChjID49IGEpOyAvLyBhICsgYiBjYW4ndCBiZSBsYXJnZXIgdGhhbiBvciBlcXVhbCB0byBhIHdoZW4gb3ZlcmZsb3dlZAogICAgICAgIHJldHVybiBjOwogICAgfQoKICAgIGZ1bmN0aW9uIG1heDY0KHVpbnQ2NCBhLCB1aW50NjQgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDY0KSB7CiAgICAgICAgcmV0dXJuIGEgPj0gYiA/IGEgOiBiOwogICAgfQoKICAgIGZ1bmN0aW9uIG1pbjY0KHVpbnQ2NCBhLCB1aW50NjQgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDY0KSB7CiAgICAgICAgcmV0dXJuIGEgPCBiID8gYSA6IGI7CiAgICB9CgogICAgZnVuY3Rpb24gbWF4MjU2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICAgICAgcmV0dXJuIGEgPj0gYiA/IGEgOiBiOwogICAgfQoKICAgIGZ1bmN0aW9uIG1pbjI1Nih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHJldHVybiBhIDwgYiA/IGEgOiBiOwogICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgCiAgICB9CiAgfQoKY29udHJhY3QgVG9rZW5TcGVuZGVyIHsKICAgIGZ1bmN0aW9uIHJlY2VpdmVBcHByb3ZhbChhZGRyZXNzIF9mcm9tLCB1aW50MjU2IF92YWx1ZSwgYWRkcmVzcyBfdG9rZW4sIGJ5dGVzIF9leHRyYURhdGEpOwp9Cgpjb250cmFjdCBFQUNPSU4gaXMgRVJDMjAsIE93bmFibGUgewogICAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQyNTY7CiAgICAvKiBQdWJsaWMgdmFyaWFibGVzIG9mIHRoZSB0b2tlbiAqLwogICAgc3RyaW5nIHB1YmxpYyBuYW1lOwogICAgc3RyaW5nIHB1YmxpYyBzeW1ib2w7CiAgICB1aW50OCBwdWJsaWMgZGVjaW1hbHM7CiAgICBzdHJpbmcgcHVibGljIHZlcnNpb24gPSAndjEuMCc7CiAgLy8gdWludCBwdWJsaWMgaW5pdGlhbFN1cHBseTsKICAgIHVpbnQgcHVibGljIHRvdGFsU3VwcGx5OwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50KSBwdWJsaWMgYmFsYW5jZXM7IC8vIE5PVEUoaGVuKTogdGhvc2Ugc2hvdWxkIGJlIHB1YmxpYwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQpKSBwdWJsaWMgYWxsb3dlZDsKCiAgICBmdW5jdGlvbiBFQUNPSU4oKSB7CiAgICAgICAgdG90YWxTdXBwbHkgPSAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA7CiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA7CiAgICAgICAgbmFtZSA9ICdFQUNPSU4nOwogICAgICAgIHN5bWJvbCA9ICdFQUNPJzsKICAgICAgICBkZWNpbWFscyA9IDE4OwogICAgfQoKICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIHdobykgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHJldHVybiBiYWxhbmNlc1t3aG9dOwogICAgfQogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQgX3ZhbHVlKSByZXR1cm5zIChib29sKSB7CiAgICAgICAgaWYgKGJhbGFuY2VzW21zZy5zZW5kZXJdID49IF92YWx1ZSAmJgogICAgICAgICAgICBfdmFsdWUgPiAwIC8qIHplcm8gdHJhbnNmZXIgaXMgbm90IGFsbG93ZWQgKi8gJiYKICAgICAgICAgICAgYmFsYW5jZXNbX3RvXSArIF92YWx1ZSA+IGJhbGFuY2VzW190b10gLyogY2hlY2sgb3ZlcmZsb3cgKi8pIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtIF92YWx1ZTsKICAgICAgICAgICAgYmFsYW5jZXNbX3RvXSA9IGJhbGFuY2VzW190b10gKyBfdmFsdWU7CiAgICAgICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3Mgc3BlbmRlciwgdWludDI1NiB2YWx1ZSkgcmV0dXJucyAoYm9vbCkgewogICAgICAgIHJlcXVpcmUodmFsdWUgPiAwICYmIHNwZW5kZXIgIT0gMHgwKTsKICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW3NwZW5kZXJdID0gdmFsdWU7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSkgcmV0dXJucyAoYm9vbCkgewogICAgICAgIGlmIChiYWxhbmNlc1tfZnJvbV0gPj0gX3ZhbHVlICYmCiAgICAgICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID49IF92YWx1ZSAmJgogICAgICAgICAgICBfdmFsdWUgPiAwICYmCiAgICAgICAgICAgIGJhbGFuY2VzW190b10gKyBfdmFsdWUgPiBiYWxhbmNlc1tfdG9dKSB7CiAgICAgICAgICAgICBiYWxhbmNlc1tfZnJvbV0gLT0gX3ZhbHVlOwogICAgICAgICAgICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOwogICAgICAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfdmFsdWU7CiAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgIH0KICAgIH0KICAgIAogICAgIC8qIEFwcHJvdmUgYW5kIHRoZW4gY29tdW5pY2F0ZSB0aGUgYXBwcm92ZWQgY29udHJhY3QgaW4gYSBzaW5nbGUgdHggKi8KICAgICAgICBmdW5jdGlvbiBhcHByb3ZlQW5kQ2FsbChhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSwgYnl0ZXMgX2V4dHJhRGF0YSkgewogICAgICAgICBUb2tlblNwZW5kZXIgc3BlbmRlciA9IFRva2VuU3BlbmRlcihfc3BlbmRlcik7CiAgICAgICAgIGlmIChhcHByb3ZlKF9zcGVuZGVyLCBfdmFsdWUpKSB7CiAgICAgICAgICAgICBzcGVuZGVyLnJlY2VpdmVBcHByb3ZhbChtc2cuc2VuZGVyLCBfdmFsdWUsIHRoaXMsIF9leHRyYURhdGEpOwogICAgICAgICB9CiAgICB9CiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQgcmVtYWluaW5nKSB7CiAgICByZXR1cm4gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsKICB9Cn0='.
	

]
