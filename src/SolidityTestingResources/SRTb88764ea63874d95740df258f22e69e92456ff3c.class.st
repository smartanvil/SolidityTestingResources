Class {
	#name : #SRTb88764ea63874d95740df258f22e69e92456ff3c,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTb88764ea63874d95740df258f22e69e92456ff3c >> base64 [
	^ ''.
	

]
