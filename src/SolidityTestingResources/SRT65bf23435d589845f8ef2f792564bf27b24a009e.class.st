Class {
	#name : #SRT65bf23435d589845f8ef2f792564bf27b24a009e,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT65bf23435d589845f8ef2f792564bf27b24a009e >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgoKLy8vIEB0aXRsZSBTYWZlTWF0aCBjb250cmFjdCAtIE1hdGggb3BlcmF0aW9ucyB3aXRoIHNhZmV0eSBjaGVja3MuCi8vLyBAYXV0aG9yIE9wZW5aZXBwZWxpbjogaHR0cHM6Ly9naXRodWIuY29tL09wZW5aZXBwZWxpbi96ZXBwZWxpbi1zb2xpZGl0eS9ibG9iL21hc3Rlci9jb250cmFjdHMvbWF0aC9TYWZlTWF0aC5zb2wKY29udHJhY3QgU2FmZU1hdGggewogICAgZnVuY3Rpb24gbXVsKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQpIHsKICAgICAgICB1aW50IGMgPSBhICogYjsKICAgICAgICBhc3NlcnQoYSA9PSAwIHx8IGMgLyBhID09IGIpOwogICAgICAgIHJldHVybiBjOwogICAgfQoKICAgIGZ1bmN0aW9uIGRpdih1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50KSB7CiAgICAgICAgYXNzZXJ0KGIgPiAwKTsKICAgICAgICB1aW50IGMgPSBhIC8gYjsKICAgICAgICBhc3NlcnQoYSA9PSBiICogYyArIGEgJSBiKTsKICAgICAgICByZXR1cm4gYzsKICAgIH0KCiAgICBmdW5jdGlvbiBzdWIodWludCBhLCB1aW50IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludCkgewogICAgICAgIGFzc2VydChiIDw9IGEpOwogICAgICAgIHJldHVybiBhIC0gYjsKICAgIH0KCiAgICBmdW5jdGlvbiBhZGQodWludCBhLCB1aW50IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludCkgewogICAgICAgIHVpbnQgYyA9IGEgKyBiOwogICAgICAgIGFzc2VydChjID49IGEpOwogICAgICAgIHJldHVybiBjOwogICAgfQoKICAgIGZ1bmN0aW9uIHBvdyh1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50KSB7CiAgICAgICAgdWludCBjID0gYSAqKiBiOwogICAgICAgIGFzc2VydChjID49IGEpOwogICAgICAgIHJldHVybiBjOwogICAgfQp9CgovLy8gQHRpdGxlIEFic3RyYWN0IEVSQzIwIHRva2VuIGludGVyZmFjZQpjb250cmFjdCBBYnN0cmFjdFRva2VuIHsKCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBvd25lcikgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKTsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sIHVpbnQyNTYgdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgZnJvbSwgYWRkcmVzcyB0bywgdWludDI1NiB2YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3Mgc3BlbmRlciwgdWludDI1NiB2YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBvd25lciwgYWRkcmVzcyBzcGVuZGVyKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2IHJlbWFpbmluZyk7CgogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiB2YWx1ZSk7CiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBzcGVuZGVyLCB1aW50MjU2IHZhbHVlKTsKICAgIGV2ZW50IElzc3VhbmNlKGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiB2YWx1ZSk7Cn0KCgoKY29udHJhY3QgT3duZWQgewoKICAgIGFkZHJlc3MgcHVibGljIG93bmVyID0gbXNnLnNlbmRlcjsKICAgIGFkZHJlc3MgcHVibGljIHBvdGVudGlhbE93bmVyOwoKICAgIG1vZGlmaWVyIG9ubHlPd25lciB7CiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyKTsKICAgICAgICBfOwogICAgfQoKICAgIG1vZGlmaWVyIG9ubHlQb3RlbnRpYWxPd25lciB7CiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyID09IHBvdGVudGlhbE93bmVyKTsKICAgICAgICBfOwogICAgfQoKICAgIGV2ZW50IE5ld093bmVyKGFkZHJlc3Mgb2xkLCBhZGRyZXNzIGN1cnJlbnQpOwogICAgZXZlbnQgTmV3UG90ZW50aWFsT3duZXIoYWRkcmVzcyBvbGQsIGFkZHJlc3MgcG90ZW50aWFsKTsKCiAgICBmdW5jdGlvbiBzZXRPd25lcihhZGRyZXNzIF9uZXcpCiAgICAgICAgcHVibGljCiAgICAgICAgb25seU93bmVyCiAgICB7CiAgICAgICAgTmV3UG90ZW50aWFsT3duZXIob3duZXIsIF9uZXcpOwogICAgICAgIHBvdGVudGlhbE93bmVyID0gX25ldzsKICAgIH0KCiAgICBmdW5jdGlvbiBjb25maXJtT3duZXJzaGlwKCkKICAgICAgICBwdWJsaWMKICAgICAgICBvbmx5UG90ZW50aWFsT3duZXIKICAgIHsKICAgICAgICBOZXdPd25lcihvd25lciwgcG90ZW50aWFsT3duZXIpOwogICAgICAgIG93bmVyID0gcG90ZW50aWFsT3duZXI7CiAgICAgICAgcG90ZW50aWFsT3duZXIgPSAwOwogICAgfQp9CgoKLy8vIEB0aXRsZSBUb2tlbiBjb250cmFjdCAtIEltcGxlbWVudHMgU3RhbmRhcmQgRVJDMjAgVG9rZW4gZm9yIFNiZXJDb2luIHByb2plY3QuCi8vLyBAYXV0aG9yIE5pY2UgRm9sayBPdXQKY29udHJhY3QgV2VhbHRoTWFuYWdlbWVudCBpcyBPd25lZCwgU2FmZU1hdGggewoKICAgIGV2ZW50IERlcG9zaXRSZWNlaXZlZCh1aW50MjU2IHZhbHVlKTsKICAgIGV2ZW50IFdpdGhkcmF3UGVyZm9ybWVkKHVpbnQyNTYgdmFsdWUpOwoKICAgIC8vIFdlYWx0aCBDdXJyZW5jeSAoc2JlclRva2VuQWRkcmVzcykKICAgIGFkZHJlc3MgcHVibGljIGN1cnJlbmN5OwoKICAgIC8vIFRyYWRlcgogICAgYWRkcmVzcyBwdWJsaWMgdHJhZGVyOwoKICAgIC8vRGVwb3NpdCBDb3VudGVyCiAgICB1aW50MjU2IHB1YmxpYyBkZXBvc2l0czsKCiAgICAvL1dpdGhkcmF3cyBDb3VudGVyCiAgICB1aW50MjU2IHB1YmxpYyB3aXRoZHJhd3M7CgogICAgLy9UcmFkZXMgY291bnRlcmNsYWltCiAgICB1aW50MjU2IHB1YmxpYyB0cmFkZXM7CgogICAgbW9kaWZpZXIgb25seU93bmVyT3JUcmFkZXIgewogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lciB8fCBtc2cuc2VuZGVyID09IHRyYWRlcik7CiAgICAgICAgXzsKICAgIH0KCiAgICAvLy8gQGRldiBDb250cmFjdCBjb25zdHJ1Y3RvcgogICAgZnVuY3Rpb24gV2VhbHRoTWFuYWdlbWVudChhZGRyZXNzIF9jdXJyZW5jeSwgYWRkcmVzcyBfdHJhZGVyKQogICAgICAgIHB1YmxpYwogICAgewogICAgICAgIGN1cnJlbmN5ID0gX2N1cnJlbmN5OwogICAgICAgIHRyYWRlciA9IF90cmFkZXI7CiAgICB9CgogICAgZnVuY3Rpb24gZGVwb3NpdCh1aW50MjU2IGRlcG9zaXRBbW91bnQpCiAgICAgIHB1YmxpYwogICAgICBvbmx5T3duZXIKICAgIHsKICAgICAgcmVxdWlyZShBYnN0cmFjdFRva2VuKGN1cnJlbmN5KS50cmFuc2ZlckZyb20ob3duZXIsIHRoaXMsIGRlcG9zaXRBbW91bnQpKTsKICAgICAgZGVwb3NpdHMgPSBhZGQoZGVwb3NpdHMsIGRlcG9zaXRBbW91bnQpOwogICAgICBEZXBvc2l0UmVjZWl2ZWQoZGVwb3NpdEFtb3VudCk7CiAgICB9CgogICAgZnVuY3Rpb24gd2l0aGRyYXcodWludCB3aXRoZHJhd0Ftb3VudCkKICAgICAgcHVibGljCiAgICAgIG9ubHlPd25lcgogICAgewogICAgICB1aW50MjU2IGN1cnJlbnRCYWxhbmNlID0gQWJzdHJhY3RUb2tlbihjdXJyZW5jeSkuYmFsYW5jZU9mKGFkZHJlc3ModGhpcykpOwoKICAgICAgcmVxdWlyZShjdXJyZW50QmFsYW5jZSA+PSB3aXRoZHJhd0Ftb3VudCk7CgogICAgICByZXF1aXJlKEFic3RyYWN0VG9rZW4oY3VycmVuY3kpLnRyYW5zZmVyKG93bmVyLCB3aXRoZHJhd0Ftb3VudCkpOwoKICAgICAgd2l0aGRyYXdzID0gYWRkKHdpdGhkcmF3cywgd2l0aGRyYXdBbW91bnQpOwoKICAgICAgV2l0aGRyYXdQZXJmb3JtZWQod2l0aGRyYXdBbW91bnQpOwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYWRlKCkKICAgICAgICBwdWJsaWMKICAgICAgICBvbmx5T3duZXJPclRyYWRlcgogICAgewogICAgICAgIC8vSW4gdGhpcyBmdW5jdGlvbiB3ZSB3aWxsIGltcGxlbWVudCBsb2dpYyBvZiB0cmFkZXMgZm9yIEFpclN3YXAvS3liZXIgTmV0d29yay8weAogICAgICAgIHRyYWRlcyA9IHRyYWRlcyArIDE7CiAgICB9Cn0='.
	

]
