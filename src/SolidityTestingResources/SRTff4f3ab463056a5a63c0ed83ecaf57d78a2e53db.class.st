Class {
	#name : #SRTff4f3ab463056a5a63c0ed83ecaf57d78a2e53db,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTff4f3ab463056a5a63c0ed83ecaf57d78a2e53db >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7Cgpjb250cmFjdCBQVE9ZVG9rZW4gewogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSk7CiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpOwp9Cgpjb250cmFjdCBJT1UgewogIC8vIFN0b3JlIHRoZSBhbW91bnQgb2YgSU9VcyBwdXJjaGFzZWQgYnkgYSBidXllcgogIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIGlvdV9wdXJjaGFzZWQ7CgogIC8vIFN0b3JlIHRoZSBhbW91bnQgb2YgRVRIIHNlbnQgaW4gYnkgYSBidXllcgogIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIGV0aF9zZW50OwoKICAvLyBUb3RhbCBJT1VzIGF2YWlsYWJsZSB0byBzZWxsCiAgdWludDI1NiBwdWJsaWMgdG90YWxfaW91X2F2YWlsYWJsZSA9IDQwMDAwMDAwMDsKCiAgLy8gVG90YWwgSU9VcyBwdXJjaGFzZWQgYnkgYWxsIGJ1eWVycwogIHVpbnQyNTYgcHVibGljIHRvdGFsX2lvdV9wdXJjaGFzZWQ7CgogIC8vIFRvdGFsIElPVSB3aXRoZHJhd24gYnkgYWxsIGJ1eWVycyAoa2VlcCB0cmFjayB0byBwcm90ZWN0IGJ1eWVycykKICB1aW50MjU2IHB1YmxpYyB0b3RhbF9pb3Vfd2l0aGRyYXduOwoKICB1aW50MjU2IHB1YmxpYyBwcmljZV9pbl93ZWkgPSAxMDAwMDAwMDAwMDAwMDA7CgogIC8vICBNVEwgdG9rZW4gY29udHJhY3QgYWRkcmVzcyAoSU9VIG9mZmVyaW5nKQogIFBUT1lUb2tlbiBwdWJsaWMgdG9rZW4gPSBQVE9ZVG9rZW4oMHg4QWU0QkYyQzMzYThlNjY3ZGUzNEI1NDkzOEIwY2NEMDNFYjhDQzA2KTsKCiAgLy8gVGhlIHNlbGxlcidzIGFkZHJlc3MgKHRvIHJlY2VpdmUgRVRIIHVwb24gZGlzdHJpYnV0aW9uLCBhbmQgZm9yIGF1dGhpbmcgc2FmZXRpZXMpCiAgYWRkcmVzcyBzZWxsZXIgPSAweDAwNkZFZDk1YUQzOTc3NzkzOEFhRTBCYUFBMTFiNGNCMzNkRjBGNWE7CgogIC8vIEhhbHQgZnVydGhlciBwdXJjaGFzZSBhYmlsaXR5IGp1c3QgaW4gY2FzZQogIGJvb2wgcHVibGljIGhhbHRfcHVyY2hhc2VzOwoKICBtb2RpZmllciBwd25lcigpIHsgaWYobXNnLnNlbmRlciAhPSBzZWxsZXIpIHRocm93OyBfOyB9CgogIC8qCiAgICBTYWZldHkgdG8gd2l0aGRyYXcgdW5ib3VnaHQgdG9rZW5zIGJhY2sgdG8gc2VsbGVyLiBFbnN1cmVzIHRoZSBhbW91bnQKICAgIHRoYXQgYnV5ZXJzIHN0aWxsIG5lZWQgdG8gd2l0aGRyYXcgcmVtYWlucyBhdmFpbGFibGUKICAqLwogIGZ1bmN0aW9uIHdpdGhkcmF3VG9rZW5zKCkgcHduZXIgewogICAgdG9rZW4udHJhbnNmZXIoc2VsbGVyLCB0b2tlbi5iYWxhbmNlT2YoYWRkcmVzcyh0aGlzKSkgLSAodG90YWxfaW91X3B1cmNoYXNlZCAtIHRvdGFsX2lvdV93aXRoZHJhd24pKTsKICB9CgogIC8qCiAgICBTYWZldHkgdG8gcHJldmVudCBhbnltb3JlIHB1cmNoYXNlcy9zYWxlcyBmcm9tIG9jY3VycmluZyBpbiB0aGUgZXZlbnQgb2YKICAgIHVuZm9yZXNlZW4gaXNzdWUuIEJ1eWVyIHdpdGhkcmF3YWxzIHN0aWxsIHJlbWFpbiBlbmFibGVkLgogICovCiAgZnVuY3Rpb24gaGFsdFB1cmNoYXNlcygpIHB3bmVyIHsKICAgIGhhbHRfcHVyY2hhc2VzID0gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIHJlc3VtZVB1cmNoYXNlcygpIHB3bmVyIHsKICAgIGhhbHRfcHVyY2hhc2VzID0gZmFsc2U7CiAgfQoKICAvKgogICAgVXBkYXRlIGF2YWlsYWJsZSBJT1UgdG8gcHVyY2hhc2UKICAqLwogIGZ1bmN0aW9uIHVwZGF0ZUF2YWlsYWJpbGl0eSh1aW50MjU2IF9pb3VfYW1vdW50KSBwd25lciB7CiAgICBpZihfaW91X2Ftb3VudCA8IHRvdGFsX2lvdV9wdXJjaGFzZWQpIHRocm93OwoKICAgIHRvdGFsX2lvdV9hdmFpbGFibGUgPSBfaW91X2Ftb3VudDsKICB9CgogIC8qCiAgICBVcGRhdGUgSU9VIHByaWNlCiAgKi8KICBmdW5jdGlvbiB1cGRhdGVQcmljZSh1aW50MjU2IF9wcmljZSkgcHduZXIgewogICAgcHJpY2VfaW5fd2VpID0gX3ByaWNlOwogIH0KCiAgLyoKICAgIFJlbGVhc2UgYnV5ZXIncyBFVEggdG8gc2VsbGVyIE9OTFkgaWYgYW1vdW50IG9mIGNvbnRyYWN0J3MgdG9rZW5zIGJhbGFuY2UKICAgIGlzID49IHRvIHRoZSBhbW91bnQgdGhhdCBzdGlsbCBuZWVkcyB0byBiZSB3aXRoZHJhd24uIFByb3RlY3RzIGJ1eWVyLgoKICAgIFRoZSBzZWxsZXIgbXVzdCBjYWxsIHRoaXMgZnVuY3Rpb24gbWFudWFsbHkgYWZ0ZXIgZGVwb3NpdGluZyB0aGUgYWRlcXVhdGUKICAgIGFtb3VudCBvZiB0b2tlbnMgZm9yIGFsbCBidXllcnMgdG8gY29sbGVjdAoKICAgIFRoaXMgZWZmZWN0aXZlbHkgZW5kcyB0aGUgc2FsZSwgYnV0IHdpdGhkcmF3YWxzIHJlbWFpbiBvcGVuCiAgKi8KICBmdW5jdGlvbiBwYXlTZWxsZXIoKSBwd25lciB7CiAgICAvLyBub3QgZW5vdWdoIHRva2VucyBpbiBiYWxhbmNlIHRvIHJlbGVhc2UgRVRILCBwcm90ZWN0IGJ1eWVyIGFuZCBhYm9ydAogICAgaWYodG9rZW4uYmFsYW5jZU9mKGFkZHJlc3ModGhpcykpIDwgKHRvdGFsX2lvdV9wdXJjaGFzZWQgLSB0b3RhbF9pb3Vfd2l0aGRyYXduKSkgdGhyb3c7CgogICAgLy8gSGFsdCBmdXJ0aGVyIHB1cmNoYXNlcyB0byBwcmV2ZW50IGFjY2lkZW50YWwgb3Zlci1zZWxsaW5nCiAgICBoYWx0X3B1cmNoYXNlcyA9IHRydWU7CgogICAgLy8gUmVsZWFzZSBidXllcidzIEVUSCB0byB0aGUgc2VsbGVyCiAgICBzZWxsZXIudHJhbnNmZXIodGhpcy5iYWxhbmNlKTsKICB9CgogIGZ1bmN0aW9uIHdpdGhkcmF3KCkgcGF5YWJsZSB7CiAgICAvKgogICAgICBNYWluIG1lY2hhbmlzbSB0byBlbnN1cmUgYSBidXllcidzIHB1cmNoYXNlL0VUSC9JT1UgaXMgc2FmZS4KCiAgICAgIFJlZnVuZCB0aGUgYnV5ZXIncyBFVEggaWYgd2UncmUgYmV5b25kIHRoZSBjdXQtb2ZmIGRhdGUgb2Ygb3VyIGRpc3RyaWJ1dGlvbgogICAgICBwcm9taXNlIEFORCBpZiB0aGUgY29udHJhY3QgZG9lc24ndCBoYXZlIGFuIGFkZXF1YXRlIGFtb3VudCBvZiB0b2tlbnMKICAgICAgdG8gZGlzdHJpYnV0ZSB0byB0aGUgYnV5ZXIuIFRpbWUtc2Vuc2l0aXZlIGJ1eWVyL0VUSCBwcm90ZWN0aW9uIGlzIG9ubHkKICAgICAgYXBwbGljYWJsZSBpZiB0aGUgY29udHJhY3QgZG9lc24ndCBoYXZlIGFkZXF1YXRlIHRva2VucyBmb3IgdGhlIGJ1eWVyLgoKICAgICAgVGhlICJhZGVxdWFjeSIgY2hlY2sgcHJldmVudHMgdGhlIHNlbGxlciBhbmQvb3IgdGhpcmQgcGFydHkgYXR0YWNrZXIKICAgICAgZnJvbSBsb2NraW5nIGRvd24gYnV5ZXJzJyBFVEggYnkgc2VuZGluZyBpbiBhbiBhcmJpdHJhcnkgYW1vdW50IG9mIHRva2Vucy4KCiAgICAgIElmIGZvciB3aGF0ZXZlciByZWFzb24gdGhlIHRva2VucyByZW1haW4gbG9ja2VkIGZvciBhbiB1bmV4cGVjdGVkIHBlcmlvZAogICAgICBiZXlvbmQgdGhlIHRpbWUgZGVmaW5lZCBieSBibG9jay5udW1iZXIsIHBhdGllbnQgYnV5ZXJzIG1heSBzdGlsbCB3YWl0IHVudGlsCiAgICAgIHRoZSBjb250cmFjdCBpcyBmaWxsZWQgd2l0aCB0aGVpciBwdXJjaGFzZWQgSU9Vcy90b2tlbnMuIE9uY2UgdGhlIHRva2VucwogICAgICBhcmUgaGVyZSwgdGhleSBjYW4gaW5pdGlhdGUgYSB3aXRoZHJhdygpIHRvIHJldHJpZXZlIHRoZWlyIHRva2Vucy4gQXR0ZW1wdGluZwogICAgICB0byB3aXRoZHJhdyBhbnkgc29vbmVyIChhZnRlciB0aGUgYmxvY2sgaGFzIGJlZW4gbWluZWQsIGJ1dCB0b2tlbnMgbm90IGFycml2ZWQpCiAgICAgIHdpbGwgcmVzdWx0IGluIGEgcmVmdW5kIG9mIGJ1eWVyJ3MgRVRILgogICAgKi8KICAgIGlmKGJsb2NrLm51bWJlciA+IDQxOTk5OTkgJiYgaW91X3B1cmNoYXNlZFttc2cuc2VuZGVyXSA+IHRva2VuLmJhbGFuY2VPZihhZGRyZXNzKHRoaXMpKSkgewogICAgICAvLyBXZSBkaWRuJ3QgZnVsZmlsbCBvdXIgcHJvbWlzZSB0byBoYXZlIGFkZXF1YXRlIHRva2VucyB3aXRoZHJhd2FibGUgYXQgeHggdGltZQogICAgICAvLyBSZWZ1bmQgdGhlIGJ1eWVyJ3MgRVRIIGF1dG9tYXRpY2FsbHkgaW5zdGVhZAogICAgICB1aW50MjU2IGV0aF90b19yZWZ1bmQgPSBldGhfc2VudFttc2cuc2VuZGVyXTsKCiAgICAgIC8vIElmIHRoZSB1c2VyIGRvZXNuJ3QgaGF2ZSBhbnkgRVRIIG9yIHRva2VucyB0byB3aXRoZHJhdywgZ2V0IG91dCBBU0FQCiAgICAgIGlmKGV0aF90b19yZWZ1bmQgPT0gMCB8fCBpb3VfcHVyY2hhc2VkW21zZy5zZW5kZXJdID09IDApIHRocm93OwoKICAgICAgLy8gQWRqdXN0IHRvdGFsIHB1cmNoYXNlZCBzbyBvdGhlcnMgY2FuIGJ1eSwgYW5kIHNvIG51bWJlcnMgYWxpZ24gd2l0aCB0b3RhbF9pb3Vfd2l0aGRyYXduCiAgICAgIHRvdGFsX2lvdV9wdXJjaGFzZWQgLT0gaW91X3B1cmNoYXNlZFttc2cuc2VuZGVyXTsKCiAgICAgIC8vIENsZWFyIHJlY29yZCBvZiBidXllcidzIEVUSCBhbmQgSU9VIGJhbGFuY2UgYmVmb3JlIHJlZnVuZGluZwogICAgICBldGhfc2VudFttc2cuc2VuZGVyXSA9IDA7CiAgICAgIGlvdV9wdXJjaGFzZWRbbXNnLnNlbmRlcl0gPSAwOwoKICAgICAgbXNnLnNlbmRlci50cmFuc2ZlcihldGhfdG9fcmVmdW5kKTsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIC8qCiAgICAgIENoZWNrIGlmIHRoZXJlIGlzIGFuIGFkZXF1YXRlIGFtb3VudCBvZiB0b2tlbnMgaW4gdGhlIGNvbnRyYWN0IHlldAogICAgICBhbmQgYWxsb3cgdGhlIGJ1eWVyIHRvIHdpdGhkcmF3IHRva2VucwogICAgKi8KICAgIGlmKHRva2VuLmJhbGFuY2VPZihhZGRyZXNzKHRoaXMpKSA9PSAwIHx8IGlvdV9wdXJjaGFzZWRbbXNnLnNlbmRlcl0gPiB0b2tlbi5iYWxhbmNlT2YoYWRkcmVzcyh0aGlzKSkpIHRocm93OwoKICAgIHVpbnQyNTYgaW91X3RvX3dpdGhkcmF3ID0gaW91X3B1cmNoYXNlZFttc2cuc2VuZGVyXTsKCiAgICAvLyBJZiB0aGUgdXNlciBkb2Vzbid0IGhhdmUgYW55IElPVXMgdG8gd2l0aGRyYXcsIGdldCBvdXQgQVNBUAogICAgaWYoaW91X3RvX3dpdGhkcmF3ID09IDApIHRocm93OwoKICAgIC8vIENsZWFyIHJlY29yZCBvZiBidXllcidzIElPVSBhbmQgRVRIIGJhbGFuY2UgYmVmb3JlIHRyYW5zZmVycmluZyBvdXQKICAgIGlvdV9wdXJjaGFzZWRbbXNnLnNlbmRlcl0gPSAwOwogICAgZXRoX3NlbnRbbXNnLnNlbmRlcl0gPSAwOwoKICAgIHRvdGFsX2lvdV93aXRoZHJhd24gKz0gaW91X3RvX3dpdGhkcmF3OwoKICAgIC8vIERpc3RyaWJ1dGUgdG9rZW5zIHRvIHRoZSBidXllcgogICAgdG9rZW4udHJhbnNmZXIobXNnLnNlbmRlciwgaW91X3RvX3dpdGhkcmF3KTsKICB9CgogIGZ1bmN0aW9uIHB1cmNoYXNlKCkgcGF5YWJsZSB7CiAgICBpZihoYWx0X3B1cmNoYXNlcykgdGhyb3c7CiAgICBpZihtc2cudmFsdWUgPT0gMCkgdGhyb3c7CgogICAgLy8gRGV0ZXJtaW5lIGFtb3VudCBvZiB0b2tlbnMgdXNlciB3YW50cyB0by9jYW4gYnV5CiAgICB1aW50MjU2IGlvdV90b19wdXJjaGFzZSA9IChtc2cudmFsdWUgKiAxMCoqOCkgLyBwcmljZV9pbl93ZWk7CgogICAgLy8gQ2hlY2sgaWYgd2UgaGF2ZSBlbm91Z2ggSU9VcyBsZWZ0IHRvIHNlbGwKICAgIGlmKCh0b3RhbF9pb3VfcHVyY2hhc2VkICsgaW91X3RvX3B1cmNoYXNlKSA+IHRvdGFsX2lvdV9hdmFpbGFibGUpIHRocm93OwoKICAgIC8vIFVwZGF0ZSB0aGUgYW1vdW50IG9mIElPVXMgcHVyY2hhc2VkIGJ5IHVzZXIuIEFsc28ga2VlcCB0cmFjayBvZiB0aGUgdG90YWwgRVRIIHRoZXkgc2VudCBpbgogICAgaW91X3B1cmNoYXNlZFttc2cuc2VuZGVyXSArPSBpb3VfdG9fcHVyY2hhc2U7CiAgICBldGhfc2VudFttc2cuc2VuZGVyXSArPSBtc2cudmFsdWU7CgogICAgLy8gVXBkYXRlIHRoZSB0b3RhbCBhbW91bnQgb2YgSU9VcyBwdXJjaGFzZWQgYnkgYWxsIGJ1eWVycwogICAgdG90YWxfaW91X3B1cmNoYXNlZCArPSBpb3VfdG9fcHVyY2hhc2U7CiAgfQoKICAvLyBGYWxsYmFjayBmdW5jdGlvbi9lbnRyeSBwb2ludAogIGZ1bmN0aW9uICgpIHBheWFibGUgewogICAgaWYobXNnLnZhbHVlID09IDApIHsKICAgICAgd2l0aGRyYXcoKTsKICAgIH0KICAgIGVsc2UgewogICAgICBwdXJjaGFzZSgpOwogICAgfQogIH0KfQ=='.
	

]
