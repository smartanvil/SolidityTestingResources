Class {
	#name : #SRTFB7Aa013425B762cF2D8FEFd05F3CD4B9Ab3Df11,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTFB7Aa013425B762cF2D8FEFd05F3CD4B9Ab3Df11 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7CgogLy8vIEB0aXRsZSBPd25hYmxlIGNvbnRyYWN0IC0gYmFzZSBjb250cmFjdCB3aXRoIGFuIG93bmVyCmNvbnRyYWN0IE93bmFibGUgewogIGFkZHJlc3MgcHVibGljIG93bmVyOwoKICBmdW5jdGlvbiBPd25hYmxlKCkgcHVibGljIHsKICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICB9CgogIG1vZGlmaWVyIG9ubHlPd25lcigpIHsKICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7CiAgICBfOwogIH0KCiAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBuZXdPd25lcikgcHVibGljIG9ubHlPd25lciB7CiAgICBpZiAobmV3T3duZXIgIT0gYWRkcmVzcygwKSkgewogICAgICBvd25lciA9IG5ld093bmVyOwogICAgfQogIH0KfQoKIC8vLyBAdGl0bGUgU2FmZU1hdGggY29udHJhY3QgLSBtYXRoIG9wZXJhdGlvbnMgd2l0aCBzYWZldHkgY2hlY2tzCmNvbnRyYWN0IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBzYWZlTXVsKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCBwdXJlICByZXR1cm5zICh1aW50KSB7CiAgICB1aW50IGMgPSBhICogYjsKICAgIGFzc2VydChhID09IDAgfHwgYyAvIGEgPT0gYik7CiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIHNhZmVEaXYodWludCBhLCB1aW50IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludCkgewogICAgYXNzZXJ0KGIgPiAwKTsKICAgIHVpbnQgYyA9IGEgLyBiOwogICAgYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7CiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIHNhZmVTdWIodWludCBhLCB1aW50IGIpIGludGVybmFsIHB1cmUgcmV0dXJucyAodWludCkgewogICAgYXNzZXJ0KGIgPD0gYSk7CiAgICByZXR1cm4gYSAtIGI7CiAgfQoKICBmdW5jdGlvbiBzYWZlQWRkKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQpIHsKICAgIHVpbnQgYyA9IGEgKyBiOwogICAgYXNzZXJ0KGM+PWEgJiYgYz49Yik7CiAgICByZXR1cm4gYzsKICB9CgogIGZ1bmN0aW9uIG1heDY0KHVpbnQ2NCBhLCB1aW50NjQgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50NjQpIHsKICAgIHJldHVybiBhID49IGIgPyBhIDogYjsKICB9CgogIGZ1bmN0aW9uIG1pbjY0KHVpbnQ2NCBhLCB1aW50NjQgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50NjQpIHsKICAgIHJldHVybiBhIDwgYiA/IGEgOiBiOwogIH0KCiAgZnVuY3Rpb24gbWF4MjU2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHJldHVybiBhID49IGIgPyBhIDogYjsKICB9CgogIGZ1bmN0aW9uIG1pbjI1Nih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICByZXR1cm4gYSA8IGIgPyBhIDogYjsKICB9Cn0KCiAvLy8gQHRpdGxlIEVSQzIwIGludGVyZmFjZSBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL0VJUHMvaXNzdWVzLzIwCmNvbnRyYWN0IEVSQzIwIHsKICB1aW50IHB1YmxpYyB0b3RhbFN1cHBseTsKICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyB3aG8pIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50KTsKICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBvd25lciwgYWRkcmVzcyBzcGVuZGVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludCk7ICAKICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIHRvLCB1aW50IHZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBvayk7CiAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgZnJvbSwgYWRkcmVzcyB0bywgdWludCB2YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgb2spOwogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBzcGVuZGVyLCB1aW50IHZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBvayk7CiAgZnVuY3Rpb24gZGVjaW1hbHMoKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludCB2YWx1ZSk7CiAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludCB2YWx1ZSk7CiAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIG93bmVyLCBhZGRyZXNzIGluZGV4ZWQgc3BlbmRlciwgdWludCB2YWx1ZSk7Cn0KCmNvbnRyYWN0IFNpbGVudE5vdGFyeVRva2VuU3RvcmFnZSBpcyBTYWZlTWF0aCwgT3duYWJsZSB7CgogIC8vLyBJbmZvcm1hdGlvbiBhYm91dCBmcm96ZW4gcG9ydGlvbiBvZiB0b2tlbnMKICBzdHJ1Y3QgRnJvemVuUG9ydGlvbiB7CiAgICAvLy8gRWFybGllc3QgdGltZSB3aGVuIHRoaXMgcG9ydGlvbiB3aWxsIGJlY29tZSBhdmFpbGFibGUKICAgIHVpbnQgdW5mcmVlemVUaW1lOwoKICAgIC8vLyBGcm96ZW4gYmFsYW5jZSBwb3J0aW9uLCBpbiBwZXJjZW50cwogICAgdWludCBwb3J0aW9uUGVyY2VudDsKCiAgICAvLy8gRnJvemVuIHRva2VuIGFtb3VudAogICAgdWludCBwb3J0aW9uQW1vdW50OwoKICAgIC8vLyBJcyB0aGlzIHBvcnRpb24gdW5mcm96ZW4gKHdpdGhkcmF3bikgYWZ0ZXIgZnJlZXplIHBlcmlvZCBoYXMgZmluaXNoZWQKICAgIGJvb2wgaXNVbmZyb3plbjsKICB9CgogIC8vLyBTcGVjaWZpZWQgYW1vdW50IG9mIHRva2VucyB3YXMgdW5mcm96ZW4KICBldmVudCBVbmZyb3plbih1aW50IHRva2VuQW1vdW50KTsKCiAgLy8vIFNpbGVudE5vdGFyeSB0b2tlbiBjb250cmFjdAogIEVSQzIwIHB1YmxpYyB0b2tlbjsKCiAgLy8vIEFsbCBmcm96ZW4gcG9ydGlvbnMgb2YgdGhlIGNvbnRyYWN0IHRva2VuIGJhbGFuY2UKICBGcm96ZW5Qb3J0aW9uW10gcHVibGljIGZyb3plblBvcnRpb25zOwoKICAvLy8gVGVhbSB3YWxsZXQgdG8gd2l0aGRyYXcgdW5mcm96ZW4gdG9rZW5zCiAgYWRkcmVzcyBwdWJsaWMgdGVhbVdhbGxldDsKCiAgLy8vIERlcGxveW1lbnQgdGltZSBvZiB0aGlzIGNvbnRyYWN0LCB3aGljaCBpcyBhbHNvIHRoZSBzdGFydCBwb2ludCB0byBjb3VudCBmcmVlemUgcGVyaW9kcwogIHVpbnQgcHVibGljIGRlcGxveWVkVGltZTsKCiAgLy8vIElzIGN1cnJlbnQgdG9rZW4gYW1vdW50IGZpeGVkIChtdXN0IGJlIHRvIHVuZnJlZXplKQogIGJvb2wgcHVibGljIGFtb3VudEZpeGVkOwoKICAvLy8gQGRldiBDb25zdHJ1Y3RvcgogIC8vLyBAcGFyYW0gX3Rva2VuIFNpbGVudE5vdGFyeSB0b2tlbiBjb250cmFjdCBhZGRyZXNzCiAgLy8vIEBwYXJhbSBfdGVhbVdhbGxldCBXYWxsZXQgYWRkcmVzcyB0byB3aXRoZHJhdyB1bmZyb3plbiB0b2tlbnMKICAvLy8gQHBhcmFtIF9mcmVlemVQZXJpb2RzIE9yZGVyZWQgYXJyYXkgb2YgZnJlZXplIHBlcmlvZHMKICAvLy8gQHBhcmFtIF9mcmVlemVQb3J0aW9ucyBPcmRlcmVkIGFycmF5IG9mIGJhbGFuY2UgcG9ydGlvbnMgdG8gZnJlZXplLCBpbiBwZXJjZW50cwogIGZ1bmN0aW9uIFNpbGVudE5vdGFyeVRva2VuU3RvcmFnZSAoYWRkcmVzcyBfdG9rZW4sIGFkZHJlc3MgX3RlYW1XYWxsZXQsIHVpbnRbXSBfZnJlZXplUGVyaW9kcywgdWludFtdIF9mcmVlemVQb3J0aW9ucykgcHVibGljIHsKICAgIHJlcXVpcmUoX3Rva2VuID4gMCk7CiAgICByZXF1aXJlKF90ZWFtV2FsbGV0ID4gMCk7CiAgICByZXF1aXJlKF9mcmVlemVQZXJpb2RzLmxlbmd0aCA+IDApOwogICAgcmVxdWlyZShfZnJlZXplUGVyaW9kcy5sZW5ndGggPT0gX2ZyZWV6ZVBvcnRpb25zLmxlbmd0aCk7CgogICAgdG9rZW4gPSBFUkMyMChfdG9rZW4pOwogICAgdGVhbVdhbGxldCA9IF90ZWFtV2FsbGV0OwogICAgZGVwbG95ZWRUaW1lID0gbm93OwoKICAgIHZhciBjdW11bGF0aXZlVGltZSA9IGRlcGxveWVkVGltZTsKICAgIHVpbnQgY3VtdWxhdGl2ZVBlcmNlbnQgPSAwOwogICAgZm9yICh1aW50IGkgPSAwOyBpIDwgX2ZyZWV6ZVBlcmlvZHMubGVuZ3RoOyBpKyspIHsKICAgICAgcmVxdWlyZShfZnJlZXplUG9ydGlvbnNbaV0gPiAwICYmIF9mcmVlemVQb3J0aW9uc1tpXSA8PSAxMDApOwogICAgICBjdW11bGF0aXZlUGVyY2VudCA9IHNhZmVBZGQoY3VtdWxhdGl2ZVBlcmNlbnQsIF9mcmVlemVQb3J0aW9uc1tpXSk7CiAgICAgIGN1bXVsYXRpdmVUaW1lID0gc2FmZUFkZChjdW11bGF0aXZlVGltZSwgX2ZyZWV6ZVBlcmlvZHNbaV0pOwogICAgICBmcm96ZW5Qb3J0aW9ucy5wdXNoKEZyb3plblBvcnRpb24oewogICAgICAgIHBvcnRpb25QZXJjZW50OiBfZnJlZXplUG9ydGlvbnNbaV0sCiAgICAgICAgdW5mcmVlemVUaW1lOiBjdW11bGF0aXZlVGltZSwKICAgICAgICBwb3J0aW9uQW1vdW50OiAwLAogICAgICAgIGlzVW5mcm96ZW46IGZhbHNlfSkpOwogICAgfQogICAgYXNzZXJ0KGN1bXVsYXRpdmVQZXJjZW50ID09IDEwMCk7CiAgfQoKICAvLy8gQGRldiBVbmZyZWV6ZSBjdXJyZW50bHkgYXZhaWxhYmxlIGFtb3VudCBvZiB0b2tlbnMKICBmdW5jdGlvbiB1bmZyZWV6ZSgpIHB1YmxpYyBvbmx5T3duZXIgewogICAgcmVxdWlyZShhbW91bnRGaXhlZCk7CgogICAgdWludCB1bmZyb3plblRva2VucyA9IDA7CiAgICBmb3IgKHVpbnQgaSA9IDA7IGkgPCBmcm96ZW5Qb3J0aW9ucy5sZW5ndGg7IGkrKykgewogICAgICB2YXIgcG9ydGlvbiA9IGZyb3plblBvcnRpb25zW2ldOwogICAgICBpZiAocG9ydGlvbi5pc1VuZnJvemVuKQogICAgICAgIGNvbnRpbnVlOwogICAgICBpZiAocG9ydGlvbi51bmZyZWV6ZVRpbWUgPCBub3cpIHsKICAgICAgICB1bmZyb3plblRva2VucyA9IHNhZmVBZGQodW5mcm96ZW5Ub2tlbnMsIHBvcnRpb24ucG9ydGlvbkFtb3VudCk7CiAgICAgICAgcG9ydGlvbi5pc1VuZnJvemVuID0gdHJ1ZTsKICAgICAgfQogICAgICBlbHNlCiAgICAgICAgYnJlYWs7CiAgICB9CiAgICB0cmFuc2ZlclRva2Vucyh1bmZyb3plblRva2Vucyk7CiAgfQoKICAvLy8gQGRldiBGaXggY3VycmVudCB0b2tlbiBhbW91bnQgKGNhbGN1bGF0ZSBhYnNvbHV0ZSB2YWx1ZXMgb2YgZXZlcnkgcG9ydGlvbikKICBmdW5jdGlvbiBmaXhBbW91bnQoKSBwdWJsaWMgb25seU93bmVyIHsKICAgIHJlcXVpcmUoIWFtb3VudEZpeGVkKTsKICAgIGFtb3VudEZpeGVkID0gdHJ1ZTsKCiAgICB1aW50IGN1cnJlbnRCYWxhbmNlID0gdG9rZW4uYmFsYW5jZU9mKHRoaXMpOwogICAgZm9yICh1aW50IGkgPSAwOyBpIDwgZnJvemVuUG9ydGlvbnMubGVuZ3RoOyBpKyspIHsKICAgICAgdmFyIHBvcnRpb24gPSBmcm96ZW5Qb3J0aW9uc1tpXTsKICAgICAgcG9ydGlvbi5wb3J0aW9uQW1vdW50ID0gc2FmZURpdihzYWZlTXVsKGN1cnJlbnRCYWxhbmNlLCBwb3J0aW9uLnBvcnRpb25QZXJjZW50KSwgMTAwKTsKICAgIH0KICB9CgogIC8vLyBAZGV2IFdpdGhkcmF3IHJlbWFpbmluZyB0b2tlbnMgYWZ0ZXIgYWxsIGZyZWV6ZSBwZXJpb2RzIGFyZSBvdmVyIChpbiBjYXNlIHRoZXJlIHdlcmUgYWRkaXRpb25hbCB0b2tlbiB0cmFuc2ZlcnMpCiAgZnVuY3Rpb24gd2l0aGRyYXdSZW1haW5kZXIoKSBwdWJsaWMgb25seU93bmVyIHsKICAgIGZvciAodWludCBpID0gMDsgaSA8IGZyb3plblBvcnRpb25zLmxlbmd0aDsgaSsrKSB7CiAgICAgIGlmICghZnJvemVuUG9ydGlvbnNbaV0uaXNVbmZyb3plbikKICAgICAgICByZXZlcnQoKTsKICAgIH0KICAgIHRyYW5zZmVyVG9rZW5zKHRva2VuLmJhbGFuY2VPZih0aGlzKSk7CiAgfQoKICBmdW5jdGlvbiB0cmFuc2ZlclRva2Vucyh1aW50IHRva2VuQW1vdW50KSBwcml2YXRlIHsKICAgIHJlcXVpcmUodG9rZW5BbW91bnQgPiAwKTsKICAgIHZhciB0cmFuc2ZlclN1Y2Nlc3MgPSB0b2tlbi50cmFuc2Zlcih0ZWFtV2FsbGV0LCB0b2tlbkFtb3VudCk7CiAgICBhc3NlcnQodHJhbnNmZXJTdWNjZXNzKTsKICAgIFVuZnJvemVuKHRva2VuQW1vdW50KTsKICB9Cn0='.
	

]
