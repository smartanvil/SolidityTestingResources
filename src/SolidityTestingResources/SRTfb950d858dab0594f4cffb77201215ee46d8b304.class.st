Class {
	#name : #SRTfb950d858dab0594f4cffb77201215ee46d8b304,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTfb950d858dab0594f4cffb77201215ee46d8b304 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTk7CgovL2NvbnRyYWN0IGJ5IEFkYW0gU2tyb2R6a2kKLy8KY29udHJhY3QgQmFua0FjY291bnQgewogICAgQmFuayBwYXJlbnQ7CiAgICBmdW5jdGlvbigpIHBheWFibGUgcHVibGljewogICAgICAgIGFkZHJlc3MgbWFpbkFkciA9IHBhcmVudC5HZXRNYWluQWRkcmVzcygpOwoKICAgICAgICBtYWluQWRyLnRyYW5zZmVyKG1zZy52YWx1ZSk7CiAgICB9CgogICAgZnVuY3Rpb24gQmFua0FjY291bnQgKGFkZHJlc3MgX2JhbmtBZGRyZXNzKSBwdWJsaWMgewogICAgICAgIHBhcmVudCA9IEJhbmsoX2JhbmtBZGRyZXNzKTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gdHJhbnNmZXJUb2tlbnMoYWRkcmVzcyBfdG9rZW5BZHIpIHB1YmxpYyB7CiAgICAgICAgYWRkcmVzcyBtYWluQWRyID0gcGFyZW50LkdldE1haW5BZGRyZXNzKCk7CiAgICAgICAgVG9rZW4gdCA9IFRva2VuKF90b2tlbkFkcik7CiAgICAgICAgdC50cmFuc2ZlcihtYWluQWRyLHQuYmFsYW5jZU9mKHRoaXMpKTsKICAgIH0KfQoKY29udHJhY3QgVG9rZW4gewogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgYSkgY29uc3RhbnQgcmV0dXJucyh1aW50MjU2KTsKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sdWludDI1NiB2YWx1ZSk7Cn0KCmNvbnRyYWN0IEJhbmsgewoKICAgIGFkZHJlc3MgcHJpdmF0ZSBfbWFpbkFkZHJlc3M7CiAgICBhZGRyZXNzIHB1YmxpYyBvd25lciA7CiAgICBhZGRyZXNzIHByaXZhdGUgb3BlcmF0b3IgOwogICAgQmFua0FjY291bnRbXSBwcml2YXRlIGF2YWlsYWJsZUFkZHJlc3NlczsKICAgIFRva2VuW10gcHJpdmF0ZSB0b2tlbnM7CiAgICBtYXBwaW5nKHVpbnQyNTYgPT4gYWRkcmVzcykgcHJpdmF0ZSBhc3NpZ25tZW50cyA7CgogICAgdWludDI1NiBwdWJsaWMgZmlyc3RGcmVlQWRkcmVzc0luZGV4ID0gMDsKCgogICAgZnVuY3Rpb24gQ2hhbmdlTWFpbkFjY291bnQoYWRkcmVzcyBtYWluQWRkcmVzcykgcHVibGljewogICAgICAgIGlmKG1zZy5zZW5kZXI9PW93bmVyKXsKICAgICAgICAgICAgX21haW5BZGRyZXNzID0gbWFpbkFkZHJlc3M7CiAgICAgICAgfQogICAgfQogICAgCiAgICBmdW5jdGlvbiBDaGFuZ2VPcGVyYXRvckFjY291bnQoYWRkcmVzcyBhZGRyKSBwdWJsaWN7CiAgICAgICAgaWYobXNnLnNlbmRlcj09b3duZXIpewogICAgICAgICAgICBvcGVyYXRvciA9IGFkZHI7CiAgICAgICAgfQogICAgfQogICAgCiAgICBmdW5jdGlvbiBHZXROZXh0V2l0aEZ1bmRzKHVpbnQyNTYgc3RhcnRBY2MsdWludDI1NiBzdGFydFRvaykgY29uc3RhbnQgcmV0dXJucyh1aW50MjU2LHVpbnQyNTYsYm9vbCl7CiAgICAgICAgICAgIHVpbnQyNTYgaSA9IHN0YXJ0QWNjOwogICAgICAgICAgICB1aW50MjU2IGogPSBzdGFydFRvazsKICAgICAgICAgICAgaWYoaj09MCkgaj0xOwogICAgICAgICAgICB1aW50MjU2IGNvdW50ZXIgPTA7CiAgICAgICAgICAgIGZvcihpO2k8YXZhaWxhYmxlQWRkcmVzc2VzLmxlbmd0aCAmJiBjb3VudGVyPDEwMDtpKyspewogICAgICAgICAgICAgICAgZm9yKGo7ajx0b2tlbnMubGVuZ3RoICYmIGNvdW50ZXI8MTAwO2orKyl7CiAgICAgICAgICAgICAgICAgICAgY291bnRlcisrOwogICAgICAgICAgICAgICAgICAgIGlmKHRva2Vuc1tqXS5iYWxhbmNlT2YoYXZhaWxhYmxlQWRkcmVzc2VzW2ldKT4wKXsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChpLGosdHJ1ZSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgaj0xOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmKGk9PWF2YWlsYWJsZUFkZHJlc3Nlcy5sZW5ndGgpewogICAgICAgICAgICAgICAgcmV0dXJuKDAsMCxmYWxzZSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZXsKICAgICAgICAgICAgICAgIHJldHVybihpLGosZmFsc2UpOwogICAgICAgICAgICB9CiAgICB9CiAgICBmdW5jdGlvbiBUcmFuc2ZlckZ1bmRzKHVpbnQyNTYgYWRkcklkeCx1aW50MjU2IHRva0lkeCkgcHVibGljewogICAgICAgIGlmKG1zZy5zZW5kZXI9PW93bmVyIHx8IG1zZy5zZW5kZXI9PW9wZXJhdG9yKXsKICAgICAgICAgICAgYXZhaWxhYmxlQWRkcmVzc2VzW2FkZHJJZHhdLnRyYW5zZmVyVG9rZW5zLmdhcygyNTAwMDApKHRva2Vuc1t0b2tJZHhdKTsKICAgICAgICB9CiAgICAgICAgZWxzZXsKICAgICAgICAgIHJldmVydCgpOyAgIAogICAgICAgIAogICAgICAgIH0KICAgIH0KICAgIGZ1bmN0aW9uIEdldE1haW5BZGRyZXNzKCkgcHVibGljIGNvbnN0YW50IHJldHVybnMgKGFkZHJlc3MpewogICAgICAgIHJldHVybihfbWFpbkFkZHJlc3MpOwogICAgfQogICAgZnVuY3Rpb24gQ2hhbmdlT3duZXIoYWRkcmVzcyBuZXdPd25lcikgcHVibGljewogICAgICAgIGlmKG1zZy5zZW5kZXI9PW93bmVyKXsKICAgICAgICAgICAgb3duZXIgPSBuZXdPd25lcjsKICAgICAgICB9CiAgICAgICAgZWxzZXsKICAgICAgICAgIHJldmVydCgpOyAgIAogICAgICAgIAogICAgICAgIH0KICAgIH0KICAgIGZ1bmN0aW9uIEFkZFRva2VuKGFkZHJlc3MgX2FkcilwdWJsaWMgewogICAgICAgIGlmKG1zZy5zZW5kZXI9PW93bmVyIHx8IG1zZy5zZW5kZXI9PW9wZXJhdG9yKXsKICAgICAgICAgICAgdG9rZW5zLnB1c2goVG9rZW4oX2FkcikpOwogICAgICAgIH0KICAgICAgICBlbHNlewogICAgICAgICAgcmV2ZXJ0KCk7ICAgCiAgICAgICAgCiAgICAgICAgfQogICAgfQogICAgZnVuY3Rpb24gQmFuayhhZGRyZXNzIG1haW5BZGRyZXNzKSBwdWJsaWN7CiAgICAgICAgdG9rZW5zLnB1c2goVG9rZW4oMCkpOwogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsKICAgICAgICBfbWFpbkFkZHJlc3MgPSBtYWluQWRkcmVzczsKICAgIH0KICAgIGZ1bmN0aW9uIENyZWF0ZU5ld0FjY291bnQoKSBwdWJsaWN7CiAgICAgICAgdmFyIGEgPSBuZXcgQmFua0FjY291bnQodGhpcyk7CiAgICAgICAgYXZhaWxhYmxlQWRkcmVzc2VzLnB1c2goYSk7CiAgICB9CiAgICBmdW5jdGlvbiBHZXRBdmFpbGFibGVBZGRyZXNzZXNDb3VudCgpIHByaXZhdGUgY29uc3RhbnQgcmV0dXJucyh1aW50MjU2KXsKICAgICAgICByZXR1cm4gYXZhaWxhYmxlQWRkcmVzc2VzLmxlbmd0aC1maXJzdEZyZWVBZGRyZXNzSW5kZXg7CiAgICB9CgogICAgZnVuY3Rpb24gQXNzaWduQWRkcmVzcyh1aW50MjU2IGhvbGRlcklkKSBwdWJsaWN7CiAgICAgICAgaWYobXNnLnNlbmRlcj09b3duZXIgfHwgbXNnLnNlbmRlcj09b3BlcmF0b3IpewogICAgICAgICAgICBpZihhc3NpZ25tZW50c1tob2xkZXJJZF0hPTApeyAvLyBuaWUgbW/FvG5hIHN0d29yennEhyAyIGFkcmVzJiMyNDM7dyBkbGEgamVkbmVnbyBrbGllbnRhCiAgICAKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlewogICAgICAgICAgICAgICAgaWYoR2V0QXZhaWxhYmxlQWRkcmVzc2VzQ291bnQoKT09MCl7CiAgICAgICAgICAgICAgICAgICAgICAgIENyZWF0ZU5ld0FjY291bnQoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGFzc2lnbm1lbnRzW2hvbGRlcklkXSA9IGF2YWlsYWJsZUFkZHJlc3Nlc1tmaXJzdEZyZWVBZGRyZXNzSW5kZXhdOwogICAgICAgICAgICAgICAgZmlyc3RGcmVlQWRkcmVzc0luZGV4ID0gZmlyc3RGcmVlQWRkcmVzc0luZGV4KzE7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgZWxzZXsKICAgICAgICAgIHJldmVydCgpOyAgIAogICAgICAgIAogICAgICAgIH0KCiAgICB9CgogICAgZnVuY3Rpb24gR2V0QXNzaWduZWRBZGRyZXNzKHVpbnQyNTYgaG9sZGVySWQpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zKGFkZHJlc3MpewogICAgICAgICByZXR1cm4gYXNzaWdubWVudHNbaG9sZGVySWRdOwogICAgfQoKCn0='.
	

]
