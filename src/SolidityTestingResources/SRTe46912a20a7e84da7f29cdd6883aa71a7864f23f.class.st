Class {
	#name : #SRTe46912a20a7e84da7f29cdd6883aa71a7864f23f,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTe46912a20a7e84da7f29cdd6883aa71a7864f23f >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTM7CgpsaWJyYXJ5IFNhZmVNYXRoIHsKICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHVpbnQyNTYgYyA9IGEgKiBiOwogICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhIC8gYjsKICAgIHJldHVybiBjOwogIH0KCiAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CgogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgdWludDI1NiBjID0gYSArIGI7CiAgICBhc3NlcnQoYyA+PSBhKTsKICAgIHJldHVybiBjOwogIH0KfQoKY29udHJhY3QgRVJDMjIzUmVjZWl2aW5nQ29udHJhY3QgewogICAgZnVuY3Rpb24gdG9rZW5GYWxsYmFjayhhZGRyZXNzIF9mcm9tLCB1aW50MjU2IF92YWx1ZSwgYnl0ZXMgX2RhdGEpIHB1YmxpYzsKfQoKY29udHJhY3QgRVJDMjBFUkMyMjMgewogIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5OwogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpOwogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wpOwogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSwgYnl0ZXMgX2RhdGEpIHB1YmxpYyByZXR1cm5zIChib29sKTsKICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCk7CiAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpOwogIAogIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBpbmRleGVkIF92YWx1ZSk7CiAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50MjU2IGluZGV4ZWQgX3ZhbHVlLCBieXRlcyBfZGF0YSk7CiAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7Cn0KCmNvbnRyYWN0IERlY28gaXMgRVJDMjBFUkMyMjMgewoKICB1c2luZyBTYWZlTWF0aCBmb3IgdWludDI1NjsKCiAgc3RyaW5nIHB1YmxpYyBjb25zdGFudCBuYW1lID0gIkRlY28iOwogIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgc3ltYm9sID0gIkRFQyI7CiAgdWludDggcHVibGljIGNvbnN0YW50IGRlY2ltYWxzID0gMTg7CiAgCiAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgdG90YWxTdXBwbHkgPSA2KjEwKioyNjsgLy8gNjAwLDAwMCwwMDAuIDAwMCwwMDAsMDAwLDAwMCwwMDAsMDAwIHVuaXRzCiAgICAKICAvLyBBY2NvdW50cwogIAogIG1hcHBpbmcoYWRkcmVzcyA9PiBBY2NvdW50KSBwcml2YXRlIGFjY291bnRzOwogIAogIHN0cnVjdCBBY2NvdW50IHsKICAgIHVpbnQyNTYgYmFsYW5jZTsKICAgIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSBhbGxvd2VkOwogICAgbWFwcGluZyhhZGRyZXNzID0+IGJvb2wpIGlzQWxsb3dhbmNlQXV0aG9yaXplZDsKICB9ICAKICAKICAvLyBGaXggZm9yIHRoZSBFUkMyMCBzaG9ydCBhZGRyZXNzIGF0dGFjay4KICAvLyBodHRwOi8vdmVzc2VuZXMuY29tL3RoZS1lcmMyMC1zaG9ydC1hZGRyZXNzLWF0dGFjay1leHBsYWluZWQvCiAgbW9kaWZpZXIgb25seVBheWxvYWRTaXplKHVpbnQyNTYgc2l6ZSkgewogICAgcmVxdWlyZShtc2cuZGF0YS5sZW5ndGggPj0gc2l6ZSArIDQpOwogICAgIF87CiAgfQoKICAvLyBJbml0aWFsaXphdGlvbgoKICBmdW5jdGlvbiBEZWNvKCkgewogICAgYWNjb3VudHNbbXNnLnNlbmRlcl0uYmFsYW5jZSA9IHRvdGFsU3VwcGx5OwogICAgVHJhbnNmZXIodGhpcywgbXNnLnNlbmRlciwgdG90YWxTdXBwbHkpOwogIH0KCiAgLy8gQmFsYW5jZQoKICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHJldHVybiBhY2NvdW50c1tfb3duZXJdLmJhbGFuY2U7CiAgfQoKICAvLyBUcmFuc2ZlcnMKCiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBvbmx5UGF5bG9hZFNpemUoMiAqIDMyKSByZXR1cm5zIChib29sKSB7CiAgICBwZXJmb3JtVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUsICIiKTsKICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlLCBieXRlcyBfZGF0YSkgb25seVBheWxvYWRTaXplKDIgKiAzMikgcmV0dXJucyAoYm9vbCkgewogICAgcGVyZm9ybVRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlLCBfZGF0YSk7CiAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSwgX2RhdGEpOwogICAgcmV0dXJuIHRydWU7CiAgfQoKICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBvbmx5UGF5bG9hZFNpemUoMyAqIDMyKSByZXR1cm5zIChib29sKSB7CiAgICByZXF1aXJlKGhhc0FwcHJvdmFsKF9mcm9tLCBtc2cuc2VuZGVyKSk7CiAgICB1aW50MjU2IF9hbGxvd2VkID0gYWNjb3VudHNbX2Zyb21dLmFsbG93ZWRbbXNnLnNlbmRlcl07ICAgIAogICAgcGVyZm9ybVRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSwgIiIpOyAgICAKICAgIGFjY291bnRzW19mcm9tXS5hbGxvd2VkW21zZy5zZW5kZXJdID0gX2FsbG93ZWQuc3ViKF92YWx1ZSk7CiAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwogICAgcmV0dXJuIHRydWU7CiAgfQoKICBmdW5jdGlvbiBwZXJmb3JtVHJhbnNmZXIoYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlLCBieXRlcyBfZGF0YSkgcHJpdmF0ZSByZXR1cm5zIChib29sKSB7CiAgICByZXF1aXJlKF90byAhPSAweDApOwogICAgYWNjb3VudHNbX2Zyb21dLmJhbGFuY2UgPSBhY2NvdW50c1tfZnJvbV0uYmFsYW5jZS5zdWIoX3ZhbHVlKTsgICAgCiAgICBhY2NvdW50c1tfdG9dLmJhbGFuY2UgPSBhY2NvdW50c1tfdG9dLmJhbGFuY2UuYWRkKF92YWx1ZSk7CiAgICBpZiAoaXNDb250cmFjdChfdG8pKSB7CiAgICAgIEVSQzIyM1JlY2VpdmluZ0NvbnRyYWN0IHJlY2VpdmVyID0gRVJDMjIzUmVjZWl2aW5nQ29udHJhY3QoX3RvKTsKICAgICAgcmVjZWl2ZXIudG9rZW5GYWxsYmFjayhfZnJvbSwgX3ZhbHVlLCBfZGF0YSk7CiAgICB9ICAgIAogICAgcmV0dXJuIHRydWU7CiAgfQoKICBmdW5jdGlvbiBpc0NvbnRyYWN0KGFkZHJlc3MgX3RvKSBwcml2YXRlIGNvbnN0YW50IHJldHVybnMgKGJvb2wpIHsKICAgIHVpbnQyNTYgY29kZUxlbmd0aDsKICAgIGFzc2VtYmx5IHsKICAgICAgY29kZUxlbmd0aCA6PSBleHRjb2Rlc2l6ZShfdG8pCiAgICB9CiAgICByZXR1cm4gY29kZUxlbmd0aCA+IDA7CiAgfQoKICAvLyBBcHByb3ZhbCAmIEFsbG93YW5jZQogIAogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wpIHsKICAgIHJlcXVpcmUobXNnLnNlbmRlciAhPSBfc3BlbmRlcik7CiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9pc3N1ZXMvMjAjaXNzdWVjb21tZW50LTI2MzUyNDcyOQogICAgaWYgKChfdmFsdWUgIT0gMCkgJiYgKGFjY291bnRzW21zZy5zZW5kZXJdLmFsbG93ZWRbX3NwZW5kZXJdICE9IDApKSB7CiAgICAgIHJldmVydCgpOwogICAgICByZXR1cm4gZmFsc2U7CiAgICB9CiAgICBhY2NvdW50c1ttc2cuc2VuZGVyXS5hbGxvd2VkW19zcGVuZGVyXSA9IF92YWx1ZTsKICAgIGFjY291bnRzW21zZy5zZW5kZXJdLmlzQWxsb3dhbmNlQXV0aG9yaXplZFtfc3BlbmRlcl0gPSB0cnVlOwogICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpIHsKICAgIHJldHVybiBhY2NvdW50c1tfb3duZXJdLmFsbG93ZWRbX3NwZW5kZXJdOwogIH0KCiAgZnVuY3Rpb24gaGFzQXBwcm92YWwoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKGJvb2wpIHsgICAgICAgIAogICAgcmV0dXJuIGFjY291bnRzW19vd25lcl0uaXNBbGxvd2FuY2VBdXRob3JpemVkW19zcGVuZGVyXTsKICB9CgogIGZ1bmN0aW9uIHJlbW92ZUFwcHJvdmFsKGFkZHJlc3MgX3NwZW5kZXIpIHsgICAgCiAgICBkZWxldGUoYWNjb3VudHNbbXNnLnNlbmRlcl0uYWxsb3dlZFtfc3BlbmRlcl0pOwogICAgYWNjb3VudHNbbXNnLnNlbmRlcl0uaXNBbGxvd2FuY2VBdXRob3JpemVkW19zcGVuZGVyXSA9IGZhbHNlOwogIH0KCn0='.
	

]
