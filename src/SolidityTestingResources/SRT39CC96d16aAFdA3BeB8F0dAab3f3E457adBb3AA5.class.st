Class {
	#name : #SRT39CC96d16aAFdA3BeB8F0dAab3f3E457adBb3AA5,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT39CC96d16aAFdA3BeB8F0dAab3f3E457adBb3AA5 >> base64 [
	^ ''.
	

]
