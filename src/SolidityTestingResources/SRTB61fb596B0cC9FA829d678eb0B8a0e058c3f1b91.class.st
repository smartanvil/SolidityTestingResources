Class {
	#name : #SRTB61fb596B0cC9FA829d678eb0B8a0e058c3f1b91,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTB61fb596B0cC9FA829d678eb0B8a0e058c3f1b91 >> base64 [
	^ 'Y29udHJhY3QgSmFja1BvdCB7CiAgICBhZGRyZXNzIHB1YmxpYyBob3N0OwoJdWludCBtaW5BbW91bnQ7CiAgICB1aW50W10gcHVibGljIGNvbnRyaWJ1dGlvbnM7CiAgICBhZGRyZXNzW10gcHVibGljIGNvbnRyaWJ1dG9yczsKCXVpbnQgcHVibGljIG51bVBsYXllcnMgPSAwOwoJdWludCBwdWJsaWMgbmV4dERyYXc7CglieXRlczMyIHNlZWRIYXNoOwoJYnl0ZXMzMiByYW5kb207CQoKICAgIHN0cnVjdCBXaW4gewogICAgICAgIGFkZHJlc3Mgd2lubmVyOwogICAgICAgIHVpbnQgdGltZXN0YW1wOwogICAgICAgIHVpbnQgY29udHJpYnV0aW9uOwoJCXVpbnQgYW1vdW50V29uOwogICAgfQoKICAgIFdpbltdIHB1YmxpYyByZWNlbnRXaW5zOwogICAgdWludCByZWNlbnRXaW5zQ291bnQ7CgkKCWZ1bmN0aW9uIGluc2VydF9jb250cmlidXRpb24oYWRkcmVzcyBhZGRyLCB1aW50IHZhbHVlKSBpbnRlcm5hbCB7CgkJLy8gY2hlY2sgaWYgYXJyYXkgbmVlZHMgZXh0ZW5kaW5nCgkJaWYobnVtUGxheWVycyA9PSBjb250cmlidXRpb25zLmxlbmd0aCkgewoJCQkvLyBleHRlbmQgdGhlIGFycmF5cwoJCQljb250cmlidXRpb25zLmxlbmd0aCArPSAxOwoJCQljb250cmlidXRvcnMubGVuZ3RoICs9IDE7CgkJfQoJCWNvbnRyaWJ1dGlvbnNbbnVtUGxheWVyc10gPSB2YWx1ZTsKCQljb250cmlidXRvcnNbbnVtUGxheWVycysrXSA9IGFkZHI7Cgl9CgkKCWZ1bmN0aW9uIGdldENvbnRyaWJ1dGlvbnMoYWRkcmVzcyBhZGRyKSBjb25zdGFudCByZXR1cm5zICh1aW50KSB7CiAgICAgICAgdWludCBpOwogICAgICAgIGZvciAoaT0wOyBpIDwgbnVtUGxheWVyczsgaSsrKSB7CgkJCWlmIChjb250cmlidXRvcnNbaV0gPT0gYWRkcikgeyAvLyBpZiBpbiB0aGUgbGlzdCBhbHJlYWR5CgkJCQlicmVhazsKCQkJfQoJCX0KCQkKCQlpZihpID09IG51bVBsYXllcnMpIHsgLy8gRGlkIG5vdCBmaW5kIHNlbmRlciBhbHJlYWR5IGluIHRoZSBsaXN0CiAgICAgICAgICAgIHJldHVybiAwOwogICAgICAgIH0gZWxzZSB7CgkJCXJldHVybiBjb250cmlidXRpb25zW2ldOwoJCX0KICAgIH0KCQoJZnVuY3Rpb24gSmFja1BvdCgpIHsKCiAgICAgICAgaG9zdCA9IG1zZy5zZW5kZXI7CgkJc2VlZEhhc2ggPSBzaGEzKDExMTEpOwoJCW1pbkFtb3VudCA9IDEwICogMSBmaW5uZXk7CiAgICAgICAgcmVjZW50V2luc0NvdW50ID0gMTA7CgkJbmV4dERyYXcgPSAxMjM0OyAvLyBJbml0aWFsaXplIHRvIHN0YXJ0IHRpbWUgb2YgdGhlIGJsb2NrCiAgICB9CgogICAgZnVuY3Rpb24oKSB7CiAgICAgICAgYWRkVG9Db250cmlidXRpb24oKTsKICAgIH0KCiAgICBmdW5jdGlvbiBhZGRUb0NvbnRyaWJ1dGlvbigpIHsKICAgICAgICBhZGRWYWx1ZVRvQ29udHJpYnV0aW9uKG1zZy52YWx1ZSk7CiAgICB9CgogICAgZnVuY3Rpb24gYWRkVmFsdWVUb0NvbnRyaWJ1dGlvbih1aW50IHZhbHVlKSBpbnRlcm5hbCB7CiAgICAgICAgLy8gRmlyc3QsIG1ha2Ugc3VyZSB0aGlzIGlzIGEgdmFsaWQgdHJhbnNhY3Rpb24uCiAgICAgICAgaWYodmFsdWUgPCBtaW5BbW91bnQpIHRocm93OwoJICAgIHVpbnQgaTsKICAgICAgICBmb3IgKGk9MDsgaSA8IG51bVBsYXllcnM7IGkrKykgewoJCQlpZiAoY29udHJpYnV0b3JzW2ldID09IG1zZy5zZW5kZXIpIHsgLy8gQWxyZWFkeSBjb250cmlidXRlZD8KCQkJCWJyZWFrOwoJCQl9CgkJfQoJCQoJCWlmKGkgPT0gbnVtUGxheWVycykgeyAvLyBEaWQgbm90IGZpbmQgc2VuZGVyIGFscmVhZHkgaW4gdGhlIGxpc3QKCQkJaW5zZXJ0X2NvbnRyaWJ1dGlvbihtc2cuc2VuZGVyLCB2YWx1ZSk7CiAgICAgICAgfSBlbHNlIHsKCQkJY29udHJpYnV0aW9uc1tpXSs9IHZhbHVlOyAvLyBVcGRhdGUgYW1vdW50CgkJfQoJCQoJCXJhbmRvbSA9IHNoYTMocmFuZG9tLCBibG9jay5ibG9ja2hhc2goYmxvY2subnVtYmVyIC0gMSkpOwkJCiAgICB9CgkKCS8vZHJhd1BvdCB0cmlnZ2VyZWQgZnJvbSBIb3N0IGFmdGVyIHRpbWUgaGFzIHBhc3NlZCBvciBwb3QgaXMgbWF0dXJlZC4KCWZ1bmN0aW9uIGRyYXdQb3QoYnl0ZXMzMiBzZWVkLCBieXRlczMyIG5ld1NlZWQpIHsKCQlpZihtc2cuc2VuZGVyICE9IGhvc3QpIHRocm93OwoJCQoJCS8vIGNoZWNrIHRoYXQgc2VlZCBnaXZlbiBpcyB0aGUgc2FtZSBhcyB0aGUgc2VlZEhhc2ggc28gb3BlcmF0b3JzIG9mIGphY2twb3QgY2FuIG5vdCBjaGVhdCAKCQlpZiAoc2hhMyhzZWVkKSA9PSBzZWVkSGFzaCkgewoJCQlzZWVkSGFzaCA9IHNoYTMobmV3U2VlZCk7CgkJCS8vIENob29zZSBhIHdpbm5lciB1c2luZyB0aGUgc2VlZCBhcyByYW5kb20KICAgICAgICAgICAgdWludCB3aW5uZXJfaW5kZXggPSBzZWxlY3RXaW5uZXIoc2VlZCk7CgogICAgICAgICAgICAvLyBTZW5kIHRoZSBkZXZlbG9wZXIgYSAxJSBmZWUKICAgICAgICAgICAgaG9zdC5zZW5kKHRoaXMuYmFsYW5jZSAvIDEwMCk7CgkJCQoJCQl1aW50IGFtb3VudFdvbiA9IHRoaXMuYmFsYW5jZTsgCgkJCQogICAgICAgICAgICAvLyBTZW5kIHRoZSB3aW5uZXIgdGhlIHJlbWFpbmluZyBiYWxhbmNlIG9uIHRoZSBjb250cmFjdC4KICAgICAgICAgICAgY29udHJpYnV0b3JzW3dpbm5lcl9pbmRleF0uc2VuZCh0aGlzLmJhbGFuY2UpOwoJCQkKCQkJLy8gTWFrZSBhIG5vdGUgdGhhdCBzb21lb25lIHdvbiwgdGhlbiBzdGFydCBhbGwgb3ZlciEKICAgICAgICAgICAgcmVjb3JkV2luKHdpbm5lcl9pbmRleCwgYW1vdW50V29uKTsKCiAgICAgICAgICAgIHJlc2V0KCk7CgkJCW5leHREcmF3ID0gbm93ICsgNyBkYXlzOwkKCQl9Cgl9CgoJZnVuY3Rpb24gc2V0RHJhd0RhdGUodWludCBfbmV3RHJhdykgewoJCWlmKG1zZy5zZW5kZXIgIT0gaG9zdCkgdGhyb3c7CgkJbmV4dERyYXcgPSBfbmV3RHJhdzsKCX0KCQoJCiAgICBmdW5jdGlvbiBzZWxlY3RXaW5uZXIoYnl0ZXMzMiBzZWVkKSBpbnRlcm5hbCByZXR1cm5zICh1aW50IHdpbm5lcl9pbmRleCkgewoKICAgICAgICB1aW50IHNlbWlyYW5kb20gPSB1aW50KHNoYTMocmFuZG9tLCBzZWVkKSkgJSB0aGlzLmJhbGFuY2U7CiAgICAgICAgZm9yKHVpbnQgaSA9IDA7IGkgPCBudW1QbGF5ZXJzOyArK2kpIHsKICAgICAgICAgICAgaWYoc2VtaXJhbmRvbSA8IGNvbnRyaWJ1dGlvbnNbaV0pIHJldHVybiBpOwogICAgICAgICAgICBzZW1pcmFuZG9tIC09IGNvbnRyaWJ1dGlvbnNbaV07CiAgICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIHJlY29yZFdpbih1aW50IHdpbm5lcl9pbmRleCwgdWludCBhbW91bnQpIGludGVybmFsIHsKICAgICAgICBpZihyZWNlbnRXaW5zLmxlbmd0aCA8IHJlY2VudFdpbnNDb3VudCkgewogICAgICAgICAgICByZWNlbnRXaW5zLmxlbmd0aCsrOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIC8vIEFscmVhZHkgYXQgY2FwYWNpdHkgZm9yIHRoZSBudW1iZXIgb2Ygd2lubmVycyB0byByZW1lbWJlci4KICAgICAgICAgICAgLy8gRm9yZ2V0IHRoZSBvbGRlc3Qgb25lIGJ5IHNoaWZ0aW5nIGVhY2ggZW50cnkgJ2xlZnQnCiAgICAgICAgICAgIGZvcih1aW50IGkgPSAwOyBpIDwgcmVjZW50V2luc0NvdW50IC0gMTsgKytpKSB7CiAgICAgICAgICAgICAgICByZWNlbnRXaW5zW2ldID0gcmVjZW50V2luc1tpICsgMV07CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJlY2VudFdpbnNbcmVjZW50V2lucy5sZW5ndGggLSAxXSA9IFdpbihjb250cmlidXRvcnNbd2lubmVyX2luZGV4XSwgYmxvY2sudGltZXN0YW1wLCBjb250cmlidXRpb25zW3dpbm5lcl9pbmRleF0sIGFtb3VudCk7CiAgICB9CgogICAgZnVuY3Rpb24gcmVzZXQoKSBpbnRlcm5hbCB7CiAgICAgICAgLy8gQ2xlYXIgdGhlIGxpc3RzIHdpdGggbWluIGdhcyBhZnRlciB0aGUgZHJhdy4KCQludW1QbGF5ZXJzID0gMDsKICAgIH0KCgogICAgLyogVGhpcyBzaG91bGQgb25seSBiZSBuZWVkZWQgaWYgYSBidWcgaXMgZGlzY292ZXJlZAogICAgaW4gdGhlIGNvZGUgYW5kIHRoZSBjb250cmFjdCBtdXN0IGJlIGRlc3Ryb3llZC4gKi8KICAgIGZ1bmN0aW9uIGRlc3Ryb3koKSB7CiAgICAgICAgaWYobXNnLnNlbmRlciAhPSBob3N0KSB0aHJvdzsKCiAgICAgICAgLy8gUmVmdW5kIGV2ZXJ5b25lJ3MgY29udHJpYnV0aW9ucy4KICAgICAgICBmb3IodWludCBpID0gMDsgaSA8IG51bVBsYXllcnM7ICsraSkgewogICAgICAgICAgICBjb250cmlidXRvcnNbaV0uc2VuZChjb250cmlidXRpb25zW2ldKTsKICAgICAgICB9CgoJCXJlc2V0KCk7CiAgICAgICAgc2VsZmRlc3RydWN0KGhvc3QpOwogICAgfQp9'.
	

]
