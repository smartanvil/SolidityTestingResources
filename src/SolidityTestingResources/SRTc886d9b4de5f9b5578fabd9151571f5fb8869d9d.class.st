Class {
	#name : #SRTc886d9b4de5f9b5578fabd9151571f5fb8869d9d,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTc886d9b4de5f9b5578fabd9151571f5fb8869d9d >> base64 [
	^ 'Ly8gS3BvcENlbGViIGlzIGEgRVJDLTcyMSBjZWxlYiAoaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL2VpcHMvaXNzdWVzLzcyMSkKLy8gS3BvcCBjZWxlYnJpdHkgY2FyZHMgYXMgZGlnaXRhbCBjb2xsZWN0aWJsZXMKLy8gS3BvcC5pbyBpcyB0aGUgb2ZmaWNpYWwgd2Vic2l0ZQoKcHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7Ci8qKgogKiBAdGl0bGUgU2FmZU1hdGgKICogQGRldiBNYXRoIG9wZXJhdGlvbnMgd2l0aCBzYWZldHkgY2hlY2tzIHRoYXQgdGhyb3cgb24gZXJyb3IKICovCmxpYnJhcnkgU2FmZU1hdGggewoKICAvKioKICAqIEBkZXYgTXVsdGlwbGllcyB0d28gbnVtYmVycywgdGhyb3dzIG9uIG92ZXJmbG93LgogICovCiAgZnVuY3Rpb24gbXVsKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIGlmIChhID09IDApIHsKICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICB1aW50MjU2IGMgPSBhICogYjsKICAgIGFzc2VydChjIC8gYSA9PSBiKTsKICAgIHJldHVybiBjOwogIH0KCiAgLyoqCiAgKiBAZGV2IEludGVnZXIgZGl2aXNpb24gb2YgdHdvIG51bWJlcnMsIHRydW5jYXRpbmcgdGhlIHF1b3RpZW50LgogICovCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIC8vIGFzc2VydChiID4gMCk7IC8vIFNvbGlkaXR5IGF1dG9tYXRpY2FsbHkgdGhyb3dzIHdoZW4gZGl2aWRpbmcgYnkgMAogICAgdWludDI1NiBjID0gYSAvIGI7CiAgICAvLyBhc3NlcnQoYSA9PSBiICogYyArIGEgJSBiKTsgLy8gVGhlcmUgaXMgbm8gY2FzZSBpbiB3aGljaCB0aGlzIGRvZXNuJ3QgaG9sZAogICAgcmV0dXJuIGM7CiAgfQoKICAvKioKICAqIEBkZXYgU3Vic3RyYWN0cyB0d28gbnVtYmVycywgdGhyb3dzIG9uIG92ZXJmbG93IChpLmUuIGlmIHN1YnRyYWhlbmQgaXMgZ3JlYXRlciB0aGFuIG1pbnVlbmQpLgogICovCiAgZnVuY3Rpb24gc3ViKHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBwdXJlIHJldHVybnMgKHVpbnQyNTYpIHsKICAgIGFzc2VydChiIDw9IGEpOwogICAgcmV0dXJuIGEgLSBiOwogIH0KCiAgLyoqCiAgKiBAZGV2IEFkZHMgdHdvIG51bWJlcnMsIHRocm93cyBvbiBvdmVyZmxvdy4KICAqLwogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcHVyZSByZXR1cm5zICh1aW50MjU2KSB7CiAgICB1aW50MjU2IGMgPSBhICsgYjsKICAgIGFzc2VydChjID49IGEpOwogICAgcmV0dXJuIGM7CiAgfQp9Cgpjb250cmFjdCBFUkM3MjEgewogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfdG8sIHVpbnQgX2NlbGViSWQpIHB1YmxpYzsKICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQgYmFsYW5jZSk7CiAgZnVuY3Rpb24gaW1wbGVtZW50c0VSQzcyMSgpIHB1YmxpYyBwdXJlIHJldHVybnMgKGJvb2wpOwogIGZ1bmN0aW9uIG93bmVyT2YodWludCBfY2VsZWJJZCkgcHVibGljIHZpZXcgcmV0dXJucyAoYWRkcmVzcyBhZGRyKTsKICBmdW5jdGlvbiB0YWtlT3duZXJzaGlwKHVpbnQgX2NlbGViSWQpIHB1YmxpYzsKICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQgdG90YWwpOwogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludCBfY2VsZWJJZCkgcHVibGljOwogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50IF9jZWxlYklkKSBwdWJsaWM7CgogIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBmcm9tLCBhZGRyZXNzIGluZGV4ZWQgdG8sIHVpbnQgY2VsZWJJZCk7CiAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIG93bmVyLCBhZGRyZXNzIGluZGV4ZWQgYXBwcm92ZWQsIHVpbnQgY2VsZWJJZCk7Cn0KCmNvbnRyYWN0IEtwb3BDZWxlYiBpcyBFUkM3MjEgewogIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50OwoKICBhZGRyZXNzIHB1YmxpYyBhdXRob3I7CiAgYWRkcmVzcyBwdWJsaWMgY29hdXRob3I7CgogIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgTkFNRSA9ICJLcG9wQ2VsZWIiOwogIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgU1lNQk9MID0gIktwb3BDZWxlYiI7CgogIHVpbnQgcHVibGljIEdST1dUSF9CVU1QID0gMC41IGV0aGVyOwogIHVpbnQgcHVibGljIE1JTl9TVEFSVElOR19QUklDRSA9IDAuMDAyIGV0aGVyOwogIHVpbnQgcHVibGljIFBSSUNFX0lOQ1JFQVNFX1NDQUxFID0gMTIwOyAvLyAxMjAlIG9mIHByZXZpb3VzIHByaWNlCgogIHN0cnVjdCBDZWxlYiB7CiAgICBzdHJpbmcgbmFtZTsKICB9CgogIENlbGViW10gcHVibGljIGNlbGViczsKCiAgbWFwcGluZyh1aW50ID0+IGFkZHJlc3MpIHB1YmxpYyBjZWxlYklkVG9Pd25lcjsKICBtYXBwaW5nKHVpbnQgPT4gdWludCkgcHVibGljIGNlbGViSWRUb1ByaWNlOyAvLyBpbiB3ZWkKICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludCkgcHVibGljIHVzZXJUb051bUNlbGViczsKICBtYXBwaW5nKHVpbnQgPT4gYWRkcmVzcykgcHVibGljIGNlbGViSWRUb0FwcHJvdmVkUmVjaXBpZW50OwogIG1hcHBpbmcodWludCA9PiB1aW50WzZdKSBwdWJsaWMgY2VsZWJJZFRvVHJhaXRWYWx1ZXM7CiAgbWFwcGluZyh1aW50ID0+IHVpbnRbNl0pIHB1YmxpYyBjZWxlYklkVG9UcmFpdEJvb3N0ZXJzOwoKICBhZGRyZXNzIHB1YmxpYyBLUE9QX0FSRU5BX0NPTlRSQUNUX0FERFJFU1MgPSAweDA7CgogIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBmcm9tLCBhZGRyZXNzIGluZGV4ZWQgdG8sIHVpbnQgY2VsZWJJZCk7CiAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIG93bmVyLCBhZGRyZXNzIGluZGV4ZWQgYXBwcm92ZWQsIHVpbnQgY2VsZWJJZCk7CiAgZXZlbnQgQ2VsZWJTb2xkKHVpbnQgY2VsZWJJZCwgdWludCBvbGRQcmljZSwgdWludCBuZXdQcmljZSwgc3RyaW5nIGNlbGViTmFtZSwgYWRkcmVzcyBwcmV2T3duZXIsIGFkZHJlc3MgbmV3T3duZXIpOwoKICBmdW5jdGlvbiBLcG9wQ2VsZWIoKSBwdWJsaWMgewogICAgYXV0aG9yID0gbXNnLnNlbmRlcjsKICAgIGNvYXV0aG9yID0gbXNnLnNlbmRlcjsKICB9CgogIGZ1bmN0aW9uIF90cmFuc2ZlcihhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludCBfY2VsZWJJZCkgcHJpdmF0ZSB7CiAgICByZXF1aXJlKG93bmVyT2YoX2NlbGViSWQpID09IF9mcm9tKTsKICAgIHJlcXVpcmUoIWlzTnVsbEFkZHJlc3MoX3RvKSk7CiAgICByZXF1aXJlKGJhbGFuY2VPZihfZnJvbSkgPiAwKTsKCiAgICB1aW50IHByZXZCYWxhbmNlcyA9IGJhbGFuY2VPZihfZnJvbSkgKyBiYWxhbmNlT2YoX3RvKTsKICAgIGNlbGViSWRUb093bmVyW19jZWxlYklkXSA9IF90bzsKICAgIHVzZXJUb051bUNlbGVic1tfZnJvbV0tLTsKICAgIHVzZXJUb051bUNlbGVic1tfdG9dKys7CgogICAgLy8gQ2xlYXIgb3V0c3RhbmRpbmcgYXBwcm92YWxzCiAgICBkZWxldGUgY2VsZWJJZFRvQXBwcm92ZWRSZWNpcGllbnRbX2NlbGViSWRdOwoKICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF9jZWxlYklkKTsKCiAgICBhc3NlcnQoYmFsYW5jZU9mKF9mcm9tKSArIGJhbGFuY2VPZihfdG8pID09IHByZXZCYWxhbmNlcyk7CiAgfQoKICBmdW5jdGlvbiBidXkodWludCBfY2VsZWJJZCkgcGF5YWJsZSBwdWJsaWMgewogICAgYWRkcmVzcyBwcmV2T3duZXIgPSBvd25lck9mKF9jZWxlYklkKTsKICAgIHVpbnQgY3VycmVudFByaWNlID0gY2VsZWJJZFRvUHJpY2VbX2NlbGViSWRdOwoKICAgIHJlcXVpcmUocHJldk93bmVyICE9IG1zZy5zZW5kZXIpOwogICAgcmVxdWlyZSghaXNOdWxsQWRkcmVzcyhtc2cuc2VuZGVyKSk7CiAgICByZXF1aXJlKG1zZy52YWx1ZSA+PSBjdXJyZW50UHJpY2UpOwoKICAgIC8vIFRha2UgYSBjdXQgb2ZmIHRoZSBwYXltZW50CiAgICB1aW50IHBheW1lbnQgPSB1aW50KFNhZmVNYXRoLmRpdihTYWZlTWF0aC5tdWwoY3VycmVudFByaWNlLCA5MiksIDEwMCkpOwogICAgdWludCBsZWZ0b3ZlciA9IFNhZmVNYXRoLnN1Yihtc2cudmFsdWUsIGN1cnJlbnRQcmljZSk7CiAgICB1aW50IG5ld1ByaWNlOwoKICAgIF90cmFuc2ZlcihwcmV2T3duZXIsIG1zZy5zZW5kZXIsIF9jZWxlYklkKTsKCiAgICBpZiAoY3VycmVudFByaWNlIDwgR1JPV1RIX0JVTVApIHsKICAgICAgbmV3UHJpY2UgPSBTYWZlTWF0aC5tdWwoY3VycmVudFByaWNlLCAyKTsKICAgIH0gZWxzZSB7CiAgICAgIG5ld1ByaWNlID0gU2FmZU1hdGguZGl2KFNhZmVNYXRoLm11bChjdXJyZW50UHJpY2UsIFBSSUNFX0lOQ1JFQVNFX1NDQUxFKSwgMTAwKTsKICAgIH0KCiAgICBjZWxlYklkVG9QcmljZVtfY2VsZWJJZF0gPSBuZXdQcmljZTsKCiAgICBpZiAocHJldk93bmVyICE9IGFkZHJlc3ModGhpcykpIHsKICAgICAgcHJldk93bmVyLnRyYW5zZmVyKHBheW1lbnQpOwogICAgfQoKICAgIENlbGViU29sZChfY2VsZWJJZCwgY3VycmVudFByaWNlLCBuZXdQcmljZSwKICAgICAgY2VsZWJzW19jZWxlYklkXS5uYW1lLCBwcmV2T3duZXIsIG1zZy5zZW5kZXIpOwoKICAgIG1zZy5zZW5kZXIudHJhbnNmZXIobGVmdG92ZXIpOwogIH0KCiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50IGJhbGFuY2UpIHsKICAgIHJldHVybiB1c2VyVG9OdW1DZWxlYnNbX293bmVyXTsKICB9CgogIGZ1bmN0aW9uIG93bmVyT2YodWludCBfY2VsZWJJZCkgcHVibGljIHZpZXcgcmV0dXJucyAoYWRkcmVzcyBhZGRyKSB7CiAgICByZXR1cm4gY2VsZWJJZFRvT3duZXJbX2NlbGViSWRdOwogIH0KCiAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50IHRvdGFsKSB7CiAgICByZXR1cm4gY2VsZWJzLmxlbmd0aDsKICB9CgogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50IF9jZWxlYklkKSBwdWJsaWMgewogICAgX3RyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX2NlbGViSWQpOwogIH0KCiAgLyoqIFNUQVJUIEZVTkNUSU9OUyBGT1IgQVVUSE9SUyAqKi8KCiAgZnVuY3Rpb24gY3JlYXRlQ2VsZWIoc3RyaW5nIF9uYW1lLCB1aW50IF9wcmljZSwgdWludFs2XSBfdHJhaXRWYWx1ZXMsIHVpbnRbNl0gX3RyYWl0Qm9vc3RlcnMpIHB1YmxpYyBvbmx5QXV0aG9ycyB7CiAgICByZXF1aXJlKF9wcmljZSA+PSBNSU5fU1RBUlRJTkdfUFJJQ0UpOwoKICAgIHVpbnQgY2VsZWJJZCA9IGNlbGVicy5wdXNoKENlbGViKF9uYW1lKSkgLSAxOwogICAgY2VsZWJJZFRvT3duZXJbY2VsZWJJZF0gPSBhdXRob3I7CiAgICBjZWxlYklkVG9QcmljZVtjZWxlYklkXSA9IF9wcmljZTsKICAgIGNlbGViSWRUb1RyYWl0VmFsdWVzW2NlbGViSWRdID0gX3RyYWl0VmFsdWVzOwogICAgY2VsZWJJZFRvVHJhaXRCb29zdGVyc1tjZWxlYklkXSA9IF90cmFpdEJvb3N0ZXJzOwogICAgdXNlclRvTnVtQ2VsZWJzW2F1dGhvcl0rKzsKICB9CgogIGZ1bmN0aW9uIHVwZGF0ZUNlbGViKHVpbnQgX2NlbGViSWQsIHVpbnRbNl0gX3RyYWl0VmFsdWVzLCB1aW50WzZdIF90cmFpdEJvb3N0ZXJzKSBwdWJsaWMgb25seUF1dGhvcnMgewogICAgcmVxdWlyZShfY2VsZWJJZCA+PSAwICYmIF9jZWxlYklkIDwgdG90YWxTdXBwbHkoKSk7CgogICAgY2VsZWJJZFRvVHJhaXRWYWx1ZXNbX2NlbGViSWRdID0gX3RyYWl0VmFsdWVzOwogICAgY2VsZWJJZFRvVHJhaXRCb29zdGVyc1tfY2VsZWJJZF0gPSBfdHJhaXRCb29zdGVyczsKICB9CgogIGZ1bmN0aW9uIHdpdGhkcmF3KHVpbnQgX2Ftb3VudCwgYWRkcmVzcyBfdG8pIHB1YmxpYyBvbmx5QXV0aG9ycyB7CiAgICByZXF1aXJlKCFpc051bGxBZGRyZXNzKF90bykpOwogICAgcmVxdWlyZShfYW1vdW50IDw9IHRoaXMuYmFsYW5jZSk7CgogICAgX3RvLnRyYW5zZmVyKF9hbW91bnQpOwogIH0KCiAgZnVuY3Rpb24gd2l0aGRyYXdBbGwoKSBwdWJsaWMgb25seUF1dGhvcnMgewogICAgcmVxdWlyZShhdXRob3IgIT0gMHgwKTsKICAgIHJlcXVpcmUoY29hdXRob3IgIT0gMHgwKTsKCiAgICB1aW50IGhhbGZCYWxhbmNlID0gdWludChTYWZlTWF0aC5kaXYodGhpcy5iYWxhbmNlLCAyKSk7CgogICAgYXV0aG9yLnRyYW5zZmVyKGhhbGZCYWxhbmNlKTsKICAgIGNvYXV0aG9yLnRyYW5zZmVyKGhhbGZCYWxhbmNlKTsKICB9CgogIGZ1bmN0aW9uIHNldENvQXV0aG9yKGFkZHJlc3MgX2NvYXV0aG9yKSBwdWJsaWMgb25seUF1dGhvciB7CiAgICByZXF1aXJlKCFpc051bGxBZGRyZXNzKF9jb2F1dGhvcikpOwoKICAgIGNvYXV0aG9yID0gX2NvYXV0aG9yOwogIH0KCiAgZnVuY3Rpb24gc2V0S3BvcEFyZW5hQ29udHJhY3RBZGRyZXNzKGFkZHJlc3MgX2FkZHJlc3MpIHB1YmxpYyBvbmx5QXV0aG9ycyB7CiAgICByZXF1aXJlKCFpc051bGxBZGRyZXNzKF9hZGRyZXNzKSk7CgogICAgS1BPUF9BUkVOQV9DT05UUkFDVF9BRERSRVNTID0gX2FkZHJlc3M7CiAgfQoKICBmdW5jdGlvbiB1cGRhdGVUcmFpdHModWludCBfY2VsZWJJZCkgcHVibGljIG9ubHlBcmVuYSB7CiAgICByZXF1aXJlKF9jZWxlYklkIDwgdG90YWxTdXBwbHkoKSk7CgogICAgZm9yICh1aW50IGkgPSAwOyBpIDwgNjsgaSsrKSB7CiAgICAgIHVpbnQgYm9vc3RlciA9IGNlbGViSWRUb1RyYWl0Qm9vc3RlcnNbX2NlbGViSWRdW2ldOwogICAgICBjZWxlYklkVG9UcmFpdFZhbHVlc1tfY2VsZWJJZF1baV0gPSBjZWxlYklkVG9UcmFpdFZhbHVlc1tfY2VsZWJJZF1baV0uYWRkKGJvb3N0ZXIpOwogICAgfQogIH0KCiAgLyoqIEVORCBGVU5DVElPTlMgRk9SIEFVVEhPUlMgKiovCgogIGZ1bmN0aW9uIGdldENlbGViKHVpbnQgX2NlbGViSWQpIHB1YmxpYyB2aWV3IHJldHVybnMgKAogICAgc3RyaW5nIG5hbWUsCiAgICB1aW50IHByaWNlLAogICAgYWRkcmVzcyBvd25lciwKICAgIHVpbnRbNl0gdHJhaXRWYWx1ZXMsCiAgICB1aW50WzZdIHRyYWl0Qm9vc3RlcnMKICApIHsKICAgIG5hbWUgPSBjZWxlYnNbX2NlbGViSWRdLm5hbWU7CiAgICBwcmljZSA9IGNlbGViSWRUb1ByaWNlW19jZWxlYklkXTsKICAgIG93bmVyID0gY2VsZWJJZFRvT3duZXJbX2NlbGViSWRdOwogICAgdHJhaXRWYWx1ZXMgPSBjZWxlYklkVG9UcmFpdFZhbHVlc1tfY2VsZWJJZF07CiAgICB0cmFpdEJvb3N0ZXJzID0gY2VsZWJJZFRvVHJhaXRCb29zdGVyc1tfY2VsZWJJZF07CiAgfQoKICAvKiogU1RBUlQgRlVOQ1RJT05TIFJFTEFURUQgVE8gRVhURVJOQUwgQ09OVFJBQ1QgSU5URVJBQ1RJT05TICoqLwoKICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3RvLCB1aW50IF9jZWxlYklkKSBwdWJsaWMgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyT2YoX2NlbGViSWQpKTsKCiAgICBjZWxlYklkVG9BcHByb3ZlZFJlY2lwaWVudFtfY2VsZWJJZF0gPSBfdG87CgogICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3RvLCBfY2VsZWJJZCk7CiAgfQoKICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQgX2NlbGViSWQpIHB1YmxpYyB7CiAgICByZXF1aXJlKG93bmVyT2YoX2NlbGViSWQpID09IF9mcm9tKTsKICAgIHJlcXVpcmUoaXNBcHByb3ZlZChfdG8sIF9jZWxlYklkKSk7CiAgICByZXF1aXJlKCFpc051bGxBZGRyZXNzKF90bykpOwoKICAgIF90cmFuc2ZlcihfZnJvbSwgX3RvLCBfY2VsZWJJZCk7CiAgfQoKICBmdW5jdGlvbiB0YWtlT3duZXJzaGlwKHVpbnQgX2NlbGViSWQpIHB1YmxpYyB7CiAgICByZXF1aXJlKCFpc051bGxBZGRyZXNzKG1zZy5zZW5kZXIpKTsKICAgIHJlcXVpcmUoaXNBcHByb3ZlZChtc2cuc2VuZGVyLCBfY2VsZWJJZCkpOwoKICAgIGFkZHJlc3MgY3VycmVudE93bmVyID0gY2VsZWJJZFRvT3duZXJbX2NlbGViSWRdOwoKICAgIF90cmFuc2ZlcihjdXJyZW50T3duZXIsIG1zZy5zZW5kZXIsIF9jZWxlYklkKTsKICB9CgogIC8qKiBFTkQgRlVOQ1RJT05TIFJFTEFURUQgVE8gRVhURVJOQUwgQ09OVFJBQ1QgSU5URVJBQ1RJT05TICoqLwoKICBmdW5jdGlvbiBpbXBsZW1lbnRzRVJDNzIxKCkgcHVibGljIHB1cmUgcmV0dXJucyAoYm9vbCkgewogICAgcmV0dXJuIHRydWU7CiAgfQoKICAvKiogTU9ESUZJRVJTICoqLwoKICBtb2RpZmllciBvbmx5QXV0aG9yKCkgewogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IGF1dGhvcik7CiAgICBfOwogIH0KCiAgbW9kaWZpZXIgb25seUF1dGhvcnMoKSB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gYXV0aG9yIHx8IG1zZy5zZW5kZXIgPT0gY29hdXRob3IpOwogICAgXzsKICB9CgogIG1vZGlmaWVyIG9ubHlBcmVuYSgpIHsKICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBhdXRob3IgfHwgbXNnLnNlbmRlciA9PSBjb2F1dGhvciB8fCBtc2cuc2VuZGVyID09IEtQT1BfQVJFTkFfQ09OVFJBQ1RfQUREUkVTUyk7CiAgICBfOwogIH0KCiAgLyoqIEZVTkNUSU9OUyBUSEFUIFdPTlQgQkUgVVNFRCBGUkVRVUVOVExZICoqLwoKICBmdW5jdGlvbiBzZXRNaW5TdGFydGluZ1ByaWNlKHVpbnQgX3ByaWNlKSBwdWJsaWMgb25seUF1dGhvcnMgewogICAgTUlOX1NUQVJUSU5HX1BSSUNFID0gX3ByaWNlOwogIH0KCiAgZnVuY3Rpb24gc2V0R3Jvd3RoQnVtcCh1aW50IF9idW1wKSBwdWJsaWMgb25seUF1dGhvcnMgewogICAgR1JPV1RIX0JVTVAgPSBfYnVtcDsKICB9CgogIGZ1bmN0aW9uIHNldFByaWNlSW5jcmVhc2VTY2FsZSh1aW50IF9zY2FsZSkgcHVibGljIG9ubHlBdXRob3JzIHsKICAgIFBSSUNFX0lOQ1JFQVNFX1NDQUxFID0gX3NjYWxlOwogIH0KCiAgLyoqIFBSSVZBVEUgRlVOQ1RJT05TICoqLwoKICBmdW5jdGlvbiBpc0FwcHJvdmVkKGFkZHJlc3MgX3RvLCB1aW50IF9jZWxlYklkKSBwcml2YXRlIHZpZXcgcmV0dXJucyAoYm9vbCkgewogICAgcmV0dXJuIGNlbGViSWRUb0FwcHJvdmVkUmVjaXBpZW50W19jZWxlYklkXSA9PSBfdG87CiAgfQoKICBmdW5jdGlvbiBpc051bGxBZGRyZXNzKGFkZHJlc3MgX2FkZHIpIHByaXZhdGUgcHVyZSByZXR1cm5zIChib29sKSB7CiAgICByZXR1cm4gX2FkZHIgPT0gMHgwOwogIH0KfQ=='.
	

]
