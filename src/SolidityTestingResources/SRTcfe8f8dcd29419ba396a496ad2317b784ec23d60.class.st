Class {
	#name : #SRTcfe8f8dcd29419ba396a496ad2317b784ec23d60,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTcfe8f8dcd29419ba396a496ad2317b784ec23d60 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTE7CgovKiogQHRpdGxlIERlY2VudHJhbGl6ZWQgSWRlbnRpZmljYXRpb24gTnVtYmVyIChESU4pIHJlZ2lzdHJ5LiAqLwpjb250cmFjdCBESU5SZWdpc3RyeSB7CgogICAgc3RydWN0IFJlY29yZCB7CiAgICAgICAgYWRkcmVzcyBvd25lcjsKICAgICAgICBhZGRyZXNzIHJlc29sdmVyOyAgLy8gQWRkcmVzcyB3aGVyZSBwcm9kdWN0IGluZm9ybWF0aW9uIGlzIHN0b3JlZC4gCiAgICAgICAgdWludDI1NiB1cGRhdGVkOyAgIC8vIFVuaXggdGltZXN0YW1wLgogICAgfQoKICAgIC8vIERJTiA9PiBSZWNvcmQKICAgIG1hcHBpbmcgKHVpbnQyNTYgPT4gUmVjb3JkKSByZWNvcmRzOwoKICAgIC8vIFRoZSBhZGRyZXNzIG9mIERJTlJlZ2lzdHJhci4KICAgIGFkZHJlc3MgcHVibGljIHJlZ2lzdHJhcjsKCiAgICAvLyBUaGUgZmlyc3QgRElOIHJlZ2lzdGVyZWQuCiAgICB1aW50MjU2IHB1YmxpYyBnZW5lc2lzOwoKICAgIG1vZGlmaWVyIG9ubHlfcmVnaXN0cmFyIHsKICAgICAgICByZXF1aXJlKHJlZ2lzdHJhciA9PSBtc2cuc2VuZGVyKTsKICAgICAgICBfOwogICAgfQoKICAgIG1vZGlmaWVyIG9ubHlfb3duZXIodWludDI1NiBESU4pIHsKICAgICAgICByZXF1aXJlKHJlY29yZHNbRElOXS5vd25lciA9PSBtc2cuc2VuZGVyKTsKICAgICAgICBfOwogICAgfQoKICAgIC8vIExvZ2dlZCB3aGVuIHRoZSBvd25lciBvZiBhIERJTiB0cmFuc2ZlcnMgb3duZXJzaGlwIHRvIGEgbmV3IGFjY291bnQuCiAgICBldmVudCBOZXdPd25lcih1aW50MjU2IGluZGV4ZWQgRElOLCBhZGRyZXNzIGluZGV4ZWQgb3duZXIpOwoKICAgIC8vIExvZ2dlZCB3aGVuIHRoZSByZXNvbHZlciBhc3NvY2lhdGVkIHdpdGggYSBESU4gY2hhbmdlcy4KICAgIGV2ZW50IE5ld1Jlc29sdmVyKHVpbnQyNTYgaW5kZXhlZCBESU4sIGFkZHJlc3MgaW5kZXhlZCByZXNvbHZlcik7CgogICAgLy8gTG9nZ2VkIHdoZW4gYSBuZXcgRElOIGlzIHJlZ2lzdGVyZWQuCiAgICBldmVudCBOZXdSZWdpc3RyYXRpb24odWludDI1NiBpbmRleGVkIERJTiwgYWRkcmVzcyBpbmRleGVkIG93bmVyKTsKCiAgICAvLyBMb2dnZWQgd2hlbiB0aGUgRElOUmVnaXN0cmFyIGNvbnRyYWN0IGNoYW5nZXMuCiAgICBldmVudCBOZXdSZWdpc3RyYXIoYWRkcmVzcyBpbmRleGVkIHJlZ2lzdHJhcik7CgogICAgLyoqIEBkZXYgQ29uc3RydWN0b3IuCiAgICAgICogQHBhcmFtIF9nZW5lc2lzIFRoZSBmaXJzdCBESU4gcmVnaXN0ZXJlZC4KICAgICAgKi8KICAgIGZ1bmN0aW9uIERJTlJlZ2lzdHJ5KHVpbnQyNTYgX2dlbmVzaXMpIHsKICAgICAgICBnZW5lc2lzID0gX2dlbmVzaXM7CgogICAgICAgIC8vIFJlZ2lzdGVyIHRoZSBnZW5lc2lzIERJTiB0byB0aGUgYWNjb3VudCB0aGF0IGRlcGxveXMgdGhpcyBjb250cmFjdC4KICAgICAgICByZWNvcmRzW2dlbmVzaXNdLm93bmVyID0gbXNnLnNlbmRlcjsKICAgICAgICByZWNvcmRzW2dlbmVzaXNdLnVwZGF0ZWQgPSBibG9jay50aW1lc3RhbXA7CiAgICAgICAgTmV3UmVnaXN0cmF0aW9uKGdlbmVzaXMsIG1zZy5zZW5kZXIpOwogICAgfQoKICAgIC8vIEdldCB0aGUgb3duZXIgb2YgYSBzcGVjaWZpZWQgRElOLgogICAgZnVuY3Rpb24gb3duZXIodWludDI1NiBESU4pIGNvbnN0YW50IHJldHVybnMgKGFkZHJlc3MpIHsKICAgICAgICByZXR1cm4gcmVjb3Jkc1tESU5dLm93bmVyOwogICAgfQoKICAgIC8qKgogICAgICogQGRldiBUcmFuc2ZlciBvd25lcnNoaXAgb2YgYSBESU4uCiAgICAgKiBAcGFyYW0gRElOIFRoZSBESU4gdG8gdHJhbnNmZXIuCiAgICAgKiBAcGFyYW0gb3duZXIgVGhlIGFkZHJlc3Mgb2YgdGhlIG5ldyBvd25lci4KICAgICAqLwogICAgZnVuY3Rpb24gc2V0T3duZXIodWludDI1NiBESU4sIGFkZHJlc3Mgb3duZXIpIG9ubHlfb3duZXIoRElOKSB7CiAgICAgICAgcmVjb3Jkc1tESU5dLm93bmVyID0gb3duZXI7CiAgICAgICAgcmVjb3Jkc1tESU5dLnVwZGF0ZWQgPSBibG9jay50aW1lc3RhbXA7CiAgICAgICAgTmV3T3duZXIoRElOLCBvd25lcik7CiAgICB9CgogICAgLy8gR2V0IHRoZSByZXNvbHZlciBvZiBhIHNwZWNpZmllZCBESU4uCiAgICBmdW5jdGlvbiByZXNvbHZlcih1aW50MjU2IERJTikgY29uc3RhbnQgcmV0dXJucyAoYWRkcmVzcykgewogICAgICAgIHJldHVybiByZWNvcmRzW0RJTl0ucmVzb2x2ZXI7CiAgICB9CgogICAgLyoqCiAgICAgKiBAZGV2IFNldCB0aGUgcmVzb2x2ZXIgb2YgYSBESU4uCiAgICAgKiBAcGFyYW0gRElOIFRoZSBESU4gdG8gdXBkYXRlLgogICAgICogQHBhcmFtIHJlc29sdmVyIFRoZSBhZGRyZXNzIG9mIHRoZSByZXNvbHZlci4KICAgICAqLwogICAgZnVuY3Rpb24gc2V0UmVzb2x2ZXIodWludDI1NiBESU4sIGFkZHJlc3MgcmVzb2x2ZXIpIG9ubHlfb3duZXIoRElOKSB7CiAgICAgICAgcmVjb3Jkc1tESU5dLnJlc29sdmVyID0gcmVzb2x2ZXI7CiAgICAgICAgcmVjb3Jkc1tESU5dLnVwZGF0ZWQgPSBibG9jay50aW1lc3RhbXA7CiAgICAgICAgTmV3UmVzb2x2ZXIoRElOLCByZXNvbHZlcik7CiAgICB9CgogICAgLy8gR2V0IHRoZSB0aW1lIGEgc3BlY2lmaWVkIERJTiByZWNvcmQgd2FzIGxhc3QgdXBkYXRlZC4KICAgIGZ1bmN0aW9uIHVwZGF0ZWQodWludDI1NiBESU4pIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICByZXR1cm4gcmVjb3Jkc1tESU5dLnVwZGF0ZWQ7CiAgICB9IAoKICAgIC8qKgogICAgICogQGRldiBSZWdpc3RlciBhIG5ldyBESU4uCiAgICAgKiBAcGFyYW0gb3duZXIgVGhlIGFjY291bnQgdGhhdCB3aWxsIG93biB0aGUgRElOLgogICAgICovCiAgICBmdW5jdGlvbiByZWdpc3Rlcih1aW50MjU2IERJTiwgYWRkcmVzcyBvd25lcikgb25seV9yZWdpc3RyYXIgewogICAgICAgIHJlY29yZHNbRElOXS5vd25lciA9IG93bmVyOwogICAgICAgIHJlY29yZHNbRElOXS51cGRhdGVkID0gYmxvY2sudGltZXN0YW1wOwogICAgICAgIE5ld1JlZ2lzdHJhdGlvbihESU4sIG93bmVyKTsKICAgIH0KCiAgICAvKioKICAgICAqIEBkZXYgQ2hhbmdlIHRoZSBESU5SZWdpc3RyYXIgY29udHJhY3QuCiAgICAgKiBAcGFyYW0gX3JlZ2lzdHJhciBUaGUgYWRkcmVzcyBvZiB0aGUgbmV3IHJlZ2lzdHJhci4KICAgICAqLwogICAgZnVuY3Rpb24gc2V0UmVnaXN0cmFyKGFkZHJlc3MgX3JlZ2lzdHJhcikgb25seV9vd25lcihnZW5lc2lzKSB7CiAgICAgICAgcmVnaXN0cmFyID0gX3JlZ2lzdHJhcjsKICAgICAgICBOZXdSZWdpc3RyYXIoX3JlZ2lzdHJhcik7CiAgICB9Cgp9CgovKiogQHRpdGxlIERlY2VudHJhbGl6ZWQgSWRlbnRpZmljYXRpb24gTnVtYmVyIChESU4pIHJlZ2lzdHJhci4gUmVnaXN0ZXJzIG5ldyBESU5zICovCmNvbnRyYWN0IERJTlJlZ2lzdHJhciB7CgogICAgLy8gVGhlIERJTlJlZ2lzdHJ5IGNvbnRyYWN0CiAgICBESU5SZWdpc3RyeSByZWdpc3RyeTsKCiAgICAvLyBUaGUgY3VycmVudCBESU4gaW5kZXguIERJTnMgYXJlIHJlZ2lzdGVyZWQgc2VxdWVudGlhbGx5LgogICAgdWludDI1NiBwdWJsaWMgaW5kZXg7CgogICAgLy8gVGhlIG1heGltdW0gYW1vdW50IG9mIERJTnMgdGhhdCBjYW4gYmUgcmVnaXN0ZXJlZCBpbiBhIHNpbmdsZSB0cmFuc2FjdGlvbi4KICAgIHVpbnQyNTYgcHVibGljIE1BWF9RVUFOVElUWSA9IDEwOwoKICAgIC8qKiBAZGV2IENvbnN0cnVjdG9yLgogICAgICAqIEBwYXJhbSBfcmVnaXN0cnkgVGhlIERJTlJlZ2lzdHJ5IGNvbnRyYWN0LgogICAgICAqLwogICAgZnVuY3Rpb24gRElOUmVnaXN0cmFyKERJTlJlZ2lzdHJ5IF9yZWdpc3RyeSwgdWludDI1NiBfZ2VuZXNpcykgewogICAgICAgIHJlZ2lzdHJ5ID0gX3JlZ2lzdHJ5OwoKICAgICAgICAvLyBTZXQgdGhlIGN1cnJlbnQgaW5kZXggdG8gdGhlIGdlbmVzaXMgRElOLgogICAgICAgIGluZGV4ID0gX2dlbmVzaXM7CiAgICB9CgogICAgLyoqCiAgICAgKiBAZGV2IFJlZ2lzdGVyIGEgbmV3IERJTi4KICAgICAqIEByZXR1cm4gRElOIFRoZSBuZXdseSByZWdpc3RlcmVkIERJTi4KICAgICAqLwogICAgZnVuY3Rpb24gcmVnaXN0ZXJESU4oKSByZXR1cm5zICh1aW50MjU2IERJTikgewogICAgICAgIGluZGV4Kys7CiAgICAgICAgcmVnaXN0cnkucmVnaXN0ZXIoaW5kZXgsIG1zZy5zZW5kZXIpOwogICAgICAgIHJldHVybiBpbmRleDsKICAgIH0KCiAgICAvKioKICAgICAqIEBkZXYgUmVnaXN0ZXIgbXVsdGlwbGUgbmV3IERJTnMuCiAgICAgKiBAcGFyYW0gcXVhbnRpdHkgVGhlIGFtb3VudCBvZiBESU5zIHRvIHJlZ2lzdGVyLgogICAgICovCiAgICBmdW5jdGlvbiByZWdpc3RlckRJTnModWludDI1NiBxdWFudGl0eSkgewogICAgICAgIHJlcXVpcmUocXVhbnRpdHkgPD0gTUFYX1FVQU5USVRZKTsKCiAgICAgICAgZm9yICh1aW50IGkgPSAwOyBpIDwgcXVhbnRpdHk7IGkrKykgewogICAgICAgICAgICByZWdpc3RlckRJTigpOwogICAgICAgIH0KICAgIH0KCn0='.
	

]
