Class {
	#name : #SRTaedde4941e7eac04f97be3a89af50a454d7c5f89,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRTaedde4941e7eac04f97be3a89af50a454d7c5f89 >> base64 [
	^ ''.
	

]
