Class {
	#name : #SRT732e28b4a2fae96461f6b4cfae8165d8a0d464d6,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT732e28b4a2fae96461f6b4cfae8165d8a0d464d6 >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7Cgpjb250cmFjdCBGb3JlaWduVG9rZW4gewogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nik7CiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sKTsKfQoKY29udHJhY3QgRUlQMjBJbnRlcmZhY2UgewogICAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7CiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSk7CiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpOwogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7CiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpOwogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50MjU2IF92YWx1ZSk7CiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKTsKfQoKY29udHJhY3QgT3duZWQgewogICAgYWRkcmVzcyBwdWJsaWMgb3duZXI7CiAgICBhZGRyZXNzIHB1YmxpYyBuZXdPd25lcjsKCiAgICBldmVudCBPd25lcnNoaXBUcmFuc2ZlcnJlZChhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8pOwoKICAgIGZ1bmN0aW9uIE93bmVkKCkgcHVibGljIHsKICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7CiAgICB9CgogICAgbW9kaWZpZXIgb25seU93bmVyIHsKICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogICAgICAgIF87CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBfbmV3T3duZXIpIHB1YmxpYyBvbmx5T3duZXIgewogICAgICAgIG5ld093bmVyID0gX25ld093bmVyOwogICAgfQoKICAgIGZ1bmN0aW9uIGFjY2VwdE93bmVyc2hpcCgpIHB1YmxpYyB7CiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG5ld093bmVyKTsKICAgICAgICBPd25lcnNoaXBUcmFuc2ZlcnJlZChvd25lciwgbmV3T3duZXIpOwogICAgICAgIG93bmVyID0gbmV3T3duZXI7CiAgICAgICAgbmV3T3duZXIgPSBhZGRyZXNzKDApOwogICAgfQp9Cgpjb250cmFjdCBBTUxPdmVDb2luIGlzIEVJUDIwSW50ZXJmYWNlLCBPd25lZHsKICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgYmFsYW5jZXM7CiAgICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikpIGFsbG93ZWQ7CiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbENvbnRyaWJ1dGlvbiA9IDA7CiAgICB1aW50IGZlYnJ1YXJ5TGFzdFRpbWUgPSAxNTE5ODYyMzk5OwogICAgdWludCBtYXJjaExhc3RUaW1lID0gMTUyMjU0MDc5OTsKICAgIHVpbnQgYXByaWxMYXN0VGltZSA9IDE1MjUxMzI3OTk7CiAgICB1aW50IGp1bmVMYXN0VGltZSA9IDE1MzA0MDMxOTk7CiAgICBtb2RpZmllciBvbmx5RXhlY3V0ZUJ5KGFkZHJlc3MgX2FjY291bnQpCiAgICB7CiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyID09IF9hY2NvdW50KTsKICAgICAgICBfOwogICAgfQogICAgc3RyaW5nIHB1YmxpYyBzeW1ib2w7CiAgICBzdHJpbmcgcHVibGljIG5hbWU7CiAgICB1aW50OCBwdWJsaWMgZGVjaW1hbHM7CgogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICByZXF1aXJlKG1zZy5kYXRhLmxlbmd0aCA+PSAoMiAqIDMyKSArIDQpOwogICAgICAgIGlmIChfdmFsdWUgPT0gMCkgeyByZXR1cm4gZmFsc2U7IH0KICAgICAgICB1aW50MjU2IGZyb21CYWxhbmNlID0gYmFsYW5jZXNbbXNnLnNlbmRlcl07CiAgICAgICAgYm9vbCBzdWZmaWNpZW50RnVuZHMgPSBmcm9tQmFsYW5jZSA+PSBfdmFsdWU7CiAgICAgICAgYm9vbCBvdmVyZmxvd2VkID0gYmFsYW5jZXNbX3RvXSArIF92YWx1ZSA8IGJhbGFuY2VzW190b107CiAgICAgICAgaWYgKHN1ZmZpY2llbnRGdW5kcyAmJiAhb3ZlcmZsb3dlZCkgewogICAgICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtPSBfdmFsdWU7CiAgICAgICAgICAgIGJhbGFuY2VzW190b10gKz0gX3ZhbHVlOwogICAgICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0gZWxzZSB7IHJldHVybiBmYWxzZTsgfQogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgICAgICByZXF1aXJlKG1zZy5kYXRhLmxlbmd0aCA+PSAoMiAqIDMyKSArIDQpOwogICAgICAgIGlmIChfdmFsdWUgPT0gMCkgeyByZXR1cm4gZmFsc2U7IH0KICAgICAgICB1aW50MjU2IGZyb21CYWxhbmNlID0gYmFsYW5jZXNbX2Zyb21dOwogICAgICAgIHVpbnQyNTYgYWxsb3dhbmNlID0gYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl07CiAgICAgICAgYm9vbCBzdWZmaWNpZW50RnVuZHMgPSBmcm9tQmFsYW5jZSA8PSBfdmFsdWU7CiAgICAgICAgYm9vbCBzdWZmaWNpZW50QWxsb3dhbmNlID0gYWxsb3dhbmNlIDw9IF92YWx1ZTsKICAgICAgICBib29sIG92ZXJmbG93ZWQgPSBiYWxhbmNlc1tfdG9dICsgX3ZhbHVlID4gYmFsYW5jZXNbX3RvXTsKICAgICAgICBpZiAoc3VmZmljaWVudEZ1bmRzICYmIHN1ZmZpY2llbnRBbGxvd2FuY2UgJiYgIW92ZXJmbG93ZWQpIHsKICAgICAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfdmFsdWU7CiAgICAgICAgICAgIGJhbGFuY2VzW19mcm9tXSAtPSBfdmFsdWU7CiAgICAgICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdIC09IF92YWx1ZTsKICAgICAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfSBlbHNlIHsgcmV0dXJuIGZhbHNlOyB9CiAgICB9CgogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgICAgIGlmIChfdmFsdWUgIT0gMCAmJiBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSAhPSAwKSB7IHJldHVybiBmYWxzZTsgfQogICAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgcHVibGljIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICByZXR1cm4gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsKICAgIH0KCiAgICBmdW5jdGlvbiB3aXRoZHJhd0ZvcmVpZ25Ub2tlbnMoYWRkcmVzcyBfdG9rZW5Db250cmFjdCkgcHVibGljIG9ubHlFeGVjdXRlQnkob3duZXIpIHJldHVybnMgKGJvb2wpIHsKICAgICAgICBGb3JlaWduVG9rZW4gdG9rZW4gPSBGb3JlaWduVG9rZW4oX3Rva2VuQ29udHJhY3QpOwogICAgICAgIHVpbnQyNTYgYW1vdW50ID0gdG9rZW4uYmFsYW5jZU9mKGFkZHJlc3ModGhpcykpOwogICAgICAgIHJldHVybiB0b2tlbi50cmFuc2Zlcihvd25lciwgYW1vdW50KTsKICAgIH0KCiAgICBmdW5jdGlvbiB3aXRoZHJhdygpIHB1YmxpYyBvbmx5RXhlY3V0ZUJ5KG93bmVyKSB7CiAgICAgICAgb3duZXIudHJhbnNmZXIodGhpcy5iYWxhbmNlKTsKICAgIH0KCiAgICBmdW5jdGlvbiBnZXRTdGF0cygpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50MjU2LCB1aW50MjU2LCBib29sKSB7CiAgICAgICAgYm9vbCBwdXJjaGFzaW5nQWxsb3dlZCA9IChnZXRUaW1lKCkgPCBqdW5lTGFzdFRpbWUpOwogICAgICAgIHJldHVybiAodG90YWxDb250cmlidXRpb24sIHRvdGFsU3VwcGx5LCBwdXJjaGFzaW5nQWxsb3dlZCk7CiAgICB9CgogICAgZnVuY3Rpb24gQU1MT3ZlQ29pbigpIHB1YmxpYyB7CiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOwogICAgICAgIHN5bWJvbCA9ICJBTUwiOwogICAgICAgIG5hbWUgPSAiQU1MT3ZlIjsKICAgICAgICBkZWNpbWFscyA9IDE4OwogICAgICAgIHVpbnQyNTYgdG9rZW5zSXNzdWVkID0gMTMwMDAwMCBldGhlcjsKICAgICAgICB0b3RhbFN1cHBseSArPSB0b2tlbnNJc3N1ZWQ7CiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gKz0gdG9rZW5zSXNzdWVkOwogICAgICAgIFRyYW5zZmVyKGFkZHJlc3ModGhpcyksIG1zZy5zZW5kZXIsIHRva2Vuc0lzc3VlZCk7CiAgICB9CgogICAgZnVuY3Rpb24oKSBwYXlhYmxlIHB1YmxpYyB7CiAgICAgICAgcmVxdWlyZShtc2cudmFsdWUgPj0gMSBmaW5uZXkpOwogICAgICAgIHVpbnQgcmlnaHROb3cgPSBnZXRUaW1lKCk7CiAgICAgICAgcmVxdWlyZShyaWdodE5vdyA8IGp1bmVMYXN0VGltZSk7CiAgICAgICAgb3duZXIudHJhbnNmZXIobXNnLnZhbHVlKTsKICAgICAgICB0b3RhbENvbnRyaWJ1dGlvbiArPSBtc2cudmFsdWU7CiAgICAgICAgdWludCByYXRlID0gMTAwMDA7CiAgICAgICAgaWYocmlnaHROb3cgPCBmZWJydWFyeUxhc3RUaW1lKXsKICAgICAgICAgICByYXRlID0gMTUwMDA7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICBpZihyaWdodE5vdyA8IG1hcmNoTGFzdFRpbWUpewogICAgICAgICAgICAgIHJhdGUgPSAxMzAwMDsKICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIGlmKHJpZ2h0Tm93IDwgYXByaWxMYXN0VGltZSl7CiAgICAgICAgICAgICAgICAgcmF0ZSA9IDExMDAwOwogICAgICAgICAgICAgIH0KICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHVpbnQyNTYgdG9rZW5zSXNzdWVkID0gKG1zZy52YWx1ZSAqIHJhdGUpOwogICAgICAgIHVpbnQyNTYgZnV0dXJlVG9rZW5TdXBwbHkgPSAodG90YWxTdXBwbHkgKyB0b2tlbnNJc3N1ZWQpOwogICAgICAgIHVpbnQyNTYgbWF4U3VwcGx5ID0gMTMwMDAwMDAgZXRoZXI7CiAgICAgICAgcmVxdWlyZShmdXR1cmVUb2tlblN1cHBseSA8IG1heFN1cHBseSk7CiAgICAgICAgdG90YWxTdXBwbHkgKz0gdG9rZW5zSXNzdWVkOwogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdICs9IHRva2Vuc0lzc3VlZDsKICAgICAgICBUcmFuc2ZlcihhZGRyZXNzKHRoaXMpLCBtc2cuc2VuZGVyLCB0b2tlbnNJc3N1ZWQpOwogICAgfQoKICAgIGZ1bmN0aW9uIGdldFRpbWUoKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50KSB7CiAgICAgIHJldHVybiBub3c7CiAgICB9Cn0='.
	

]
