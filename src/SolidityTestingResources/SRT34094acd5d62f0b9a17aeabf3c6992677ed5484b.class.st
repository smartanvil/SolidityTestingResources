Class {
	#name : #SRT34094acd5d62f0b9a17aeabf3c6992677ed5484b,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT34094acd5d62f0b9a17aeabf3c6992677ed5484b >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuNDsKCmNvbnRyYWN0IEROQ0Fzc2V0IHsKICAgIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5ID0gMDsKICAgIC8vZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3Mgd2hvKSBjb25zdGFudCByZXR1cm5zICh1aW50KTsKICAgIC8vZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQgX3ZhbHVlKSByZXR1cm5zIChib29sKTsKICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBmcm9tLCBhZGRyZXNzIGluZGV4ZWQgdG8sIHVpbnQgdmFsdWUpOwp9CgogCmNvbnRyYWN0IEROQ1JlY2VpdmluZ0NvbnRyYWN0IHsKICAgIGZ1bmN0aW9uIHRva2VuRmFsbGJhY2soYWRkcmVzcyBfZnJvbSwgdWludCBfdmFsdWUsIGJ5dGVzIF9kYXRhKTsKfQoKLyogU2FmZU1hdGggZm9yIGNoZWNraW5nIGVyb3IqLwpsaWJyYXJ5IFNhZmVNYXRoIHsKICAgIAogIGZ1bmN0aW9uIG11bCh1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgewogICAgdWludCBjID0gYSAqIGI7CiAgICBhc3NlcnQoYSA9PSAwIHx8IGMgLyBhID09IGIpOwogICAgcmV0dXJuIGM7CiAgfQogIGZ1bmN0aW9uIGRpdih1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgewogICAgYXNzZXJ0KGIgPiAwKTsKICAgIHVpbnQgYyA9IGEgLyBiOwogICAgYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7CiAgICByZXR1cm4gYzsKICB9CiAgZnVuY3Rpb24gc3ViKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7CiAgICBhc3NlcnQoYiA8PSBhKTsKICAgIHJldHVybiBhIC0gYjsKICB9CiAgZnVuY3Rpb24gYWRkKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7CiAgICB1aW50IGMgPSBhICsgYjsKICAgIGFzc2VydChjID49IGEpOwogICAgcmV0dXJuIGM7CiAgfQoKICBmdW5jdGlvbiBtYXg2NCh1aW50NjQgYSwgdWludDY0IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQ2NCkgewogICAgcmV0dXJuIGEgPj0gYiA/IGEgOiBiOwogIH0KICBmdW5jdGlvbiBtaW42NCh1aW50NjQgYSwgdWludDY0IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQ2NCkgewogICAgcmV0dXJuIGEgPCBiID8gYSA6IGI7CiAgfQogIGZ1bmN0aW9uIG1heDI1Nih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgewogICAgcmV0dXJuIGEgPj0gYiA/IGEgOiBiOwogIH0KICBmdW5jdGlvbiBtaW4yNTYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHJldHVybiBhIDwgYiA/IGEgOiBiOwogIH0KICBmdW5jdGlvbiBhc3NlcnQoYm9vbCBhc3NlcnRpb24pIGludGVybmFsIHsKICAgIGlmICghYXNzZXJ0aW9uKSB7CiAgICAgIHRocm93OwogICAgfQogIH0KCgp9Cgpjb250cmFjdCBFUkMyMjNCYXNpY1Rva2VuIGlzIEROQ0Fzc2V0ewogICAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQyNTY7CgogICAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpIGJhbGFuY2VzOwoKICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7CiAgICAgICAgdWludCBjb2RlTGVuZ3RoOwogICAgICAgIGJ5dGVzIG1lbW9yeSBlbXB0eTsKCiAgICAgICAgYXNzZW1ibHkgewogICAgICAgICAgICAvLyBSZXRyaWV2ZSB0aGUgc2l6ZSBvZiB0aGUgY29kZSBvbiB0YXJnZXQgYWRkcmVzcywgdGhpcyBuZWVkcyBhc3NlbWJseSAuCiAgICAgICAgICAgIGNvZGVMZW5ndGggOj0gZXh0Y29kZXNpemUoX3RvKQogICAgICAgIH0KICAgICAgICAKICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IGJhbGFuY2VzW21zZy5zZW5kZXJdLnN1YihfdmFsdWUpOwogICAgICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfdmFsdWUpOwogICAgICAgIGlmKGNvZGVMZW5ndGg+MCkgewogICAgICAgICAgICBETkNSZWNlaXZpbmdDb250cmFjdCByZWNlaXZlciA9IEROQ1JlY2VpdmluZ0NvbnRyYWN0KF90byk7CiAgICAgICAgICAgIHJlY2VpdmVyLnRva2VuRmFsbGJhY2sobXNnLnNlbmRlciwgX3ZhbHVlLCBlbXB0eSk7CiAgICAgICAgfQogICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQgYmFsYW5jZSkgewogICAgICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogICAgfQp9Cgpjb250cmFjdCBETkNFUVVJVFkgaXMgRVJDMjIzQmFzaWNUb2tlbnsKCWFkZHJlc3MgYWRtaW47CglzdHJpbmcgcHVibGljIG5hbWUgPSAiRGluYXJDb2luIjsKICAgIHN0cmluZyBwdWJsaWMgc3ltYm9sID0gIkROQyI7CiAgICB1aW50IHB1YmxpYyBkZWNpbWFscyA9IDE4OwoJbWFwcGluZyAoYWRkcmVzcyA9PiBib29sKSBwdWJsaWMgbWludGFibGU7CgoJZXZlbnQgTWludGVkKGFkZHJlc3MgaW5kZXhlZCByZWNpcGllbnQsIHVpbnQyNTYgdmFsdWUpOwoJZXZlbnQgQnVybmVkKGFkZHJlc3MgaW5kZXhlZCB1c2VyLCB1aW50MjU2IHZhbHVlKTsKCglmdW5jdGlvbiBETkNFUVVJVFkoKSB7CgkJYWRtaW4gPSBtc2cuc2VuZGVyOwoJfQoKCW1vZGlmaWVyIG9ubHlhZG1pbiB7IGlmIChtc2cuc2VuZGVyID09IGFkbWluKSBfOyB9CgoJZnVuY3Rpb24gY2hhbmdlQWRtaW4oYWRkcmVzcyBfbmV3QWRtaW5BZGRyKSBvbmx5YWRtaW4gewoJCWFkbWluID0gX25ld0FkbWluQWRkcjsKCX0KCglmdW5jdGlvbiBjcmVhdGVOZXdNaW50YWJsZVVzZXIgKGFkZHJlc3MgbmV3QWRkcikgb25seWFkbWluIHsKCQlpZihiYWxhbmNlc1tuZXdBZGRyXSA9PSAwKSAgCiAgICAJCW1pbnRhYmxlW25ld0FkZHJdID0gdHJ1ZTsKCX0KCQoJZnVuY3Rpb24gZGVsZXRlTWludGFibGUgKGFkZHJlc3MgYWRkcikgb25seWFkbWluIHsKCSAgICBtaW50YWJsZVthZGRyXSA9IGZhbHNlOwoJfQoJCglmdW5jdGlvbiBhZG1pblRyYW5zZmVyKGFkZHJlc3MgZnJvbSwgYWRkcmVzcyB0bywgdWludDI1NiB2YWx1ZSkgb25seWFkbWluIHsKICAgICAgICBpZihtaW50YWJsZVtmcm9tXSA9PSB0cnVlKSB7CiAgICAJICAgIGJhbGFuY2VzW2Zyb21dID0gYmFsYW5jZXNbZnJvbV0uc3ViKHZhbHVlKTsKICAgIAkgICAgYmFsYW5jZXNbdG9dID0gYmFsYW5jZXNbdG9dLmFkZCh2YWx1ZSk7CiAgICAJICAgIFRyYW5zZmVyKGZyb20sIHRvLCB2YWx1ZSk7CiAgICAgICAgfQoJfQoJCglmdW5jdGlvbiBtaW50TmV3RE5DKGFkZHJlc3MgdXNlciwgdWludDI1NiBxdWFudGl0eSkgb25seWFkbWluIHsKCSAgICB1aW50MjU2IGNvcnJlY3RlZFF1YW50aXR5ID0gcXVhbnRpdHkgKiAoMTAqKihkZWNpbWFscy0xKSk7CiAgICAgICAgaWYobWludGFibGVbdXNlcl0gPT0gdHJ1ZSkgewogICAgICAgICAgICB0b3RhbFN1cHBseSA9IHRvdGFsU3VwcGx5LmFkZChjb3JyZWN0ZWRRdWFudGl0eSk7CiAgICAgICAgICAgIGJhbGFuY2VzW3VzZXJdID0gYmFsYW5jZXNbdXNlcl0uYWRkKGNvcnJlY3RlZFF1YW50aXR5KTsKICAgICAgICAgICAgVHJhbnNmZXIoMCwgdXNlciwgY29ycmVjdGVkUXVhbnRpdHkpOwogICAgICAgICAgICBNaW50ZWQodXNlciwgY29ycmVjdGVkUXVhbnRpdHkpOwogICAgICAgIH0gICAKCX0KCQoJZnVuY3Rpb24gYnVybkROQyhhZGRyZXNzIHVzZXIsIHVpbnQyNTYgcXVhbnRpdHkpIG9ubHlhZG1pbiB7CgkgICAgdWludDI1NiBjb3JyZWN0ZWRRdWFudGl0eSA9IHF1YW50aXR5ICogKDEwKiooZGVjaW1hbHMtMSkpOwoJICAgIGlmKG1pbnRhYmxlW3VzZXJdID09IHRydWUpIHsKICAgICAgICAgICAgYmFsYW5jZXNbdXNlcl0gPSBiYWxhbmNlc1t1c2VyXS5zdWIoY29ycmVjdGVkUXVhbnRpdHkpOwogICAgICAgICAgICB0b3RhbFN1cHBseSA9IHRvdGFsU3VwcGx5LnN1Yihjb3JyZWN0ZWRRdWFudGl0eSk7CiAgICAgICAgICAgIFRyYW5zZmVyKHVzZXIsIDAsIGNvcnJlY3RlZFF1YW50aXR5KTsKICAgICAgICAgICAgQnVybmVkKHVzZXIsIGNvcnJlY3RlZFF1YW50aXR5KTsKCSAgICB9Cgl9Cn0='.
	

]
