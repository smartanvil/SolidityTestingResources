Class {
	#name : #SRT45F047e524c83339a5701984Fd79E9D98375a5c6,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT45F047e524c83339a5701984Fd79E9D98375a5c6 >> base64 [
	^ ''.
	

]
