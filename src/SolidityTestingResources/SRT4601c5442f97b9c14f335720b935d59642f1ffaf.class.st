Class {
	#name : #SRT4601c5442f97b9c14f335720b935d59642f1ffaf,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT4601c5442f97b9c14f335720b935d59642f1ffaf >> base64 [
	^ ''.
	

]
