Class {
	#name : #SRT68c9139805bc945caa12bfd70ff568b5248afd1e,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT68c9139805bc945caa12bfd70ff568b5248afd1e >> base64 [
	^ 'cHJhZ21hIHNvbGlkaXR5IF4wLjQuMTg7Cgpjb250cmFjdCBUaGlzTXVzdEJlRmlyc3QgewoKICBhZGRyZXNzIHB1YmxpYyBidHNfYWRkcmVzczE7CiAgYWRkcmVzcyBwdWJsaWMgYnRzX2FkZHJlc3MyOwogIGFkZHJlc3MgcHVibGljIHRva2VuX2FkZHJlc3M7Cgp9Cgpjb250cmFjdCBBdXRob3JpemVkTGlzdCB7CgogICAgYnl0ZXMzMiBjb25zdGFudCBJX0FNX1JPT1QgPSBrZWNjYWsyNTYoIkkgYW0gcm9vdCEiKTsKICAgIGJ5dGVzMzIgY29uc3RhbnQgU1RBRkZfTUVNQkVSID0ga2VjY2FrMjU2KCJTdGFmZiBNZW1iZXIuIik7CiAgICBieXRlczMyIGNvbnN0YW50IFJPVVRFUiA9IGtlY2NhazI1NigiUm91dGVyIENvbnRyYWN0LiIpOwogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nKGJ5dGVzMzIgPT4gYm9vbCkpIGF1dGhvcml6ZWQ7CiAgICBtYXBwaW5nIChieXRlczMyID0+IGJvb2wpIGludGVybmFsIGNvbnRyYWN0UGVybWlzc2lvbnM7Cgp9Cgpjb250cmFjdCBDb2RlVHJpY2tzIHsKCiAgICBmdW5jdGlvbiBnZXRDb2RlSGFzaChhZGRyZXNzIF9hZGRyKSBpbnRlcm5hbCB2aWV3IHJldHVybnMgKGJ5dGVzMzIpIHsKCiAgICAgICAgcmV0dXJuIGtlY2NhazI1NihnZXRDb2RlKF9hZGRyKSk7CgogICAgfQoKICAgIGZ1bmN0aW9uIGdldENvZGUoYWRkcmVzcyBfYWRkcikgaW50ZXJuYWwgdmlldyByZXR1cm5zIChieXRlcykgewoKICAgICAgICBieXRlcyBtZW1vcnkgY29kZTsKICAgICAgICBhc3NlbWJseSB7CiAgICAgICAgICAgIC8vIGNvZGUgc2l6ZQogICAgICAgICAgICBsZXQgc2l6ZSA6PSBleHRjb2Rlc2l6ZShfYWRkcikKICAgICAgICAgICAgLy8gc2V0IGNvZGUgcG9pbnRlciB2YWx1ZSB0byBmcmVlIG1lbW9yeQogICAgICAgICAgICBjb2RlIDo9IG1sb2FkKDB4NDApCiAgICAgICAgICAgIC8vIG5ldyAibWVtb3J5IGVuZCIgaW5jbHVkaW5nIHBhZGRpbmcKICAgICAgICAgICAgbXN0b3JlKDB4NDAsIGFkZChjb2RlLCBhbmQoYWRkKGFkZChzaXplLCAweDIwKSwgMHgxZiksIG5vdCgweDFmKSkpKQogICAgICAgICAgICAvLyBzdG9yZSBsZW5ndGggaW4gbWVtb3J5CiAgICAgICAgICAgIG1zdG9yZShjb2RlLCBzaXplKQogICAgICAgICAgICAvLyBhY3R1YWxseSByZXRyaWV2ZSB0aGUgY29kZSwgdGhpcyBuZWVkcyBhc3NlbWJseQogICAgICAgICAgICBleHRjb2RlY29weShfYWRkciwgYWRkKGNvZGUsIDB4MjApLCAwLCBzaXplKQogICAgICAgIH0KICAgICAgICByZXR1cm4gY29kZTsKCiAgICB9Cgp9Cgpjb250cmFjdCBBdXRob3JpemVkIGlzIEF1dGhvcml6ZWRMaXN0IHsKCiAgICBmdW5jdGlvbiBBdXRob3JpemVkKCkgcHVibGljIHsKCiAgICAgICBhdXRob3JpemVkW21zZy5zZW5kZXJdW0lfQU1fUk9PVF0gPSB0cnVlOwoKICAgIH0KCiAgICBtb2RpZmllciBpZkF1dGhvcml6ZWQoYWRkcmVzcyBfYWRkcmVzcywgYnl0ZXMzMiBfYXV0aG9yaXphdGlvbikgewoKICAgICAgIHJlcXVpcmUoYXV0aG9yaXplZFtfYWRkcmVzc11bX2F1dGhvcml6YXRpb25dIHx8IGF1dGhvcml6ZWRbX2FkZHJlc3NdW0lfQU1fUk9PVF0pOwogICAgICAgXzsKCiAgICB9CgogICAgZnVuY3Rpb24gaXNBdXRob3JpemVkKGFkZHJlc3MgX2FkZHJlc3MsIGJ5dGVzMzIgX2F1dGhvcml6YXRpb24pIHB1YmxpYyB2aWV3IHJldHVybnMgKGJvb2wpIHsKCiAgICAgICByZXR1cm4gYXV0aG9yaXplZFtfYWRkcmVzc11bX2F1dGhvcml6YXRpb25dOwoKICAgIH0KCiAgICBmdW5jdGlvbiB0b2dnbGVBdXRob3JpemF0aW9uKGFkZHJlc3MgX2FkZHJlc3MsIGJ5dGVzMzIgX2F1dGhvcml6YXRpb24pIHB1YmxpYyBpZkF1dGhvcml6ZWQobXNnLnNlbmRlciwgSV9BTV9ST09UKSB7CgogICAgICAgLy8gUHJldmVudCBpbmFkdmVydGVudCBzZWxmIGxvY2tpbmcgb3V0LCBjYW5ub3QgY2hhbmdlIG93biBhdXRob3JpdHkKICAgICAgIHJlcXVpcmUoX2FkZHJlc3MgIT0gbXNnLnNlbmRlcik7CgogICAgICAgLy8gTm8gbmVlZCBmb3IgbG93ZXIgbGV2ZWwgYXV0aG9yaXphdGlvbiB0byBsaW5nZXIKICAgICAgIGlmIChfYXV0aG9yaXphdGlvbiA9PSBJX0FNX1JPT1QgJiYgIWF1dGhvcml6ZWRbX2FkZHJlc3NdW0lfQU1fUk9PVF0pCiAgICAgICAgICAgYXV0aG9yaXplZFtfYWRkcmVzc11bU1RBRkZfTUVNQkVSXSA9IGZhbHNlOwoKICAgICAgIGF1dGhvcml6ZWRbX2FkZHJlc3NdW19hdXRob3JpemF0aW9uXSA9ICFhdXRob3JpemVkW19hZGRyZXNzXVtfYXV0aG9yaXphdGlvbl07CgogICAgfQoKfQoKY29udHJhY3QgUm91dGVyIGlzIFRoaXNNdXN0QmVGaXJzdCwgQXV0aG9yaXplZExpc3QsIENvZGVUcmlja3MsIEF1dGhvcml6ZWQgewoKICBmdW5jdGlvbiBSb3V0ZXIoYWRkcmVzcyBfdG9rZW5fYWRkcmVzcywgYWRkcmVzcyBfc3RvcmFnZV9hZGRyZXNzKSBwdWJsaWMgQXV0aG9yaXplZCgpIHsKCiAgICAgcmVxdWlyZShfdG9rZW5fYWRkcmVzcyAhPSBhZGRyZXNzKDApKTsKICAgICByZXF1aXJlKF9zdG9yYWdlX2FkZHJlc3MgIT0gYWRkcmVzcygwKSk7CiAgICAgdG9rZW5fYWRkcmVzcyA9IF90b2tlbl9hZGRyZXNzOwogICAgIGJ0c19hZGRyZXNzMSA9IF9zdG9yYWdlX2FkZHJlc3M7CgogICAgIC8vIEl0IGlzIGJlbGlldmVkIGF0IHRoaXMgdGltZSB0aGF0IHRhbXBlcmluZyB3aXRoIGRlcGxveWVkIGNvbnRyYWN0J3MgYnl0ZWNvZGUgaXMgbm90CiAgICAgLy8gcG9zc2libGUuIFRoZXJlZm9yZSB0aGUgdHdvIGxpbmVzIGJlbG93IGFyZSAgbm90IG5lY2Vzc2FyeQogICAgIC8vIGNvbnRyYWN0UGVybWlzc2lvbnNbZ2V0Q29kZUhhc2goYnRzX2FkZHJlc3MxKV0gPSB0cnVlOwogICAgIC8vIGNvbnRyYWN0UGVybWlzc2lvbnNbZ2V0Q29kZUhhc2godG9rZW5fYWRkcmVzcyldID0gdHJ1ZTsKCiAgfQoKICBmdW5jdGlvbiBuYW1lU3VjY2Vzc29yKGFkZHJlc3MgX3Rva2VuX2FkZHJlc3MpIHB1YmxpYyBpZkF1dGhvcml6ZWQobXNnLnNlbmRlciwgSV9BTV9ST09UKSB7CgogICAgIHJlcXVpcmUoX3Rva2VuX2FkZHJlc3MgIT0gYWRkcmVzcygwKSk7CiAgICAgdG9rZW5fYWRkcmVzcyA9IF90b2tlbl9hZGRyZXNzOwoKICAgICAvLyBJdCBpcyBiZWxpZXZlZCBhdCB0aGlzIHRpbWUgdGhhdCB0YW1wZXJpbmcgd2l0aCBkZXBsb3llZCBjb250cmFjdCdzIGJ5dGVjb2RlIGlzIG5vdAogICAgIC8vIHBvc3NpYmxlLiBUaGVyZWZvcmUgdGhlIGxpbmUgYmVsb3cgaXMgbm90IG5lY2Vzc2FyeQogICAgIC8vIGNvbnRyYWN0UGVybWlzc2lvbnNbZ2V0Q29kZUhhc2godG9rZW5fYWRkcmVzcyldID0gdHJ1ZTsKCiAgfQoKICBmdW5jdGlvbiBzZXRTdG9yYWdlKGFkZHJlc3MgX3N0b3JhZ2VfYWRkcmVzcykgcHVibGljIGlmQXV0aG9yaXplZChtc2cuc2VuZGVyLCBJX0FNX1JPT1QpIHsKCiAgICAgcmVxdWlyZShfc3RvcmFnZV9hZGRyZXNzICE9IGFkZHJlc3MoMCkpOwogICAgIGJ0c19hZGRyZXNzMSA9IF9zdG9yYWdlX2FkZHJlc3M7CgogICAgIC8vIEl0IGlzIGJlbGlldmVkIGF0IHRoaXMgdGltZSB0aGF0IHRhbXBlcmluZyB3aXRoIGRlcGxveWVkIGNvbnRyYWN0J3MgYnl0ZWNvZGUgaXMgbm90CiAgICAgLy8gcG9zc2libGUuIFRoZXJlZm9yZSB0aGUgbGluZSBiZWxvdyBpcyBub3QgbmVjZXNzYXJ5CiAgICAgLy8gY29udHJhY3RQZXJtaXNzaW9uc1tnZXRDb2RlSGFzaChidHNfYWRkcmVzczEpXSA9IHRydWU7CgogIH0KCiAgZnVuY3Rpb24gc2V0U2Vjb25kYXJ5U3RvcmFnZShhZGRyZXNzIF9zdG9yYWdlX2FkZHJlc3MpIHB1YmxpYyBpZkF1dGhvcml6ZWQobXNnLnNlbmRlciwgSV9BTV9ST09UKSB7CgogICAgIHJlcXVpcmUoX3N0b3JhZ2VfYWRkcmVzcyAhPSBhZGRyZXNzKDApKTsKICAgICBidHNfYWRkcmVzczIgPSBfc3RvcmFnZV9hZGRyZXNzOwoKICAgICAvLyBJdCBpcyBiZWxpZXZlZCBhdCB0aGlzIHRpbWUgdGhhdCB0YW1wZXJpbmcgd2l0aCBkZXBsb3llZCBjb250cmFjdCdzIGJ5dGVjb2RlIGlzIG5vdAogICAgIC8vIHBvc3NpYmxlLiBUaGVyZWZvcmUgdGhlIGxpbmUgYmVsb3cgaXMgbm90IG5lY2Vzc2FyeQogICAgIC8vIGNvbnRyYWN0UGVybWlzc2lvbnNbZ2V0Q29kZUhhc2goYnRzX2FkZHJlc3MyKV0gPSB0cnVlOwoKICB9CgogIGZ1bmN0aW9uIHN3YXBTdG9yYWdlKCkgcHVibGljIGlmQXV0aG9yaXplZChtc2cuc2VuZGVyLCBJX0FNX1JPT1QpIHsKCiAgICAgYWRkcmVzcyB0ZW1wID0gYnRzX2FkZHJlc3MxOwogICAgIGJ0c19hZGRyZXNzMSA9IGJ0c19hZGRyZXNzMjsKICAgICBidHNfYWRkcmVzczIgPSB0ZW1wOwoKICB9CgoKCiAgZnVuY3Rpb24oKSBwdWJsaWMgcGF5YWJsZSB7CgogICAgICAvLyBJdCBpcyBiZWxpZXZlZCBhdCB0aGlzIHRpbWUgdGhhdCB0YW1wZXJpbmcgd2l0aCBkZXBsb3llZCBjb250cmFjdCdzIGJ5dGVjb2RlIGlzIG5vdAogICAgICAvLyBwb3NzaWJsZS4gVGhlcmVmb3JlIHRoZSB0d28gbGluZXMgYmVsb3cgYXJlICBub3QgbmVjZXNzYXJ5CiAgICAgIC8vIHJlcXVpcmUgKGNvbnRyYWN0UGVybWlzc2lvbnNbZ2V0Q29kZUhhc2godG9rZW5fYWRkcmVzcyldKTsKICAgICAgLy8gcmVxdWlyZSAoY29udHJhY3RQZXJtaXNzaW9uc1tnZXRDb2RlSGFzaChidHNfYWRkcmVzczEpXSk7CgogICAgICB2YXIgdGFyZ2V0ID0gdG9rZW5fYWRkcmVzczsKICAgICAgYXNzZW1ibHkgewogICAgICAgICAgbGV0IF9jYWxsZGF0YSA6PSBtbG9hZCgweDQwKQogICAgICAgICAgbXN0b3JlKDB4NDAsIGFkZChfY2FsbGRhdGEsIGNhbGxkYXRhc2l6ZSkpCiAgICAgICAgICBjYWxsZGF0YWNvcHkoX2NhbGxkYXRhLCAweDAsIGNhbGxkYXRhc2l6ZSkKICAgICAgICAgIHN3aXRjaCBkZWxlZ2F0ZWNhbGwoZ2FzLCB0YXJnZXQsIF9jYWxsZGF0YSwgY2FsbGRhdGFzaXplLCAwLCAwKQogICAgICAgICAgICBjYXNlIDAgeyByZXZlcnQoMCwgMCkgfQogICAgICAgICAgICBkZWZhdWx0IHsKICAgICAgICAgICAgICBsZXQgX3JldHVybmRhdGEgOj0gbWxvYWQoMHg0MCkKICAgICAgICAgICAgICByZXR1cm5kYXRhY29weShfcmV0dXJuZGF0YSwgMCwgcmV0dXJuZGF0YXNpemUpCiAgICAgICAgICAgICAgbXN0b3JlKDB4NDAsIGFkZChfcmV0dXJuZGF0YSwgcmV0dXJuZGF0YXNpemUpKQogICAgICAgICAgICAgIHJldHVybihfcmV0dXJuZGF0YSwgcmV0dXJuZGF0YXNpemUpCiAgICAgICAgICAgIH0KICAgICAgIH0KICAgfQoKfQ=='.
	

]
