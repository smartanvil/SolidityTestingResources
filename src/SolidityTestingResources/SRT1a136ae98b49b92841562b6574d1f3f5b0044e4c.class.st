Class {
	#name : #SRT1a136ae98b49b92841562b6574d1f3f5b0044e4c,
	#superclass : #SRTContracts,
	#category : #SolidityTestingResources
}

{ #category : #base64 }
SRT1a136ae98b49b92841562b6574d1f3f5b0044e4c >> base64 [
	^ ''.
	

]
